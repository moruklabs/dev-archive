<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Sat, 30 Aug 2025 01:42:31 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>ryanmcdermott/clean-code-javascript</title>
      <link>https://github.com/ryanmcdermott/clean-code-javascript</link>
      <description>&lt;p&gt;Clean Code concepts adapted for JavaScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;clean-code-javascript&lt;/h1&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#variables"&gt;Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#functions"&gt;Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#objects-and-data-structures"&gt;Objects and Data Structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#classes"&gt;Classes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#solid"&gt;SOLID&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#error-handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#formatting"&gt;Formatting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#comments"&gt;Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#translation"&gt;Translation&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://www.osnews.com/images/comics/wtfm.jpg" alt="Humorous image of software quality estimation as a count of how many expletives you shout when reading code" /&gt;&lt;/p&gt; 
&lt;p&gt;Software engineering principles, from Robert C. Martin's book &lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882"&gt;&lt;em&gt;Clean Code&lt;/em&gt;&lt;/a&gt;, adapted for JavaScript. This is not a style guide. It's a guide to producing &lt;a href="https://github.com/ryanmcdermott/3rs-of-software-architecture"&gt;readable, reusable, and refactorable&lt;/a&gt; software in JavaScript.&lt;/p&gt; 
&lt;p&gt;Not every principle herein has to be strictly followed, and even fewer will be universally agreed upon. These are guidelines and nothing more, but they are ones codified over many years of collective experience by the authors of &lt;em&gt;Clean Code&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;Our craft of software engineering is just a bit over 50 years old, and we are still learning a lot. When software architecture is as old as architecture itself, maybe then we will have harder rules to follow. For now, let these guidelines serve as a touchstone by which to assess the quality of the JavaScript code that you and your team produce.&lt;/p&gt; 
&lt;p&gt;One more thing: knowing these won't immediately make you a better software developer, and working with them for many years doesn't mean you won't make mistakes. Every piece of code starts as a first draft, like wet clay getting shaped into its final form. Finally, we chisel away the imperfections when we review it with our peers. Don't beat yourself up for first drafts that need improvement. Beat up the code instead!&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Variables&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use meaningful and pronounceable variable names&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const yyyymmdstr = moment().format("YYYY/MM/DD");
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const currentDate = moment().format("YYYY/MM/DD");
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use the same vocabulary for the same type of variable&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;getUserInfo();
getClientData();
getCustomerRecord();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;getUser();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use searchable names&lt;/h3&gt; 
&lt;p&gt;We will read more code than we will ever write. It's important that the code we do write is readable and searchable. By &lt;em&gt;not&lt;/em&gt; naming variables that end up being meaningful for understanding our program, we hurt our readers. Make your names searchable. Tools like &lt;a href="https://github.com/danielstjules/buddy.js"&gt;buddy.js&lt;/a&gt; and &lt;a href="https://github.com/eslint/eslint/raw/660e0918933e6e7fede26bc675a0763a6b357c94/docs/rules/no-magic-numbers.md"&gt;ESLint&lt;/a&gt; can help identify unnamed constants.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// What the heck is 86400000 for?
setTimeout(blastOff, 86400000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Declare them as capitalized named constants.
const MILLISECONDS_PER_DAY = 60 * 60 * 24 * 1000; //86400000;

setTimeout(blastOff, MILLISECONDS_PER_DAY);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use explanatory variables&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const address = "One Infinite Loop, Cupertino 95014";
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
saveCityZipCode(
  address.match(cityZipCodeRegex)[1],
  address.match(cityZipCodeRegex)[2]
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const address = "One Infinite Loop, Cupertino 95014";
const cityZipCodeRegex = /^[^,\\]+[,\\\s]+(.+?)\s*(\d{5})?$/;
const [_, city, zipCode] = address.match(cityZipCodeRegex) || [];
saveCityZipCode(city, zipCode);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Mental Mapping&lt;/h3&gt; 
&lt;p&gt;Explicit is better than implicit.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const locations = ["Austin", "New York", "San Francisco"];
locations.forEach(l =&amp;gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  // Wait, what is `l` for again?
  dispatch(l);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const locations = ["Austin", "New York", "San Francisco"];
locations.forEach(location =&amp;gt; {
  doStuff();
  doSomeOtherStuff();
  // ...
  // ...
  // ...
  dispatch(location);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don't add unneeded context&lt;/h3&gt; 
&lt;p&gt;If your class/object name tells you something, don't repeat that in your variable name.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const Car = {
  carMake: "Honda",
  carModel: "Accord",
  carColor: "Blue"
};

function paintCar(car, color) {
  car.carColor = color;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const Car = {
  make: "Honda",
  model: "Accord",
  color: "Blue"
};

function paintCar(car, color) {
  car.color = color;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use default parameters instead of short circuiting or conditionals&lt;/h3&gt; 
&lt;p&gt;Default parameters are often cleaner than short circuiting. Be aware that if you use them, your function will only provide default values for &lt;code&gt;undefined&lt;/code&gt; arguments. Other "falsy" values such as &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;""&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;NaN&lt;/code&gt;, will not be replaced by a default value.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function createMicrobrewery(name) {
  const breweryName = name || "Hipster Brew Co.";
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function createMicrobrewery(name = "Hipster Brew Co.") {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Functions&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Function arguments (2 or fewer ideally)&lt;/h3&gt; 
&lt;p&gt;Limiting the amount of function parameters is incredibly important because it makes testing your function easier. Having more than three leads to a combinatorial explosion where you have to test tons of different cases with each separate argument.&lt;/p&gt; 
&lt;p&gt;One or two arguments is the ideal case, and three should be avoided if possible. Anything more than that should be consolidated. Usually, if you have more than two arguments then your function is trying to do too much. In cases where it's not, most of the time a higher-level object will suffice as an argument.&lt;/p&gt; 
&lt;p&gt;Since JavaScript allows you to make objects on the fly, without a lot of class boilerplate, you can use an object if you are finding yourself needing a lot of arguments.&lt;/p&gt; 
&lt;p&gt;To make it obvious what properties the function expects, you can use the ES2015/ES6 destructuring syntax. This has a few advantages:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;When someone looks at the function signature, it's immediately clear what properties are being used.&lt;/li&gt; 
 &lt;li&gt;It can be used to simulate named parameters.&lt;/li&gt; 
 &lt;li&gt;Destructuring also clones the specified primitive values of the argument object passed into the function. This can help prevent side effects. Note: objects and arrays that are destructured from the argument object are NOT cloned.&lt;/li&gt; 
 &lt;li&gt;Linters can warn you about unused properties, which would be impossible without destructuring.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function createMenu(title, body, buttonText, cancellable) {
  // ...
}

createMenu("Foo", "Bar", "Baz", true);

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function createMenu({ title, body, buttonText, cancellable }) {
  // ...
}

createMenu({
  title: "Foo",
  body: "Bar",
  buttonText: "Baz",
  cancellable: true
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Functions should do one thing&lt;/h3&gt; 
&lt;p&gt;This is by far the most important rule in software engineering. When functions do more than one thing, they are harder to compose, test, and reason about. When you can isolate a function to just one action, it can be refactored easily and your code will read much cleaner. If you take nothing else away from this guide other than this, you'll be ahead of many developers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function emailClients(clients) {
  clients.forEach(client =&amp;gt; {
    const clientRecord = database.lookup(client);
    if (clientRecord.isActive()) {
      email(client);
    }
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function emailActiveClients(clients) {
  clients.filter(isActiveClient).forEach(email);
}

function isActiveClient(client) {
  const clientRecord = database.lookup(client);
  return clientRecord.isActive();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Function names should say what they do&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function addToDate(date, month) {
  // ...
}

const date = new Date();

// It's hard to tell from the function name what is added
addToDate(date, 1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function addMonthToDate(month, date) {
  // ...
}

const date = new Date();
addMonthToDate(1, date);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Functions should only be one level of abstraction&lt;/h3&gt; 
&lt;p&gt;When you have more than one level of abstraction your function is usually doing too much. Splitting up functions leads to reusability and easier testing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function parseBetterJSAlternative(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(" ");
  const tokens = [];
  REGEXES.forEach(REGEX =&amp;gt; {
    statements.forEach(statement =&amp;gt; {
      // ...
    });
  });

  const ast = [];
  tokens.forEach(token =&amp;gt; {
    // lex...
  });

  ast.forEach(node =&amp;gt; {
    // parse...
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function parseBetterJSAlternative(code) {
  const tokens = tokenize(code);
  const syntaxTree = parse(tokens);
  syntaxTree.forEach(node =&amp;gt; {
    // parse...
  });
}

function tokenize(code) {
  const REGEXES = [
    // ...
  ];

  const statements = code.split(" ");
  const tokens = [];
  REGEXES.forEach(REGEX =&amp;gt; {
    statements.forEach(statement =&amp;gt; {
      tokens.push(/* ... */);
    });
  });

  return tokens;
}

function parse(tokens) {
  const syntaxTree = [];
  tokens.forEach(token =&amp;gt; {
    syntaxTree.push(/* ... */);
  });

  return syntaxTree;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Remove duplicate code&lt;/h3&gt; 
&lt;p&gt;Do your absolute best to avoid duplicate code. Duplicate code is bad because it means that there's more than one place to alter something if you need to change some logic.&lt;/p&gt; 
&lt;p&gt;Imagine if you run a restaurant and you keep track of your inventory: all your tomatoes, onions, garlic, spices, etc. If you have multiple lists that you keep this on, then all have to be updated when you serve a dish with tomatoes in them. If you only have one list, there's only one place to update!&lt;/p&gt; 
&lt;p&gt;Oftentimes you have duplicate code because you have two or more slightly different things, that share a lot in common, but their differences force you to have two or more separate functions that do much of the same things. Removing duplicate code means creating an abstraction that can handle this set of different things with just one function/module/class.&lt;/p&gt; 
&lt;p&gt;Getting the abstraction right is critical, that's why you should follow the SOLID principles laid out in the &lt;em&gt;Classes&lt;/em&gt; section. Bad abstractions can be worse than duplicate code, so be careful! Having said this, if you can make a good abstraction, do it! Don't repeat yourself, otherwise you'll find yourself updating multiple places anytime you want to change one thing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function showDeveloperList(developers) {
  developers.forEach(developer =&amp;gt; {
    const expectedSalary = developer.calculateExpectedSalary();
    const experience = developer.getExperience();
    const githubLink = developer.getGithubLink();
    const data = {
      expectedSalary,
      experience,
      githubLink
    };

    render(data);
  });
}

function showManagerList(managers) {
  managers.forEach(manager =&amp;gt; {
    const expectedSalary = manager.calculateExpectedSalary();
    const experience = manager.getExperience();
    const portfolio = manager.getMBAProjects();
    const data = {
      expectedSalary,
      experience,
      portfolio
    };

    render(data);
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function showEmployeeList(employees) {
  employees.forEach(employee =&amp;gt; {
    const expectedSalary = employee.calculateExpectedSalary();
    const experience = employee.getExperience();

    const data = {
      expectedSalary,
      experience
    };

    switch (employee.type) {
      case "manager":
        data.portfolio = employee.getMBAProjects();
        break;
      case "developer":
        data.githubLink = employee.getGithubLink();
        break;
    }

    render(data);
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Set default objects with Object.assign&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const menuConfig = {
  title: null,
  body: "Bar",
  buttonText: null,
  cancellable: true
};

function createMenu(config) {
  config.title = config.title || "Foo";
  config.body = config.body || "Bar";
  config.buttonText = config.buttonText || "Baz";
  config.cancellable =
    config.cancellable !== undefined ? config.cancellable : true;
}

createMenu(menuConfig);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const menuConfig = {
  title: "Order",
  // User did not include 'body' key
  buttonText: "Send",
  cancellable: true
};

function createMenu(config) {
  let finalConfig = Object.assign(
    {
      title: "Foo",
      body: "Bar",
      buttonText: "Baz",
      cancellable: true
    },
    config
  );
  return finalConfig
  // config now equals: {title: "Order", body: "Bar", buttonText: "Send", cancellable: true}
  // ...
}

createMenu(menuConfig);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don't use flags as function parameters&lt;/h3&gt; 
&lt;p&gt;Flags tell your user that this function does more than one thing. Functions should do one thing. Split out your functions if they are following different code paths based on a boolean.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function createFile(name, temp) {
  if (temp) {
    fs.create(`./temp/${name}`);
  } else {
    fs.create(name);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function createFile(name) {
  fs.create(name);
}

function createTempFile(name) {
  createFile(`./temp/${name}`);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Side Effects (part 1)&lt;/h3&gt; 
&lt;p&gt;A function produces a side effect if it does anything other than take a value in and return another value or values. A side effect could be writing to a file, modifying some global variable, or accidentally wiring all your money to a stranger.&lt;/p&gt; 
&lt;p&gt;Now, you do need to have side effects in a program on occasion. Like the previous example, you might need to write to a file. What you want to do is to centralize where you are doing this. Don't have several functions and classes that write to a particular file. Have one service that does it. One and only one.&lt;/p&gt; 
&lt;p&gt;The main point is to avoid common pitfalls like sharing state between objects without any structure, using mutable data types that can be written to by anything, and not centralizing where your side effects occur. If you can do this, you will be happier than the vast majority of other programmers.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Global variable referenced by following function.
// If we had another function that used this name, now it'd be an array and it could break it.
let name = "Ryan McDermott";

function splitIntoFirstAndLastName() {
  name = name.split(" ");
}

splitIntoFirstAndLastName();

console.log(name); // ['Ryan', 'McDermott'];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function splitIntoFirstAndLastName(name) {
  return name.split(" ");
}

const name = "Ryan McDermott";
const newName = splitIntoFirstAndLastName(name);

console.log(name); // 'Ryan McDermott';
console.log(newName); // ['Ryan', 'McDermott'];
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid Side Effects (part 2)&lt;/h3&gt; 
&lt;p&gt;In JavaScript, some values are unchangeable (immutable) and some are changeable (mutable). Objects and arrays are two kinds of mutable values so it's important to handle them carefully when they're passed as parameters to a function. A JavaScript function can change an object's properties or alter the contents of an array which could easily cause bugs elsewhere.&lt;/p&gt; 
&lt;p&gt;Suppose there's a function that accepts an array parameter representing a shopping cart. If the function makes a change in that shopping cart array - by adding an item to purchase, for example - then any other function that uses that same &lt;code&gt;cart&lt;/code&gt; array will be affected by this addition. That may be great, however it could also be bad. Let's imagine a bad situation:&lt;/p&gt; 
&lt;p&gt;The user clicks the "Purchase" button which calls a &lt;code&gt;purchase&lt;/code&gt; function that spawns a network request and sends the &lt;code&gt;cart&lt;/code&gt; array to the server. Because of a bad network connection, the &lt;code&gt;purchase&lt;/code&gt; function has to keep retrying the request. Now, what if in the meantime the user accidentally clicks an "Add to Cart" button on an item they don't actually want before the network request begins? If that happens and the network request begins, then that purchase function will send the accidentally added item because the &lt;code&gt;cart&lt;/code&gt; array was modified.&lt;/p&gt; 
&lt;p&gt;A great solution would be for the &lt;code&gt;addItemToCart&lt;/code&gt; function to always clone the &lt;code&gt;cart&lt;/code&gt;, edit it, and return the clone. This would ensure that functions that are still using the old shopping cart wouldn't be affected by the changes.&lt;/p&gt; 
&lt;p&gt;Two caveats to mention to this approach:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;There might be cases where you actually want to modify the input object, but when you adopt this programming practice you will find that those cases are pretty rare. Most things can be refactored to have no side effects!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Cloning big objects can be very expensive in terms of performance. Luckily, this isn't a big issue in practice because there are &lt;a href="https://facebook.github.io/immutable-js/"&gt;great libraries&lt;/a&gt; that allow this kind of programming approach to be fast and not as memory intensive as it would be for you to manually clone objects and arrays.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const addItemToCart = (cart, item) =&amp;gt; {
  cart.push({ item, date: Date.now() });
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const addItemToCart = (cart, item) =&amp;gt; {
  return [...cart, { item, date: Date.now() }];
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don't write to global functions&lt;/h3&gt; 
&lt;p&gt;Polluting globals is a bad practice in JavaScript because you could clash with another library and the user of your API would be none-the-wiser until they get an exception in production. Let's think about an example: what if you wanted to extend JavaScript's native Array method to have a &lt;code&gt;diff&lt;/code&gt; method that could show the difference between two arrays? You could write your new function to the &lt;code&gt;Array.prototype&lt;/code&gt;, but it could clash with another library that tried to do the same thing. What if that other library was just using &lt;code&gt;diff&lt;/code&gt; to find the difference between the first and last elements of an array? This is why it would be much better to just use ES2015/ES6 classes and simply extend the &lt;code&gt;Array&lt;/code&gt; global.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;Array.prototype.diff = function diff(comparisonArray) {
  const hash = new Set(comparisonArray);
  return this.filter(elem =&amp;gt; !hash.has(elem));
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class SuperArray extends Array {
  diff(comparisonArray) {
    const hash = new Set(comparisonArray);
    return this.filter(elem =&amp;gt; !hash.has(elem));
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Favor functional programming over imperative programming&lt;/h3&gt; 
&lt;p&gt;JavaScript isn't a functional language in the way that Haskell is, but it has a functional flavor to it. Functional languages can be cleaner and easier to test. Favor this style of programming when you can.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const programmerOutput = [
  {
    name: "Uncle Bobby",
    linesOfCode: 500
  },
  {
    name: "Suzie Q",
    linesOfCode: 1500
  },
  {
    name: "Jimmy Gosling",
    linesOfCode: 150
  },
  {
    name: "Gracie Hopper",
    linesOfCode: 1000
  }
];

let totalOutput = 0;

for (let i = 0; i &amp;lt; programmerOutput.length; i++) {
  totalOutput += programmerOutput[i].linesOfCode;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const programmerOutput = [
  {
    name: "Uncle Bobby",
    linesOfCode: 500
  },
  {
    name: "Suzie Q",
    linesOfCode: 1500
  },
  {
    name: "Jimmy Gosling",
    linesOfCode: 150
  },
  {
    name: "Gracie Hopper",
    linesOfCode: 1000
  }
];

const totalOutput = programmerOutput.reduce(
  (totalLines, output) =&amp;gt; totalLines + output.linesOfCode,
  0
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Encapsulate conditionals&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;if (fsm.state === "fetching" &amp;amp;&amp;amp; isEmpty(listNode)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function shouldShowSpinner(fsm, listNode) {
  return fsm.state === "fetching" &amp;amp;&amp;amp; isEmpty(listNode);
}

if (shouldShowSpinner(fsmInstance, listNodeInstance)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid negative conditionals&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function isDOMNodeNotPresent(node) {
  // ...
}

if (!isDOMNodeNotPresent(node)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function isDOMNodePresent(node) {
  // ...
}

if (isDOMNodePresent(node)) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid conditionals&lt;/h3&gt; 
&lt;p&gt;This seems like an impossible task. Upon first hearing this, most people say, "how am I supposed to do anything without an &lt;code&gt;if&lt;/code&gt; statement?" The answer is that you can use polymorphism to achieve the same task in many cases. The second question is usually, "well that's great but why would I want to do that?" The answer is a previous clean code concept we learned: a function should only do one thing. When you have classes and functions that have &lt;code&gt;if&lt;/code&gt; statements, you are telling your user that your function does more than one thing. Remember, just do one thing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Airplane {
  // ...
  getCruisingAltitude() {
    switch (this.type) {
      case "777":
        return this.getMaxAltitude() - this.getPassengerCount();
      case "Air Force One":
        return this.getMaxAltitude();
      case "Cessna":
        return this.getMaxAltitude() - this.getFuelExpenditure();
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Airplane {
  // ...
}

class Boeing777 extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude() - this.getPassengerCount();
  }
}

class AirForceOne extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude();
  }
}

class Cessna extends Airplane {
  // ...
  getCruisingAltitude() {
    return this.getMaxAltitude() - this.getFuelExpenditure();
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid type-checking (part 1)&lt;/h3&gt; 
&lt;p&gt;JavaScript is untyped, which means your functions can take any type of argument. Sometimes you are bitten by this freedom and it becomes tempting to do type-checking in your functions. There are many ways to avoid having to do this. The first thing to consider is consistent APIs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function travelToTexas(vehicle) {
  if (vehicle instanceof Bicycle) {
    vehicle.pedal(this.currentLocation, new Location("texas"));
  } else if (vehicle instanceof Car) {
    vehicle.drive(this.currentLocation, new Location("texas"));
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function travelToTexas(vehicle) {
  vehicle.move(this.currentLocation, new Location("texas"));
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid type-checking (part 2)&lt;/h3&gt; 
&lt;p&gt;If you are working with basic primitive values like strings and integers, and you can't use polymorphism but you still feel the need to type-check, you should consider using TypeScript. It is an excellent alternative to normal JavaScript, as it provides you with static typing on top of standard JavaScript syntax. The problem with manually type-checking normal JavaScript is that doing it well requires so much extra verbiage that the faux "type-safety" you get doesn't make up for the lost readability. Keep your JavaScript clean, write good tests, and have good code reviews. Otherwise, do all of that but with TypeScript (which, like I said, is a great alternative!).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function combine(val1, val2) {
  if (
    (typeof val1 === "number" &amp;amp;&amp;amp; typeof val2 === "number") ||
    (typeof val1 === "string" &amp;amp;&amp;amp; typeof val2 === "string")
  ) {
    return val1 + val2;
  }

  throw new Error("Must be of type String or Number");
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function combine(val1, val2) {
  return val1 + val2;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don't over-optimize&lt;/h3&gt; 
&lt;p&gt;Modern browsers do a lot of optimization under-the-hood at runtime. A lot of times, if you are optimizing then you are just wasting your time. &lt;a href="https://github.com/petkaantonov/bluebird/wiki/Optimization-killers"&gt;There are good resources&lt;/a&gt; for seeing where optimization is lacking. Target those in the meantime, until they are fixed if they can be.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// On old browsers, each iteration with uncached `list.length` would be costly
// because of `list.length` recomputation. In modern browsers, this is optimized.
for (let i = 0, len = list.length; i &amp;lt; len; i++) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;for (let i = 0; i &amp;lt; list.length; i++) {
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Remove dead code&lt;/h3&gt; 
&lt;p&gt;Dead code is just as bad as duplicate code. There's no reason to keep it in your codebase. If it's not being called, get rid of it! It will still be safe in your version history if you still need it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function oldRequestModule(url) {
  // ...
}

function newRequestModule(url) {
  // ...
}

const req = newRequestModule;
inventoryTracker("apples", req, "www.inventory-awesome.io");
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function newRequestModule(url) {
  // ...
}

const req = newRequestModule;
inventoryTracker("apples", req, "www.inventory-awesome.io");
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Objects and Data Structures&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use getters and setters&lt;/h3&gt; 
&lt;p&gt;Using getters and setters to access data on objects could be better than simply looking for a property on an object. "Why?" you might ask. Well, here's an unorganized list of reasons why:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;When you want to do more beyond getting an object property, you don't have to look up and change every accessor in your codebase.&lt;/li&gt; 
 &lt;li&gt;Makes adding validation simple when doing a &lt;code&gt;set&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Encapsulates the internal representation.&lt;/li&gt; 
 &lt;li&gt;Easy to add logging and error handling when getting and setting.&lt;/li&gt; 
 &lt;li&gt;You can lazy load your object's properties, let's say getting it from a server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function makeBankAccount() {
  // ...

  return {
    balance: 0
    // ...
  };
}

const account = makeBankAccount();
account.balance = 100;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function makeBankAccount() {
  // this one is private
  let balance = 0;

  // a "getter", made public via the returned object below
  function getBalance() {
    return balance;
  }

  // a "setter", made public via the returned object below
  function setBalance(amount) {
    // ... validate before updating the balance
    balance = amount;
  }

  return {
    // ...
    getBalance,
    setBalance
  };
}

const account = makeBankAccount();
account.setBalance(100);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Make objects have private members&lt;/h3&gt; 
&lt;p&gt;This can be accomplished through closures (for ES5 and below).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const Employee = function(name) {
  this.name = name;
};

Employee.prototype.getName = function getName() {
  return this.name;
};

const employee = new Employee("John Doe");
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
delete employee.name;
console.log(`Employee name: ${employee.getName()}`); // Employee name: undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function makeEmployee(name) {
  return {
    getName() {
      return name;
    }
  };
}

const employee = makeEmployee("John Doe");
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
delete employee.name;
console.log(`Employee name: ${employee.getName()}`); // Employee name: John Doe
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Classes&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Prefer ES2015/ES6 classes over ES5 plain functions&lt;/h3&gt; 
&lt;p&gt;It's very difficult to get readable class inheritance, construction, and method definitions for classical ES5 classes. If you need inheritance (and be aware that you might not), then prefer ES2015/ES6 classes. However, prefer small functions over classes until you find yourself needing larger and more complex objects.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const Animal = function(age) {
  if (!(this instanceof Animal)) {
    throw new Error("Instantiate Animal with `new`");
  }

  this.age = age;
};

Animal.prototype.move = function move() {};

const Mammal = function(age, furColor) {
  if (!(this instanceof Mammal)) {
    throw new Error("Instantiate Mammal with `new`");
  }

  Animal.call(this, age);
  this.furColor = furColor;
};

Mammal.prototype = Object.create(Animal.prototype);
Mammal.prototype.constructor = Mammal;
Mammal.prototype.liveBirth = function liveBirth() {};

const Human = function(age, furColor, languageSpoken) {
  if (!(this instanceof Human)) {
    throw new Error("Instantiate Human with `new`");
  }

  Mammal.call(this, age, furColor);
  this.languageSpoken = languageSpoken;
};

Human.prototype = Object.create(Mammal.prototype);
Human.prototype.constructor = Human;
Human.prototype.speak = function speak() {};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Animal {
  constructor(age) {
    this.age = age;
  }

  move() {
    /* ... */
  }
}

class Mammal extends Animal {
  constructor(age, furColor) {
    super(age);
    this.furColor = furColor;
  }

  liveBirth() {
    /* ... */
  }
}

class Human extends Mammal {
  constructor(age, furColor, languageSpoken) {
    super(age, furColor);
    this.languageSpoken = languageSpoken;
  }

  speak() {
    /* ... */
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Use method chaining&lt;/h3&gt; 
&lt;p&gt;This pattern is very useful in JavaScript and you see it in many libraries such as jQuery and Lodash. It allows your code to be expressive, and less verbose. For that reason, I say, use method chaining and take a look at how clean your code will be. In your class functions, simply return &lt;code&gt;this&lt;/code&gt; at the end of every function, and you can chain further class methods onto it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Car {
  constructor(make, model, color) {
    this.make = make;
    this.model = model;
    this.color = color;
  }

  setMake(make) {
    this.make = make;
  }

  setModel(model) {
    this.model = model;
  }

  setColor(color) {
    this.color = color;
  }

  save() {
    console.log(this.make, this.model, this.color);
  }
}

const car = new Car("Ford", "F-150", "red");
car.setColor("pink");
car.save();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Car {
  constructor(make, model, color) {
    this.make = make;
    this.model = model;
    this.color = color;
  }

  setMake(make) {
    this.make = make;
    // NOTE: Returning this for chaining
    return this;
  }

  setModel(model) {
    this.model = model;
    // NOTE: Returning this for chaining
    return this;
  }

  setColor(color) {
    this.color = color;
    // NOTE: Returning this for chaining
    return this;
  }

  save() {
    console.log(this.make, this.model, this.color);
    // NOTE: Returning this for chaining
    return this;
  }
}

const car = new Car("Ford", "F-150", "red").setColor("pink").save();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Prefer composition over inheritance&lt;/h3&gt; 
&lt;p&gt;As stated famously in &lt;a href="https://en.wikipedia.org/wiki/Design_Patterns"&gt;&lt;em&gt;Design Patterns&lt;/em&gt;&lt;/a&gt; by the Gang of Four, you should prefer composition over inheritance where you can. There are lots of good reasons to use inheritance and lots of good reasons to use composition. The main point for this maxim is that if your mind instinctively goes for inheritance, try to think if composition could model your problem better. In some cases it can.&lt;/p&gt; 
&lt;p&gt;You might be wondering then, "when should I use inheritance?" It depends on your problem at hand, but this is a decent list of when inheritance makes more sense than composition:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Your inheritance represents an "is-a" relationship and not a "has-a" relationship (Human-&amp;gt;Animal vs. User-&amp;gt;UserDetails).&lt;/li&gt; 
 &lt;li&gt;You can reuse code from the base classes (Humans can move like all animals).&lt;/li&gt; 
 &lt;li&gt;You want to make global changes to derived classes by changing a base class. (Change the caloric expenditure of all animals when they move).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Employee {
  constructor(name, email) {
    this.name = name;
    this.email = email;
  }

  // ...
}

// Bad because Employees "have" tax data. EmployeeTaxData is not a type of Employee
class EmployeeTaxData extends Employee {
  constructor(ssn, salary) {
    super();
    this.ssn = ssn;
    this.salary = salary;
  }

  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class EmployeeTaxData {
  constructor(ssn, salary) {
    this.ssn = ssn;
    this.salary = salary;
  }

  // ...
}

class Employee {
  constructor(name, email) {
    this.name = name;
    this.email = email;
  }

  setTaxData(ssn, salary) {
    this.taxData = new EmployeeTaxData(ssn, salary);
  }
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;SOLID&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Single Responsibility Principle (SRP)&lt;/h3&gt; 
&lt;p&gt;As stated in Clean Code, "There should never be more than one reason for a class to change". It's tempting to jam-pack a class with a lot of functionality, like when you can only take one suitcase on your flight. The issue with this is that your class won't be conceptually cohesive and it will give it many reasons to change. Minimizing the amount of times you need to change a class is important. It's important because if too much functionality is in one class and you modify a piece of it, it can be difficult to understand how that will affect other dependent modules in your codebase.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class UserSettings {
  constructor(user) {
    this.user = user;
  }

  changeSettings(settings) {
    if (this.verifyCredentials()) {
      // ...
    }
  }

  verifyCredentials() {
    // ...
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class UserAuth {
  constructor(user) {
    this.user = user;
  }

  verifyCredentials() {
    // ...
  }
}

class UserSettings {
  constructor(user) {
    this.user = user;
    this.auth = new UserAuth(user);
  }

  changeSettings(settings) {
    if (this.auth.verifyCredentials()) {
      // ...
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Open/Closed Principle (OCP)&lt;/h3&gt; 
&lt;p&gt;As stated by Bertrand Meyer, "software entities (classes, modules, functions, etc.) should be open for extension, but closed for modification." What does that mean though? This principle basically states that you should allow users to add new functionalities without changing existing code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class AjaxAdapter extends Adapter {
  constructor() {
    super();
    this.name = "ajaxAdapter";
  }
}

class NodeAdapter extends Adapter {
  constructor() {
    super();
    this.name = "nodeAdapter";
  }
}

class HttpRequester {
  constructor(adapter) {
    this.adapter = adapter;
  }

  fetch(url) {
    if (this.adapter.name === "ajaxAdapter") {
      return makeAjaxCall(url).then(response =&amp;gt; {
        // transform response and return
      });
    } else if (this.adapter.name === "nodeAdapter") {
      return makeHttpCall(url).then(response =&amp;gt; {
        // transform response and return
      });
    }
  }
}

function makeAjaxCall(url) {
  // request and return promise
}

function makeHttpCall(url) {
  // request and return promise
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class AjaxAdapter extends Adapter {
  constructor() {
    super();
    this.name = "ajaxAdapter";
  }

  request(url) {
    // request and return promise
  }
}

class NodeAdapter extends Adapter {
  constructor() {
    super();
    this.name = "nodeAdapter";
  }

  request(url) {
    // request and return promise
  }
}

class HttpRequester {
  constructor(adapter) {
    this.adapter = adapter;
  }

  fetch(url) {
    return this.adapter.request(url).then(response =&amp;gt; {
      // transform response and return
    });
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Liskov Substitution Principle (LSP)&lt;/h3&gt; 
&lt;p&gt;This is a scary term for a very simple concept. It's formally defined as "If S is a subtype of T, then objects of type T may be replaced with objects of type S (i.e., objects of type S may substitute objects of type T) without altering any of the desirable properties of that program (correctness, task performed, etc.)." That's an even scarier definition.&lt;/p&gt; 
&lt;p&gt;The best explanation for this is if you have a parent class and a child class, then the base class and child class can be used interchangeably without getting incorrect results. This might still be confusing, so let's take a look at the classic Square-Rectangle example. Mathematically, a square is a rectangle, but if you model it using the "is-a" relationship via inheritance, you quickly get into trouble.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Rectangle {
  constructor() {
    this.width = 0;
    this.height = 0;
  }

  setColor(color) {
    // ...
  }

  render(area) {
    // ...
  }

  setWidth(width) {
    this.width = width;
  }

  setHeight(height) {
    this.height = height;
  }

  getArea() {
    return this.width * this.height;
  }
}

class Square extends Rectangle {
  setWidth(width) {
    this.width = width;
    this.height = width;
  }

  setHeight(height) {
    this.width = height;
    this.height = height;
  }
}

function renderLargeRectangles(rectangles) {
  rectangles.forEach(rectangle =&amp;gt; {
    rectangle.setWidth(4);
    rectangle.setHeight(5);
    const area = rectangle.getArea(); // BAD: Returns 25 for Square. Should be 20.
    rectangle.render(area);
  });
}

const rectangles = [new Rectangle(), new Rectangle(), new Square()];
renderLargeRectangles(rectangles);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class Shape {
  setColor(color) {
    // ...
  }

  render(area) {
    // ...
  }
}

class Rectangle extends Shape {
  constructor(width, height) {
    super();
    this.width = width;
    this.height = height;
  }

  getArea() {
    return this.width * this.height;
  }
}

class Square extends Shape {
  constructor(length) {
    super();
    this.length = length;
  }

  getArea() {
    return this.length * this.length;
  }
}

function renderLargeShapes(shapes) {
  shapes.forEach(shape =&amp;gt; {
    const area = shape.getArea();
    shape.render(area);
  });
}

const shapes = [new Rectangle(4, 5), new Rectangle(4, 5), new Square(5)];
renderLargeShapes(shapes);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Interface Segregation Principle (ISP)&lt;/h3&gt; 
&lt;p&gt;JavaScript doesn't have interfaces so this principle doesn't apply as strictly as others. However, it's important and relevant even with JavaScript's lack of type system.&lt;/p&gt; 
&lt;p&gt;ISP states that "Clients should not be forced to depend upon interfaces that they do not use." Interfaces are implicit contracts in JavaScript because of duck typing.&lt;/p&gt; 
&lt;p&gt;A good example to look at that demonstrates this principle in JavaScript is for classes that require large settings objects. Not requiring clients to setup huge amounts of options is beneficial, because most of the time they won't need all of the settings. Making them optional helps prevent having a "fat interface".&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class DOMTraverser {
  constructor(settings) {
    this.settings = settings;
    this.setup();
  }

  setup() {
    this.rootNode = this.settings.rootNode;
    this.settings.animationModule.setup();
  }

  traverse() {
    // ...
  }
}

const $ = new DOMTraverser({
  rootNode: document.getElementsByTagName("body"),
  animationModule() {} // Most of the time, we won't need to animate when traversing.
  // ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class DOMTraverser {
  constructor(settings) {
    this.settings = settings;
    this.options = settings.options;
    this.setup();
  }

  setup() {
    this.rootNode = this.settings.rootNode;
    this.setupOptions();
  }

  setupOptions() {
    if (this.options.animationModule) {
      // ...
    }
  }

  traverse() {
    // ...
  }
}

const $ = new DOMTraverser({
  rootNode: document.getElementsByTagName("body"),
  options: {
    animationModule() {}
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Dependency Inversion Principle (DIP)&lt;/h3&gt; 
&lt;p&gt;This principle states two essential things:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;High-level modules should not depend on low-level modules. Both should depend on abstractions.&lt;/li&gt; 
 &lt;li&gt;Abstractions should not depend upon details. Details should depend on abstractions.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This can be hard to understand at first, but if you've worked with AngularJS, you've seen an implementation of this principle in the form of Dependency Injection (DI). While they are not identical concepts, DIP keeps high-level modules from knowing the details of its low-level modules and setting them up. It can accomplish this through DI. A huge benefit of this is that it reduces the coupling between modules. Coupling is a very bad development pattern because it makes your code hard to refactor.&lt;/p&gt; 
&lt;p&gt;As stated previously, JavaScript doesn't have interfaces so the abstractions that are depended upon are implicit contracts. That is to say, the methods and properties that an object/class exposes to another object/class. In the example below, the implicit contract is that any Request module for an &lt;code&gt;InventoryTracker&lt;/code&gt; will have a &lt;code&gt;requestItems&lt;/code&gt; method.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class InventoryRequester {
  constructor() {
    this.REQ_METHODS = ["HTTP"];
  }

  requestItem(item) {
    // ...
  }
}

class InventoryTracker {
  constructor(items) {
    this.items = items;

    // BAD: We have created a dependency on a specific request implementation.
    // We should just have requestItems depend on a request method: `request`
    this.requester = new InventoryRequester();
  }

  requestItems() {
    this.items.forEach(item =&amp;gt; {
      this.requester.requestItem(item);
    });
  }
}

const inventoryTracker = new InventoryTracker(["apples", "bananas"]);
inventoryTracker.requestItems();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class InventoryTracker {
  constructor(items, requester) {
    this.items = items;
    this.requester = requester;
  }

  requestItems() {
    this.items.forEach(item =&amp;gt; {
      this.requester.requestItem(item);
    });
  }
}

class InventoryRequesterV1 {
  constructor() {
    this.REQ_METHODS = ["HTTP"];
  }

  requestItem(item) {
    // ...
  }
}

class InventoryRequesterV2 {
  constructor() {
    this.REQ_METHODS = ["WS"];
  }

  requestItem(item) {
    // ...
  }
}

// By constructing our dependencies externally and injecting them, we can easily
// substitute our request module for a fancy new one that uses WebSockets.
const inventoryTracker = new InventoryTracker(
  ["apples", "bananas"],
  new InventoryRequesterV2()
);
inventoryTracker.requestItems();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Testing&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Testing is more important than shipping. If you have no tests or an inadequate amount, then every time you ship code you won't be sure that you didn't break anything. Deciding on what constitutes an adequate amount is up to your team, but having 100% coverage (all statements and branches) is how you achieve very high confidence and developer peace of mind. This means that in addition to having a great testing framework, you also need to use a &lt;a href="https://gotwarlost.github.io/istanbul/"&gt;good coverage tool&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There's no excuse to not write tests. There are &lt;a href="https://jstherightway.org/#testing-tools"&gt;plenty of good JS test frameworks&lt;/a&gt;, so find one that your team prefers. When you find one that works for your team, then aim to always write tests for every new feature/module you introduce. If your preferred method is Test Driven Development (TDD), that is great, but the main point is to just make sure you are reaching your coverage goals before launching any feature, or refactoring an existing one.&lt;/p&gt; 
&lt;h3&gt;Single concept per test&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import assert from "assert";

describe("MomentJS", () =&amp;gt; {
  it("handles date boundaries", () =&amp;gt; {
    let date;

    date = new MomentJS("1/1/2015");
    date.addDays(30);
    assert.equal("1/31/2015", date);

    date = new MomentJS("2/1/2016");
    date.addDays(28);
    assert.equal("02/29/2016", date);

    date = new MomentJS("2/1/2015");
    date.addDays(28);
    assert.equal("03/01/2015", date);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import assert from "assert";

describe("MomentJS", () =&amp;gt; {
  it("handles 30-day months", () =&amp;gt; {
    const date = new MomentJS("1/1/2015");
    date.addDays(30);
    assert.equal("1/31/2015", date);
  });

  it("handles leap year", () =&amp;gt; {
    const date = new MomentJS("2/1/2016");
    date.addDays(28);
    assert.equal("02/29/2016", date);
  });

  it("handles non-leap year", () =&amp;gt; {
    const date = new MomentJS("2/1/2015");
    date.addDays(28);
    assert.equal("03/01/2015", date);
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Concurrency&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Use Promises, not callbacks&lt;/h3&gt; 
&lt;p&gt;Callbacks aren't clean, and they cause excessive amounts of nesting. With ES2015/ES6, Promises are a built-in global type. Use them!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import { get } from "request";
import { writeFile } from "fs";

get(
  "https://en.wikipedia.org/wiki/Robert_Cecil_Martin",
  (requestErr, response, body) =&amp;gt; {
    if (requestErr) {
      console.error(requestErr);
    } else {
      writeFile("article.html", body, writeErr =&amp;gt; {
        if (writeErr) {
          console.error(writeErr);
        } else {
          console.log("File written");
        }
      });
    }
  }
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import { get } from "request-promise";
import { writeFile } from "fs-extra";

get("https://en.wikipedia.org/wiki/Robert_Cecil_Martin")
  .then(body =&amp;gt; {
    return writeFile("article.html", body);
  })
  .then(() =&amp;gt; {
    console.log("File written");
  })
  .catch(err =&amp;gt; {
    console.error(err);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Async/Await are even cleaner than Promises&lt;/h3&gt; 
&lt;p&gt;Promises are a very clean alternative to callbacks, but ES2017/ES8 brings async and await which offer an even cleaner solution. All you need is a function that is prefixed in an &lt;code&gt;async&lt;/code&gt; keyword, and then you can write your logic imperatively without a &lt;code&gt;then&lt;/code&gt; chain of functions. Use this if you can take advantage of ES2017/ES8 features today!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import { get } from "request-promise";
import { writeFile } from "fs-extra";

get("https://en.wikipedia.org/wiki/Robert_Cecil_Martin")
  .then(body =&amp;gt; {
    return writeFile("article.html", body);
  })
  .then(() =&amp;gt; {
    console.log("File written");
  })
  .catch(err =&amp;gt; {
    console.error(err);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import { get } from "request-promise";
import { writeFile } from "fs-extra";

async function getCleanCodeArticle() {
  try {
    const body = await get(
      "https://en.wikipedia.org/wiki/Robert_Cecil_Martin"
    );
    await writeFile("article.html", body);
    console.log("File written");
  } catch (err) {
    console.error(err);
  }
}

getCleanCodeArticle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Error Handling&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Thrown errors are a good thing! They mean the runtime has successfully identified when something in your program has gone wrong and it's letting you know by stopping function execution on the current stack, killing the process (in Node), and notifying you in the console with a stack trace.&lt;/p&gt; 
&lt;h3&gt;Don't ignore caught errors&lt;/h3&gt; 
&lt;p&gt;Doing nothing with a caught error doesn't give you the ability to ever fix or react to said error. Logging the error to the console (&lt;code&gt;console.log&lt;/code&gt;) isn't much better as often times it can get lost in a sea of things printed to the console. If you wrap any bit of code in a &lt;code&gt;try/catch&lt;/code&gt; it means you think an error may occur there and therefore you should have a plan, or create a code path, for when it occurs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;try {
  functionThatMightThrow();
} catch (error) {
  console.log(error);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;try {
  functionThatMightThrow();
} catch (error) {
  // One option (more noisy than console.log):
  console.error(error);
  // Another option:
  notifyUserOfError(error);
  // Another option:
  reportErrorToService(error);
  // OR do all three!
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Don't ignore rejected promises&lt;/h3&gt; 
&lt;p&gt;For the same reason you shouldn't ignore caught errors from &lt;code&gt;try/catch&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;getdata()
  .then(data =&amp;gt; {
    functionThatMightThrow(data);
  })
  .catch(error =&amp;gt; {
    console.log(error);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;getdata()
  .then(data =&amp;gt; {
    functionThatMightThrow(data);
  })
  .catch(error =&amp;gt; {
    // One option (more noisy than console.log):
    console.error(error);
    // Another option:
    notifyUserOfError(error);
    // Another option:
    reportErrorToService(error);
    // OR do all three!
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Formatting is subjective. Like many rules herein, there is no hard and fast rule that you must follow. The main point is DO NOT ARGUE over formatting. There are &lt;a href="https://standardjs.com/rules.html"&gt;tons of tools&lt;/a&gt; to automate this. Use one! It's a waste of time and money for engineers to argue over formatting.&lt;/p&gt; 
&lt;p&gt;For things that don't fall under the purview of automatic formatting (indentation, tabs vs. spaces, double vs. single quotes, etc.) look here for some guidance.&lt;/p&gt; 
&lt;h3&gt;Use consistent capitalization&lt;/h3&gt; 
&lt;p&gt;JavaScript is untyped, so capitalization tells you a lot about your variables, functions, etc. These rules are subjective, so your team can choose whatever they want. The point is, no matter what you all choose, just be consistent.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const DAYS_IN_WEEK = 7;
const daysInMonth = 30;

const songs = ["Back In Black", "Stairway to Heaven", "Hey Jude"];
const Artists = ["ACDC", "Led Zeppelin", "The Beatles"];

function eraseDatabase() {}
function restore_database() {}

class animal {}
class Alpaca {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const DAYS_IN_WEEK = 7;
const DAYS_IN_MONTH = 30;

const SONGS = ["Back In Black", "Stairway to Heaven", "Hey Jude"];
const ARTISTS = ["ACDC", "Led Zeppelin", "The Beatles"];

function eraseDatabase() {}
function restoreDatabase() {}

class Animal {}
class Alpaca {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Function callers and callees should be close&lt;/h3&gt; 
&lt;p&gt;If a function calls another, keep those functions vertically close in the source file. Ideally, keep the caller right above the callee. We tend to read code from top-to-bottom, like a newspaper. Because of this, make your code read that way.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class PerformanceReview {
  constructor(employee) {
    this.employee = employee;
  }

  lookupPeers() {
    return db.lookup(this.employee, "peers");
  }

  lookupManager() {
    return db.lookup(this.employee, "manager");
  }

  getPeerReviews() {
    const peers = this.lookupPeers();
    // ...
  }

  perfReview() {
    this.getPeerReviews();
    this.getManagerReview();
    this.getSelfReview();
  }

  getManagerReview() {
    const manager = this.lookupManager();
  }

  getSelfReview() {
    // ...
  }
}

const review = new PerformanceReview(employee);
review.perfReview();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;class PerformanceReview {
  constructor(employee) {
    this.employee = employee;
  }

  perfReview() {
    this.getPeerReviews();
    this.getManagerReview();
    this.getSelfReview();
  }

  getPeerReviews() {
    const peers = this.lookupPeers();
    // ...
  }

  lookupPeers() {
    return db.lookup(this.employee, "peers");
  }

  getManagerReview() {
    const manager = this.lookupManager();
  }

  lookupManager() {
    return db.lookup(this.employee, "manager");
  }

  getSelfReview() {
    // ...
  }
}

const review = new PerformanceReview(employee);
review.perfReview();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Comments&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Only comment things that have business logic complexity.&lt;/h3&gt; 
&lt;p&gt;Comments are an apology, not a requirement. Good code &lt;em&gt;mostly&lt;/em&gt; documents itself.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function hashIt(data) {
  // The hash
  let hash = 0;

  // Length of string
  const length = data.length;

  // Loop through every character in data
  for (let i = 0; i &amp;lt; length; i++) {
    // Get character code.
    const char = data.charCodeAt(i);
    // Make the hash
    hash = (hash &amp;lt;&amp;lt; 5) - hash + char;
    // Convert to 32-bit integer
    hash &amp;amp;= hash;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function hashIt(data) {
  let hash = 0;
  const length = data.length;

  for (let i = 0; i &amp;lt; length; i++) {
    const char = data.charCodeAt(i);
    hash = (hash &amp;lt;&amp;lt; 5) - hash + char;

    // Convert to 32-bit integer
    hash &amp;amp;= hash;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don't leave commented out code in your codebase&lt;/h3&gt; 
&lt;p&gt;Version control exists for a reason. Leave old code in your history.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;doStuff();
// doOtherStuff();
// doSomeMoreStuff();
// doSoMuchStuff();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;doStuff();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Don't have journal comments&lt;/h3&gt; 
&lt;p&gt;Remember, use version control! There's no need for dead code, commented code, and especially journal comments. Use &lt;code&gt;git log&lt;/code&gt; to get history!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;/**
 * 2016-12-20: Removed monads, didn't understand them (RM)
 * 2016-10-01: Improved using special monads (JP)
 * 2016-02-03: Removed type-checking (LI)
 * 2015-03-14: Added combine with type-checking (JR)
 */
function combine(a, b) {
  return a + b;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;function combine(a, b) {
  return a + b;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Avoid positional markers&lt;/h3&gt; 
&lt;p&gt;They usually just add noise. Let the functions and variable names along with the proper indentation and formatting give the visual structure to your code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;////////////////////////////////////////////////////////////////////////////////
// Scope Model Instantiation
////////////////////////////////////////////////////////////////////////////////
$scope.model = {
  menu: "foo",
  nav: "bar"
};

////////////////////////////////////////////////////////////////////////////////
// Action setup
////////////////////////////////////////////////////////////////////////////////
const actions = function() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;$scope.model = {
  menu: "foo",
  nav: "bar"
};

const actions = function() {
  // ...
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;p&gt;This is also available in other languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Armenia.png" alt="am" /&gt; &lt;strong&gt;Armenian&lt;/strong&gt;: &lt;a href="https://github.com/hanumanum/clean-code-javascript"&gt;hanumanum/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Bangladesh.png" alt="bd" /&gt; &lt;strong&gt;Bangla(বাংলা)&lt;/strong&gt;: &lt;a href="https://github.com/InsomniacSabbir/clean-code-javascript/"&gt;InsomniacSabbir/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Brazil.png" alt="br" /&gt; &lt;strong&gt;Brazilian Portuguese&lt;/strong&gt;: &lt;a href="https://github.com/fesnt/clean-code-javascript"&gt;fesnt/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/China.png" alt="cn" /&gt; &lt;strong&gt;Simplified Chinese&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/alivebao/clean-code-js"&gt;alivebao/clean-code-js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/beginor/clean-code-javascript"&gt;beginor/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Taiwan.png" alt="tw" /&gt; &lt;strong&gt;Traditional Chinese&lt;/strong&gt;: &lt;a href="https://github.com/AllJointTW/clean-code-javascript"&gt;AllJointTW/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/France.png" alt="fr" /&gt; &lt;strong&gt;French&lt;/strong&gt;: &lt;a href="https://github.com/eugene-augier/clean-code-javascript-fr"&gt;eugene-augier/clean-code-javascript-fr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Germany.png" alt="de" /&gt; &lt;strong&gt;German&lt;/strong&gt;: &lt;a href="https://github.com/marcbruederlin/clean-code-javascript"&gt;marcbruederlin/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Indonesia.png" alt="id" /&gt; &lt;strong&gt;Indonesia&lt;/strong&gt;: &lt;a href="https://github.com/andirkh/clean-code-javascript/"&gt;andirkh/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Italy.png" alt="it" /&gt; &lt;strong&gt;Italian&lt;/strong&gt;: &lt;a href="https://github.com/frappacchio/clean-code-javascript/"&gt;frappacchio/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Japan.png" alt="ja" /&gt; &lt;strong&gt;Japanese&lt;/strong&gt;: &lt;a href="https://github.com/mitsuruog/clean-code-javascript/"&gt;mitsuruog/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/South-Korea.png" alt="kr" /&gt; &lt;strong&gt;Korean&lt;/strong&gt;: &lt;a href="https://github.com/qkraudghgh/clean-code-javascript-ko"&gt;qkraudghgh/clean-code-javascript-ko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Poland.png" alt="pl" /&gt; &lt;strong&gt;Polish&lt;/strong&gt;: &lt;a href="https://github.com/greg-dev/clean-code-javascript-pl"&gt;greg-dev/clean-code-javascript-pl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Russia.png" alt="ru" /&gt; &lt;strong&gt;Russian&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/BoryaMogila/clean-code-javascript-ru/"&gt;BoryaMogila/clean-code-javascript-ru/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/maksugr/clean-code-javascript"&gt;maksugr/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Spain.png" alt="es" /&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href="https://github.com/tureey/clean-code-javascript"&gt;tureey/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Uruguay.png" alt="es" /&gt; &lt;strong&gt;Spanish&lt;/strong&gt;: &lt;a href="https://github.com/andersontr15/clean-code-javascript-es"&gt;andersontr15/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Serbia.png" alt="rs" /&gt; &lt;strong&gt;Serbian&lt;/strong&gt;: &lt;a href="https://github.com/doskovicmilos/clean-code-javascript"&gt;doskovicmilos/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Turkey.png" alt="tr" /&gt; &lt;strong&gt;Turkish&lt;/strong&gt;: &lt;a href="https://github.com/bsonmez/clean-code-javascript/tree/turkish-translation"&gt;bsonmez/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Ukraine.png" alt="ua" /&gt; &lt;strong&gt;Ukrainian&lt;/strong&gt;: &lt;a href="https://github.com/mindfr1k/clean-code-javascript-ua"&gt;mindfr1k/clean-code-javascript-ua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Vietnam.png" alt="vi" /&gt; &lt;strong&gt;Vietnamese&lt;/strong&gt;: &lt;a href="https://github.com/hienvd/clean-code-javascript/"&gt;hienvd/clean-code-javascript/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/gosquared/flags/master/flags/flags/shiny/24/Iran.png" alt="ir" /&gt; &lt;strong&gt;Persian&lt;/strong&gt;: &lt;a href="https://github.com/hamettio/clean-code-javascript"&gt;hamettio/clean-code-javascript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ryanmcdermott/clean-code-javascript/master/#table-of-contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>prettier/prettier</title>
      <link>https://github.com/prettier/prettier</link>
      <description>&lt;p&gt;Prettier is an opinionated code formatter.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://prettier.io"&gt;&lt;img src="https://unpkg.com/prettier-logo@1.0.3/images/prettier-banner-light.svg?sanitize=true" alt="Prettier Banner" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2 align="center"&gt;Opinionated Code Formatter&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;em&gt; JavaScript · TypeScript · Flow · JSX · JSON &lt;/em&gt; &lt;br /&gt; &lt;em&gt; CSS · SCSS · Less &lt;/em&gt; &lt;br /&gt; &lt;em&gt; HTML · Vue · Angular &lt;/em&gt; &lt;br /&gt; &lt;em&gt; GraphQL · Markdown · YAML &lt;/em&gt; &lt;br /&gt; &lt;em&gt; &lt;a href="https://prettier.io/docs/plugins"&gt; Your favorite language? &lt;/a&gt; &lt;/em&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/prettier/prettier/actions?query=branch%3Amain"&gt; &lt;img alt="CI Status" src="https://img.shields.io/github/check-runs/prettier/prettier/main?style=flat-square&amp;amp;label=CI" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/prettier/prettier"&gt; &lt;img alt="Coverage Status" src="https://img.shields.io/codecov/c/github/prettier/prettier.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://x.com/acdlite/status/974390255393505280"&gt; &lt;img alt="Blazing Fast" src="https://img.shields.io/badge/speed-blazing%20%F0%9F%94%A5-brightgreen.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://www.npmjs.com/package/prettier"&gt; &lt;img alt="npm version" src="https://img.shields.io/npm/v/prettier.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/prettier"&gt; &lt;img alt="weekly downloads from npm" src="https://img.shields.io/npm/dw/prettier.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://github.com/prettier/prettier#badge"&gt; &lt;img alt="code style: prettier" src="https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://x.com/intent/follow?screen_name=PrettierCode"&gt; &lt;img alt="Follow Prettier on X" src="https://img.shields.io/badge/%40PrettierCode-9f9f9f?style=flat-square&amp;amp;logo=x&amp;amp;labelColor=555" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Intro&lt;/h2&gt; 
&lt;p&gt;Prettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.&lt;/p&gt; 
&lt;h3&gt;Input&lt;/h3&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;foo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Output&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;foo(
  reallyLongArg(),
  omgSoManyParameters(),
  IShouldRefactorThis(),
  isThereSeriouslyAnotherOne(),
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Prettier can be run &lt;a href="https://prettier.io/docs/editors"&gt;in your editor&lt;/a&gt; on-save, in a &lt;a href="https://prettier.io/docs/precommit"&gt;pre-commit hook&lt;/a&gt;, or in &lt;a href="https://prettier.io/docs/cli#list-different"&gt;CI environments&lt;/a&gt; to ensure your codebase has a consistent style without devs ever having to post a nit-picky comment on a code review ever again!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://prettier.io/docs/"&gt;Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://prettier.io/docs/install"&gt;Install&lt;/a&gt; · &lt;a href="https://prettier.io/docs/options"&gt;Options&lt;/a&gt; · &lt;a href="https://prettier.io/docs/cli"&gt;CLI&lt;/a&gt; · &lt;a href="https://prettier.io/docs/api"&gt;API&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://prettier.io/playground/"&gt;Playground&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Badge&lt;/h2&gt; 
&lt;p&gt;Show the world you're using &lt;em&gt;Prettier&lt;/em&gt; → &lt;a href="https://github.com/prettier/prettier"&gt;&lt;img src="https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square" alt="code style: prettier" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/prettier/prettier/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>academind/react-complete-guide-course-resources</title>
      <link>https://github.com/academind/react-complete-guide-course-resources</link>
      <description>&lt;p&gt;React - The Complete Guide Course Resources (Code, Attachments, Slides)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React - The Complete Guide Course Resources&lt;/h1&gt; 
&lt;p&gt;This repository provides access to code files, code snapshots, slides &amp;amp; other resources that are used or provided by the &lt;a href="https://acad.link/reactjs"&gt;React - The Complete Guide&lt;/a&gt; course.&lt;/p&gt; 
&lt;p&gt;If you're facing any issues with the code, please post in the course Q&amp;amp;A section.&lt;/p&gt; 
&lt;h1&gt;Repository Content&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code Snapshots:&lt;/strong&gt; All code snapshots (starting snapshots, intermediate snapshots, finished snapshots) for the various course sections can be found in the &lt;a href="https://raw.githubusercontent.com/academind/react-complete-guide-course-resources/main/code/"&gt;/code&lt;/a&gt; folder.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lecture Attachments:&lt;/strong&gt; Any standalone code files or other attachments that are mentioned in course lectures (and attached to those lectures) are stored in the &lt;a href="https://raw.githubusercontent.com/academind/react-complete-guide-course-resources/main/attachments/"&gt;/attachments&lt;/a&gt; folder.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Other Resources:&lt;/strong&gt; Other resources (like the course slides) can be found in the &lt;a href="https://raw.githubusercontent.com/academind/react-complete-guide-course-resources/main/other/"&gt;/other&lt;/a&gt; folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;strong&gt;Code Snapshots&lt;/strong&gt; and &lt;strong&gt;Lecture Attachments&lt;/strong&gt; folders contain one subfolder per course section - this allows you to easily access the resources for a specific course section.&lt;/p&gt; 
&lt;h1&gt;How To Use Code Snapshots&lt;/h1&gt; 
&lt;p&gt;Code snapshots are primarily provided to allow you to compare your code to mine. The snapshots are taken directly from the course recordings and therefore reflect my code you see in the videos.&lt;/p&gt; 
&lt;p&gt;Of course, you can also try running those code snapshots on your machine. You'll need to run &lt;code&gt;npm install&lt;/code&gt; in the individual snapshot folders, followed by &lt;code&gt;npm run dev&lt;/code&gt; to start the development server - just as shown in the course.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>FreeTubeApp/FreeTube</title>
      <link>https://github.com/FreeTubeApp/FreeTube</link>
      <description>&lt;p&gt;An Open Source YouTube app for privacy&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img alt="" src="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/_icons/logoColor.svg?sanitize=true" width="500" align="center" /&gt; &lt;/p&gt; 
&lt;p&gt;FreeTube is an open source desktop YouTube player built with privacy in mind. Use YouTube without advertisements and prevent Google from tracking you with their cookies and JavaScript. Available for Windows (10 and later), Mac (macOS 11 and later) &amp;amp; Linux thanks to Electron.&lt;/p&gt; 
&lt;p align="center"&gt;&lt;a href="https://github.com/FreeTubeApp/FreeTube/releases"&gt;Download FreeTube&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml"&gt; &lt;img alt="Build status" src="https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml/badge.svg?branch=development" /&gt; &lt;/a&gt; &lt;a href="https://hosted.weblate.org/engage/free-tube/"&gt; &lt;img src="https://hosted.weblate.org/widgets/free-tube/-/svg-badge.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt;&lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#screenshots"&gt;Screenshots&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#how-does-it-work"&gt;How does it work?&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#features"&gt;Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#download-links"&gt;Download Links&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#contributing"&gt;Contributing&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#localization"&gt;Localization&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#contact"&gt;Contact&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#donate"&gt;Donate&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#license"&gt;License&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;a href="https://freetubeapp.io/"&gt;Website&lt;/a&gt; • &lt;a href="https://blog.freetubeapp.io/"&gt;Blog&lt;/a&gt; • &lt;a href="https://docs.freetubeapp.io/"&gt;Documentation&lt;/a&gt; • &lt;a href="https://docs.freetubeapp.io/faq/"&gt;FAQ&lt;/a&gt; • &lt;a href="https://github.com/FreeTubeApp/FreeTube/discussions"&gt;Discussions&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] FreeTube is currently in Beta. While it should work well for most users, there are still bugs and missing features that need to be addressed.&lt;/p&gt; 
 &lt;p&gt;If you have an idea or if you found a bug, please submit a &lt;a href="https://github.com/FreeTubeApp/FreeTube/issues/new/choose"&gt;GitHub issue&lt;/a&gt; so that we can track it. Please &lt;a href="https://github.com/FreeTubeApp/FreeTube/issues?q=is%3Aissue+sort%3Arelevance-desc"&gt;search the existing issues&lt;/a&gt; before submitting to prevent duplicates!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;The main FreeTube window&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/FreeTubeApp/FreeTubeApp.io/master/src/images/FreeTube1.png" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Watching a video&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/FreeTubeApp/FreeTubeApp.io/master/src/images/FreeTube2.png" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Settings&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/FreeTubeApp/FreeTubeApp.io/master/src/images/FreeTube3.png" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;How does it work?&lt;/h2&gt; 
&lt;p&gt;FreeTube uses a built in extractor to grab and serve data / videos. The &lt;a href="https://github.com/iv-org/invidious"&gt;Invidious API&lt;/a&gt; can also optionally be used. FreeTube does not use any official APIs to obtain data. While YouTube can still see your video requests, it can no longer track you using cookies or JavaScript. Your subscriptions, playlists and history are stored locally on your computer and never sent out.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; Using a VPN or Tor is highly recommended to hide your IP while using FreeTube.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Watch videos without ads&lt;/li&gt; 
 &lt;li&gt;Use YouTube without Google tracking you using cookies and JavaScript&lt;/li&gt; 
 &lt;li&gt;Two extractor APIs to choose from (Built in or Invidious)&lt;/li&gt; 
 &lt;li&gt;Subscribe to channels without an account&lt;/li&gt; 
 &lt;li&gt;Connect to an externally setup proxy such as Tor&lt;/li&gt; 
 &lt;li&gt;View and search your local subscriptions, playlists and history&lt;/li&gt; 
 &lt;li&gt;Organize your subscriptions into "Profiles" to create a more focused feed&lt;/li&gt; 
 &lt;li&gt;Export &amp;amp; import subscriptions&lt;/li&gt; 
 &lt;li&gt;Youtube Trending&lt;/li&gt; 
 &lt;li&gt;Youtube Chapters&lt;/li&gt; 
 &lt;li&gt;Most popular videos page based on the set Invidious instance&lt;/li&gt; 
 &lt;li&gt;SponsorBlock&lt;/li&gt; 
 &lt;li&gt;DeArrow&lt;/li&gt; 
 &lt;li&gt;Open videos from your browser directly into FreeTube (with extension)&lt;/li&gt; 
 &lt;li&gt;Watch videos using an external player&lt;/li&gt; 
 &lt;li&gt;Full Theme support&lt;/li&gt; 
 &lt;li&gt;Make a screenshot of a video&lt;/li&gt; 
 &lt;li&gt;Multiple windows&lt;/li&gt; 
 &lt;li&gt;Mini Player (Picture-in-Picture)&lt;/li&gt; 
 &lt;li&gt;Keyboard shortcuts&lt;/li&gt; 
 &lt;li&gt;Option to show only family friendly content&lt;/li&gt; 
 &lt;li&gt;Show/hide functionality or elements within the app using the distraction free settings&lt;/li&gt; 
 &lt;li&gt;View channel posts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Browser Extensions&lt;/h3&gt; 
&lt;p&gt;The following extensions open YouTube links directly in FreeTube:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://libredirect.github.io/"&gt;LibRedirect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MStankiewiczOfficial/RedirectTube"&gt;RedirectTube&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;LibRedirect automatically redirect YouTube links to FreeTube.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] To ensure proper functionality, select FreeTube as Frontend in the Services settings of the extension.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;RedirectTube, doesn’t automatically open YouTube links in FreeTube. Instead, it adds buttons to the toolbar and context menu, which you can click to open videos in FreeTube manually.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Download LibRedirect from &lt;a href="https://addons.mozilla.org/firefox/addon/libredirect/"&gt;Mozilla Add-ons&lt;/a&gt; (for Firefox based-browsers) or &lt;a href="https://libredirect.github.io/download_chromium.html"&gt;developer's website&lt;/a&gt; (for Chrome and Chromium-based browsers).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Download RedirectTube from &lt;a href="https://addons.mozilla.org/firefox/addon/redirecttube/"&gt;Mozilla Add-ons&lt;/a&gt; (for Firefox based-browsers).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] These extensions do not work on Linux portable builds!&lt;/p&gt; 
 &lt;p&gt;If you have issues with the extension working with FreeTube, please create an issue in this repository instead of the extension repository.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Download Links&lt;/h2&gt; 
&lt;h3&gt;Official Downloads&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] FreeTube is only supported on Windows 10 and later, macOS 11 and above, and various Linux distributions. Installing it on unsupported systems may result in unexpected issues.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/FreeTubeApp/FreeTube/releases"&gt;GitHub Releases&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://freetubeapp.io/#download"&gt;FreeTube Website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Flatpak on Flathub: &lt;a href="https://flathub.org/apps/details/io.freetubeapp.FreeTube"&gt;Download&lt;/a&gt; and &lt;a href="https://github.com/flathub/io.freetubeapp.FreeTube"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Automated Builds (Nightly / Weekly)&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Use these builds at your own risk. These are pre-release versions and are only intended for people that want to test changes early and are willing to accept that things could break from one build to another.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Builds are automatically created from changes to our development branch via &lt;a href="https://github.com/FreeTubeApp/FreeTube/actions?query=workflow%3ABuild"&gt;GitHub Actions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The first build with a green check mark is the latest build.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] You will need to have a GitHub account to download these builds.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Unofficial Downloads&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] These builds are maintained by the community. While they should be safe, download at your own risk. There may be issues with using these versus the official builds. Any issues specific with these builds should be sent to their respective maintainer. Make sure u always try an &lt;a href="https://github.com/freetubeapp/freetube/#official-downloads"&gt;official download&lt;/a&gt; before reporting your issue to us!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Arch User Repository (AUR): &lt;a href="https://aur.archlinux.org/packages/freetube-bin/"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Chocolatey: &lt;a href="https://chocolatey.org/packages/freetube/"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;FreeTubeAndroid (FreeTube port for Android and PWA): &lt;a href="https://github.com/MarmadileManteater/FreeTubeAndroid/releases"&gt;Download&lt;/a&gt; and &lt;a href="https://github.com/MarmadileManteater/FreeTubeAndroid"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Homebrew Formulae (Mac only): &lt;a href="https://formulae.brew.sh/cask/freetube"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;makedeb Package Repository (MPR): &lt;a href="https://mpr.makedeb.org/packages/freetube-bin"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Nix Packages: &lt;a href="https://search.nixos.org/packages?query=freetube"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;PortableApps (Windows Only): &lt;a href="https://github.com/rddim/FreeTubePortable/releases"&gt;Download&lt;/a&gt; and &lt;a href="https://github.com/rddim/FreeTubePortable"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Scoop (Windows Only): &lt;a href="https://github.com/ScoopInstaller/Scoop"&gt;Usage&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Snap: &lt;a href="https://snapcraft.io/freetube"&gt;Download&lt;/a&gt; and &lt;a href="https://git.launchpad.net/freetube"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;WAPT: &lt;a href="https://wapt.tranquil.it/store/tis-freetube"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Windows Package Manager (winget): &lt;a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/"&gt;Usage&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Thank you very much to the &lt;a href="https://docs.freetubeapp.io/credits/"&gt;People and Projects&lt;/a&gt; that make FreeTube possible!&lt;/p&gt; 
&lt;p&gt;If you like to get your hands dirty and want to contribute, we would love to have your help. Send a pull request and someone will review your code.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Please follow the &lt;a href="https://github.com/FreeTubeApp/FreeTube/raw/development/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; before sending your pull request.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;a href="https://hosted.weblate.org/engage/free-tube/"&gt; &lt;img src="https://hosted.weblate.org/widgets/free-tube/-/287x66-grey.png" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;p&gt;We are actively looking for translations! We use &lt;a href="https://hosted.weblate.org/engage/free-tube/"&gt;Weblate&lt;/a&gt; to make it easy for translators to get involved. Click on the badge above to learn how to get involved.&lt;/p&gt; 
&lt;p&gt;For the Linux Flatpak, the desktop entry comment string can be translated at our &lt;a href="https://github.com/flathub/io.freetubeapp.FreeTube/raw/master/io.freetubeapp.FreeTube.desktop"&gt;Flatpak repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;If you ever have any questions, feel free to ask it on our &lt;a href="https://github.com/FreeTubeApp/FreeTube/discussions"&gt;Discussions&lt;/a&gt; page. Alternatively, you can email us at &lt;a href="mailto:FreeTubeApp@protonmail.com"&gt;FreeTubeApp@protonmail.com&lt;/a&gt; or you can join our &lt;a href="https://matrix.to/#/#freetube:matrix.org"&gt;Matrix Room&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Don't forget to check out the &lt;a href="https://docs.freetubeapp.io/community/matrix/"&gt;rules&lt;/a&gt; before joining.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;If you enjoy using FreeTube, you're welcome to leave a donation using the following method.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bitcoin Address: &lt;code&gt;1Lih7Ho5gnxb1CwPD4o59ss78pwo2T91eS&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;While your donations are much appreciated, only donate if you really want to. Donations are used for keeping the website up and running and eventual code signing costs.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you are using the Invidious API then we recommend that you donate to the instance that you use. You can also donate to the &lt;a href="https://invidious.io/donate/"&gt;Invidious team&lt;/a&gt; or the &lt;a href="https://github.com/sponsors/LuanRT"&gt;Local API developer&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.gnu.org/licenses/agpl-3.0.html"&gt;&lt;img src="https://www.gnu.org/graphics/agplv3-155x51.png" alt="GNU AGPLv3 Image" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;FreeTube is Free Software: You can use, study share and improve it at your will. Specifically you can redistribute and/or modify it under the terms of the &lt;a href="https://www.gnu.org/licenses/agpl-3.0.html"&gt;GNU Affero General Public License&lt;/a&gt; as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>louislam/uptime-kuma</title>
      <link>https://github.com/louislam/uptime-kuma</link>
      <description>&lt;p&gt;A fancy self-hosted monitoring tool&lt;/p&gt;&lt;hr&gt;&lt;div align="center" width="100%"&gt; 
 &lt;img src="https://raw.githubusercontent.com/louislam/uptime-kuma/master/public/icon.svg?sanitize=true" width="128" alt="" /&gt; 
&lt;/div&gt; 
&lt;h1&gt;Uptime Kuma&lt;/h1&gt; 
&lt;p&gt;Uptime Kuma is an easy-to-use self-hosted monitoring tool.&lt;/p&gt; 
&lt;p&gt;&lt;a target="_blank" href="https://github.com/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/github/stars/louislam/uptime-kuma?style=flat" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://hub.docker.com/r/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/docker/pulls/louislam/uptime-kuma" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://hub.docker.com/r/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver." /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://github.com/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/github/last-commit/louislam/uptime-kuma" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://opencollective.com/uptime-kuma"&gt;&lt;img src="https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;amp;color=brightgreen" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/louislam"&gt;&lt;img src="https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors" alt="GitHub Sponsors" /&gt;&lt;/a&gt; &lt;a href="https://weblate.kuma.pet/projects/uptime-kuma/uptime-kuma/"&gt; &lt;img src="https://weblate.kuma.pet/widgets/uptime-kuma/-/svg-badge.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://user-images.githubusercontent.com/1336778/212262296-e6205815-ad62-488c-83ec-a5b0d0689f7c.jpg" width="700" alt="" /&gt; 
&lt;h2&gt;🥔 Live Demo&lt;/h2&gt; 
&lt;p&gt;Try it!&lt;/p&gt; 
&lt;p&gt;Demo Server (Location: Frankfurt - Germany): &lt;a href="https://demo.kuma.pet/start-demo"&gt;https://demo.kuma.pet/start-demo&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;It is a temporary live demo, all data will be deleted after 10 minutes. Sponsored by &lt;a href="https://github.com/louislam/uptime-kuma#%EF%B8%8F-sponsors"&gt;Uptime Kuma Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;⭐ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monitoring uptime for HTTP(s) / TCP / HTTP(s) Keyword / HTTP(s) Json Query / Ping / DNS Record / Push / Steam Game Server / Docker Containers&lt;/li&gt; 
 &lt;li&gt;Fancy, Reactive, Fast UI/UX&lt;/li&gt; 
 &lt;li&gt;Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and &lt;a href="https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications"&gt;90+ notification services, click here for the full list&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;20-second intervals&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/louislam/uptime-kuma/tree/master/src/lang"&gt;Multi Languages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Multiple status pages&lt;/li&gt; 
 &lt;li&gt;Map status pages to specific domains&lt;/li&gt; 
 &lt;li&gt;Ping chart&lt;/li&gt; 
 &lt;li&gt;Certificate info&lt;/li&gt; 
 &lt;li&gt;Proxy support&lt;/li&gt; 
 &lt;li&gt;2FA support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔧 How to Install&lt;/h2&gt; 
&lt;h3&gt;🐳 Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Uptime Kuma is now running on &lt;a href="http://0.0.0.0:3001"&gt;http://0.0.0.0:3001&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] File Systems like &lt;strong&gt;NFS&lt;/strong&gt; (Network File System) are &lt;strong&gt;NOT&lt;/strong&gt; supported. Please map to a local directory or volume.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you want to limit exposure to localhost (without exposing port for other users or to use a &lt;a href="https://github.com/louislam/uptime-kuma/wiki/Reverse-Proxy"&gt;reverse proxy&lt;/a&gt;), you can expose the port like this:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --restart=always -p 127.0.0.1:3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;💪🏻 Non-Docker&lt;/h3&gt; 
&lt;p&gt;Requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Platform 
  &lt;ul&gt; 
   &lt;li&gt;✅ Major Linux distros such as Debian, Ubuntu, CentOS, Fedora and ArchLinux etc.&lt;/li&gt; 
   &lt;li&gt;✅ Windows 10 (x64), Windows Server 2012 R2 (x64) or higher&lt;/li&gt; 
   &lt;li&gt;❌ FreeBSD / OpenBSD / NetBSD&lt;/li&gt; 
   &lt;li&gt;❌ Replit / Heroku&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; 18 / 20.4&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.npmjs.com/cli/"&gt;npm&lt;/a&gt; 9&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git-scm.com/downloads"&gt;Git&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pm2.keymetrics.io/"&gt;pm2&lt;/a&gt; - For running Uptime Kuma in the background&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/louislam/uptime-kuma.git
cd uptime-kuma
npm run setup

# Option 1. Try it
node server/server.js

# (Recommended) Option 2. Run in the background using PM2
# Install PM2 if you don't have it:
npm install pm2 -g &amp;amp;&amp;amp; pm2 install pm2-logrotate

# Start Server
pm2 start server/server.js --name uptime-kuma
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Uptime Kuma is now running on &lt;a href="http://localhost:3001"&gt;http://localhost:3001&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;More useful PM2 Commands&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# If you want to see the current console output
pm2 monit

# If you want to add it to startup
pm2 save &amp;amp;&amp;amp; pm2 startup
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Advanced Installation&lt;/h3&gt; 
&lt;p&gt;If you need more options or need to browse via a reverse proxy, please read:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install"&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🆙 How to Update&lt;/h2&gt; 
&lt;p&gt;Please read:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update"&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🆕 What's Next?&lt;/h2&gt; 
&lt;p&gt;I will assign requests/issues to the next milestone.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma/milestones"&gt;https://github.com/louislam/uptime-kuma/milestones&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;❤️ Sponsors&lt;/h2&gt; 
&lt;p&gt;Thank you so much! (GitHub Sponsors will be updated manually. OpenCollective sponsors will be updated automatically, the list will be cached by GitHub though. It may need some time to be updated)&lt;/p&gt; 
&lt;img src="https://uptime.kuma.pet/sponsors?v=6" alt /&gt; 
&lt;h2&gt;🖼 More Screenshots&lt;/h2&gt; 
&lt;p&gt;Light Mode:&lt;/p&gt; 
&lt;img src="https://uptime.kuma.pet/img/light.jpg" width="512" alt="" /&gt; 
&lt;p&gt;Status Page:&lt;/p&gt; 
&lt;img src="https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png" width="512" alt="" /&gt; 
&lt;p&gt;Settings Page:&lt;/p&gt; 
&lt;img src="https://louislam.net/uptimekuma/2.jpg" width="400" alt="" /&gt; 
&lt;p&gt;Telegram Notification Sample:&lt;/p&gt; 
&lt;img src="https://louislam.net/uptimekuma/3.jpg" width="400" alt="" /&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;I was looking for a self-hosted monitoring tool like "Uptime Robot", but it is hard to find a suitable one. One of the closest ones is statping. Unfortunately, it is not stable and no longer maintained.&lt;/li&gt; 
 &lt;li&gt;Wanted to build a fancy UI.&lt;/li&gt; 
 &lt;li&gt;Learn Vue 3 and vite.js.&lt;/li&gt; 
 &lt;li&gt;Show the power of Bootstrap 5.&lt;/li&gt; 
 &lt;li&gt;Try to use WebSocket with SPA instead of a REST API.&lt;/li&gt; 
 &lt;li&gt;Deploy my first Docker image to Docker Hub.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you love this project, please consider giving it a ⭐.&lt;/p&gt; 
&lt;h2&gt;🗣️ Discussion / Ask for Help&lt;/h2&gt; 
&lt;p&gt;⚠️ For any general or technical questions, please don't send me an email, as I am unable to provide support in that manner. I will not respond if you ask questions there.&lt;/p&gt; 
&lt;p&gt;I recommend using Google, GitHub Issues, or Uptime Kuma's subreddit for finding answers to your question. If you cannot find the information you need, feel free to ask:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/louislam/uptime-kuma/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.reddit.com/r/UptimeKuma/"&gt;Subreddit (r/UptimeKuma)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;My Reddit account: &lt;a href="https://reddit.com/u/louislamlam"&gt;u/louislamlam&lt;/a&gt; You can mention me if you ask a question on the subreddit.&lt;/p&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;h3&gt;Create Pull Requests&lt;/h3&gt; 
&lt;p&gt;We DO NOT accept all types of pull requests and do not want to waste your time. Please be sure that you have read and follow pull request rules: &lt;a href="https://github.com/louislam/uptime-kuma/raw/master/CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma"&gt;CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Test Pull Requests&lt;/h3&gt; 
&lt;p&gt;There are a lot of pull requests right now, but I don't have time to test them all.&lt;/p&gt; 
&lt;p&gt;If you want to help, you can check this: &lt;a href="https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests"&gt;https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Test Beta Version&lt;/h3&gt; 
&lt;p&gt;Check out the latest beta release here: &lt;a href="https://github.com/louislam/uptime-kuma/releases"&gt;https://github.com/louislam/uptime-kuma/releases&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Bug Reports / Feature Requests&lt;/h3&gt; 
&lt;p&gt;If you want to report a bug or request a new feature, feel free to open a &lt;a href="https://github.com/louislam/uptime-kuma/issues"&gt;new issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Translations&lt;/h3&gt; 
&lt;p&gt;If you want to translate Uptime Kuma into your language, please visit &lt;a href="https://github.com/louislam/uptime-kuma/raw/master/src/lang/README.md"&gt;Weblate Readme&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Spelling &amp;amp; Grammar&lt;/h3&gt; 
&lt;p&gt;Feel free to correct the grammar in the documentation or code. My mother language is not English and my grammar is not that great.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HeyPuter/puter</title>
      <link>https://github.com/HeyPuter/puter</link>
      <description>&lt;p&gt;🌐 The Internet OS! Free, Open-Source, and Self-Hostable.&lt;/p&gt;&lt;hr&gt;&lt;h3 align="center"&gt;&lt;img width="80" alt="Puter.com, The Personal Cloud Computer: All your files, apps, and games in one place accessible from anywhere at any time." src="https://assets.puter.site/puter-logo.png" /&gt;&lt;/h3&gt; 
&lt;h3 align="center"&gt;The Internet OS! Free, Open-Source, and Self-Hostable.&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;a href="https://puter.com/?ref=github.com"&gt;&lt;strong&gt;« LIVE DEMO »&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://puter.com/?ref=github.com"&gt;Puter.com&lt;/a&gt; · &lt;a href="https://puter.com/app/app-center"&gt;App Store&lt;/a&gt; · &lt;a href="https://developer.puter.com" target="_blank"&gt;Developers&lt;/a&gt; · &lt;a href="https://github.com/heyputer/puter-cli" target="_blank"&gt;CLI&lt;/a&gt; · &lt;a href="https://discord.com/invite/PQcx7Teh8u"&gt;Discord&lt;/a&gt; · &lt;a href="https://reddit.com/r/puter"&gt;Reddit&lt;/a&gt; · &lt;a href="https://twitter.com/HeyPuter"&gt;X&lt;/a&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;&lt;img width="800" style="border-radius:5px;" alt="screenshot" src="https://assets.puter.site/puter.com-screenshot-3.webp" /&gt;&lt;/h3&gt; 
&lt;br /&gt; 
&lt;h2&gt;Puter&lt;/h2&gt; 
&lt;p&gt;Puter is an advanced, open-source internet operating system designed to be feature-rich, exceptionally fast, and highly extensible. Puter can be used as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A privacy-first personal cloud to keep all your files, apps, and games in one secure place, accessible from anywhere at any time.&lt;/li&gt; 
 &lt;li&gt;A platform for building and publishing websites, web apps, and games.&lt;/li&gt; 
 &lt;li&gt;An alternative to Dropbox, Google Drive, OneDrive, etc. with a fresh interface and powerful features.&lt;/li&gt; 
 &lt;li&gt;A remote desktop environment for servers and workstations.&lt;/li&gt; 
 &lt;li&gt;A friendly, open-source project and community to learn about web development, cloud computing, distributed systems, and much more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;💻 Local Development&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/HeyPuter/puter
cd puter
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;→&lt;/strong&gt; This should launch Puter at &lt;font color="red"&gt; &lt;a href="http://puter.localhost:4100"&gt;http://puter.localhost:4100&lt;/a&gt; (or the next available port). &lt;/font&gt;&lt;/p&gt; 
&lt;p&gt;If this does not work, see &lt;a href="https://raw.githubusercontent.com/HeyPuter/puter/main/doc/self-hosters/first-run-issues.md"&gt;First Run Issues&lt;/a&gt; for troubleshooting steps.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;🐳 Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mkdir puter &amp;amp;&amp;amp; cd puter &amp;amp;&amp;amp; mkdir -p puter/config puter/data &amp;amp;&amp;amp; sudo chown -R 1000:1000 puter &amp;amp;&amp;amp; docker run --rm -p 4100:4100 -v `pwd`/puter/config:/etc/puter -v `pwd`/puter/data:/var/puter  ghcr.io/heyputer/puter
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;→&lt;/strong&gt; This should launch Puter at &lt;font color="red"&gt; &lt;a href="http://puter.localhost:4100"&gt;http://puter.localhost:4100&lt;/a&gt; (or the next available port). &lt;/font&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;🐙 Docker Compose&lt;/h3&gt; 
&lt;h4&gt;Linux/macOS&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mkdir -p puter/config puter/data
sudo chown -R 1000:1000 puter
wget https://raw.githubusercontent.com/HeyPuter/puter/main/docker-compose.yml
docker compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;→&lt;/strong&gt; This should be available at &lt;font color="red"&gt; &lt;a href="http://puter.localhost:4100"&gt;http://puter.localhost:4100&lt;/a&gt; (or the next available port). &lt;/font&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h4&gt;Windows&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;mkdir -p puter
cd puter
New-Item -Path "puter\config" -ItemType Directory -Force
New-Item -Path "puter\data" -ItemType Directory -Force
Invoke-WebRequest -Uri "https://raw.githubusercontent.com/HeyPuter/puter/main/docker-compose.yml" -OutFile "docker-compose.yml"
docker compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;→&lt;/strong&gt; This should launch Puter at &lt;font color="red"&gt; &lt;a href="http://puter.localhost:4100"&gt;http://puter.localhost:4100&lt;/a&gt; (or the next available port). &lt;/font&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;🚀 Self-Hosting&lt;/h3&gt; 
&lt;p&gt;For detailed guides on self-hosting Puter, including configuration options and best practices, see our &lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/self-hosters/instructions.md"&gt;Self-Hosting Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;☁️ Puter.com&lt;/h3&gt; 
&lt;p&gt;Puter is available as a hosted service at &lt;a href="https://puter.com"&gt;&lt;strong&gt;puter.com&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Operating Systems:&lt;/strong&gt; Linux, macOS, Windows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RAM:&lt;/strong&gt; 2GB minimum (4GB recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Disk Space:&lt;/strong&gt; 1GB free space&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js:&lt;/strong&gt; Version 16+ (Version 23+ recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;npm:&lt;/strong&gt; Latest stable version&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Connect with the maintainers and community through these channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bug report or feature request? Please &lt;a href="https://github.com/HeyPuter/puter/issues/new/choose"&gt;open an issue&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Discord: &lt;a href="https://discord.com/invite/PQcx7Teh8u"&gt;discord.com/invite/PQcx7Teh8u&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;X (Twitter): &lt;a href="https://x.com/HeyPuter"&gt;x.com/HeyPuter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Reddit: &lt;a href="https://www.reddit.com/r/puter/"&gt;reddit.com/r/puter/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mastodon: &lt;a href="https://mastodon.social/@puter"&gt;mastodon.social/@puter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Security issues? &lt;a href="mailto:security@puter.com"&gt;security@puter.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Email maintainers at &lt;a href="mailto:hi@puter.com"&gt;hi@puter.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We are always happy to help you with any questions you may have. Don't hesitate to ask!&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository, including all its contents, sub-projects, modules, and components, is licensed under &lt;a href="https://github.com/HeyPuter/puter/raw/main/LICENSE.txt"&gt;AGPL-3.0&lt;/a&gt; unless explicitly stated otherwise. Third-party libraries included in this repository may be subject to their own licenses.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ar.md"&gt;Arabic / العربية&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.hy.md"&gt;Armenian / Հայերեն&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.bn.md"&gt;Bengali / বাংলা&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.zh.md"&gt;Chinese / 中文&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.da.md"&gt;Danish / Dansk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/README.md"&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.fa.md"&gt;Farsi / فارسی&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.fi.md"&gt;Finnish / Suomi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.fr.md"&gt;French / Français&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.de.md"&gt;German/ Deutsch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.he.md"&gt;Hebrew/ עברית&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.hi.md"&gt;Hindi / हिंदी&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.hu.md"&gt;Hungarian / Magyar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.id.md"&gt;Indonesian / Bahasa Indonesia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.it.md"&gt;Italian / Italiano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.jp.md"&gt;Japanese / 日本語&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ko.md"&gt;Korean / 한국어&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ml.md"&gt;Malayalam / മലയാളം&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.pl.md"&gt;Polish / Polski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.pt.md"&gt;Portuguese / Português&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ro.md"&gt;Romanian / Română&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ru.md"&gt;Russian / Русский&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.es.md"&gt;Spanish / Español&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.sv.md"&gt;Swedish / Svenska&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ta.md"&gt;Tamil / தமிழ்&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.te.md"&gt;Telugu / తెలుగు&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.th.md"&gt;Thai / ไทย&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.tr.md"&gt;Turkish / Türkçe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ua.md"&gt;Ukrainian / Українська&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ur.md"&gt;Urdu / اردو&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.vi.md"&gt;Vietnamese / Tiếng Việt&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>LeCoupa/awesome-cheatsheets</title>
      <link>https://github.com/LeCoupa/awesome-cheatsheets</link>
      <description>&lt;p&gt;👩‍💻👨‍💻 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://lecoupa.github.io/awesome-cheatsheets/"&gt;&lt;img src="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/_design/cover_github@2x.png" alt="AWESOME CHEATSHEETS LOGO" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://awesome.re"&gt;&lt;img src="https://awesome.re/badge.svg?sanitize=true" alt="Awesome" /&gt;&lt;/a&gt; &lt;a href="https://github.com/LeCoupa/awesome-cheatsheets/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="GitHub license" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WEBSITE DIRECTORY&lt;/strong&gt;: &lt;a href="https://lecoupa.github.io/awesome-cheatsheets/"&gt;Available here&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 Awesome cheatsheets for popular programming languages, frameworks and development tools. They include everything you should know in one single file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🤔 Why Awesome-Cheatsheets?&lt;/h2&gt; 
&lt;p&gt;I usually make a cheat sheet when I want to improve my skills in a programming language, a framework or a development tool. &lt;a href="https://gist.github.com/LeCoupa"&gt;I started doing these kinds of things a long time ago on Gist&lt;/a&gt;. To better keep track of the history and to let people contribute, I re-organized all of them into this single repository. Most of the content is coming from official documentation and some books I have read.&lt;/p&gt; 
&lt;p&gt;Feel free to take a look. You might learn new things. They have been designed to provide a quick way to assess your knowledge and to save you time.&lt;/p&gt; 
&lt;h2&gt;📚 Table of Contents&lt;/h2&gt; 
&lt;h3&gt;📃 Languages&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Command line interface&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/bash.sh"&gt;Bash&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Imperative&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C.txt"&gt;C&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/C%23.txt"&gt;C#&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/golang.md"&gt;Go&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/java.md"&gt;Java&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/php.php"&gt;PHP&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/python.md"&gt;Python&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Functional&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/languages/javascript.js"&gt;JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;📦 Backend&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;PHP&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/laravel.php"&gt;Laravel&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Python&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/django.py"&gt;Django&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Javascript&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/adonis.js"&gt;Adonis.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/express.js"&gt;Express.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/feathers.js"&gt;Feathers.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/moleculer.js"&gt;Moleculer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/node.js"&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/backend/sails.js"&gt;Sails.js&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🌐 Frontend&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Basics&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/html5.html"&gt;HTML5&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/css3.css"&gt;CSS3&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Frameworks&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/react.js"&gt;React.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/vue.js"&gt;Vue.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/tailwind.css"&gt;Tailwind.css&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/ember.js"&gt;Ember.js&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angular.js"&gt;Angular (2+)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/frontend/angularjs.js"&gt;AngularJS&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🗃️ Databases&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;SQL&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/mysql.sh"&gt;MySQL&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;NoSQL&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/databases/redis.sh"&gt;Redis&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h3&gt;🔧 Tools&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;View cheatsheets&lt;/summary&gt; 
 &lt;h4&gt;Development&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/curl.sh"&gt;cURL&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/drush.sh"&gt;Drush&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/elasticsearch.js"&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/emmet.md"&gt;Emmet&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/git.sh"&gt;Git&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/puppeteer.js"&gt;Puppeteer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/sublime_text.md"&gt;Sublime Text&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vim.txt"&gt;VIM&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/vscode.md"&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/xcode.txt"&gt;Xcode&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Infrastructure&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/aws.sh"&gt;AWS CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/docker.sh"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/heroku.sh"&gt;Heroku CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/kubernetes.md"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_boxfile.yml"&gt;Nanobox Boxfile&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nanobox_cli.sh"&gt;Nanobox CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/nginx.sh"&gt;Nginx&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/pm2.sh"&gt;PM2&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/ubuntu.sh"&gt;Ubuntu&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LeCoupa/awesome-cheatsheets/master/tools/firebase_cli.md"&gt;Firebase CLI&lt;/a&gt; &lt;/li&gt;
 &lt;/ul&gt;
&lt;/details&gt;   
&lt;h2&gt;🙌🏼 How to Contribute?&lt;/h2&gt; 
&lt;p&gt;You are more than welcome to contribute and build your own cheat sheet for your favorite programming language, framework or development tool. Just submit changes via pull request and I will review them before merging.&lt;/p&gt; 
&lt;h2&gt;👩‍💻👨‍💻 Our valuable Contributors&lt;/h2&gt; 
&lt;p align="center"&gt;&lt;a href="https://github.com/LeCoupa/awesome-cheatsheets/graphs/contributors"&gt; &lt;img src="https://contributors-img.web.app/image?repo=LeCoupa/awesome-cheatsheets" /&gt; &lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>asgeirtj/system_prompts_leaks</title>
      <link>https://github.com/asgeirtj/system_prompts_leaks</link>
      <description>&lt;p&gt;Collection of extracted System Prompts from popular chatbots like ChatGPT, Claude &amp; Gemini&lt;/p&gt;&lt;hr&gt;&lt;p&gt;NEW: 23 Aug 2025 &lt;a href="https://github.com/asgeirtj/system_prompts_leaks/raw/main/OpenAI/gpt-5-thinking.md"&gt;OpenAI/gpt-5-thinking.md &lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;System Prompts Leaks&lt;/h1&gt; 
&lt;p&gt;Collection of system message instructions for various publicly deployed chatbots.&lt;/p&gt; 
&lt;p&gt;Feel free to do PR's.&lt;/p&gt; 
&lt;p&gt;Please use discussions tabs for discussions not the Issues tab.&lt;/p&gt; 
&lt;p&gt;Discord username: asgeirtj&lt;br /&gt; X profile: &lt;a href="https://x.com/asgeirtj"&gt;https://x.com/asgeirtj&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#asgeirtj/system_prompts_leaks&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=asgeirtj/system_prompts_leaks&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>evershopcommerce/evershop</title>
      <link>https://github.com/evershopcommerce/evershop</link>
      <description>&lt;p&gt;🛍️ Typescript E-commerce Platform&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="60" height="68" alt="EverShop Logo" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/logo-green.png" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;EverShop&lt;/h1&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://evershop.io/docs/development/getting-started/introduction"&gt;Documentation&lt;/a&gt; | &lt;a href="https://demo.evershop.io/"&gt;Demo&lt;/a&gt; &lt;/h4&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/evershopcommerce/evershop/actions/workflows/build_test.yml/badge.svg?sanitize=true" alt="Github Action" /&gt; &lt;a href="https://twitter.com/evershopjs"&gt; &lt;img alt="Twitter Follow" src="https://img.shields.io/twitter/follow/evershopjs?style=social" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/GSzt7dt7RM"&gt; &lt;img src="https://img.shields.io/discord/757179260417867879?label=discord" alt="Discord" /&gt; &lt;/a&gt; &lt;a href="https://opensource.org/licenses/GPL-3.0"&gt; &lt;img src="https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true" alt="License" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="EverShop" width="950" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/banner.png" /&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;EverShop is a modern, TypeScript-first eCommerce platform built with GraphQL and React. Designed for developers, it offers essential commerce features in a modular, fully customizable architecture—perfect for building tailored shopping experiences with confidence and speed.&lt;/p&gt; 
&lt;h2&gt;Installation Using Docker&lt;/h2&gt; 
&lt;p&gt;You can get started with EverShop in minutes by using the Docker image. The Docker image is a great way to get started with EverShop without having to worry about installing dependencies or configuring your environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL https://raw.githubusercontent.com/evershopcommerce/evershop/main/docker-compose.yml &amp;gt; docker-compose.yml
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the full installation guide, please refer to our &lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/module/create-your-first-extension"&gt;Extension development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/theme/theme-overview"&gt;Theme development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Explore our demo store.&lt;/p&gt; 
&lt;p align="left"&gt; &lt;a href="https://demo.evershop.io/admin" target="_blank"&gt; &lt;img alt="EverShop Admin Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-back.png" /&gt; &lt;/a&gt; &lt;a href="https://demo.evershop.io/" target="_blank"&gt; &lt;img alt="EverShop Store Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-front.png" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;b&gt;Demo user:&lt;/b&gt; 
&lt;p&gt;Email: &lt;a href="mailto:demo@evershop.io"&gt;demo@evershop.io&lt;/a&gt;&lt;br /&gt; Password: 123456&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you like my work, feel free to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;⭐ this repository. It helps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fevershopcommerce%2Fevershop&amp;amp;text=Awesome%20React%20Ecommerce%20Project&amp;amp;hashtags=react,ecommerce,expressjs,graphql"&gt;&lt;img src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" alt="Tweet" /&gt;&lt;/a&gt; about EverShop. Thank you!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;EverShop is an open-source project. We are committed to a fully transparent development process and appreciate highly any contributions. Whether you are helping us fix bugs, proposing new features, improving our documentation or spreading the word - we would love to have you as part of the EverShop community.&lt;/p&gt; 
&lt;h3&gt;Ask a question about EverShop&lt;/h3&gt; 
&lt;p&gt;You can ask questions, and participate in discussions about EverShop-related topics in the EverShop Discord channel.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/GSzt7dt7RM"&gt;&lt;img src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/discord_banner_github.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create a bug report&lt;/h3&gt; 
&lt;p&gt;If you see an error message or run into an issue, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;create bug report&lt;/a&gt;. This effort is valued and it will help all EverShop users.&lt;/p&gt; 
&lt;h3&gt;Submit a feature request&lt;/h3&gt; 
&lt;p&gt;If you have an idea, or you're missing a capability that would make development easier and more robust, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;Submit feature request&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If a similar feature request already exists, don't forget to leave a "+1". If you add some more information such as your thoughts and vision about the feature, your comments will be embraced warmly :)&lt;/p&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/evershopcommerce/evershop/raw/main/LICENSE"&gt;GPL-3.0 License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HumanSignal/label-studio</title>
      <link>https://github.com/HumanSignal/label-studio</link>
      <description>&lt;p&gt;Label Studio is a multi-type data labeling and annotation tool with standardized output format&lt;/p&gt;&lt;hr&gt;&lt;img src="https://user-images.githubusercontent.com/12534576/192582340-4c9e4401-1fe6-4dbb-95bb-fdbba5493f61.png" /&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/license/heartexlabs/label-studio?logo=heartex" alt="GitHub" /&gt; &lt;img src="https://github.com/HumanSignal/label-studio/workflows/label-studio:build/badge.svg?sanitize=true" alt="label-studio:build" /&gt; &lt;img src="https://img.shields.io/github/v/release/heartexlabs/label-studio?include_prereleases" alt="GitHub release" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://labelstud.io/"&gt;Website&lt;/a&gt; • &lt;a href="https://labelstud.io/guide/"&gt;Docs&lt;/a&gt; • &lt;a href="https://slack.labelstud.io/?source=github-1"&gt;Join Slack Community &lt;img src="https://app.heartex.ai/docs/images/slack-mini.png" width="18px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is Label Studio?&lt;/h2&gt; 
&lt;!-- &lt;a href="https://labelstud.io/blog/release-130.html"&gt;&lt;img src="https://github.com/HumanSignal/label-studio/raw/master/docs/themes/htx/source/images/release-130/LS-Hits-v1.3.png" align="right" /&gt;&lt;/a&gt; --&gt; 
&lt;p&gt;Label Studio is an open source data labeling tool. It lets you label data types like audio, text, images, videos, and time series with a simple and straightforward UI and export to various model formats. It can be used to prepare raw data or improve existing training data to get more accurate ML models.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#try-out-label-studio"&gt;Try out Label Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#what-you-get-from-label-studio"&gt;What you get from Label Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#included-templates-for-labeling-data-in-label-studio"&gt;Included templates for labeling data in Label Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#set-up-machine-learning-models-with-Label-Studio"&gt;Set up machine learning models with Label Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#integrate-label-studio-with-your-existing-tools"&gt;Integrate Label Studio with your existing tools&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/images/annotation_examples.gif" alt="Gif of Label Studio annotating different types of data" /&gt;&lt;/p&gt; 
&lt;p&gt;Have a custom dataset? You can customize Label Studio to fit your needs. Read an &lt;a href="https://towardsdatascience.com/introducing-label-studio-a-swiss-army-knife-of-data-labeling-140c1be92881"&gt;introductory blog post&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Try out Label Studio&lt;/h2&gt; 
&lt;p&gt;Install Label Studio locally or deploy it in a cloud instance. &lt;a href="https://humansignal.com/platform/starter-cloud/"&gt;Or sign up for a free trial of our Starter Cloud edition!&lt;/a&gt; You can learn more about what each edition offers &lt;a href="https://labelstud.io/guide/label_studio_compare"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#install-locally-with-docker"&gt;Install locally with Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#run-with-docker-compose"&gt;Run with Docker Compose (Label Studio + Nginx + PostgreSQL)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#install-locally-with-pip"&gt;Install locally with pip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#install-locally-with-poetry"&gt;Install locally with poetry&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#install-locally-with-anaconda"&gt;Install locally with Anaconda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#install-for-local-development"&gt;Install for local development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/#deploy-in-a-cloud-instance"&gt;Deploy in a cloud instance&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Install locally with Docker&lt;/h3&gt; 
&lt;p&gt;Official Label Studio docker image is &lt;a href="https://hub.docker.com/r/heartexlabs/label-studio"&gt;here&lt;/a&gt; and it can be downloaded with &lt;code&gt;docker pull&lt;/code&gt;. Run Label Studio in a Docker container and access it at &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull heartexlabs/label-studio:latest
docker run -it -p 8080:8080 -v $(pwd)/mydata:/label-studio/data heartexlabs/label-studio:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find all the generated assets, including SQLite3 database storage &lt;code&gt;label_studio.sqlite3&lt;/code&gt; and uploaded files, in the &lt;code&gt;./mydata&lt;/code&gt; directory.&lt;/p&gt; 
&lt;h4&gt;Override default Docker install&lt;/h4&gt; 
&lt;p&gt;You can override the default launch command by appending the new arguments:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -it -p 8080:8080 -v $(pwd)/mydata:/label-studio/data heartexlabs/label-studio:latest label-studio --log-level DEBUG
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Build a local image with Docker&lt;/h4&gt; 
&lt;p&gt;If you want to build a local image, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t heartexlabs/label-studio:latest .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run with Docker Compose&lt;/h3&gt; 
&lt;p&gt;Docker Compose script provides production-ready stack consisting of the following components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Label Studio&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.nginx.com/"&gt;Nginx&lt;/a&gt; - proxy web server used to load various static data, including uploaded audio, images, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; - production-ready database that replaces less performant SQLite3.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To start using the app from &lt;code&gt;http://localhost&lt;/code&gt; run this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run with Docker Compose + MinIO&lt;/h3&gt; 
&lt;p&gt;You can also run it with an additional MinIO server for local S3 storage. This is particularly useful when you want to test the behavior with S3 storage on your local system. To start Label Studio in this way, you need to run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Add sudo on Linux if you are not a member of the docker group
docker compose -f docker-compose.yml -f docker-compose.minio.yml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you do not have a static IP address, you must create an entry in your hosts file so that both Label Studio and your browser can access the MinIO server. For more detailed instructions, please refer to &lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/docs/source/guide/storedata.md"&gt;our guide on storing data&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Install locally with pip&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Requires Python &amp;gt;=3.8
pip install label-studio

# Start the server at http://localhost:8080
label-studio
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install locally with poetry&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;### install poetry
pip install poetry

### set poetry environment
poetry new my-label-studio
cd my-label-studio
poetry add label-studio

### activate poetry environment
poetry shell

### Start the server at http://localhost:8080
label-studio
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install locally with Anaconda&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;conda create --name label-studio
conda activate label-studio
conda install psycopg2
pip install label-studio
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install for local development&lt;/h3&gt; 
&lt;p&gt;You can run the latest Label Studio version locally without installing the package from pypi.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install all package dependencies
pip install poetry
poetry install
# Run database migrations
python label_studio/manage.py migrate
python label_studio/manage.py collectstatic
# Start the server in development mode at http://localhost:8080
python label_studio/manage.py runserver
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Deploy in a cloud instance&lt;/h3&gt; 
&lt;p&gt;You can deploy Label Studio with one click in Heroku, Microsoft Azure, or Google Cloud Platform:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.heroku.com/deploy?template=https://github.com/HumanSignal/label-studio/tree/heroku-persistent-pg"&gt;&lt;img src="https://www.herokucdn.com/deploy/button.svg?sanitize=true" alt="Deploy" height="30px" /&gt;&lt;/a&gt; &lt;a href="https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Fhumansignal%2Flabel-studio%2Fdevelop%2Fazuredeploy.json"&gt;&lt;img src="https://aka.ms/deploytoazurebutton" height="30px" /&gt;&lt;/a&gt; &lt;a href="https://deploy.cloud.run"&gt;&lt;img src="https://deploy.cloud.run/button.svg?sanitize=true" height="30px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Apply frontend changes&lt;/h4&gt; 
&lt;p&gt;For information about updating the frontend, see &lt;a href="https://github.com/HumanSignal/label-studio/raw/develop/web/README.md#installation-instructions"&gt;label-studio/web/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Install dependencies on Windows&lt;/h4&gt; 
&lt;p&gt;To run Label Studio on Windows, download and install the following wheel packages from &lt;a href="https://www.lfd.uci.edu/~gohlke/pythonlibs"&gt;Gohlke builds&lt;/a&gt; to ensure you're using the correct version of Python:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml"&gt;lxml&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Upgrade pip 
pip install -U pip

# If you're running Win64 with Python 3.8, install the packages downloaded from Gohlke:
pip install lxml‑4.5.0‑cp38‑cp38‑win_amd64.whl

# Install label studio
pip install label-studio
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run test suite&lt;/h3&gt; 
&lt;p&gt;To add the tests' dependencies to your local install:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;poetry install --with test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, it is possible to run the unit tests from a Docker container in which the test dependencies are installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make build-testing-image
make docker-testing-shell
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In either case, to run the unit tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd label_studio

# sqlite3
DJANGO_DB=sqlite DJANGO_SETTINGS_MODULE=core.settings.label_studio pytest -vv

# postgres (assumes default postgres user,db,pass. Will not work in Docker
# testing container without additional configuration)
DJANGO_DB=default DJANGO_SETTINGS_MODULE=core.settings.label_studio pytest -vv
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What you get from Label Studio&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/525ad5ff-6904-4398-b507-7e8954268d69"&gt;https://github.com/user-attachments/assets/525ad5ff-6904-4398-b507-7e8954268d69&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-user labeling&lt;/strong&gt; sign up and login, when you create an annotation it's tied to your account.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple projects&lt;/strong&gt; to work on all your datasets in one instance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Streamlined design&lt;/strong&gt; helps you focus on your task, not how to use the software.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable label formats&lt;/strong&gt; let you customize the visual interface to meet your specific labeling needs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support for multiple data types&lt;/strong&gt; including images, audio, text, HTML, time-series, and video.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Import from files or from cloud storage&lt;/strong&gt; in Amazon AWS S3, Google Cloud Storage, or JSON, CSV, TSV, RAR, and ZIP archives.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integration with machine learning models&lt;/strong&gt; so that you can visualize and compare predictions from different models and perform pre-labeling.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Embed it in your data pipeline&lt;/strong&gt; REST API makes it easy to make it a part of your pipeline&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Included templates for labeling data in Label Studio&lt;/h2&gt; 
&lt;p&gt;Label Studio includes a variety of templates to help you label your data, or you can create your own using specifically designed configuration language. The most common templates and use cases for labeling include the following cases:&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/images/template-types.png" /&gt; 
&lt;h2&gt;Set up machine learning models with Label Studio&lt;/h2&gt; 
&lt;p&gt;Connect your favorite machine learning model using the Label Studio Machine Learning SDK. Follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start your own machine learning backend server. See &lt;a href="https://github.com/HumanSignal/label-studio-ml-backend"&gt;more detailed instructions&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Connect Label Studio to the server on the model page found in project settings.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This lets you:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Pre-label&lt;/strong&gt; your data using model predictions.&lt;/li&gt; 
 &lt;li&gt;Do &lt;strong&gt;online learning&lt;/strong&gt; and retrain your model while new annotations are being created.&lt;/li&gt; 
 &lt;li&gt;Do &lt;strong&gt;active learning&lt;/strong&gt; by labeling only the most complex examples in your data.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Integrate Label Studio with your existing tools&lt;/h2&gt; 
&lt;p&gt;You can use Label Studio as an independent part of your machine learning workflow or integrate the frontend or backend into your existing tools.&lt;/p&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Project&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;label-studio&lt;/td&gt; 
   &lt;td&gt;Server, distributed as a pip package&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/web/libs/editor/"&gt;Frontend library&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The Label Studio frontend library. This uses React to build the UI and mobx-state-tree for state management.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/web/libs/datamanager/"&gt;Data Manager library&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A library for the Data Manager, our data exploration tool.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/HumanSignal/label-studio-sdk/tree/master/src/label_studio_sdk/converter"&gt;label-studio-converter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Encode labels in the format of your favorite machine learning library&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/HumanSignal/label-studio-transformers"&gt;label-studio-transformers&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Transformers library connected and configured for use with Label Studio&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;Include a citation for Label Studio in the &lt;strong&gt;References&lt;/strong&gt; section of your articles:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-tex"&gt;@misc{Label Studio,
  title={{Label Studio}: Data labeling software},
  url={https://github.com/HumanSignal/label-studio},
  note={Open source software available from https://github.com/HumanSignal/label-studio},
  author={
    Maxim Tkachenko and
    Mikhail Malyuk and
    Andrey Holmanyuk and
    Nikolai Liubimov},
  year={2020-2025},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This software is licensed under the &lt;a href="https://raw.githubusercontent.com/HumanSignal/label-studio/develop/LICENSE"&gt;Apache 2.0 LICENSE&lt;/a&gt; © &lt;a href="https://www.heartex.com/"&gt;Heartex&lt;/a&gt;. 2020-2025&lt;/p&gt; 
&lt;img src="https://user-images.githubusercontent.com/12534576/192582529-cf628f58-abc5-479b-a0d4-8a3542a4b35e.png" title="Hey everyone!" width="180" /&gt;</description>
    </item>
    
    <item>
      <title>vercel/next.js</title>
      <link>https://github.com/vercel/next.js</link>
      <description>&lt;p&gt;The React Framework&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://nextjs.org"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://assets.vercel.com/image/upload/v1662130559/nextjs/Icon_dark_background.png" /&gt; 
   &lt;img alt="Next.js logo" src="https://assets.vercel.com/image/upload/v1662130559/nextjs/Icon_light_background.png" height="128" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
 &lt;h1&gt;Next.js&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://vercel.com"&gt;&lt;img alt="Vercel logo" src="https://img.shields.io/badge/MADE%20BY%20Vercel-000000.svg?style=for-the-badge&amp;amp;logo=Vercel&amp;amp;labelColor=000" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/next"&gt;&lt;img alt="NPM version" src="https://img.shields.io/npm/v/next.svg?style=for-the-badge&amp;amp;labelColor=000000" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vercel/next.js/raw/canary/license.md"&gt;&lt;img alt="License" src="https://img.shields.io/npm/l/next.svg?style=for-the-badge&amp;amp;labelColor=000000" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vercel/next.js/discussions"&gt;&lt;img alt="Join the community on GitHub" src="https://img.shields.io/badge/Join%20the%20community-blueviolet.svg?style=for-the-badge&amp;amp;logo=Next.js&amp;amp;labelColor=000000&amp;amp;logoWidth=20" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Used by some of the world's largest companies, Next.js enables you to create full-stack web applications by extending the latest React features, and integrating powerful Rust-based JavaScript tooling for the fastest builds.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visit our &lt;a href="https://nextjs.org/learn"&gt;Learn Next.js&lt;/a&gt; course to get started with Next.js.&lt;/li&gt; 
 &lt;li&gt;Visit the &lt;a href="https://nextjs.org/showcase"&gt;Next.js Showcase&lt;/a&gt; to see more sites built with Next.js.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://nextjs.org/docs"&gt;https://nextjs.org/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Next.js community can be found on &lt;a href="https://github.com/vercel/next.js/discussions"&gt;GitHub Discussions&lt;/a&gt; where you can ask questions, voice ideas, and share your projects with other people.&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the Next.js &lt;a href="https://nextjs.org/discord"&gt;Discord&lt;/a&gt; server.&lt;/p&gt; 
&lt;p&gt;Do note that our &lt;a href="https://github.com/vercel/next.js/raw/canary/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; applies to all Next.js community channels. Users are &lt;strong&gt;highly encouraged&lt;/strong&gt; to read and adhere to it to avoid repercussions.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions to Next.js are welcome and highly appreciated. However, before you jump right into it, we would like you to review our &lt;a href="https://raw.githubusercontent.com/vercel/next.js/canary/contributing.md"&gt;Contribution Guidelines&lt;/a&gt; to make sure you have a smooth experience contributing to Next.js.&lt;/p&gt; 
&lt;h3&gt;Good First Issues:&lt;/h3&gt; 
&lt;p&gt;We have a list of &lt;strong&gt;&lt;a href="https://github.com/vercel/next.js/labels/%22good%20first%20issue%22"&gt;good first issues&lt;/a&gt;&lt;/strong&gt; that contain bugs that have a relatively limited scope. This is a great place for newcomers and beginners alike to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you believe you have found a security vulnerability in Next.js, we encourage you to &lt;strong&gt;&lt;em&gt;responsibly disclose this and NOT open a public issue&lt;/em&gt;&lt;/strong&gt;. We will investigate all legitimate reports.&lt;/p&gt; 
&lt;p&gt;Our preference is that you make use of GitHub's private vulnerability reporting feature to disclose potential security vulnerabilities in our Open Source Software. To do this, please visit &lt;a href="https://github.com/vercel/next.js/security"&gt;https://github.com/vercel/next.js/security&lt;/a&gt; and click the "Report a vulnerability" button.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>open-webui/open-webui</title>
      <link>https://github.com/open-webui/open-webui</link>
      <description>&lt;p&gt;User-friendly AI Interface (Supports Ollama, OpenAI API, ...)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open WebUI 👋&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/stars/open-webui/open-webui?style=social" alt="GitHub stars" /&gt; &lt;img src="https://img.shields.io/github/forks/open-webui/open-webui?style=social" alt="GitHub forks" /&gt; &lt;img src="https://img.shields.io/github/watchers/open-webui/open-webui?style=social" alt="GitHub watchers" /&gt; &lt;img src="https://img.shields.io/github/repo-size/open-webui/open-webui" alt="GitHub repo size" /&gt; &lt;img src="https://img.shields.io/github/languages/count/open-webui/open-webui" alt="GitHub language count" /&gt; &lt;img src="https://img.shields.io/github/languages/top/open-webui/open-webui" alt="GitHub top language" /&gt; &lt;img src="https://img.shields.io/github/last-commit/open-webui/open-webui?color=red" alt="GitHub last commit" /&gt; &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;&lt;img src="https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/tjbck"&gt;&lt;img src="https://img.shields.io/static/v1?label=Sponsor&amp;amp;message=%E2%9D%A4&amp;amp;logo=GitHub&amp;amp;color=%23fe8e86" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Open WebUI is an &lt;a href="https://docs.openwebui.com/features/plugin/"&gt;extensible&lt;/a&gt;, feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.&lt;/strong&gt; It supports various LLM runners like &lt;strong&gt;Ollama&lt;/strong&gt; and &lt;strong&gt;OpenAI-compatible APIs&lt;/strong&gt;, with &lt;strong&gt;built-in inference engine&lt;/strong&gt; for RAG, making it a &lt;strong&gt;powerful AI deployment solution&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Passionate about open-source AI? &lt;a href="https://careers.openwebui.com/"&gt;Join our team →&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/open-webui/open-webui/main/demo.gif" alt="Open WebUI Demo" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;br /&gt; &lt;strong&gt;Looking for an &lt;a href="https://docs.openwebui.com/enterprise"&gt;Enterprise Plan&lt;/a&gt;?&lt;/strong&gt; – &lt;strong&gt;&lt;a href="mailto:sales@openwebui.com"&gt;Speak with Our Sales Team Today!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Get &lt;strong&gt;enhanced capabilities&lt;/strong&gt;, including &lt;strong&gt;custom theming and branding&lt;/strong&gt;, &lt;strong&gt;Service Level Agreement (SLA) support&lt;/strong&gt;, &lt;strong&gt;Long-Term Support (LTS) versions&lt;/strong&gt;, and &lt;strong&gt;more!&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For more information, be sure to check out our &lt;a href="https://docs.openwebui.com/"&gt;Open WebUI Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Key Features of Open WebUI ⭐&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🚀 &lt;strong&gt;Effortless Setup&lt;/strong&gt;: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both &lt;code&gt;:ollama&lt;/code&gt; and &lt;code&gt;:cuda&lt;/code&gt; tagged images.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🤝 &lt;strong&gt;Ollama/OpenAI API Integration&lt;/strong&gt;: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with &lt;strong&gt;LMStudio, GroqCloud, Mistral, OpenRouter, and more&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🛡️ &lt;strong&gt;Granular Permissions and User Groups&lt;/strong&gt;: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔄 &lt;strong&gt;SCIM 2.0 Support&lt;/strong&gt;: Enterprise-grade user and group provisioning through SCIM 2.0 protocol, enabling seamless integration with identity providers like Okta, Azure AD, and Google Workspace for automated user lifecycle management.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📱 &lt;strong&gt;Responsive Design&lt;/strong&gt;: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📱 &lt;strong&gt;Progressive Web App (PWA) for Mobile&lt;/strong&gt;: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;✒️🔢 &lt;strong&gt;Full Markdown and LaTeX Support&lt;/strong&gt;: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🎤📹 &lt;strong&gt;Hands-Free Voice/Video Call&lt;/strong&gt;: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🛠️ &lt;strong&gt;Model Builder&lt;/strong&gt;: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through &lt;a href="https://openwebui.com/"&gt;Open WebUI Community&lt;/a&gt; integration.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🐍 &lt;strong&gt;Native Python Function Calling Tool&lt;/strong&gt;: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📚 &lt;strong&gt;Local RAG Integration&lt;/strong&gt;: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the &lt;code&gt;#&lt;/code&gt; command before a query.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔍 &lt;strong&gt;Web Search for RAG&lt;/strong&gt;: Perform web searches using providers like &lt;code&gt;SearXNG&lt;/code&gt;, &lt;code&gt;Google PSE&lt;/code&gt;, &lt;code&gt;Brave Search&lt;/code&gt;, &lt;code&gt;serpstack&lt;/code&gt;, &lt;code&gt;serper&lt;/code&gt;, &lt;code&gt;Serply&lt;/code&gt;, &lt;code&gt;DuckDuckGo&lt;/code&gt;, &lt;code&gt;TavilySearch&lt;/code&gt;, &lt;code&gt;SearchApi&lt;/code&gt; and &lt;code&gt;Bing&lt;/code&gt; and inject the results directly into your chat experience.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🌐 &lt;strong&gt;Web Browsing Capability&lt;/strong&gt;: Seamlessly integrate websites into your chat experience using the &lt;code&gt;#&lt;/code&gt; command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🎨 &lt;strong&gt;Image Generation Integration&lt;/strong&gt;: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI's DALL-E (external), enriching your chat experience with dynamic visual content.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;⚙️ &lt;strong&gt;Many Models Conversations&lt;/strong&gt;: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔐 &lt;strong&gt;Role-Based Access Control (RBAC)&lt;/strong&gt;: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🌐🌍 &lt;strong&gt;Multilingual Support&lt;/strong&gt;: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We're actively seeking contributors!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🧩 &lt;strong&gt;Pipelines, Open WebUI Plugin Support&lt;/strong&gt;: Seamlessly integrate custom logic and Python libraries into Open WebUI using &lt;a href="https://github.com/open-webui/pipelines"&gt;Pipelines Plugin Framework&lt;/a&gt;. Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. &lt;a href="https://github.com/open-webui/pipelines/tree/main/examples"&gt;Examples&lt;/a&gt; include &lt;strong&gt;Function Calling&lt;/strong&gt;, User &lt;strong&gt;Rate Limiting&lt;/strong&gt; to control access, &lt;strong&gt;Usage Monitoring&lt;/strong&gt; with tools like Langfuse, &lt;strong&gt;Live Translation with LibreTranslate&lt;/strong&gt; for multilingual support, &lt;strong&gt;Toxic Message Filtering&lt;/strong&gt; and much more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🌟 &lt;strong&gt;Continuous Updates&lt;/strong&gt;: We are committed to improving Open WebUI with regular updates, fixes, and new features.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Want to learn more about Open WebUI's features? Check out our &lt;a href="https://docs.openwebui.com/features"&gt;Open WebUI documentation&lt;/a&gt; for a comprehensive overview!&lt;/p&gt; 
&lt;h2&gt;Sponsors 🙌&lt;/h2&gt; 
&lt;h4&gt;Emerald&lt;/h4&gt; 
&lt;table&gt; 
 &lt;!-- &lt;tr&gt;
    &lt;td&gt;
      &lt;a href="https://n8n.io/" target="_blank"&gt;
        &lt;img src="https://docs.openwebui.com/sponsors/logos/n8n.png" alt="n8n" style="width: 8rem; height: 8rem; border-radius: .75rem;" /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href="https://n8n.io/"&gt;n8n&lt;/a&gt; • Does your interface have a backend yet?&lt;br&gt;Try &lt;a href="https://n8n.io/"&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt; --&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;amp;utm_medium=paid-ad-placement&amp;amp;utm_campaign=OpenWebUI-Docs" target="_blank"&gt; &lt;img src="https://docs.openwebui.com/sponsors/logos/tailscale.png" alt="Tailscale" style="width: 8rem; height: 8rem; border-radius: .75rem;" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;amp;utm_medium=paid-ad-placement&amp;amp;utm_campaign=OpenWebUI-Docs"&gt;Tailscale&lt;/a&gt; • Connect self-hosted AI to any device with Tailscale &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://warp.dev/open-webui" target="_blank"&gt; &lt;img src="https://docs.openwebui.com/sponsors/logos/warp.png" alt="Warp" style="width: 8rem; height: 8rem; border-radius: .75rem;" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://warp.dev/open-webui"&gt;Warp&lt;/a&gt; • The intelligent terminal for developers &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;p&gt;We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!&lt;/p&gt; 
&lt;h2&gt;How to Install 🚀&lt;/h2&gt; 
&lt;h3&gt;Installation via Python pip 🐍&lt;/h3&gt; 
&lt;p&gt;Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you're using &lt;strong&gt;Python 3.11&lt;/strong&gt; to avoid compatibility issues.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Open WebUI&lt;/strong&gt;: Open your terminal and run the following command to install Open WebUI:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install open-webui
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Running Open WebUI&lt;/strong&gt;: After installation, you can start Open WebUI by executing:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;open-webui serve
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This will start the Open WebUI server, which you can access at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Quick Start with Docker 🐳&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on &lt;a href="https://docs.openwebui.com/"&gt;Open WebUI Documentation&lt;/a&gt; is ready to assist you.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] When using Docker to install Open WebUI, make sure to include the &lt;code&gt;-v open-webui:/app/backend/data&lt;/code&gt; in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;br /&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either &lt;code&gt;:cuda&lt;/code&gt; or &lt;code&gt;:ollama&lt;/code&gt;. To enable CUDA, you must install the &lt;a href="https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/"&gt;Nvidia CUDA container toolkit&lt;/a&gt; on your Linux/WSL system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Installation with Default Configuration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;If Ollama is on your computer&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;If Ollama is on a Different Server&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;p&gt;To connect to Ollama on another server, change the &lt;code&gt;OLLAMA_BASE_URL&lt;/code&gt; to the server's URL:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;To run Open WebUI with Nvidia GPU support&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation for OpenAI API Usage Only&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;If you're only using OpenAI API&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installing Open WebUI with Bundled Ollama Support&lt;/h3&gt; 
&lt;p&gt;This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;With GPU Support&lt;/strong&gt;: Utilize GPU resources by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For CPU Only&lt;/strong&gt;: If you're not using a GPU, use this command instead:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.&lt;/p&gt; 
&lt;p&gt;After installation, you can access Open WebUI at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;. Enjoy! 😄&lt;/p&gt; 
&lt;h3&gt;Other Installation Methods&lt;/h3&gt; 
&lt;p&gt;We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our &lt;a href="https://docs.openwebui.com/getting-started/"&gt;Open WebUI Documentation&lt;/a&gt; or join our &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;Discord community&lt;/a&gt; for comprehensive guidance.&lt;/p&gt; 
&lt;p&gt;Look at the &lt;a href="https://docs.openwebui.com/getting-started/advanced-topics/development"&gt;Local Development Guide&lt;/a&gt; for instructions on setting up a local development environment.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;Encountering connection issues? Our &lt;a href="https://docs.openwebui.com/troubleshooting/"&gt;Open WebUI Documentation&lt;/a&gt; has got you covered. For further assistance and to join our vibrant community, visit the &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;Open WebUI Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Open WebUI: Server Connection Error&lt;/h4&gt; 
&lt;p&gt;If you're experiencing connection issues, it’s often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the &lt;code&gt;--network=host&lt;/code&gt; flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example Docker Command&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Keeping Your Docker Installation Up-to-Date&lt;/h3&gt; 
&lt;p&gt;In case you want to update your local Docker installation to the latest version, you can do it with &lt;a href="https://containrrr.dev/watchtower/"&gt;Watchtower&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the last part of the command, replace &lt;code&gt;open-webui&lt;/code&gt; with your container name if it is different.&lt;/p&gt; 
&lt;p&gt;Check our Updating Guide available in our &lt;a href="https://docs.openwebui.com/getting-started/updating"&gt;Open WebUI Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Using the Dev Branch 🌙&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The &lt;code&gt;:dev&lt;/code&gt; branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the &lt;code&gt;:dev&lt;/code&gt; tag like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Offline Mode&lt;/h3&gt; 
&lt;p&gt;If you are running Open WebUI in an offline environment, you can set the &lt;code&gt;HF_HUB_OFFLINE&lt;/code&gt; environment variable to &lt;code&gt;1&lt;/code&gt; to prevent attempts to download models from the internet.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export HF_HUB_OFFLINE=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What's Next? 🌟&lt;/h2&gt; 
&lt;p&gt;Discover upcoming features on our roadmap in the &lt;a href="https://docs.openwebui.com/roadmap/"&gt;Open WebUI Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License 📜&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/open-webui/open-webui/main/LICENSE"&gt;Open WebUI License&lt;/a&gt;, a revised BSD-3-Clause license. You receive all the same rights as the classic BSD-3 license: you can use, modify, and distribute the software, including in proprietary and commercial products, with minimal restrictions. The only additional requirement is to preserve the "Open WebUI" branding, as detailed in the LICENSE file. For full terms, see the &lt;a href="https://raw.githubusercontent.com/open-webui/open-webui/main/LICENSE"&gt;LICENSE&lt;/a&gt; document. 📄&lt;/p&gt; 
&lt;h2&gt;Support 💬&lt;/h2&gt; 
&lt;p&gt;If you have any questions, suggestions, or need assistance, please open an issue or join our &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;Open WebUI Discord community&lt;/a&gt; to connect with us! 🤝&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://star-history.com/#open-webui/open-webui&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=open-webui/open-webui&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=open-webui/open-webui&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=open-webui/open-webui&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;p&gt;Created by &lt;a href="https://github.com/tjbck"&gt;Timothy Jaeryang Baek&lt;/a&gt; - Let's make Open WebUI even more amazing together! 💪&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ai-shifu/ChatALL</title>
      <link>https://github.com/ai-shifu/ChatALL</link>
      <description>&lt;p&gt;Concurrently chat with ChatGPT, Bing Chat, Bard, Alpaca, Vicuna, Claude, ChatGLM, MOSS, 讯飞星火, 文心一言 and more, discover the best answers&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/src/assets/logo-cover.png" width="256" /&gt; 
 &lt;p&gt;&lt;strong&gt;Chat with ALL AI Bots Concurrently, Discover the Best&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_DE-DE.md"&gt;Deutsch&lt;/a&gt; | English | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_ES-ES.md"&gt;Español&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_FR-FR.md"&gt;Français&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_IT-IT.md"&gt;Italian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_JA-JP.md"&gt;日本語&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_KO-KR.md"&gt;한국어&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_RU-RU.md"&gt;Русский&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_VI-VN.md"&gt;Tiếng Việt&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/README_ZH-CN.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://codespaces.new/ai-shifu/ChatALL"&gt;&lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Open in GitHub Codespaces" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ai-shifu/ChatALL/main/screenshots/screenshot-1.png?raw=true" alt="Screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Large Language Models (LLMs) based AI bots are amazing. However, their behavior can be random and different bots excel at different tasks. If you want the best experience, don't try them one by one. ChatALL (Chinese name: 齐叨) can send prompt to several AI bots concurrently, help you to discover the best results. All you need to do is &lt;a href="https://github.com/ai-shifu/ChatALL/releases"&gt;download, install&lt;/a&gt; and ask.&lt;/p&gt; 
&lt;h3&gt;Is this you?&lt;/h3&gt; 
&lt;p&gt;Typical users of ChatALL are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🤠&lt;strong&gt;Gurus of LLMs&lt;/strong&gt;, who want to find the best answers or creations from LLMs.&lt;/li&gt; 
 &lt;li&gt;🤓&lt;strong&gt;Researchers of LLMs&lt;/strong&gt;, who want to intuitively compare the strengths and weaknesses of various LLMs in different fields.&lt;/li&gt; 
 &lt;li&gt;😎&lt;strong&gt;Developers of LLM applications&lt;/strong&gt;, who want to quickly debug prompts and find the best-performing foundation models.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported bots&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;AI Bots&lt;/th&gt; 
   &lt;th&gt;Web Access&lt;/th&gt; 
   &lt;th&gt;API&lt;/th&gt; 
   &lt;th&gt;Notes&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://ai.360.cn/"&gt;360 AI Brain&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://yiyan.baidu.com/"&gt;Baidu ERNIE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://character.ai/"&gt;Character.AI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://chatglm.cn/"&gt;ChatGLM2 6B &amp;amp; 130B&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;No Login required&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://chatgpt.com"&gt;ChatGPT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Web Browsing, Azure OpenAI service included&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.anthropic.com/claude"&gt;Claude&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://ai.meta.com/blog/code-llama-large-language-model-coding/"&gt;Code Llama&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://cohere.com/blog/aya23"&gt;Cohere Aya 23&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://cohere.com/command"&gt;Cohere Command R Models&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://copilot.microsoft.com/"&gt;Copilot&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://ai.dedao.cn/"&gt;Dedao Learning Assistant&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Coming soon&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://huggingface.co/tiiuae/falcon-180B-chat"&gt;Falcon 180B&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://gemini.google.com/"&gt;Gemini&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://blog.google/technology/developers/gemma-open-models/"&gt;Gemma 2B &amp;amp; 7B&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://gradio.app/"&gt;Gradio&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;For Hugging Face space/self-deployed models&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://console.groq.com/docs/models"&gt;Groq Cloud&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://huggingface.co/chat/"&gt;HuggingChat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://xinghuo.xfyun.cn/"&gt;iFLYTEK SPARK&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Coming soon&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://kimi.moonshot.cn/"&gt;Kimi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://ai.meta.com/llama/"&gt;Llama 2 13B &amp;amp; 70B&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://moss.fastnlp.top/"&gt;MOSS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.perplexity.ai/"&gt;Perplexity&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.phind.com/"&gt;Phind&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://pi.ai"&gt;Pi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://poe.com/"&gt;Poe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Coming soon&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://neice.tiangong.cn/"&gt;SkyWork&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Coming soon&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://tongyi.aliyun.com/"&gt;Tongyi Qianwen&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Coming soon&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://lmsys.org/blog/2023-03-30-vicuna/"&gt;Vicuna 13B &amp;amp; 33B&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;No Login required&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/nlpxucan/WizardLM"&gt;WizardLM 70B&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://x.ai"&gt;xAI Grok&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://you.com/"&gt;YouChat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://you.com/"&gt;You&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://huggingface.co/spaces/HuggingFaceH4/zephyr-chat"&gt;Zephyr&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;More is coming. Upvote your favorite bots in &lt;a href="https://github.com/ai-shifu/ChatALL/labels/more%20LLMs"&gt;these issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Note on Web-connected Bot Reliability&lt;/h3&gt; 
&lt;p&gt;Web-connected AI bots (those marked with "Web Access") are inherently less reliable and frequently face stability issues, as service providers regularly update their web interfaces and security measures. These web-based connections rely on reverse engineering and are difficult to maintain, often breaking unexpectedly. For a dependable experience, we strongly recommend using bots that offer API access whenever possible.&lt;/p&gt; 
&lt;h3&gt;Other features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Quick-prompt mode: send the next prompt without waiting for the previous request to complete&lt;/li&gt; 
 &lt;li&gt;Save chat history locally, protect your privacy&lt;/li&gt; 
 &lt;li&gt;Highlight the response you like, delete the bad&lt;/li&gt; 
 &lt;li&gt;Enable/disable any bots at any time&lt;/li&gt; 
 &lt;li&gt;Switch between one, two, or three-column view&lt;/li&gt; 
 &lt;li&gt;Auto update to the latest version&lt;/li&gt; 
 &lt;li&gt;Dark mode (contributed by @tanchekwei)&lt;/li&gt; 
 &lt;li&gt;Short keys. Press &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;/&lt;/kbd&gt; to know all of them (contributed by @tanchekwei)&lt;/li&gt; 
 &lt;li&gt;Multiple chats (contributed by @tanchekwei)&lt;/li&gt; 
 &lt;li&gt;Proxy setting (contributed by @msaong)&lt;/li&gt; 
 &lt;li&gt;Prompt management (contributed by @tanchekwei)&lt;/li&gt; 
 &lt;li&gt;Supports multiple languages (Chinese, English, German, French, Russian, Vietnamese, Korean, Japanese, Spanish, Italian)&lt;/li&gt; 
 &lt;li&gt;Supports Windows, macOS and Linux&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Planned features:&lt;/p&gt; 
&lt;p&gt;You are welcome to contribute to these features.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Deploy front-end to GitHub Pages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;All chat history, settings and login data are saved locally on your computer.&lt;/p&gt; 
&lt;p&gt;ChatALL collects anonymous usage data to help us improve the product. Including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Which AI bots are prompted and how long the prompt is. Not including the prompt content.&lt;/li&gt; 
 &lt;li&gt;How long the response is, and which response is deleted/highlighted. Not including the response content.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;ChatALL is a client, not a proxy. Therefore, you must:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Have working accounts and/or API tokens for the bots.&lt;/li&gt; 
 &lt;li&gt;Have reliable network connections to the bots.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Download / Install&lt;/h2&gt; 
&lt;p&gt;Download from &lt;a href="https://github.com/ai-shifu/ChatALL/releases"&gt;https://github.com/ai-shifu/ChatALL/releases&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;On Windows&lt;/h3&gt; 
&lt;p&gt;Just download the *-win.exe file and proceed with the setup.&lt;/p&gt; 
&lt;h3&gt;On macOS&lt;/h3&gt; 
&lt;p&gt;For Apple Silicon Mac (M1, M2 CPU), download the *-mac-arm64.dmg file.&lt;/p&gt; 
&lt;p&gt;For other Macs, download *-mac-x64.dmg file.&lt;/p&gt; 
&lt;p&gt;If you are using &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;, you can also install it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install --cask chatall
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Linux&lt;/h3&gt; 
&lt;p&gt;Debian-based Distributions: Download the .deb file, double click it and install the software. Arch-based Distributions: You can clone ChatALL from the AUR &lt;a href="https://aur.archlinux.org/packages/chatall-bin"&gt;here&lt;/a&gt;. You can install it manually or using an AUR helper like yay or paru. Other Distributions: Download the .AppImage file, make it executable, and enjoy the click-to-run experience. You can also use &lt;a href="https://github.com/TheAssassin/AppImageLauncher"&gt;AppimageLauncher&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you encounter any problems while using ChatALL, you can try the following methods to resolve them:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Refresh&lt;/strong&gt; - press &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;R&lt;/kbd&gt; or &lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;R&lt;/kbd&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Restart&lt;/strong&gt; - exit ChatALL and run it again.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Re-login&lt;/strong&gt; - click the settings button in the upper right corner, then click the corresponding login/logout link to relogin the website.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create a new chat&lt;/strong&gt; - click the &lt;code&gt;New Chat&lt;/code&gt; button and send prompt again.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If none of the above methods work, you can try &lt;strong&gt;resetting ChatALL&lt;/strong&gt;. Note that this will delete all your settings and message history.&lt;/p&gt; 
&lt;p&gt;You can reset ChatALL by deleting the following directories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows: &lt;code&gt;C:\Users\&amp;lt;user&amp;gt;\AppData\Roaming\chatall\&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Linux: &lt;code&gt;/home/&amp;lt;user&amp;gt;/.config/chatall/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;macOS: &lt;code&gt;/Users/&amp;lt;user&amp;gt;/Library/Application Support/chatall/&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the problem persists, please &lt;a href="https://github.com/ai-shifu/ChatALL/issues"&gt;submit an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;For developers&lt;/h2&gt; 
&lt;h3&gt;Contribute a Bot&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/ai-shifu/ChatALL/wiki/%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84-AI-%E5%AF%B9%E8%AF%9D%E6%9C%BA%E5%99%A8%E4%BA%BA"&gt;The guide&lt;/a&gt; may help you.&lt;/p&gt; 
&lt;h3&gt;Run&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
npm run electron:serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build&lt;/h3&gt; 
&lt;p&gt;Build for your current platform:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run electron:build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build for all platforms:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run electron:build -- -wml --x64 --arm64
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;a href="https://github.com/ai-shifu/ChatALL/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=ai-shifu/ChatALL" /&gt; &lt;/a&gt; 
&lt;h3&gt;Others&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;GPT-4 contributed much of the code&lt;/li&gt; 
 &lt;li&gt;ChatGPT, Copilot and Google provide many solutions (ranked in order)&lt;/li&gt; 
 &lt;li&gt;Inspired by &lt;a href="https://github.com/chathub-dev/chathub"&gt;ChatHub&lt;/a&gt;. Respect!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sponsor&lt;/h2&gt; 
&lt;p&gt;If you like this project, please consider:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://ko-fi.com/F1F8KZJGJ"&gt;&lt;img src="https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true" alt="ko-fi" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WebKit/WebKit</title>
      <link>https://github.com/WebKit/WebKit</link>
      <description>&lt;p&gt;Home of the WebKit project, the browser engine used by Safari, Mail, App Store and many other applications on macOS, iOS and Linux.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WebKit&lt;/h1&gt; 
&lt;p&gt;WebKit is a cross-platform web browser engine. On iOS and macOS, it powers Safari, Mail, Apple Books, and many other applications. For more information about WebKit, see the &lt;a href="https://webkit.org/"&gt;WebKit project website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Trying the Latest&lt;/h2&gt; 
&lt;p&gt;On macOS, &lt;a href="https://webkit.org/downloads/"&gt;download Safari Technology Preview&lt;/a&gt; to test the latest version of WebKit. On Linux, download &lt;a href="https://webkitgtk.org/epiphany-tech-preview"&gt;Epiphany Technology Preview&lt;/a&gt;. On Windows, you'll have to build it yourself.&lt;/p&gt; 
&lt;h2&gt;Reporting Bugs&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://bugs.webkit.org/query.cgi?format=specific&amp;amp;product=WebKit"&gt;Search WebKit Bugzilla&lt;/a&gt; to see if there is an existing report for the bug you've encountered.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bugs.webkit.org/createaccount.cgi"&gt;Create a Bugzilla account&lt;/a&gt; to report bugs (and comment on them) if you haven't done so already.&lt;/li&gt; 
 &lt;li&gt;File a bug in accordance with &lt;a href="https://webkit.org/bug-report-guidelines/"&gt;our guidelines&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Once your bug is filed, you will receive email when it is updated at each stage in the &lt;a href="https://webkit.org/bug-life-cycle"&gt;bug life cycle&lt;/a&gt;. After the bug is considered fixed, you may be asked to download the &lt;a href="https://webkit.org/nightly"&gt;latest nightly&lt;/a&gt; and confirm that the fix works for you.&lt;/p&gt; 
&lt;h2&gt;Getting the Code&lt;/h2&gt; 
&lt;p&gt;Run the following command to clone WebKit's Git repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/WebKit/WebKit.git WebKit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can enable &lt;a href="https://git-scm.com/docs/git-config#Documentation/git-config.txt-corefsmonitor"&gt;git fsmonitor&lt;/a&gt; to make many git commands faster (such as &lt;code&gt;git status&lt;/code&gt;) with &lt;code&gt;git config core.fsmonitor true&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Building WebKit&lt;/h2&gt; 
&lt;h3&gt;Building for Apple platforms&lt;/h3&gt; 
&lt;p&gt;Install Xcode and its command line tools if you haven't done so already:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Install Xcode&lt;/strong&gt; Get Xcode from &lt;a href="https://developer.apple.com/downloads"&gt;https://developer.apple.com/downloads&lt;/a&gt;. To build WebKit for OS X, Xcode 5.1.1 or later is required. To build WebKit for iOS Simulator, Xcode 7 or later is required.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Install the Xcode Command Line Tools&lt;/strong&gt; In Terminal, run the command: &lt;code&gt;xcode-select --install&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Run the following command to build a macOS debug build with debugging symbols and assertions:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Tools/Scripts/build-webkit --debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For performance testing, and other purposes, use &lt;code&gt;--release&lt;/code&gt; instead. If you also need debug symbols (dSYMs), run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Tools/Scripts/build-webkit --release DEBUG_INFORMATION_FORMAT=dwarf-with-dsym 
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Embedded Builds&lt;/h4&gt; 
&lt;p&gt;To build for an embedded platform like iOS, tvOS, or watchOS, pass a platform argument to &lt;code&gt;build-webkit&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example, to build a debug build with debugging symbols and assertions for embedded simulators:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Tools/Scripts/build-webkit --debug --&amp;lt;platform&amp;gt;-simulator
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or embedded devices:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Tools/Scripts/build-webkit --debug --&amp;lt;platform&amp;gt;-device
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where &lt;code&gt;platform&lt;/code&gt; is &lt;code&gt;ios&lt;/code&gt;, &lt;code&gt;tvos&lt;/code&gt; or &lt;code&gt;watchos&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Using Xcode&lt;/h4&gt; 
&lt;p&gt;You can open &lt;code&gt;WebKit.xcworkspace&lt;/code&gt; to build and debug WebKit within Xcode. Select the "Everything up to WebKit + Tools" scheme to build the entire project.&lt;/p&gt; 
&lt;p&gt;If you don't use a custom build location in Xcode preferences, you have to update the workspace settings to use &lt;code&gt;WebKitBuild&lt;/code&gt; directory. In menu bar, choose File &amp;gt; Workspace Settings, then click the Advanced button, select "Custom", "Relative to Workspace", and enter &lt;code&gt;WebKitBuild&lt;/code&gt; for both Products and Intermediates.&lt;/p&gt; 
&lt;h3&gt;Building the GTK Port&lt;/h3&gt; 
&lt;p&gt;For production builds:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cmake -DPORT=GTK -DCMAKE_BUILD_TYPE=RelWithDebInfo -GNinja
ninja
sudo ninja install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For development builds:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Tools/gtk/install-dependencies
Tools/Scripts/update-webkitgtk-libs
Tools/Scripts/build-webkit --gtk --debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on building WebKitGTK, see the &lt;a href="https://trac.webkit.org/wiki/BuildingGtk"&gt;wiki page&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Building the WPE Port&lt;/h3&gt; 
&lt;p&gt;For production builds:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cmake -DPORT=WPE -DCMAKE_BUILD_TYPE=RelWithDebInfo -GNinja
ninja
sudo ninja install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For development builds:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Tools/wpe/install-dependencies
Tools/Scripts/update-webkitwpe-libs
Tools/Scripts/build-webkit --wpe --debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building Windows Port&lt;/h3&gt; 
&lt;p&gt;For building WebKit on Windows, see the &lt;a href="https://docs.webkit.org/Ports/WindowsPort.html"&gt;WebKit on Windows page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Running WebKit&lt;/h2&gt; 
&lt;h3&gt;With Safari and Other macOS Applications&lt;/h3&gt; 
&lt;p&gt;Run the following command to launch Safari with your local build of WebKit:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Tools/Scripts/run-safari --debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;run-safari&lt;/code&gt; script sets the &lt;code&gt;DYLD_FRAMEWORK_PATH&lt;/code&gt; environment variable to point to your build products, and then launches &lt;code&gt;/Applications/Safari.app&lt;/code&gt;. &lt;code&gt;DYLD_FRAMEWORK_PATH&lt;/code&gt; tells the system loader to prefer your build products over the frameworks installed in &lt;code&gt;/System/Library/Frameworks&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To run other applications with your local build of WebKit, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Tools/Scripts/run-webkit-app &amp;lt;application-path&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;iOS Simulator&lt;/h3&gt; 
&lt;p&gt;Run the following command to launch iOS simulator with your local build of WebKit:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;run-safari --debug --ios-simulator
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In both cases, if you have built release builds instead, use &lt;code&gt;--release&lt;/code&gt; instead of &lt;code&gt;--debug&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To run other applications, for example MobileMiniBrowser, with your local build of WebKit, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;Tools/Scripts/run-webkit-app --debug --iphone-simulator &amp;lt;application-path&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Using Xcode&lt;/h4&gt; 
&lt;p&gt;Open &lt;code&gt;WebKit.xcworkspace&lt;/code&gt;, select intended scheme such as MobileMiniBrowser and an iOS simulator as target, click run.&lt;/p&gt; 
&lt;h3&gt;Linux Ports&lt;/h3&gt; 
&lt;p&gt;If you have a development build, you can use the &lt;code&gt;run-minibrowser&lt;/code&gt; script, e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;run-minibrowser --debug --wpe
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pass one of &lt;code&gt;--gtk&lt;/code&gt;, &lt;code&gt;--jsc-only&lt;/code&gt;, or &lt;code&gt;--wpe&lt;/code&gt; to indicate the port to use.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;Congratulations! You’re up and running. Now you can begin coding in WebKit and contribute your fixes and new features to the project. For details on submitting your code to the project, read &lt;a href="https://webkit.org/contributing-code/"&gt;Contributing Code&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tw93/Pake</title>
      <link>https://github.com/tw93/Pake</link>
      <description>&lt;p&gt;🤱🏻 Turn any webpage into a desktop app with Rust. 🤱🏻 利用 Rust 轻松构建轻量级多端桌面应用&lt;/p&gt;&lt;hr&gt;&lt;h4 align="right"&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/README_CN.md"&gt;简体中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/README_JP.md"&gt;日本語&lt;/a&gt;&lt;/h4&gt; 
&lt;p align="center"&gt; &lt;img src="https://gw.alipayobjects.com/zos/k/fa/logo-modified.png" width="138/" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Pake&lt;/h1&gt; 
&lt;p align="center"&gt;&lt;strong&gt;Turn any webpage into a desktop app with Rust &lt;em&gt;with ease&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://twitter.com/HiTw93" target="_blank"&gt; &lt;img alt="twitter" src="https://img.shields.io/badge/follow-Tw93-red?style=flat-square&amp;amp;logo=Twitter" /&gt;&lt;/a&gt; 
 &lt;a href="https://t.me/+GclQS9ZnxyI2ODQ1" target="_blank"&gt; &lt;img alt="telegram" src="https://img.shields.io/badge/chat-telegram-blueviolet?style=flat-square&amp;amp;logo=Telegram" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/tw93/Pake/releases" target="_blank"&gt; &lt;img alt="GitHub downloads" src="https://img.shields.io/github/downloads/tw93/Pake/total.svg?style=flat-square" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/tw93/Pake/commits" target="_blank"&gt; &lt;img alt="GitHub commit" src="https://img.shields.io/github/commit-activity/m/tw93/Pake?style=flat-square" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/tw93/Pake/issues?q=is%3Aissue+is%3Aclosed" target="_blank"&gt; &lt;img alt="GitHub closed issues" src="https://img.shields.io/github/issues-closed/tw93/Pake.svg?style=flat-square" /&gt;&lt;/a&gt; 
 &lt;a href="https://colab.research.google.com/drive/1bX345znvDZ30848xjRtpgtU8eypWwXrp?usp=sharing" target="_blank"&gt; &lt;img alt="Open in Colab" src="https://colab.research.google.com/assets/colab-badge.svg?sanitize=true" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="left"&gt;
 Pake supports Mac, Windows, and Linux. Check out README for 
 &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#popular-packages"&gt;Popular Packages&lt;/a&gt;, 
 &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#command-line-packaging"&gt;Command-Line Packaging&lt;/a&gt;, and 
 &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#development"&gt;Customized Development&lt;/a&gt; information. Feel free to share your suggestions in 
 &lt;a href="https://github.com/tw93/Pake/discussions"&gt;Discussions&lt;/a&gt;.
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎐 Nearly 20 times smaller than an Electron package (around 5M!)&lt;/li&gt; 
 &lt;li&gt;🚀 With Rust Tauri, Pake is much more lightweight and faster than JS-based frameworks.&lt;/li&gt; 
 &lt;li&gt;📦 Battery-included package — shortcut pass-through, immersive windows, and minimalist customization.&lt;/li&gt; 
 &lt;li&gt;🖱️ Smart right-click context menus with download support for images, videos, and files.&lt;/li&gt; 
 &lt;li&gt;👻 Pake is just a simple tool — replaces the old bundle approach with Tauri (though PWA is also a good alternative).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Popular Packages&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;WeRead &lt;a href="https://github.com/tw93/Pake/releases/latest/download/WeRead.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/WeRead_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/WeRead_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Twitter &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Twitter.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Twitter_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Twitter_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/WeRead.jpg" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Twitter.jpg" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Grok &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Grok.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Grok_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Grok_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;DeepSeek &lt;a href="https://github.com/tw93/Pake/releases/latest/download/DeepSeek.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/DeepSeek_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/DeepSeek_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Grok.png" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/DeepSeek.png" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ChatGPT &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ChatGPT.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ChatGPT_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ChatGPT_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Gemini &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Gemini.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Gemini_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Gemini_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/ChatGPT.png" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Gemini.png" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YouTube Music &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTubeMusic.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTubeMusic_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTubeMusic_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;YouTube &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTube.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTube_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTube_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/YouTubeMusic.png" width="600" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/YouTube.jpg" width="600" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LiZhi &lt;a href="https://github.com/tw93/Pake/releases/latest/download/LiZhi.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/LiZhi_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/LiZhi_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;ProgramMusic &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ProgramMusic.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ProgramMusic_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ProgramMusic_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/LiZhi.jpg" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/ProgramMusic.jpg" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Excalidraw &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Excalidraw.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Excalidraw_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Excalidraw_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;XiaoHongShu &lt;a href="https://github.com/tw93/Pake/releases/latest/download/XiaoHongShu.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/XiaoHongShu_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/XiaoHongShu_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Excalidraw.png" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/XiaoHongShu.png" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt;🏂 You can download more applications from &lt;a href="https://github.com/tw93/Pake/releases"&gt;Releases&lt;/a&gt;. &lt;b&gt;Click here to expand the shortcuts reference!&lt;/b&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Mac&lt;/th&gt; 
    &lt;th&gt;Windows/Linux&lt;/th&gt; 
    &lt;th&gt;Function&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;[&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;←&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Return to the previous page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;]&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Go to the next page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;↑&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;↑&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Auto scroll to top of page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;↓&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;↓&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Auto scroll to bottom of page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;r&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;r&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Refresh Page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;w&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;w&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Hide window, not quit&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Zoom out the page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;+&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;+&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Zoom in the page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;=&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;=&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Zoom in the Page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;0&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;0&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Reset the page zoom&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;In addition, double-click the title bar to switch to full-screen mode. For Mac users, you can also use the gesture to go to the previous or next page and drag the title bar to move the window.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Before starting&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;For beginners&lt;/strong&gt;: Play with Popular Packages to find out Pake's capabilities, or try to pack your application with &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/github-actions-usage.md"&gt;GitHub Actions&lt;/a&gt;. Don't hesitate to reach for assistance at &lt;a href="https://github.com/tw93/Pake/discussions"&gt;Discussion&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;For developers&lt;/strong&gt;: “Command-Line Packaging” supports macOS fully. For Windows/Linux users, it requires some tinkering. &lt;a href="https://tauri.app/start/prerequisites/"&gt;Configure your environment&lt;/a&gt; before getting started.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;For hackers&lt;/strong&gt;: For people who are good at both front-end development and Rust, how about customizing your apps' function more with the following &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#development"&gt;Customized Development&lt;/a&gt;?&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Command-Line Packaging&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/pake.gif" alt="Pake" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Pake provides a command line tool, making the flow of package customization quicker and easier. See the &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/cli-usage.md"&gt;CLI usage guide&lt;/a&gt; for more information.&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Recommended (pnpm)
pnpm install -g pake-cli

# Alternative (npm)
npm install -g pake-cli

# Command usage
pake url [OPTIONS]...

# Feel free to play with Pake! It might take a while to prepare the environment the first time you launch Pake.
pake https://weekly.tw93.fun --name Weekly --hide-title-bar
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are new to the command line, you can compile packages online with &lt;em&gt;GitHub Actions&lt;/em&gt;. See our &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#documentation"&gt;documentation&lt;/a&gt; for detailed guides.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Prepare your environment before starting. Make sure you have Rust &lt;code&gt;&amp;gt;=1.89&lt;/code&gt; and Node &lt;code&gt;&amp;gt;=18&lt;/code&gt; (e.g., &lt;code&gt;22.11.0&lt;/code&gt;) installed on your computer. &lt;em&gt;Note: Latest stable versions are recommended.&lt;/em&gt; For installation guidance, see &lt;a href="https://tauri.app/start/prerequisites/"&gt;Tauri documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are unfamiliar with these, it is better to try out the above tool to pack with one click.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Install dependencies
pnpm i

# Local development (right-click to open debug mode)
pnpm run dev

# Build application
pnpm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/cli-usage.md"&gt;CLI Usage&lt;/a&gt;&lt;/strong&gt; | &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/cli-usage_CN.md"&gt;中文&lt;/a&gt; - Command-line interface reference&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/advanced-usage.md"&gt;Advanced Usage&lt;/a&gt;&lt;/strong&gt; | &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/advanced-usage_CN.md"&gt;中文&lt;/a&gt; - Customization and advanced features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/github-actions-usage.md"&gt;GitHub Actions&lt;/a&gt;&lt;/strong&gt; | &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/github-actions-usage_CN.md"&gt;中文&lt;/a&gt; - Build apps online&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/pake-action.md"&gt;Pake Action&lt;/a&gt;&lt;/strong&gt; - Use Pake as GitHub Action in your projects&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;&lt;/strong&gt; - How to contribute to development&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Developers&lt;/h2&gt; 
&lt;p&gt;Pake's development can not be without these Hackers. They contributed a lot of capabilities for Pake. Also, welcome to follow them! ❤️&lt;/p&gt; 
&lt;!-- readme: contributors -start --&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/tw93"&gt; &lt;img src="https://avatars.githubusercontent.com/u/8736212?v=4" width="90;" alt="tw93" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Tw93&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Tlntin"&gt; &lt;img src="https://avatars.githubusercontent.com/u/28218658?v=4" width="90;" alt="Tlntin" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Tlntin&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/jeasonnow"&gt; &lt;img src="https://avatars.githubusercontent.com/u/16950207?v=4" width="90;" alt="jeasonnow" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Santree&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/pan93412"&gt; &lt;img src="https://avatars.githubusercontent.com/u/28441561?v=4" width="90;" alt="pan93412" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Pan93412&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/stone-w4tch3r"&gt; &lt;img src="https://avatars.githubusercontent.com/u/100294019?v=4" width="90;" alt="stone-w4tch3r" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Данил Бизимов&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/wanghanzhen"&gt; &lt;img src="https://avatars.githubusercontent.com/u/25301012?v=4" width="90;" alt="wanghanzhen" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Volare&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/liby"&gt; &lt;img src="https://avatars.githubusercontent.com/u/38807139?v=4" width="90;" alt="liby" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Bryan Lee&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/essesoul"&gt; &lt;img src="https://avatars.githubusercontent.com/u/58624474?v=4" width="90;" alt="essesoul" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Essesoul&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/YangguangZhou"&gt; &lt;img src="https://avatars.githubusercontent.com/u/61733195?v=4" width="90;" alt="YangguangZhou" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Jerry Zhou&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/AielloChan"&gt; &lt;img src="https://avatars.githubusercontent.com/u/7900765?v=4" width="90;" alt="AielloChan" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Aiello&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/m1911star"&gt; &lt;img src="https://avatars.githubusercontent.com/u/4948120?v=4" width="90;" alt="m1911star" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Horus&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Pake-Actions"&gt; &lt;img src="https://avatars.githubusercontent.com/u/126550811?v=4" width="90;" alt="Pake-Actions" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Pake Actions&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/GoodbyeNJN"&gt; &lt;img src="https://avatars.githubusercontent.com/u/6856639?v=4" width="90;" alt="GoodbyeNJN" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;GoodbyeNJN&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/kittizz"&gt; &lt;img src="https://avatars.githubusercontent.com/u/62899732?v=4" width="90;" alt="kittizz" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Kittizz&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/mattbajorek"&gt; &lt;img src="https://avatars.githubusercontent.com/u/17235301?v=4" width="90;" alt="mattbajorek" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Matt Bajorek&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/vaddisrinivas"&gt; &lt;img src="https://avatars.githubusercontent.com/u/38348871?v=4" width="90;" alt="vaddisrinivas" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Srinivas Vaddi&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/QingZ11"&gt; &lt;img src="https://avatars.githubusercontent.com/u/38887077?v=4" width="90;" alt="QingZ11" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Steam&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Tianj0o"&gt; &lt;img src="https://avatars.githubusercontent.com/u/68584284?v=4" width="90;" alt="Tianj0o" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Qitianjia&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/xinyii"&gt; &lt;img src="https://avatars.githubusercontent.com/u/17895104?v=4" width="90;" alt="xinyii" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Yi Xin&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/g1eny0ung"&gt; &lt;img src="https://avatars.githubusercontent.com/u/15034155?v=4" width="90;" alt="g1eny0ung" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Yue Yang&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/lkieryan"&gt; &lt;img src="https://avatars.githubusercontent.com/u/187804088?v=4" width="90;" alt="lkieryan" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Kieran&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/exposir"&gt; &lt;img src="https://avatars.githubusercontent.com/u/33340988?v=4" width="90;" alt="exposir" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;孟世博&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/2nthony"&gt; &lt;img src="https://avatars.githubusercontent.com/u/19513289?v=4" width="90;" alt="2nthony" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;2nthony&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/ACGNnsj"&gt; &lt;img src="https://avatars.githubusercontent.com/u/22112141?v=4" width="90;" alt="ACGNnsj" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/imabutahersiddik"&gt; &lt;img src="https://avatars.githubusercontent.com/u/138387257?v=4" width="90;" alt="imabutahersiddik" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Abu Taher Siddik&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/kidylee"&gt; &lt;img src="https://avatars.githubusercontent.com/u/841310?v=4" width="90;" alt="kidylee" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;An Li&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/nekomeowww"&gt; &lt;img src="https://avatars.githubusercontent.com/u/11081491?v=4" width="90;" alt="nekomeowww" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Ayaka Neko&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/turkyden"&gt; &lt;img src="https://avatars.githubusercontent.com/u/24560160?v=4" width="90;" alt="turkyden" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Dengju Deng&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/fvn-elmy"&gt; &lt;img src="https://avatars.githubusercontent.com/u/71275745?v=4" width="90;" alt="fvn-elmy" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Fabien&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Fechin"&gt; &lt;img src="https://avatars.githubusercontent.com/u/2541482?v=4" width="90;" alt="Fechin" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Fechin&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/ImgBotApp"&gt; &lt;img src="https://avatars.githubusercontent.com/u/31427850?v=4" width="90;" alt="ImgBotApp" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Imgbot&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/droid-Q"&gt; &lt;img src="https://avatars.githubusercontent.com/u/708277?v=4" width="90;" alt="droid-Q" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Jiaqi Gu&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Jason6987"&gt; &lt;img src="https://avatars.githubusercontent.com/u/140222795?v=4" width="90;" alt="Jason6987" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Luminall&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Milo123459"&gt; &lt;img src="https://avatars.githubusercontent.com/u/50248166?v=4" width="90;" alt="Milo123459" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Milo&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/princemaple"&gt; &lt;img src="https://avatars.githubusercontent.com/u/1329716?v=4" width="90;" alt="princemaple" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Po Chen&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/beautifulrem"&gt; &lt;img src="https://avatars.githubusercontent.com/u/98527099?v=4" width="90;" alt="beautifulrem" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Xie Ruiqi&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/bocanhcam"&gt; &lt;img src="https://avatars.githubusercontent.com/u/35592955?v=4" width="90;" alt="bocanhcam" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/geekvest"&gt; &lt;img src="https://avatars.githubusercontent.com/u/126322776?v=4" width="90;" alt="geekvest" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/houhoz"&gt; &lt;img src="https://avatars.githubusercontent.com/u/19684376?v=4" width="90;" alt="houhoz" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Hyzhao&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/lakca"&gt; &lt;img src="https://avatars.githubusercontent.com/u/16255922?v=4" width="90;" alt="lakca" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/liudonghua123"&gt; &lt;img src="https://avatars.githubusercontent.com/u/2276718?v=4" width="90;" alt="liudonghua123" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Liudonghua&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/liusishan"&gt; &lt;img src="https://avatars.githubusercontent.com/u/33129823?v=4" width="90;" alt="liusishan" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Liusishan&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/piaoyidage"&gt; &lt;img src="https://avatars.githubusercontent.com/u/5135405?v=4" width="90;" alt="piaoyidage" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Ranger&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/hetz"&gt; &lt;img src="https://avatars.githubusercontent.com/u/820141?v=4" width="90;" alt="hetz" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;贺天卓&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
 &lt;tbody&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- readme: contributors -end --&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;I have two cats, TangYuan and Coke. If you think Pake delights your life, you can feed them &lt;a href="https://miaoyan.app/cats.html?name=Pake" target="_blank"&gt;some canned food 🥩&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you like Pake, you can star it on GitHub. Also, welcome to &lt;a href="https://twitter.com/intent/tweet?url=https://github.com/tw93/Pake&amp;amp;text=%23Pake%20-%20A%20simple%20Rust%20packaged%20web%20pages%20to%20generate%20Mac%20App%20tool,%20compared%20to%20traditional%20Electron%20package,%20the%20size%20of%20nearly%2040%20times%20smaller,%20generally%20about%202M,%20the%20underlying%20use%20of%20Tauri,%20performance%20experience%20than%20the%20JS%20framework%20is%20much%20lighter~"&gt;recommend Pake&lt;/a&gt; to your friends.&lt;/li&gt; 
 &lt;li&gt;You can follow my &lt;a href="https://twitter.com/HiTw93"&gt;Twitter&lt;/a&gt; to get the latest news of Pake or join our &lt;a href="https://t.me/+GclQS9ZnxyI2ODQ1"&gt;Telegram&lt;/a&gt; chat group.&lt;/li&gt; 
 &lt;li&gt;I hope that you enjoy playing with it. Let us know if you find a website that would be great for a Mac App!&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>anuraghazra/github-readme-stats</title>
      <link>https://github.com/anuraghazra/github-readme-stats</link>
      <description>&lt;p&gt;⚡ Dynamically generated stats for your github readmes&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img width="100px" src="https://res.cloudinary.com/anuraghazra/image/upload/v1594908242/logo_ccswme.svg?sanitize=true" align="center" alt="GitHub Readme Stats" /&gt; &lt;/p&gt;
&lt;h2 align="center"&gt;GitHub Readme Stats&lt;/h2&gt; 
&lt;p align="center"&gt;Get dynamically generated GitHub stats on your READMEs!&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/actions"&gt; &lt;img alt="Tests Passing" src="https://github.com/anuraghazra/github-readme-stats/workflows/Test/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/graphs/contributors"&gt; &lt;img alt="GitHub Contributors" src="https://img.shields.io/github/contributors/anuraghazra/github-readme-stats" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/anuraghazra/github-readme-stats"&gt; &lt;img alt="Tests Coverage" src="https://codecov.io/gh/anuraghazra/github-readme-stats/branch/master/graph/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues"&gt; &lt;img alt="Issues" src="https://img.shields.io/github/issues/anuraghazra/github-readme-stats?color=0088ff" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/pulls"&gt; &lt;img alt="GitHub pull requests" src="https://img.shields.io/github/issues-pr/anuraghazra/github-readme-stats?color=0088ff" /&gt; &lt;/a&gt; &lt;a href="https://securityscorecards.dev/viewer/?uri=github.com/anuraghazra/github-readme-stats"&gt; &lt;img alt="OpenSSF Scorecard" src="https://api.securityscorecards.dev/projects/github.com/anuraghazra/github-readme-stats/badge" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://vercel.com?utm\_source=github\_readme\_stats\_team\&amp;amp;utm\_campaign=oss"&gt; &lt;img src="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#all-demos"&gt;View Demo&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.yml"&gt;Report Bug&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.yml"&gt;Request Feature&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/1770"&gt;FAQ&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/new?category=q-a"&gt;Ask Question&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt;Love the project? Please consider &lt;a href="https://www.paypal.me/anuraghazra"&gt;donating&lt;/a&gt; to help it improve!&lt;/p&gt; 
&lt;a href="https://indiafightscorona.giveindia.org"&gt; &lt;img src="https://cfstatic.give.do/logo.png" alt="Give india logo" width="200" /&gt; &lt;/a&gt; 
&lt;p&gt;Are you considering supporting the project by donating to me? Please DO NOT!!!&lt;/p&gt; 
&lt;img src="https://cfstatic.give.do/910ede2a-7892-43fe-8c8a-dea45e96d950.webp" alt="Picture of Coromandel Express train tragedy" width="35%" /&gt; 
&lt;p&gt;India has recently suffered one of the most devastating train accidents, and your help will be immensely valuable for the people who were affected by this tragedy.&lt;/p&gt; 
&lt;p&gt;Please visit &lt;a href="https://give.do/fundraisers/stand-beside-the-victims-of-the-coromandel-express-train-tragedy-in-odisha-donate-now"&gt;this link&lt;/a&gt; and make a small donation to help the people in need. A small donation goes a long way. &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h1&gt;Features 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-stats-card"&gt;GitHub Stats Card&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hiding-individual-stats"&gt;Hiding individual stats&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-additional-individual-stats"&gt;Showing additional individual stats&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-icons"&gt;Showing icons&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes"&gt;Themes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization"&gt;Customization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-extra-pins"&gt;GitHub Extra Pins&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-gist-pins"&gt;GitHub Gist Pins&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage-1"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-1"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#top-languages-card"&gt;Top Languages Card&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage-2"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#exclude-individual-repositories"&gt;Exclude individual repositories&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-individual-languages"&gt;Hide individual languages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#show-more-languages"&gt;Show more languages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#compact-language-card-layout"&gt;Compact Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#donut-chart-language-card-layout"&gt;Donut Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#donut-vertical-chart-language-card-layout"&gt;Donut Vertical Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#pie-chart-language-card-layout"&gt;Pie Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-progress-bars"&gt;Hide Progress Bars&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-2"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#wakatime-stats-card"&gt;WakaTime Stats Card&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-3"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#all-demos"&gt;All Demos&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#quick-tip-align-the-cards"&gt;Quick Tip (Align The Cards)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;Deploy on your own&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#on-vercel"&gt;On Vercel&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#film_projector-check-out-step-by-step-video-tutorial-by-codestackr"&gt;&lt;span&gt;📽&lt;/span&gt; Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#on-other-platforms"&gt;On other platforms&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections"&gt;Disable rate limit protections&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#keep-your-fork-up-to-date"&gt;Keep your fork up to date&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#sparkling_heart-support-the-project"&gt;&lt;span&gt;💖&lt;/span&gt; Support the project&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Important Notices 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; Since the GitHub API only &lt;a href="https://docs.github.com/en/graphql/overview/resource-limitations"&gt;allows 5k requests per hour per user account&lt;/a&gt;, the public Vercel instance hosted on &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471"&gt;#1471&lt;/a&gt;). We use caching to prevent this from happening (see &lt;a href="https://github.com/anuraghazra/github-readme-stats#common-options"&gt;https://github.com/anuraghazra/github-readme-stats#common-options&lt;/a&gt;). You can turn off these rate limit protections by deploying &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections"&gt;your own Vercel instance&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img alt="Uptime Badge" src="https://img.shields.io/endpoint?url=https%3A%2F%2Fgithub-readme-stats-git-monitoring-github-readme-stats-team.vercel.app%2Fapi%2Fstatus%2Fup%3Ftype%3Dshields" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; We're a small team, and to prioritize, we rely on upvotes &lt;span&gt;👍&lt;/span&gt;. We use the Top Issues dashboard for tracking community demand (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1935"&gt;#1935&lt;/a&gt;). Do not hesitate to upvote the issues and pull requests you are interested in. We will work on the most upvoted first.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;GitHub Stats Card&lt;/h1&gt; 
&lt;p&gt;Copy and paste this into your markdown, and that's it. Simple!&lt;/p&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your GitHub username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; By default, the stats card only shows statistics like stars, commits, and pull requests from public repositories. To show private statistics on the stats card, you should &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; using your own GitHub API token.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Available ranks are S (top 1%), A+ (12.5%), A (25%), A- (37.5%), B+ (50%), B (62.5%), B- (75%), C+ (87.5%) and C (everyone). This ranking scheme is based on the &lt;a href="https://wikipedia.org/wiki/Academic_grading_in_Japan"&gt;Japanese academic grading&lt;/a&gt; system. The global percentile is calculated as a weighted sum of percentiles for each statistic (number of commits, pull requests, reviews, issues, stars, and followers), based on the cumulative distribution function of the &lt;a href="https://wikipedia.org/wiki/exponential_distribution"&gt;exponential&lt;/a&gt; and the &lt;a href="https://wikipedia.org/wiki/Log-normal_distribution"&gt;log-normal&lt;/a&gt; distributions. The implementation can be investigated at &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/master/src/calculateRank.js"&gt;src/calculateRank.js&lt;/a&gt;. The circle around the rank shows 100 minus the global percentile.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Hiding individual stats&lt;/h3&gt; 
&lt;p&gt;You can pass a query parameter &lt;code&gt;&amp;amp;hide=&lt;/code&gt; to hide any specific stats with comma-separated values.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;hide=stars,commits,prs,issues,contribs&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,prs)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing additional individual stats&lt;/h3&gt; 
&lt;p&gt;You can pass a query parameter &lt;code&gt;&amp;amp;show=&lt;/code&gt; to show any specific additional stats with comma-separated values.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing icons&lt;/h3&gt; 
&lt;p&gt;To enable icons, you can pass &lt;code&gt;&amp;amp;show_icons=true&lt;/code&gt; in the query param, like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;p&gt;With inbuilt themes, you can customize the look of the card without doing any &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization"&gt;manual customization&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;&amp;amp;theme=THEME_NAME&lt;/code&gt; parameter like so :&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;All inbuilt themes&lt;/h4&gt; 
&lt;p&gt;GitHub Readme Stats comes with several built-in themes (e.g. &lt;code&gt;dark&lt;/code&gt;, &lt;code&gt;radical&lt;/code&gt;, &lt;code&gt;merko&lt;/code&gt;, &lt;code&gt;gruvbox&lt;/code&gt;, &lt;code&gt;tokyonight&lt;/code&gt;, &lt;code&gt;onedark&lt;/code&gt;, &lt;code&gt;cobalt&lt;/code&gt;, &lt;code&gt;synthwave&lt;/code&gt;, &lt;code&gt;highcontrast&lt;/code&gt;, &lt;code&gt;dracula&lt;/code&gt;).&lt;/p&gt; 
&lt;img src="https://res.cloudinary.com/anuraghazra/image/upload/v1595174536/grs-themes_l4ynja.png" alt="GitHub Readme Stats Themes" width="600px" /&gt; 
&lt;p&gt;You can look at a preview for &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;all available themes&lt;/a&gt; or checkout the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/index.js"&gt;theme config file&lt;/a&gt;. Please note that we paused the addition of new themes to decrease maintenance efforts; all pull requests related to new themes will be closed.&lt;/p&gt; 
&lt;h4&gt;Responsive Card Theme&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats#responsive-card-theme#gh-dark-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only" alt="Anurag's GitHub stats-Dark" /&gt;&lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats#responsive-card-theme#gh-light-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only" alt="Anurag's GitHub stats-Light" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Since GitHub will re-upload the cards and serve them from their &lt;a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/about-anonymized-urls"&gt;CDN&lt;/a&gt;, we can not infer the browser/GitHub theme on the server side. There are, however, four methods you can use to create dynamics themes on the client side.&lt;/p&gt; 
&lt;h5&gt;Use the transparent theme&lt;/h5&gt; 
&lt;p&gt;We have included a &lt;code&gt;transparent&lt;/code&gt; theme that has a transparent background. This theme is optimized to look good on GitHub's dark and light default themes. You can enable this theme using the &lt;code&gt;&amp;amp;theme=transparent&lt;/code&gt; parameter like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=transparent)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=transparent" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Add transparent alpha channel to a themes bg_color&lt;/h5&gt; 
&lt;p&gt;You can use the &lt;code&gt;bg_color&lt;/code&gt; parameter to make any of &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;the available themes&lt;/a&gt; transparent. This is done by setting the &lt;code&gt;bg_color&lt;/code&gt; to a color with a transparent alpha channel (i.e. &lt;code&gt;bg_color=00000000&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;bg_color=00000000)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;bg_color=00000000" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Use GitHub's theme context tag&lt;/h5&gt; 
&lt;p&gt;You can use &lt;a href="https://github.blog/changelog/2021-11-24-specify-theme-context-for-images-in-markdown/"&gt;GitHub's theme context&lt;/a&gt; tags to switch the theme based on the user GitHub theme automatically. This is done by appending &lt;code&gt;#gh-dark-mode-only&lt;/code&gt; or &lt;code&gt;#gh-light-mode-only&lt;/code&gt; to the end of an image URL. This tag will define whether the image specified in the markdown is only shown to viewers using a light or a dark GitHub theme:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Anurag's GitHub stats-Dark](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only)
[![Anurag's GitHub stats-Light](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only" alt="Anurag's GitHub stats-Dark" /&gt;&lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only" alt="Anurag's GitHub stats-Light" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Use GitHub's new media feature&lt;/h5&gt; 
&lt;p&gt;You can use &lt;a href="https://github.blog/changelog/2022-05-19-specify-theme-context-for-images-in-markdown-beta/"&gt;GitHub's new media feature&lt;/a&gt; in HTML to specify whether to display images for light or dark themes. This is done using the HTML &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element in combination with the &lt;code&gt;prefers-color-scheme&lt;/code&gt; media feature.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;picture&amp;gt;
  &amp;lt;source
    srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark"
    media="(prefers-color-scheme: dark)"
  /&amp;gt;
  &amp;lt;source
    srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true"
    media="(prefers-color-scheme: light), (prefers-color-scheme: no-preference)"
  /&amp;gt;
  &amp;lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" /&amp;gt;
&amp;lt;/picture&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;picture&gt; 
  &lt;source srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark" media="(prefers-color-scheme: dark)" /&gt; 
  &lt;source srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" media="(prefers-color-scheme: light), (prefers-color-scheme: no-preference)" /&gt; 
  &lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" /&gt; 
 &lt;/picture&gt; 
&lt;/details&gt; 
&lt;h3&gt;Customization&lt;/h3&gt; 
&lt;p&gt;You can customize the appearance of all your cards however you wish with URL parameters.&lt;/p&gt; 
&lt;h4&gt;Common Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;title_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's title color.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;2f80ed&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;text_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Body text color.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;434d58&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;icon_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Icons color if available.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;4c71f2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;border_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's border color. Does not apply when &lt;code&gt;hide_border&lt;/code&gt; is enabled.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;e4e2e2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;bg_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's background color.&lt;/td&gt; 
   &lt;td&gt;string (hex color or a gradient in the form of &lt;em&gt;angle,start,end&lt;/em&gt;)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;fffefe&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_border&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the card's border.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;theme&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Name of the theme, choose from &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;all available themes&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;cache_seconds&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the cache header manually (min: 21600, max: 86400).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;21600&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the language in the card, you can check full list of available locales &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#available-locales"&gt;here&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;border_radius&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Corner rounding on the card.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;4.5&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; We use caching to decrease the load on our servers (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471#issuecomment-1271551425"&gt;https://github.com/anuraghazra/github-readme-stats/issues/1471#issuecomment-1271551425&lt;/a&gt;). Our cards have the following default cache hours: stats card - 24 hours, top languages card - 144 hours (6 days), pin card - 240 hours (10 days), gist card - 48 hours (2 days). If you want the data on your statistics card to be updated more often you can &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; and set &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections"&gt;environment variable&lt;/a&gt; &lt;code&gt;CACHE_SECONDS&lt;/code&gt; to a value of your choosing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;Gradient in bg_color&lt;/h5&gt; 
&lt;p&gt;You can provide multiple comma-separated values in the bg_color option to render a gradient with the following format:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;amp;bg_color=DEG,COLOR1,COLOR2,COLOR3...COLOR10
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Available locales&lt;/h5&gt; 
&lt;p&gt;Here is a list of all available locales:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;cn&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Chinese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;zh-tw&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Chinese (Taiwan)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ar&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Arabic&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;cs&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Czech&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;de&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;German&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;English&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;bn&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Bengali&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;es&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Spanish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;fr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;French&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;hu&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Hungarian&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;it&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Italian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ja&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Japanese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;kr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Korean&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;nl&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Dutch&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pt-pt&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Portuguese (Portugal)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pt-br&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Portuguese (Brazil)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;np&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Nepali&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;el&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Greek&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ru&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Russian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;uk-ua&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Ukrainian&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Indonesian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ml&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Malayalam&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;my&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Burmese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;sk&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Slovak&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;tr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Turkish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pl&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Polish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;uz&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Uzbek&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;vi&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Vietnamese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;se&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Swedish&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;If we don't support your language, please consider contributing! You can find more information about how to do it in our &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/CONTRIBUTING.md#translations-contribution"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Stats Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hiding-individual-stats"&gt;specified items&lt;/a&gt; from stats.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your stats card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;card_width&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the card's width manually.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;500px (approx.)&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_rank&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the rank and automatically resizes the card width.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;rank_icon&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows alternative rank icon (i.e. &lt;code&gt;github&lt;/code&gt;, &lt;code&gt;percentile&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_icons&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows icons near all stats.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;include_all_commits&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Count total commits instead of just the current year commits.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;line_height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the line height between text.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;exclude_repo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Excludes specified repositories.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;username&amp;gt; GitHub Stats&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;text_bold&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Uses bold text.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ring_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of the rank circle.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;2f80ed&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;number_format&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between two available formats for displaying the card values &lt;code&gt;short&lt;/code&gt; (i.e. &lt;code&gt;6.6k&lt;/code&gt;) and &lt;code&gt;long&lt;/code&gt; (i.e. &lt;code&gt;6626&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;short&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-additional-individual-stats"&gt;additional items&lt;/a&gt; on stats card (i.e. &lt;code&gt;reviews&lt;/code&gt;, &lt;code&gt;discussions_started&lt;/code&gt;, &lt;code&gt;discussions_answered&lt;/code&gt;, &lt;code&gt;prs_merged&lt;/code&gt; or &lt;code&gt;prs_merged_percentage&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; When hide_rank=&lt;code&gt;true&lt;/code&gt;, the minimum card width is 270 px + the title length and padding.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Repo Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_owner&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows the repo's owner name.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;description_lines_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Manually set the number of lines for the description. Specified value will be clamped between 1 and 3. If this parameter is not specified, the number of lines will be automatically adjusted according to the actual length of the description.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Gist Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_owner&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows the gist's owner name.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Language Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-individual-languages"&gt;specified languages&lt;/a&gt; from card.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;layout&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between five available layouts &lt;code&gt;normal&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt; &amp;amp; &lt;code&gt;donut&lt;/code&gt; &amp;amp; &lt;code&gt;donut-vertical&lt;/code&gt; &amp;amp; &lt;code&gt;pie&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;normal&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;card_width&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the card's width manually.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;300&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;langs_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows more languages on the card, between 1-20.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;5&lt;/code&gt; for &lt;code&gt;normal&lt;/code&gt; and &lt;code&gt;donut&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt; for other layouts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;exclude_repo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Excludes specified repositories.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Most Used Languages&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_progress&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Uses the compact layout option, hides percentages, and removes the bars.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;size_weight&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Configures language stats algorithm (see &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;count_weight&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Configures language stats algorithm (see &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Language names should be URI-escaped, as specified in &lt;a href="https://en.wikipedia.org/wiki/Percent-encoding"&gt;Percent Encoding&lt;/a&gt; (i.e: &lt;code&gt;c++&lt;/code&gt; should become &lt;code&gt;c%2B%2B&lt;/code&gt;, &lt;code&gt;jupyter notebook&lt;/code&gt; should become &lt;code&gt;jupyter%20notebook&lt;/code&gt;, etc.) You can use &lt;a href="https://www.urlencoder.org/"&gt;urlencoder.org&lt;/a&gt; to help you do this automatically.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;WakaTime Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the languages specified from the card.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;line_height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the line height between text.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_progress&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the progress bar and percentage.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WakaTime Stats&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;layout&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between two available layouts &lt;code&gt;default&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;langs_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Limits the number of languages on the card, defaults to all reported languages.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;api_domain&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom API domain for the card, e.g. to use services like &lt;a href="https://github.com/mujx/hakatime"&gt;Hakatime&lt;/a&gt; or &lt;a href="https://github.com/muety/wakapi"&gt;Wakapi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;wakatime.com&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;display_format&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the WakaTime stats display format. Choose &lt;code&gt;time&lt;/code&gt; to display time-based stats or &lt;code&gt;percent&lt;/code&gt; to show percentages.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;time&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h1&gt;GitHub Extra Pins&lt;/h1&gt; 
&lt;p&gt;GitHub extra pins allow you to pin more than 6 repositories in your profile using a GitHub readme profile.&lt;/p&gt; 
&lt;p&gt;Yay! You are no longer limited to 6 pinned repositories.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" alt="Readme Card" /&gt;&lt;/p&gt; 
&lt;p&gt;Use &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#repo-card-exclusive-options"&gt;show_owner&lt;/a&gt; query option to include the repo's owner username&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;show_owner=true" alt="Readme Card" /&gt;&lt;/p&gt; 
&lt;h1&gt;GitHub Gist Pins&lt;/h1&gt; 
&lt;p&gt;GitHub gist pins allow you to pin gists in your GitHub profile using a GitHub readme profile.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/gist?id=bbfce31e0217a3689c8d961a356cb10d&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Gist Card](https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d)](https://gist.github.com/Yizack/bbfce31e0217a3689c8d961a356cb10d/)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;p&gt;Use &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#gist-card-exclusive-options"&gt;show_owner&lt;/a&gt; query option to include the gist's owner username&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d&amp;amp;show_owner=true" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;h1&gt;Top Languages Card&lt;/h1&gt; 
&lt;p&gt;The top languages card shows a GitHub user's most frequently used languages.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; By default, the language card shows language results only from public repositories. To include languages used in private repositories, you should &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; using your own GitHub API token.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Top Languages does not indicate the user's skill level or anything like that; it's a GitHub metric to determine which languages have the most code on GitHub. It is a new feature of github-readme-stats.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; This card shows language usage only inside your own non-forked repositories, not depending on who the author of the commits is. It does not include your contributions into another users/organizations repositories. Currently there are no way to get this data from GitHub API. If you want this behavior to be improved you can support &lt;a href="https://github.com/orgs/community/discussions/18230"&gt;this feature request&lt;/a&gt; created by &lt;a href="https://github.com/rickstaa"&gt;@rickstaa&lt;/a&gt; inside GitHub Community.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Currently this card shows data only about first 100 repositories. This is because GitHub API limitations which cause downtimes of public instances (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471"&gt;#1471&lt;/a&gt;). In future this behavior will be improved by releasing GitHub action or providing environment variables for user's own instances.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/top-langs?username=anuraghazra&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Language stats algorithm&lt;/h3&gt; 
&lt;p&gt;We use the following algorithm to calculate the languages percentages on the language card:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;ranking_index = (byte_count ^ size_weight) * (repo_count ^ count_weight)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, only the byte count is used for determining the languages percentages shown on the language card (i.e. &lt;code&gt;size_weight=1&lt;/code&gt; and &lt;code&gt;count_weight=0&lt;/code&gt;). You can, however, use the &lt;code&gt;&amp;amp;size_weight=&lt;/code&gt; and &lt;code&gt;&amp;amp;count_weight=&lt;/code&gt; options to weight the language usage calculation. The values must be positive real numbers. &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1600#issuecomment-1046056305"&gt;More details about the algorithm can be found here&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=1&amp;amp;count_weight=0&lt;/code&gt; - &lt;em&gt;(default)&lt;/em&gt; Orders by byte count.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=0.5&amp;amp;count_weight=0.5&lt;/code&gt; - &lt;em&gt;(recommended)&lt;/em&gt; Uses both byte and repo count for ranking&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=0&amp;amp;count_weight=1&lt;/code&gt; - Orders by repo count&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;size_weight=0.5&amp;amp;count_weight=0.5)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Exclude individual repositories&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;exclude_repo=repo1,repo2&lt;/code&gt; parameter to exclude individual repositories.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;exclude_repo=github-readme-stats,anuraghazra.github.io)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hide individual languages&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;&amp;amp;hide=language1,language2&lt;/code&gt; parameter to hide individual languages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide=javascript,html)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Show more languages&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;langs_count=&lt;/code&gt; option to increase or decrease the number of languages shown on the card. Valid values are integers between 1 and 20 (inclusive). By default it was set to &lt;code&gt;5&lt;/code&gt; for &lt;code&gt;normal&lt;/code&gt; &amp;amp; &lt;code&gt;donut&lt;/code&gt; and &lt;code&gt;6&lt;/code&gt; for other layouts.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;langs_count=8)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compact Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=compact&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Donut Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=donut&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Donut Vertical Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=donut-vertical&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut-vertical)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pie Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=pie&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=pie)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hide Progress Bars&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;hide_progress=true&lt;/code&gt; option to hide the percentages and the progress bars (layout will be automatically set to &lt;code&gt;compact&lt;/code&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide_progress=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Donut Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Donut Vertical Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut-vertical" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pie Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=pie" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hidden progress bars&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide_progress=true" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;h1&gt;WakaTime Stats Card&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Please be aware that we currently only show data from WakaTime profiles that are public. You therefore have to make sure that &lt;strong&gt;BOTH&lt;/strong&gt; &lt;code&gt;Display code time publicly&lt;/code&gt; and &lt;code&gt;Display languages, editors, os, categories publicly&lt;/code&gt; are enabled.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your &lt;a href="https://wakatime.com"&gt;WakaTime&lt;/a&gt; username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Harlok's WakaTime stats](https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs&amp;amp;hide_progress=true" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs&amp;amp;layout=compact" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;All Demos&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Default&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hiding specific stats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,issues" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing additional stats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing icons&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=issues&amp;amp;show_icons=true" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Shows Github logo instead rank level&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;rank_icon=github" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Shows user rank percentile instead of rank level&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;rank_icon=percentile" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customize Border Color&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;border_color=2e4058" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Include All Commits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;include_all_commits=true" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Themes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Choose from any of the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes"&gt;default themes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gradient&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;bg_color=30,e96443,904e95&amp;amp;title_color=fff&amp;amp;text_color=fff" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing stats card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;show_icons=true&amp;amp;title_color=fff&amp;amp;icon_color=79ff97&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Setting card locale&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;locale=es" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing repo card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;title_color=fff&amp;amp;icon_color=f9f9f9&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515" alt="Customized Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gist card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing gist card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d&amp;amp;theme=calm" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Top languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;WakaTime card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Tip (Align The Cards)&lt;/h2&gt; 
&lt;p&gt;By default, GitHub does not lay out the cards side by side. To do that, you can use this approach:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://github.com/anuraghazra/github-readme-stats"&amp;gt;
  &amp;lt;img height=200 align="center" src="https://github-readme-stats.vercel.app/api?username=anuraghazra" /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;a href="https://github.com/anuraghazra/convoychat"&amp;gt;
  &amp;lt;img height=200 align="center" src="https://github-readme-stats.vercel.app/api/top-langs?username=anuraghazra&amp;amp;layout=compact&amp;amp;langs_count=8&amp;amp;card_width=320" /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://github.com/anuraghazra/github-readme-stats"&amp;gt;
  &amp;lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;a href="https://github.com/anuraghazra/convoychat"&amp;gt;
  &amp;lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat" /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt; &lt;img height="200" align="center" src="https://github-readme-stats.vercel.app/api?username=anuraghazra" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/anuraghazra/convoychat"&gt; &lt;img height="200" align="center" src="https://github-readme-stats.vercel.app/api/top-langs?username=anuraghazra&amp;amp;layout=compact&amp;amp;langs_count=8&amp;amp;card_width=320" /&gt; &lt;/a&gt; 
 &lt;hr /&gt; 
 &lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt; &lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/anuraghazra/convoychat"&gt; &lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat" /&gt; &lt;/a&gt; 
&lt;/details&gt; 
&lt;h1&gt;Deploy on your own&lt;/h1&gt; 
&lt;h2&gt;On Vercel&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;📽&lt;/span&gt; &lt;a href="https://youtu.be/n6d4KHSKqGk?t=107"&gt;Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Since the GitHub API only allows 5k requests per hour, my &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter. If you host it on your own Vercel server, then you do not have to worry about anything. Click on the deploy button to get started!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Since &lt;a href="https://github.com/anuraghazra/github-readme-stats/pull/58"&gt;#58&lt;/a&gt;, we should be able to handle more than 5k requests and have fewer issues with downtime &lt;span&gt;😁&lt;/span&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; If you are on the &lt;a href="https://vercel.com/pricing"&gt;Pro (i.e. paid)&lt;/a&gt; Vercel plan, the &lt;a href="https://vercel.com/docs/concepts/projects/project-configuration#value-definition"&gt;maxDuration&lt;/a&gt; value found in the &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/master/vercel.json"&gt;vercel.json&lt;/a&gt; can be increased when your Vercel instance frequently times out during the card request. You are advised to keep this value lower than &lt;code&gt;30&lt;/code&gt; seconds to prevent high memory usage.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://vercel.com/import/project?template=https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://vercel.com/button" alt="Deploy to Vercel" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;span&gt;🛠&lt;/span&gt; Step-by-step guide on setting up your own Vercel instance&lt;/b&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to &lt;a href="https://vercel.com/"&gt;vercel.com&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;Click on &lt;code&gt;Log in&lt;/code&gt;. &lt;img src="https://files.catbox.moe/pcxk33.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Sign in with GitHub by pressing &lt;code&gt;Continue with GitHub&lt;/code&gt;. &lt;img src="https://files.catbox.moe/b9oxey.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Sign in to GitHub and allow access to all repositories if prompted.&lt;/li&gt; 
  &lt;li&gt;Fork this repo.&lt;/li&gt; 
  &lt;li&gt;Go back to your &lt;a href="https://vercel.com/dashboard"&gt;Vercel dashboard&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;To import a project, click the &lt;code&gt;Add New...&lt;/code&gt; button and select the &lt;code&gt;Project&lt;/code&gt; option. &lt;img src="https://files.catbox.moe/3n76fh.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Click the &lt;code&gt;Continue with GitHub&lt;/code&gt; button, search for the required Git Repository and import it by clicking the &lt;code&gt;Import&lt;/code&gt; button. Alternatively, you can import a Third-Party Git Repository using the &lt;code&gt;Import Third-Party Git Repository -&amp;gt;&lt;/code&gt; link at the bottom of the page. &lt;img src="https://files.catbox.moe/mg5p04.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Create a personal access token (PAT) &lt;a href="https://github.com/settings/tokens/new"&gt;here&lt;/a&gt; and enable the &lt;code&gt;repo&lt;/code&gt; and &lt;code&gt;user&lt;/code&gt; permissions (this allows access to see private repo and user stats).&lt;/li&gt; 
  &lt;li&gt;Add the PAT as an environment variable named &lt;code&gt;PAT_1&lt;/code&gt; (as shown). &lt;img src="https://files.catbox.moe/0yclio.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Click deploy, and you're good to go. See your domains to use the API!&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;On other platforms&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; This way of using GRS is not officially supported and was added to cater to some particular use cases where Vercel could not be used (e.g. &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/2341"&gt;#2341&lt;/a&gt;). The support for this method, therefore, is limited.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;span&gt;🛠&lt;/span&gt; Step-by-step guide for deploying on other platforms&lt;/b&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Fork or clone this repo as per your needs&lt;/li&gt; 
  &lt;li&gt;Add &lt;code&gt;express&lt;/code&gt; to the dependencies section of &lt;code&gt;package.json&lt;/code&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L54-L61"&gt;https://github.com/anuraghazra/github-readme-stats/blob/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L54-L61&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Run &lt;code&gt;npm i&lt;/code&gt; if needed (initial setup)&lt;/li&gt; 
  &lt;li&gt;Run &lt;code&gt;node express.js&lt;/code&gt; to start the server, or set the entry point to &lt;code&gt;express.js&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt; if you're deploying on a managed service &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L11"&gt;https://github.com/anuraghazra/github-readme-stats/blob/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L11&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;You're done 🎉 &lt;/li&gt;
 &lt;/ol&gt;
&lt;/details&gt;   
&lt;h2&gt;Disable rate limit protections&lt;/h2&gt; 
&lt;p&gt;Github Readme Stats contains several Vercel environment variables that can be used to remove the rate limit protections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CACHE_SECONDS&lt;/code&gt;: This environment variable takes precedence over our cache minimum and maximum values and can circumvent these values for self-hosted Vercel instances.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://vercel.com/docs/concepts/projects/environment-variables"&gt;the Vercel documentation&lt;/a&gt; on adding these environment variables to your Vercel instance.&lt;/p&gt; 
&lt;h2&gt;Keep your fork up to date&lt;/h2&gt; 
&lt;p&gt;You can keep your fork, and thus your private Vercel instance up to date with the upstream using GitHub's &lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork"&gt;Sync Fork button&lt;/a&gt;. You can also use the &lt;a href="https://github.com/wei/pull"&gt;pull&lt;/a&gt; package created by &lt;a href="https://github.com/wei"&gt;@wei&lt;/a&gt; to automate this process.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;💖&lt;/span&gt; Support the project&lt;/h1&gt; 
&lt;p&gt;I open-source almost everything I can and try to reply to everyone needing help using these projects. Obviously, this takes time. You can use this service for free.&lt;/p&gt; 
&lt;p&gt;However, if you are using this project and are happy with it or just want to encourage me to continue creating stuff, there are a few ways you can do it:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Giving proper credit when you use github-readme-stats on your readme, linking back to it. :D&lt;/li&gt; 
 &lt;li&gt;Starring and sharing the project. &lt;span&gt;🚀&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.paypal.me/anuraghazra"&gt;&lt;img src="https://ionicabizau.github.io/badges/paypal.svg?sanitize=true" alt="paypal.me/anuraghazra" /&gt;&lt;/a&gt; - You can make a one-time donations via PayPal. I'll probably buy a &lt;del&gt;coffee&lt;/del&gt; tea. &lt;span&gt;🍵&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks! &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss"&gt;&lt;img src="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true" alt="https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Contributions are welcome! &amp;lt;3&lt;/p&gt; 
&lt;p&gt;Made with &lt;span&gt;❤️&lt;/span&gt; and JavaScript.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>