<rss version="2.0">
  <channel>
    <title>GitHub Java Daily Trending</title>
    <description>Daily Trending of Java in GitHub</description>
    <pubDate>Thu, 31 Jul 2025 01:33:26 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>JabRef/jabref</title>
      <link>https://github.com/JabRef/jabref</link>
      <description>&lt;p&gt;Graphical Java application for managing BibTeX and BibLaTeX (.bib) databases&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JabRef Bibliography Management &lt;a href="https://apidia.net/java/JabRef/main"&gt;&lt;img src="https://apidia.net/java/JabRef/main/badge.svg?sanitize=true" alt="APIdia"&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;JabRef is an open-source, cross-platform citation and reference management tool.&lt;/p&gt; 
&lt;p&gt;Stay on top of your literature: JabRef helps you to collect and organize sources, find the paper you need and discover the latest research.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/JabRef/jabref/main/docs/images/jabref-mainscreen.png" alt="main table"&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;JabRef is available free of charge and is actively developed. It supports you in every step of your research work.&lt;/p&gt; 
&lt;h3&gt;Collect&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Search across many online scientific catalogues like CiteSeer, CrossRef, Google Scholar, IEEEXplore, INSPIRE-HEP, Medline PubMed, MathSciNet, Springer, arXiv, and zbMATH&lt;/li&gt; 
 &lt;li&gt;Import options for over 15 reference formats&lt;/li&gt; 
 &lt;li&gt;Easily retrieve and link full-text articles&lt;/li&gt; 
 &lt;li&gt;Fetch complete bibliographic information based on ISBN, DOI, PubMed-ID and arXiv-ID&lt;/li&gt; 
 &lt;li&gt;Extract metadata from PDFs&lt;/li&gt; 
 &lt;li&gt;Import new references directly from the browser with one click using the &lt;a href="https://github.com/JabRef/JabRef-Browser-Extension"&gt;official browser extension&lt;/a&gt; for &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/jabref/?src=external-github"&gt;Firefox&lt;/a&gt;, &lt;a href="https://chrome.google.com/webstore/detail/jabref-browser-extension/bifehkofibaamoeaopjglfkddgkijdlh"&gt;Chrome&lt;/a&gt;, &lt;a href="https://microsoftedge.microsoft.com/addons/detail/pgkajmkfgbehiomipedjhoddkejohfna"&gt;Edge&lt;/a&gt;, and &lt;a href="https://chrome.google.com/webstore/detail/jabref-browser-extension/bifehkofibaamoeaopjglfkddgkijdlh"&gt;Vivaldi&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Organize&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Group your research into hierarchical collections and organize research items based on keywords/tags, search terms, or your manual assignments&lt;/li&gt; 
 &lt;li&gt;Advanced search and filter features&lt;/li&gt; 
 &lt;li&gt;Complete and fix bibliographic data by comparing with curated online catalogs such as Google Scholar, Springer, or MathSciNet&lt;/li&gt; 
 &lt;li&gt;Customizable citation key generator&lt;/li&gt; 
 &lt;li&gt;Customize and add new metadata fields or reference types&lt;/li&gt; 
 &lt;li&gt;Find and merge duplicates&lt;/li&gt; 
 &lt;li&gt;Attach related documents: 20 different kinds of documents supported out of the box, completely customizable and extendable&lt;/li&gt; 
 &lt;li&gt;Automatically rename and move associated documents according to customizable rules&lt;/li&gt; 
 &lt;li&gt;Keep track of what you read: ranking, priority, printed, quality-assured&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Cite&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Native BibTeX and BibLaTeX support&lt;/li&gt; 
 &lt;li&gt;Cite-as-you-write functionality for external applications such as Emacs, Kile, LyX, Texmaker, TeXstudio, Vim and WinEdt.&lt;/li&gt; 
 &lt;li&gt;Format references using one of thousands of built-in citation styles or create your own style&lt;/li&gt; 
 &lt;li&gt;Support for Word and LibreOffice/OpenOffice for inserting and formatting citations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Share&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Many built-in export options or create your export format&lt;/li&gt; 
 &lt;li&gt;Library is saved as a simple text file, and thus it is easy to share with others via Dropbox and is version-control friendly&lt;/li&gt; 
 &lt;li&gt;Work in a team: sync the contents of your library via a SQL database&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Fresh development builds are available at &lt;a href="https://builds.jabref.org/main/"&gt;builds.jabref.org&lt;/a&gt;. The &lt;a href="https://downloads.jabref.org/"&gt;latest stable release is available at FossHub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please see our &lt;a href="https://docs.jabref.org/installation"&gt;Installation Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;JabKit&lt;/h2&gt; 
&lt;p&gt;JabRef offers a CLI application.&lt;/p&gt; 
&lt;p&gt;You can run it using JBang. We provide details at &lt;a href="https://raw.githubusercontent.com/JabRef/jabref/main/.jbang/README.md"&gt;&lt;code&gt;.jbang/README.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also run JabKit using docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-terminal"&gt;docker run ghcr.io/jabref/jabkit:edge --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Bug Reports, Suggestions, Other Feedback&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://donations.jabref.org"&gt;&lt;img src="https://img.shields.io/badge/donate%20to-jabref-orange.svg?sanitize=true" alt="Donation"&gt;&lt;/a&gt; &lt;a href="https://paypal.me/JabRef"&gt;&lt;img src="https://img.shields.io/badge/donate-paypal-00457c.svg?logo=paypal&amp;amp;style=flat-square" alt="PayPal Donate"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We are thankful for any bug reports or other feedback. If you have ideas for new features you want to be included in JabRef, tell us in &lt;a href="http://discourse.jabref.org/c/features"&gt;the feature section&lt;/a&gt; of our forum! If you need support in using JabRef, please read the &lt;a href="https://docs.jabref.org/"&gt;user documentation&lt;/a&gt;, especially the &lt;a href="https://docs.jabref.org/faq"&gt;frequently asked questions (FAQ)&lt;/a&gt; and also take a look at our &lt;a href="https://discourse.jabref.org/c/help/7"&gt;community forum&lt;/a&gt;. You can use our &lt;a href="https://github.com/JabRef/jabref/issues"&gt;GitHub issue tracker&lt;/a&gt; to file bug reports.&lt;/p&gt; 
&lt;p&gt;An explanation of donation possibilities and usage of donations is available at our &lt;a href="https://donations.jabref.org"&gt;donations page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Want to be part of a free and open-source project that tens of thousands of researchers use every day? Please take a look at our &lt;a href="https://raw.githubusercontent.com/JabRef/jabref/main/CONTRIBUTING.md"&gt;guidelines for contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building from Source&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href="https://docs.jabref.org/installation#building-from-source"&gt;Building from source&lt;/a&gt; for instructions on how to build JabRef from sources.&lt;/p&gt; 
&lt;h2&gt;Research and Education&lt;/h2&gt; 
&lt;p&gt;JabRef welcomes research applied to it. The current list of papers where JabRef helped to enhance science is maintained at &lt;a href="https://github.com/JabRef/jabref/wiki/JabRef-in-the-Media"&gt;https://github.com/JabRef/jabref/wiki/JabRef-in-the-Media&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The JabRef team also fosters to use JabRef in Software Engineering training. We offer guidelines for this at &lt;a href="https://devdocs.jabref.org/teaching.html"&gt;https://devdocs.jabref.org/teaching.html&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When citing JabRef, please use the following citation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@Article{jabref,
  author  = {Oliver Kopp and Carl Christian Snethlage and Christoph Schwentker},
  title   = {JabRef: BibTeX-based literature management software},
  journal = {TUGboat},
  volume  = {44},
  number  = {3},
  pages   = {441--447},
  doi     = {10.47397/tb/44-3/tb138kopp-jabref},
  issn    = {0896-3207},
  issue   = {138},
  year    = {2023},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;DOI (also includes &lt;a href="https://tug.org/TUGboat/tb44-3/tb138kopp-jabref.pdf"&gt;full text&lt;/a&gt;): &lt;a href="https://doi.org/10.47397/tb/44-3/tb138kopp-jabref"&gt;10.47397/tb/44-3/tb138kopp-jabref&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsoring&lt;/h2&gt; 
&lt;p&gt;JabRef development is powered by YourKit Java Profiler&lt;br&gt; &lt;a href="https://www.yourkit.com/java/profiler/"&gt;&lt;img src="https://www.yourkit.com/images/yk_logo.svg?sanitize=true" alt="YourKit Java Profiler"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ProductMap File Analysis Result&lt;/h2&gt; 
&lt;p&gt;This section contains an analysis of ProductMap files. Each file has a link to its source.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Github File&lt;/th&gt; 
   &lt;th&gt;ProductMap File URL&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/JabRef/jabref/raw/main/src/main/java/org/jabref/gui/maintable/MainTableTooltip.java"&gt;src/main/java/org/jabref/gui/maintable/MainTableTooltip.java&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://product-map.ai/app/public?url=https://github.com/JabRef/jabref/raw/main/src/main/java/org/jabref/gui/maintable/MainTableTooltip.java"&gt;View File&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;ProductMap - Contact Us&lt;/h3&gt; 
&lt;p&gt;For any inquiries, feel free to &lt;a href="https://product-map.ai"&gt;contact ProductMap.ai&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coze-dev/coze-java</title>
      <link>https://github.com/coze-dev/coze-java</link>
      <description>&lt;p&gt;The Java SDK for the Coze API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Coze Java API SDK&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://central.sonatype.com/artifact/com.coze/coze-api"&gt;&lt;img src="https://img.shields.io/maven-central/v/com.coze/coze-api" alt="Maven Central Version"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/github/coze-dev/coze-java"&gt;&lt;img src="https://codecov.io/github/coze-dev/coze-java/graph/badge.svg?token=UXitaQ0wp7" alt="codecov"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;The Coze API SDK for Java is a powerful tool designed to seamlessly integrate Coze's open APIs into your projects.&lt;/p&gt; 
&lt;p&gt;Key Features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full support for Coze open APIs and authentication APIs&lt;/li&gt; 
 &lt;li&gt;Both synchronous and asynchronous SDK calls&lt;/li&gt; 
 &lt;li&gt;Optimized streaming APIs with Stream object returns&lt;/li&gt; 
 &lt;li&gt;Optimized list APIs with Iterator Page object returns&lt;/li&gt; 
 &lt;li&gt;Simple and intuitive API design for ease of use&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Importing&lt;/h2&gt; 
&lt;h3&gt;Gradle&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;dependencies {
    implementation 'com.coze:coze-api:+'
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Maven&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;com.coze&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;coze-api&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;version&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Examples&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
   &lt;th&gt;File&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pat auth&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/auth/TokenAuthExample.java"&gt;TokenAuthExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;oauth by web code&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/auth/WebOAuthExample.java"&gt;WebOAuthExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;oauth by jwt flow&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/auth/JWTOAuthExample.java"&gt;JWTsOauthExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;oauth by pkce flow&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/auth/PKCEOAuthExample.java"&gt;PKCEOauthExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;oauth by device flow&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/auth/DeviceOAuthExample.java"&gt;DevicesOAuthExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;handle auth exception&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/auth/HandlerExceptionExample.java"&gt;HandlerExceptionExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;bot create, publish and chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/bot/BotPublishExample.java"&gt;PublishBotExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;get bot and bot list&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/bot/BotRetrieveExample.java"&gt;GetBotExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;non-stream chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/chat/ChatExample.java"&gt;ChatExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;steam chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/chat/StreamChatExample.java"&gt;StreamChatExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;chat with local plugin&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/chat/SubmitToolOutputExample.java"&gt;SubmitToolOutputExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;chat with image&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/chat/ChatWithImageExample.java"&gt;ChatWithImageExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;non-stream workflow chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/workflow/RunWorkflowExample.java"&gt;RunWorkflowExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;stream workflow chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/workflow/StreamWorkflowExample.java"&gt;StreamWorkflowExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;stream workflow chat with rx&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/workflow/StreamWorkflowChatExample.java"&gt;StreamWorkflowChatExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;async workflow run&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/workflow/AsyncRunWorkflowExample.java"&gt;AsyncRunWorkflowExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;conversation&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/conversation/ConversationCreateExample.java"&gt;CreateConversationExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;list conversation&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/conversation/ConversationsListExample.java"&gt;ListConversationsExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;workspace&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/workspace/WorkspaceListExample.java"&gt;ListWorkspaceExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;create update delete message&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/conversation/message/MessageCrudExample.java"&gt;ListWorkspaceExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;list message&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/conversation/message/MessageListExample.java"&gt;ListWorkspaceExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;create update delete document&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/datasets/document/DocumentCrudExample.java"&gt;DocumentCrudExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;list document&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/datasets/document/DocumentListExample.java"&gt;DocumentListExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;create update delete dataset&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/datasets/DatasetCrudExample.java"&gt;DatasetCrudExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;list dataset&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/datasets/DatasetListExample.java"&gt;DatasetListExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;update image caption&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/datasets/image/ImageCrudExample.java"&gt;ImageCrudExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;list image&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/datasets/image/ImageListExample.java"&gt;ImageListExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;duplicate template&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/template/TemplateDuplicateExample.java"&gt;TemplateDuplicateExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;initial client&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/service/InitClientExample.java"&gt;InitServiceExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;how to handle exception&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/service/HandlerExceptionExample.java"&gt;HandlerExceptionExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;get request log id&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/service/GetLogExample.java"&gt;GetLogExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;set timeout&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/service/SetRequestTimeoutExample.java"&gt;SetRequestTimeoutExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;websocket chat&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/websocket/chat/ChatExample.java"&gt;ChatExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;websocket speech synthesis&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/websocket/audio/speech/WebsocketAudioSpeechExample.java"&gt;WebsocketAudioSpeechExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;websocket transcription&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/websocket/audio/transcriptions/WebsocketTranscriptionsExample.java"&gt;WebsocketTranscriptionsExample.java&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Initialize the Coze Client&lt;/h3&gt; 
&lt;p&gt;To get started, visit &lt;a href="https://www.coze.com/open/oauth/pats"&gt;https://www.coze.com/open/oauth/pats&lt;/a&gt; (or &lt;a href="https://www.coze.cn/open/oauth/pats"&gt;https://www.coze.cn/open/oauth/pats&lt;/a&gt; for the CN environment).&lt;/p&gt; 
&lt;p&gt;Create a new token by clicking "Add Token". Configure the token name, expiration time, and required permissions. Click OK to generate your personal access token.&lt;/p&gt; 
&lt;p&gt;Important: Store your personal access token securely to prevent unauthorized access.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void example() {
    // Get an access_token through personal access token or oauth.
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);
    /*
     * The default access is api.coze.com, but if you need to access api.coze.cn
     * please use baseUrl to configure the API endpoint to access
     */
    String baseUrl = System.getenv("COZE_API_BASE");
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(baseUrl)
            .auth(authCli)
            .client(new OkHttpClient.Builder().build()) 
            .build();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chat&lt;/h3&gt; 
&lt;p&gt;First, create a bot instance in Coze. The bot ID is the last number in the web link URL.&lt;/p&gt; 
&lt;h4&gt;Non-Stream Chat&lt;/h4&gt; 
&lt;p&gt;The SDK provides a convenient wrapper function for non-streaming chat operations. It handles polling and message retrieval automatically. Use createAndPoll to simplify the process:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void example() throws Exception {
    String token = System.getenv("COZE_API_TOKEN");
    String botID = System.getenv("PUBLISHED_BOT_ID");
    String uid = System.getenv("USER_ID");
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(new TokenAuth(token))
            .readTimeout(10000)
            .build();
    ChatReq req = ChatReq.builder()
                         .botID(botID)
                         .userID(uid)
                         .messages(Collections.singletonList(Message.buildUserQuestionText("What can you do?")))
                         .build();
    ChatPoll chat = coze.chat().createAndPoll(req);
    for (Message message : chat.messages) {
        System.out.println(message.content);
    }
    if (chat.chat.status == ChatStatus.COMPLETED) {
        System.out.println("token usage:" + chat.chat.usage.tokenCount);
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Stream Chat&lt;/h4&gt; 
&lt;p&gt;Use coze.chat.stream() to create a streaming chat session. This returns a Chat Iterator that you can use to process chat events as they arrive:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;
public void example() {
    String token = System.getenv("COZE_API_TOKEN");
    String botID = System.getenv("PUBLISHED_BOT_ID");
    String userID = System.getenv("USER_ID");
    TokenAuth authCli = new TokenAuth(token);
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(authCli)
            .build();
    ChatReq req = ChatReq.builder()
            .botID(botID)
            .userID(userID)
            .messages(Collections.singletonList(Message.buildUserQuestionText("What can you do?")))
            .build();
    Flowable&amp;lt;ChatEvent&amp;gt; resp = coze.chat().stream(req);
    resp.blockingForEach(event -&amp;gt; {
        if (ChatEventType.CONVERSATION_MESSAGE_DELTA.equals(event.getEvent())) {
            System.out.print(event.getMessage().getContent());
        }
        if (ChatEventType.CONVERSATION_CHAT_COMPLETED.equals(event.getEvent())) {
            System.out.println("Token usage:" + event.getChat().getUsage().getTokenCount());
        }
    });
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Bots&lt;/h3&gt; 
&lt;p&gt;The SDK enables you to programmatically create, update, publish and list bots:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void example() {
    // Get an access_token through personal access token or oauth.
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);
    // Init the Coze client through the access_token.
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(authCli)
            .build();
    /*
    * step one, create a bot
    * */
    String workspaceID = System.getenv("WORKSPACE_ID");
    // set the prompt of your bot
    BotPromptInfo promptInfo = new BotPromptInfo("your prompt");
    // set the onboarding info of your bot
    BotOnboardingInfo onboardingInfo = BotOnboardingInfo.builder()
            .prologue("the prologue of your bot")
            .suggestedQuestions(Arrays.asList("question 1", "question 2"))
            .build();
    // Call the upload file interface to get the avatar id.
    String avatarPath = "/path/avatar.jpg";
    FileInfo avatarInfo = coze.files().upload(avatarPath);
    // build the request
    CreateBotReq createReq = CreateBotReq.builder()
            .spaceID(workspaceID)
            .description("the description of your bot")
            .name("the name of your bot")
            .promptInfo(promptInfo)
            .onboardingInfo(onboardingInfo)
            .iconFileID(avatarInfo.getID())
            .build();
    // Invoke the creation interface to create a bot in the draft status, and you can get the bot id.
    String botID = coze.bots().create(createReq).getBotID();
    /*
     * step two, update the bot, you can update the bot after being created
     * in this example, we will update the avatar of the bot
     */
    // Call the publishing interface to publish the bot on the api channel.
    PublishBotResult updateResp = coze.bots().publish(PublishBotReq.of(botID));
    /*
     * step three, you can also modify the bot configuration and republish it.
     * in this example, we will update the avatar of the bot
     */
    // set the onboarding info of your bot
    // Call the upload file interface to get the avatar id.
    String newAvatarPath = "/path/new_avatar.jpg";
    FileInfo newAvatarInfo = coze.files().upload(newAvatarPath);
    // build the request
    UpdateBotReq updateReq = UpdateBotReq.builder()
            .botID(botID)
            .iconFileID(newAvatarInfo.getID())
            .build();
    // Invoke the update interface to update a bot, It means success that no exception has been thrown.
    coze.bots().update(updateReq);
    updateResp = coze.bots().publish(PublishBotReq.of(botID));
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Conversations&lt;/h3&gt; 
&lt;p&gt;The SDK provides comprehensive conversation management capabilities, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Creating new conversations&lt;/li&gt; 
 &lt;li&gt;Conducting chat sessions&lt;/li&gt; 
 &lt;li&gt;Retrieving message history&lt;/li&gt; 
 &lt;li&gt;Managing conversation state&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;
public void example() {
    // Get an access_token through personal access token or oauth.
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);
    // Init the Coze client through the access_token.
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(authCli)
            .readTimeout(10000)
            .build();
    // create conversation
    Conversation resp = coze.conversations().create(new CreateConversationReq());
    System.out.println("create conversations" + resp);
    // retrieve conversation
    String conversationID = resp.getId();
    Conversation getResp = coze.conversations().retrieve(RetrieveConversationReq.of(conversationID));
    System.out.println("retrieve conversations:" + getResp);
    // append message to conversation
    Message msgs = coze.conversations().messages().create(CreateMessageReq
            .builder()
            .conversationID(conversationID)
            // if you want to create object content, you can use followed method to simplify your code
            .objectContent(
                    Arrays.asList(MessageObjectString.buildText("hello"),
                            MessageObjectString.buildImageByURL(System.getenv("PICTURE_URL")),
                            MessageObjectString.buildFileByURL(System.getenv("FILE_URL"))))
            .build());
    System.out.println(msgs);
    /*
    * retrieve message
    * */
    Message retrievedMsg = coze.conversations().messages().retrieve(RetrieveMessageReq.builder()
            .conversationID(conversationID)
            .messageID(message.getId())
            .build());
    System.out.println(retrievedMsg);
    /*
    * update message
    * */
    UpdateMessageReq updateReq = UpdateMessageReq.builder()
            .conversationID(conversationID).messageID(message.getId())
            .content(String.format("modified message content:%s", message.getContent()))
            .contentType(MessageContentType.TEXT).build();
    Message resp = coze.conversations().messages().update(updateReq);
    System.out.println(resp);
    /*
    * delete message
    * */
    Message deletedMsg = coze.conversations().messages().delete(DeleteMessageReq.builder()
            .conversationID(conversationID)
            .messageID(message.getId())
            .build());
    System.out.println(deletedMsg);
    // list messages
    ListMessageReq req = ListMessageReq.builder()
            .conversationID(conversationID)
            .limit(limit)
            .build();
    PageResult&amp;lt;Message&amp;gt; messages = coze.conversations().messages().list(req);
    Iterator&amp;lt;Message&amp;gt; iter = messages.getIterator();
    iter.forEachRemaining(System.out::println);
    // clear conversation
    ClearConversationResult clearResp = coze.conversations().clear(ClearConversationReq.of(conversationID));
    System.out.println(clearResp);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Files&lt;/h3&gt; 
&lt;p&gt;The SDK supports file and image uploads. You can use uploaded files for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bot avatars&lt;/li&gt; 
 &lt;li&gt;Multimodal conversations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void example() {
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(authCli)
            .readTimeout(10000)
            .build();
    String filePath = System.getenv("FILE_PATH");
    //*** upload file ***//
    FileInfo fileInfo = coze.files().upload(filePath);
    // you can also upload file in byte array
    FileInfo fileInfo = coze.files().upload(new byte[1024]);
    //*** retrive file ***//
    FileInfo retrievedInfo = coze.files().retrieve(fileInfo.getID());
    System.out.println(retrievedInfo);
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Workflows&lt;/h3&gt; 
&lt;p&gt;Coze also enables users to directly invoke the workflow.&lt;/p&gt; 
&lt;h4&gt;Non-stream workflow run&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public static void main(String[] args) {
// Get an access_token through personal access token or oauth.
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);
    // Init the Coze client through the access_token.
    CozeAPI coze = new CozeAPI.Builder()
        .baseURL(System.getenv("COZE_API_BASE"))
        .auth(authCli)
        .readTimeout(10000)
        .build();
    String workflowID = System.getenv("WORKSPACE_ID");
    // if your workflow need input params, you can send them by map
    Map&amp;lt;String, Object&amp;gt; data = new HashMap&amp;lt;&amp;gt;();
    data.put("param name", "param values");
    RunWorkflowReq.RunWorkflowReqBuilder builder = RunWorkflowReq.builder();
    builder.workflowID(workflowID).parameters(data);
    RunWorkflowResp resp = coze.workflows().runs().run(builder.build());
    System.out.println(resp);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Stream workflow run&lt;/h4&gt; 
&lt;p&gt;The returned result of the streaming interface is an iterator and can be directly iterated.&lt;/p&gt; 
&lt;p&gt;When the workflow incorporates question-and-answer nodes, the streaming interface will return the INTERRUPT event.&lt;/p&gt; 
&lt;p&gt;Users should call the resume interface to submit the results of the question-and-answer.&lt;/p&gt; 
&lt;p&gt;The return value of resume remains an iterator, so recursive processing might be necessary here.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public static void main(String[] args) {
    // Get an access_token through personal access token or oauth.
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);
    // Init the Coze client through the access_token.
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(authCli)
            .readTimeout(10000)
            .build();
    String workflowID = System.getenv("WORKSPACE_ID");
    // if your workflow need input params, you can send them by map
    Map&amp;lt;String, Object&amp;gt; data = new HashMap&amp;lt;&amp;gt;();
    data.put("param name", "param values");
    RunWorkflowReq.RunWorkflowReqBuilder builder = RunWorkflowReq.builder();
    builder.workflowID(workflowID).parameters(data);
    Flowable&amp;lt;WorkflowEvent&amp;gt; flowable = coze.workflows().runs().stream(builder.build());
    handleEvent(flowable, coze, workflowID);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Dataset&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public static void main(String[] args) {
    // Get an access_token through personal access token or oauth.
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);
    // Init the Coze client through the access_token.
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(authCli)
            .readTimeout(10000)
            .build();
    Long datasetID = Long.parseLong(System.getenv("DATASET_ID"));
    /*
     * create document in to specific dataset
     * */
    CreateDocumentReq createReq = CreateDocumentReq.builder()
            .datasetID(datasetID)
            .documentBases(Arrays.asList(
                    DocumentBase.buildWebPage("web doc example", "https://your-website.com"), //create datasets documents by web page
                    DocumentBase.buildLocalFile("file doc example", "your file content", "txt"))) //create datasets documents by local file
            .build();
    CreateDocumentResp creatResp = coze.datasets().documents().create(createReq);
    List&amp;lt;Long&amp;gt; documentIDs = new ArrayList&amp;lt;&amp;gt;();
    for (Document documentBase : creatResp.getDocumentInfos()) {
        documentIDs.add(Long.parseLong(documentBase.getDocumentID()));
    }
    /*
     * update document. It means success that no exception has been thrown
     * */
    UpdateDocumentReq updateReq = UpdateDocumentReq.builder()
            .documentID(documentIDs.get(0))
            .documentName("new name")
            .build();
    coze.datasets().documents().update(updateReq);
    /*
     * delete document. It means success that no exception has been thrown
     * */
    coze.datasets().documents().delete(DeleteDocumentReq.builder().documentIDs(Collections.singletonList(documentIDs.get(0))).build());

    /*
     * list documents
     * */
    ListDocumentReq req = ListDocumentReq.builder()
                .size(2)
                .datasetID(datasetID)
                .page(1)
                .build();

    // you can use iterator to automatically retrieve next page
    PageResult&amp;lt;Document&amp;gt; documents = coze.datasets().documents().list(req);
    Iterator&amp;lt;Document&amp;gt; iter = documents.getIterator();
    iter.forEachRemaining(System.out::println);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;OAuth App&lt;/h3&gt; 
&lt;h4&gt;Web OAuth App&lt;/h4&gt; 
&lt;p&gt;To create a Web OAuth application:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Visit &lt;a href="https://www.coze.com/open/oauth/apps"&gt;https://www.coze.com/open/oauth/apps&lt;/a&gt; (or &lt;a href="https://www.coze.cn/open/oauth/apps"&gt;https://www.coze.cn/open/oauth/apps&lt;/a&gt; for CN environment)&lt;/li&gt; 
 &lt;li&gt;Create a new OAuth App of type "Web application"&lt;/li&gt; 
 &lt;li&gt;Follow the setup guide at &lt;a href="https://www.coze.com/docs/developer_guides/oauth_code"&gt;https://www.coze.com/docs/developer_guides/oauth_code&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Upon completion, you'll receive three critical parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Client ID&lt;/li&gt; 
 &lt;li&gt;Client secret (store securely)&lt;/li&gt; 
 &lt;li&gt;Redirect URI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void initOAuthClient() {
    String clientSecret = System.getenv("COZE_WEB_OAUTH_CLIENT_SECRET");
    String clientID = System.getenv("COZE_WEB_OAUTH_CLIENT_ID");
    
    String cozeAPIBase = System.getenv("COZE_API_BASE");
    if (cozeAPIBase == null || cozeAPIBase.isEmpty()) {
        cozeAPIBase = Consts.COZE_COM_BASE_URL;
    }
    
    WebOAuthClient oauth = new WebOAuthClient.WebOAuthBuilder()
            .clientID(clientID)
            .clientSecret(clientSecret)
            .baseURL(cozeAPIBase)
            .build();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The WebOAuth authorization process is to first generate a coze authorization link and send it to the coze user requiring authorization.&lt;/p&gt; 
&lt;p&gt;Once the coze user opens the link, they can see the authorization consent button.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;
public void genAuthLink() {
    String redirectURI = System.getenv("COZE_WEB_OAUTH_REDIRECT_URI");
    // Generate the authorization link and direct the user to open it.
    String oauthURL = oauth.getOAuthURL(redirectURI, null);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After the user clicks the authorization consent button, the coze web page will redirect to the redirect address configured in the authorization link and carry the authorization code and state parameters in the address via the query string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void getAccessToken() {
    /*
    After the user clicks the authorization consent button, the Coze web page will redirect
    to the redirect address configured in the authorization link and carry the authorization
    code and state parameters in the address via the query string.
    Get from the query of the redirect interface: query.get('code')
    */
    String code = "mock code";

    /*
    After obtaining the code after redirection, the interface to exchange the code for a
    token can be invoked to generate the Coze access_token of the authorized user.
    */
    OAuthToken resp = oauth.getAccessToken(code, redirectURI);
    System.out.println(resp);

    // Use the access token to init Coze client
    CozeAPI coze = new CozeAPI.Builder().auth(new TokenAuth(resp.getAccessToken())).baseURL(cozeAPIBase).build();

    // When the token expires, you can also refresh and re-obtain the token
    resp = oauth.refreshToken(resp.getRefreshToken());
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;JWT OAuth App&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The SDK uses jjwt version 0.11.5. If you are using jjwt version 0.12.x or above:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;You need to exclude jjwt dependencies when importing the SDK:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;for Maven:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;com.coze&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;coze-api&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;0.1.0&amp;lt;/version&amp;gt;
    &amp;lt;exclusions&amp;gt;
        &amp;lt;exclusion&amp;gt;
            &amp;lt;groupId&amp;gt;io.jsonwebtoken&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jjwt-api&amp;lt;/artifactId&amp;gt;
        &amp;lt;/exclusion&amp;gt;
        &amp;lt;exclusion&amp;gt;
            &amp;lt;groupId&amp;gt;io.jsonwebtoken&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jjwt-impl&amp;lt;/artifactId&amp;gt;
        &amp;lt;/exclusion&amp;gt;
        &amp;lt;exclusion&amp;gt;
            &amp;lt;groupId&amp;gt;io.jsonwebtoken&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jjwt-jackson&amp;lt;/artifactId&amp;gt;
        &amp;lt;/exclusion&amp;gt;
    &amp;lt;/exclusions&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;for Gradle:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;implementation('com.coze:coze-api:0.1.0') {
    exclude group: 'io.jsonwebtoken'
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt; &lt;p&gt;Please refer to &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-java/main/example/src/main/java/example/auth/ExampleJWTBuilder.java"&gt;ExampleJWTBuilder.java&lt;/a&gt; to implement your own JWT builder.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set your jwt builder to JWTOAuthClient when initialize it&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;JWTOAuthClient oauth = (new JWTOAuthClient.JWTOAuthBuilder())
              .privateKey(config.getPrivateKey())
              .publicKey(config.getPublicKeyId())
              .clientID(config.getClientId())
              .baseURL(config.getCozeApiBase())
              .jwtBuilder(new ExampleJWTBuilder()) // set your jwt builder
              .build();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Firstly, users need to access &lt;a href="https://www.coze.com/open/oauth/apps"&gt;https://www.coze.com/open/oauth/apps&lt;/a&gt;. For the cn environment, users need to access &lt;a href="https://www.coze.cn/open/oauth/apps"&gt;https://www.coze.cn/open/oauth/apps&lt;/a&gt; to create an OAuth App of the type of Service application.&lt;/p&gt; 
&lt;p&gt;The specific creation process can be referred to in the document: &lt;a href="https://www.coze.com/docs/developer_guides/oauth_jwt"&gt;https://www.coze.com/docs/developer_guides/oauth_jwt&lt;/a&gt;. For the cn environment, it can be accessed at &lt;a href="https://www.coze.cn/docs/developer_guides/oauth_jwt"&gt;https://www.coze.cn/docs/developer_guides/oauth_jwt&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;After the creation is completed, three parameters, namely the client ID, private key, and public key id, can be obtained. For the client secret and public key id, users need to keep it securely to avoid leakage.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void initOAuthClient() {
    String cozeAPIBase = System.getenv("COZE_API_BASE");
    if (cozeAPIBase == null || cozeAPIBase.isEmpty()) {
        cozeAPIBase = "api.coze.cn";
    }
    String jwtOauthClientID = System.getenv("COZE_JWT_OAUTH_CLIENT_ID");
    String jwtOauthPrivateKey = System.getenv("COZE_JWT_OAUTH_PRIVATE_KEY");
    String jwtOauthPrivateKeyFilePath = System.getenv("COZE_JWT_OAUTH_PRIVATE_KEY_FILE_PATH");
    String jwtOauthPublicKeyID = System.getenv("COZE_JWT_OAUTH_PUBLIC_KEY_ID");
    JWTOAuthClient oauth = null;
    try {
        jwtOauthPrivateKey = new String(Files.readAllBytes(Paths.get(jwtOauthPrivateKeyFilePath)), StandardCharsets.UTF_8);
    } catch (IOException e) {
        e.printStackTrace();
    }
    /*
    The jwt oauth type requires using private to be able to issue a jwt token, and through
    the jwt token, apply for an access_token from the coze service. The sdk encapsulates
    this procedure, and only needs to use get_access_token to obtain the access_token under
    the jwt oauth process.
    Generate the authorization token
    The default ttl is 900s, and developers can customize the expiration time, which can be
    set up to 24 hours at most.
    */
    try {
        oauth = new JWTOAuthClient.JWTOAuthBuilder()
                .clientID(jwtOauthClientID)
                .privateKey(jwtOauthPrivateKey)
                .publicKey(jwtOauthPublicKeyID)
                .baseURL(cozeAPIBase)
                .build();
    } catch (Exception e) {
        e.printStackTrace();
        return;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The jwt oauth type requires using private to be able to issue a jwt token, and through the jwt token, apply for an access_token from the coze service.&lt;/p&gt; 
&lt;p&gt;The sdk encapsulates this procedure, and only needs to use get_access_token to obtain the access_token under the jwt oauth process.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;# The jwt process does not require any other operations, you can directly apply for a token
oauth_token = jwt_oauth_app.get_access_token(ttl=3600)

public void getAccessToken() {
    // The jwt process does not require any other operations, you can directly apply for a token
    OAuthToken resp = oauth.getAccessToken(3600);

    // Use the access token to init Coze client
    CozeAPI coze = new CozeAPI.Builder().auth(new TokenAuth(resp.getAccessToken())).baseURL(cozeAPIBase).build();

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;PKCE OAuth App&lt;/h4&gt; 
&lt;p&gt;PKCE stands for Proof Key for Code Exchange, and it's an extension to the OAuth 2.0 authorization code flow designed to enhance security for public clients, such as mobile and single-page applications.&lt;/p&gt; 
&lt;p&gt;Firstly, users need to access &lt;a href="https://www.coze.com/open/oauth/apps"&gt;https://www.coze.com/open/oauth/apps&lt;/a&gt;. For the cn environment, users need to access &lt;a href="https://www.coze.cn/open/oauth/apps"&gt;https://www.coze.cn/open/oauth/apps&lt;/a&gt; to create an OAuth App of the type of Mobile/PC/Single-page application.&lt;/p&gt; 
&lt;p&gt;The specific creation process can be referred to in the document: &lt;a href="https://www.coze.com/docs/developer_guides/oauth_pkce"&gt;https://www.coze.com/docs/developer_guides/oauth_pkce&lt;/a&gt;. For the cn environment, it can be accessed at &lt;a href="https://www.coze.cn/docs/developer_guides/oauth_pkce"&gt;https://www.coze.cn/docs/developer_guides/oauth_pkce&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;After the creation is completed, three parameters, namely the client ID can be obtained.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void initOAuthClient() {
    String clientID = System.getenv("COZE_PKCE_OAUTH_CLIENT_ID");
    /*
     * The default access is api.coze.com, but if you need to access api.coze.cn,
     * please use base_url to configure the api endpoint to access
     */
    String cozeAPIBase = System.getenv("COZE_API_BASE");
    if (cozeAPIBase == null || cozeAPIBase.isEmpty()) {
        cozeAPIBase = Consts.COZE_COM_BASE_URL;
    }
    PKCEOAuthClient oauth = new PKCEOAuthClient.PKCEOAuthBuilder()
            .clientID(clientID)
            .baseURL(cozeAPIBase)
            .build();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the pkce oauth process, first, need to select a suitable code_challenge_method. Coze supports two types: plain and s256.&lt;/p&gt; 
&lt;p&gt;Then, based on the selected code_challenge_method type, hash the code_verifier into the code_challenge. Finally, based on the callback address, code_challenge, and code_challenge_method, an authorization link can be generated.&lt;/p&gt; 
&lt;p&gt;The sdk will automatically handle the code_challenge process, and return the code verifier.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;
public void genAuthLink() {
    String redirectURI = System.getenv("COZE_WEB_OAUTH_REDIRECT_URI");
    PKCEAuthParam oauthURL = oauth.genOAuthURL(redirectURI, "state", PKCEOAuthClient.CodeChallengeMethod.S256);
    System.out.println(oauthURL);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Developers should lead users to open up this authorization link.&lt;/p&gt; 
&lt;p&gt;When the user consents to the authorization, Coze will redirect with the code to the callback address configured by the developer, and the developer can obtain this code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void getAccessToken() {
    /*
    Open the authorization link in your browser and authorize this OAuth App
    After authorization, you can exchange code_verifier for access token
    */
    String code = "mock code";
    /*
    After obtaining the code after redirection, the interface to exchange the code for a
    token can be invoked to generate the Coze access_token of the authorized user.
    */
    OAuthToken resp = oauth.getAccessToken(code, redirectURI, "");
    System.out.println(resp);
    // Use the access token to init Coze client
    CozeAPI coze = new CozeAPI.Builder().auth(new TokenAuth(resp.getAccessToken())).baseURL(cozeAPIBase).build();
    // When the token expires, you can also refresh and re-obtain the token
    resp = oauth.refreshToken(resp.getRefreshToken());
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Device OAuth App&lt;/h4&gt; 
&lt;p&gt;The Device Flow is designed for devices with limited input capabilities or no browser access. This OAuth 2.0 extension enables secure authorization for IoT devices, CLI tools, and other limited-input scenarios.&lt;/p&gt; 
&lt;p&gt;Firstly, users need to access &lt;a href="https://www.coze.com/open/oauth/apps"&gt;https://www.coze.com/open/oauth/apps&lt;/a&gt;. For the cn environment, users need to access &lt;a href="https://www.coze.cn/open/oauth/apps"&gt;https://www.coze.cn/open/oauth/apps&lt;/a&gt; to create an OAuth App of the type of TVs/Limited Input devices/Command line programs.&lt;/p&gt; 
&lt;p&gt;The specific creation process can be referred to in the document: &lt;a href="https://www.coze.com/docs/developer_guides/oauth_device_code"&gt;https://www.coze.com/docs/developer_guides/oauth_device_code&lt;/a&gt;. For the cn environment, it can be accessed at &lt;a href="https://www.coze.cn/docs/developer_guides/oauth_device_code"&gt;https://www.coze.cn/docs/developer_guides/oauth_device_code&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;After the creation is completed, three parameters, namely the client ID can be obtained.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void initOAuthClient() {
    String clientID = System.getenv("COZE_PKCE_OAUTH_CLIENT_ID");
    /*
     * The default access is api.coze.com, but if you need to access api.coze.cn,
     * please use base_url to configure the api endpoint to access
     */
    String cozeAPIBase = System.getenv("COZE_API_BASE");
    if (cozeAPIBase == null || cozeAPIBase.isEmpty()) {
        cozeAPIBase = Consts.COZE_COM_BASE_URL;
    }
    DeviceOAuthClient oauth = new DeviceOAuthClient.DeviceOAuthBuilder()
        .clientID(clientID)
        .baseURL(cozeAPIBase)
        .build();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the device oauth authorization process, developers need to first call the interface of Coze to generate the device code to obtain the user_code and device_code.&lt;/p&gt; 
&lt;p&gt;Then generate the authorization link through the user_code, guide the user to open the link, fill in the user_code, and consent to the authorization.&lt;/p&gt; 
&lt;p&gt;Developers need to call the interface of Coze to generate the token through the device_code.&lt;/p&gt; 
&lt;p&gt;When the user has not authorized or rejected the authorization, the interface will throw an error and return a specific error code.&lt;/p&gt; 
&lt;p&gt;After the user consents to the authorization, the interface will succeed and return the access_token.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;// First, you need to request the server to obtain the device code required in the device auth flow
DeviceAuthCode codeResp = oauth.getDeviceCode();

// The returned device_code contains an authorization link. Developers need to guide users
// to open up this link.
// open device_code.verification_url
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The developers then need to use the device_code to poll Coze's interface to obtain the token.&lt;/p&gt; 
&lt;p&gt;The SDK has encapsulated this part of the code in and handled the different returned error codes. The developers only need to invoke get_access_token.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;try {
    OAuthToken resp = oauth.getAccessToken(codeResp.getDeviceCode());
    System.out.println(resp);

    // Use the access token to init Coze client
    CozeAPI coze = new CozeAPI.Builder().auth(new TokenAuth(resp.getAccessToken())).baseURL(cozeAPIBase).build();
    // When the token expires, you can also refresh and re-obtain the token
    resp = oauth.refreshToken(resp.getRefreshToken());
} catch (CozeAuthException e) {
    switch (e.getCode()) {
        case AccessDenied:
            /*
            The user rejected the authorization.
            Developers need to guide the user to open the authorization link again.
            */
            break;
        case ExpiredToken:
            /*
            The token has expired. Developers need to guide the user to open
            the authorization link again.
            */
        default:
            e.printStackTrace();
            break;
    }
} catch (Exception e) {
    e.printStackTrace();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Streaming usage&lt;/h3&gt; 
&lt;p&gt;Bot chat and workflow run support running in streaming mode.&lt;/p&gt; 
&lt;p&gt;chat streaming example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;String token = System.getenv("COZE_API_TOKEN");
String botID = System.getenv("PUBLISHED_BOT_ID");
String userID = System.getenv("USER_ID");

TokenAuth authCli = new TokenAuth(token);

// Init the Coze client through the access_token.
CozeAPI coze = new CozeAPI.Builder()
        .baseURL(System.getenv("COZE_API_BASE"))
        .auth(authCli)
        .readTimeout(10000)
        .build();;

/*
 * Step one, create chat
 * Call the coze.chat().stream() method to create a chat. The create method is a streaming
 * chat and will return a Flowable ChatEvent. Developers should iterate the iterator to get
 * chat event and handle them.
 * */
ChatReq req = ChatReq.builder()
        .botID(botID)
        .userID(userID)
        .messages(Collections.singletonList(Message.buildUserQuestionText("What can you do?")))
        .build();

Flowable&amp;lt;ChatEvent&amp;gt; resp = coze.chat().stream(req);
resp.blockingForEach(event -&amp;gt; {
    if (ChatEventType.CONVERSATION_MESSAGE_DELTA.equals(event.getEvent())) {
        System.out.print(event.getMessage().getContent());
    }
    if (ChatEventType.CONVERSATION_CHAT_COMPLETED.equals(event.getEvent())) {
        System.out.println("Token usage:" + event.getChat().getUsage().getTokenCount());
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;workflow streaming example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public void streamRun() {
    // Get an access_token through personal access token or oauth.
    String token = System.getenv("COZE_API_TOKEN");
    TokenAuth authCli = new TokenAuth(token);

    // Init the Coze client through the access_token.
    CozeAPI coze = new CozeAPI.Builder()
            .baseURL(System.getenv("COZE_API_BASE"))
            .auth(authCli)
            .readTimeout(10000)
            .build();

    String workflowID = System.getenv("WORKSPACE_ID");

    // if your workflow need input params, you can send them by map
    Map&amp;lt;String, Object&amp;gt; data = new HashMap&amp;lt;&amp;gt;();
    data.put("param name", "param values");

    RunWorkflowReq.RunWorkflowReqBuilder builder = RunWorkflowReq.builder();
    builder.workflowID(workflowID).parameters(data);

    Flowable&amp;lt;WorkflowEvent&amp;gt; flowable = coze.workflows().runs().stream(builder.build());
    handleEvent(flowable, coze, workflowID);
}

private void handleEvent(Flowable&amp;lt;WorkflowEvent&amp;gt; events, CozeAPI coze, String workflowID) {
    events.subscribe(event -&amp;gt; {
        switch (event.getEvent()) {
            case MESSAGE:
                System.out.println("Got message" + event.getMessage());
                break;
            case ERROR:
                System.out.println("Got error" + event.getError());
                break;
            case INTERRUPT:
                handleEvent(coze.workflows().runs().resume(
                        ResumeRunReq.builder()
                                .workflowID(workflowID)
                                .eventID(event.getInterrupt().getInterruptData().getEventID())
                                .resumeData("your data")
                                .interruptType(event.getInterrupt().getInterruptData().getType())
                                .build()), coze, workflowID);
                break;
            default:
                break;
        }
    }, Throwable::printStackTrace);
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Paginator Iterator&lt;/h3&gt; 
&lt;p&gt;The result returned by all list interfaces is a paginator, which supports iteration.&lt;/p&gt; 
&lt;p&gt;Take the example of listing the bots in a space to explain the three ways to use the paginator iterator:&lt;/p&gt; 
&lt;h4&gt;1. Not using iterators&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;String token = System.getenv("COZE_API_TOKEN");
TokenAuth authCli = new TokenAuth(token);

// Init the Coze client through the access_token.
CozeAPI coze = new CozeAPI.Builder()
        .baseURL(System.getenv("COZE_API_BASE"))
        .auth(authCli)
        .readTimeout(10000)
        .build();;

Integer pageNum = 1;
String workspaceID = System.getenv("WORKSPACE_ID");
ListBotReq listBotReq = ListBotReq.builder()
        .spaceID(workspaceID)
        .pageNum(pageNum)
        .pageSize(10)
        .build();
PageResult&amp;lt;SimpleBot&amp;gt; botList = coze.bots().list(listBotReq);

// the api provides two ways for developers to turn pages for all paging interfaces.
// 1. The first way is to let developers manually call the API to request the next page.
while (botList.getHasMore()) {
    pageNum++;
    listBotReq.setPageNum(pageNum);
    botList = coze.bots().list(listBotReq);
}

// 2. The SDK encapsulates an iterator, which can be used to turn pages backward automatically.

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;2. Iterate over the paginator, getting T&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;String token = System.getenv("COZE_API_TOKEN");
TokenAuth authCli = new TokenAuth(token);

// Init the Coze client through the access_token.
CozeAPI coze = new CozeAPI.Builder()
        .baseURL(System.getenv("COZE_API_BASE"))
        .auth(authCli)
        .readTimeout(10000)
        .build();;

Integer pageNum = 1;
String workspaceID = System.getenv("WORKSPACE_ID");
ListBotReq listBotReq = ListBotReq.builder()
        .spaceID(workspaceID)
        .pageNum(pageNum)
        .pageSize(10)
        .build();
PageResult&amp;lt;SimpleBot&amp;gt; botList = coze.bots().list(listBotReq);

// the api provides two ways for developers to turn pages for all paging interfaces.
// 1. The first way is to let developers manually call the API to request the next page.
Iterator&amp;lt;SimpleBot&amp;gt; iterator = botList.getIterator();
while (iterator.hasNext()) {
    iterator.forEachRemaining(System.out::println);
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WebSocket&lt;/h3&gt; 
&lt;p&gt;The SDK provides WebSocket interfaces for real-time chat, speech synthesis and speech transcription.&lt;/p&gt; 
&lt;p&gt;You can check the official documentation for more information: &lt;a href="https://www.coze.cn/open/docs/guides/websocket_openapi"&gt;https://www.coze.cn/open/docs/guides/websocket_openapi&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;WebSocket Chat&lt;/h4&gt; 
&lt;p&gt;WebSocket chat allows real-time communication with bots, including text and audio interactions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;WebsocketChatClient client = coze.websocket()
    .chat()
    .create(new WebsocketChatCreateReq(botID, new CallbackHandler()));

// Send audio data
String audioData = "..."; // Base64 encoded audio data
client.inputAudioBufferAppend(audioData);
client.inputAudioBufferComplete();

// Handle responses in callback
class CallbackHandler extends WebsocketChatCallbackHandler {
    // Handle text responses
    @Override
    public void onConversationMessageDelta(WebsocketChatClient client, ConversationMessageDeltaEvent event) {
        System.out.printf("Received: %s\n", event.getData().getContent());
    }

    // Handle audio responses  
    @Override
    public void onConversationAudioDelta(WebsocketChatClient client, ConversationAudioDeltaEvent event) {
        byte[] audioData = event.getData().getAudio();
        // Process audio data...
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Speech Synthesis&lt;/h4&gt; 
&lt;p&gt;WebSocket speech synthesis allows real-time text-to-speech conversion:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;WebsocketAudioSpeechClient client = coze.websocket()
    .audio()
    .speech()
    .create(new WebsocketAudioSpeechCreateReq(new CallbackHandler()));

// Configure audio output
OutputAudio outputAudio = OutputAudio.builder()
    .voiceId(voiceID)
    .codec("pcm")
    .speechRate(50)
    .pcmConfig(PCMConfig.builder().sampleRate(24000).build())
    .build();
client.speechUpdate(new SpeechUpdateEventData(outputAudio));

// Send text for synthesis
client.inputTextBufferAppend("Hello world!");
client.inputTextBufferComplete();

// Handle synthesized audio in callback
class CallbackHandler extends WebsocketAudioSpeechCallbackHandler {
    @Override
    public void onSpeechAudioUpdate(WebsocketAudioSpeechClient client, SpeechAudioUpdateEvent event) {
        byte[] audioData = event.getDelta();
        // Process audio data...
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Speech Transcription&lt;/h4&gt; 
&lt;p&gt;WebSocket speech transcription provides real-time speech-to-text conversion:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;WebsocketAudioTranscriptionsClient client = coze.websocket()
    .audio()
    .transcriptions()
    .create(new WebsocketAudioTranscriptionsCreateReq(new CallbackHandler()));

// Configure audio input
InputAudio inputAudio = InputAudio.builder()
    .sampleRate(24000)
    .codec("pcm")
    .format("wav")
    .channel(2)
    .build();
client.transcriptionsUpdate(new TranscriptionsUpdateEventData(inputAudio));

// Send audio for transcription
String audioData = "..."; // Base64 encoded audio data
client.inputAudioBufferAppend(audioData);
client.inputAudioBufferComplete();

// Handle transcription results in callback
class CallbackHandler extends WebsocketAudioTranscriptionsCallbackHandler {
    @Override
    public void onTranscriptionsMessageUpdate(
        WebsocketAudioTranscriptionsClient client, 
        TranscriptionsMessageUpdateEvent event) {
        System.out.println(event.getData().getContent());
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All WebSocket clients support proper resource cleanup:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;try {
    // Use the client...
} finally {
    if (client != null) {
        client.close();
    }
    coze.shutdownExecutor();
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>kestra-io/kestra</title>
      <link>https://github.com/kestra-io/kestra</link>
      <description>&lt;p&gt;⚡ Universal Workflow Orchestration Platform — Code in any language, run anywhere. 800+ plugins for data, infrastructure, and AI automation.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.kestra.io"&gt; &lt;img src="https://kestra.io/banner.png" alt="Kestra workflow orchestrator"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align="center" style="border-bottom: none"&gt; Event-Driven Declarative Orchestration Platform &lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/kestra-io/kestra/releases"&gt;&lt;img src="https://img.shields.io/github/tag-pre/kestra-io/kestra.svg?color=blueviolet" alt="Last Version"&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/kestra-io/kestra/raw/develop/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/kestra-io/kestra?color=blueviolet" alt="License"&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/kestra-io/kestra/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/kestra-io/kestra?color=blueviolet&amp;amp;logo=github" alt="Github star"&gt;&lt;/a&gt; 
 &lt;br&gt; 
 &lt;a href="https://kestra.io"&gt;&lt;img src="https://img.shields.io/badge/Website-kestra.io-192A4E?color=blueviolet" alt="Kestra infinitely scalable orchestration and scheduling platform"&gt;&lt;/a&gt; 
 &lt;a href="https://kestra.io/slack"&gt;&lt;img src="https://img.shields.io/badge/Slack-Join%20Community-blueviolet?logo=slack" alt="Slack"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;p align="center"&gt; &lt;a href="https://x.com/kestra_io"&gt;&lt;img height="25" src="https://kestra.io/twitter.svg?sanitize=true" alt="X(formerly Twitter)"&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.linkedin.com/company/kestra/"&gt;&lt;img height="25" src="https://kestra.io/linkedin.svg?sanitize=true" alt="linkedin"&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.youtube.com/@kestra-io"&gt;&lt;img height="25" src="https://kestra.io/youtube.svg?sanitize=true" alt="youtube"&gt;&lt;/a&gt; &amp;nbsp; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/2714" target="_blank"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/2714" alt="kestra-io%2Fkestra | Trendshift" width="250" height="55"&gt; &lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/kestra?embed=true&amp;amp;utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-kestra" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=612077&amp;amp;theme=light&amp;amp;period=daily&amp;amp;t=1740737506162" alt="Kestra - All-in-one automation &amp;amp; orchestration platform | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://go.kestra.io/video/product-overview" target="_blank"&gt; &lt;img src="https://kestra.io/startvideo.png" alt="Get started in 4 minutes with Kestra" width="640px"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center" style="color:grey;"&gt;&lt;i&gt;Click on the image to learn how to get started with Kestra in 4 minutes.&lt;/i&gt;&lt;/p&gt; 
&lt;h2&gt;🌟 What is Kestra?&lt;/h2&gt; 
&lt;p&gt;Kestra is an open-source, event-driven orchestration platform that makes both &lt;strong&gt;scheduled&lt;/strong&gt; and &lt;strong&gt;event-driven&lt;/strong&gt; workflows easy. By bringing &lt;strong&gt;Infrastructure as Code&lt;/strong&gt; best practices to data, process, and microservice orchestration, you can build reliable &lt;a href="https://kestra.io/docs/getting-started"&gt;workflows&lt;/a&gt; directly from the UI in just a few lines of YAML.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Everything as Code and from the UI:&lt;/strong&gt; keep &lt;strong&gt;workflows as code&lt;/strong&gt; with a &lt;strong&gt;Git Version Control&lt;/strong&gt; integration, even when building them from the UI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Event-Driven &amp;amp; Scheduled Workflows:&lt;/strong&gt; automate both &lt;strong&gt;scheduled&lt;/strong&gt; and &lt;strong&gt;real-time&lt;/strong&gt; event-driven workflows via a simple &lt;code&gt;trigger&lt;/code&gt; definition.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative YAML Interface:&lt;/strong&gt; define workflows using a simple configuration in the &lt;strong&gt;built-in code editor&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rich Plugin Ecosystem:&lt;/strong&gt; hundreds of plugins built in to extract data from any database, cloud storage, or API, and &lt;strong&gt;run scripts in any language&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Intuitive UI &amp;amp; Code Editor:&lt;/strong&gt; build and visualize workflows directly from the UI with syntax highlighting, auto-completion and real-time syntax validation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable:&lt;/strong&gt; designed to handle millions of workflows, with high availability and fault tolerance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Version Control Friendly:&lt;/strong&gt; write your workflows from the built-in code Editor and push them to your preferred Git branch directly from Kestra, enabling best practices with CI/CD pipelines and version control systems.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Structure &amp;amp; Resilience&lt;/strong&gt;: tame chaos and bring resilience to your workflows with &lt;strong&gt;namespaces&lt;/strong&gt;, &lt;strong&gt;labels&lt;/strong&gt;, &lt;strong&gt;subflows&lt;/strong&gt;, &lt;strong&gt;retries&lt;/strong&gt;, &lt;strong&gt;timeout&lt;/strong&gt;, &lt;strong&gt;error handling&lt;/strong&gt;, &lt;strong&gt;inputs&lt;/strong&gt;, &lt;strong&gt;outputs&lt;/strong&gt; that generate artifacts in the UI, &lt;strong&gt;variables&lt;/strong&gt;, &lt;strong&gt;conditional branching&lt;/strong&gt;, &lt;strong&gt;advanced scheduling&lt;/strong&gt;, &lt;strong&gt;event triggers&lt;/strong&gt;, &lt;strong&gt;backfills&lt;/strong&gt;, &lt;strong&gt;dynamic tasks&lt;/strong&gt;, &lt;strong&gt;sequential and parallel tasks&lt;/strong&gt;, and skip tasks or triggers when needed by setting the flag &lt;code&gt;disabled&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🧑‍💻 The YAML definition gets automatically adjusted any time you make changes to a workflow from the UI or via an API call. Therefore, the orchestration logic is &lt;strong&gt;always managed declaratively in code&lt;/strong&gt;, even if you modify your workflows in other ways (UI, CI/CD, Terraform, API calls).&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://kestra.io/adding-tasks.gif" alt="Adding new tasks in the UI"&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;h3&gt;Try the Live Demo&lt;/h3&gt; 
&lt;p&gt;Try Kestra with our &lt;a href="https://demo.kestra.io/ui/login?auto"&gt;&lt;strong&gt;Live Demo&lt;/strong&gt;&lt;/a&gt;. No installation required!&lt;/p&gt; 
&lt;h3&gt;Get Started Locally in 5 Minutes&lt;/h3&gt; 
&lt;h4&gt;Launch Kestra in Docker&lt;/h4&gt; 
&lt;p&gt;Make sure that Docker is running. Then, start Kestra in a single command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root \
  -v /var/run/docker.sock:/var/run/docker.sock \
  -v /tmp:/tmp kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows and use PowerShell:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root `
    -v "/var/run/docker.sock:/var/run/docker.sock" `
    -v "C:/Temp:/tmp" kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows and use Command Prompt (CMD):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cmd"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root ^
    -v "/var/run/docker.sock:/var/run/docker.sock" ^
    -v "C:/Temp:/tmp" kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows and use WSL (Linux-based environment in Windows):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root \
    -v "/var/run/docker.sock:/var/run/docker.sock" \
    -v "C:/Temp:/tmp" kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check our &lt;a href="https://kestra.io/docs/installation"&gt;Installation Guide&lt;/a&gt; for other deployment options (Docker Compose, Podman, Kubernetes, AWS, GCP, Azure, and more).&lt;/p&gt; 
&lt;p&gt;Access the Kestra UI at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt; and start building your first flow!&lt;/p&gt; 
&lt;h4&gt;Your First Hello World Flow&lt;/h4&gt; 
&lt;p&gt;Create a new flow with the following content:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;id: hello_world
namespace: dev

tasks:
  - id: say_hello
    type: io.kestra.plugin.core.log.Log
    message: "Hello, World!"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the flow and see the output in the UI!&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;🧩 Plugin Ecosystem&lt;/h2&gt; 
&lt;p&gt;Kestra's functionality is extended through a rich &lt;a href="https://kestra.io/plugins"&gt;ecosystem of plugins&lt;/a&gt; that empower you to run tasks anywhere and code in any language, including Python, Node.js, R, Go, Shell, and more. Here's how Kestra plugins enhance your workflows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run Anywhere:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Local or Remote Execution:&lt;/strong&gt; Execute tasks on your local machine, remote servers via SSH, or scale out to serverless containers using &lt;a href="https://kestra.io/docs/task-runners"&gt;Task Runners&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Docker and Kubernetes Support:&lt;/strong&gt; Seamlessly run Docker containers within your workflows or launch Kubernetes jobs to handle compute-intensive workloads.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Code in Any Language:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Scripting Support:&lt;/strong&gt; Write scripts in your preferred programming language. Kestra supports Python, Node.js, R, Go, Shell, and others, allowing you to integrate existing codebases and deployment patterns.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Flexible Automation:&lt;/strong&gt; Execute shell commands, run SQL queries against various databases, and make HTTP requests to interact with APIs.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Event-Driven and Real-Time Processing:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Real-Time Triggers:&lt;/strong&gt; React to events from external systems in real-time, such as file arrivals, new messages in message buses (Kafka, Redis, Pulsar, AMQP, MQTT, NATS, AWS SQS, Google Pub/Sub, Azure Event Hubs), and more.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Custom Events:&lt;/strong&gt; Define custom events to trigger flows based on specific conditions or external signals, enabling highly responsive workflows.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cloud Integrations:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;AWS, Google Cloud, Azure:&lt;/strong&gt; Integrate with a variety of cloud services to interact with storage solutions, messaging systems, compute resources, and more.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Big Data Processing:&lt;/strong&gt; Run big data processing tasks using tools like Apache Spark or interact with analytics platforms like Google BigQuery.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Monitoring and Notifications:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Stay Informed:&lt;/strong&gt; Send messages to Slack channels, email notifications, or trigger alerts in PagerDuty to keep your team updated on workflow statuses.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Kestra's plugin ecosystem is continually expanding, allowing you to tailor the platform to your specific needs. Whether you're orchestrating complex data pipelines, automating scripts across multiple environments, or integrating with cloud services, there's likely a plugin to assist. And if not, you can always &lt;a href="https://kestra.io/docs/plugin-developer-guide/"&gt;build your own plugins&lt;/a&gt; to extend Kestra's capabilities.&lt;/p&gt; 
&lt;p&gt;🧑‍💻 &lt;strong&gt;Note:&lt;/strong&gt; This is just a glimpse of what Kestra plugins can do. Explore the full list on our &lt;a href="https://kestra.io/plugins"&gt;Plugins Page&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;📚 Key Concepts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Flows:&lt;/strong&gt; the core unit in Kestra, representing a workflow composed of tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tasks:&lt;/strong&gt; individual units of work, such as running a script, moving data, or calling an API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Namespaces:&lt;/strong&gt; logical grouping of flows for organization and isolation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Triggers:&lt;/strong&gt; schedule or events that initiate the execution of flows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Inputs &amp;amp; Variables:&lt;/strong&gt; parameters and dynamic data passed into flows and tasks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🎨 Build Workflows Visually&lt;/h2&gt; 
&lt;p&gt;Kestra provides an intuitive UI that allows you to interactively build and visualize your workflows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Drag-and-Drop Interface:&lt;/strong&gt; add and rearrange tasks from the Topology Editor.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-Time Validation:&lt;/strong&gt; instant feedback on your workflow's syntax and structure to catch errors early.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auto-Completion:&lt;/strong&gt; smart suggestions as you type to write flow code quickly and without syntax errors.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Live Topology View:&lt;/strong&gt; see your workflow as a Directed Acyclic Graph (DAG) that updates in real-time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🔧 Extensible and Developer-Friendly&lt;/h2&gt; 
&lt;h3&gt;Plugin Development&lt;/h3&gt; 
&lt;p&gt;Create custom plugins to extend Kestra's capabilities. Check out our &lt;a href="https://kestra.io/docs/plugin-developer-guide/"&gt;Plugin Developer Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h3&gt;Infrastructure as Code&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Version Control:&lt;/strong&gt; store your flows in Git repositories.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CI/CD Integration:&lt;/strong&gt; automate deployment of flows using CI/CD pipelines.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terraform Provider:&lt;/strong&gt; manage Kestra resources with the &lt;a href="https://kestra.io/docs/terraform/"&gt;official Terraform provider&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🌐 Join the Community&lt;/h2&gt; 
&lt;p&gt;Stay connected and get support:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Slack:&lt;/strong&gt; Join our &lt;a href="https://kestra.io/slack"&gt;Slack community&lt;/a&gt; to ask questions and share ideas.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LinkedIn:&lt;/strong&gt; Follow us on &lt;a href="https://www.linkedin.com/company/kestra/"&gt;LinkedIn&lt;/a&gt; — next to Slack and GitHub, this is our main channel to share updates and product announcements.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;YouTube:&lt;/strong&gt; Subscribe to our &lt;a href="https://www.youtube.com/@kestra-io"&gt;YouTube channel&lt;/a&gt; for educational video content. We publish new videos every week!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;X:&lt;/strong&gt; Follow us on &lt;a href="https://x.com/kestra_io"&gt;X&lt;/a&gt; if you're still active there.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions of all kinds!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Report Issues:&lt;/strong&gt; Found a bug or have a feature request? Open an &lt;a href="https://github.com/kestra-io/kestra/issues"&gt;issue on GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute Code:&lt;/strong&gt; Check out our &lt;a href="https://kestra.io/docs/getting-started/contributing"&gt;Contributor Guide&lt;/a&gt; for initial guidelines, and explore our &lt;a href="https://go.kestra.io/contributing"&gt;good first issues&lt;/a&gt; for beginner-friendly tasks to tackle first.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Develop Plugins:&lt;/strong&gt; Build and share plugins using our &lt;a href="https://kestra.io/docs/plugin-developer-guide/"&gt;Plugin Developer Guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute to our Docs:&lt;/strong&gt; Contribute edits or updates to keep our &lt;a href="https://github.com/kestra-io/docs"&gt;documentation&lt;/a&gt; top-notch.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;Kestra is licensed under the Apache 2.0 License © &lt;a href="https://kestra.io"&gt;Kestra Technologies&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;⭐️ Stay Updated&lt;/h2&gt; 
&lt;p&gt;Give our repository a star to stay informed about the latest features and updates!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/kestra-io/kestra"&gt;&lt;img src="https://kestra.io/star.gif" alt="Star the Repo"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Thank you for considering Kestra for your workflow orchestration needs. We can't wait to see what you'll build!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alibaba/spring-ai-alibaba</title>
      <link>https://github.com/alibaba/spring-ai-alibaba</link>
      <description>&lt;p&gt;Agentic AI Framework for Java Developers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href="https://java2ai.com"&gt;Spring AI Alibaba&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.apache.org/licenses/LICENSE-2.0.html"&gt;&lt;img src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?sanitize=true" alt="License"&gt;&lt;/a&gt; &lt;a href="https://github.com/alibaba/spring-ai-alibaba/actions?query=workflow%3A%22%F0%9F%9B%A0%EF%B8%8F+Build+and+Test%22"&gt;&lt;img src="https://github.com/alibaba/spring-ai-alibaba/workflows/%F0%9F%9B%A0%EF%B8%8F%20Build%20and%20Test/badge.svg?sanitize=true" alt="CI Status"&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/alibaba/spring-ai-alibaba"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki"&gt;&lt;/a&gt; &lt;a href="https://maven-badges.herokuapp.com/maven-central/com.alibaba.cloud.ai/spring-ai-alibaba"&gt;&lt;img src="https://maven-badges.herokuapp.com/maven-central/com.alibaba.cloud.ai/spring-ai-alibaba/badge.svg?sanitize=true" alt="Maven central"&gt;&lt;/a&gt; &lt;img alt="gitleaks badge" src="https://img.shields.io/badge/protected%20by-gitleaks-blue"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/alibaba/spring-ai-alibaba/main/README-zh.md"&gt;中文版本&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://java2ai.com"&gt;Spring AI Alibaba&lt;/a&gt; is an agentic AI framework for building ChatBot, Workflow, and Multi-agent applications.&lt;/p&gt; 
&lt;h2&gt;Core Features&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/alibaba/spring-ai-alibaba/main/docs/imgs/spring-ai-alibaba-architecture.png" alt="architecture" style="max-width: 740px; height: 508px"&gt; &lt;/p&gt; 
&lt;p&gt;Spring AI Alibaba provides the following core capabilities to help developers quickly build Chatbot, Workflow, or Multi-agent applications:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Graph based multi-agent framework&lt;/strong&gt;, with Spring AI Alibaba Graph, developers can quickly build workflows and multi-agent applications in ease. Graph code can be generated from Dify DSL and debugged in a visual way.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise-ready AI ecosystem integration, bring agents from demo to production.&lt;/strong&gt; Spring AI Alibaba supports integration with the Aliyun Bailian platform, providing LLM model service and RAG knowledge solutions; Support seamless integration of AI observation products such as ARMS and Langfuse; Support enterprise level MCP integration, including Nacos MCP Registry for MCP discovery and routing, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Plan-Act agent products and platforms.&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;JManus, Spring AI Alibaba based Manus implementation, supports delicacy plan adjustment, plan reuse.&lt;/li&gt; 
 &lt;li&gt;DeepResearch, Spring AI Alibaba based research and report agent with powerful tools like search engines, web crawlers, Python and MCP services.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;To quickly get started with Spring AI Alibaba, add 'spring-ai-alibaba-starter-dashscope' dependency to your java project.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependencyManagement&amp;gt;
  &amp;lt;dependencies&amp;gt;
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;com.alibaba.cloud.ai&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;spring-ai-alibaba-bom&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;1.0.0.2&amp;lt;/version&amp;gt;
      &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;
      &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;
    &amp;lt;/dependency&amp;gt;
  &amp;lt;/dependencies&amp;gt;
&amp;lt;/dependencyManagement&amp;gt;

&amp;lt;dependencies&amp;gt;
  &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;com.alibaba.cloud.ai&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spring-ai-alibaba-starter-dashscope&amp;lt;/artifactId&amp;gt;
  &amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please check &lt;a href="https://java2ai.com/docs/1.0.0.2/get-started/chatbot"&gt;Quick Start&lt;/a&gt; on our official website to learn more details. More starters include &lt;code&gt;spring-ai-alibaba-graph-core&lt;/code&gt;, &lt;code&gt;spring-ai-alibaba-starter-nl2sql&lt;/code&gt;,&lt;code&gt;spring-ai-alibaba-starter-nacos-mcp-client&lt;/code&gt;, etc, please refer to the official website documentation.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;NOTE!&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Requires JDK 17+.&lt;/li&gt; 
  &lt;li&gt;If there are any &lt;code&gt;spring-ai&lt;/code&gt; dependency issue, please lean how to configure the &lt;code&gt;spring-milestones&lt;/code&gt; Maven repository on &lt;a href="https://java2ai.com/docs/1.0.0.2/faq"&gt;FAQ page&lt;/a&gt;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Playground and Example&lt;/h3&gt; 
&lt;p&gt;The community has developed a &lt;a href="https://github.com/springaialibaba/spring-ai-alibaba-examples/tree/main/spring-ai-alibaba-playground"&gt;Playground&lt;/a&gt; agent that includes a complete front-end UI and back-end implementation. The Playground back-end is developed using Spring AI Alibaba and gives users a quick overview of all core framework capabilities such as chatbot, multi-round conversations, image generation, multi-modality, tool calling, MCP, and RAG.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/alibaba/spring-ai-alibaba/main/docs/imgs/playground.png" alt="PlayGround" style="max-width: 949px; height: 537px; border-radius: 15px; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);"&gt; &lt;/p&gt; 
&lt;p&gt;You can &lt;a href="https://github.com/springaialibaba/spring-ai-alibaba-examples"&gt;deploy the Playground example locally&lt;/a&gt; and access the experience through your browser, or copy the source code and tweak it to your own business needs to build your own set of AI apps more quickly. For more examples, please refer to our official example repository: &lt;a href="https://github.com/springaialibaba/spring-ai-alibaba-examples"&gt;https://github.com/springaialibaba/spring-ai-alibaba-examples&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Spring AI Alibaba Graph Multi-gent Framework&lt;/h2&gt; 
&lt;p&gt;Spring AI Alibaba Graph enables developers to implement workflow and multi-agent application orchestration. Its core design is mainly from LangGraph, and we have added a rich set of prebuilt Nodes and simplified the Graph State definition, allowing developers to better integrate with low-code platforms and write popular multi-agent pattern applications.&lt;/p&gt; 
&lt;p&gt;Core features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Workflow, built-in workflow nodes, aligned with mainstream low-code platforms;&lt;/li&gt; 
 &lt;li&gt;Multi-agent, built-in ReAct Agent, Supervisor and other modes;&lt;/li&gt; 
 &lt;li&gt;Native streaming support;&lt;/li&gt; 
 &lt;li&gt;Human-in-the-loop, waiting for human confirmation, modifying states and resuming execution;&lt;/li&gt; 
 &lt;li&gt;Memory and persistent storage;&lt;/li&gt; 
 &lt;li&gt;Graph state snapshot;&lt;/li&gt; 
 &lt;li&gt;Nested and paralleled graph;&lt;/li&gt; 
 &lt;li&gt;PlantUML and Mermaid format export.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Enterprise-ready AI Ecosystem Integration&lt;/h2&gt; 
&lt;p&gt;To bring agent from demo to production, developers and organizations face lots of challenges, from evaluation, tracing, MCP integration, prompt management, to token rate-limit, etc. Spring AI Alibaba, as am enterprise solution incubated from serving enterprise agent development, provides profound solutions by integrating with Nacos MCP Registry, Higress AI gateway, Alibaba Cloud ARMS, Alibaba Cloud Vector Stores, Alibaba Cloud Bailian platform, etc.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://img.alicdn.com/imgextra/i2/O1CN01sON0wZ21yKROGt2SJ_!!6000000007053-2-tps-5440-2928.png" alt="spring-ai-alibaba-architecture" style="max-width: 700px; height: 400px"&gt; &lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Distributed MCP discovery and proxy:&lt;/strong&gt; Support distributed MCP Server discovery and load balancing based on Nacos MCP Registry. Zero code change to transform HTTP and Dubbo services into MCP servers with Spring AI Alibaba MCP Gateway and Higress;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Higress LLM model proxy:&lt;/strong&gt; Higress as a LLM proxy, &lt;code&gt;spring-ai-starter-model-openai&lt;/code&gt; adapter can leverage the unified Higress OpenAI model proxy API;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Better and easy data integration:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;a. Bailian RAG integration. Leverage Bailian platform's excellent performance on data filtering, chunking, and vectoring, while using Spring AI Alibaba to do RAG retrieval;&lt;/li&gt; 
   &lt;li&gt;b. Bailian ChatBI integration. Spring AI Alibaba Nl2SQL, built on Bailian ChatBI, completely open-source, can generate SQL based on natural language query.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Observation and evaluation platforms:&lt;/strong&gt; Thanks to the sdk-native instrumentation of Spring AI, observation and evaluation can be achieved by reporting to OpenTelemetry compatible platforms such as Langfuse and Alibaba Cloud ARMS.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Agent Products and Platforms&lt;/h2&gt; 
&lt;h3&gt;JManus&lt;/h3&gt; 
&lt;p&gt;The emergence of Manus has given people unlimited space with the ability of general intelligent agents to automatically plan-act on various tasks. It is expected to be very good at solving open-ended issues and can have a wide range of applications in daily life, work, and other scenarios.&lt;/p&gt; 
&lt;p&gt;JManus is not just a Spring AI Alibaba version Manus replica, it's also designed as a platform that can help developers to build their own fine-tuned agents targeting specific business scenarios. The typical characteristic of enterprise level agent is determinism, that means we need customized tools and sub agents, as well as stable and deterministic planning and processes. Therefore, we hope that JManus can become an intelligent agent development platform, allowing users to build their own domain specific intelligent agent implementations in the most intuitive and low-cost way.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/alibaba/spring-ai-alibaba/main/docs/imgs/jmanus.png" alt="jmanus" style="max-width: 749px; height: 467px; border-radius: 15px; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);"&gt; &lt;/p&gt; 
&lt;h3&gt;DeepResearch&lt;/h3&gt; 
&lt;p&gt;Spring AI Alibaba DeepResearch is a deep research agent developed based on the Spring AI Alibaba Graph, which includes a complete front-end web UI (under development) and back-end implementation. DeepResearch can help users complete various deep research reports with the help of large models and a series of carefully designed tools such as Web Search, Crawling, Python script engine, etc.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/alibaba/spring-ai-alibaba/main/docs/imgs/deepresearch.png" alt="Deep Research" style="max-width: 770px; height: 850px"&gt; &lt;/p&gt; 
&lt;h2&gt;Contribution Guide&lt;/h2&gt; 
&lt;p&gt;Please refer to the &lt;a href="https://raw.githubusercontent.com/alibaba/spring-ai-alibaba/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt; to learn how to participate in the development of Spring AI Alibaba.&lt;/p&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Dingtalk Group (钉钉群), search &lt;code&gt;94405033092&lt;/code&gt; and join.&lt;/li&gt; 
 &lt;li&gt;WeChat Group (微信公众号), scan the QR code below and follow us.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/alibaba/spring-ai-alibaba/main/docs/imgs/wechat-account.png" alt="Deep Research" style="max-width: 200px; height: 200px;"&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Some of this project's ideas and codes are inspired by or rewrote from the following projects. Great thanks to those who have created and open-sourced these projects.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spring-projects/spring-ai"&gt;Spring AI&lt;/a&gt;, a Spring-friendly API and abstractions for developing AI applications licensed under the Apache License 2.0.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langchain-ai/langgraph"&gt;Langgraph&lt;/a&gt;, a library for building stateful, multi-actor applications with LLMs, used to create agent and multi-agent workflows licensed under the MIT license.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bsorrentino/langgraph4j"&gt;Langgraph4J&lt;/a&gt;, a porting of original &lt;a href="https://github.com/langchain-ai/langgraph"&gt;LangGraph&lt;/a&gt; from the &lt;a href="https://github.com/langchain-ai"&gt;LangChain AI project&lt;/a&gt; in Java fashion.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>spring-projects/spring-framework</title>
      <link>https://github.com/spring-projects/spring-framework</link>
      <description>&lt;p&gt;Spring Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://raw.githubusercontent.com/spring-projects/spring-framework/main/framework-docs/src/docs/spring-framework.png" width="80" height="80"&gt; Spring Framework &lt;a href="https://github.com/spring-projects/spring-framework/actions/workflows/build-and-deploy-snapshot.yml?query=branch%3Amain"&gt;&lt;img src="https://github.com/spring-projects/spring-framework/actions/workflows/build-and-deploy-snapshot.yml/badge.svg?branch=main" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://ge.spring.io/scans?search.rootProjectNames=spring"&gt;&lt;img src="https://img.shields.io/badge/Revved%20up%20by-Develocity-06A0CE?logo=Gradle&amp;amp;labelColor=02303A" alt="Revved up by Develocity"&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;This is the home of the Spring Framework: the foundation for all &lt;a href="https://spring.io/projects"&gt;Spring projects&lt;/a&gt;. Collectively the Spring Framework and the family of Spring projects are often referred to simply as "Spring".&lt;/p&gt; 
&lt;p&gt;Spring provides everything required beyond the Java programming language for creating enterprise applications for a wide range of scenarios and architectures. Please read the &lt;a href="https://docs.spring.io/spring-framework/reference/overview.html"&gt;Overview&lt;/a&gt; section of the reference documentation for a more complete introduction.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project is governed by the &lt;a href="https://github.com/spring-projects/spring-framework/?tab=coc-ov-file#contributor-code-of-conduct"&gt;Spring Code of Conduct&lt;/a&gt;. By participating, you are expected to uphold this code of conduct. Please report unacceptable behavior to &lt;a href="mailto:spring-code-of-conduct@spring.io"&gt;spring-code-of-conduct@spring.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Access to Binaries&lt;/h2&gt; 
&lt;p&gt;For access to artifacts or a distribution zip, see the &lt;a href="https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-Artifacts"&gt;Spring Framework Artifacts&lt;/a&gt; wiki page.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The Spring Framework maintains reference documentation (&lt;a href="https://docs.spring.io/spring-framework/reference/"&gt;published&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/spring-projects/spring-framework/main/framework-docs/modules/ROOT"&gt;source&lt;/a&gt;), GitHub &lt;a href="https://github.com/spring-projects/spring-framework/wiki"&gt;wiki pages&lt;/a&gt;, and an &lt;a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/"&gt;API reference&lt;/a&gt;. There are also &lt;a href="https://spring.io/guides"&gt;guides and tutorials&lt;/a&gt; across Spring projects.&lt;/p&gt; 
&lt;h2&gt;Micro-Benchmarks&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/spring-projects/spring-framework/wiki/Micro-Benchmarks"&gt;Micro-Benchmarks&lt;/a&gt; wiki page.&lt;/p&gt; 
&lt;h2&gt;Build from Source&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/spring-projects/spring-framework/wiki/Build-from-Source"&gt;Build from Source&lt;/a&gt; wiki page and the &lt;a href="https://raw.githubusercontent.com/spring-projects/spring-framework/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Continuous Integration Builds&lt;/h2&gt; 
&lt;p&gt;Information regarding CI builds can be found in the &lt;a href="https://raw.githubusercontent.com/spring-projects/spring-framework/main/ci/README.adoc"&gt;Spring Framework Concourse pipeline&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;Stay in Touch&lt;/h2&gt; 
&lt;p&gt;Follow &lt;a href="https://twitter.com/springcentral"&gt;@SpringCentral&lt;/a&gt;, &lt;a href="https://twitter.com/springframework"&gt;@SpringFramework&lt;/a&gt;, and its &lt;a href="https://twitter.com/springframework/lists/team/members"&gt;team members&lt;/a&gt; on 𝕏. In-depth articles can be found at &lt;a href="https://spring.io/blog/"&gt;The Spring Blog&lt;/a&gt;, and releases are announced via our &lt;a href="https://spring.io/blog/category/releases"&gt;releases feed&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Spring Framework is released under version 2.0 of the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;Apache License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>648540858/wvp-GB28181-pro</title>
      <link>https://github.com/648540858/wvp-GB28181-pro</link>
      <description>&lt;p&gt;WEB VIDEO PLATFORM是一个基于GB28181-2016标准实现的网络视频平台，支持NAT穿透，支持海康、大华、宇视等品牌的IPC、NVR、DVR接入。支持国标级联，支持rtsp/rtmp等视频流转发到国标平台，支持rtsp/rtmp等推流转发到国标平台。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/648540858/wvp-GB28181-pro/master/doc/_media/logo.png" alt="logo"&gt;&lt;/p&gt; 
&lt;h1&gt;开箱即用的28181协议视频平台&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://travis-ci.org/xia-chu/ZLMediaKit"&gt;&lt;img src="https://travis-ci.org/xia-chu/ZLMediaKit.svg?branch=master" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://github.com/xia-chu/ZLMediaKit/raw/master/LICENSE"&gt;&lt;img src="http://img.shields.io/badge/license-MIT-green.svg?sanitize=true" alt="license"&gt;&lt;/a&gt; &lt;a href="https://en.cppreference.com/"&gt;&lt;img src="https://img.shields.io/badge/language-java-red.svg?sanitize=true" alt="JAVA"&gt;&lt;/a&gt; &lt;a href="https://github.com/xia-chu/ZLMediaKit"&gt;&lt;img src="https://img.shields.io/badge/platform-linux%20%7C%20macos%20%7C%20windows-blue.svg?sanitize=true" alt="platform"&gt;&lt;/a&gt; &lt;a href="https://github.com/xia-chu/ZLMediaKit/pulls"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-yellow.svg?sanitize=true" alt="PRs Welcome"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;WEB VIDEO PLATFORM是一个基于GB28181-2016标准实现的开箱即用的网络视频平台，负责实现核心信令与设备管理后台部分，支持NAT穿透，支持海康、大华、宇视等品牌的IPC、NVR接入。支持国标级联，支持将不带国标功能的摄像机/直播流/直播推流转发到其他国标平台。&lt;/p&gt; 
&lt;p&gt;流媒体服务基于@夏楚 ZLMediaKit &lt;a href="https://github.com/ZLMediaKit/ZLMediaKit"&gt;https://github.com/ZLMediaKit/ZLMediaKit&lt;/a&gt;&lt;br&gt; 播放器使用@dexter jessibuca &lt;a href="https://github.com/langhuihui/jessibuca/tree/v3"&gt;https://github.com/langhuihui/jessibuca/tree/v3&lt;/a&gt;&lt;br&gt; 播放器使用@Numberwolf-Yanlong h265web.js &lt;a href="https://github.com/numberwolf/h265web.js"&gt;https://github.com/numberwolf/h265web.js&lt;/a&gt;&lt;br&gt; 前端页面基于vue-admin-template构建 &lt;a href="https://github.com/PanJiaChen/vue-admin-template?tab=readme-ov-file"&gt;https://github.com/PanJiaChen/vue-admin-template?tab=readme-ov-file&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;应用场景：&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持浏览器无插件播放摄像头视频。&lt;/li&gt; 
 &lt;li&gt;支持国标设备(摄像机、平台、NVR等)设备接入&lt;/li&gt; 
 &lt;li&gt;支持rtsp, rtmp，直播设备设备接入，充分利旧。&lt;/li&gt; 
 &lt;li&gt;支持国标级联。多平台级联。跨网视频预览。&lt;/li&gt; 
 &lt;li&gt;支持跨网网闸平台互联。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;文档&lt;/h1&gt; 
&lt;p&gt;wvp使用文档 &lt;a href="https://doc.wvp-pro.cn"&gt;https://doc.wvp-pro.cn&lt;/a&gt;&lt;br&gt; ZLM使用文档 &lt;a href="https://github.com/ZLMediaKit/ZLMediaKit"&gt;https://github.com/ZLMediaKit/ZLMediaKit&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;gitee仓库&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://gitee.com/pan648540858/wvp-GB28181-pro.git"&gt;https://gitee.com/pan648540858/wvp-GB28181-pro.git&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;截图&lt;/h1&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;center&gt;
     &lt;img src="https://raw.githubusercontent.com/648540858/wvp-GB28181-pro/master/doc/_media/1.png"&gt;登录页面 
    &lt;/center&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;center&gt;
     &lt;img src="https://raw.githubusercontent.com/648540858/wvp-GB28181-pro/master/doc/_media/2.png"&gt;首页
    &lt;/center&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;center&gt;
     &lt;img src="https://raw.githubusercontent.com/648540858/wvp-GB28181-pro/master/doc/_media/3.png"&gt;分屏播放 
    &lt;/center&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;center&gt;
     &lt;img src="https://raw.githubusercontent.com/648540858/wvp-GB28181-pro/master/doc/_media/4.png"&gt;国标设备列表
    &lt;/center&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;center&gt;
     &lt;img src="https://raw.githubusercontent.com/648540858/wvp-GB28181-pro/master/doc/_media/5.png"&gt;行政区划管理 
    &lt;/center&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;center&gt;
     &lt;img src="https://raw.githubusercontent.com/648540858/wvp-GB28181-pro/master/doc/_media/8.png"&gt;业务分组管理
    &lt;/center&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;center&gt;
     &lt;img src="https://raw.githubusercontent.com/648540858/wvp-GB28181-pro/master/doc/_media/6.png"&gt;录制计划
    &lt;/center&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;center&gt;
     &lt;img src="https://raw.githubusercontent.com/648540858/wvp-GB28181-pro/master/doc/_media/7.png"&gt;平台信息
    &lt;/center&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h1&gt;功能特性&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 集成web界面&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 兼容性良好&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 跨平台服务，一次编译多端部署， 可以同时用于x86和arm架构&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 接入设备 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 视频预览&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持主码流子码流切换&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 无限制接入路数，能接入多少设备只取决于你的服务器性能&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 云台控制，控制设备转向，拉近，拉远&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 预置位查询，使用与设置&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 查询NVR/IPC上的录像与播放，支持指定时间播放与下载&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 无人观看自动断流，节省流量&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 视频设备信息同步&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 离在线监控&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持直接输出RTSP、RTMP、HTTP-FLV、Websocket-FLV、HLS多种协议流地址&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持通过一个流地址直接观看摄像头，无需登录以及调用任何接口&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持UDP和TCP两种国标信令传输模式&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持UDP和TCP两种国标流传输模式&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持检索,通道筛选&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持通道子目录查询&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持过滤音频，防止杂音影响观看&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持国标网络校时&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持播放H264和H265&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 报警信息处理，支持向前端推送报警信息&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 语音对讲&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持业务分组和行政区划树自定义展示以及级联推送&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持订阅与通知方法 
    &lt;ul&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 移动位置订阅&lt;/li&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 移动位置通知处理&lt;/li&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 报警事件订阅&lt;/li&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 报警事件通知处理&lt;/li&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 设备目录订阅&lt;/li&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 设备目录通知处理&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 移动位置查询和显示&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持手动添加设备和给设备设置单独的密码&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持平台对接接入&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持国标级联&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 国标通道向上级联 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; WEB添加上级平台&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 注册&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 心跳保活&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 通道选择&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持通道编号自定义, 支持每个平台使用不同的通道编号&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 通道推送&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 点播&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 云台控制&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 平台状态查询&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 平台信息查询&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 平台远程启动&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 每个级联平台可自定义的虚拟目录&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 目录订阅与通知&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 录像查看与播放&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; GPS订阅与通知（直播推流）&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 语音对讲&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持同时级联到多个上级平台&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持自动配置ZLM媒体服务, 减少因配置问题所出现的问题;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持流媒体节点集群，负载均衡。&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持启用udp多端口模式, 提高udp模式下媒体传输性能;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持公网部署；&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持wvp与zlm分开部署，提升平台并发能力&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持拉流RTSP/RTMP，分发为各种流格式，或者推送到其他国标平台&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持推流RTSP/RTMP，分发为各种流格式，或者推送到其他国标平台&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持推流鉴权&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持接口鉴权&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 云端录像，推流/代理/国标视频均可以录制在云端服务器，支持预览和下载&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持打包可执行jar和war&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持跨域请求，支持前后端分离部署&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持Mysql，Postgresql，金仓等数据库&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持录制计划, 根据设定的时间对通道进行录制. 暂不支持将录制的内容转发到国标上级&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持国标信令集群&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;闭源内容&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持ONVIF协议，设备检索，支持点播，云台控制，国标级联点播，自动点播等。&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持部标1078+808协议，支持点播，云台控制，录像回放，位置上报，自动点播等。&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持国标28181-2022协议，支持巡航轨迹查询，PTZ精准控制，存储卡格式化，设备软件升级，OSD配置，h265+aac，支持辅码流，录像倒放等。&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持国网B接口协议。支持注册，获取资源，预览, 云台控制，预置位控制等，可免费定制支持语音对讲、录像回放和抓拍图像。&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 功能加强版本 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持按权限分配可以使用的通道&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持电子地图。支持展示通道位置，支持在地图上修改通道位置。可扩展接入高德地图API，支持搜索位置，附近设备。&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 支持表格导出&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 拉流代理支持按照品牌拼接url。&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 播放鉴权，更加安全。&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled&gt; 功能持续扩展，可根据用户需要增加支持。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;授权协议&lt;/h1&gt; 
&lt;p&gt;本项目自有代码使用宽松的MIT协议，在保留版权信息的情况下可以自由应用于各自商用、非商业的项目。 但是本项目也零碎的使用了一些其他的开源代码，在商用的情况下请自行替代或剔除； 由于使用本项目而产生的商业纠纷或侵权行为一概与本项目及开发者无关，请自行承担法律风险。 在使用本项目代码时，也应该在授权协议中同时表明本项目依赖的第三方库的协议&lt;/p&gt; 
&lt;h1&gt;技术支持&lt;/h1&gt; 
&lt;h1&gt;付费社群&lt;/h1&gt; 
&lt;img src="https://raw.githubusercontent.com/648540858/wvp-GB28181-pro/master/doc/_media/shequ.png" width="50%" height="50%"&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;收费是为了提供更好的服务，也是对作者更大的激励。加入星球的用户三天后可以私信我留下微信号，我会拉大家入群。 加入三天内不满意可以直接自行推出,星球会直接退款给大家。需要发票可以在星球app中直接咨询星球客服获取。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;星球还提供了包括闭源的全功能试用包, 会随时更新。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;付费社群即可以对作者提供支持，也可以为大家更加快速的解决问题。如果暂时无法加入，给项目点个星也是极大的鼓励。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://t.zsxq.com/0d8VAD3Dm"&gt;知识星球&lt;/a&gt;专栏列表：，&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://t.zsxq.com/0dLguVoSp"&gt;使用入门系列一：WVP-PRO能做什么&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;有偿技术支持，一对一开发辅导，闭源内容合作请发送邮件到&lt;a href="mailto:648540858@qq.com"&gt;648540858@qq.com&lt;/a&gt;咨询&lt;/p&gt; 
&lt;h1&gt;致谢&lt;/h1&gt; 
&lt;p&gt;感谢作者&lt;a href="https://github.com/xia-chu"&gt;夏楚&lt;/a&gt; 提供这么棒的开源流媒体服务框架,并在开发过程中给予支持与帮助。&lt;br&gt; 感谢作者&lt;a href="https://github.com/langhuihui"&gt;dexter langhuihui&lt;/a&gt;和&lt;a href="https://github.com/numberwolf/h265web.js"&gt;Numberwolf-Yanlong&lt;/a&gt; 开源这么好用的WEB播放器。&lt;br&gt; 感谢各位大佬的赞助以及对项目的指正与帮助。包括但不限于代码贡献、问题反馈、资金捐赠等各种方式的支持！以下排名不分先后：&lt;br&gt; &lt;a href="https://github.com/lawrencehj"&gt;lawrencehj&lt;/a&gt; &lt;a href="https://github.com/Smallwhitepig"&gt;Smallwhitepig&lt;/a&gt; &lt;a href="https://github.com/swwheihei"&gt;swwhaha&lt;/a&gt; &lt;a href="https://github.com/hotcoffie"&gt;hotcoffie&lt;/a&gt; &lt;a href="https://github.com/nikmu"&gt;xiaomu&lt;/a&gt; &lt;a href="https://github.com/TristingChen"&gt;TristingChen&lt;/a&gt; &lt;a href="https://github.com/chenparty"&gt;chenparty&lt;/a&gt; &lt;a href="https://github.com/hotleave"&gt;Hotleave&lt;/a&gt; &lt;a href="https://github.com/ydwxb"&gt;ydwxb&lt;/a&gt; &lt;a href="https://github.com/ydpd"&gt;ydpd&lt;/a&gt; &lt;a href="https://github.com/szy833"&gt;szy833&lt;/a&gt; &lt;a href="https://github.com/ydwxb"&gt;ydwxb&lt;/a&gt; &lt;a href="https://github.com/Albertzhu666"&gt;Albertzhu666&lt;/a&gt; &lt;a href="https://github.com/mk1990"&gt;mk1990&lt;/a&gt; &lt;a href="https://github.com/SaltFish001"&gt;SaltFish001&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>wso2/product-is</title>
      <link>https://github.com/wso2/product-is</link>
      <description>&lt;p&gt;Welcome to the WSO2 Identity Server source code! For info on working with the WSO2 Identity Server repository and contributing code, click the link below.&lt;/p&gt;&lt;hr&gt;&lt;a href="http://wso2.com/products/identity-server/"&gt; &lt;img src="https://wso2.cachefly.net/wso2/sites/all/image_resources/wso2-branding-logos/wso2-logo-orange.png" alt="WSO2 logo" width="30%" height="30%"&gt; &lt;/a&gt; 
&lt;h1&gt;WSO2 Identity Server&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/wso2/product-is/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License"&gt;&lt;/a&gt; &lt;a href="https://stackoverflow.com/questions/tagged/wso2is"&gt;&lt;img src="https://img.shields.io/badge/stackoverflow-wso2is-orange" alt="Get Support on Stack Overflow"&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/wso2"&gt;&lt;img src="https://img.shields.io/badge/Join%20us%20on-Discord-%23e01563.svg?sanitize=true" alt="Join the community on Discord"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=wso2"&gt;&lt;img src="https://img.shields.io/twitter/follow/wso2.svg?style=social&amp;amp;label=Follow" alt="X"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Branch&lt;/th&gt; 
   &lt;th align="left"&gt;Build Status&lt;/th&gt; 
   &lt;th align="left"&gt;Test Results&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;master&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://wso2.org/jenkins/job/products/job/product-is/"&gt;&lt;img src="https://wso2.org/jenkins/job/products/job/product-is/badge/icon" alt="Build Status"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://wso2.org/jenkins/job/products/job/product-is/lastBuild/testReport/"&gt;&lt;img src="https://wso2.org/jenkins/job/products/job/product-is/badge/icon" alt="Test Results"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr&gt; 
&lt;p&gt;WSO2 Identity Server is a powerful, modern identity and access management solution for your on-premises or cloud environment. It enables organizations to deliver exceptional, trusted digital experiences to all types of users.&lt;/p&gt; 
&lt;p&gt;To learn more about WSO2 Identity Server please visit &lt;a href="https://wso2.com/identity-server/"&gt;WSO2 Identity Server website&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h5&gt;Looking for a Hosted Identity Solution?&lt;/h5&gt; 
 &lt;p&gt;Try &lt;strong&gt;&lt;a href="https://wso2.com/asgardeo/"&gt;Asgardeo&lt;/a&gt;&lt;/strong&gt; free of charge – a public identity cloud solution (iDaaS) offering, built on the same technology core as &lt;strong&gt;WSO2 Identity Server&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Why WSO2 Identity Server?&lt;/h1&gt; 
&lt;p&gt;Whether you’re securing apps for external consumers, internal workforce, business customers, or even API access, WSO2 Identity Server provides the modern, full-featured identity and access foundation you need.&lt;/p&gt; 
&lt;p&gt;Customers prefer Identity Server for its developer-centric design, extensive standards support, freedom to deploy however needed, and massive scalability.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Optimized developer experience&lt;/summary&gt; 
 &lt;pre&gt;&lt;code&gt;- New visual designer that simplifies development of authentication flows. 
- New templates to easily configure apps and authentication methods. 
- Simplified use of RBAC to define fine-grained API access policies. 
- New authentication API for in-app authentication, further streamlining user access. 
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;AI-assisted development&lt;/summary&gt; 
 &lt;pre&gt;&lt;code&gt;- Natural language for login flow requirements to automatically generate complex authentication flows. 
- Assisted brand matching to automatically generate all UX components
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Industry-leading B2B CIAM capabilities, simplifying secure access for business customers and partners&lt;/summary&gt; 
 &lt;pre&gt;&lt;code&gt;- Advanced RBAC to define delegated administration rights.
- Choice of login options per customer, including enterprise IDP. 
- Subscription model to ensure the right apps are available to customers.
- Customizable branding per customer to ensure the highest user engagement.
- Rich support for various organization hierarchies, such as B2B2C. 
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Best API security available anywhere, using the powerful FAPI standard&lt;/summary&gt; 
 &lt;pre&gt;&lt;code&gt;- Additional security features built on top of the OAuth2 standard.
- Originating in financial services, but now desired by many industries. 
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Unified user experience&lt;/summary&gt; 
 &lt;pre&gt;&lt;code&gt;- All-new administrative console.
- Shared with [Asgardeo](https://wso2.com/asgardeo/) and Private Identity Cloud. 
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;h2&gt;System prerequisites&lt;/h2&gt; 
&lt;p&gt;Refer to this page to consult pre-requisites based on your target architecture and operating system: &lt;a href="https://is.docs.wso2.com/en/latest/deploy/get-started/install"&gt;https://is.docs.wso2.com/en/latest/deploy/get-started/install&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;WSO2 Identity Server requires a JDK to run and supports versions from JDK 11 through JDK 21. For the full list of supported versions, please refer to the &lt;a href="https://is.docs.wso2.com/en/latest/deploy/get-started/install/#environment-compatibility"&gt;environment compatibility&lt;/a&gt; section in the documentation.&lt;/li&gt; 
 &lt;li&gt;Make sure you have set the &lt;code&gt;JAVA_HOME&lt;/code&gt; environment variable to point to your JDK. See &lt;a href="https://is.docs.wso2.com/en/latest/deploy/get-started/install/#install-on-different-platforms"&gt;this documentation&lt;/a&gt; if you need help doing so.&lt;/li&gt; 
 &lt;li&gt;Extract the downloaded distribution zip file and go to the 'bin' directory&lt;/li&gt; 
 &lt;li&gt;Run the wso2server.sh or wso2server.bat script based on your operating system.&lt;/li&gt; 
 &lt;li&gt;Access the respective WSO2 Identity Server interfaces 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Developer and Administrator Console&lt;/strong&gt; web application is running at: &lt;a href="https://localhost:9443/console"&gt;https://localhost:9443/console&lt;/a&gt; &lt;br&gt; You may sign in to the Developer and Administrator Console using the default administrator credentials (username: admin, password: admin).&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;End User Portal&lt;/strong&gt; web application is running at: - &lt;a href="https://localhost:9443/myaccount"&gt;https://localhost:9443/myaccount&lt;/a&gt; &lt;br&gt; You may sign in to the End User Portal using the default administrator credentials (username: admin, password: admin).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Try out a sample app or build your own sample app&lt;/h2&gt; 
&lt;p&gt;Follow our &lt;a href="https://is.docs.wso2.com/en/latest/get-started/start-integrating-apps/"&gt;Quick Start guide &lt;/a&gt; to try out a sample app or build your own sample app.&lt;/p&gt; 
&lt;h1&gt;Reporting Product Issues&lt;/h1&gt; 
&lt;p&gt;All known issues of WSO2 IS are filed at: &lt;a href="https://github.com/wso2/product-is/issues"&gt;https://github.com/wso2/product-is/issues&lt;/a&gt;. Please check this list before opening a new issue.&lt;/p&gt; 
&lt;h4&gt;Opening an issue&lt;/h4&gt; 
&lt;p&gt;Help us make our software better! Submit any bug reports or feature requests through GitHub: &lt;a href="https://github.com/wso2/product-is/issues"&gt;https://github.com/wso2/product-is/issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Reporting Security Issues&lt;/h4&gt; 
&lt;p&gt;Please do not report security issues via GitHub issues. Instead, follow the WSO2 Security Vulnerability Reporting Guidelines.&lt;/p&gt; 
&lt;h1&gt;Join our community!&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Read our documentation at &lt;a href="https://is.docs.wso2.com/en/latest/"&gt;https://is.docs.wso2.com/en/latest/&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Get help on &lt;a href="https://stackoverflow.com/questions/tagged/wso2-is"&gt;Stack Overflow&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Join the conversation on &lt;a href="https://discord.gg/wso2"&gt;Discord&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Learn more by reading articles from our &lt;a href="https://wso2.com/library/"&gt;library&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Commercial Support&lt;/h1&gt; 
&lt;p&gt;You can take advantage of a WSO2 on-prem product subscription for the full range of software product benefits like expert support, continuous product updates, vulnerability monitoring, and access to the licensed distribution for commercial use.&lt;/p&gt; 
&lt;p&gt;To learn more, check WSO2 Subscription.&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;If you are planning on contributing to the development efforts of WSO2 Identity Server, you can do that by checking out the latest development version. The master branch holds the latest unreleased source code.&lt;/p&gt; 
&lt;p&gt;Please read our &lt;a href="https://raw.githubusercontent.com/wso2/product-is/master/docs/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt; for detailed instructions on how to contribute.&lt;/p&gt; 
&lt;p&gt;Can you fill this survey ? WSO2 wants to learn more about our open source software (OSS) community and your communication preferences to serve you better.&lt;/p&gt; 
&lt;p&gt;In addition, we may reach out to a small number of respondents to ask additional questions and offer a small gift.&lt;/p&gt; 
&lt;p&gt;Survey is available at: &lt;a href="https://forms.gle/h5q4M3K7vyXba3bK6"&gt;https://forms.gle/h5q4M3K7vyXba3bK6&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;(c) Copyright 2019 - 2025 WSO2 LLC. All Rights Reserved.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>material-components/material-components-android</title>
      <link>https://github.com/material-components/material-components-android</link>
      <description>&lt;p&gt;Modular and customizable Material Design UI components for Android&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://discord.gg/material-components"&gt;&lt;img src="https://img.shields.io/discord/259087343246508035.svg?sanitize=true" alt="Chat"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Material Components for Android&lt;/h1&gt; 
&lt;p&gt;Material Components for Android (MDC-Android) help developers execute &lt;a href="https://www.material.io"&gt;Material Design&lt;/a&gt;. Developed by a core team of engineers and UX designers at Google, these components enable a reliable development workflow to build beautiful and functional Android apps.&lt;/p&gt; 
&lt;p&gt;Material Components for Android is a drop-in replacement for Android's Design Support Library.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;For information on how to get started with Material Components for Android, take a look at our &lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/getting-started.md"&gt;Getting Started&lt;/a&gt; guide.&lt;/p&gt; 
&lt;h2&gt;Submitting Bugs or Feature Requests&lt;/h2&gt; 
&lt;p&gt;For usage questions: ask on &lt;a href="http://stackoverflow.com/questions/tagged/material-components"&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Bugs or feature requests should be submitted at our &lt;a href="https://github.com/material-components/material-components-android/issues"&gt;GitHub Issues section&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Note: If your issue or feature request is for Material Jetpack Compose, please file it at the &lt;a href="https://issuetracker.google.com/issues/new?component=742043&amp;amp;template=1346811"&gt;Compose Issue Tracker&lt;/a&gt; instead.&lt;/p&gt; 
&lt;h2&gt;Useful Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/material-components/material-components-android/tree/master/lib/"&gt;All Components&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/getting-started.md"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/contributing.md"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/using-snapshot-version.md"&gt;Using Snapshot Version&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/building-from-source.md"&gt;Building From Source&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/catalog-app.md"&gt;Catalog App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.android.com/reference/com/google/android/material/classes"&gt;Class documentation&lt;/a&gt; (external site)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.stackoverflow.com/questions/tagged/material-components+android"&gt;MDC-Android on Stack Overflow&lt;/a&gt; (external site)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.android.com/training/material/index.html"&gt;Android Developer’s Guide&lt;/a&gt; (external site)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.material.io"&gt;Material.io&lt;/a&gt; (external site)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://material.google.com"&gt;Material Design Guidelines&lt;/a&gt; (external site)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/directorystructure.md"&gt;Directory structure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/material-components/material-components-android/master/docs/components/"&gt;Components&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Snailclimb/JavaGuide</title>
      <link>https://github.com/Snailclimb/JavaGuide</link>
      <description>&lt;p&gt;「Java学习+面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide！&lt;/p&gt;&lt;hr&gt;&lt;p&gt;推荐你通过在线阅读网站进行阅读，体验更好，速度更快！地址：&lt;a href="https://javaguide.cn/"&gt;javaguide.cn&lt;/a&gt;。&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/Snailclimb/JavaGuide"&gt;&lt;img src="https://oss.javaguide.cn/github/javaguide/csdn/1c00413c65d1995993bf2b0daf7b4f03.png" alt="logo"&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/Snailclimb/JavaGuide"&gt;GitHub&lt;/a&gt; | &lt;a href="https://gitee.com/SnailClimb/JavaGuide"&gt;Gitee&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/1319" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/1319" alt="Snailclimb%2FJavaGuide | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;面试专版&lt;/strong&gt;：准备 Java 面试的小伙伴可以考虑面试专版：&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/zhuanlan/java-mian-shi-zhi-bei.md"&gt;《Java 面试指北 》&lt;/a&gt;&lt;/strong&gt; (质量很高，专为面试打造，配合 JavaGuide 食用)。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;知识星球&lt;/strong&gt;：专属面试小册/一对一交流/简历修改/专属求职指南，欢迎加入 &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/about-the-author/zhishixingqiu-two-years.md"&gt;JavaGuide 知识星球&lt;/a&gt;&lt;/strong&gt;（点击链接即可查看星球的详细介绍，一定确定自己真的需要再加入）。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;使用建议&lt;/strong&gt; ：有水平的面试官都是顺着项目经历挖掘技术问题。一定不要死记硬背技术八股文！详细的学习建议请参考：&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/javaguide/use-suggestion.md"&gt;JavaGuide 使用建议&lt;/a&gt;。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;求个Star&lt;/strong&gt;：如果觉得 JavaGuide 的内容对你有帮助的话，还请点个免费的 Star，这是对我最大的鼓励，感谢各位一起同行，共勉！Github 地址：&lt;a href="https://github.com/Snailclimb/JavaGuide"&gt;https://github.com/Snailclimb/JavaGuide&lt;/a&gt; 。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;转载须知&lt;/strong&gt;：以下所有文章如非文首说明为转载皆为 JavaGuide 原创，转载请在文首注明出处。如发现恶意抄袭/搬运，会动用法律武器维护自己的权益。让我们一起维护一个良好的技术创作环境！&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://oss.javaguide.cn/github/javaguide/gongzhonghaoxuanchuan.png" style="margin: 0 auto;"&gt; 
&lt;/div&gt; 
&lt;!-- #region home --&gt; 
&lt;h2&gt;项目相关&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/javaguide/intro.html"&gt;项目介绍&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/javaguide/use-suggestion.html"&gt;使用建议&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/javaguide/contribution-guideline.html"&gt;贡献指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/javaguide/faq.html"&gt;常见问题&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Java&lt;/h2&gt; 
&lt;h3&gt;基础&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; : (必看&lt;span&gt;👍&lt;/span&gt; )：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/java-basic-questions-01.md"&gt;Java 基础常见知识点&amp;amp;面试题总结(上)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/java-basic-questions-02.md"&gt;Java 基础常见知识点&amp;amp;面试题总结(中)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/java-basic-questions-03.md"&gt;Java 基础常见知识点&amp;amp;面试题总结(下)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;重要知识点详解&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/why-there-only-value-passing-in-java.md"&gt;为什么 Java 中只有值传递？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/serialization.md"&gt;Java 序列化详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/generics-and-wildcards.md"&gt;泛型&amp;amp;通配符详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/reflection.md"&gt;Java 反射机制详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/proxy.md"&gt;Java 代理模式详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/bigdecimal.md"&gt;BigDecimal 详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/unsafe.md"&gt;Java 魔法类 Unsafe 详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/spi.md"&gt;Java SPI 机制详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/syntactic-sugar.md"&gt;Java 语法糖详解&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;集合&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/java-collection-questions-01.md"&gt;Java 集合常见知识点&amp;amp;面试题总结(上)&lt;/a&gt; (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/java-collection-questions-02.md"&gt;Java 集合常见知识点&amp;amp;面试题总结(下)&lt;/a&gt; (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/java-collection-precautions-for-use.md"&gt;Java 容器使用注意事项总结&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;源码分析&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/arraylist-source-code.md"&gt;ArrayList 核心源码+扩容机制分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/linkedlist-source-code.md"&gt;LinkedList 核心源码分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/hashmap-source-code.md"&gt;HashMap 核心源码+底层数据结构分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/concurrent-hash-map-source-code.md"&gt;ConcurrentHashMap 核心源码+底层数据结构分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/linkedhashmap-source-code.md"&gt;LinkedHashMap 核心源码分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/copyonwritearraylist-source-code.md"&gt;CopyOnWriteArrayList 核心源码分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/arrayblockingqueue-source-code.md"&gt;ArrayBlockingQueue 核心源码分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/priorityqueue-source-code.md"&gt;PriorityQueue 核心源码分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/delayqueue-source-code.md"&gt;DelayQueue 核心源码分析&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;IO&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/io/io-basis.md"&gt;IO 基础知识总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/io/io-design-patterns.md"&gt;IO 设计模式总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/io/io-model.md"&gt;IO 模型详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/io/nio-basis.md"&gt;NIO 核心知识总结&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;并发&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; : (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-questions-01.md"&gt;Java 并发常见知识点&amp;amp;面试题总结（上）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-questions-02.md"&gt;Java 并发常见知识点&amp;amp;面试题总结（中）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-questions-03.md"&gt;Java 并发常见知识点&amp;amp;面试题总结（下）&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;重要知识点详解&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/optimistic-lock-and-pessimistic-lock.md"&gt;乐观锁和悲观锁详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/cas.md"&gt;CAS 详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/jmm.md"&gt;JMM（Java 内存模型）详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;线程池&lt;/strong&gt;：&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-thread-pool-summary.md"&gt;Java 线程池详解&lt;/a&gt;、&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-thread-pool-best-practices.md"&gt;Java 线程池最佳实践&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/threadlocal.md"&gt;ThreadLocal 详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-collections.md"&gt;Java 并发容器总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/atomic-classes.md"&gt;Atomic 原子类总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/aqs.md"&gt;AQS 详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/completablefuture-intro.md"&gt;CompletableFuture 详解&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;JVM (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/h3&gt; 
&lt;p&gt;JVM 这部分内容主要参考 &lt;a href="https://docs.oracle.com/javase/specs/jvms/se8/html/index.html"&gt;JVM 虚拟机规范-Java8&lt;/a&gt; 和周志明老师的&lt;a href="https://book.douban.com/subject/34907497/"&gt;《深入理解 Java 虚拟机（第 3 版）》&lt;/a&gt; （强烈建议阅读多遍！）。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/memory-area.md"&gt;Java 内存区域&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jvm-garbage-collection.md"&gt;JVM 垃圾回收&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/class-file-structure.md"&gt;类文件结构&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/class-loading-process.md"&gt;类加载过程&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/classloader.md"&gt;类加载器&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jvm-parameters-intro.md"&gt;【待完成】最重要的 JVM 参数总结（翻译完善了一半）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jvm-intro.md"&gt;【加餐】大白话带你认识 JVM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jdk-monitoring-and-troubleshooting-tools.md"&gt;JDK 监控和故障处理工具&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;新特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Java 8&lt;/strong&gt;：&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java8-tutorial-translate.md"&gt;Java 8 新特性总结（翻译）&lt;/a&gt;、&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java8-common-new-features.md"&gt;Java8 常用新特性总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java9.md"&gt;Java 9 新特性概览&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java10.md"&gt;Java 10 新特性概览&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java11.md"&gt;Java 11 新特性概览&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java12-13.md"&gt;Java 12 &amp;amp; 13 新特性概览&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java14-15.md"&gt;Java 14 &amp;amp; 15 新特性概览&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java16.md"&gt;Java 16 新特性概览&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java17.md"&gt;Java 17 新特性概览&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java18.md"&gt;Java 18 新特性概览&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java19.md"&gt;Java 19 新特性概览&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java20.md"&gt;Java 20 新特性概览&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java21.md"&gt;Java 21 新特性概览&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java22-23.md"&gt;Java 22 &amp;amp; 23 新特性概览&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java24.md"&gt;Java 24 新特性概览&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;计算机基础&lt;/h2&gt; 
&lt;h3&gt;操作系统&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/operating-system/operating-system-basic-questions-01.md"&gt;操作系统常见知识点&amp;amp;面试题总结(上)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/operating-system/operating-system-basic-questions-02.md"&gt;操作系统常见知识点&amp;amp;面试题总结(下)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;： 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/operating-system/linux-intro.md"&gt;后端程序员必备的 Linux 基础知识总结&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/operating-system/shell-intro.md"&gt;Shell 编程基础知识总结&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;网络&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/other-network-questions.md"&gt;计算机网络常见知识点&amp;amp;面试题总结(上)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/other-network-questions2.md"&gt;计算机网络常见知识点&amp;amp;面试题总结(下)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/computer-network-xiexiren-summary.md"&gt;谢希仁老师的《计算机网络》内容总结（补充）&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;重要知识点详解&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/osi-and-tcp-ip-model.md"&gt;OSI 和 TCP/IP 网络分层模型详解（基础）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/application-layer-protocol.md"&gt;应用层常见协议总结（应用层）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/http-vs-https.md"&gt;HTTP vs HTTPS（应用层）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/http1.0-vs-http1.1.md"&gt;HTTP 1.0 vs HTTP 1.1（应用层）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/http-status-codes.md"&gt;HTTP 常见状态码（应用层）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/dns.md"&gt;DNS 域名系统详解（应用层）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/tcp-connection-and-disconnection.md"&gt;TCP 三次握手和四次挥手（传输层）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/tcp-reliability-guarantee.md"&gt;TCP 传输可靠性保障（传输层）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/arp.md"&gt;ARP 协议详解(网络层)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/nat.md"&gt;NAT 协议详解(网络层)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/network-attack-means.md"&gt;网络攻击常见手段总结（安全）&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;数据结构&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;图解数据结构：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/linear-data-structure.md"&gt;线性数据结构 :数组、链表、栈、队列&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/graph.md"&gt;图&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/heap.md"&gt;堆&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/tree.md"&gt;树&lt;/a&gt;：重点关注&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/red-black-tree.md"&gt;红黑树&lt;/a&gt;、B-，B+，B*树、LSM 树&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;其他常用数据结构：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/bloom-filter.md"&gt;布隆过滤器&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;算法&lt;/h3&gt; 
&lt;p&gt;算法这部分内容非常重要，如果你不知道如何学习算法的话，可以看下我写的：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.zhihu.com/question/323359308/answer/1545320858"&gt;算法学习书籍+资源推荐&lt;/a&gt; 。&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.zhihu.com/question/31092580/answer/1534887374"&gt;如何刷 Leetcode?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;常见算法问题总结&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/string-algorithm-problems.md"&gt;几道常见的字符串算法题总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/linkedlist-algorithm-problems.md"&gt;几道常见的链表算法题总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/the-sword-refers-to-offer.md"&gt;剑指 offer 部分编程题&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/10-classical-sorting-algorithms.md"&gt;十大经典排序算法&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;另外，&lt;a href="https://www.geeksforgeeks.org/fundamentals-of-algorithms/"&gt;GeeksforGeeks&lt;/a&gt; 这个网站总结了常见的算法 ，比较全面系统。&lt;/p&gt; 
&lt;h2&gt;数据库&lt;/h2&gt; 
&lt;h3&gt;基础&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/basis.md"&gt;数据库基础知识总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/nosql.md"&gt;NoSQL 基础知识总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/character-set.md"&gt;字符集详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SQL : 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/sql/sql-syntax-summary.md"&gt;SQL 语法基础知识总结&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/sql/sql-questions-01.md"&gt;SQL 常见面试题总结&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MySQL&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;知识点/面试题总结：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-questions-01.md"&gt;MySQL 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/strong&gt; (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-high-performance-optimization-specification-recommendations.md"&gt;MySQL 高性能优化规范建议总结&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;重要知识点：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-index.md"&gt;MySQL 索引详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/transaction-isolation-level.md"&gt;MySQL 事务隔离级别图文详解)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-logs.md"&gt;MySQL 三大日志(binlog、redo log 和 undo log)详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/innodb-implementation-of-mvcc.md"&gt;InnoDB 存储引擎对 MVCC 的实现&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/how-sql-executed-in-mysql.md"&gt;SQL 语句在 MySQL 中的执行过程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-query-cache.md"&gt;MySQL 查询缓存详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-query-execution-plan.md"&gt;MySQL 执行计划分析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-auto-increment-primary-key-continuous.md"&gt;MySQL 自增主键一定是连续的吗&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/some-thoughts-on-database-storage-time.md"&gt;MySQL 时间类型数据存储建议&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/index-invalidation-caused-by-implicit-conversion.md"&gt;MySQL 隐式转换造成索引失效&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Redis&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; : (必看&lt;span&gt;👍&lt;/span&gt; )：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-questions-01.md"&gt;Redis 常见知识点&amp;amp;面试题总结(上)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-questions-02.md"&gt;Redis 常见知识点&amp;amp;面试题总结(下)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;重要知识点：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/3-commonly-used-cache-read-and-write-strategies.md"&gt;3 种常用的缓存读写策略详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-data-structures-01.md"&gt;Redis 5 种基本数据结构详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-data-structures-02.md"&gt;Redis 3 种特殊数据结构详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-persistence.md"&gt;Redis 持久化机制详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-memory-fragmentation.md"&gt;Redis 内存碎片详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-common-blocking-problems-summary.md"&gt;Redis 常见阻塞原因总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-cluster.md"&gt;Redis 集群详解&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MongoDB&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mongodb/mongodb-questions-01.md"&gt;MongoDB 常见知识点&amp;amp;面试题总结(上)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mongodb/mongodb-questions-02.md"&gt;MongoDB 常见知识点&amp;amp;面试题总结(下)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;搜索引擎&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/elasticsearch/elasticsearch-questions-01.md"&gt;Elasticsearch 常见面试题总结(付费)&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oss.javaguide.cn/github/javaguide/gongzhonghaoxuanchuan.png" alt="JavaGuide 官方公众号"&gt;&lt;/p&gt; 
&lt;h2&gt;开发工具&lt;/h2&gt; 
&lt;h3&gt;Maven&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/maven/maven-core-concepts.md"&gt;Maven 核心概念总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/maven/maven-best-practices.md"&gt;Maven 最佳实践&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Gradle&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/gradle/gradle-core-concepts.md"&gt;Gradle 核心概念总结&lt;/a&gt;（可选，目前国内还是使用 Maven 普遍一些）&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/docker/docker-intro.md"&gt;Docker 核心概念总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/docker/docker-in-action.md"&gt;Docker 实战&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Git&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/git/git-intro.md"&gt;Git 核心概念总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/git/github-tips.md"&gt;GitHub 实用小技巧总结&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;系统设计&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/system-design-questions.md"&gt;系统设计常见面试题总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/design-pattern.md"&gt;设计模式常见面试题总结&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;基础&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/RESTfulAPI.md"&gt;RestFul API 简明教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/software-engineering.md"&gt;软件工程简明教程简明教程&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/naming.md"&gt;代码命名指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/refactoring.md"&gt;代码重构指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/unit-test.md"&gt;单元测试指南&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;常用框架&lt;/h3&gt; 
&lt;h4&gt;Spring/SpringBoot (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-knowledge-and-questions-summary.md"&gt;Spring 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/springboot-knowledge-and-questions-summary.md"&gt;SpringBoot 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-common-annotations.md"&gt;Spring/Spring Boot 常用注解总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Snailclimb/springboot-guide"&gt;SpringBoot 入门指南&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;重要知识点详解&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/ioc-and-aop.md"&gt;IoC &amp;amp; AOP详解（快速搞懂）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-transaction.md"&gt;Spring 事务详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-design-patterns-summary.md"&gt;Spring 中的设计模式详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-boot-auto-assembly-principles.md"&gt;SpringBoot 自动装配原理详解&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;MyBatis&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/mybatis/mybatis-interview.md"&gt;MyBatis 常见面试题总结&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;安全&lt;/h3&gt; 
&lt;h4&gt;认证授权&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/basis-of-authority-certification.md"&gt;认证授权基础概念详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/jwt-intro.md"&gt;JWT 基础概念详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/advantages-and-disadvantages-of-jwt.md"&gt;JWT 优缺点分析以及常见问题解决方案&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/sso-intro.md"&gt;SSO 单点登录详解&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/design-of-authority-system.md"&gt;权限系统设计详解&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;数据安全&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/encryption-algorithms.md"&gt;常见加密算法总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/sentive-words-filter.md"&gt;敏感词过滤方案总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/data-desensitization.md"&gt;数据脱敏方案总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/data-validation.md"&gt;为什么前后端都要做数据校验&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;定时任务&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/schedule-task.md"&gt;Java 定时任务详解&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Web 实时消息推送&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/web-real-time-message-push.md"&gt;Web 实时消息推送详解&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;分布式&lt;/h2&gt; 
&lt;h3&gt;理论&amp;amp;算法&amp;amp;协议&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/distributed-system/protocol/cap-and-base-theorem.html"&gt;CAP 理论和 BASE 理论解读&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/distributed-system/protocol/paxos-algorithm.html"&gt;Paxos 算法解读&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/distributed-system/protocol/raft-algorithm.html"&gt;Raft 算法解读&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/distributed-system/protocol/gossip-protocl.html"&gt;Gossip 协议详解&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;RPC&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/distributed-system/rpc/rpc-intro.html"&gt;RPC 基础知识总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/distributed-system/rpc/dubbo.html"&gt;Dubbo 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ZooKeeper&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;这两篇文章可能有内容重合部分，推荐都看一遍。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/distributed-system/distributed-process-coordination/zookeeper/zookeeper-intro.html"&gt;ZooKeeper 相关概念总结(入门)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/distributed-system/distributed-process-coordination/zookeeper/zookeeper-plus.html"&gt;ZooKeeper 相关概念总结(进阶)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;API 网关&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/distributed-system/api-gateway.html"&gt;API 网关基础知识总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/spring-cloud-gateway-questions.md"&gt;Spring Cloud Gateway 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;分布式 ID&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/distributed-system/distributed-id.html"&gt;分布式ID介绍&amp;amp;实现方案总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/distributed-system/distributed-id-design.html"&gt;分布式 ID 设计指南&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;分布式锁&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/distributed-system/distributed-lock.html"&gt;分布式锁介绍&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javaguide.cn/distributed-system/distributed-lock-implementations.html"&gt;分布式锁常见实现方案总结&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;分布式事务&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://javaguide.cn/distributed-system/distributed-transaction.html"&gt;分布式事务常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;分布式配置中心&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-configuration-center.md"&gt;分布式配置中心常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;高性能&lt;/h2&gt; 
&lt;h3&gt;数据库优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/read-and-write-separation-and-library-subtable.md"&gt;数据库读写分离和分库分表&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/data-cold-hot-separation.md"&gt;数据冷热分离&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/sql-optimization.md"&gt;常见 SQL 优化手段总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/deep-pagination-optimization.md"&gt;深度分页介绍及优化建议&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;负载均衡&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/load-balancing.md"&gt;负载均衡常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;CDN&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/cdn.md"&gt;CDN（内容分发网络）常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;消息队列&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/message-queue.md"&gt;消息队列基础知识总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/disruptor-questions.md"&gt;Disruptor 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/rabbitmq-questions.md"&gt;RabbitMQ 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/rocketmq-questions.md"&gt;RocketMQ 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/kafka-questions-01.md"&gt;Kafka 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;高可用&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-availability/high-availability-system-design.md"&gt;高可用系统设计指南&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;冗余设计&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-availability/redundancy.md"&gt;冗余设计详解&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;限流&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-availability/limit-request.md"&gt;服务限流详解&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;降级&amp;amp;熔断&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-availability/fallback-and-circuit-breaker.md"&gt;降级&amp;amp;熔断详解&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;超时&amp;amp;重试&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-availability/timeout-and-retry.md"&gt;超时&amp;amp;重试详解&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;集群&lt;/h3&gt; 
&lt;p&gt;相同的服务部署多份，避免单点故障。&lt;/p&gt; 
&lt;h3&gt;灾备设计和异地多活&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;灾备&lt;/strong&gt; = 容灾 + 备份。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;备份&lt;/strong&gt;：将系统所产生的的所有重要数据多备份几份。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;容灾&lt;/strong&gt;：在异地建立两个完全相同的系统。当某个地方的系统突然挂掉，整个应用系统可以切换到另一个，这样系统就可以正常提供服务了。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;异地多活&lt;/strong&gt; 描述的是将服务部署在异地并且服务同时对外提供服务。和传统的灾备设计的最主要区别在于“多活”，即所有站点都是同时在对外提供服务的。异地多活是为了应对突发状况比如火灾、地震等自然或者人为灾害。&lt;/p&gt; 
&lt;h2&gt;Star 趋势&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://api.star-history.com/svg?repos=Snailclimb/JavaGuide&amp;amp;type=Date" alt="Stars"&gt;&lt;/p&gt; 
&lt;h2&gt;公众号&lt;/h2&gt; 
&lt;p&gt;如果大家想要实时关注我更新的文章以及分享的干货的话，可以关注我的公众号。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oss.javaguide.cn/github/javaguide/gongzhonghaoxuanchuan.png" alt="JavaGuide 官方公众号"&gt;&lt;/p&gt; 
&lt;!-- #endregion home --&gt;</description>
    </item>
    
    <item>
      <title>microg/GmsCore</title>
      <link>https://github.com/microg/GmsCore</link>
      <description>&lt;p&gt;Free implementation of Play Services&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;microG Services&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/microg/GmsCore/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/microg/GmsCore/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build status"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/microg/GmsCore/master/TRANSLATION.md"&gt; &lt;img src="https://hosted.weblate.org/widget/microg/svg-badge.svg?sanitize=true" alt="Translation status"&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;microG Services is a FLOSS (Free/Libre Open Source Software) framework to allow applications designed for Google Play Services to run on systems, where Play Services is not available.&lt;/p&gt; 
&lt;h3&gt;Please refer to the &lt;a href="https://github.com/microg/GmsCore/wiki"&gt;wiki&lt;/a&gt; for downloads and instructions&lt;/h3&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;If you'd like to help translate microG, take a look at &lt;a href="https://raw.githubusercontent.com/microg/GmsCore/master/TRANSLATION.md"&gt;TRANSLATION&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright 2013-2024 microG Project Team

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>prestodb/presto</title>
      <link>https://github.com/prestodb/presto</link>
      <description>&lt;p&gt;The official home of the Presto distributed SQL query engine for big data&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Presto&lt;/h1&gt; 
&lt;p&gt;Presto is a distributed SQL query engine for big data.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://prestodb.io/docs/current/installation.html"&gt;Presto installation documentation&lt;/a&gt; for deployment instructions.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://prestodb.io/docs/current/"&gt;Presto documentation&lt;/a&gt; for general documentation.&lt;/p&gt; 
&lt;h2&gt;Mission and Architecture&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/prestodb/presto/master/ARCHITECTURE.md"&gt;PrestoDB: Mission and Architecture&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Mac OS X or Linux&lt;/li&gt; 
 &lt;li&gt;Java 8 Update 151 or higher (8u151+), 64-bit. Both Oracle JDK and OpenJDK are supported.&lt;/li&gt; 
 &lt;li&gt;Maven 3.6.3+ (for building)&lt;/li&gt; 
 &lt;li&gt;Python 2.4+ (for running with the launcher script)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;!-- from: https://github.com/prestodb/presto/blob/master/README.md --&gt; 
 &lt;summary&gt;&lt;a id="building-presto"&gt;&lt;h2&gt;Building Presto&lt;/h2&gt;&lt;/a&gt;&lt;/summary&gt; 
 &lt;h3&gt;Overview (Java)&lt;/h3&gt; 
 &lt;p&gt;Presto is a standard Maven project. Simply run the following command from the project root directory:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;./mvnw clean install
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;On the first build, Maven will download all the dependencies from the internet and cache them in the local repository (&lt;code&gt;~/.m2/repository&lt;/code&gt;), which can take a considerable amount of time. Subsequent builds will be faster.&lt;/p&gt; 
 &lt;p&gt;Presto has a comprehensive set of unit tests that can take several minutes to run. You can disable the tests when building:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;./mvnw clean install -DskipTests
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;After building Presto for the first time, you can load the project into your IDE and run the server. We recommend using &lt;a href="http://www.jetbrains.com/idea/"&gt;IntelliJ IDEA&lt;/a&gt;. Because Presto is a standard Maven project, you can import it into your IDE using the root &lt;code&gt;pom.xml&lt;/code&gt; file. In IntelliJ, choose Open Project from the Quick Start box or choose Open from the File menu and select the root &lt;code&gt;pom.xml&lt;/code&gt; file.&lt;/p&gt; 
 &lt;p&gt;After opening the project in IntelliJ, double check that the Java SDK is properly configured for the project:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Open the File menu and select Project Structure&lt;/li&gt; 
  &lt;li&gt;In the SDKs section, ensure that a 1.8 JDK is selected (create one if none exist)&lt;/li&gt; 
  &lt;li&gt;In the Project section, ensure the Project language level is set to 8.0 as Presto makes use of several Java 8 language features&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Presto comes with sample configuration that should work out-of-the-box for development. Use the following options to create a run configuration:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Main Class: &lt;code&gt;com.facebook.presto.server.PrestoServer&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;VM Options: &lt;code&gt;-ea -XX:+UseG1GC -XX:G1HeapRegionSize=32M -XX:+UseGCOverheadLimit -XX:+ExplicitGCInvokesConcurrent -Xmx2G -Dconfig=etc/config.properties -Dlog.levels-file=etc/log.properties&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Working directory: &lt;code&gt;$MODULE_WORKING_DIR$&lt;/code&gt; or &lt;code&gt;$MODULE_DIR$&lt;/code&gt;(Depends your version of IntelliJ)&lt;/li&gt; 
  &lt;li&gt;Use classpath of module: &lt;code&gt;presto-main&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;The working directory should be the &lt;code&gt;presto-main&lt;/code&gt; subdirectory. In IntelliJ, using &lt;code&gt;$MODULE_DIR$&lt;/code&gt; accomplishes this automatically.&lt;/p&gt; 
 &lt;p&gt;Additionally, the Hive plugin must be configured with location of your Hive metastore Thrift service. Add the following to the list of VM options, replacing &lt;code&gt;localhost:9083&lt;/code&gt; with the correct host and port (or use the below value if you do not have a Hive metastore):&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;-Dhive.metastore.uri=thrift://localhost:9083
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Using SOCKS for Hive or HDFS&lt;/h3&gt; 
 &lt;p&gt;If your Hive metastore or HDFS cluster is not directly accessible to your local machine, you can use SSH port forwarding to access it. Setup a dynamic SOCKS proxy with SSH listening on local port 1080:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;ssh -v -N -D 1080 server
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Then add the following to the list of VM options:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;-Dhive.metastore.thrift.client.socks-proxy=localhost:1080
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Running the CLI&lt;/h3&gt; 
 &lt;p&gt;Start the CLI to connect to the server and run SQL queries:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;presto-cli/target/presto-cli-*-executable.jar
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Run a query to see the nodes in the cluster:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;SELECT * FROM system.runtime.nodes;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;In the sample configuration, the Hive connector is mounted in the &lt;code&gt;hive&lt;/code&gt; catalog, so you can run the following queries to show the tables in the Hive database &lt;code&gt;default&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;SHOW TABLES FROM hive.default;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Building the Documentation&lt;/h3&gt; 
 &lt;p&gt;To build the Presto docs, see the &lt;a href="https://raw.githubusercontent.com/prestodb/presto/master/presto-docs/README.md"&gt;docs README&lt;/a&gt;.&lt;/p&gt; 
 &lt;h3&gt;Building the Presto Console&lt;/h3&gt; 
 &lt;p&gt;The Presto Console is composed of several React components and is written in JSX and ES6. This source code is stored in the &lt;code&gt;presto-ui/&lt;/code&gt; module. The compilation process generates browser-compatible javascript which is added as JAR resources during the maven build. When the resource JAR is included on the classpath of Presto coordinator, it will be able to serve the resources.&lt;/p&gt; 
 &lt;p&gt;None of the Java code relies on the Presto UI project being compiled, so it is possible to exclude this UI when building Presto. Add the property &lt;code&gt;-DskipUI&lt;/code&gt; to the maven command to disable building the &lt;code&gt;ui&lt;/code&gt; maven module.&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;./mvnw clean install -DskipUI
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;You must have &lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; and &lt;a href="https://yarnpkg.com/en/"&gt;Yarn&lt;/a&gt; installed to build the UI. When using Maven to build the project, Node and yarn are installed in the &lt;code&gt;presto-ui/target&lt;/code&gt; folder. Add the node and yarn executables to the &lt;code&gt;PATH&lt;/code&gt; environment variable.&lt;/p&gt; 
 &lt;p&gt;To update Presto Console after making changes, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;yarn --cwd presto-ui/src install
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To simplify iteration, you can also run in &lt;code&gt;watch&lt;/code&gt; mode, which automatically re-compiles when changes to source files are detected:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;yarn --cwd presto-ui/src run watch
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To iterate quickly, simply re-build the project in IntelliJ after packaging is complete. Project resources will be hot-reloaded and changes are reflected on browser refresh.&lt;/p&gt; 
 &lt;h2&gt;Presto native and Velox&lt;/h2&gt; 
 &lt;p&gt;&lt;a href="https://github.com/prestodb/presto/tree/master/presto-native-execution"&gt;Presto native&lt;/a&gt; is a C++ rewrite of Presto worker. &lt;a href="https://github.com/prestodb/presto/tree/master/presto-native-execution"&gt;Presto native&lt;/a&gt; uses &lt;a href="https://github.com/facebookincubator/velox"&gt;Velox&lt;/a&gt; as its primary engine to run presto workloads.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/facebookincubator/velox"&gt;Velox&lt;/a&gt; is a C++ database library which provides reusable, extensible, and high-performance data processing components.&lt;/p&gt; 
 &lt;p&gt;Check out &lt;a href="https://github.com/prestodb/presto/tree/master/presto-native-execution#build-from-source"&gt;building instructions&lt;/a&gt; to get started.&lt;/p&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;h2&gt;Contributing!&lt;/h2&gt; 
&lt;p&gt;Please refer to the &lt;a href="https://github.com/prestodb/presto/raw/master/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Questions?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://communityinviter.com/apps/prestodb/prestodb"&gt;Please join our Slack channel and ask in &lt;code&gt;#dev&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;By contributing to Presto, you agree that your contributions will be licensed under the &lt;a href="https://raw.githubusercontent.com/prestodb/presto/master/LICENSE"&gt;Apache License Version 2.0 (APLv2)&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Card-Forge/forge</title>
      <link>https://github.com/Card-Forge/forge</link>
      <description>&lt;p&gt;An unofficial rules engine for the world's greatest card game.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;⚔️ Forge: The Magic: The Gathering Rules Engine&lt;/h1&gt; 
&lt;p&gt;Join the &lt;strong&gt;Forge community&lt;/strong&gt; on &lt;a href="https://discord.gg/HcPJNyD66a"&gt;Discord&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Card-Forge/forge/actions/workflows/test-build.yaml"&gt;&lt;img src="https://github.com/Card-Forge/forge/actions/workflows/test-build.yaml/badge.svg?sanitize=true" alt="Test build"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;✨ Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Forge&lt;/strong&gt; is a dynamic and open-source &lt;strong&gt;Rules Engine&lt;/strong&gt; tailored for &lt;strong&gt;Magic: The Gathering&lt;/strong&gt; enthusiasts. Developed by a community of passionate programmers, Forge allows players to explore the rich universe of MTG through a flexible, engaging platform.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Forge operates independently and is not affiliated with Wizards of the Coast.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;🌟 Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 Cross-Platform Support:&lt;/strong&gt; Play on &lt;strong&gt;Windows, Mac, Linux,&lt;/strong&gt; and &lt;strong&gt;Android&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔧 Extensible Architecture:&lt;/strong&gt; Built in &lt;strong&gt;Java&lt;/strong&gt;, Forge encourages developers to contribute by adding features and cards.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎮 Versatile Gameplay:&lt;/strong&gt; Dive into single-player modes or challenge opponents online!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🛠️ Installation Guide&lt;/h2&gt; 
&lt;h3&gt;📥 Desktop Installation&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Latest Releases:&lt;/strong&gt; Download the latest version &lt;a href="https://github.com/Card-Forge/forge/releases/latest"&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Snapshot Build:&lt;/strong&gt; For the latest development version, grab the &lt;code&gt;forge-gui-desktop&lt;/code&gt; tarball from our &lt;a href="https://github.com/Card-Forge/forge/releases/tag/daily-snapshots"&gt;Snapshot Build&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Extract to a new folder to prevent version conflicts.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User Data Management:&lt;/strong&gt; Previous players’ data is preserved during upgrades.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Java Requirement:&lt;/strong&gt; Ensure you have &lt;strong&gt;Java 17 or later&lt;/strong&gt; installed.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;📱 Android Installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;(Note: &lt;strong&gt;Android 11&lt;/strong&gt; is the minimum requirements with at least &lt;strong&gt;6GB RAM&lt;/strong&gt; to run smoothly. You need to enable &lt;strong&gt;"Install unknown apps"&lt;/strong&gt; for Forge to initialize and update itself)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Download the &lt;strong&gt;APK&lt;/strong&gt; from the &lt;a href="https://github.com/Card-Forge/forge/releases/tag/daily-snapshots"&gt;Snapshot Build&lt;/a&gt;. On the first launch, Forge will automatically download all necessary assets.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🎮 Modes of Play&lt;/h2&gt; 
&lt;p&gt;Forge offers various exciting gameplay options:&lt;/p&gt; 
&lt;h3&gt;🌍 Adventure Mode&lt;/h3&gt; 
&lt;p&gt;Embark on a thrilling single-player journey where you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Explore an overworld map.&lt;/li&gt; 
 &lt;li&gt;Challenge diverse AI opponents.&lt;/li&gt; 
 &lt;li&gt;Collect cards and items to boost your abilities.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img width="1282" height="752" alt="Shandalar World" src="https://github.com/user-attachments/assets/9af31471-d688-442f-9418-9807d8635b72"&gt; 
&lt;h3&gt;🔍 Quest Modes&lt;/h3&gt; 
&lt;p&gt;Engage in focused gameplay without the overworld exploration—perfect for quick sessions!&lt;/p&gt; 
&lt;img width="1282" height="752" alt="Quest Duels" src="https://github.com/user-attachments/assets/b9613b1c-e8c3-4320-8044-6922c519aad4"&gt; 
&lt;h3&gt;🤖 AI Formats&lt;/h3&gt; 
&lt;p&gt;Test your skills against AI in multiple formats:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Sealed&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Draft&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Commander&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cube&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For comprehensive gameplay instructions, visit our &lt;a href="https://github.com/Card-Forge/forge/wiki/Gameplay-Guide"&gt;Gameplay Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;img width="1282" height="752" alt="Sealed" src="https://github.com/user-attachments/assets/ae603dbd-4421-4753-a333-87cb0a28d772"&gt; 
&lt;hr&gt; 
&lt;h2&gt;💬 Support &amp;amp; Community&lt;/h2&gt; 
&lt;p&gt;Need help? Join our vibrant Discord community!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 Read the &lt;strong&gt;#rules&lt;/strong&gt; and explore the &lt;strong&gt;FAQ&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;❓ Ask your questions in the &lt;strong&gt;#help&lt;/strong&gt; channel for assistance.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🤝 Contributing to Forge&lt;/h2&gt; 
&lt;p&gt;We love community contributions! Interested in helping? Check out our &lt;a href="https://raw.githubusercontent.com/Card-Forge/forge/master/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt; for details on how to get started.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;ℹ️ About Forge&lt;/h2&gt; 
&lt;p&gt;Forge aims to deliver an immersive and customizable Magic: The Gathering experience for fans around the world.&lt;/p&gt; 
&lt;h3&gt;📊 Repository Statistics&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Metric&lt;/th&gt; 
   &lt;th&gt;Count&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;⭐ Stars:&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Card-Forge/forge/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/Card-Forge/forge?style=flat-square" alt="GitHub stars"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🍴 Forks:&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Card-Forge/forge/network"&gt;&lt;img src="https://img.shields.io/github/forks/Card-Forge/forge?style=flat-square" alt="GitHub forks"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;👥 Contributors:&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Card-Forge/forge/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/Card-Forge/forge?style=flat-square" alt="GitHub contributors"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;📄 License:&lt;/strong&gt; &lt;a href="https://raw.githubusercontent.com/Card-Forge/forge/master/LICENSE"&gt;GPL-3.0&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center" style="display: flex; align-items: center; justify-content: center;"&gt; 
 &lt;div style="margin-left: auto;"&gt; 
  &lt;a href="https://raw.githubusercontent.com/Card-Forge/forge/master/#top"&gt; &lt;img src="https://img.shields.io/badge/Back%20to%20Top-000000?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="Back to Top"&gt; &lt;/a&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>DependencyTrack/dependency-track</title>
      <link>https://github.com/DependencyTrack/dependency-track</link>
      <description>&lt;p&gt;Dependency-Track is an intelligent Component Analysis platform that allows organizations to identify and reduce risk in the software supply chain.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/DependencyTrack/dependency-track/actions?workflow=CI+Build"&gt;&lt;img src="https://github.com/DependencyTrack/dependency-track/actions/workflows/ci-build.yaml/badge.svg?sanitize=true" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://www.codacy.com/gh/DependencyTrack/dependency-track/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=DependencyTrack/dependency-track&amp;amp;utm_campaign=Badge_Grade"&gt;&lt;img src="https://app.codacy.com/project/badge/Grade/b2ecd06dab57438a9a55bc4a71c5a8ce" alt="Codacy Badge"&gt;&lt;/a&gt; &lt;a href="https://github.com/stevespringett/Alpine"&gt;&lt;img src="https://img.shields.io/badge/built%20on-Alpine-blue.svg?sanitize=true" alt="Alpine"&gt;&lt;/a&gt; &lt;a href="https://github.com/DependencyTrack/dependency-track/raw/master/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/badge/license-apache%20v2-brightgreen.svg?sanitize=true" alt="License"&gt;&lt;/a&gt; &lt;a href="https://www.owasp.org/index.php/OWASP_Dependency_Track_Project"&gt;&lt;img src="https://img.shields.io/badge/owasp-flagship%20project-orange.svg?sanitize=true" alt="OWASP Flagship"&gt;&lt;/a&gt; &lt;a href="https://dependencytrack.org/"&gt;&lt;img src="https://img.shields.io/badge/https://-dependencytrack.org-blue.svg?sanitize=true" alt="Website"&gt;&lt;/a&gt; &lt;a href="https://docs.dependencytrack.org/"&gt;&lt;img src="https://img.shields.io/badge/read-documentation-blue.svg?sanitize=true" alt="Documentation"&gt;&lt;/a&gt; &lt;a href="https://dependencytrack.org/slack"&gt;&lt;img src="https://img.shields.io/badge/chat%20on-slack-46BC99.svg?sanitize=true" alt="Slack"&gt;&lt;/a&gt; &lt;a href="https://dependencytrack.org/discussion"&gt;&lt;img src="https://img.shields.io/badge/discussion-groups.io-blue.svg?sanitize=true" alt="Group Discussion"&gt;&lt;/a&gt; &lt;a href="https://dependencytrack.org/youtube"&gt;&lt;img src="https://img.shields.io/badge/youtube-subscribe-%23c4302b.svg?sanitize=true" alt="YouTube Subscribe"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/dependencytrack"&gt;&lt;img src="https://img.shields.io/twitter/follow/dependencytrack.svg?label=Follow&amp;amp;style=social" alt="Twitter"&gt;&lt;/a&gt; &lt;a href="https://github.com/DependencyTrack/dependency-track/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/DependencyTrack/dependency-track/total.svg?sanitize=true" alt="Downloads"&gt;&lt;/a&gt; &lt;a href="https://github.com/DependencyTrack/dependency-track/releases"&gt;&lt;img src="https://img.shields.io/github/release/DependencyTrack/dependency-track.svg?sanitize=true" alt="Latest"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/dependencytrack/apiserver/"&gt;&lt;img src="https://img.shields.io/docker/pulls/dependencytrack/apiserver.svg?label=Docker%20Pulls%20%28API%20Server%29" alt="Pulls - API Server"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/dependencytrack/frontend/"&gt;&lt;img src="https://img.shields.io/docker/pulls/dependencytrack/frontend.svg?label=Docker%20Pulls%20%28Frontend%29" alt="Pulls - Frontend"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/dependencytrack/bundled/"&gt;&lt;img src="https://img.shields.io/docker/pulls/dependencytrack/bundled.svg?label=Docker%20Pulls%20%28Bundled%29" alt="Pulls - Bundled"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/owasp/dependency-track/"&gt;&lt;img src="https://img.shields.io/docker/pulls/owasp/dependency-track.svg?label=Docker%20Pulls%20%28OWASP%20Legacy%29" alt="Pulls - Legacy"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/DependencyTrack/branding/master/dt-logo.svg?sanitize=true" alt="logo preview"&gt;&lt;/p&gt; 
&lt;p&gt;Dependency-Track is an intelligent &lt;a href="https://owasp.org/www-community/Component_Analysis"&gt;Component Analysis&lt;/a&gt; platform that allows organizations to identify and reduce risk in the software supply chain. Dependency-Track takes a unique and highly beneficial approach by leveraging the capabilities of &lt;a href="https://owasp.org/www-community/Component_Analysis#software-bill-of-materials-sbom"&gt;Software Bill of Materials&lt;/a&gt; (SBOM). This approach provides capabilities that traditional Software Composition Analysis (SCA) solutions cannot achieve.&lt;/p&gt; 
&lt;p&gt;Dependency-Track monitors component usage across all versions of every application in its portfolio in order to proactively identify risk across an organization. The platform has an API-first design and is ideal for use in CI/CD environments.&lt;/p&gt; 
&lt;h2&gt;Ecosystem Overview&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/DependencyTrack/dependency-track/master/docs/images/integrations.png" alt="alt text"&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Consumes and produces &lt;a href="https://cyclonedx.org"&gt;CycloneDX&lt;/a&gt; Software Bill of Materials (SBOM)&lt;/li&gt; 
 &lt;li&gt;Consumes and produces &lt;a href="https://cyclonedx.org/capabilities/vex/"&gt;CycloneDX Vulnerability Exploitability Exchange (VEX)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Component support for: 
  &lt;ul&gt; 
   &lt;li&gt;Applications&lt;/li&gt; 
   &lt;li&gt;Libraries&lt;/li&gt; 
   &lt;li&gt;Frameworks&lt;/li&gt; 
   &lt;li&gt;Operating systems&lt;/li&gt; 
   &lt;li&gt;Containers&lt;/li&gt; 
   &lt;li&gt;Firmware&lt;/li&gt; 
   &lt;li&gt;Files&lt;/li&gt; 
   &lt;li&gt;Hardware&lt;/li&gt; 
   &lt;li&gt;Services&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Tracks component usage across every application in an organizations portfolio&lt;/li&gt; 
 &lt;li&gt;Quickly identify what is affected, and where&lt;/li&gt; 
 &lt;li&gt;Identifies multiple forms of risk including 
  &lt;ul&gt; 
   &lt;li&gt;Components with known vulnerabilities&lt;/li&gt; 
   &lt;li&gt;Out-of-date components&lt;/li&gt; 
   &lt;li&gt;Modified components&lt;/li&gt; 
   &lt;li&gt;License risk&lt;/li&gt; 
   &lt;li&gt;More coming soon...&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Integrates with multiple sources of vulnerability intelligence including: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://nvd.nist.gov"&gt;National Vulnerability Database&lt;/a&gt; (NVD)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.github.com/advisories"&gt;GitHub Advisories&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://ossindex.sonatype.org"&gt;Sonatype OSS Index&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://snyk.io"&gt;Snyk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.aquasec.com/products/trivy/"&gt;Trivy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://osv.dev"&gt;OSV&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://vulndb.cyberriskanalytics.com"&gt;VulnDB&lt;/a&gt; from &lt;a href="https://www.riskbasedsecurity.com"&gt;Risk Based Security&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;More coming soon.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Helps to prioritize mitigation by incorporating support for the &lt;a href="https://www.first.org/epss/"&gt;Exploit Prediction Scoring System (EPSS)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Maintain a private vulnerability database of vulnerability components&lt;/li&gt; 
 &lt;li&gt;Robust policy engine with support for global and per-project policies 
  &lt;ul&gt; 
   &lt;li&gt;Security risk and compliance&lt;/li&gt; 
   &lt;li&gt;License risk and compliance&lt;/li&gt; 
   &lt;li&gt;Operational risk and compliance&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Ecosystem agnostic with built-in repository support for: 
  &lt;ul&gt; 
   &lt;li&gt;Cargo (Rust)&lt;/li&gt; 
   &lt;li&gt;Composer (PHP)&lt;/li&gt; 
   &lt;li&gt;Gems (Ruby)&lt;/li&gt; 
   &lt;li&gt;Hex (Erlang/Elixir)&lt;/li&gt; 
   &lt;li&gt;Maven (Java)&lt;/li&gt; 
   &lt;li&gt;NPM (Javascript)&lt;/li&gt; 
   &lt;li&gt;CPAN (Perl)&lt;/li&gt; 
   &lt;li&gt;NuGet (.NET)&lt;/li&gt; 
   &lt;li&gt;PyPI (Python)&lt;/li&gt; 
   &lt;li&gt;More coming soon.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Identifies APIs and external service components including: 
  &lt;ul&gt; 
   &lt;li&gt;Service provider&lt;/li&gt; 
   &lt;li&gt;Endpoint URIs&lt;/li&gt; 
   &lt;li&gt;Data classification&lt;/li&gt; 
   &lt;li&gt;Directional flow of data&lt;/li&gt; 
   &lt;li&gt;Trust boundary traversal&lt;/li&gt; 
   &lt;li&gt;Authentication requirements&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Includes a comprehensive auditing workflow for triaging results&lt;/li&gt; 
 &lt;li&gt;Configurable notifications supporting Slack, Microsoft Teams, Mattermost, Webhooks, Webex, Email and Jira&lt;/li&gt; 
 &lt;li&gt;Supports standardized SPDX license ID’s and tracks license use by component&lt;/li&gt; 
 &lt;li&gt;Easy to read metrics for components, projects, and portfolio&lt;/li&gt; 
 &lt;li&gt;Native support for Kenna Security, Fortify SSC, ThreadFix, and DefectDojo&lt;/li&gt; 
 &lt;li&gt;API-first design facilitates easy integration with other systems&lt;/li&gt; 
 &lt;li&gt;API documentation available in OpenAPI format&lt;/li&gt; 
 &lt;li&gt;OAuth 2.0 + OpenID Connect (OIDC) support for single sign-on (authN/authZ)&lt;/li&gt; 
 &lt;li&gt;Supports internally managed users, Active Directory/LDAP, and API Keys&lt;/li&gt; 
 &lt;li&gt;Simple to install and configure. Get up and running in just a few minutes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/DependencyTrack/dependency-track/master/docs/images/screenshots/dashboard.png" alt="alt text"&gt;&lt;/p&gt; 
&lt;h3&gt;Quickstart (Docker Compose)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Downloads the latest Docker Compose file
curl -LO https://dependencytrack.org/docker-compose.yml

# Starts the stack using Docker Compose
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Quickstart (Docker Swarm)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Downloads the latest Docker Compose file
curl -LO https://dependencytrack.org/docker-compose.yml

# Initializes Docker Swarm (if not previously initialized)
docker swarm init

# Starts the stack using Docker Swarm
docker stack deploy -c docker-compose.yml dtrack
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Quickstart (Manual Execution)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Pull the image from the Docker Hub OWASP repo
docker pull dependencytrack/bundled

# Creates a dedicated volume where data can be stored outside the container
docker volume create --name dependency-track

# Run the bundled container with 8GB RAM on port 8080
docker run -d -m 8192m -p 8080:8080 --name dependency-track -v dependency-track:/data dependencytrack/bundled
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;NOTICE: Always use official binary releases in production.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Distributions&lt;/h2&gt; 
&lt;p&gt;Dependency-Track has three distribution variants. They are:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Package&lt;/th&gt; 
   &lt;th align="left"&gt;Package Format&lt;/th&gt; 
   &lt;th align="center"&gt;Recommended&lt;/th&gt; 
   &lt;th align="center"&gt;Supported&lt;/th&gt; 
   &lt;th align="center"&gt;Docker&lt;/th&gt; 
   &lt;th align="center"&gt;Download&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;API Server&lt;/td&gt; 
   &lt;td align="left"&gt;Executable WAR&lt;/td&gt; 
   &lt;td align="center"&gt;✅&lt;/td&gt; 
   &lt;td align="center"&gt;✅&lt;/td&gt; 
   &lt;td align="center"&gt;✅&lt;/td&gt; 
   &lt;td align="center"&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Frontend&lt;/td&gt; 
   &lt;td align="left"&gt;Single Page Application&lt;/td&gt; 
   &lt;td align="center"&gt;✅&lt;/td&gt; 
   &lt;td align="center"&gt;✅&lt;/td&gt; 
   &lt;td align="center"&gt;✅&lt;/td&gt; 
   &lt;td align="center"&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Bundled&lt;/td&gt; 
   &lt;td align="left"&gt;Executable WAR&lt;/td&gt; 
   &lt;td align="center"&gt;❌&lt;/td&gt; 
   &lt;td align="center"&gt;☑️&lt;/td&gt; 
   &lt;td align="center"&gt;✅&lt;/td&gt; 
   &lt;td align="center"&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;API Server&lt;/h4&gt; 
&lt;p&gt;The API Server contains an embedded Jetty server and all server-side functionality, but excludes the frontend user interface. This variant is new as of Dependency-Track v4.0.&lt;/p&gt; 
&lt;h4&gt;Frontend&lt;/h4&gt; 
&lt;p&gt;The &lt;a href="https://github.com/DependencyTrack/frontend"&gt;Frontend&lt;/a&gt; is the user interface that is accessible in a web browser. The Frontend is a Single Page Application (SPA) that can be deployed independently of the Dependency-Track API Server. This variant is new as of Dependency-Track v3.8.&lt;/p&gt; 
&lt;h4&gt;Bundled&lt;/h4&gt; 
&lt;p&gt;The Bundled variant combines the API Server and the Frontend user interface. This variant was previously referred to as the executable war and was the preferred distribution from Dependency-Track v3.0 - v3.8. This variant is supported but deprecated and will be discontinued in a future release.&lt;/p&gt; 
&lt;h4&gt;Traditional&lt;/h4&gt; 
&lt;p&gt;The Traditional variant combines the API Server and the Frontend user interface and must be deployed to a Servlet container. This variant is not supported, deprecated, and will be discontinued in a future release.&lt;/p&gt; 
&lt;h2&gt;Deploying on Kubernetes with Helm&lt;/h2&gt; 
&lt;p&gt;Refer to &lt;a href="https://github.com/DependencyTrack/helm-charts"&gt;https://github.com/DependencyTrack/helm-charts&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Interested in contributing to Dependency-Track? Please check &lt;a href="https://raw.githubusercontent.com/DependencyTrack/dependency-track/master/CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; to see how you can help!&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href="https://dependencytrack.org/"&gt;https://dependencytrack.org/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://docs.dependencytrack.org/"&gt;https://docs.dependencytrack.org/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Component Analysis: &lt;a href="https://owasp.org/www-community/Component_Analysis"&gt;https://owasp.org/www-community/Component_Analysis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Twitter: &lt;a href="https://dependencytrack.org/twitter"&gt;https://dependencytrack.org/twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;YouTube: &lt;a href="https://dependencytrack.org/youtube"&gt;https://dependencytrack.org/youtube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Slack: &lt;a href="https://dependencytrack.org/slack"&gt;https://dependencytrack.org/slack&lt;/a&gt; (Invite: &lt;a href="https://dependencytrack.org/slack/invite"&gt;https://dependencytrack.org/slack/invite&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Discussion (Groups.io): &lt;a href="https://dependencytrack.org/discussion"&gt;https://dependencytrack.org/discussion&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Copyright &amp;amp; License&lt;/h2&gt; 
&lt;p&gt;Dependency-Track is Copyright (c) OWASP Foundation. All Rights Reserved.&lt;/p&gt; 
&lt;p&gt;Permission to modify and redistribute is granted under the terms of the &lt;a href="https://github.com/DependencyTrack/dependency-track/raw/master/LICENSE.txt"&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Dependency-Track makes use of several other open source libraries. Please see the &lt;a href="https://github.com/DependencyTrack/dependency-track/raw/master/NOTICES.txt"&gt;notices&lt;/a&gt; file for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>grpc/grpc-java</title>
      <link>https://github.com/grpc/grpc-java</link>
      <description>&lt;p&gt;The Java gRPC implementation. HTTP/2 based RPC&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gRPC-Java - An RPC library and framework&lt;/h1&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Homepage:&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://grpc.io/"&gt;grpc.io&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Mailing List:&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://groups.google.com/forum/#!forum/grpc-io"&gt;grpc-io@googlegroups.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;&lt;a href="https://gitter.im/grpc/grpc?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge"&gt;&lt;img src="https://badges.gitter.im/grpc/grpc.svg?sanitize=true" alt="Join the chat at https://gitter.im/grpc/grpc"&gt;&lt;/a&gt; &lt;a href="https://github.com/grpc/grpc-java/actions/workflows/testing.yml?branch=master"&gt;&lt;img src="https://github.com/grpc/grpc-java/actions/workflows/testing.yml/badge.svg?branch=master" alt="GitHub Actions Linux Testing"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/grpc/grpc-java?branch=master"&gt;&lt;img src="https://coveralls.io/repos/grpc/grpc-java/badge.svg?branch=master&amp;amp;service=github" alt="Line Coverage Status"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/grpc/grpc-java"&gt;&lt;img src="https://codecov.io/gh/grpc/grpc-java/branch/master/graph/badge.svg?sanitize=true" alt="Branch-adjusted Line Coverage Status"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Supported Platforms&lt;/h2&gt; 
&lt;p&gt;gRPC-Java supports Java 8 and later. Android minSdkVersion 21 (Lollipop) and later are supported with &lt;a href="https://developer.android.com/studio/write/java8-support#supported_features"&gt;Java 8 language desugaring&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;TLS usage on Android typically requires Play Services Dynamic Security Provider. Please see the &lt;a href="https://raw.githubusercontent.com/grpc/grpc-java/master/SECURITY.md"&gt;Security Readme&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Older Java versions are not directly supported, but a branch remains available for fixes and releases. See &lt;a href="https://github.com/grpc/proposal/raw/master/P5-jdk-version-support.md#proposal"&gt;gRFC P5 JDK Version Support Policy&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Java version&lt;/th&gt; 
   &lt;th&gt;gRPC Branch&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;1.41.x&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;For a guided tour, take a look at the &lt;a href="https://grpc.io/docs/languages/java/quickstart"&gt;quick start guide&lt;/a&gt; or the more explanatory &lt;a href="https://grpc.io/docs/languages/java/basics"&gt;gRPC basics&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://github.com/grpc/grpc-java/tree/v1.74.0/examples"&gt;examples&lt;/a&gt; and the &lt;a href="https://github.com/grpc/grpc-java/tree/v1.74.0/examples/android"&gt;Android example&lt;/a&gt; are standalone projects that showcase the usage of gRPC.&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;Download &lt;a href="https://search.maven.org/search?q=g:io.grpc%20AND%20v:1.74.0"&gt;the JARs&lt;/a&gt;. Or for Maven with non-Android, add to your &lt;code&gt;pom.xml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;io.grpc&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;grpc-netty-shaded&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;1.74.0&amp;lt;/version&amp;gt;
  &amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;io.grpc&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;grpc-protobuf&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;1.74.0&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;io.grpc&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;grpc-stub&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;1.74.0&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;dependency&amp;gt; &amp;lt;!-- necessary for Java 9+ --&amp;gt;
  &amp;lt;groupId&amp;gt;org.apache.tomcat&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;annotations-api&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;6.0.53&amp;lt;/version&amp;gt;
  &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or for Gradle with non-Android, add to your dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-gradle"&gt;runtimeOnly 'io.grpc:grpc-netty-shaded:1.74.0'
implementation 'io.grpc:grpc-protobuf:1.74.0'
implementation 'io.grpc:grpc-stub:1.74.0'
compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Android client, use &lt;code&gt;grpc-okhttp&lt;/code&gt; instead of &lt;code&gt;grpc-netty-shaded&lt;/code&gt; and &lt;code&gt;grpc-protobuf-lite&lt;/code&gt; instead of &lt;code&gt;grpc-protobuf&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-gradle"&gt;implementation 'io.grpc:grpc-okhttp:1.74.0'
implementation 'io.grpc:grpc-protobuf-lite:1.74.0'
implementation 'io.grpc:grpc-stub:1.74.0'
compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For &lt;a href="https://bazel.build"&gt;Bazel&lt;/a&gt;, you can either &lt;a href="https://github.com/bazelbuild/rules_jvm_external"&gt;use Maven&lt;/a&gt; (with the GAVs from above), or use &lt;code&gt;@io_grpc_grpc_java//api&lt;/code&gt; et al (see below).&lt;/p&gt; 
&lt;p&gt;Development snapshots are available in &lt;a href="https://central.sonatype.com/repository/maven-snapshots/"&gt;Sonatypes's snapshot repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Generated Code&lt;/h2&gt; 
&lt;p&gt;For protobuf-based codegen, you can put your proto files in the &lt;code&gt;src/main/proto&lt;/code&gt; and &lt;code&gt;src/test/proto&lt;/code&gt; directories along with an appropriate plugin.&lt;/p&gt; 
&lt;p&gt;For protobuf-based codegen integrated with the Maven build system, you can use &lt;a href="https://www.xolstice.org/protobuf-maven-plugin/"&gt;protobuf-maven-plugin&lt;/a&gt; (Eclipse and NetBeans users should also look at &lt;code&gt;os-maven-plugin&lt;/code&gt;'s &lt;a href="https://github.com/trustin/os-maven-plugin#issues-with-eclipse-m2e-or-other-ides"&gt;IDE documentation&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;build&amp;gt;
  &amp;lt;extensions&amp;gt;
    &amp;lt;extension&amp;gt;
      &amp;lt;groupId&amp;gt;kr.motd.maven&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;os-maven-plugin&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;1.7.1&amp;lt;/version&amp;gt;
    &amp;lt;/extension&amp;gt;
  &amp;lt;/extensions&amp;gt;
  &amp;lt;plugins&amp;gt;
    &amp;lt;plugin&amp;gt;
      &amp;lt;groupId&amp;gt;org.xolstice.maven.plugins&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;protobuf-maven-plugin&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;0.6.1&amp;lt;/version&amp;gt;
      &amp;lt;configuration&amp;gt;
        &amp;lt;protocArtifact&amp;gt;com.google.protobuf:protoc:3.25.5:exe:${os.detected.classifier}&amp;lt;/protocArtifact&amp;gt;
        &amp;lt;pluginId&amp;gt;grpc-java&amp;lt;/pluginId&amp;gt;
        &amp;lt;pluginArtifact&amp;gt;io.grpc:protoc-gen-grpc-java:1.74.0:exe:${os.detected.classifier}&amp;lt;/pluginArtifact&amp;gt;
      &amp;lt;/configuration&amp;gt;
      &amp;lt;executions&amp;gt;
        &amp;lt;execution&amp;gt;
          &amp;lt;goals&amp;gt;
            &amp;lt;goal&amp;gt;compile&amp;lt;/goal&amp;gt;
            &amp;lt;goal&amp;gt;compile-custom&amp;lt;/goal&amp;gt;
          &amp;lt;/goals&amp;gt;
        &amp;lt;/execution&amp;gt;
      &amp;lt;/executions&amp;gt;
    &amp;lt;/plugin&amp;gt;
  &amp;lt;/plugins&amp;gt;
&amp;lt;/build&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For non-Android protobuf-based codegen integrated with the Gradle build system, you can use &lt;a href="https://github.com/google/protobuf-gradle-plugin"&gt;protobuf-gradle-plugin&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-gradle"&gt;plugins {
    id 'com.google.protobuf' version '0.9.5'
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:3.25.5"
  }
  plugins {
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.74.0'
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {}
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The prebuilt protoc-gen-grpc-java binary uses glibc on Linux. If you are compiling on Alpine Linux, you may want to use the &lt;a href="https://pkgs.alpinelinux.org/package/edge/community/x86_64/grpc-java"&gt;Alpine grpc-java package&lt;/a&gt; which uses musl instead.&lt;/p&gt; 
&lt;p&gt;For Android protobuf-based codegen integrated with the Gradle build system, also use protobuf-gradle-plugin but specify the 'lite' options:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-gradle"&gt;plugins {
    id 'com.google.protobuf' version '0.9.5'
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:3.25.5"
  }
  plugins {
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.74.0'
    }
  }
  generateProtoTasks {
    all().each { task -&amp;gt;
      task.builtins {
        java { option 'lite' }
      }
      task.plugins {
        grpc { option 'lite' }
      }
    }
  }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For &lt;a href="https://bazel.build"&gt;Bazel&lt;/a&gt;, use the &lt;a href="https://github.com/bazelbuild/rules_proto"&gt;&lt;code&gt;proto_library&lt;/code&gt;&lt;/a&gt; and the &lt;a href="https://bazel.build/reference/be/java#java_proto_library"&gt;&lt;code&gt;java_proto_library&lt;/code&gt;&lt;/a&gt; (no &lt;code&gt;load()&lt;/code&gt; required) and &lt;code&gt;load("@io_grpc_grpc_java//:java_grpc_library.bzl", "java_grpc_library")&lt;/code&gt; (from this project), as in &lt;a href="https://github.com/grpc/grpc-java/raw/master/examples/BUILD.bazel"&gt;this example &lt;code&gt;BUILD.bazel&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;API Stability&lt;/h2&gt; 
&lt;p&gt;APIs annotated with &lt;code&gt;@Internal&lt;/code&gt; are for internal use by the gRPC library and should not be used by gRPC users. APIs annotated with &lt;code&gt;@ExperimentalApi&lt;/code&gt; are subject to change in future releases, and library code that other projects may depend on should not use these APIs.&lt;/p&gt; 
&lt;p&gt;We recommend using the &lt;a href="https://github.com/grpc/grpc-java-api-checker"&gt;grpc-java-api-checker&lt;/a&gt; (an &lt;a href="https://github.com/google/error-prone"&gt;Error Prone&lt;/a&gt; plugin) to check for usages of &lt;code&gt;@ExperimentalApi&lt;/code&gt; and &lt;code&gt;@Internal&lt;/code&gt; in any library code that depends on gRPC. It may also be used to check for &lt;code&gt;@Internal&lt;/code&gt; usage or unintended &lt;code&gt;@ExperimentalApi&lt;/code&gt; consumption in non-library code.&lt;/p&gt; 
&lt;h2&gt;How to Build&lt;/h2&gt; 
&lt;p&gt;If you are making changes to gRPC-Java, see the &lt;a href="https://raw.githubusercontent.com/grpc/grpc-java/master/COMPILING.md"&gt;compiling instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;High-level Components&lt;/h2&gt; 
&lt;p&gt;At a high level there are three distinct layers to the library: &lt;em&gt;Stub&lt;/em&gt;, &lt;em&gt;Channel&lt;/em&gt;, and &lt;em&gt;Transport&lt;/em&gt;.&lt;/p&gt; 
&lt;h3&gt;Stub&lt;/h3&gt; 
&lt;p&gt;The Stub layer is what is exposed to most developers and provides type-safe bindings to whatever datamodel/IDL/interface you are adapting. gRPC comes with a &lt;a href="https://github.com/google/grpc-java/raw/master/compiler"&gt;plugin&lt;/a&gt; to the protocol-buffers compiler that generates Stub interfaces out of &lt;code&gt;.proto&lt;/code&gt; files, but bindings to other datamodel/IDL are easy and encouraged.&lt;/p&gt; 
&lt;h3&gt;Channel&lt;/h3&gt; 
&lt;p&gt;The Channel layer is an abstraction over Transport handling that is suitable for interception/decoration and exposes more behavior to the application than the Stub layer. It is intended to be easy for application frameworks to use this layer to address cross-cutting concerns such as logging, monitoring, auth, etc.&lt;/p&gt; 
&lt;h3&gt;Transport&lt;/h3&gt; 
&lt;p&gt;The Transport layer does the heavy lifting of putting and taking bytes off the wire. The interfaces to it are abstract just enough to allow plugging in of different implementations. Note the transport layer API is considered internal to gRPC and has weaker API guarantees than the core API under package &lt;code&gt;io.grpc&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;gRPC comes with multiple Transport implementations:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The Netty-based HTTP/2 transport is the main transport implementation based on &lt;a href="https://netty.io"&gt;Netty&lt;/a&gt;. It is not officially supported on Android. There is a "grpc-netty-shaded" version of this transport. It is generally preferred over using the Netty-based transport directly as it requires less dependency management and is easier to upgrade within many applications.&lt;/li&gt; 
 &lt;li&gt;The OkHttp-based HTTP/2 transport is a lightweight transport based on &lt;a href="https://square.github.io/okio/"&gt;Okio&lt;/a&gt; and forked low-level parts of &lt;a href="https://square.github.io/okhttp/"&gt;OkHttp&lt;/a&gt;. It is mainly for use on Android.&lt;/li&gt; 
 &lt;li&gt;The in-process transport is for when a server is in the same process as the client. It is used frequently for testing, while also being safe for production use.&lt;/li&gt; 
 &lt;li&gt;The Binder transport is for Android cross-process communication on a single device.&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>conductor-oss/conductor</title>
      <link>https://github.com/conductor-oss/conductor</link>
      <description>&lt;p&gt;Conductor is an event driven orchestration platform providing durable and highly resilient execution engine for your applications&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;!-- Dark mode logo --&gt; 
 &lt;source srcset="https://github.com/user-attachments/assets/104b3a67-6013-4622-8075-a45da3a9e726" media="(prefers-color-scheme: dark)"&gt; 
 &lt;!-- Light mode logo --&gt; 
 &lt;img src="https://assets.conductor-oss.org/logo.png" alt="Logo"&gt; 
&lt;/picture&gt; 
&lt;h1 align="center" style="border-bottom: none"&gt; Conductor - Scalable Workflow Orchestration &lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/conductor-oss/conductor/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/conductor-oss/conductor?style=social" alt="GitHub stars"&gt;&lt;/a&gt; &lt;a href="https://github.com/conductor-oss/conductor/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/conductor-oss/conductor.svg?sanitize=true" alt="Github release"&gt;&lt;/a&gt; &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/github/license/conductor-oss/conductor.svg?sanitize=true" alt="License"&gt;&lt;/a&gt; &lt;a href="https://join.slack.com/t/orkes-conductor/shared_invite/zt-2vdbx239s-Eacdyqya9giNLHfrCavfaA"&gt;&lt;img src="https://img.shields.io/badge/Slack-Join%20the%20Community-blueviolet?logo=slack" alt="Conductor Slack"&gt;&lt;/a&gt; &lt;a href="https://conductor-oss.org"&gt;&lt;img src="https://img.shields.io/badge/Conductor%20OSS-Visit%20Site-blue" alt="Conductor OSS"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Conductor is an open-source orchestration engine built at Netflix to help developers manage microservices and event-driven workflows. Today, it’s actively maintained by the team at &lt;a href="https://orkes.io"&gt;Orkes&lt;/a&gt; and a growing &lt;a href="https://orkes-conductor.slack.com/join/shared_invite/zt-2vdbx239s-Eacdyqya9giNLHfrCavfaA#/shared-invite/email"&gt;community of contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/4azDdDlx27M"&gt;&lt;img src="https://github.com/user-attachments/assets/6153aa58-8ad1-4ec5-93d1-38ba1b83e3f4" alt="conductor_oss_getting_started"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#what-is-conductor"&gt;What is Conductor?&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#key-benefits"&gt;Key benefits&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#getting-started"&gt;Getting Started with Docker&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#quick-start-guide"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#create-your-first-workflow"&gt;Create your first workflow&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#build-from-source"&gt;Build from source&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#database-specifications"&gt;Database Specifications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#conductor-oss-roadmap"&gt;Conductor Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#contributors"&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#resources"&gt;Additional Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/#slack-community"&gt;Community &amp;amp; Support&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;What is Conductor?&lt;/h1&gt; 
&lt;p&gt;Conductor (or &lt;a href="https://netflixtechblog.com/netflix-conductor-a-microservices-orchestrator-2e8d4771bf40"&gt;Netflix Conductor&lt;/a&gt;) is a microservices orchestration engine for distributed and asynchronous workflows. It empowers developers to create workflows that define interactions between services, databases, and other external systems.&lt;/p&gt; 
&lt;p&gt;Conductor is designed to enable flexible, resilient, and scalable workflows. It allows you to compose services into complex workflows without coupling them tightly, simplifying orchestration across cloud-native applications and enterprise systems alike.&lt;/p&gt; 
&lt;h2&gt;Key benefits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Resilience and Error Handling:&lt;/strong&gt; Conductor enables automatic retries and fallback mechanisms.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalability:&lt;/strong&gt; Built to scale with complex workflows in high-traffic environments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Observability:&lt;/strong&gt; Provides monitoring and debugging capabilities for workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ease of Integration:&lt;/strong&gt; Seamlessly integrates with microservices, external APIs, and legacy systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Workflow as code:&lt;/strong&gt; Define workflows in JSON and manage them with versioning.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rich task types:&lt;/strong&gt; Includes task types like HTTP, JSON, Lambda, Sub Workflow, and Event tasks, allowing for flexible workflow definitions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic workflow management:&lt;/strong&gt; Workflows can evolve independently of the underlying services.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built-in UI:&lt;/strong&gt; A customizable UI is available to monitor and manage workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible persistence and queue options:&lt;/strong&gt; Use Redis, MySQL, Postgres, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;Getting Started with Conductor&lt;/h1&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install Docker Desktop (&lt;a href="https://docs.docker.com/desktop/setup/install/mac-install/"&gt;Mac&lt;/a&gt;, &lt;a href="https://docs.docker.com/desktop/setup/install/windows-install/"&gt;Windows/PC&lt;/a&gt;, &lt;a href="https://docs.docker.com/desktop/setup/install/linux/"&gt;Linux&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Install Java (JDK) 17 or newer&lt;/li&gt; 
 &lt;li&gt;Node 14 for the UI to build 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Earlier versions may work, but are untested&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start guide&lt;/h2&gt; 
&lt;h4&gt;Clone the repo&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/conductor-oss/conductor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Change to new Conductor directory&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cd conductor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Start with Docker Compose (&lt;em&gt;recommended for local deployment&lt;/em&gt;)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker compose -f docker/docker-compose.yaml up
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Create your first workflow&lt;/h4&gt; 
&lt;h5&gt;With the UI:&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://localhost:8127"&gt;http://localhost:8127&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Or the REST API with your preferred HTTP client:&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;p&gt;Check-out the &lt;a href="https://github.com/conductor-oss/conductor/tree/main/docs"&gt;Conductor docs&lt;/a&gt; for additional details&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;Database Specifications&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;The default persistence used is Redis&lt;/li&gt; 
 &lt;li&gt;The indexing backend is &lt;a href="https://www.elastic.co/"&gt;Elasticsearch&lt;/a&gt; (7.x)&lt;/li&gt; 
 &lt;li&gt;To use &lt;a href="https://opensearch.org/"&gt;Opensearch&lt;/a&gt; (2.x), comment out Elasticsearch import so lucene dependencies don't conflict &lt;a href="https://github.com/conductor-oss/conductor/raw/main/server/build.gradle#L44-L46"&gt;server/build.gradle&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configuration for various database backends&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Backend&lt;/th&gt; 
   &lt;th&gt;Configuration&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Redis + ES7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docker/server/config/config-redis.properties"&gt;config-redis.properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Postgres&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docker/server/config/config-postgres.properties"&gt;config-postgres.properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Postgres + ES7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docker/server/config/config-postgres-es7.properties"&gt;config-postgres-es7.properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MySQL + ES7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docker/server/config/config-mysql.properties"&gt;config-mysql.properties&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;Build from source&lt;/h1&gt; 
&lt;p&gt;Build from source and deploy Conductor as a standalone Java application. Configure databases, queues, and environment settings as needed. Follow the &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/docs/devguide/running/source.md"&gt;Building Conductor From Source&lt;/a&gt;&lt;/strong&gt; guide included in this repo.&lt;/p&gt; 
&lt;h2&gt;Available SDKs&lt;/h2&gt; 
&lt;p&gt;Conductor provides several SDKs for interacting with the API and creating custom clients:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/java-sdk"&gt;&lt;strong&gt;Java SDK:&lt;/strong&gt;&lt;/a&gt; Fully featured for building and executing workflows in Java.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/python-sdk"&gt;&lt;strong&gt;Python SDK:&lt;/strong&gt;&lt;/a&gt; Python library for creating and managing workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/javascript-sdk"&gt;&lt;strong&gt;Javascript SDK:&lt;/strong&gt;&lt;/a&gt; For integrating Conductor workflows with Javascript/Typescript-based services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/go-sdk"&gt;&lt;strong&gt;Go SDK:&lt;/strong&gt;&lt;/a&gt; For integrating Conductor workflows with Go-based services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/conductor-oss/csharp-sdk"&gt;&lt;strong&gt;C# SDK:&lt;/strong&gt;&lt;/a&gt;The conductor-csharp repository provides the client SDKs to build task workers in C#&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each SDK is maintained as part of the Conductor project, providing examples and comprehensive API documentation.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;We welcome contributions from everyone!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Report Issues:&lt;/strong&gt; Found a bug or have a feature request? Open an &lt;a href="https://github.com/conductor-oss/conductor/issues"&gt;issue on GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute code:&lt;/strong&gt; Check out our &lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;, and explore our &lt;a href="https://github.com/conductor-oss/conductor/labels/good%20first%20issue"&gt;Good first issues&lt;/a&gt; for beginner-friendly tasks to tackle first.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute to our Docs:&lt;/strong&gt; Contribute edits or updates to keep our &lt;a href="https://github.com/conductor-oss/conductor/tree/main/docs"&gt;documentation&lt;/a&gt; in great shape for the community.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Build a Conductor SDK:&lt;/strong&gt; Need an &lt;a href="https://github.com/conductor-sdk"&gt;SDK&lt;/a&gt; not available for Conductor today? Build your own using the &lt;a href="http://localhost:8080"&gt;Swagger API&lt;/a&gt; included with your local deployment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h1&gt;Community&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://join.slack.com/t/orkes-conductor/shared_invite/zt-2vdbx239s-Eacdyqya9giNLHfrCavfaA"&gt;Join the Conductor Slack&lt;/a&gt;&lt;/strong&gt; channel for community discussions and support.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/conductor-oss/conductor/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=conductor-oss/conductor"&gt; &lt;/a&gt; 
&lt;hr&gt; 
&lt;h1&gt;Conductor OSS Roadmap&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/ROADMAP.md"&gt;See the roadmap for the Conductor&lt;/a&gt; If you would like to participate in the roadmap and development, &lt;a href="https://forms.gle/P2i1xHrxPQLrjzTB7"&gt;please reach out&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Conductor is licensed under the &lt;a href="https://raw.githubusercontent.com/conductor-oss/conductor/main/LICENSE"&gt;Apache 2.0 License ©&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aws/aws-sdk-java-v2</title>
      <link>https://github.com/aws/aws-sdk-java-v2</link>
      <description>&lt;p&gt;The official AWS SDK for Java - Version 2&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AWS SDK for Java 2.0&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://codebuild.us-west-2.amazonaws.com/badges?uuid=eyJlbmNyeXB0ZWREYXRhIjoiTFJSRXBBN1hkU1ZEQzZ4M1hoaWlFUExuNER3WjNpVllSQ09Qam1YdFlTSDNTd3RpZzNia3F0VkJRUTBwZlQwR1BEelpSV2dWVnp4YTBCOFZKRzRUR004PSIsIml2UGFyYW1ldGVyU3BlYyI6ImdHdEp1UHhKckpDRmhmQU4iLCJtYXRlcmlhbFNldFNlcmlhbCI6MX0%3D&amp;amp;branch=master" alt="Build Status"&gt; &lt;a href="https://search.maven.org/search?q=g:%22software.amazon.awssdk%22%20AND%20a:%22s3%22"&gt;&lt;img src="https://img.shields.io/maven-central/v/software.amazon.awssdk/s3.svg?label=Maven" alt="Maven"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/aws/aws-sdk-java-v2"&gt;&lt;img src="https://codecov.io/gh/aws/aws-sdk-java-v2/branch/master/graph/badge.svg?sanitize=true" alt="codecov"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/aws/aws-sdk-java-v2/master/#contributors-"&gt;&lt;img src="https://img.shields.io/badge/all_contributors-119-orange.svg?style=flat-square" alt="All Contributors"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; 
&lt;p&gt;The &lt;strong&gt;AWS SDK for Java 2.0&lt;/strong&gt; is a rewrite of 1.0 with some great new features. As with version 1.0, it enables you to easily work with &lt;a href="http://aws.amazon.com/"&gt;Amazon Web Services&lt;/a&gt; but also includes features like non-blocking IO and pluggable HTTP implementation to further customize your applications. You can get started in minutes using &lt;em&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;/em&gt; or any build system that supports MavenCentral as an artifact source.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://aws.amazon.com/sdkforjava"&gt;SDK Homepage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aws/aws-sdk-java-v2/master/docs/LaunchChangelog.md"&gt;1.11 to 2.0 Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aws/aws-sdk-java-v2/master/docs/BestPractices.md"&gt;Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aws/aws-sdk-java-v2/master/#sample-code"&gt;Sample Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sdk.amazonaws.com/java/api/latest/overview-summary.html"&gt;API Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/welcome.html"&gt;Developer Guide&lt;/a&gt; (&lt;a href="https://github.com/awsdocs/aws-java-developer-guide-v2"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aws/aws-sdk-java-v2/master/archetypes/README.md"&gt;Maven Archetypes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/issues"&gt;Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/developer/category/java/"&gt;SDK Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aws/aws-sdk-java-v2/master/#giving-feedback"&gt;Giving Feedback&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h4&gt;Sign up for AWS&lt;/h4&gt; 
&lt;p&gt;Before you begin, you need an AWS account. Please see the &lt;a href="http://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/signup-create-iam-user.html"&gt;Sign Up for AWS&lt;/a&gt; section of the developer guide for information about how to create an AWS account and retrieve your AWS credentials.&lt;/p&gt; 
&lt;h4&gt;Minimum requirements&lt;/h4&gt; 
&lt;p&gt;To run the SDK you will need &lt;strong&gt;Java 1.8+&lt;/strong&gt;. For more information about the requirements and optimum settings for the SDK, please see the &lt;a href="http://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/setup-install.html#%23java-dg-java-env"&gt;Installing a Java Development Environment&lt;/a&gt; section of the developer guide.&lt;/p&gt; 
&lt;h2&gt;Using the SDK&lt;/h2&gt; 
&lt;p&gt;The recommended way to use the AWS SDK for Java in your project is to consume it from Maven Central.&lt;/p&gt; 
&lt;h4&gt;Importing the BOM&lt;/h4&gt; 
&lt;p&gt;To automatically manage module versions (currently all modules have the same version, but this may not always be the case) we recommend you use the &lt;a href="http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22software.amazon.awssdk%22%20AND%20a%3A%22bom%22"&gt;Bill of Materials&lt;/a&gt; import as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependencyManagement&amp;gt;
  &amp;lt;dependencies&amp;gt;
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;software.amazon.awssdk&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;bom&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;2.32.12&amp;lt;/version&amp;gt;
      &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;
      &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;
    &amp;lt;/dependency&amp;gt;
  &amp;lt;/dependencies&amp;gt;
&amp;lt;/dependencyManagement&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then individual modules may omit the &lt;code&gt;version&lt;/code&gt; from their dependency statement:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependencies&amp;gt;
  &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;software.amazon.awssdk&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;ec2&amp;lt;/artifactId&amp;gt;
  &amp;lt;/dependency&amp;gt;
  &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;software.amazon.awssdk&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;s3&amp;lt;/artifactId&amp;gt;
  &amp;lt;/dependency&amp;gt;
  &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;software.amazon.awssdk&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;dynamodb&amp;lt;/artifactId&amp;gt;
  &amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Individual Services&lt;/h4&gt; 
&lt;p&gt;Alternatively you can add dependencies for the specific services you use only:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;software.amazon.awssdk&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;ec2&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;2.32.12&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;software.amazon.awssdk&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;s3&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;2.32.12&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Whole SDK&lt;/h4&gt; 
&lt;p&gt;You can import the whole SDK into your project (includes &lt;em&gt;ALL&lt;/em&gt; services). Please note that it is recommended to only import the modules you need.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;software.amazon.awssdk&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;aws-sdk-java&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;2.32.12&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="http://docs.aws.amazon.com/sdk-for-java/v2/developer-guide/setup-install.html"&gt;Set up the AWS SDK for Java&lt;/a&gt; section of the developer guide for more usage information.&lt;/p&gt; 
&lt;h2&gt;New Features for 2.0&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Provides a way to plug in your own HTTP implementation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Provides first class support for non-blocking IO in Async clients.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building From Source&lt;/h2&gt; 
&lt;p&gt;Once you check out the code from GitHub, you can build it using the following commands.&lt;/p&gt; 
&lt;p&gt;Linux:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./mvnw clean install

# Skip tests, checkstyles, findbugs, etc for quick build
./mvnw clean install -P quick

# Build a specific service module
./mvnw clean install -pl :s3 -P quick --am
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Windows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./mvnw.cmd clean install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Sample Code&lt;/h2&gt; 
&lt;p&gt;You can find sample code for v2 in the following places:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awsdocs/aws-doc-sdk-examples/tree/master/javav2"&gt;aws-doc-sdk-examples&lt;/a&gt; repo.&lt;/li&gt; 
 &lt;li&gt;Integration tests in this repo. They are located in the &lt;code&gt;it&lt;/code&gt; directory under each service module, eg: &lt;a href="https://github.com/aws/aws-sdk-java-v2/tree/master/services/s3/src/it/java/software/amazon/awssdk/services/s3"&gt;s3-integration-tests&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Maintenance and Support for SDK Major Versions&lt;/h2&gt; 
&lt;p&gt;For information about maintenance and support for SDK major versions and their underlying dependencies, see the following in the AWS SDKs and Tools Reference Guide:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/credref/latest/refdocs/maint-policy.html"&gt;AWS SDKs and Tools Maintenance Policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/credref/latest/refdocs/version-support-matrix.html"&gt;AWS SDKs and Tools Version Support Matrix&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Maintenance and Support for Java Versions&lt;/h2&gt; 
&lt;p&gt;We maintain full support on Long-Term Support(LTS) releases: Java 8, Java 11, Java 17, and Java 21. Note that there may be individual features in newer releases that are not supported, because the SDK must be compatible with Java 8.&lt;/p&gt; 
&lt;h2&gt;Giving Feedback&lt;/h2&gt; 
&lt;p&gt;We need your help in making this SDK great. Please participate in the community and contribute to this effort by submitting issues, participating in discussion forums and submitting pull requests through the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Submit &lt;a href="https://github.com/aws/aws-sdk-java-v2/issues"&gt;issues&lt;/a&gt; - this is the &lt;strong&gt;preferred&lt;/strong&gt; channel to interact with our team&lt;/li&gt; 
 &lt;li&gt;Articulate your feature request or upvote existing ones on our &lt;a href="https://github.com/aws/aws-sdk-java-v2/issues?q=is%3Aopen+is%3Aissue+label%3A%22feature-request%22"&gt;Issues&lt;/a&gt; page&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href="https://allcontributors.org/docs/en/emoji-key"&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sullis"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30938?v=4?s=100" width="100px;" alt="sullis"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sullis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=sullis" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/abrooksv"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8992246?v=4?s=100" width="100px;" alt="Austin Brooks"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Austin Brooks&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=abrooksv" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ktoso"&gt;&lt;img src="https://avatars.githubusercontent.com/u/120979?v=4?s=100" width="100px;" alt="Konrad `ktoso` Malawski"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Konrad `ktoso` Malawski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=ktoso" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/andrewhop"&gt;&lt;img src="https://avatars.githubusercontent.com/u/41167468?v=4?s=100" width="100px;" alt="Andrew Hopkins"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrew Hopkins&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=andrewhop" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/adamthom-amzn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/61852529?v=4?s=100" width="100px;" alt="Adam Thomas"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adam Thomas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=adamthom-amzn" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sworisbreathing"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1486524?v=4?s=100" width="100px;" alt="Steven Swor"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Steven Swor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=sworisbreathing" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Carey-AWS"&gt;&lt;img src="https://avatars.githubusercontent.com/u/61763083?v=4?s=100" width="100px;" alt="Carey Burgess"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Carey Burgess&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=Carey-AWS" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/anuraaga"&gt;&lt;img src="https://avatars.githubusercontent.com/u/198344?v=4?s=100" width="100px;" alt="Anuraag Agrawal"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anuraag Agrawal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=anuraaga" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/jeffalder"&gt;&lt;img src="https://avatars.githubusercontent.com/u/49817386?v=4?s=100" width="100px;" alt="jeffalder"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;jeffalder&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=jeffalder" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/dotbg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/367403?v=4?s=100" width="100px;" alt="Boris"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Boris&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=dotbg" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/notdryft"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2608594?v=4?s=100" width="100px;" alt="Guillaume Corré"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Guillaume Corré&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=notdryft" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/hyandell"&gt;&lt;img src="https://avatars.githubusercontent.com/u/477715?v=4?s=100" width="100px;" alt="Henri Yandell"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Henri Yandell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=hyandell" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/rschmitt"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3725049?v=4?s=100" width="100px;" alt="Ryan Schmitt"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Schmitt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=rschmitt" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/SomayaB"&gt;&lt;img src="https://avatars.githubusercontent.com/u/23043132?v=4?s=100" width="100px;" alt="Somaya"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Somaya&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=SomayaB" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/steven-aerts"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1381633?v=4?s=100" width="100px;" alt="Steven Aerts"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Steven Aerts&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=steven-aerts" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/skwslide"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1427510?v=4?s=100" width="100px;" alt="Steven Wong"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Steven Wong&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=skwslide" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/telendt"&gt;&lt;img src="https://avatars.githubusercontent.com/u/85191?v=4?s=100" width="100px;" alt="Tomasz Elendt"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tomasz Elendt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=telendt" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Sarev0k"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8388574?v=4?s=100" width="100px;" alt="Will Erickson"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Will Erickson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=Sarev0k" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/madgnome"&gt;&lt;img src="https://avatars.githubusercontent.com/u/279528?v=4?s=100" width="100px;" alt="Julien Hoarau"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Julien Hoarau&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=madgnome" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/SEOKHYOENCHOI"&gt;&lt;img src="https://avatars.githubusercontent.com/u/42906668?v=4?s=100" width="100px;" alt="SEOKHYOENCHOI"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;SEOKHYOENCHOI&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=SEOKHYOENCHOI" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/adriannistor"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3051958?v=4?s=100" width="100px;" alt="adriannistor"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;adriannistor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=adriannistor" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/alicesun16"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56938110?v=4?s=100" width="100px;" alt="Xian Sun "&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Xian Sun &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=alicesun16" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ascheja"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3932118?v=4?s=100" width="100px;" alt="Andreas Scheja"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andreas Scheja&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=ascheja" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/antegocanva"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43571020?v=4?s=100" width="100px;" alt="Anton Egorov"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anton Egorov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=antegocanva" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/roexber"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7964627?v=4?s=100" width="100px;" alt="roexber"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;roexber&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=roexber" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/brharrington"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1289028?v=4?s=100" width="100px;" alt="brharrington"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;brharrington&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=brharrington" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/chrisradek"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14189820?v=4?s=100" width="100px;" alt="Christopher Radek"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Christopher Radek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=chrisradek" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/zakkak"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1435395?v=4?s=100" width="100px;" alt="Foivos"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Foivos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=zakkak" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/superwese"&gt;&lt;img src="https://avatars.githubusercontent.com/u/954116?v=4?s=100" width="100px;" alt="Frank Wesemann"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Frank Wesemann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=superwese" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sperka"&gt;&lt;img src="https://avatars.githubusercontent.com/u/157324?v=4?s=100" width="100px;" alt="Gergely Varga"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Gergely Varga&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=sperka" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/GuillermoBlasco"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1889971?v=4?s=100" width="100px;" alt="Guillermo"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Guillermo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=GuillermoBlasco" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/rce"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4427896?v=4?s=100" width="100px;" alt="Henry Heikkinen"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Henry Heikkinen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=rce" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/joschi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43951?v=4?s=100" width="100px;" alt="Jochen Schalanda"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jochen Schalanda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=joschi" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/josephlbarnett"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13838924?v=4?s=100" width="100px;" alt="Joe Barnett"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joe Barnett&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=josephlbarnett" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/seratch"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19658?v=4?s=100" width="100px;" alt="Kazuhiro Sera"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kazuhiro Sera&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=seratch" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ChaithanyaGK"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28896513?v=4?s=100" width="100px;" alt="Krishna Chaithanya Ganta"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Krishna Chaithanya Ganta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=ChaithanyaGK" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/leepa"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9469?v=4?s=100" width="100px;" alt="Lee Packham"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lee Packham&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=leepa" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/MatteCarra"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11074527?v=4?s=100" width="100px;" alt="Matteo Carrara"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matteo Carrara&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=MatteCarra" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mscharp"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1426929?v=4?s=100" width="100px;" alt="Michael Scharp"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Scharp&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=mscharp" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/miguelrjim"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1420241?v=4?s=100" width="100px;" alt="Miguel Jimenez"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Miguel Jimenez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=miguelrjim" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Helmsdown"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1689115?v=4?s=100" width="100px;" alt="Russell Bolles"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Russell Bolles&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=Helmsdown" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/scheerer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4659?v=4?s=100" width="100px;" alt="Russell Scheerer"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Russell Scheerer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=scheerer" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/scotty-g"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7861050?v=4?s=100" width="100px;" alt="Scott"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Scott&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=scotty-g" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ueokande"&gt;&lt;img src="https://avatars.githubusercontent.com/u/534166?v=4?s=100" width="100px;" alt="Shin'ya Ueoka"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shin'ya Ueoka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=ueokande" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sushilamazon"&gt;&lt;img src="https://avatars.githubusercontent.com/u/42008398?v=4?s=100" width="100px;" alt="sushilamazon"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;sushilamazon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=sushilamazon" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/tomliu4uber"&gt;&lt;img src="https://avatars.githubusercontent.com/u/22459891?v=4?s=100" width="100px;" alt="tomliu4uber"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;tomliu4uber&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=tomliu4uber" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/musketyr"&gt;&lt;img src="https://avatars.githubusercontent.com/u/660405?v=4?s=100" width="100px;" alt="Vladimir Orany"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vladimir Orany&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=musketyr" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Xinyu-Hu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/31017838?v=4?s=100" width="100px;" alt="Xinyu Hu"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Xinyu Hu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=Xinyu-Hu" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/frosforever"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1630422?v=4?s=100" width="100px;" alt="Yosef Fertel"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Yosef Fertel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=frosforever" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/denyskonakhevych"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5894907?v=4?s=100" width="100px;" alt="Denys Konakhevych"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Denys Konakhevych&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=denyskonakhevych" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/alexw91"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3596374?v=4?s=100" width="100px;" alt="Alex Weibel"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alex Weibel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=alexw91" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/rccarper"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51676630?v=4?s=100" width="100px;" alt="Ryan Carper"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ryan Carper&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=rccarper" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/JonathanHenson"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3926469?v=4?s=100" width="100px;" alt="Jonathan M. Henson"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jonathan M. Henson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=JonathanHenson" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/debora-ito"&gt;&lt;img src="https://avatars.githubusercontent.com/u/476307?v=4?s=100" width="100px;" alt="Debora N. Ito"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Debora N. Ito&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=debora-ito" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/bretambrose"&gt;&lt;img src="https://avatars.githubusercontent.com/u/341314?v=4?s=100" width="100px;" alt="Bret Ambrose"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bret Ambrose&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=bretambrose" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/cenedhryn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26603446?v=4?s=100" width="100px;" alt="Anna-Karin Salander"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anna-Karin Salander&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=cenedhryn" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/joviegas"&gt;&lt;img src="https://avatars.githubusercontent.com/u/70235430?v=4?s=100" width="100px;" alt="John Viegas"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;John Viegas&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=joviegas" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/dagnir"&gt;&lt;img src="https://avatars.githubusercontent.com/u/261310?v=4?s=100" width="100px;" alt="Dongie Agnir"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dongie Agnir&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=dagnir" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/millems"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24903526?v=4?s=100" width="100px;" alt="Matthew Miller"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Matthew Miller&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=millems" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/bmaizels"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36682168?v=4?s=100" width="100px;" alt="Benjamin Maizels"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Benjamin Maizels&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=bmaizels" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Quanzzzz"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51490885?v=4?s=100" width="100px;" alt="Quan Zhou"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Quan Zhou&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=Quanzzzz" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/zoewangg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33073555?v=4?s=100" width="100px;" alt="Zoe Wang"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Zoe Wang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=zoewangg" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/varunnvs92"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17261531?v=4?s=100" width="100px;" alt="Varun Nandi"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Varun Nandi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=varunnvs92" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/shorea"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11096681?v=4?s=100" width="100px;" alt="Andrew Shore"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrew Shore&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=shorea" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/kiiadi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4661536?v=4?s=100" width="100px;" alt="Kyle Thomson"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kyle Thomson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=kiiadi" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/spfink"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20525381?v=4?s=100" width="100px;" alt="Sam Fink"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sam Fink&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=spfink" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/bondj"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4749778?v=4?s=100" width="100px;" alt="Jonathan Bond"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jonathan Bond&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=bondj" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ajs139"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9387176?v=4?s=100" width="100px;" alt="ajs139"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ajs139&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=ajs139" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://imdewey.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/44629464?v=4?s=100" width="100px;" alt="Dewey Nguyen"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dewey Nguyen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=duy3101" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/dleen"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1297964?v=4?s=100" width="100px;" alt="David Leen"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Leen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=dleen" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://16lim21.github.io"&gt;&lt;img src="https://avatars.githubusercontent.com/u/53011962?v=4?s=100" width="100px;" alt="Michael Li"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Li&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=16lim21" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Bennett-Lynch"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11811448?v=4?s=100" width="100px;" alt="Bennett Lynch"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bennett Lynch&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=Bennett-Lynch" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://bandism.net/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/22633385?v=4?s=100" width="100px;" alt="Ikko Ashimine"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ikko Ashimine&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=eltociear" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://jamieliu.me"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35614552?v=4?s=100" width="100px;" alt="Jamie Liu"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jamie Liu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=jamieliu386" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/guillepb10"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28654665?v=4?s=100" width="100px;" alt="guillepb10"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;guillepb10&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=guillepb10" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.linkedin.com/in/lorenznickel/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29959150?v=4?s=100" width="100px;" alt="Lorenz Nickel"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lorenz Nickel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=LorenzNickel" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/erin889"&gt;&lt;img src="https://avatars.githubusercontent.com/u/38885911?v=4?s=100" width="100px;" alt="Erin Yang"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Erin Yang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=erin889" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.theguardian.com/profile/roberto-tyley"&gt;&lt;img src="https://avatars.githubusercontent.com/u/52038?v=4?s=100" width="100px;" alt="Roberto Tyley"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Roberto Tyley&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=rtyley" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://alvinsee.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1531158?v=4?s=100" width="100px;" alt="Alvin See"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Alvin See&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=alvinsee" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ron1"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1318509?v=4?s=100" width="100px;" alt="ron1"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;ron1&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=ron1" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/srsaikumarreddy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24988810?v=4?s=100" width="100px;" alt="Sai Kumar Reddy Chandupatla"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sai Kumar Reddy Chandupatla&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=srsaikumarreddy" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/davidh44"&gt;&lt;img src="https://avatars.githubusercontent.com/u/70000000?v=4?s=100" width="100px;" alt="David Ho"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Ho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=davidh44" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.berrycloud.co.uk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1552612?v=4?s=100" width="100px;" alt="Thomas Turrell-Croft"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thomas Turrell-Croft&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=thomasturrell" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/stevenshan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3723174?v=4?s=100" width="100px;" alt="Steven Shan"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Steven Shan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=stevenshan" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/barryoneill"&gt;&lt;img src="https://avatars.githubusercontent.com/u/885049?v=4?s=100" width="100px;" alt="Barry O'Neill"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Barry O'Neill&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=barryoneill" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/akiesler"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4186292?v=4?s=100" width="100px;" alt="Andy Kiesler"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andy Kiesler&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=akiesler" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.youtube.com/CodigoMorsa"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21063181?v=4?s=100" width="100px;" alt="Martin"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Martin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=martinKindall" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/paulolieuthier"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1238157?v=4?s=100" width="100px;" alt="Paulo Lieuthier"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Paulo Lieuthier&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=paulolieuthier" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.inulogic.fr"&gt;&lt;img src="https://avatars.githubusercontent.com/u/88554524?v=4?s=100" width="100px;" alt="Sébastien Crocquesel"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sébastien Crocquesel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=scrocquesel" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/dave-fn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21349334?v=4?s=100" width="100px;" alt="David Negrete"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Negrete&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=dave-fn" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/StephenFlavin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14975957?v=4?s=100" width="100px;" alt="Stephen Flavin"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Stephen Flavin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=StephenFlavin" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://applin.ca"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16511950?v=4?s=100" width="100px;" alt="Olivier L Applin"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Olivier L Applin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=L-Applin" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/breader124"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36669019?v=4?s=100" width="100px;" alt="Adrian Chlebosz"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adrian Chlebosz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=breader124" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.buymeacoffee.com/chadwilson"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29788154?v=4?s=100" width="100px;" alt="Chad Wilson"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Chad Wilson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=chadlwilson" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ManishDait"&gt;&lt;img src="https://avatars.githubusercontent.com/u/90558243?v=4?s=100" width="100px;" alt="Manish Dait"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Manish Dait&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=ManishDait" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://www.dekies.de"&gt;&lt;img src="https://avatars.githubusercontent.com/u/858827?v=4?s=100" width="100px;" alt="Dennis Kieselhorst"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dennis Kieselhorst&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=deki" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/psnilesh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12656997?v=4?s=100" width="100px;" alt="Nilesh PS"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nilesh PS&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=psnilesh" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/swar8080"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17691679?v=4?s=100" width="100px;" alt="Steven Swartz"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Steven Swartz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=swar8080" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/michaeldimchuk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/22773297?v=4?s=100" width="100px;" alt="Michael Dimchuk"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Dimchuk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=michaeldimchuk" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/faucct"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5202503?v=4?s=100" width="100px;" alt="Nikita Sokolov"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nikita Sokolov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=faucct" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sugmanue"&gt;&lt;img src="https://avatars.githubusercontent.com/u/108146565?v=4?s=100" width="100px;" alt="Manuel Sugawara"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Manuel Sugawara&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=sugmanue" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/anirudh9391"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15699250?v=4?s=100" width="100px;" alt="Anirudh"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Anirudh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=anirudh9391" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/haydenbaker"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26096419?v=4?s=100" width="100px;" alt="Hayden Baker"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Hayden Baker&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=haydenbaker" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/gosar"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5666661?v=4?s=100" width="100px;" alt="Jaykumar Gosar"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jaykumar Gosar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=gosar" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/graebm"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24399397?v=4?s=100" width="100px;" alt="Michael Graeb"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Graeb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=graebm" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mgrundie-r7"&gt;&lt;img src="https://avatars.githubusercontent.com/u/103498312?v=4?s=100" width="100px;" alt="Michael Grundie"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Grundie&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=mgrundie-r7" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/eckardnet"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13320705?v=4?s=100" width="100px;" alt="Eckard Mühlich"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Eckard Mühlich&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=eckardnet" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://wicket.apache.org"&gt;&lt;img src="https://avatars.githubusercontent.com/u/980773?v=4?s=100" width="100px;" alt="Tobias Soloschenko"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tobias Soloschenko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=klopfdreh" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Madrigal"&gt;&lt;img src="https://avatars.githubusercontent.com/u/599908?v=4?s=100" width="100px;" alt="Luis Madrigal"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Luis Madrigal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=Madrigal" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/chaykin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2480265?v=4?s=100" width="100px;" alt="Kirill Chaykin"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kirill Chaykin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=chaykin" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/prateek-vats"&gt;&lt;img src="https://avatars.githubusercontent.com/u/177409977?v=4?s=100" width="100px;" alt="prateek-vats"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;prateek-vats&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=prateek-vats" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Fred1155"&gt;&lt;img src="https://avatars.githubusercontent.com/u/49867651?v=4?s=100" width="100px;" alt="Bole1155"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bole1155&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=Fred1155" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://xtansia.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1222964?v=4?s=100" width="100px;" alt="Thomas Farr"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Thomas Farr&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=Xtansia" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/S-Saranya1"&gt;&lt;img src="https://avatars.githubusercontent.com/u/196712423?v=4?s=100" width="100px;" alt="Saranya Somepalli"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Saranya Somepalli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=S-Saranya1" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/RanVaknin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50976344?v=4?s=100" width="100px;" alt="Ran Vaknin"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ran Vaknin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=RanVaknin" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/greg-at-moderne"&gt;&lt;img src="https://avatars.githubusercontent.com/u/192309513?v=4?s=100" width="100px;" alt="Greg Oledzki"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Greg Oledzki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=greg-at-moderne" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/kstich"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26905335?v=4?s=100" width="100px;" alt="Kevin Stich"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kevin Stich&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=kstich" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/jencymaryjoseph"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35571282?v=4?s=100" width="100px;" alt="Jency Joseph"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jency Joseph&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=jencymaryjoseph" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/reifiedbeans"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9686215?v=4?s=100" width="100px;" alt="Drew Davis"&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Drew Davis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/aws/aws-sdk-java-v2/commits?author=reifiedbeans" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;This project follows the &lt;a href="https://github.com/all-contributors/all-contributors"&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zaproxy/zaproxy</title>
      <link>https://github.com/zaproxy/zaproxy</link>
      <description>&lt;p&gt;The ZAP by Checkmarx Core project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href="https://www.zaproxy.org"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/zaproxy/zaproxy/images/zap-by-checkmarx.png" alt=""&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.apache.org/licenses/LICENSE-2.0.html"&gt;&lt;img src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?sanitize=true" alt="License"&gt;&lt;/a&gt; &lt;a href="https://www.zaproxy.org/download/"&gt;&lt;img src="https://img.shields.io/github/release/zaproxy/zaproxy.svg?sanitize=true" alt="GitHub release"&gt;&lt;/a&gt; &lt;a href="https://github.com/zaproxy/zaproxy/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/zaproxy/zaproxy/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Java CI"&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/24"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/24/badge" alt="CII Best Practices"&gt;&lt;/a&gt; &lt;a href="https://zapbot.github.io/zap-mgmt-scripts/downloads.html"&gt;&lt;img src="https://img.shields.io/github/downloads/zaproxy/zaproxy/latest/total.svg?maxAge=2592000" alt="Github Releases"&gt;&lt;/a&gt; &lt;a href="https://javadoc.io/doc/org.zaproxy/zap"&gt;&lt;img src="https://javadoc.io/badge2/org.zaproxy/zap/javadoc.svg?sanitize=true" alt="javadoc"&gt;&lt;/a&gt; &lt;a href="https://github.com/zaproxy/zaproxy/actions/workflows/codeql.yml"&gt;&lt;img src="https://github.com/zaproxy/zaproxy/actions/workflows/codeql.yml/badge.svg?sanitize=true" alt="CodeQL"&gt;&lt;/a&gt; &lt;a href="https://sonarcloud.io/dashboard?id=zaproxy_zaproxy"&gt;&lt;img src="https://sonarcloud.io/api/project_badges/measure?project=zaproxy_zaproxy&amp;amp;metric=alert_status" alt="Quality Gate Status"&gt;&lt;/a&gt; &lt;a href="https://www.codetriage.com/zaproxy/zaproxy"&gt;&lt;img src="https://www.codetriage.com/zaproxy/zaproxy/badges/users.svg?sanitize=true" alt="Open Source Helpers"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/zaproxy"&gt;&lt;img src="https://img.shields.io/twitter/follow/zaproxy.svg?style=social&amp;amp;label=Follow&amp;amp;maxAge=2592000" alt="Twitter Follow"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/zaproxy/zaproxy/actions/workflows/run-integration-tests.yml/badge.svg?sanitize=true" alt="Integration Tests"&gt; &lt;img src="https://github.com/zaproxy/zaproxy/actions/workflows/release-live-docker.yml/badge.svg?sanitize=true" alt="Docker Live Release"&gt;&lt;/p&gt; 
&lt;p&gt;The Zed Attack Proxy (ZAP) by Checkmarx is the world’s most widely used web app scanner. Free and open source. A community based GitHub Top 1000 project that anyone can contribute to.&lt;/p&gt; 
&lt;p&gt;It can help you automatically find security vulnerabilities in your web applications while you are developing and testing your applications. It's also a great tool for experienced pentesters to use for manual security testing.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.zaproxy.org/download/"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/zaproxy/zaproxy/images/ZAP-Download.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For more details about ZAP see the website: &lt;a href="https://www.zaproxy.org/"&gt;zaproxy.org&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.zaproxy.org/"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/zaproxy/zaproxy/images/zap-website.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>asLody/VirtualApp</title>
      <link>https://github.com/asLody/VirtualApp</link>
      <description>&lt;p&gt;Virtual Engine for Android(Support 14.0 in business version)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/asLody/VirtualApp/master/README_eng.md" title="English"&gt;English Doc&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;p align="center"&gt;VA产品说明&amp;amp;开发指导&lt;/p&gt;&lt;/h1&gt; 
&lt;h2&gt;VA是什么?&lt;/h2&gt; 
&lt;p&gt;VirtualApp(简称：VA)是一款运行于Android系统的沙盒产品，可以理解为轻量级的“Android虚拟机”。其产品形态为高可扩展，可定制的集成SDK，您可以基于VA或者使用VA定制开发各种看似不可能完成的项目。VA目前被广泛应用于APP多开、小游戏合集、手游加速器、手游租号、手游手柄免激活、VR程序移植、区块链、移动办公安全、军队政府数据隔离、手机模拟信息、脚本自动化、插件化开发、无感知热更新、云控等技术领域。&lt;br&gt; &lt;strong&gt;Github上代码已在2017年12月份停止更新，商业版代码在持续更新中，如需授权获得最新代码，请联系微信：10890&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;VA中的术语&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;术语&lt;/th&gt; 
   &lt;th&gt;解释&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;宿主&lt;/td&gt; 
   &lt;td&gt;集成VirtualApp类库（lib）的App叫做宿主&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;宿主插件&lt;/td&gt; 
   &lt;td&gt;用于在同一个手机,运行另一种ABI的宿主包,又称做插件包,扩展包,宿主插件包,宿主扩展包&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;虚拟App/VApp&lt;/td&gt; 
   &lt;td&gt;VA的虚拟环境多开的app&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;外部App&lt;/td&gt; 
   &lt;td&gt;手机真实环境安装的app&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br&gt; 
&lt;h2&gt;VA技术架构&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/xxxyanchenxxx/temp@1.0/doc/va_architecture.jpg" alt=""&gt;&lt;br&gt; VA技术一共涉及到了Android的APP层，Framework层以及Native层。&lt;br&gt; 一个APP想要在Android系统上运行，必须要安装后系统才会接纳。安装到VA内部的APP实际上并没有安装到系统中，所以正常情况下是无法运行的。那如何才能让它运行呢？&lt;br&gt; 答：那就只有“欺骗”系统，让系统认为已经安装。而这个“欺骗”过程就是VA Framework的核心工作内容，也是整个VA的核心技术原理。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;下面介绍下在这3个层次分别做了什么事情：&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;层次&lt;/th&gt; 
   &lt;th&gt;主要工作&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;VA Space&lt;/td&gt; 
   &lt;td&gt;由VA提供了一个内部的空间，用于安装要在其内部运行的APP，这个空间是系统隔离的。&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;VA Framework&lt;/td&gt; 
   &lt;td&gt;这一层主要给Android Framework和VAPP做代理，这也是VA的核心。VA提供了一套自己的VA Framework，处于Android Framework与VA APP之间。&lt;br&gt;1. 对于VAPP，其访问的所有系统Service均已被 &lt;code&gt;VA Framework&lt;/code&gt; 代理，它会修改VAPP的请求参数，将其中与VAPP安装信息相关的全部参数修改为宿主的参数之后发送给Android Framework（有部分请求会发送给自己的VA Server直接处理而不再发送给Android系统）。这样Android Framework收到VAPP请求后检查参数就会认为没有问题。&lt;br&gt;2. 待Android系统对该请求处理完成返回结果时，VA Framework同样也会拦截住该返回结果，此时再将原来修改过的参数全部还原为VAPP请求时发送的。&lt;br&gt;这样VAPP与Android系统的交互也就能跑通了。&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;VA Native&lt;/td&gt; 
   &lt;td&gt;在这一层主要为了完成2个工作，IO重定向和VA APP与Android系统交互的请求修改。&lt;br&gt;1. IO重定向是因为可能有部分APP会通过写死的绝对路径访问，但是如果APP没有安装到系统，这个路径是不存在的，通过IO重定向，则将其转向VA内部安装的路径。&lt;br&gt;2. 另外有部分jni函数在VA Framework中无法hook的，所以需要在native层来做hook。&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br&gt; 
&lt;p&gt;总结： 通过上面技术架构可以看到，VA内部的APP实际是跑在VA自己的VA Framework之上。 VA已将其内部APP的全部系统请求进行拦截，通过这项技术也能对APP进行全面控制，而不仅仅只是多开。并且为了方便开发者，VA还提供了SDK以及Hook SDK。&lt;/p&gt; 
&lt;h2&gt;VA进程架构&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/xxxyanchenxxx/temp@1.0/doc/va_process.jpg" alt=""&gt;&lt;br&gt; VA运行时有5类进程：CHILD进程，VA Host Main进程，VA Host Plugin进程，VAPP Client进程，VAServer进程。 VA为了同时支持32位APP与64位APP，需要安装2个包：一个主包，一个插件包(在本文档中主包是32位，插件包是64位)。 2个包也是必须的，因为一个包只能运行在一种模式下，要么32位，要么64位。所以对于32位的APP，VA使用32位的主包去运行，对于64位的APP，VA则使用64位的插件包去运行。 在主包中含了VA的所有代码，插件包中只有一段加载主包代码执行的代码，无其他代码。所以插件包几乎不用更新，只需要更新主包即可。 另外主包是选择用32位还是64位，可以在配置文件中修改(比如对于要上GooglePlay的用户，会修改为主包64位，插件包32位)。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;各类进程的作用与解释如下：&lt;/strong&gt;&lt;br&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;进程类型&lt;/th&gt; 
   &lt;th&gt;作用&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CHILD&lt;/td&gt; 
   &lt;td&gt;由VA Host集成的其他进程，比如：保活进程，推送进程等。&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;VA Host Main&lt;/td&gt; 
   &lt;td&gt;VA主包的UI主界面所在的进程。默认主包是32位，插件包是64位，可在配置文件中修改切换。&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;VA Host Plugin&lt;/td&gt; 
   &lt;td&gt;支持64位APP的插件包所在进程。默认主包是32位，插件包是64位，可在配置文件中修改切换。&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;VAPP Client&lt;/td&gt; 
   &lt;td&gt;安装到VA中的APP启动后产生的进程，在运行时会将io.busniess.va:pxxx进程名修改VAPP的真实进程名。&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;VAServer&lt;/td&gt; 
   &lt;td&gt;VA Server的所在的进程，用于处理VA中不交予系统处理的请求。比如APP的安装处理。&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br&gt; 
&lt;h2&gt;VA几乎能满足您的一切需求&lt;/h2&gt; 
&lt;p&gt;通过上面的技术架构，我们可以了解到VA可以对APP进行全面的控制，并且提供了Hook SDK，几乎能满足您在各个领域的一切需求：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;可以满足您的&lt;strong&gt;双开/多开&lt;/strong&gt;需求&lt;br&gt; VA可以让您在同一部手机上安装多个微信/QQ/WhatsApp/Facebook等APP，实现一部手机，多个账号同时登录。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;可以满足您的&lt;strong&gt;移动安全&lt;/strong&gt;需求&lt;br&gt; VA提供了一整套内部与外部的隔离机制，包括但不限于(文件隔离/组件隔离/进程通讯隔离)，简单的说VA内部就是一个“完全独立的空间”。 通过VA可将工作事务与个人事务安全的隔离，互不干扰。稍作定制即可实现应用行为审计、数据加密、数据采集、数据防泄漏、防攻击泄密等移动安全相关的需求。&lt;br&gt; &lt;strong&gt;2.1 应用行为审计&lt;/strong&gt;&lt;br&gt; 通过VA提供的HOOK能力可以实现实时监测用户使用行为，将违规信息上传到服务器；并能轻易实现诸如时间围栏(在某个时间段内能否使用应用的某个功能)、地理围栏(在某个区域内能否使用应用的某个功能)、敏感关键字过滤拦截等功能需求。&lt;br&gt; &lt;strong&gt;2.2 数据加密&lt;/strong&gt;&lt;br&gt; 通过VA提供的HOOK能力可以实现对应用的全部数据/文件加密，保证数据/文件落地安全。&lt;br&gt; &lt;strong&gt;2.3 数据采集&lt;/strong&gt;&lt;br&gt; 通过VA提供的HOOK能力可以实现应用数据的实时无感上传需求，如聊天记录、转账记录等，防止事后删除无法追溯。&lt;br&gt; &lt;strong&gt;2.4 数据防泄漏&lt;/strong&gt;&lt;br&gt; 通过VA提供的HOOK能力可以实现应用防复制/粘贴、防截屏/录屏、防分享/转发、水印溯源等需求。&lt;br&gt; &lt;strong&gt;2.5 防攻击泄密&lt;/strong&gt;&lt;br&gt; 通过VA提供的应用管控能力可以将APP获取短信/通讯录/通话记录/后台录音/后台拍照/浏览历史/位置信息等隐私相关的行为完全控制在沙盒中，防止木马/恶意APP获取到用户真实的隐私数据，造成泄密等严重后果。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;可以满足您的&lt;strong&gt;免ROOT HOOK&lt;/strong&gt;需求&lt;br&gt; VA提供了Java与Native的Hook能力，通过VA，您可以轻易实现诸如虚拟定位、改机、APP监控管理、移动安全等各种场景需要的功能。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;可以满足您的&lt;strong&gt;APP静默安装&lt;/strong&gt;需求&lt;br&gt; VA提供了APP静默安装，静默升级，静默卸载的能力。如应用商店或游戏中心在集成VA后可以避免需要用户手动点击确认安装的操作，做到下载后立即安装到VA内，给用户带来“小程序”搬的体验，彻底避免了应用不易被用户安装上的问题。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;可以满足您的&lt;strong&gt;APP管控&lt;/strong&gt;需求&lt;br&gt; 您可以通过VA清楚的掌握APP访问了哪些系统API，哪些敏感数据，哪些设备信息等。比如APP是否访问了联系人，相册，通话记录，是否访问了用户的地理位置等信息。 当然，您还可以通过VA控制或者构造自定义的信息给这些APP。不仅于此，您还可以获取到APP的私有数据，比如聊天数据库等。总之通过VA提供的应用管控能力，您可以轻易控制APP的一切行为，甚至修改APP与服务器交互内容等。 &lt;br&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;可以满足您的&lt;strong&gt;海外市场&lt;/strong&gt;需求&lt;br&gt; VA实现了对Google服务的支持，以支持海外的App运行，比如Twitter、Messenger、WhatsApp、Instagram、FaceBook、Youtube等。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;可以满足您的&lt;strong&gt;VR程序移植&lt;/strong&gt;需求&lt;br&gt; 可以通过VA的Hook能力拦截VR设备的API，让您无需改动代码即可将VR程序移植到新的设备。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;可以满足您&lt;strong&gt;几乎一切能想到&lt;/strong&gt;的需求&lt;br&gt; VA对于内部的App具有完全的监管和控制能力，几乎能满足您的一切需求！&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;同时VA也是该技术领域&lt;strong&gt;唯一一款&lt;/strong&gt;对外商业授权的产品&lt;br&gt; 截止目前已有&lt;strong&gt;上百家&lt;/strong&gt;授权客户在付费使用VirtualApp商业版代码，集成VirtualApp代码的APP&lt;strong&gt;日启动&lt;/strong&gt;次数&lt;strong&gt;超过2亿次&lt;/strong&gt;，众多安卓工程师向我们提供不同场景下的用户反馈，通过我们技术团队不断优化迭代，不断提升产品性能与兼容性！&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;VA的特有能力&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;克隆能力&lt;br&gt; 可以克隆外部系统中已经安装的App，并在内部运行，互不干扰。典型应用场景为App双开。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;免安装能力&lt;br&gt; 除了克隆已安装之外，VA可以直接在内部安装(外部无感知)apk，并在内部直接运行。典型应用场景为插件化，独立应用市场等。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;多开能力&lt;br&gt; VA不仅可以“双开”，独特的多用户模式支持用户在内部无限多开同一个App。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;内外隔离能力&lt;br&gt; VA是一个标准的沙盒，或者说“虚拟机”，提供了一整套内部与外部的隔离机制，包括但不限于(文件隔离/组件隔离/进程通讯隔离)，简单的说VA内部就是一个“完全独立的空间”。在此基础之上，稍作定制即可实现一部手机上的“虚拟手机”。当然您也可以发挥想象，定制成应用于数据加密，数据隔离，隐私保护，企业管理的应用系统。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;对于内部App的完全控制能力&lt;br&gt; VA对于内部的App具有完全的监控和控制能力，这点在未Root的外部环境中是绝对无法实现的。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;详细(下拉打开)&lt;/summary&gt; 1. 服务请求控制，首先VA直接提供了一些服务请求的拦截，您可以在集成VA的时候方便的定制这些服务请求，包括但远不限于(App请求安装apk/App请求打开某些文件/App请求定位数据/App请求手机信息等等)
 &lt;br&gt;
 &lt;br&gt; 2. 系统API控制，VA虚拟并实现了整个安卓系统框架，这也是VA可以免安装在内部运行apk的原理，您可以对虚拟框架的实现进行修改以动态监测分析App的行为等；除此之外，您还可模拟一些系统行为以实现一些在外部难以实现的需求(例如游戏手柄)。
 &lt;br&gt;
 &lt;br&gt; 3. 内存读写，VA可以无需Root读写内部App进程的内存。
 &lt;br&gt;
 &lt;br&gt; 4. 免Root调试，VA可以免Root调试(ptrace)内部的App进程，基于此您还可以实现免Root的进程注入。
 &lt;br&gt;
 &lt;br&gt; 5. 加载任意“插件”和“行为”，VA内部的App进程由VA的框架Client端代码派生而来，所以您可以在进程的入口代码插入任何“加载”以及“控制”逻辑。这些实现都非常简单。
 &lt;br&gt;
 &lt;br&gt; 6. 方法Hook，VA内置了一套运行于Android各个版本(直到AndroidQ)的Xposed框架以及native hook框架，基于此您可以方便的Hook任意内部App的任意Java/Native方法。可以轻松实现一个免Root的Xposed环境(有实例代码)。
 &lt;br&gt;
 &lt;br&gt; 7. 文件控制，VA内置了完整的文件重定向，可以方便的控制内部App的文件的读写，基于此可以实现对文件的保护加密等功能。
 &lt;br&gt;
 &lt;br&gt; 8. 注：以上控制能力均有实现代码或者实例以作参考。 
&lt;/details&gt; 
&lt;h2&gt;VA的其他特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;高性能&lt;br&gt; 进程级“虚拟机”，VA独特的实现方式让其性能几乎于原生App一致，更不需要普通虚拟机漫长的启动。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;全版本支持&lt;br&gt; 支持5.0-16.0，支持32位/64位app，支持ARM以及X86处理器。并且支持未来将更新的Android版本。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;易扩展与集成&lt;br&gt; VA 的集成方式与普通Android库类似，即使您的App已经完成上线，您也方便的可以集成VA，享受VA带来的能力。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持Google服务&lt;br&gt; 提供Google服务的支持，以支持海外的App&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;VA与其他技术方案对比&lt;/h2&gt; 
&lt;p&gt;在做企业级移动安全时，往往需要对APP进行管控，以下是列出的可能技术方案对比：&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;技术方案&lt;/th&gt; 
   &lt;th&gt;原理简介&lt;/th&gt; 
   &lt;th&gt;点评&lt;/th&gt; 
   &lt;th&gt;运行性能&lt;/th&gt; 
   &lt;th&gt;兼容稳定性&lt;/th&gt; 
   &lt;th&gt;项目维护成本&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;二次打包&lt;/td&gt; 
   &lt;td&gt;通过反编译目标APP，加入自己的控制代码，重新打包&lt;/td&gt; 
   &lt;td&gt;1.现在的APP几乎都有加固或防篡改保护，重打包已是一件非常困难的事&lt;br&gt; 2.手机系统也会检测APP是否被重打包，如果重打包，会直接提示用户存在安全风险，甚至不让安装&lt;br&gt;3.针对每一个APP，甚至每一个版本都要深入去逆向分析，耗时耗力，难于维护&lt;/td&gt; 
   &lt;td&gt;优秀&lt;/td&gt; 
   &lt;td&gt;差&lt;/td&gt; 
   &lt;td&gt;高&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;定制ROM&lt;/td&gt; 
   &lt;td&gt;通过定制系统源码，编译刷到指定手机&lt;/td&gt; 
   &lt;td&gt;只能针对指定的内部手机，局限性太大，无法扩展&lt;/td&gt; 
   &lt;td&gt;优秀&lt;/td&gt; 
   &lt;td&gt;优秀&lt;/td&gt; 
   &lt;td&gt;高&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ROOT手机&lt;/td&gt; 
   &lt;td&gt;通过ROOT手机，刷入xposed等类似框架&lt;/td&gt; 
   &lt;td&gt;1.ROOT手机现在本身已是一件不太可能的事&lt;br&gt; 2.现实中也很难让用户能去ROOT自己的手机&lt;/td&gt; 
   &lt;td&gt;优秀&lt;/td&gt; 
   &lt;td&gt;差&lt;/td&gt; 
   &lt;td&gt;高&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;VA&lt;/td&gt; 
   &lt;td&gt;轻量级虚拟机，速度快，对设备要求低&lt;/td&gt; 
   &lt;td&gt;无上述风险点&lt;/td&gt; 
   &lt;td&gt;优秀&lt;/td&gt; 
   &lt;td&gt;优秀，有上百家企业在同时测试反馈&lt;/td&gt; 
   &lt;td&gt;低，VA提供了API并有专业的技术团队保障项目稳定运行&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br&gt; 通过以上对比可以看出，VA是一款优秀的产品，并且能降低您的开发维护成本！ 
&lt;h2&gt;集成VA步骤&lt;/h2&gt; 
&lt;p&gt;第1步：在您的Application中调用VA接口&lt;code&gt;VirtualCore.get().startup()&lt;/code&gt;来启动VA引擎&lt;br&gt; 第2步:调用VA接口&lt;code&gt;VirtualCore.get().installPackageAsUser(userId, packageName)&lt;/code&gt;将目标APP安装到VA中&lt;br&gt; 第3步:调用VA接口&lt;code&gt;VActivityManager.get().launchApp(userId, packageName)&lt;/code&gt;启动APP&lt;br&gt; &lt;strong&gt;仅通过以上3个API就完成了基础使用，VA已屏蔽了复杂的技术细节，并提供了接口API，让您的开发变得很简单！&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;VA的兼容稳定性&lt;/h2&gt; 
&lt;p&gt;VA已被&lt;strong&gt;上百家&lt;/strong&gt;企业进行了广泛测试，包含&lt;strong&gt;数十家上市公司高标准&lt;/strong&gt;的测试及反馈，几乎涵盖了海内外的各种机型设备和场景！ 为您的稳定运行提供了充分的保障！&lt;/p&gt; 
&lt;p&gt;截止目前，支持的系统版本:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;系统版本&lt;/th&gt; 
   &lt;th&gt;是否支持&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5.0&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5.1&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6.0&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7.0&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8.0&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9.1&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10.0&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11.0&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12.0&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13.0&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14.0&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15.0&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16.0&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br&gt; 
&lt;p&gt;支持的APP类型:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;APP类型&lt;/th&gt; 
   &lt;th&gt;是否支持&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;32位APP&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;64位APP&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br&gt; 
&lt;p&gt;支持的HOOK类型:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Hook类型&lt;/th&gt; 
   &lt;th&gt;是否支持&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Java Hook&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Native Hook&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;支持的CPU类型:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Hook类型&lt;/th&gt; 
   &lt;th&gt;是否支持&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ARM 32&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ARM 64&lt;/td&gt; 
   &lt;td&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br&gt; 
&lt;h2&gt;集成VA遇到问题如何反馈？&lt;/h2&gt; 
&lt;p&gt;购买授权后我们会建立微信群，有任何问题可以随时反馈给我们，并根据优先级在第一时间处理！&lt;/p&gt; 
&lt;h2&gt;VA开发文档&lt;/h2&gt; 
&lt;p&gt;VA开发文档请参考：&lt;a href="https://raw.githubusercontent.com/asLody/VirtualApp/master/doc/VADev.md"&gt;开发文档&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;授权说明&lt;/h2&gt; 
&lt;p&gt;VirtualApp虚拟机技术归属于：山东盒一网络科技有限公司（原：济宁市罗盒网络科技有限公司），于2015年至2025年申请多项VirtualApp知识产权，&lt;code&gt;受中华人民共和国知识产权法保护&lt;/code&gt;。当您需要使用Github上的代码时，&lt;strong&gt;请购买商业授权&lt;/strong&gt;，获取商业授权后将可以收到最新VirtualApp商业版全部源代码。上百家授权客户在付费使用VirtualApp商业版代码，集成VirtualApp代码的APP日启动次数超过2亿次，众多安卓工程师向我们提供不同场景下的用户反馈，通过我们技术团队不断优化迭代，VirtualApp商业版代码性能更好、兼容性更高。&lt;code&gt;当您的公司获取授权后，将成为其中一员，享受这些不断迭代完善后的技术成果。并可以和我们的授权客户进行运营、技术及商业上的互动合作。&lt;/code&gt;&lt;/p&gt; 
&lt;br&gt; 负责人：张总 
&lt;br&gt; 微信：10890 
&lt;br&gt; 
&lt;br&gt; 
&lt;h2&gt;严重声明&lt;/h2&gt; 
&lt;p&gt;您如果未经授权将VirtualApp用于&lt;strong&gt;内部使用、商业牟利或上传应用市场&lt;/strong&gt;，我们将取证后报警（侵犯著作权罪）或起诉，这将对您所属公司造成刑事责任及法律诉讼，影响到您公司的商誉和投资。&lt;code&gt;购买商业授权为您节省大量开发、测试和完善兼容性的时间，让您更多时间用于创新及盈利。&lt;/code&gt;罗盒科技已在2020年报警和起诉了一些个人及公司。&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;为响应国家对于知识产权的保护号召！凡举报自己所在公司或其他公司未经授权，违法使用VirtualApp代码开发产品的，一经核实给予现金奖励。我们会对举报人身份保密！举报联系微信：10890&lt;/strong&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;商业版主要更新&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;兼容最新Android 16.0&lt;/li&gt; 
 &lt;li&gt;支持Binder拦截，不再使用动态代理&lt;/li&gt; 
 &lt;li&gt;支持Seccomp-Bpf拦截&lt;/li&gt; 
 &lt;li&gt;不易被杀毒软件误报&lt;/li&gt; 
 &lt;li&gt;框架优化，性能大幅提升&lt;/li&gt; 
 &lt;li&gt;手机系统及APP兼容性大幅提升&lt;/li&gt; 
 &lt;li&gt;完美运行Google服务&lt;/li&gt; 
 &lt;li&gt;支持运行纯64位App&lt;/li&gt; 
 &lt;li&gt;内置&lt;code&gt;XPosed Hook&lt;/code&gt;框架&lt;/li&gt; 
 &lt;li&gt;增加定位模拟代码&lt;/li&gt; 
 &lt;li&gt;增加改机代码&lt;/li&gt; 
 &lt;li&gt;其他600+项问题的修复和改进，详情请见下表&lt;/li&gt; 
&lt;/ol&gt; 
&lt;br&gt; 
&lt;h2&gt;2017年-2025年商业版代码更新详细&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;2025年7月3号 至 2025年 7月21 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;606、与新功能相关的路径处理&lt;br&gt; 605、一些bug处理&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2025年5月1号 至 2025年 7月2号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;604、新功能开发:基于拦截Binder的方式来实现对系统AIDL调用的拦截。通过这种方式可不再使用动态代理，对于稳定性将会有比较大提升&lt;br&gt; 603、16.0最新版本继续适配&lt;br&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;2017年 12月 至 2025年 4 月 30 日 商业版代码更新内容(下拉打开)&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;&lt;strong&gt;2025年4月16号 至 2025年 4月30号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;602、对Android 16.0 beta 4 适配&lt;br&gt; 601、完善seccomp-bpf重定向相关的功能&lt;br&gt; 600、增加配置可以让APP只使用seccomp-bpf,不使用inline hook&lt;br&gt; 599、将target sdk升级到34&lt;br&gt; 598、修复va core进程由于client为空导致的crash&lt;br&gt; 597、启动进程的时候增加重试，避免在某些机型上由于进程死亡太频繁导致无法启动进程&lt;br&gt; 596、对于某类型加固后是否需要安装provider的部分改为动态判断&lt;br&gt; 595、修复demo在某些设备上由于title为null导致的crash&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2025年3月27号 至 2025年 4月15号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;594、修复GMS无法调起登录的问题&lt;br&gt; 593、增加对IInputMethodManagerGlobalInvoker的hook&lt;br&gt; 592、修复工作空间中无法打开VAPP的问题&lt;br&gt; 591、适配微信8.0.57&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2025年3月20号 至 2025年 3月26号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;590、增加对AppSearchManager的适配&lt;br&gt; 589、增加对DomainVerificationManager的适配&lt;br&gt; 588、增加对SystemUpdateManager的适配&lt;br&gt; 587、修复多个进程同时启动同一个进程时的crash问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2025年2月28号 至 2025年 3月19号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;586、seccomp 相关的调整&lt;br&gt; 585、修复微信在14.0+上开启seccomp-bpf无法打开的问题&lt;br&gt; 584、新增对StorageStatsManager的适配&lt;br&gt; 583、UsageStatsManager相关API适配&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2025年2月11号 至 2025年 2月27号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;582、适配最新版微信&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2025年1月24号 至 2025年 2月10号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;581、对IO进行inline hook时暂停所有Java线程,避免冷启动时因多线程导致的低概率crash&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2025年1月8号 至 2025年 1月23号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;580、installer静默安装部分适配&lt;br&gt; 579、修复静态广播收不到消息&lt;br&gt; 578、修复pending intent数据丢失问题&lt;br&gt; 577、input manager 14.0+上的适配&lt;br&gt; 576、蓝牙适配&lt;br&gt; 575、queryStatsForPackage适配&lt;br&gt; 574、修复有些手机上显示不出应用列表&lt;br&gt; 573、其他一些小问题适配&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年12月21号 至 2025年 1月7号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;572、Seccomp-bpf支持32位&lt;br&gt; 571、修复某些情况下路径多次重定向的问题&lt;br&gt; 570、修复抖音人脸识别时可能白屏的问题&lt;br&gt; 569、去掉几年前为抖音打不开做的一些修改&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年12月7号 至 2024年 12月20号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;568、修复startIntentSenderFoeResult无法工作的问题&lt;br&gt; 567、修复GMS由于StatsManager无法hook导致crash的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年11月27号 至 2024年 12月6号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;566、修复release打包后IJobService中的onNetworkChanged等几个函数被混淆导致找不到crash的问题&lt;br&gt; 565、修复由于BluetoothAdapter.sService为null导致IBluetooth hook失败的问题&lt;br&gt; 564、修复packagesettings被覆盖的问题&lt;br&gt; 563、删除getCallingUid()中的缓存代码&lt;br&gt; 562、Seccomp条件判断时处理Application.name为Null的情况&lt;br&gt; 561、AGP升级到8.2.0&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年11月12号 至 2024年 11月26号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;560、重定向路径调整，区分/data/data/com.xxx以及/data/user/0/com.xxx，使其更符合APP使用实际使用的路径&lt;br&gt; 559、适配fixupAppDir&lt;br&gt; 558、reverseRedirectedPath增加检查，防止路径多次重复转换&lt;br&gt; 557、修复splitNames信息缺失导致部分应用无法正常使用&lt;br&gt; 556、补充一批normal权限,解决部分APP因为权限丢失无法正常使用的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年10月31号 至 2024年 11月11号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;555、新功能：增加Seccomp-Bpf支持，实现更底层的拦截&lt;br&gt; 554、增加对部分加固APP的支持&lt;br&gt; 553、系统OTA升级时对Split Apks重新安装&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年10月14号 至 2024年 10月29号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;552、所有手机package.ini版本升级到7，避免某些情况下出现应用丢失&lt;br&gt; 551、修改Demo包名&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年9月15号 至 2024年 10月13号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;550、移除对Sandhook的依赖&lt;br&gt; 549、移除几处hook，避免部分机型crash&lt;br&gt; 548、移除未使用到的goAsync，避免ANR&lt;br&gt; 547、移除部分对1.X的升级处理废弃代码&lt;br&gt; 546、修复手机系统升级到13.0+上后，应用列表消失的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年8月23号 至 2024年 9月14号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;545、修复IO重定向中一系列函数未对dfd正确处理&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年8月9号 至 2024年 8月22号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;544、修复Native的一个空指针问题&lt;br&gt; 543、修复Native的某个函数由于栈上随机数导致判断出错&lt;br&gt; 542、修复unity中的检测问题&lt;br&gt; 541、修复publishService crash问题&lt;br&gt; 540、修复getPid死循环崩溃问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年8月3号 至 2024年 8月8号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;539、修复微信等APP因为webview导致的crash问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年7月19号 至 2024年 8月2号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;538、修复sandhook崩溃问题&lt;br&gt; 537、修复sandhook hook不起效问题&lt;br&gt; 536、替换sandhook中inline hook部分&lt;br&gt; 535、修复android.permission.DETECT_SCREEN_CAPTURE权限导致的crash问题&lt;br&gt; 534、修复静态广播导致的crash问题&lt;br&gt; 533、修复百度搜索crash的问题&lt;br&gt; 532、修复ResolveActivity跳转到外部应用时没有过滤export为false的场景导致crash&lt;br&gt; 531、修复在某些华为设备上微信白屏的问题&lt;br&gt; 530、修复微信流量异常的问题&lt;br&gt; 529、class_linker适配android 15&lt;br&gt; 528、修复 readlinkat参数问题导致的crash&lt;br&gt; 527、解决某些unity路径检测的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年7月3号 至 2024年 7月18号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;526、适配了几十个API,很大程度提升了稳定性&lt;br&gt; 525、调整stopService不再走initProcess流程，解决了某些情况下的死锁问题&lt;br&gt; 524、修复 startprocess启动App后再次进入VActivityManagerService导致死锁的问题&lt;br&gt; 523、修复锁屏/亮屏广播引起的crash问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年6月17号 至 2024年 7月2号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;522、AttributionSoure中的uid调整 &lt;br&gt; 521、修复微信注册，找回账号等几个界面白屏的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年6月4号 至 2024年 6月16号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;520、将内置的Java hook框架SandHook调整为可选配置 &lt;br&gt; 519、修复VA_ENABLE_EXT_FULL_SOURCE_CODE功能选项开启时，加载so错误的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年5月8号 至 2024年 6月3号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;518、修复微信在鸿蒙4.0+上无法使用的问题 &lt;br&gt; 517、调整VA demo package name&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年4月20号 至 2024年 5月7号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;516、适配华为账户登录和授权登录等功能 &lt;br&gt; 515、适配荣耀账户登录和授权登录等功能 &lt;br&gt; 514、修复Service中getApplicationContext返回Null的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年4月4号 至 2024年 4月19号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;513、修复link&amp;amp;unlink参数没有处理重定向的问题 &lt;br&gt; 512、修复AutoFillManagerStub未生效问题 &lt;br&gt; 511、适配高版本ShadowJobService &lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年3月7号 至 2024年 4月2号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;510、修复数款游因为戏二次注册provider导致无法打开 &lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年2月19号 至 2024年 3月6号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;509、修通知跳转Crash &lt;br&gt; 508、AMS API适配&lt;br&gt; 507、DevicePolicyManager API适配&lt;br&gt; 506、BlueTooth API适配&lt;br&gt; 505、修复抖音crash问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年1月25号 至 2024年 2月18号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;504、修复抖音在部分手机无法打开的问题&lt;br&gt; 503、修复抖音在部分手机运行一小段时间后崩溃的问题&lt;br&gt; 502、修复抖音在部分手机crash后一直打不开的问题&lt;br&gt; 501、修复抖音极速版在部分手机无法打开的问题&lt;br&gt; 500、修复抖音极速版在部分手机运行一小段时间后崩溃的问题&lt;br&gt; 499、修复抖音极速版在部分手机crash后一直打不开的问题&lt;br&gt; 498、UserManager相关API适配&lt;br&gt; 497、PackageManager相关API适配&lt;br&gt; 496、Notification相关API适配&lt;br&gt; 495、FingerprintManager相关API适配&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2024年1月5号 至 2024年 1月24号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;494、Activity Token获取适配&lt;br&gt; 493、适配最新版微信&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年12月21号 至 2024年 1月4号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;492、适配libc可能没有R权限的情况&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年12月5号 至 2023年 12月20号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;491、修复储存空间异常的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年10月24号 至 2023年 12月4号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;490、取消对Xposed依赖&lt;br&gt; 489、适配最新版微信&lt;br&gt; 488、适配setCompatibilityVersion&lt;br&gt; 487、取消hookGetCallingUid对xposed的依赖&lt;br&gt; 486、蓝牙适配&lt;br&gt; 485、AddToDisplayAsUser处理&lt;br&gt; 478、PendingIntent适配&lt;br&gt; 484、MediaRecorder适配&lt;br&gt; 483、处理dispatchVolumeKeyEvent API&lt;br&gt; 482、修复AttributionSource cast crash&lt;br&gt; 481、增加配置：是否优先使用外部app&lt;br&gt; 480、修复启动前台service crash&lt;br&gt; 479、修复14.0上renameat太短导致hook后覆盖其他函数的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年10月8号 至 2023年 10月23号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;478、修复Annotation依赖包为空的问题&lt;br&gt; 477、修复抖音等APP由于动态框架导致无法打开Activity的问题&lt;br&gt; 476、修复纯Java APP在64位下以32位模式安装的问题&lt;br&gt; 475、修复了13.0+上的class linker偏移检测问题&lt;br&gt; 474、调整默认使用isUseRealDataDir模拟真实路径&lt;br&gt; 473、JobServiceStub适配&lt;br&gt; 472、IO重定向增加对renameat2的hook&lt;br&gt; 471、修复APK安装模式下某些APP拍照黑屏&lt;br&gt; 470、修复APK安装模式下微信小程序无法使用的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年9月16号 至 2023年 10月7号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;469、移除已经废弃的虚拟定位代码&lt;br&gt; 468、修复WhatsApp 来电通知bug&lt;br&gt; 467、修复GMS相关问题&lt;br&gt; 466、修复WhatsApp无法跳过短息验证界面问题&lt;br&gt; 465、修复WhatsApp等部分APP启动后界面白屏问题&lt;br&gt; 464、适配Alarms 相关API&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年9月6号 至 2023年 9月15号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;463、14.0上JobScheduler API适配&lt;br&gt; 462、修复从sdcard上安装时signature可能获取的可能不是最旧的问题&lt;br&gt; 461、LocaleManager适配&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年8月16号 至 2023年 9月5号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;460、14.0上JobScheduler适配&lt;br&gt; 459、修复API broadcastIntentWithFeature&lt;br&gt; 458、修复WhatsApp验证跳转的问题&lt;br&gt; 457、内部Provider访问适配&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年8月2号 至 2023年 8月15号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;456、修复Twitter白屏的问题&lt;br&gt; 455、修复ContentProvider在12.0+上的适配问题&lt;br&gt; 454、修复微信在nova9z上崩溃的问题&lt;br&gt; 453、修复微信等APP发送定位时黑屏的问题&lt;br&gt; 452、编译SDK版本升级到14.0&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年7月13号 至 2023年 8月1号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;451、适配12.0+上蓝牙相关的10来个API&lt;br&gt; 450、适配UserManager相关的10来个API&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年6月30号 至 2023年 7月12号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;449、修复JobService unbind崩溃问题&lt;br&gt; 448、修复JobService persisted崩溃问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年5月26号 至 2023年 6月29号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;447、修复部分APP无法录音的问题&lt;br&gt; 446、修复从Sdcard安装APK失败的问题&lt;br&gt; 445、更改VA Demo包名&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年4月28号 至 2023年 5月25号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;444、适配Android 14.0&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年3月18号 至 2023年 4月27号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;443、修复GMS支持，修复各种crash，权限等问题&lt;br&gt; 442、修复GooglePlay无法打开的问题&lt;br&gt; 441、修复GooglePlay无法登录Google账号的问题&lt;br&gt; 440、修复Youtube,WhatsApp等APP无法登录Google账号的问题&lt;br&gt; 439、修复Facebook无法打开的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年2月17号 至 2023年 3月17号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;438、修setPictureInPictureParams crash&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2023年1月27号 至 2023年 2月16号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;437、修复mOpPackageName空指针&lt;br&gt; 436、修复13.0上PackageManager几个flags参数导致的crash&lt;br&gt; 435、修复VAPP返回主页的Intent crash&lt;br&gt; 434、TelecomManagerStub API适配&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2022年12月9号 至 2023年 1月26号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;433、修复PendingIntent flag处理问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2022年11月9号 至 2022年 12月8号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;432、修复Facebook在某些情况下无法启动的问题&lt;br&gt; 431、启动外部App时，排除对VA自身的判断&lt;br&gt; 430、修复queryIntentServices过滤规则&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2022年10月9号 至 2022年 11月8号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;429、修复当VA_AUTHORITY_PREFIX不等于包名时找不到Provider的问题："Failed to find provider info ..."&lt;br&gt; 428、getPermissionActivityIntent处理&lt;br&gt; 427、修复特殊情况下,检查权限无限弹窗&lt;br&gt; 426、强调Intent使用外部通讯录(如果被第三方接管,建议使用外部可见)&lt;br&gt; 425、新增几个Java API适配&lt;br&gt; 424、修复修复部分后台Activity跳转问题&lt;br&gt; 423、修复在10.0+上后台Activity无法启动的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2022年 8月20号 至 2022年 10月8号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;422、新功能:增加启动插件Activity代理，绕过后台5s限制&lt;br&gt; 421、修复Provider在10.0+上crash的问题&lt;br&gt; 420、适配最新版微信&lt;br&gt; 419、适配克隆时不显示sdcard上的APK&lt;br&gt; 418、适配12.0+上PendingIntent Flags必须为FLAG_UPDATE_CURRENT/FLAG_IMMUTABLE&lt;br&gt; 417、修复MediaProvider因为ACCESS_MEDIA_LOCATION 权限检查导致的crash&lt;br&gt; 416、修复12.0+上debug模式下hook失败的问题&lt;br&gt; 415、适配在Multi User账户下crash的问题&lt;br&gt; 414、适配由于后台限制导致VA Core启动插件中Activity失败的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2022年 7月27号 至 2022年 8月19号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;413、Android 13.0继续适配&lt;br&gt; 412、主版调整为64bit&lt;br&gt; 411、修复某些华为手机上App无法打开的问题&lt;br&gt; 410、修复OPPO 13.0上无法打开应用的问题&lt;br&gt; 409、修复百度语音TTS的调用问题&lt;br&gt; 408、修复数据隔离后仍可以访问sdcard根目录的问题&lt;br&gt; 407、修复鸿蒙手机上的崩溃问题&lt;br&gt; 406、修复Debug模式下Hook失效问题&lt;br&gt; 405、添加对BinderInvocationStub的混淆处理，避免混淆后崩溃问题&lt;br&gt; 404、修复Native层调用free函数可能导致崩溃的问题&lt;br&gt; 403、修复微信由于虚拟文件系统导致的崩溃问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2022年 7月9号 至 2022年 7月26号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;402、Android 13.0适配&lt;br&gt; 401、修复开启虚拟储存后文件路径的处理问题&lt;br&gt; 400、修复12.0上Notification没有提示的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2022年 4月28号 至 2022年 5月31号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;399、修复onGetCallingUid hook引起的崩溃问题&lt;br&gt; 398、修复微信8.0.22启动崩溃的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2022年 4月5号 至 2022年 4月27号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;397、去掉sandhook中一些多余的hook代码，避免某些APP无法启动&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2022年 3月13号 至 2022年 4月5号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;396、新增功能:在VA中实现内置media provider，以支持媒体库隔离等需求&lt;br&gt; 395、修复微信/QQ使用语音时崩溃&lt;br&gt; 394、蓝牙崩溃问题适配&lt;br&gt; 393、增加部分Log&lt;br&gt; 392、删除一些无用代码&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2022年 1月22号 至 2022年 3月12号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;391、修复华为手机上StorageManager没有被hook的问题&lt;br&gt; 390、修复最新版微信无法从SD卡启动的问题&lt;br&gt; 389、PackageInfo中增加对requestedPermissionsFlags字段的处理&lt;br&gt; 388、新增VSettingsProvider，避免内置应用没有权限操作settings provider导致异常&lt;br&gt; 387、修复微信等APP启动黑屏，ANR等问题&lt;br&gt; 386、新增对MediaProvider的hook&lt;br&gt; 385、新增对插件shareUserId的处理，从而可以配置将插件的数据放到主包中&lt;br&gt; 384、新增可以配置是否将Tinker禁用&lt;br&gt; 383、修复Android 12权限处理适配&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2021年 12月30号 至 2022年 1月21号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;382、Sandhook适配12.0&lt;br&gt; 381、修复Sandhook在部分11.0上不生效的问题&lt;br&gt; 380、增加编译选项VA_FULL_EXT控制是否将VA源码编译到插件,满足加固场景。&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2021年 11月24号 至 2021年 12月29号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;379、Android 12.0第一轮适配已完成&lt;br&gt; 378、Demo App在11.0上增加文件权限检测&lt;br&gt; 377、修复静态广播接收者在独立进程无法接收广播的问题&lt;br&gt; 376、修复微信第一次登录可能crash问题&lt;br&gt; 375、修复部分APP无法显示头像问题&lt;br&gt; 374、修复在部分OPPO手机上打不开问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2021年 9月21号 至 2021年 11月23号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;373、修复WhatsApp在360手机上黑屏问题&lt;br&gt; 372、增加VA内外广播通信测试demo&lt;br&gt; 371、修复抖音极速版兼容性问题&lt;br&gt; 370、修复readlinkat返回值精度&lt;br&gt; 369、修复从外部安装app,没有引用org.apache.http.legacy的问题&lt;br&gt; 368、修复华为Nova 5i, 64位主包兼容性&lt;br&gt; 367、修复11.0上外部存储重定向问题&lt;br&gt; 366、修复11.0上GMS登录问题&lt;br&gt; 365、修复11.0 部分APP读写sdcard报错的问题&lt;br&gt; 364、修复va core进程死亡后，APP可能打不开的问题&lt;br&gt; 363、增加未安装插件时无法启动的错误日志&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2021年 8月22号 至 2021年 9月20号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;362、横屏重新适配&lt;br&gt; 361、修复部分APP通过file协议安装后无法打开的问题&lt;br&gt; 360、修复传递给JobIntentService中Intent数据丢失问题&lt;br&gt; 359、修复JobIntentService第二次调用无法工作的问题&lt;br&gt; 358、修复华为手机上某些APP奔溃的问题&lt;br&gt; 357、修复小米手机上游戏登录问题&lt;br&gt; 356、修复某些应用加固后无法打开的问题&lt;br&gt; 355、增加对关联启动权限检测&lt;br&gt; 354、targetSdk 30适配&lt;br&gt; 353、修复targetSdk为30时，某些应用无法上网的问题&lt;br&gt; 352、修复targetSdk为30时，sdcard无法访问的问题&lt;br&gt; 351、编译脚本中使用cmake替换gradle task&lt;br&gt; 350、移除过时文档&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2021年 8月7号 至 2021年 8月21号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;349、调整优化gradle脚本&lt;br&gt; 348、hidedenApiBypass支持Android R+&lt;br&gt; 347、targetSdk 30 支持&lt;br&gt; 346、修复VIVO系统服务bug&lt;br&gt; 345、修复VIVO手机无法使用摄像头的bug&lt;br&gt; 344、修复dex加载异常状态的获取&lt;br&gt; 343、修复Android R上libart.so路径问题&lt;br&gt; 342、修复Andoid Q+ 删除通知的bug&lt;br&gt; 341、修复APN uri的权限检查&lt;br&gt; 340、修复Android R暂停恢复线程状态&lt;br&gt; 339、修复debug模式下部分hook失效情况&lt;br&gt; 338、修复hook在R之后的一些bug&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2021年 4月25号 至 2021年 8月6号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;337、修复探探部分手机不能上传头像问题&lt;br&gt; 336、修复Android 10 华为设备IO重定向问题&lt;br&gt; 335、调整横竖屏逻辑,减少异常情况发生&lt;br&gt; 334、添加Activity生命周期的回调接口&lt;br&gt; 333、修复Android 12的广播问题&lt;br&gt; 332、修复微信部分界面状态异常的BUG&lt;br&gt; 331、修复Outlook、One drive、Teams、Zoom等海外app的支持&lt;br&gt; 330、修复Android 11 一个权限请求BUG&lt;br&gt; 329、修复部分cocos2d引擎只显示半屏的问题&lt;br&gt; 328、修复微信在多用户下不能发送文件的问题&lt;br&gt; 327、split apk 支持&lt;br&gt; 326、Android S 支持&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2021年 2月24号 至 2021年 4月24号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;325、适配多用户环境&lt;br&gt; 324、修复新版微信的兼容问题&lt;br&gt; 323、兼容更多企业级加固&lt;br&gt; 322、支持VAPP设置电源优化&lt;br&gt; 321、修复缺失权限声明&lt;br&gt; 320、修复Android 11上android.test.base库的引用&lt;br&gt; 319、优化ext插件判断&lt;br&gt; 318、优化安装时ABI的选择&lt;br&gt; 317、修复Google文档在Android 11上崩溃的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2020年 10月15号 至 2021年 2月23号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;316、解决新版爱加密、邦邦等加固的兼容性&lt;br&gt; 315、修复WhatsApp不显示冷启动Splash的问题&lt;br&gt; 314、优化对系统app的识别&lt;br&gt; 313、完善多用户环境下的支持&lt;br&gt; 312、解决ext插件部分情况下卡死的问题&lt;br&gt; 311、支持Google Play在容器中下载APP&lt;br&gt; 310、修复Android 11 QQ无法显示图片的问题&lt;br&gt; 309、兼容Android 11运行Google Service&lt;br&gt; 308、解决Android 11无法运行chromium&lt;br&gt; 307、支持Hook @CriticalNative Method&lt;br&gt; 306、修复JDK 13无法编译运行的问题&lt;br&gt; 305、修复Service部分情况可能crash的问题&lt;br&gt; 304、修复Android 11无法加载外部存储私有数据的问题&lt;br&gt; 303、修复低版本app无法使用org.apache.http.legacy的问题&lt;br&gt; 302、修复某些情况系统任务栈只显示最后一个的问题&lt;br&gt; 301、完善不同平台的构建脚本&lt;br&gt; 300、修复Android 11无法读取obb的问题&lt;br&gt; 299、解决软件无法向后兼容的问题&lt;br&gt; 298、重构VApp安装框架&lt;br&gt; 297、重构virtual文件系统&lt;br&gt; 296、修复某些情况下WebView无法启动的问题&lt;br&gt; 295、修复VApp卸载重装的BUG&lt;br&gt; 294、修复LOL手游的登录异常问题&lt;br&gt; 293、支持安装Splits APK&lt;br&gt; 292、支持动态配置主包环境&lt;br&gt; 291、修复32位QQ调用64位微信卡顿的问题&lt;br&gt; 290、修复Messenger调用Facebook崩溃的问题&lt;br&gt; 289、优化对Google服务框架的支持&lt;br&gt; 288、实现新的扩展包同步机制&lt;br&gt; 287、修复Android 11正式版的异常问题&lt;br&gt; 286、添加系统Package缓存，优化性能&lt;br&gt; 285、修复disabled组件还能被PMS查询的BUG&lt;br&gt; 284、修复微信部分界面Launch行为异常的问题&lt;br&gt; 283、修复ContentProvider.getCallingPackage返回Host包名的BUG&lt;br&gt; 282、修复uid虚拟化的BUG，解决部分app权限检查失败的问题&lt;br&gt; 281、重写PendingIntent, IntentSender的实现&lt;br&gt; 280、优化进程管理，修复长期存在的概率性进程死锁问题&lt;br&gt; 279、重写Service实现，Service生命周期更准确，不容易被杀死&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2020年 9月13号 至 2020年 10月15号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;278、修复 64 位 App 无法调用 32 位 App 的问题&lt;br&gt; 277、修复 Android R 加载 HttpClient 的问题 &lt;br&gt; 276、修复 Android R debug 模式下的崩溃问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2020年 8月23号 至 2020年 9月12号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;275、添加缺失的 service hook&lt;br&gt; 274、修复百度翻译无法启动的问题 &lt;br&gt; 273、修复 GP 下载的 split app 无法启动的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2020年 7月10号 至 2020年 8月22号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;272、修复 Service 创建&lt;br&gt; 271、添加 NotificationService 缺失的 Hook&lt;br&gt; 270、修复 Yotube 崩溃&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2020年 5月19号 至 2020年 7月9号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;269、初步适配 Android 11 beta1&lt;br&gt; 268、修复小红书多开闪退的问题&lt;br&gt; 267、修复某些 App 多开报“应用签名被篡改”的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2020年 4月24号 至 2020年 5月18号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;266、修复 sh 调用错误&lt;br&gt; 265、修复 9.0 以上最新版 Facebook 无法登陆的问题&lt;br&gt; 264、帮助企业微信修复启动虚拟存储的情况下无法拍照的问题&lt;br&gt; 263、修复某些情况下 64位 app 打不开 Activity 的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2020年 3月24号 至 2020年 4月23号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;262、修复 Vivo 设备提示安装游戏 SDK 的问题&lt;br&gt; 261、修复 Android Q 无法加载部分系统 so 的问题&lt;br&gt; 260、修复华为设备微博未响应&lt;br&gt; 259、忽略不必要的权限检查造成的崩溃&lt;br&gt; 258、修复 WPS 分享文件崩溃的问题&lt;br&gt; 257、部分 10.0 设备的闪退问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2020年 3月7号 至 2020年 3月23号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;256、修复微信同时打开两个页面问题&lt;br&gt; 255、修复微信登陆成功但是返回登陆页面的问题&lt;br&gt; 254、修复最新版 QQ 无法下载附件的问题&lt;br&gt; 253、更新 SandHook 版本&lt;br&gt; 252、修复 9.0 以上安装未签名Apk问题 &lt;br&gt; 251、修复 10.0 的定位问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2020年 1月16号 至 2020年 3月6号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;250、调整 lib 重定向逻辑&lt;br&gt; 249、修复三星 10.0 系统上的崩溃问题&lt;br&gt; 248、修复 release build 的 hook 异常&lt;br&gt; 247、增加 SandHook 的 proguard 规则&lt;br&gt; 246、修复对部分 App 中 VirtualApk 的兼容问题 &lt;br&gt; 245、修复 VA 内部请求安装 apk 失败的问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2019年 12月26号 至 2020年 1月15号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;244、修复 Android Q 遗漏的 hook&lt;br&gt; 243、禁用 Emui10 的 AutoFill&lt;br&gt; 242、增加新 api 结束所有 activity&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2019年 12月15号 至 2019年 12月25号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;241、修复 Emui10 上企业微信等 App 无法启动的问题&lt;br&gt; 240、修复在 4.x 可能导致的崩溃&lt;br&gt; 239、升级 SandHook 修复对 Thread 类的 Hook&lt;br&gt; 238、修复 Android Q 某些接口导致的权限问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2019年 11月20号 至 2019年 12月14号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;237、修复 Notification 缓存导致的崩溃&lt;br&gt; 236、修复高版本 Notification 的 classloader 问题&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2019年 11月9号 至 2019年 11月19号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;235、修复 Android 5.x 的 ART Hook &lt;br&gt; 234、修复 ART Hook 可能导致的死锁问题 &lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2019年 11月2号 至 2019年 11月8号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;233、修复 WPS, 网易邮箱等在 Q 设备上崩溃的问题 &lt;br&gt; 232、修复汤姆猫跑酷在部分 Q 设备上崩溃的问题 &lt;br&gt; 231、修复 QQ 在部分 Q 设备上崩溃的问题 &lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2019年 10月25号 至 2019年 11月1号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;230、修复克隆 Google Play 下载的 64位 App&lt;br&gt; 229、修复企业微信 &lt;br&gt; 228、修复 Telegram &lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2019年 10月8号 至 2019年 10月24号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;227、修复 Android P 下 AppOspManager 的异常 &lt;br&gt; 226、添加 Android P 下 ActivityTaskManager 丢失的 Hook &lt;br&gt; 225、修复 Android P 下 Activity Top Resume 异常 &lt;br&gt; 224、支持在系统多用户模式下运行! &lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2019年 10月8号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;223、修复Android P 以上内部 app 返回桌面异常的问题 &lt;br&gt; 222、64位分支支持 Android Q &lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2019年 9月20号 至 2019年 10月7号 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;221、修复安装在扩展插件中的 apk 无法正确显示图标和名称的问题 &lt;br&gt; 220、修复 twitter 无法打开的问题 &lt;br&gt; 219、正式兼容 Android Q 正式版! &lt;br&gt; 218、修复 Android Q 某些 Activity 无法再次打开的问题 &lt;br&gt; 217、初步适配 Android Q 正式版 &lt;br&gt; 216、修复数个64位分支的 Bug &lt;br&gt; 215、新增加支持32位插件的64位分支，该分支支持32位旧设备并且64位设备在32位插件的情况下可以支持32位旧应用 &lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2017年 12月 至 2019年 7月 30 日 商业版代码更新内容&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;214、改进 App 层提示信息 &lt;br&gt; 213、改进部分编码 &lt;br&gt; 212、修复从宿主向插件发送广播的方法 &lt;br&gt; 211、兼容最新版 gradle 插件 &lt;br&gt; 210、增加广播命名空间以避免多个使用 VA 技术的 App 互相干扰 &lt;br&gt; 209、修复 IMO 打不开的问题 &lt;br&gt; 208、修复部分 ContentProvider 找不到的问题 &lt;br&gt; 207、支持纯32位模式，以兼容老设备 &lt;br&gt; 206、初步支持纯64位模式，以应对8月份的谷歌市场的策略变化 &lt;br&gt; 205、适配到 Android Q beta4 &lt;br&gt; 204、修复了货拉拉无法安装的问题&lt;br&gt; 203、优化了64位apk的判定逻辑&lt;br&gt; 202、修复配置网络证书的 App 的联网&lt;br&gt; 201、重构组件状态管理&lt;br&gt; 200、优化 MIUI/EMUI ContentProvider 兼容性&lt;br&gt; 199、修复 StorageStats Hook&lt;br&gt; 198、修复快手无法登陆&lt;br&gt; 197、修复 YY 无法启动，更好的兼容插件化框架&lt;br&gt; 196、修复 Facebook 登陆&lt;br&gt; 195、修复 Google Play 下载的 App 无法找到 so 的问题(皇室战争)&lt;br&gt; 194、修复 split apk 支持&lt;br&gt; 193、修复 Youtube 无法启动&lt;br&gt; 192、修复优酷无法启动的问题&lt;br&gt; 191、修复多开时app间可能存在广播namespace冲突的BUG&lt;br&gt; 190、采用新的策略绕过Android P以后的Hidden Policy API&lt;br&gt; 189、适配Android Q(beta1)&lt;br&gt; 188、修复华为设备部分app无法识别存储的问题&lt;br&gt; 187、修复启动进程可能失败导致app无法运行的问题&lt;br&gt; 186、修复4.4设备部分native符号无法找到的问题&lt;br&gt; 185、修复部分设备WebView包名获取失败的问题&lt;br&gt; 184、修复Service细节处理的问题&lt;br&gt; 183、优化启动速度&lt;br&gt; 182、修复WebView在少数机型加载失败的情况&lt;br&gt; 181、修复Lib决策的问题&lt;br&gt; 180、修复部分华为机型无法读取内存卡的问题&lt;br&gt; 179、修复Service可能存在的问题&lt;br&gt; 178、允许根据intent判断Activity是否在外部启动&lt;br&gt; 177、修复部分机型上Gms和Google Play启动到了不正确的环境&lt;br&gt; 176、修复新实现的StaticBroadcast导致的兼容性问题&lt;br&gt; 175、修复Android P上无法使用apache.http.legacy的问题&lt;br&gt; 174、实现Native trace&lt;br&gt; 173、优化IO Redirect性能&lt;br&gt; 172、修复wechat部分时候出现网络无法连接的问题&lt;br&gt; 171、修复小概率process attach不正确的BUG&lt;br&gt; 170、开始下一阶段的ROADMAP&lt;br&gt; 169、解决Android P无法注册超过1000个广播导致的问题&lt;br&gt; 168、修复可能导致ANR的DeadLock&lt;br&gt; 167、修复部分app动态加载so失败的问题&lt;br&gt; 166、修复免安装运行环境下部分机型第一次打开出现黑屏的问题&lt;br&gt; 165、兼容适配多款主流的Android模拟器&lt;br&gt; 164、优化启动性能&lt;br&gt; 163、解决多个内存泄露问题&lt;br&gt; 162、修复IO Redirect优先级的问题&lt;br&gt; 161、修复8.0以下设备Messenger无网络连接的问题&lt;br&gt; 160、修复双开时外部app卸载时内部app仍然保留的BUG&lt;br&gt; 159、修复部分腾讯加固无法运行的问题&lt;br&gt; 158、修复Instagram无法登录Facebook的BUG&lt;br&gt; 157、修复进程小概率可能重复启动的BUG&lt;br&gt; 156、修复GET_PERMISSIONS没有获取权限的BUG&lt;br&gt; 155、修复startActivityIntentSender的BUG&lt;br&gt; 154、修复vivo设备部分Activity无法启动的问题&lt;br&gt; 153、修复app无法调用外部app选择文件的问题&lt;br&gt; 152、完善Android P的兼容&lt;br&gt; 151、兼容Android P的Google服务&lt;br&gt; 150、解决Messenger部分功能异常&lt;br&gt; 149、完善IO Redirect&lt;br&gt; 148、大量适配Gms, 修复Gms运行过程中进程无限重启的问题&lt;br&gt; 147、重新实现Service的运行机制&lt;br&gt; 146、完善64bit，提供了部分ROM配置64bit Engine权限的API&lt;br&gt; 145、修复了4.4设备上的Activity启动问题&lt;br&gt; 144、支持excludeFromRecent属性&lt;br&gt; 143、修复Instagram无法Facebook登录的问题&lt;br&gt; 142、修复Facebook第一次登录闪退的问题&lt;br&gt; 141、支持以64位模式运行Gms、Google play、Play game&lt;br&gt; 140、支持在双开/免安装运行的Google play中下载和安装app&lt;br&gt; 139、修复DownloadManager的BUG&lt;br&gt; 138、修复Google play返回上层时重启界面的BUG&lt;br&gt; 137、修复免安装模式下so决策问题&lt;br&gt; 136、优化构建脚本，便于引入项目&lt;br&gt; 135、修复移动MM SDK无法启动的问题&lt;br&gt; 134、修复微信摇一摇的BUG&lt;br&gt; 133、修复中兴设备不稳定的BUG&lt;br&gt; 132、支持ARM64下的IO Redirect&lt;br&gt; 131、修复USE_OUTSIDE模式下外部app更新时，内部app没有更新的BUG&lt;br&gt; 130、兼容最新Android 9.0(代号: pie) 及正式版之前发布的四个Preview版本&lt;br&gt; 129、兼容内置houdini的x86设备&lt;br&gt; 128、WindowPreview技术，使app启动与真实app达到一样的速度&lt;br&gt; 127、新的ActivityStack以提高app运行质量&lt;br&gt; 126、解决接入Atlas Framework的app运行异常的问题&lt;br&gt; 125、现在可以定义虚拟app返回桌面的具体行为&lt;br&gt; 124、现在双开模式下app随系统动态更新，不需要手动检查&lt;br&gt; 123、支持targetSdkVersion &amp;gt;= 26时仍可正常运行低版本的app&lt;br&gt; 122、兼容腾讯游戏管家的QDroid虚拟引擎 (beta)&lt;br&gt; 121、大量重构底层代码，大幅提升运行速度&lt;br&gt; 120、修复网易新闻分享到微博后无法取消的问题&lt;br&gt; 119、修复App自定义权限无法识别的问题&lt;br&gt; 118、修复墨迹天气app无法启动的问题&lt;br&gt; 117、修复部分政府app无法启动的问题&lt;br&gt; 116、API的变动详见代码&lt;br&gt; 115、修复三星系列应用的相互调用问题&lt;br&gt; 114、修复小米应用在非小米系统的账号问题&lt;br&gt; 113、修复分享/发送等第三方调用，返回页面不正常&lt;br&gt; 112、修复应用宝提示不能安装&lt;br&gt; 111、调用第三方app，对uri进行加密&lt;br&gt; 110、适配前刘海&lt;br&gt; 109、适配小米rom的hook&lt;br&gt; 108、适配努比亚录音问题&lt;br&gt; 107、内部悬浮窗权限控制&lt;br&gt; 106、优化自定义通知栏的处理&lt;br&gt; 105、修复Context的INCLUDE_CODE权限问题&lt;br&gt; 104、适配华为，oppo的角标&lt;br&gt; 103、修复百度视频的进程重启问题&lt;br&gt; 102、修复某些snapchat的无法启动问题&lt;br&gt; 101、适配autofill服务，例如piexl系列&lt;br&gt; 100、完善64位的io hook&lt;br&gt; 99、优化hook库的兼容性，加回dlopen&lt;br&gt; 98、64位扩展包的so移到32位主包。（jni代码改动后，在Run之前，请先build一次）&lt;br&gt; 97、通知栏改动：适配8.1的通知渠道；移除应用时，移除应用的全部通知&lt;br&gt; 96、兼容部分app，需要设置android:largeHeap=true&lt;br&gt; 95、修复ffmpeg库的视频无法播放问题&lt;br&gt; 94、优化横竖屏切换&lt;br&gt; 93、降低通过Intent.ACTION_VIEW调用外部Activity限制。&lt;br&gt; 92、兼容MG SDK&lt;br&gt; 91、64位支持还在开发阶段&lt;br&gt; 90、更新混淆配置app/proguard-rules.pro，必须加规则-dontshrink&lt;br&gt; 89、优化模拟机型，例如：模拟后，某些app不出现设备验证&lt;br&gt; 88、提高dex2oat兼容性&lt;br&gt; 87、优化模拟定位&lt;br&gt; 86、移除dlopen&lt;br&gt; 85、targetVersion可以改为26：支持targetVersion&amp;lt;23的app动态权限申请，支持targetVersion&amp;lt;24的文件Uri&lt;br&gt; 84、installPackage改为默认异步形式&lt;br&gt; 83、为了支持64位模式，换回aidl&lt;br&gt; 82、去掉SettingHandler现在可以动态设置特殊规则，规则会存储，不需要重复设置&lt;br&gt; 81、增加2个native_setup&lt;br&gt; 80、提高jobService兼容性&lt;br&gt; 79、ShortcutService相关：关联VASettings.ENABLE_INNER_SHORTCUT&lt;br&gt; 78、为了稳定性和运行效率，去掉上个版本的蓝牙，wifi，不声明权限的适配。&lt;br&gt; 77、增加app启动异常的广播Constants.ACTION_PROCESS_ERROR&lt;br&gt; 76、修复少数游戏横屏判断问题&lt;br&gt; 75、demo增加机型模拟&lt;br&gt; 74、适配vivo一个自定义权限（后台弹窗）VA是把一个历史acitivty返回前台，vivo需要这个权限。&lt;br&gt; 73、如果没有蓝牙权限，返回默认值（海外用）&lt;br&gt; 72、修复uid权限检查问题&lt;br&gt; 71、安全性更新，内部应用的文件权限控制&lt;br&gt; 70、提高内部app调用的兼容性，第三方登录，分享&lt;br&gt; 69、自动过滤没权限的外部ContentProvider&lt;br&gt; 68、增加功能：内部app的权限检查（默认关闭）&lt;br&gt; 67、机型模拟:Build类和build.prop&lt;br&gt; 66、提高对乐固加固的app兼容性&lt;br&gt; 65、适配三星wifimanager&lt;br&gt; 64、修复ipc框架一个参数传递问题（IPCMethod这个类必须更新）&lt;br&gt; 63、补全7.0通知栏的hook&lt;br&gt; 62、修正8.0动态快捷菜单的hook&lt;br&gt; 61、SettingHandler新增一个适配接口，主要适配各种游戏&lt;br&gt; 60、功能改动：google自动安装改为手动安装，避免第一次启动时间过久&lt;br&gt; 59、可以禁止访问外部某个ContentProvider&lt;br&gt; 58、适配华为桌面图标数量&lt;br&gt; 57、权限分类注释，标注可删除权限。&lt;br&gt; 56、增加双开模式的app跟随外部升级的开关。&lt;br&gt; 55、提高app的jni兼容性。&lt;br&gt; 54、提高对app集成其他插件框架的兼容性。&lt;br&gt; 53、增加设置接口，根据包名进行设置。&lt;br&gt; 52、增加Uri的适配范围，支持通过Uri分享和查看文件。&lt;br&gt; 51、修复一个在三星8.0的问题。&lt;br&gt; 50、提高对系统自带的app组件兼容性，更好兼容chrome webview，google service。&lt;br&gt; 49、提高ART稳定性&lt;br&gt; 48、增加相机适配范围&lt;br&gt; 47、支持内部App在8.0下的快捷方式管理&lt;br&gt; 46、修复exec异常&lt;br&gt; 45、提高稳定性（修复微信登录闪退）&lt;br&gt; 44、解决微信数据库崩溃问题&lt;br&gt; 43、修复部分4.4设备崩溃问题&lt;br&gt; 42、修复后台应用易被杀死，土豆视频黑屏，新浪微博无法打开，优酷两次返回无法退出。&lt;br&gt; 41、增加应用的保活机制，双开APP更不易被杀死。&lt;br&gt; 40、优化虚拟引擎启动性能。&lt;br&gt; 39、兼容了大部分的加固，第三方APP兼容性对比上一版提升40%+。&lt;br&gt; 38、修复某些rom下，快捷方式图标不正确&lt;br&gt; 37、兼容以前组件StubFileProvider&lt;br&gt; 36、适配部分新ROM的虚拟IMEI&lt;br&gt; 35、改善进程初始化代码，增加稳定性&lt;br&gt; 34、添加内部发送Intent.ACTION_BOOT_COMPLETED的广播，可以设置开关&lt;br&gt; 33、适配关联google play游戏，支持游戏使用google登录&lt;br&gt; 32、适配android O的google service框架&lt;br&gt; 31、适配android O 快捷方式&lt;br&gt; 30、适配耳机模式&lt;br&gt; 29、某些rom对intent的大小限制，demo添加缩放快捷方式图标代码&lt;br&gt; 28、修复多开情况下一个bug&lt;br&gt; 27、修复某些情况下MediaController的bug&lt;br&gt; 26、修复4.1.2的StubFileProvider报错&lt;br&gt; 25、分享的uri处理&lt;br&gt; 24、修复跨app调用Activity的回调&lt;br&gt; 23、前台服务的通知栏拦截开关&lt;br&gt; 22、附带doc&lt;br&gt; 21、完善VA内部的intent的CHOOSE回调&lt;br&gt; 20、Android O的通知栏适配2&lt;br&gt; 19、ipc框架优化, 提高判断binder的存活准确性&lt;br&gt; 18、jni的log开关 Android.mk:LOCAL_CFLAGS += -DLOG_ENABLE&lt;br&gt; 17、混淆配置&lt;br&gt; 16、Android O的通知栏适配&lt;br&gt; 15、修复部分app网络卡的问题&lt;br&gt; 14、适配 android 8.0的dl_open（jni加载）&lt;br&gt; 13、修复华为emui8.0的一个bug&lt;br&gt; 12、完善定位&lt;br&gt; 11、设置手机信息，imei伪装算法&lt;br&gt; 10、适配8.0某个功能（主要app：whatsapp）&lt;br&gt; 9、修复内部微信等应用，无法更新图片，视频&lt;br&gt; 8、demo增加安装监听，自动升级克隆模式的应用&lt;br&gt; 7、7.0的file provider适配&lt;br&gt; 6、增加了定位代码&lt;br&gt; 5、代码进行了架构优化&lt;br&gt; 4、与开源版不同的特征&lt;br&gt; 3、解决了微信被封的一些问题&lt;br&gt; 2、修复了部分机型兼容性&lt;br&gt; 1、修复了12个小BUG&lt;br&gt;&lt;/p&gt; 
&lt;/details&gt;</description>
    </item>
    
  </channel>
</rss>