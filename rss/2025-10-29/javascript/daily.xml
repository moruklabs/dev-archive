<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Tue, 28 Oct 2025 01:34:46 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>brave/brave-browser</title>
      <link>https://github.com/brave/brave-browser</link>
      <description>&lt;p&gt;Brave browser for Android, iOS, Linux, macOS, Windows.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/brave/brave-browser/master/docs/source/_static/Brave.svg?sanitize=true" alt="Brave Browser" /&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;This repository holds the build tools needed to build the Brave desktop browser for macOS, Windows, and Linux. In particular, it fetches and syncs code from the projects defined in &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;src/brave/DEPS&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://chromium.googlesource.com/chromium/src.git"&gt;Chromium&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Fetches code via &lt;code&gt;depot_tools&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Sets the branch for Chromium (ex: 65.0.3325.181).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/brave-core"&gt;brave-core&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Mounted at &lt;code&gt;src/brave&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Maintains patches for 3rd party Chromium code.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/adblock-rust"&gt;adblock-rust&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Implements Brave's ad-block engine.&lt;/li&gt; 
   &lt;li&gt;Linked through &lt;a href="https://github.com/brave/brave-core/tree/master/components/adblock_rust_ffi"&gt;brave/adblock-rust-ffi&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;p&gt;You can &lt;a href="https://brave.com/download"&gt;visit our website&lt;/a&gt; to get the latest stable release.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see the &lt;a href="https://raw.githubusercontent.com/brave/brave-browser/master/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href="https://github.com/brave/brave-browser/wiki"&gt;Wiki&lt;/a&gt; also has some useful technical information.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://community.brave.app/"&gt;Join the Q&amp;amp;A community&lt;/a&gt; if you'd like to get more involved with Brave. You can &lt;a href="https://community.brave.app/c/support-and-troubleshooting"&gt;ask for help&lt;/a&gt;, &lt;a href="https://community.brave.app/c/brave-feature-requests"&gt;discuss features you'd like to see&lt;/a&gt;, and a lot more. We'd love to have your help so that we can continue improving Brave.&lt;/p&gt; 
&lt;p&gt;Help us translate Brave to your language by submitting translations at &lt;a href="https://explore.transifex.com/brave/brave_en/"&gt;https://explore.transifex.com/brave/brave_en/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Follow &lt;a href="https://x.com/brave"&gt;@brave&lt;/a&gt; on X for important news and announcements.&lt;/p&gt; 
&lt;h2&gt;Install prerequisites&lt;/h2&gt; 
&lt;p&gt;Follow the instructions for your platform:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/brave-browser/wiki/macOS-Development-Environment"&gt;macOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/brave-browser/wiki/iOS-Development-Environment"&gt;iOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/brave-browser/wiki/Windows-Development-Environment"&gt;Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/brave-browser/wiki/Linux-Development-Environment"&gt;Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/brave-browser/wiki/Android-Development-Environment"&gt;Android&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Clone and initialize the repo&lt;/h2&gt; 
&lt;p&gt;Once you have the prerequisites installed, you can get the code and initialize the build environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:brave/brave-core.git path-to-your-project-folder/src/brave
cd path-to-your-project-folder/src/brave
npm install

# the Chromium source is downloaded, which has a large history (gigabytes of data)
# this might take really long to finish depending on internet speed

npm run init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;brave-core based android builds should use &lt;code&gt;npm run init -- --target_os=android --target_arch=arm&lt;/code&gt; (or whichever CPU type you want to build for) brave-core based iOS builds should use &lt;code&gt;npm run init -- --target_os=ios&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You can also set the target_os and target_arch for init and build using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm config set target_os android
npm config set target_arch arm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additional parameters needed to build are documented at &lt;a href="https://github.com/brave/brave-browser/wiki/Build-configuration"&gt;https://github.com/brave/brave-browser/wiki/Build-configuration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Internal developers can find more information at &lt;a href="https://github.com/brave/devops/wiki/%60.env%60-config-for-Brave-Developers"&gt;https://github.com/brave/devops/wiki/%60.env%60-config-for-Brave-Developers&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Build Brave&lt;/h2&gt; 
&lt;p&gt;The default build type is component.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# start the component build compile
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To do a release build:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# start the release compile
npm run build Release
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;brave-core based android builds should use &lt;code&gt;npm run build -- --target_os=android --target_arch=arm&lt;/code&gt; or set the npm config variables as specified above for &lt;code&gt;init&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;brave-core based iOS builds should use the Xcode project found in &lt;code&gt;ios/brave-ios/App&lt;/code&gt;. You can open this project directly or run &lt;code&gt;npm run ios_bootstrap -- --open_xcodeproj&lt;/code&gt; to have it opened in Xcode. See the &lt;a href="https://github.com/brave/brave-browser/wiki/iOS-Development-Environment#Building"&gt;iOS Developer Environment&lt;/a&gt; for more information on iOS builds.&lt;/p&gt; 
&lt;h3&gt;Build Configurations&lt;/h3&gt; 
&lt;p&gt;Running a release build with &lt;code&gt;npm run build Release&lt;/code&gt; can be very slow and use a lot of RAM, especially on Linux with the Gold LLVM plugin.&lt;/p&gt; 
&lt;p&gt;To run a statically linked build (takes longer to build, but starts faster):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build -- Static
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run a debug build (Component build with is_debug=true):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build -- Debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;NOTE: the build will take a while to complete. Depending on your processor and memory, it could potentially take a few hours.&lt;/p&gt; 
&lt;h2&gt;Run Brave&lt;/h2&gt; 
&lt;p&gt;To start the build:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm start [Release|Component|Static|Debug]&lt;/code&gt;&lt;/p&gt; 
&lt;h1&gt;Update Brave&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;npm run sync -- [--force] [--init] [--create] [brave_core_ref]&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This will attempt to stash your local changes in brave-core, but it's safer to commit local changes before running this&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm run sync&lt;/code&gt; will (depending on the below flags):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;üì• Update sub-projects (chromium, brave-core) to latest commit of a git ref (e.g. tag or branch)&lt;/li&gt; 
 &lt;li&gt;ü§ï Apply patches&lt;/li&gt; 
 &lt;li&gt;üîÑ Update gclient DEPS dependencies&lt;/li&gt; 
 &lt;li&gt;‚è© Run hooks (e.g. to perform &lt;code&gt;npm install&lt;/code&gt; on child projects)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;flag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;[no flags]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;updates chromium if needed and re-applies patches. If the chromium version did not change, it will only re-apply patches that have changed. Will update child dependencies &lt;strong&gt;only if any project needed updating during this script run&lt;/strong&gt;. &lt;br /&gt; **Use this if you want the script to manage keeping you up to date instead of pulling or switching branches manually. **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--force&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;updates both &lt;em&gt;Chromium&lt;/em&gt; and &lt;em&gt;brave-core&lt;/em&gt; to the latest remote commit for the current brave-core branch and the &lt;em&gt;Chromium&lt;/em&gt; ref specified in brave-browser/package.json (e.g. &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;74.0.0.103&lt;/code&gt;). Will re-apply all patches. Will force update all child dependencies. &lt;br /&gt; **Use this if you're having trouble and want to force the branches back to a known state. **&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--init&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;force update both &lt;em&gt;Chromium&lt;/em&gt; and &lt;em&gt;brave-core&lt;/em&gt; to the versions specified in brave-browser/package.json and force updates all dependent repos - same as &lt;code&gt;npm run init&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--sync_chromium (true/false)&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Will force or skip the chromium version update when applicable. Useful if you want to avoid a minor update when not ready for the larger build time a chromium update may result in. A warning will be output about the current code state expecting a different chromium version. Your build may fail as a result.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;-D, --delete_unused_deps&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Will delete from the working copy any dependencies that have been removed since the last sync. Mimics &lt;code&gt;gclient sync -D&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Run &lt;code&gt;npm run sync brave_core_ref&lt;/code&gt; to checkout the specified &lt;em&gt;brave-core&lt;/em&gt; ref and update all dependent repos including chromium if needed.&lt;/p&gt; 
&lt;h2&gt;Scenarios&lt;/h2&gt; 
&lt;h4&gt;Create a new branch:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brave-browser&amp;gt; cd src/brave
brave-browser/src/brave&amp;gt; git checkout -b branch_name
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Checkout an existing branch or tag:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brave-browser/src/brave&amp;gt; git fetch origin
brave-browser/src/brave&amp;gt; git checkout [-b] branch_name
brave-browser/src/brave&amp;gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Update the current branch to the latest remote:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brave-browser/src/brave&amp;gt; git pull
brave-browser/src/brave&amp;gt; npm run sync
...Updating 2 patches...
...Updating child dependencies...
...Running hooks...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Reset to latest brave-browser master and brave-core master (via &lt;code&gt;init&lt;/code&gt;, will always result in a longer build and will remove any pending changes in your brave-core working directory):&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brave-browser&amp;gt; git checkout master
brave-browser&amp;gt; git pull
brave-browser&amp;gt; npm run sync -- --init
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;When you know that DEPS didn't change, but .patch files did (quickest attempt to perform a mini-sync before a build):&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brave-browser/src/brave&amp;gt; git checkout featureB
brave-browser/src/brave&amp;gt; git pull
brave-browser/src/brave&amp;gt; cd ../..
brave-browser&amp;gt; npm run apply_patches
...Applying 2 patches...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Enabling third-party APIs:&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Google Safe Browsing&lt;/strong&gt;: Get an API key with SafeBrowsing API enabled from &lt;a href="https://console.developers.google.com/"&gt;https://console.developers.google.com/&lt;/a&gt;. Update the &lt;code&gt;GOOGLE_API_KEY&lt;/code&gt; environment variable with your key as per &lt;a href="https://www.chromium.org/developers/how-tos/api-keys"&gt;https://www.chromium.org/developers/how-tos/api-keys&lt;/a&gt; to enable Google SafeBrowsing.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/security/rules.md"&gt;Security rules from Chromium&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chromium.googlesource.com/chromium/src/+/HEAD/docs/security/ipc-reviews.md"&gt;IPC review guidelines&lt;/a&gt; (in particular &lt;a href="https://docs.google.com/document/d/1Kw4aTuISF7csHnjOpDJGc7JYIjlvOAKRprCTBVWw_E4/edit#heading=h.84bpc1e9z1bg"&gt;this reference&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/internal/wiki/Pull-request-security-audit-checklist"&gt;Brave's internal security guidelines&lt;/a&gt; (for employees only)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brave/brave-core/raw/master/docs/rust.md"&gt;Rust usage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Troubleshooting&lt;/h1&gt; 
&lt;p&gt;See &lt;a href="https://github.com/brave/brave-browser/wiki/Troubleshooting"&gt;Troubleshooting&lt;/a&gt; for solutions to common problems.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gorhill/uBlock</title>
      <link>https://github.com/gorhill/uBlock</link>
      <description>&lt;p&gt;uBlock Origin - An efficient blocker for Chromium and Firefox. Fast and lean.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/gorhill/uBlock/commits/master"&gt;&lt;img src="https://img.shields.io/github/commit-activity/m/gorhill/ublock?label=Commits" alt="Badge Commits" /&gt;&lt;/a&gt; &lt;a href="https://github.com/uBlockOrigin/uBlock-issues/issues"&gt;&lt;img src="https://img.shields.io/github/issues/uBlockOrigin/uBlock-issues" alt="Badge Issues" /&gt;&lt;/a&gt; &lt;a href="https://crowdin.com/project/ublock"&gt;&lt;img src="https://d322cqt584bo4o.cloudfront.net/ublock/localized.svg?sanitize=true" alt="Badge Localization" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true" alt="Badge License" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@gorhill/ubo-core"&gt;&lt;img src="https://img.shields.io/npm/v/@gorhill/ubo-core" alt="Badge NPM" /&gt;&lt;/a&gt; &lt;a href="https://addons.mozilla.org/addon/ublock-origin/"&gt;&lt;img src="https://img.shields.io/amo/rating/ublock-origin?label=Firefox" alt="Badge Mozilla" /&gt;&lt;/a&gt; &lt;a href="https://chromewebstore.google.com/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm"&gt;&lt;img src="https://img.shields.io/chrome-web-store/rating/cjpalhdlnbpafiamejdnhcphjbkeiagm?label=Chrome" alt="Badge Chrome" /&gt;&lt;/a&gt; &lt;a href="https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?label=Edge&amp;amp;color=brightgreen&amp;amp;query=%24.averageRating&amp;amp;suffix=%2F%35&amp;amp;url=https%3A%2F%2Fmicrosoftedge.microsoft.com%2Faddons%2Fgetproductdetailsbycrxid%2Fodfafepnkmbhccpbejgmiehpchacaeak" alt="Badge Edge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1 align="center"&gt; &lt;sub&gt; &lt;img src="https://github.com/gorhill/uBlock/raw/master/src/img/ublock.svg?sanitize=true" height="38" width="38" /&gt; &lt;/sub&gt; uBlock Origin (uBO) &lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Browser&lt;/th&gt; 
   &lt;th&gt;Install from ...&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/user-attachments/assets/b0136512-56a5-4856-8c50-4971c957a24f" alt="Get uBlock Origin for Firefox" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://addons.mozilla.org/addon/ublock-origin/"&gt;Firefox Add-ons&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gorhill/uBlock/wiki/uBlock-Origin-works-best-on-Firefox"&gt;uBO works best on Firefox&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/user-attachments/assets/3a7569f8-688b-4eb1-a643-8d0fe173aefe" alt="Get uBlock Origin for Microsoft Edge" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak"&gt;Edge Add-ons&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/user-attachments/assets/938f080c-fe64-4e48-8b89-4bfceabb56e6" alt="Get uBlock Origin for Opera" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://addons.opera.com/extensions/details/ublock/"&gt;Opera Add-ons&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/user-attachments/assets/5463ef88-873b-4516-8514-5277664cfde7" alt="Get uBlock Origin for Chromium" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://chromewebstore.google.com/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm"&gt;Chrome Web Store&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/uBlockOrigin/uBlock-issues/wiki/About-Google-Chrome's-%22This-extension-may-soon-no-longer-be-supported%22"&gt;About Google Chrome's "This extension may soon no longer be supported"&lt;/a&gt;&lt;br /&gt;End of support on Chrome 139&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/user-attachments/assets/2e9037c4-836d-44c1-a716-ba96e89daaff" alt="Get uBlock Origin for Thunderbird" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://addons.thunderbird.net/thunderbird/addon/ublock-origin/"&gt;Thunderbird Add-ons&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/uBlockOrigin/uBlock-issues/issues/2928"&gt;No longer updated and stuck at 1.49.2.&lt;/a&gt; Later versions require "GitHub - Releases".&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/c/c2/GitHub_Invertocat_Logo.svg?sanitize=true" height="50" alt="Get uBlock Origin through GitHub" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gorhill/uBlock/releases"&gt;GitHub - Releases&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable and development versions on Firefox, Chromium MV2, and Thunderbird. Must be placed manually into web browsers; the Chromium and Thunderbird versions usually won't auto-update.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;p&gt;uBlock Origin (uBO) is a CPU and memory-efficient &lt;a href="https://github.com/gorhill/uBlock/wiki/Blocking-mode"&gt;wide-spectrum content blocker&lt;/a&gt; for Chromium and Firefox. It blocks ads, trackers, coin miners, popups, annoying anti-blockers, malware sites, etc., by default using &lt;a href="https://easylist.to/#easylist"&gt;EasyList&lt;/a&gt;, &lt;a href="https://easylist.to/#easyprivacy"&gt;EasyPrivacy&lt;/a&gt;, &lt;a href="https://pgl.yoyo.org/adservers/"&gt;Peter Lowe's Blocklist&lt;/a&gt;, &lt;a href="https://gitlab.com/malware-filter/urlhaus-filter#malicious-url-blocklist"&gt;Online Malicious URL Blocklist&lt;/a&gt;, and uBO &lt;a href="https://github.com/uBlockOrigin/uAssets/tree/master/filters"&gt;filter lists&lt;/a&gt;. There are many other lists available to block even more. Hosts files are also supported. uBO uses the EasyList filter syntax and &lt;a href="https://github.com/gorhill/uBlock/wiki/Static-filter-syntax#extended-syntax"&gt;extends&lt;/a&gt; the syntax to work with custom rules and filters.&lt;/p&gt; 
&lt;p&gt;You may easily unselect any preselected filter lists if you think uBO blocks too much. For reference, Adblock Plus installs with only EasyList, ABP filters, and Acceptable Ads enabled by default.&lt;/p&gt; 
&lt;p&gt;It is important to note that using a blocker is &lt;strong&gt;NOT&lt;/strong&gt; &lt;a href="https://x.com/LeaVerou/status/518154828166725632"&gt;theft&lt;/a&gt;. Do not fall for this creepy idea. The &lt;em&gt;ultimate&lt;/em&gt; logical consequence of &lt;code&gt;blocking = theft&lt;/code&gt; is the criminalization of the inalienable right to privacy.&lt;/p&gt; 
&lt;p&gt;Ads, "unintrusive" or not, are just the visible portion of the privacy-invading means entering your browser when you visit most sites. &lt;strong&gt;uBO's primary goal is to help users neutralize these privacy-invading methods&lt;/strong&gt; in a way that welcomes those users who do not wish to use more technical means.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#installation"&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#firefox"&gt;Firefox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#thunderbird"&gt;Thunderbird&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#chromium"&gt;Chromium&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#all-programs"&gt;All Programs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#enterprise-deployment"&gt;Enterprise Deployment&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#release-history"&gt;Release History&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#translations"&gt;Translations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#about"&gt;About&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Basic Mode&lt;/th&gt; 
   &lt;th&gt;Advanced Mode&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;The &lt;a href="https://github.com/gorhill/uBlock/wiki/Quick-guide:-popup-user-interface"&gt;simple popup user interface&lt;/a&gt; for an install-it-and-forget-it type of installation that is configured optimally by default.&lt;/td&gt; 
   &lt;td&gt;The &lt;a href="https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide"&gt;advanced popup user interface&lt;/a&gt; includes a point-and-click firewall that is configurable on a per-site basis.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top"&gt;&lt;a href="https://github.com/gorhill/uBlock/wiki/Quick-guide:-popup-user-interface"&gt;&lt;img src="https://user-images.githubusercontent.com/585534/232531044-c4ac4dd5-0b60-4c1e-aabb-914be04b846c.png" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top"&gt;&lt;a href="https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide"&gt;&lt;img src="https://user-images.githubusercontent.com/585534/232531439-a8f81cc3-6622-45c4-8b32-7348cecf6e98.png" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Visit the &lt;a href="https://github.com/gorhill/uBlock/wiki"&gt;Wiki&lt;/a&gt; for documentation.&lt;/p&gt; 
&lt;p&gt;For support, questions, or help, visit &lt;a href="https://www.reddit.com/r/uBlockOrigin/"&gt;/r/uBlockOrigin&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/gorhill/uBlock/wiki/Permissions"&gt;Required Permissions&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Firefox&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://addons.mozilla.org/addon/ublock-origin/"&gt;Firefox Add-ons&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/gorhill/uBlock/raw/master/dist/README.md#for-beta-version"&gt;Development Builds&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;uBO &lt;a href="https://github.com/gorhill/uBlock/wiki/uBlock-Origin-works-best-on-Firefox"&gt;works best&lt;/a&gt; on Firefox and is available for desktop and Android versions.&lt;/p&gt; 
&lt;h4&gt;Thunderbird&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://addons.thunderbird.net/thunderbird/addon/ublock-origin/"&gt;Thunderbird Add-ons&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;In Thunderbird, uBlock Origin does not affect emails, just feeds.&lt;/p&gt; 
&lt;h4&gt;Chromium&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://chromewebstore.google.com/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm"&gt;Chrome Web Store&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak"&gt;Microsoft Edge Add-ons&lt;/a&gt; (Published by &lt;a href="https://github.com/nicole-ashley"&gt;Nicole Rolls&lt;/a&gt; until version 1.62. Ownership transfer at version 1.64.)&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://addons.opera.com/extensions/details/ublock/"&gt;Opera Add-ons&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://chromewebstore.google.com/detail/ublock-origin-development/cgbcahbpdhpcegmbfconppldiemgcoii"&gt;Development Builds&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;uBO should be compatible with any Chromium-based browser.&lt;/p&gt; 
&lt;h4&gt;All Programs&lt;/h4&gt; 
&lt;p&gt;Do &lt;strong&gt;NOT&lt;/strong&gt; use uBO with any other content blocker. uBO &lt;a href="https://www.debugbear.com/blog/chrome-extensions-website-performance#the-impact-of-ad-blocking-on-website-performance"&gt;performs&lt;/a&gt; as well as or better than most popular blockers. Other blockers can prevent uBO's privacy or anti-blocker-defusing features from working correctly.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/gorhill/uBlock/tree/master/dist#install"&gt;Manual Installation&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Enterprise Deployment&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/gorhill/uBlock/wiki/Deploying-uBlock-Origin"&gt;Deploying uBO&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Release History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/gorhill/uBlock/releases"&gt;Releases Page&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;Help translate uBO via &lt;a href="https://crowdin.com/project/ublock"&gt;Crowdin&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/MANIFESTO.md"&gt;Manifesto&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/gorhill/uBlock/wiki/Privacy-policy"&gt;Privacy Policy&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/LICENSE.txt"&gt;GPLv3 License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Free. Open-source. For users by users. No donations sought.&lt;/p&gt; 
&lt;p&gt;If you ever want to contribute something, think about the people working hard to maintain the filter lists you are using, which are available to use by all for free.&lt;/p&gt; 
&lt;!----&gt; 
&lt;!--[ Internal ]--------------------------------&gt; 
&lt;!--[ Badges ]---------------------------------&gt;</description>
    </item>
    
    <item>
      <title>sveltejs/svelte</title>
      <link>https://github.com/sveltejs/svelte</link>
      <description>&lt;p&gt;web development for the rest of us&lt;/p&gt;&lt;hr&gt;&lt;a href="https://svelte.dev"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="assets/banner_dark.png" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/sveltejs/svelte/main/assets/banner.png" alt="Svelte - web development for the rest of us" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/svelte/main/LICENSE.md"&gt;&lt;img src="https://img.shields.io/npm/l/svelte.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://svelte.dev/chat"&gt;&lt;img src="https://img.shields.io/discord/457912077277855764?label=chat&amp;amp;logo=discord" alt="Chat" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is Svelte?&lt;/h2&gt; 
&lt;p&gt;Svelte is a new way to build web applications. It's a compiler that takes your declarative components and converts them into efficient JavaScript that surgically updates the DOM.&lt;/p&gt; 
&lt;p&gt;Learn more at the &lt;a href="https://svelte.dev"&gt;Svelte website&lt;/a&gt;, or stop by the &lt;a href="https://svelte.dev/chat"&gt;Discord chatroom&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supporting Svelte&lt;/h2&gt; 
&lt;p&gt;Svelte is an MIT-licensed open source project with its ongoing development made possible entirely by fantastic volunteers. If you'd like to support their efforts, please consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://opencollective.com/svelte"&gt;Becoming a backer on Open Collective&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Funds donated via Open Collective will be used for compensating expenses related to Svelte's development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte's development more directly.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;You may view &lt;a href="https://svelte.dev/roadmap"&gt;our roadmap&lt;/a&gt; if you'd like to see what we're currently working on.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see the &lt;a href="https://raw.githubusercontent.com/sveltejs/svelte/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; and the &lt;a href="https://raw.githubusercontent.com/sveltejs/svelte/main/packages/svelte"&gt;&lt;code&gt;svelte&lt;/code&gt;&lt;/a&gt; package for information on contributing to Svelte.&lt;/p&gt; 
&lt;h2&gt;Is svelte.dev down?&lt;/h2&gt; 
&lt;p&gt;Probably not, but it's possible. If you can't seem to access any &lt;code&gt;.dev&lt;/code&gt; sites, check out &lt;a href="https://superuser.com/q/1413402"&gt;this SuperUser question and answer&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/svelte/main/LICENSE.md"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ConardLi/easy-dataset</title>
      <link>https://github.com/ConardLi/easy-dataset</link>
      <description>&lt;p&gt;A powerful tool for creating fine-tuning datasets for LLM&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public//imgs/bg2.png" alt="" /&gt;&lt;/p&gt; 
 &lt;img alt="GitHub Repo stars" src="https://img.shields.io/github/stars/ConardLi/easy-dataset" /&gt; 
 &lt;img alt="GitHub Downloads (all assets, all releases)" src="https://img.shields.io/github/downloads/ConardLi/easy-dataset/total" /&gt; 
 &lt;img alt="GitHub Release" src="https://img.shields.io/github/v/release/ConardLi/easy-dataset" /&gt; 
 &lt;img src="https://img.shields.io/badge/license-AGPL--3.0-green.svg?sanitize=true" alt="AGPL 3.0 License" /&gt; 
 &lt;img alt="GitHub contributors" src="https://img.shields.io/github/contributors/ConardLi/easy-dataset" /&gt; 
 &lt;img alt="GitHub last commit" src="https://img.shields.io/github/last-commit/ConardLi/easy-dataset" /&gt; 
 &lt;a href="https://arxiv.org/abs/2507.04009v1" target="_blank"&gt; &lt;img src="https://img.shields.io/badge/arXiv-2507.04009-b31b1b.svg?sanitize=true" alt="arXiv:2507.04009" /&gt; &lt;/a&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/13944" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13944" alt="ConardLi%2Feasy-dataset | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;A powerful tool for creating fine-tuning datasets for Large Language Models&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/README.zh-CN.md"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/README.md"&gt;English&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/#features"&gt;Features&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/#local-run"&gt;Quick Start&lt;/a&gt; ‚Ä¢ &lt;a href="https://docs.easy-dataset.com/ed/en"&gt;Documentation&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/#contributing"&gt;Contributing&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/#license"&gt;License&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;If you like this project, please give it a Star‚≠êÔ∏è, or buy the author a coffee =&amp;gt; &lt;a href="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/aw.jpg"&gt;Donate&lt;/a&gt; ‚ù§Ô∏è!&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Easy Dataset is an application specifically designed for creating fine-tuning datasets for Large Language Models (LLMs). It provides an intuitive interface for uploading domain-specific files, intelligently splitting content, generating questions, and producing high-quality training data for model fine-tuning.&lt;/p&gt; 
&lt;p&gt;With Easy Dataset, you can transform domain knowledge into structured datasets, compatible with all LLM APIs that follow the OpenAI format, making the fine-tuning process simple and efficient.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/en-arc.png" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Intelligent Document Processing&lt;/strong&gt;: Supports intelligent recognition and processing of multiple formats including PDF, Markdown, DOCX, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Intelligent Text Splitting&lt;/strong&gt;: Supports multiple intelligent text splitting algorithms and customizable visual segmentation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Intelligent Question Generation&lt;/strong&gt;: Extracts relevant questions from each text segment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Domain Labels&lt;/strong&gt;: Intelligently builds global domain labels for datasets, with global understanding capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Answer Generation&lt;/strong&gt;: Uses LLM API to generate comprehensive answers and Chain of Thought (COT)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible Editing&lt;/strong&gt;: Edit questions, answers, and datasets at any stage of the process&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple Export Formats&lt;/strong&gt;: Export datasets in various formats (Alpaca, ShareGPT, multilingual-thinking) and file types (JSON, JSONL)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Wide Model Support&lt;/strong&gt;: Compatible with all LLM APIs that follow the OpenAI format&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User-Friendly Interface&lt;/strong&gt;: Intuitive UI designed for both technical and non-technical users&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom System Prompts&lt;/strong&gt;: Add custom system prompts to guide model responses&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Demo&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/6ddb1225-3d1b-4695-90cd-aa4cb01376a8"&gt;https://github.com/user-attachments/assets/6ddb1225-3d1b-4695-90cd-aa4cb01376a8&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Local Run&lt;/h2&gt; 
&lt;h3&gt;Download Client&lt;/h3&gt; 
&lt;table style="width: 100%"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="20%" align="center"&gt; &lt;b&gt;Windows&lt;/b&gt; &lt;/td&gt; 
   &lt;td width="30%" align="center" colspan="2"&gt; &lt;b&gt;MacOS&lt;/b&gt; &lt;/td&gt; 
   &lt;td width="20%" align="center"&gt; &lt;b&gt;Linux&lt;/b&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr style="text-align: center"&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://github.com/ConardLi/easy-dataset/releases/latest"&gt; &lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/windows.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;Setup.exe&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://github.com/ConardLi/easy-dataset/releases/latest"&gt; &lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/mac.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;Intel&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://github.com/ConardLi/easy-dataset/releases/latest"&gt; &lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/mac.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;M&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://github.com/ConardLi/easy-dataset/releases/latest"&gt; &lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/linux.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;AppImage&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Install with NPM&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;   git clone https://github.com/ConardLi/easy-dataset.git
   cd easy-dataset
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Install dependencies:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;   npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Start the development server:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;   npm run build

   npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Open your browser and visit &lt;code&gt;http://localhost:1717&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Using the Official Docker Image&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/ConardLi/easy-dataset.git
cd easy-dataset
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Modify the &lt;code&gt;docker-compose.yml&lt;/code&gt; file:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-yml"&gt;services:
  easy-dataset:
    image: ghcr.io/conardli/easy-dataset
    container_name: easy-dataset
    ports:
      - '1717:1717'
    volumes:
      - ./local-db:/app/local-db
      # - ./prisma:/app/prisma  If mounting is required, please manually initialize the database file first.
    restart: unless-stopped
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Replace &lt;code&gt;{YOUR_LOCAL_DB_PATH}&lt;/code&gt; and &lt;code&gt;{LOCAL_PRISMA_PATH}&lt;/code&gt; with the actual paths where you want to store the local database. It is recommended to use the &lt;code&gt;local-db&lt;/code&gt; and &lt;code&gt;prisma&lt;/code&gt; folders in the current code repository directory to maintain consistency with the database paths when starting via NPM.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you need to mount the database file (PRISMA), you need to run &lt;code&gt;npm run db:push&lt;/code&gt; in advance to initialize the database file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Start with docker-compose:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Open a browser and visit &lt;code&gt;http://localhost:1717&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Building with a Local Dockerfile&lt;/h3&gt; 
&lt;p&gt;If you want to build the image yourself, use the Dockerfile in the project root directory:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/ConardLi/easy-dataset.git
cd easy-dataset
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Build the Docker image:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t easy-dataset .
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Run the container:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d \
  -p 1717:1717 \
  -v {YOUR_LOCAL_DB_PATH}:/app/local-db \
  -v {LOCAL_PRISMA_PATH}:/app/prisma \
  --name easy-dataset \
  easy-dataset
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Replace &lt;code&gt;{YOUR_LOCAL_DB_PATH}&lt;/code&gt; and &lt;code&gt;{LOCAL_PRISMA_PATH}&lt;/code&gt; with the actual paths where you want to store the local database. It is recommended to use the &lt;code&gt;local-db&lt;/code&gt; and &lt;code&gt;prisma&lt;/code&gt; folders in the current code repository directory to maintain consistency with the database paths when starting via NPM.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Open a browser and visit &lt;code&gt;http://localhost:1717&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;How to Use&lt;/h2&gt; 
&lt;h3&gt;Create a Project&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/1.png" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/2.png" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;ol&gt; 
 &lt;li&gt;Click the "Create Project" button on the homepage;&lt;/li&gt; 
 &lt;li&gt;Enter a project name and description;&lt;/li&gt; 
 &lt;li&gt;Configure your preferred LLM API settings&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Process Documents&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/3.png" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/4.png" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;ol&gt; 
 &lt;li&gt;Upload your files in the "Text Split" section (supports PDF, Markdown, txt, DOCX);&lt;/li&gt; 
 &lt;li&gt;View and adjust the automatically split text segments;&lt;/li&gt; 
 &lt;li&gt;View and adjust the global domain tree&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Generate Questions&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/5.png" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/6.png" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Batch construct questions based on text blocks;&lt;/li&gt; 
 &lt;li&gt;View and edit the generated questions;&lt;/li&gt; 
 &lt;li&gt;Organize questions using the label tree&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Create Datasets&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/7.png" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/8.png" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;ol&gt; 
 &lt;li&gt;Batch construct datasets based on questions;&lt;/li&gt; 
 &lt;li&gt;Generate answers using the configured LLM;&lt;/li&gt; 
 &lt;li&gt;View, edit, and optimize the generated answers&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Export Datasets&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/9.png" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/10.png" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;ol&gt; 
 &lt;li&gt;Click the "Export" button in the Datasets section;&lt;/li&gt; 
 &lt;li&gt;Choose your preferred format (Alpaca or ShareGPT or multilingual-thinking);&lt;/li&gt; 
 &lt;li&gt;Select the file format (JSON or JSONL);&lt;/li&gt; 
 &lt;li&gt;Add custom system prompts as needed;&lt;/li&gt; 
 &lt;li&gt;Export your dataset&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;View the demo video of this project: &lt;a href="https://www.bilibili.com/video/BV1y8QpYGE57/"&gt;Easy Dataset Demo Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;For detailed documentation on all features and APIs, visit our &lt;a href="https://docs.easy-dataset.com/ed/en"&gt;Documentation Site&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;View the paper of this project: &lt;a href="https://arxiv.org/abs/2507.04009v1"&gt;Easy Dataset: A Unified and Extensible Framework for Synthesizing LLM Fine-Tuning Data from Unstructured Documents&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community Practice&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://buaa-act.feishu.cn/wiki/GVzlwYcRFiR8OLkHbL6cQpYin7g"&gt;Easy Dataset √ó LLaMA Factory: Enabling LLMs to Efficiently Learn Domain Knowledge&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bilibili.com/video/BV1MRMnz1EGW"&gt;Easy Dataset Practical Guide: How to Build High-Quality Datasets?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bilibili.com/video/BV1fyJhzHEb7/"&gt;Interpretation of Key Feature Updates in Easy Dataset&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.easy-dataset.com/zhi-shi-ke-pu"&gt;Foundation Models Fine-tuning Datasets: Basic Knowledge Popularization&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from the community! If you'd like to contribute to Easy Dataset, please follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create a new branch (&lt;code&gt;git checkout -b feature/amazing-feature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Make your changes&lt;/li&gt; 
 &lt;li&gt;Commit your changes (&lt;code&gt;git commit -m 'Add some amazing feature'&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Push to the branch (&lt;code&gt;git push origin feature/amazing-feature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Open a Pull Request (submit to the DEV branch)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please ensure that tests are appropriately updated and adhere to the existing coding style.&lt;/p&gt; 
&lt;h2&gt;Join Discussion Group &amp;amp; Contact the Author&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.easy-dataset.com/geng-duo/lian-xi-wo-men"&gt;https://docs.easy-dataset.com/geng-duo/lian-xi-wo-men&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the AGPL 3.0 License - see the &lt;a href="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If this work is helpful, please kindly cite as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{miao2025easydataset,
  title={Easy Dataset: A Unified and Extensible Framework for Synthesizing LLM Fine-Tuning Data from Unstructured Documents},
  author={Ziyang Miao and Qiyu Sun and Jingyuan Wang and Yuchen Gong and Yaowei Zheng and Shiqi Li and Richong Zhang},
  year={2025},
  eprint={2507.04009},
  archivePrefix={arXiv},
  primaryClass={cs.CL},
  url={https://arxiv.org/abs/2507.04009}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#ConardLi/easy-dataset&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=ConardLi/easy-dataset&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;sub&gt;Built with ‚ù§Ô∏è by &lt;a href="https://github.com/ConardLi"&gt;ConardLi&lt;/a&gt; ‚Ä¢ Follow me: &lt;a href="https://raw.githubusercontent.com/ConardLi/easy-dataset/main/public/imgs/weichat.jpg"&gt;WeChat Official Account&lt;/a&gt;ÔΩú&lt;a href="https://space.bilibili.com/474921808"&gt;Bilibili&lt;/a&gt;ÔΩú&lt;a href="https://juejin.cn/user/3949101466785709"&gt;Juejin&lt;/a&gt;ÔΩú&lt;a href="https://www.zhihu.com/people/wen-ti-chao-ji-duo-de-xiao-qi"&gt;Zhihu&lt;/a&gt;ÔΩú&lt;a href="https://www.youtube.com/@garden-conard"&gt;Youtube&lt;/a&gt;&lt;/sub&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>CodeWithHarry/Sigma-Web-Dev-Course</title>
      <link>https://github.com/CodeWithHarry/Sigma-Web-Dev-Course</link>
      <description>&lt;p&gt;Source Code for Sigma Web Development Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Sigma's Web Development Course - Hindi Web Development Tutorials! üöÄ&lt;/h1&gt; 
&lt;h2&gt;What's Inside:&lt;/h2&gt; 
&lt;p&gt;If you've been itching to dive into the world of web development but feel lost in a sea of English tutorials, you're in the right place! Our course is exclusively in Hindi and is crafted to guide you from being an absolute beginner to a seasoned pro, one step at a time.&lt;/p&gt; 
&lt;h2&gt;Who Can Benefit?&lt;/h2&gt; 
&lt;h3&gt;This course is a perfect fit for:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Beginners eager to start their web development journey&lt;/li&gt; 
 &lt;li&gt;Intermediate developers looking to refine their skills&lt;/li&gt; 
 &lt;li&gt;Individuals who prefer learning in Hindi&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;What You'll Master:&lt;/h2&gt; 
&lt;h3&gt;During this course, you'll delve into:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;The fundamentals of HTML, CSS, and JavaScript&lt;/li&gt; 
 &lt;li&gt;Both front-end and back-end development&lt;/li&gt; 
 &lt;li&gt;How to seamlessly integrate databases&lt;/li&gt; 
 &lt;li&gt;Real-world project implementation&lt;/li&gt; 
 &lt;li&gt;And a whole lot more!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;The Schedule:&lt;/h2&gt; 
&lt;p&gt;We're committed to your growth. Expect fresh source code additions nearly every day. Keep up the pace with our schedule and watch your skills soar! üìÖ&lt;/p&gt; 
&lt;p&gt;Get ready to embark on an exciting coding journey! üë®‚Äçüíªüåü&lt;/p&gt; 
&lt;p&gt;Ready to start? &lt;a href="https://www.youtube.com/playlist?list=PLu0W_9lII9agq5TrH9XLIKQvv0iaF2X3w"&gt;Click here&lt;/a&gt; to access the complete YouTube playlist.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>expressjs/express</title>
      <link>https://github.com/expressjs/express</link>
      <description>&lt;p&gt;Fast, unopinionated, minimalist web framework for node.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://expressjs.com/"&gt;&lt;img src="https://i.cloudup.com/zfY6lL7eFa-3000x3000.png" alt="Express Logo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Fast, unopinionated, minimalist web framework for &lt;a href="https://nodejs.org"&gt;Node.js&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project has a &lt;a href="https://github.com/expressjs/.github/raw/HEAD/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#table-of-contents"&gt;Table of contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#docs--community"&gt;Docs &amp;amp; Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#philosophy"&gt;Philosophy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#contributing"&gt;Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#security-issues"&gt;Security Issues&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#running-tests"&gt;Running Tests&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#current-project-team-members"&gt;Current project team members&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#tc-technical-committee"&gt;TC (Technical Committee)&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#tc-emeriti-members"&gt;TC emeriti members&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#triagers"&gt;Triagers&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#emeritus-triagers"&gt;Emeritus Triagers&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://npmjs.org/package/express"&gt;&lt;img src="https://badgen.net/npm/v/express" alt="NPM Version" /&gt;&lt;/a&gt; &lt;a href="https://npmcharts.com/compare/express?minimal=true"&gt;&lt;img src="https://badgen.net/npm/dm/express" alt="NPM Downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/expressjs/express/actions/workflows/ci.yml"&gt;&lt;img src="https://badgen.net/github/checks/expressjs/express/master?label=CI" alt="Linux Build" /&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/expressjs/express?branch=master"&gt;&lt;img src="https://badgen.net/coveralls/c/github/expressjs/express/master" alt="Test Coverage" /&gt;&lt;/a&gt; &lt;a href="https://ossf.github.io/scorecard-visualizer/#/projects/github.com/expressjs/express"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/expressjs/express/badge" alt="OpenSSF Scorecard Badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import express from 'express'

const app = express()

app.get('/', (req, res) =&amp;gt; {
  res.send('Hello World')
})

app.listen(3000, () =&amp;gt; {
  console.log('Server is running on http://localhost:3000')
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;This is a &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt; module available through the &lt;a href="https://www.npmjs.com/"&gt;npm registry&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Before installing, &lt;a href="https://nodejs.org/en/download/"&gt;download and install Node.js&lt;/a&gt;. Node.js 18 or higher is required.&lt;/p&gt; 
&lt;p&gt;If this is a brand new project, make sure to create a &lt;code&gt;package.json&lt;/code&gt; first with the &lt;a href="https://docs.npmjs.com/creating-a-package-json-file"&gt;&lt;code&gt;npm init&lt;/code&gt; command&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Installation is done using the &lt;a href="https://docs.npmjs.com/getting-started/installing-npm-packages-locally"&gt;&lt;code&gt;npm install&lt;/code&gt; command&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install express
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Follow &lt;a href="https://expressjs.com/en/starter/installing.html"&gt;our installing guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Robust routing&lt;/li&gt; 
 &lt;li&gt;Focus on high performance&lt;/li&gt; 
 &lt;li&gt;Super-high test coverage&lt;/li&gt; 
 &lt;li&gt;HTTP helpers (redirection, caching, etc)&lt;/li&gt; 
 &lt;li&gt;View system supporting 14+ template engines&lt;/li&gt; 
 &lt;li&gt;Content negotiation&lt;/li&gt; 
 &lt;li&gt;Executable for generating applications quickly&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Docs &amp;amp; Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://expressjs.com/"&gt;Website and Documentation&lt;/a&gt; - [&lt;a href="https://github.com/expressjs/expressjs.com"&gt;website repo&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/expressjs"&gt;GitHub Organization&lt;/a&gt; for Official Middleware &amp;amp; Modules&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/expressjs/discussions"&gt;Github Discussions&lt;/a&gt; for discussion on the development and usage of Express&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;PROTIP&lt;/strong&gt; Be sure to read the &lt;a href="https://expressjs.com/en/guide/migrating-5"&gt;migration guide to v5&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;The quickest way to get started with express is to utilize the executable &lt;a href="https://github.com/expressjs/generator"&gt;&lt;code&gt;express(1)&lt;/code&gt;&lt;/a&gt; to generate an application as shown below:&lt;/p&gt; 
&lt;p&gt;Install the executable. The executable's major version will match Express's:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g express-generator@4
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create the app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;express /tmp/foo &amp;amp;&amp;amp; cd /tmp/foo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;View the website at: &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;The Express philosophy is to provide small, robust tooling for HTTP servers, making it a great solution for single page applications, websites, hybrids, or public HTTP APIs.&lt;/p&gt; 
&lt;p&gt;Express does not force you to use any specific ORM or template engine. With support for over 14 template engines via &lt;a href="https://github.com/ladjs/consolidate"&gt;@ladjs/consolidate&lt;/a&gt;, you can quickly craft your perfect framework.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;To view the examples, clone the Express repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/expressjs/express.git --depth 1 &amp;amp;&amp;amp; cd express
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then install the dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run whichever example you want:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;node examples/content-negotiation
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The Express.js project welcomes all constructive contributions. Contributions take many forms, from code for bug fixes and enhancements, to additions and fixes to documentation, additional tests, triaging incoming pull requests and issues, and more!&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/expressjs/.github/raw/HEAD/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for more technical details on contributing.&lt;/p&gt; 
&lt;h3&gt;Security Issues&lt;/h3&gt; 
&lt;p&gt;If you discover a security vulnerability in Express, please see &lt;a href="https://raw.githubusercontent.com/expressjs/express/master/SECURITY.md"&gt;Security Policies and Procedures&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Running Tests&lt;/h3&gt; 
&lt;p&gt;To run the test suite, first install the dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run &lt;code&gt;npm test&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Current project team members&lt;/h2&gt; 
&lt;p&gt;For information about the governance of the express.js project, see &lt;a href="https://github.com/expressjs/discussions/raw/HEAD/docs/GOVERNANCE.md"&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The original author of Express is &lt;a href="https://github.com/tj"&gt;TJ Holowaychuk&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/expressjs/express/graphs/contributors"&gt;List of all contributors&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;TC (Technical Committee)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/UlisesGascon"&gt;UlisesGascon&lt;/a&gt; - &lt;strong&gt;Ulises Gasc√≥n&lt;/strong&gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonchurch"&gt;jonchurch&lt;/a&gt; - &lt;strong&gt;Jon Church&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wesleytodd"&gt;wesleytodd&lt;/a&gt; - &lt;strong&gt;Wes Todd&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LinusU"&gt;LinusU&lt;/a&gt; - &lt;strong&gt;Linus Unneb√§ck&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blakeembrey"&gt;blakeembrey&lt;/a&gt; - &lt;strong&gt;Blake Embrey&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sheplu"&gt;sheplu&lt;/a&gt; - &lt;strong&gt;Jean Burellier&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/crandmck"&gt;crandmck&lt;/a&gt; - &lt;strong&gt;Rand McKinney&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ctcpip"&gt;ctcpip&lt;/a&gt; - &lt;strong&gt;Chris de Almeida&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;TC emeriti members&lt;/summary&gt; 
 &lt;h4&gt;TC emeriti members&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dougwilson"&gt;dougwilson&lt;/a&gt; - &lt;strong&gt;Douglas Wilson&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hacksparrow"&gt;hacksparrow&lt;/a&gt; - &lt;strong&gt;Hage Yaapa&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jonathanong"&gt;jonathanong&lt;/a&gt; - &lt;strong&gt;jongleberry&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/niftylettuce"&gt;niftylettuce&lt;/a&gt; - &lt;strong&gt;niftylettuce&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/troygoode"&gt;troygoode&lt;/a&gt; - &lt;strong&gt;Troy Goode&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aravindvnair99"&gt;aravindvnair99&lt;/a&gt; - &lt;strong&gt;Aravind Nair&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bjohansebas"&gt;bjohansebas&lt;/a&gt; - &lt;strong&gt;Sebastian Beltran&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carpasse"&gt;carpasse&lt;/a&gt; - &lt;strong&gt;Carlos Serrano&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CBID2"&gt;CBID2&lt;/a&gt; - &lt;strong&gt;Christine Belzie&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dpopp07"&gt;dpopp07&lt;/a&gt; - &lt;strong&gt;Dustin Popp&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/UlisesGascon"&gt;UlisesGascon&lt;/a&gt; - &lt;strong&gt;Ulises Gasc√≥n&lt;/strong&gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/3imed-jaberi"&gt;3imed-jaberi&lt;/a&gt; - &lt;strong&gt;Imed Jaberi&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/IamLizu"&gt;IamLizu&lt;/a&gt; - &lt;strong&gt;S M Mahmudul Hasan&lt;/strong&gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Phillip9587"&gt;Phillip9587&lt;/a&gt; - &lt;strong&gt;Phillip Barta&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sushmeet"&gt;Sushmeet&lt;/a&gt; - &lt;strong&gt;Sushmeet Sunger&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rxmarbles"&gt;rxmarbles&lt;/a&gt; &lt;strong&gt;Rick Markins&lt;/strong&gt; (He/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Triagers emeriti members&lt;/summary&gt; 
 &lt;h4&gt;Emeritus Triagers&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AuggieH"&gt;AuggieH&lt;/a&gt; - &lt;strong&gt;Auggie Hudak&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/G-Rath"&gt;G-Rath&lt;/a&gt; - &lt;strong&gt;Gareth Jones&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MohammadXroid"&gt;MohammadXroid&lt;/a&gt; - &lt;strong&gt;Mohammad Ayashi&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/NawafSwe"&gt;NawafSwe&lt;/a&gt; - &lt;strong&gt;Nawaf Alsharqi&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/NotMoni"&gt;NotMoni&lt;/a&gt; - &lt;strong&gt;Moni&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/VigneshMurugan"&gt;VigneshMurugan&lt;/a&gt; - &lt;strong&gt;Vignesh Murugan&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/davidmashe"&gt;davidmashe&lt;/a&gt; - &lt;strong&gt;David Ashe&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/digitaIfabric"&gt;digitaIfabric&lt;/a&gt; - &lt;strong&gt;David&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/e-l-i-s-e"&gt;e-l-i-s-e&lt;/a&gt; - &lt;strong&gt;Elise Bonner&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/fed135"&gt;fed135&lt;/a&gt; - &lt;strong&gt;Frederic Charette&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/firmanJS"&gt;firmanJS&lt;/a&gt; - &lt;strong&gt;Firman Abdul Hakim&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/getspooky"&gt;getspooky&lt;/a&gt; - &lt;strong&gt;Yasser Ameur&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ghinks"&gt;ghinks&lt;/a&gt; - &lt;strong&gt;Glenn&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ghousemohamed"&gt;ghousemohamed&lt;/a&gt; - &lt;strong&gt;Ghouse Mohamed&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jake32321"&gt;jake32321&lt;/a&gt; - &lt;strong&gt;Jake Reed&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jonchurch"&gt;jonchurch&lt;/a&gt; - &lt;strong&gt;Jon Church&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lekanikotun"&gt;lekanikotun&lt;/a&gt; - &lt;strong&gt;Troy Goode&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/marsonya"&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Lekan Ikotun&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mastermatt"&gt;mastermatt&lt;/a&gt; - &lt;strong&gt;Matt R. Wilson&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/maxakuru"&gt;maxakuru&lt;/a&gt; - &lt;strong&gt;Max Edell&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mlrawlings"&gt;mlrawlings&lt;/a&gt; - &lt;strong&gt;Michael Rawlings&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rodion-arr"&gt;rodion-arr&lt;/a&gt; - &lt;strong&gt;Rodion Abdurakhimov&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sheplu"&gt;sheplu&lt;/a&gt; - &lt;strong&gt;Jean Burellier&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tarunyadav1"&gt;tarunyadav1&lt;/a&gt; - &lt;strong&gt;Tarun yadav&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tunniclm"&gt;tunniclm&lt;/a&gt; - &lt;strong&gt;Mike Tunnicliffe&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/enyoghasim"&gt;enyoghasim&lt;/a&gt; - &lt;strong&gt;David Enyoghasim&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/0ss"&gt;0ss&lt;/a&gt; - &lt;strong&gt;Salah&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/import-brain"&gt;import-brain&lt;/a&gt; - &lt;strong&gt;Eric Cheng&lt;/strong&gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dakshkhetan"&gt;dakshkhetan&lt;/a&gt; - &lt;strong&gt;Daksh Khetan&lt;/strong&gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lucasraziel"&gt;lucasraziel&lt;/a&gt; - &lt;strong&gt;Lucas Soares Do Rego&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mertcanaltin"&gt;mertcanaltin&lt;/a&gt; - &lt;strong&gt;Mert Can Altin&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>qeeqbox/social-analyzer</title>
      <link>https://github.com/qeeqbox/social-analyzer</link>
      <description>&lt;p&gt;API, CLI, and Web App for analyzing and finding a person's profile in 1000 social media \ websites&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/socialanalyzerlogo_.png" /&gt;&lt;/p&gt; 
&lt;p&gt;Social Analyzer - API, CLI, and Web App for analyzing &amp;amp; finding a person's profile across +1000 social media \ websites. It includes different analysis and detection modules, and you can choose which modules to use during the investigation process.&lt;/p&gt; 
&lt;p&gt;The detection modules utilize a rating mechanism based on different detection techniques, which produces a rate value that starts from 0 to 100 (No-Maybe-Yes). This module is intended to have fewer false positives.&lt;/p&gt; 
&lt;p&gt;The analysis and public extracted information from this OSINT tool could help investigate profiles related to suspicious or malicious activities such as cyberbullying, cyber grooming, cyberstalking, and spreading misinformation.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;This project is currently used by some law enforcement agencies in countries where resources are limited - The detection database is different than the one shared here..&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;So¬∑cial Me¬∑di¬∑a&lt;/h2&gt; 
&lt;p&gt;Websites and applications that enable users to create and share content or to participate in social networking - Oxford Dictionary&lt;/p&gt; 
&lt;h2&gt;Structure&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/structure.png" /&gt; 
&lt;h2&gt;APP (Preferred!)&lt;/h2&gt; 
&lt;p&gt;Standard localhost WEB APP url: &lt;a href="http://0.0.0.0:9005/app.html"&gt;http://0.0.0.0:9005/app.html&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/intro_fast.gif" style="max-width:768px" /&gt; 
&lt;h2&gt;CLI&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/cli.gif" style="max-width:768px" /&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;String &amp;amp; name analysis (Permutations and Combinations)&lt;/li&gt; 
 &lt;li&gt;Find a profile using multiple techniques (HTTPS library &amp;amp; Webdriver)&lt;/li&gt; 
 &lt;li&gt;Multi profile search (Used for correlation - any combination separated with "," )&lt;/li&gt; 
 &lt;li&gt;Multilayers detections (OCR, normal, advanced &amp;amp; special)&lt;/li&gt; 
 &lt;li&gt;Visualized profile information using Ixora (Metadata &amp;amp; Patterns)&lt;/li&gt; 
 &lt;li&gt;Metadata &amp;amp; Patterns extraction (Added from Qeeqbox OSINT project)&lt;/li&gt; 
 &lt;li&gt;Force-directed Graph for Metadata (Needs ExtractPatterns)&lt;/li&gt; 
 &lt;li&gt;Search by top ranking or by country (Alexa Ranking)&lt;/li&gt; 
 &lt;li&gt;Search by type (adult, music, etc.. - automated websites stats)&lt;/li&gt; 
 &lt;li&gt;Profiles stats and static info (Category country)&lt;/li&gt; 
 &lt;li&gt;Cross Metadata stats (Added from Qeeqbox OSINT project)&lt;/li&gt; 
 &lt;li&gt;Auto-flirtation to unnecessary output (Enable javascript etc..)&lt;/li&gt; 
 &lt;li&gt;Search engine lookup (Google API - optional)&lt;/li&gt; 
 &lt;li&gt;Custom search queries (Google API &amp;amp; DuckDuckGo API - optional)&lt;/li&gt; 
 &lt;li&gt;Profile screenshot, title, info, and website description&lt;/li&gt; 
 &lt;li&gt;Find name origins, name similarity &amp;amp; common words by language&lt;/li&gt; 
 &lt;li&gt;Find possible profile\person age (Limited analysis)&lt;/li&gt; 
 &lt;li&gt;Custom user-agent, proxy, timeout &amp;amp; implicit wait&lt;/li&gt; 
 &lt;li&gt;Python CLI &amp;amp; NodeJS CLI (limited to FindUserProfilesFast option)&lt;/li&gt; 
 &lt;li&gt;Screenshots of detected profile (The latest version of Chrome must be installed)&lt;/li&gt; 
 &lt;li&gt;Grid option for faster checking (limited to docker-compose)&lt;/li&gt; 
 &lt;li&gt;Dump logs to folder or terminal (prettified)&lt;/li&gt; 
 &lt;li&gt;Adjust finding\getting profile workers (default 15)&lt;/li&gt; 
 &lt;li&gt;Re-checking option for failed profiles&lt;/li&gt; 
 &lt;li&gt;Filter profiles by good, maybe, and bad&lt;/li&gt; 
 &lt;li&gt;Save the analysis as a JSON file&lt;/li&gt; 
 &lt;li&gt;Simplified web interface and CLI&lt;/li&gt; 
 &lt;li&gt;And, more!!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Special Detections&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Facebook (Phone number, name, or profile name)&lt;/li&gt; 
 &lt;li&gt;Gmail (&lt;a href="mailto:example@gmail.com"&gt;example@gmail.com&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Google (&lt;a href="mailto:example@example.com"&gt;example@example.com&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install &amp;amp; Run&lt;/h2&gt; 
&lt;h3&gt;Linux (As Node WebApp)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get update
#Depedning on your Linux distro, you may or may not need these 2 lines
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
sudo add-apt-repository ppa:mozillateam/ppa -y
sudo apt-get install -y firefox-esr tesseract-ocr git nodejs npm
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm update
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux (As Node CLI)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get update
#Depedning on your Linux distro, you may or may not need these 2 lines
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
sudo add-apt-repository ppa:mozillateam/ppa -y
sudo apt-get install -y firefox-esr tesseract-ocr git nodejs npm
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm install
nodejs app.js --username "johndoe"
#or
nodejs app.js --username "johndoe,janedoe" --metadata
#or
nodejs app.js --username "johndoe,janedoe" --metadata --top 100
#or
nodejs app.js --username "johndoe" --type "adult"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux (As python package)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get update
sudo apt-get install python3 python3-pip
pip3 install social-analyzer
python3 -m social-analyzer --username "johndoe"
#or
python3 -m social-analyzer --username "johndoe" --metadata
#or
python3 -m social-analyzer --username "johndoe" --metadata --top 100
#or
python3 -m social-analyzer --username "johndoe" --type "adult"
#or
python3 -m social-analyzer --username "johndoe" --websites "car" --logs --screenshots
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux (As python script)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get update
sudo apt-get install git python3 python3-pip
git clone https://github.com/qeeqbox/social-analyzer
cd social-analyzer
pip3 install -r requirements.txt
python3 app.py --username "janedoe"
#or
python3 app.py --username "johndoe" --metadata
#or
python3 app.py --username "johndoe" --metadata --top 100
#or
python3 app.py --username "johndoe" --type "adult"
#or
python3 app.py --username "johndoe" --websites "car" --logs --screenshots
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Importing as object (python)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;
#E.g. #1
from importlib import import_module
SocialAnalyzer = import_module("social-analyzer").SocialAnalyzer()
results = SocialAnalyzer.run_as_object(username="johndoe",silent=True)
print(results)

#E.g. #2
from importlib import import_module
SocialAnalyzer = import_module("social-analyzer").SocialAnalyzer()
results = SocialAnalyzer.run_as_object(username="johndoe,janedoe",silent=True,output="json",filter="good",metadata=False,timeout=10, profiles="detected")
print(results)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux, Windows, MacOS, Raspberry pi..&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;check this &lt;a href="https://github.com/qeeqbox/social-analyzer/wiki/install"&gt;wiki&lt;/a&gt; for all possible installation methods&lt;/li&gt; 
 &lt;li&gt;check this &lt;a href="https://github.com/qeeqbox/social-analyzer/wiki/integration"&gt;wiki&lt;/a&gt; for integrating social-analyzer with your OSINT tools, feeds, etc...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;social-analyzer --h&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Required Arguments:
  --username   E.g. johndoe, john_doe or johndoe9999

Optional Arguments:
  --websites    A website or websites separated by space E.g. youtube, tiktokor tumblr
  --mode        Analysis mode E.g.fast -&amp;gt; FindUserProfilesFast, slow -&amp;gt; FindUserProfilesSlow or special -&amp;gt; FindUserProfilesSpecial
  --output      Show the output in the following format: json -&amp;gt; json outputfor integration or pretty -&amp;gt; prettify the output
  --options     Show the following when a profile is found: link, rate, titleor text
  --method      find -&amp;gt; show detected profiles, get -&amp;gt; show all profiles regardless detected or not, all -&amp;gt; combine find &amp;amp; get
  --filter      Filter detected profiles by good, maybe or bad, you can do combine them with comma (good,bad) or use all
  --profiles    Filter profiles by detected, unknown or failed, you can do combine them with comma (detected,failed) or use all
  --countries   select websites by country or countries separated by space as: us br ru
  --type        Select websites by type (Adult, Music etc)
  --top         select top websites as 10, 50 etc...[--websites is not needed]
  --extract     Extract profiles, urls &amp;amp; patterns if possible
  --metadata    Extract metadata if possible (pypi QeeqBox OSINT)
  --trim        Trim long strings
  --gui         Reserved for a gui (Not implemented)
  --cli         Reserved for a cli (Not needed)

Listing websites &amp;amp; detections:
  --list        List all available websites

Setting:
  --headers     Headers as dict
  --logs_dir    Change logs directory
  --timeout     Change timeout between each request
  --silent      Disable output to screen
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Open Shell&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https://github.com/qeeqbox/social-analyzer&amp;amp;tutorial=README.md"&gt;&lt;img src="https://img.shields.io/static/v1?label=%3E_&amp;amp;message=Open%20in%20Cloud%20Shell&amp;amp;color=3267d6&amp;amp;style=flat-square" alt="Open in Cloud Shell" /&gt;&lt;/a&gt; &lt;a href="https://repl.it/github/qeeqbox/social-analyzer"&gt;&lt;img src="https://img.shields.io/static/v1?label=%3E_&amp;amp;message=Open%20in%20repl.it%20Shell&amp;amp;color=606c74&amp;amp;style=flat-square" alt="Open in repl.it Shell" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;DuckDuckGo API, Google API, NodeJS, bootstrap, selectize, jQuery, Wikipedia, font-awesome, selenium-webdriver &amp;amp; tesseract.js&lt;/li&gt; 
 &lt;li&gt;Let me know if I missed a reference or resource!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer\Notes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download this project from GitHub and treat it as a security project&lt;/li&gt; 
 &lt;li&gt;If you want your website to be excluded from this project list, please reach out to me&lt;/li&gt; 
 &lt;li&gt;This tool is meant to be used locally, not as a service (It does not have any Access Control)&lt;/li&gt; 
 &lt;li&gt;For issues related to modules that end with -private or under the private group &lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/modules.png" alt="" /&gt;, reach out directly to me (do not open an issue on GitHub)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Other Projects&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/qeeqbox/analyzer"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/analyzer.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/chameleon"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/chameleon.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/honeypots"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/honeypots.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/osint"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/osint.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/url-sandbox"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/url-sandbox.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/mitre-visualizer"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/mitre-visualizer.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/woodpecker"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/woodpecker.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/docker-images"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/docker-images.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/seahorse"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/seahorse.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/rhino"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/rhino.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/raven"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/raven.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/image-analyzer"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/image-analyzer.png" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mediacms-io/mediacms</title>
      <link>https://github.com/mediacms-io/mediacms</link>
      <description>&lt;p&gt;MediaCMS is a modern, fully featured open source video and media CMS, written in Python/Django and React, featuring a REST API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MediaCMS&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/badge/License-AGPL%20v3-blue.svg?sanitize=true" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mediacms-io/mediacms/releases/"&gt;&lt;img src="https://img.shields.io/github/v/release/mediacms-io/mediacms?color=green" alt="Releases" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/mediacms/mediacms"&gt;&lt;img src="https://img.shields.io/docker/pulls/mediacms/mediacms" alt="DockerHub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;MediaCMS is a modern, fully featured open source video and media CMS. It is developed to meet the needs of modern web platforms for viewing and sharing media. It can be used to build a small to medium video and media portal within minutes.&lt;/p&gt; 
&lt;p&gt;It is built mostly using the modern stack Django + React and includes a REST API.&lt;/p&gt; 
&lt;p&gt;A demo is available at &lt;a href="https://demo.mediacms.io"&gt;https://demo.mediacms.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/index.jpg" width="340" /&gt; &lt;img src="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/video.jpg" width="340" /&gt; &lt;img src="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/embed.jpg" width="340" /&gt; &lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Complete control over your data&lt;/strong&gt;: host it yourself!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modern technologies&lt;/strong&gt;: Django/Python/Celery, React.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support for multiple publishing workflows&lt;/strong&gt;: public, private, unlisted and custom&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Role-Based Access Control (RBAC)&lt;/strong&gt;: create RBAC categories and connect users to groups with view/edit access on their media&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic transcription&lt;/strong&gt;: through integration with Whisper running locally&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple media types support&lt;/strong&gt;: video, audio, image, pdf&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple media classification options&lt;/strong&gt;: categories, tags and custom&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple media sharing options&lt;/strong&gt;: social media share, videos embed code generation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Video Trimmer&lt;/strong&gt;: trim video, replace, save as new or create segments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SAML support&lt;/strong&gt;: with ability to add mappings to system roles and groups&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy media searching&lt;/strong&gt;: enriched with live search functionality&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Playlists for audio and video content&lt;/strong&gt;: create playlists, add and reorder content&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Responsive design&lt;/strong&gt;: including light and dark themes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced users management&lt;/strong&gt;: allow self registration, invite only, closed.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable actions&lt;/strong&gt;: allow download, add comments, add likes, dislikes, report media&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configuration options&lt;/strong&gt;: change logos, fonts, styling, add more pages&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced video player&lt;/strong&gt;: customized video.js player with multiple resolution and playback speed options&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple transcoding profiles&lt;/strong&gt;: sane defaults for multiple dimensions (144p, 240p, 360p, 480p, 720p, 1080p) and multiple profiles (h264, h265, vp9)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Adaptive video streaming&lt;/strong&gt;: possible through HLS protocol&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Subtitles/CC&lt;/strong&gt;: support for multilingual subtitle files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable transcoding&lt;/strong&gt;: transcoding through priorities. Experimental support for remote workers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chunked file uploads&lt;/strong&gt;: for pausable/resumable upload of content&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REST API&lt;/strong&gt;: Documented through Swagger&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Translation&lt;/strong&gt;: Most of the CMS is translated to a number of languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example cases&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Universities, schools, education.&lt;/strong&gt; Administrators and editors keep what content will be published, students are not distracted with advertisements and irrelevant content, plus they have the ability to select either to stream or download content.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Organization sensitive content.&lt;/strong&gt; In cases where content is sensitive and cannot be uploaded to external sites.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Build a great community.&lt;/strong&gt; MediaCMS can be customized (URLs, logos, fonts, aesthetics) so that you create a highly customized video portal for your community!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Personal portal.&lt;/strong&gt; Organize, categorize and host your content the way you prefer.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;We believe there's a need for quality open source web applications that can be used to build community portals and support collaboration. We have three goals for MediaCMS: a) deliver all functionality one would expect from a modern system, b) allow for easy installation and maintenance, c) allow easy customization and addition of features.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MediaCMS is released under &lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/LICENSE.txt"&gt;GNU Affero General Public License v3.0 license&lt;/a&gt;. Copyright Markos Gogoulos.&lt;/p&gt; 
&lt;h2&gt;Support and paid services&lt;/h2&gt; 
&lt;p&gt;We provide custom installations, development of extra functionality, migration from existing systems, integrations with legacy systems, training and support. Contact us at &lt;a href="mailto:info@mediacms.io"&gt;info@mediacms.io&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Commercial Hostings&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Elestio&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can deploy MediaCMS on Elestio using one-click deployment. Elestio supports MediaCMS by providing revenue share so go ahead and click below to deploy and use MediaCMS.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://elest.io/open-source/mediacms"&gt;&lt;img src="https://elest.io/images/logos/deploy-to-elestio-btn.png" alt="Deploy on Elestio" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Hardware considerations&lt;/h2&gt; 
&lt;p&gt;For a small to medium installation, with a few hours of video uploaded daily, and a few hundreds of active daily users viewing content, 4GB Ram / 2-4 CPUs as minimum is ok. For a larger installation with many hours of video uploaded daily, consider adding more CPUs and more Ram.&lt;/p&gt; 
&lt;p&gt;In terms of disk space, think of what the needs will be. A general rule is to multiply by three the size of the expected uploaded videos (since the system keeps original versions, encoded versions plus HLS), so if you receive 1G of videos daily and maintain all of them, you should consider a 1T disk across a year (1G * 3 * 365).&lt;/p&gt; 
&lt;p&gt;In order to support automatic transcriptions through Whisper, consider more CPUs.&lt;/p&gt; 
&lt;h2&gt;Installation / Maintanance&lt;/h2&gt; 
&lt;p&gt;There are two ways to run MediaCMS, through Docker Compose and through installing it on a server via an automation script that installs and configures all needed services. Find the related pages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md#2-server-installation"&gt;Single Server&lt;/a&gt; page&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md#3-docker-installation"&gt;Docker Compose&lt;/a&gt; page&lt;/p&gt; &lt;p&gt;A complete guide can be found on the blog post &lt;a href="https://medium.com/@MediaCMS.io/how-to-self-host-and-share-your-videos-in-2021-14067e3b291b"&gt;How to self-host and share your videos in 2021&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/user_docs.md"&gt;Users documentation&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md"&gt;Administrators documentation&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/developers_docs.md"&gt;Developers documentation&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md#5-configuration"&gt;Configuration&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/transcoding.md"&gt;Transcoding&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/dev_exp.md"&gt;Developer Experience&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/media_permissions.md"&gt;Media Permissions&lt;/a&gt; page&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technology&lt;/h2&gt; 
&lt;p&gt;This software uses the following list of awesome technologies: Python, Django, Django Rest Framework, Celery, PostgreSQL, Redis, Nginx, uWSGI, React, Fine Uploader, video.js, FFMPEG, Bento4&lt;/p&gt; 
&lt;h2&gt;Who is using it&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple Universities&lt;/strong&gt; for hosting educational videos&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cinemata&lt;/strong&gt; non-profit media, technology and culture organization - &lt;a href="https://cinemata.org"&gt;https://cinemata.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Critical Commons&lt;/strong&gt; public media archive and fair use advocacy network - &lt;a href="https://criticalcommons.org"&gt;https://criticalcommons.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;American Association of Gynecologic Laparoscopists&lt;/strong&gt; - &lt;a href="https://surgeryu.org/"&gt;https://surgeryu.org/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to contribute&lt;/h2&gt; 
&lt;p&gt;If you like the project, here's a few things you can do&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hire us, for custom installations, training, support, maintenance work&lt;/li&gt; 
 &lt;li&gt;Suggest us to others that are interested to hire us&lt;/li&gt; 
 &lt;li&gt;Write a blog post/article about MediaCMS&lt;/li&gt; 
 &lt;li&gt;Share on social media about the project&lt;/li&gt; 
 &lt;li&gt;Open issues, participate on &lt;a href="https://github.com/mediacms-io/mediacms/discussions"&gt;discussions&lt;/a&gt;, report bugs, suggest ideas&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mediacms-io/mediacms/discussions/categories/show-and-tell"&gt;Show and tell&lt;/a&gt; how you are using the project&lt;/li&gt; 
 &lt;li&gt;Star the project&lt;/li&gt; 
 &lt;li&gt;Add functionality, work on a PR, fix an issue!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;&lt;a href="mailto:info@mediacms.io"&gt;info@mediacms.io&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>leonardomso/33-js-concepts</title>
      <link>https://github.com/leonardomso/33-js-concepts</link>
      <description>&lt;p&gt;üìú 33 JavaScript concepts every developer should know.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;br /&gt; &lt;a href="https://github.com/leonardomso/33"&gt;&lt;img src="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/github-image.png" alt="33 Concepts Every JS Developer Should Know" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;33 Concepts Every JavaScript Developer Should Know&lt;/strong&gt; &lt;br /&gt;&lt;br /&gt; &lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt; &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#introduction"&gt;Introduction&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#community"&gt;Community&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;Table of Contents&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#license"&gt;License&lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt;üöÄ Considered by GitHub as one of the &lt;a href="https://blog.github.com/2018-12-13-new-open-source-projects/"&gt;top open source projects of 2018!&lt;/a&gt;&lt;/strong&gt; 
&lt;/div&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by Stephen Curtis and you can read it &lt;a href="https://medium.com/@stephenthecurt/33-fundamentals-every-javascript-developer-should-know-13dd720a90d1"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Feel free to submit a PR by adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so.&lt;/p&gt; 
&lt;p&gt;All the translations for this repo will be listed below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amrsekilly/33-js-concepts"&gt;ÿßŸéŸÑŸíÿπŸéÿ±Ÿéÿ®ŸêŸäŸéŸëÿ©Ÿè‚Äé (Arabic)&lt;/a&gt; ‚Äî Amr Elsekilly&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thewebmasterp/33-js-concepts"&gt;–ë—ä–ª–≥–∞—Ä—Å–∫–∏ (Bulgarian)&lt;/a&gt; - thewebmasterp&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stephentian/33-js-concepts"&gt;Ê±âËØ≠ (Chinese)&lt;/a&gt; ‚Äî Re Tian&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiagoboeing/33-js-concepts"&gt;Portugu√™s do Brasil (Brazilian Portuguese)&lt;/a&gt; ‚Äî Tiago Boeing&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yjs03057/33-js-concepts.git"&gt;ÌïúÍµ≠Ïñ¥ (Korean)&lt;/a&gt; ‚Äî Suin Lee&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adonismendozaperez/33-js-conceptos"&gt;Espa√±ol (Spanish)&lt;/a&gt; ‚Äî Adonis Mendoza&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ilker0/33-js-concepts"&gt;T√ºrk√ße (Turkish)&lt;/a&gt; ‚Äî ƒ∞lker Demir&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gumennii/33-js-concepts"&gt;—Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ (Russian)&lt;/a&gt; ‚Äî Mihail Gumennii&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nguyentranchung/33-js-concepts"&gt;Ti·∫øng Vi·ªát (Vietnamese)&lt;/a&gt; ‚Äî Nguy·ªÖn Tr·∫ßn Chung&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lip3k/33-js-concepts"&gt;Polski (Polish)&lt;/a&gt; ‚Äî Dawid Lipinski&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/majidalavizadeh/33-js-concepts"&gt;ŸÅÿßÿ±ÿ≥€å (Persian)&lt;/a&gt; ‚Äî Majid Alavizadeh&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rijdz/33-js-concepts"&gt;Bahasa Indonesia (Indonesian)&lt;/a&gt; ‚Äî Rijdzuan Sampoerna&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/robinmetral/33-concepts-js"&gt;Fran√ßais (French)&lt;/a&gt; ‚Äî Robin M√©tral&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vikaschauhan/33-js-concepts"&gt;‡§π‡§ø‡§®‡•ç‡§¶‡•Ä (Hindi)&lt;/a&gt; ‚Äî Vikas Chauhan&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DimitrisZx/33-js-concepts"&gt;ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨ (Greek)&lt;/a&gt; ‚Äî Dimitris Zarachanis&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oimo23/33-js-concepts"&gt;Êó•Êú¨Ë™û (Japanese)&lt;/a&gt; ‚Äî oimo23&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/burhannn/33-js-concepts"&gt;Deutsch (German)&lt;/a&gt; ‚Äî burhannn&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AndrewSavetchuk/33-js-concepts-ukrainian-translation"&gt;—É–∫—Ä–∞—óÃÅ–Ω—Å—å–∫–∞ –º–æÃÅ–≤–∞ (Ukrainian)&lt;/a&gt; ‚Äî Andrew Savetchuk&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ududsha/33-js-concepts"&gt;‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω (Sinhala)&lt;/a&gt; ‚Äî Udaya Shamendra&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Donearm/33-js-concepts"&gt;Italiano (Italian)&lt;/a&gt; ‚Äî Gianluca Fiore&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ANormalStick/33-js-concepts"&gt;Latvie≈°u (Latvian)&lt;/a&gt; - JƒÅnis ƒ™vƒÅns&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Amandagne/33-js-concepts"&gt;Afaan Oromoo (Oromo)&lt;/a&gt; - Amanuel Dagnachew&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ninearif/33-js-concepts"&gt;‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (Thai)&lt;/a&gt; ‚Äî Arif Waram&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marioestradaf/33-js-concepts"&gt;Catal√† (Catalan)&lt;/a&gt; ‚Äî Mario Estrada&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/FenixHongell/33-js-concepts/"&gt;Svenska (Swedish)&lt;/a&gt; ‚Äî Fenix Hongell&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Chhunneng/33-js-concepts"&gt;·ûÅ·üí·ûò·üÇ·ûö (Khmer)&lt;/a&gt; ‚Äî Chrea Chanchhunneng&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hmhard/33-js-concepts"&gt;·ä†·àõ·à≠·äõ (Ethiopian)&lt;/a&gt; - Miniyahil Kebede(·àù·äï·ã´·àÖ·àç ·ä®·â†·ã∞)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Yafimau/33-js-concepts"&gt;–ë–µ–ª–∞—Ä—É—Å–∫–∞—è –º–æ–≤–∞ (Belarussian)&lt;/a&gt; ‚Äî Dzianis Yafimau&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/smnv-shokh/33-js-concepts"&gt;O'zbekcha (Uzbek)&lt;/a&gt; ‚Äî Shokhrukh Usmonov&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sudoyasir/33-js-concepts"&gt;Urdu (ÿßÿ±ÿØŸà)&lt;/a&gt; ‚Äî Yasir Nawaz&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/milostivyy/33-js-concepts"&gt;‡§π‡§ø‡§®‡•ç‡§¶‡•Ä (Hindi)&lt;/a&gt; ‚Äî Mahima Chauhan&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jisan-mia/33-js-concepts"&gt;‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ (Bengali)&lt;/a&gt; ‚Äî Jisan Mia&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VatsalBhuva11/33-js-concepts"&gt;‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä (Gujarati)&lt;/a&gt; ‚Äî Vatsal Bhuva&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sunny-unik/33-js-concepts"&gt;ÿ≥ŸÜ⁄åŸä (Sindhi)&lt;/a&gt; ‚Äî Sunny Gandhwani&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/debnath003/33-js-concepts"&gt;‡§≠‡•ã‡§ú‡§™‡•Å‡§∞‡•Ä (Bhojpuri)&lt;/a&gt; ‚Äî Pronay Debnath&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Harshdev098/33-js-concepts"&gt;‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä (Punjabi)&lt;/a&gt; ‚Äî Harsh Dev Pathak&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Harshdev098/33-js-concepts"&gt;Latin (Latin)&lt;/a&gt; ‚Äî Harsh Dev Pathak&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Stark-Akshay/33-js-concepts"&gt;‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç (Malayalam)&lt;/a&gt; ‚Äî Akshay Manoj&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ayobaj/33-js-concepts"&gt;Yor√πb√° (Yoruba)&lt;/a&gt; - Ayomide Bajulaye&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafyzg/33-js-concepts"&gt;◊¢◊ë◊®◊ô◊™‚Äé (Hebrew)&lt;/a&gt; ‚Äî Refael Yzgea&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dlvisser/33-js-concepts"&gt;Nederlands (Dutch)&lt;/a&gt; ‚Äî Dave Visser&lt;/li&gt; 
 &lt;li&gt;[‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç (Tamil)] (&lt;a href="https://github.com/UdayaKrishnanM/33-js-concepts"&gt;https://github.com/UdayaKrishnanM/33-js-concepts&lt;/a&gt;) - Udaya Krishnan M&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;&lt;img align="center" width="35" height="35" src="https://media4.giphy.com/media/3hoLIVAJYkz6T0Ichp/giphy.gif" /&gt; &lt;a id="table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#1-call-stack"&gt;&lt;strong&gt;Call Stack&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#2-primitive-types"&gt;&lt;strong&gt;Primitive Types&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#3-value-types-and-reference-types"&gt;&lt;strong&gt;Value Types and Reference Types&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#4-implicit-explicit-nominal-structuring-and-duck-typing"&gt;&lt;strong&gt;Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#5--vs--vs-typeof"&gt;&lt;strong&gt;== vs === vs typeof&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#6-function-scope-block-scope-and-lexical-scope"&gt;&lt;strong&gt;Function Scope, Block Scope and Lexical Scope&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#7-expression-vs-statement"&gt;&lt;strong&gt;Expression vs Statement&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#8-iife-modules-and-namespaces"&gt;&lt;strong&gt;IIFE, Modules and Namespaces&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#9-message-queue-and-event-loop"&gt;&lt;strong&gt;Message Queue and Event Loop&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#10-settimeout-setinterval-and-requestanimationframe"&gt;&lt;strong&gt;setTimeout, setInterval and requestAnimationFrame&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#11-javascript-engines"&gt;&lt;strong&gt;JavaScript Engines&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#12-bitwise-operators-type-arrays-and-array-buffers"&gt;&lt;strong&gt;Bitwise Operators, Type Arrays and Array Buffers&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#13-dom-and-layout-trees"&gt;&lt;strong&gt;DOM and Layout Trees&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#14-factories-and-classes"&gt;&lt;strong&gt;Factories and Classes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#15-this-call-apply-and-bind"&gt;&lt;strong&gt;this, call, apply and bind&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#16-new-constructor-instanceof-and-instances"&gt;&lt;strong&gt;new, Constructor, instanceof and Instances&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#17-prototype-inheritance-and-prototype-chain"&gt;&lt;strong&gt;Prototype Inheritance and Prototype Chain&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#18-objectcreate-and-objectassign"&gt;&lt;strong&gt;Object.create and Object.assign&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#19-map-reduce-filter"&gt;&lt;strong&gt;map, reduce, filter&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#20-pure-functions-side-effects-state-mutation-and-event-propagation"&gt;&lt;strong&gt;Pure Functions, Side Effects, State Mutation and Event Propagation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#21-closures"&gt;&lt;strong&gt;Closures&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#22-high-order-functions"&gt;&lt;strong&gt;High Order Functions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#23-recursion"&gt;&lt;strong&gt;Recursion&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#24-collections-and-generators"&gt;&lt;strong&gt;Collections and Generators&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#25-promises"&gt;&lt;strong&gt;Promises&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#26-asyncawait"&gt;&lt;strong&gt;async/await&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#27-data-structures"&gt;&lt;strong&gt;Data Structures&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#28-expensive-operation-and-big-o-notation"&gt;&lt;strong&gt;Expensive Operation and Big O Notation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#29-algorithms"&gt;&lt;strong&gt;Algorithms&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#30-inheritance-polymorphism-and-code-reuse"&gt;&lt;strong&gt;Inheritance, Polymorphism and Code Reuse&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#31-design-patterns"&gt;&lt;strong&gt;Design Patterns&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#32-partial-applications-currying-compose-and-pipe"&gt;&lt;strong&gt;Partial Applications, Currying, Compose and Pipe&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#33-clean-code"&gt;&lt;strong&gt;Clean Code&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h2&gt;1. Call Stack&lt;/h2&gt; 
&lt;p&gt;The call stack is a mechanism that the JavaScript interpreter uses to keep track of function execution within a program. In JavaScript, functions are executed in the order they are called. The call stack follows the Last In, First Out (LIFO) principle, meaning that the last function pushed onto the stack is the first one to be executed.&lt;/p&gt; 
&lt;p&gt;According to the ECMAScript specification, the call stack is defined as part of the execution context. Whenever a function is called, a new execution context is created and placed at the top of the stack. Once the function completes, its execution context is removed from the stack, and control returns to the previous context. This helps manage synchronous code execution, as each function call must complete before the next one can begin.&lt;/p&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Call_stack"&gt;Call Stack ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@gaurav.pandvia/understanding-javascript-function-executions-tasks-event-loop-call-stack-more-part-1-5683dea1f5ec"&gt;Understanding Javascript Call Stack, Event Loops ‚Äî Gaurav Pandvia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/understanding-the-javascript-call-stack-861e41ae61d4"&gt;Understanding the JavaScript Call Stack ‚Äî Charles Freeborn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@valentinog/javascript-what-is-the-execution-context-what-is-the-call-stack-bd23c78f10d1"&gt;Javascript: What Is The Execution Context? What Is The Call Stack? ‚Äî Valentino Gagliardi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/jesstelford/9a35d20a2aa044df8bf241e00d7bc2d0"&gt;What is the JS Event Loop and Call Stack? ‚Äî Jess Telford&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0"&gt;Understanding Execution Context and Execution Stack in Javascript ‚Äî Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/bipinrajbhar/how-javascript-works-under-the-hood-an-overview-of-javascript-engine-heap-and-call-stack-1j5o"&gt;How JavaScript Works Under The Hood: An Overview of JavaScript Engine, Heap and, Call Stack ‚Äî Bipin Rajbhar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=W8AeMrVtFLY"&gt;The JS Call stack Explained in 9 minutes&lt;/a&gt; - Colt Steel (YouTube)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w6QGEiQceOM"&gt;Javascript: the Call Stack explained ‚Äî Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=W8AeMrVtFLY"&gt;The JS Call Stack Explained In 9 Minutes ‚Äî Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w7QWQlkLY_s"&gt;What is the Call Stack? ‚Äî Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Q2sFmqvpBe0"&gt;The Call Stack ‚Äî Kevin Drumm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Z6a1cLyq7Ac&amp;amp;list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD"&gt;Understanding JavaScript Execution ‚Äî Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ"&gt;What the heck is the event loop anyway? ‚Äî Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iLWTnMzWtj4&amp;amp;list=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP"&gt;How JavaScript Code is executed? ‚ù§Ô∏è&amp;amp; Call Stack ‚Äî Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aCPkszeKRa4"&gt;Call Stacks - CS50&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HXqXPGS96rw"&gt;Learn the JavaScript Call Stack - codecupdev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=P6H-T4cUDR4"&gt;JavaScript Functions and the Call Stack | How does the Call stack work - Chidre'sTechTutorials&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;2. Primitive Types&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, JavaScript has six primitive data types: string, number, bigint, boolean, undefined, and symbol. These types are immutable, meaning their values cannot be altered. There is also a special primitive type called null, which represents the intentional absence of any object value.&lt;/p&gt; 
&lt;p&gt;Primitive values are directly assigned to a variable, and when you manipulate a primitive type, you're working directly on the value. Unlike objects, primitives do not have properties or methods, but JavaScript automatically wraps primitive values with object counterparts when necessary (e.g., when calling methods on strings).&lt;/p&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values"&gt;JavaScript data types and data structures ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/primitive-and-non-primitive-data-types-in-javascript"&gt;Primitive and Non-primitive data-types in JavaScript - GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://2ality.com/2012/04/number-encoding.html"&gt;How numbers are encoded in JavaScript ‚Äî Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.chewxy.com/2014/02/24/what-every-javascript-developer-should-know-about-floating-point-numbers/"&gt;What Every JavaScript Developer Should Know About Floating Point Numbers ‚Äî Chewxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/"&gt;The Secret Life of JavaScript Primitives ‚Äî Angus Croll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flow.org/en/docs/types/primitives/"&gt;Primitive Types ‚Äî Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/d4nyll/not-everything-in-javascript-is-an-object"&gt;(Not) Everything in JavaScript is an Object ‚Äî Daniel Li&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values"&gt;JavaScript data types and data structures ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/diving-deeper-in-javascripts-objects-318b1e13dc12"&gt;Diving Deeper in JavaScripts Objects ‚Äî Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@bolajiayodeji/the-differences-between-object-freeze-vs-const-in-javascript-4eacea534d7c"&gt;The differences between Object.freeze() vs Const in JavaScript ‚Äî Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/object-toprimitive"&gt;Object to primitive conversion ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/primitives-methods"&gt;Methods of primitives - Javascript.info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9ooYYRLdg_g"&gt;JavaScript Reference vs Primitive Types ‚Äî Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HsbWQsSCE5Y"&gt;JavaScript Primitive Types ‚Äî Simon Sez IT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=e-_mDyqm2oU"&gt;Value Types and Reference Types in JavaScript ‚Äî Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qw3j0A3DIzQ"&gt;JavaScript Primitive Data Types ‚Äî Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=MqHDDtVYJRI"&gt;Everything you never wanted to know about JavaScript numbers ‚Äî Bartek Szopka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=B4Bbmei_thw"&gt;What are variables in Javascript? ‚Äî JS For Everyone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cC65D2q5f8I"&gt;TIPOS DE DATOS PRIMITIVOS en JAVASCRIPT - La Cocina del C√≥digo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aFDvBjVjCh8"&gt;Data Type in JavaScript - ScholarHat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;3. Value Types and Reference Types&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, value types are stored directly in the location that the variable accesses. These include types like number, string, boolean, undefined, bigint, symbol, and null. When you assign a value type to a variable, the value itself is stored.&lt;/p&gt; 
&lt;p&gt;Reference types, on the other hand, are objects stored in the heap. Variables assigned to reference types actually store references (pointers) to the objects, not the objects themselves. When you assign a reference type to another variable, both variables reference the same object in memory.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/explaining-value-vs-reference-in-javascript-647a975e12a0"&gt;Explaining Value vs. Reference in Javascript ‚Äî Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/branneman/7fb06d8a74d7e6d4cbcf75c50fec599c"&gt;Primitive Types &amp;amp; Reference Types in JavaScript ‚Äî Bran van der Meer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@benastontweet/lesson-1b-javascript-fundamentals-380f601ba851"&gt;Value Types, Reference Types and Scope in JavaScript ‚Äî Ben Aston&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/back-to-roots-javascript-value-vs-reference-8fb69d587a18"&gt;Back to roots: JavaScript Value vs Reference ‚Äî Miro Koczka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/grasp-by-value-and-by-reference-in-javascript-7ed75efa1293"&gt;Grasp "By Value" and "By Reference" in JavaScript ‚Äî L√©na Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-reference-and-copy-variables-b0103074fdf0"&gt;JavaScript Reference and Copy Variables ‚Äî V√≠tor Capretz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.javascripttutorial.net/javascript-primitive-vs-reference-values/"&gt;JavaScript Primitive vs Reference Values&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/6605640/javascript-by-reference-vs-by-value"&gt;JavaScript by Reference vs. by Value ‚Äî nrabinowitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/mostlyfocusedmike/javascript-interview-prep-primitive-vs-reference-types-3o4f"&gt;JavaScript Interview Prep: Primitive vs. Reference Types ‚Äî Mike Cronin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.tutsplus.com/tutorials/javascript-map-vs-foreach-when-to-use-each-one--cms-38365"&gt;JavaScript map vs. forEach: When to Use Each One - Sajal Soni&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=E-dAnFdq8k8"&gt;Javascript Pass by Value vs Pass by Reference ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fD0t_DKREbE"&gt;JavaScript Value vs Reference Types ‚Äî Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AvkyOrWkuQc"&gt;VALORES vs REFERENCIAS en JAVASCRIPT - La Cocina del C√≥digo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9ooYYRLdg_g"&gt;JavaScript - Reference vs Primitive Values/ Types - Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=e-_mDyqm2oU"&gt;Value Types and Reference Types in JavaScript - Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;4. Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/h2&gt; 
&lt;p&gt;The ECMAScript specification defines JavaScript as a dynamically typed language, meaning that types are associated with values rather than variables, and type checking occurs at runtime. There are various ways JavaScript manages types:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Implicit Typing (or Type Coercion):&lt;/strong&gt; This occurs when JavaScript automatically converts one data type to another when required. For instance, JavaScript might convert a string to a number during an arithmetic operation. While this can simplify some code, it can also lead to unexpected results if not handled carefully.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Explicit Typing:&lt;/strong&gt; Unlike implicit typing, explicit typing involves manually converting a value from one type to another using functions like Number(), String(), or Boolean().&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Nominal Typing:&lt;/strong&gt; JavaScript doesn't natively support nominal typing, where types are explicitly declared and checked. However, TypeScript, a superset of JavaScript, brings this feature to help catch type errors during development.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structural Typing:&lt;/strong&gt; In this type system, types are based on the structure or properties of the data. JavaScript is a structurally typed language where objects are compatible if they share the same structure (i.e., the same set of properties and methods).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Duck Typing:&lt;/strong&gt; This is a concept where an object's suitability is determined by the presence of certain properties and methods, rather than by the actual type of the object. JavaScript relies heavily on duck typing, where behavior is inferred from an object's properties rather than its declared type.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/promhize/what-you-need-to-know-about-javascripts-implicit-coercion-e23"&gt;What you need to know about Javascript's Implicit Coercion ‚Äî Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/js-type-coercion-explained-27ba3d9a2839"&gt;JavaScript Type Coercion Explained ‚Äî Alexey Samoshkin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-coercion-explained-545c895213d3"&gt;Javascript Coercion Explained ‚Äî Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript"&gt;What exactly is Type Coercion in Javascript? - Stack Overflow&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qGyqzN0bjhc&amp;amp;t"&gt;== ? === ??? ...#@^% - Shirmung Bielefeld&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=b04Q_vyqEG8"&gt;Coercion in Javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=z4-8wMSPJyI"&gt;JavaScript Questions: What is Coercion? - Steven Hancock&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=C5fr0LZLMAs"&gt;Typing: Static vs Dynamic, Weak vs. Strong - Codexpanse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0ei4nb49GKo"&gt;EL SISTEMA de TIPOS DE JAVASCRIPT - La Cocina del C√≥digo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oEpgyoMEkrM"&gt;Duck Typing in Javascript - Techmaker Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/e4X1KAuk6Bs?si=krZKbsM2i3tmIl2G"&gt;Duck Typing in Javascript - Programming with Kartik&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS/tree/1st-ed"&gt;You Don't Know JS, 1st Edition: Types &amp;amp; Grammar ‚Äî Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;5. == vs === vs typeof&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, JavaScript includes both strict (===) and loose (==) equality operators, which behave differently when comparing values. Here's a breakdown:&lt;/p&gt; 
&lt;p&gt;== (Loose Equality): This operator performs type coercion before comparing two values. If the values are of different types, JavaScript will attempt to convert one or both values to a common type before comparison, which can lead to unexpected results.&lt;/p&gt; 
&lt;p&gt;=== (Strict Equality): This operator compares both the value and the type without any type coercion. If the two values are not of the same type, the comparison will return false.&lt;/p&gt; 
&lt;p&gt;typeof Operator: The typeof operator is used to check the data type of a variable. While it's generally reliable, there are certain quirks, like how typeof null returns "object" instead of "null", due to a long-standing behavior in JavaScript's implementation.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-double-equals-vs-triple-equals-61d4ce5a121a"&gt;JavaScript Double Equals vs. Triple Equals ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bytearcher.com/articles/equality-comparison-operator-javascript/"&gt;Should I use === or == equality comparison operator in JavaScript? ‚Äî Panu Pitkamaki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.impressivewebs.com/why-use-triple-equals-javascipt/"&gt;Why Use the Triple-Equals Operator in JavaScript? ‚Äî Louis Lazaris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oreilly.com/learning/what-is-the-difference-between-and-in-javascript"&gt;What is the difference between == and === in JavaScript? ‚Äî Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/3787901/why-javascripts-typeof-always-return-object"&gt;Why javascript's typeof always return "object"? ‚Äî Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://tobyho.com/2011/01/28/checking-types-in-javascript/"&gt;Checking Types in Javascript ‚Äî Toby Ho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://webbjocke.com/javascript-check-data-types/"&gt;How to better check data types in JavaScript ‚Äî Webbjocke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tomeraberba.ch/html/post/checking-for-the-absence-of-a-value-in-javascript.html"&gt;Checking for the Absence of a Value in JavaScript ‚Äî Tomer Aberbach&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.scaler.com/topics/javascript/difference-between-double-equals-and-triple-equals-in-javascript/"&gt;Difference Between == and === in Javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/difference-between-double-equal-vs-triple-equal-javascript/"&gt;Difference between == and === in JavaScript ‚Äî GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-triple-equals-sign-vs-double-equals-sign-comparison-operators-explained-with-examples/"&gt;=== vs == Comparision in JavaScript ‚Äî FreeCodeCamp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ol_su88I3kw"&gt;JavaScript - The typeof operator ‚Äî Java Brains&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qPYhTPt_SbQ"&gt;Javascript typeof operator ‚Äî DevDelight&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=C5ZVC4HHgIg"&gt;JavaScript "==" VS "===" ‚Äî Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=a0S1iG3TgP0"&gt;=== vs == in javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=NSS5WRcv7yM"&gt;The typeof operator in JS - CodeVault&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;6. Function Scope, Block Scope and Lexical Scope&lt;/h2&gt; 
&lt;p&gt;The ECMAScript specification outlines three key types of scope:&lt;/p&gt; 
&lt;p&gt;Function Scope: Variables declared within a function using var are only accessible within that function. This scope isolates variables from being accessed outside of the function where they are declared.&lt;/p&gt; 
&lt;p&gt;Block Scope: Introduced with ES6, variables declared with let and const are block-scoped. This means they are only accessible within the specific block {} in which they are defined, such as inside loops or conditionals.&lt;/p&gt; 
&lt;p&gt;Lexical Scope: Refers to how variable access is determined based on the physical location of the variables in the code. Functions are lexically scoped, meaning that they can access variables from their parent scope.&lt;/p&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS/tree/2nd-ed/scope-closures"&gt;You Don't Know JS Yet, 2nd Edition: Scope &amp;amp; Closures ‚Äî Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-functions-understanding-the-basics-207dbf42ed99"&gt;JavaScript Functions ‚Äî Understanding The Basics ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/var-let-and-const-whats-the-difference/"&gt;Var, Let, and Const ‚Äì What's the Difference?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.scaler.com/topics/javascript/javascript-functions/"&gt;Functions in JavaScript - Deepa Pandey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://adripofjavascript.com/blog/drips/emulating-block-scope-in-javascript.html"&gt;Emulating Block Scope in JavaScript ‚Äî Josh Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@josephcardillo/the-difference-between-function-and-block-scope-in-javascript-4296b2322abe"&gt;The Difference Between Function and Block Scope in JavaScript ‚Äî Joseph Cardillo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://ryanmorr.com/understanding-scope-and-context-in-javascript/"&gt;Understanding Scope and Context in JavaScript ‚Äî Ryan Morr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/javascript-scope-closures/"&gt;JavaScript Scope and Closures ‚Äî Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.telerik.com/topics/web-development/understanding-scope-in-javascript/"&gt;Understanding Scope in JavaScript ‚Äî Wissam Abirached&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/understanding-scope-in-javascript"&gt;Understanding Scope in JavaScript ‚Äï Hammad Ahmed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/when-to-use-a-function-declarations-vs-a-function-expression-70f15152a0a0"&gt;When to use a function declaration vs. a function expression ‚Äï Amber Wilkie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/alexandrafren/a-javascript-fundamentals-cheat-sheet-scope-context-and-this-28ai"&gt;A JavaScript Fundamentals Cheat Sheet: Scope, Context, and "this" ‚Äï Alexandra Fren&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions#function_scope"&gt;Functions / Function scope ‚Äï MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SBwoFkRjZvE"&gt;What Makes Javascript Weird ... and Awesome pt. 4 ‚Äî LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dhp57T3p760"&gt;Variable Scope in JavaScript ‚Äî Kirupa Chinnathambi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aK_nuUAdr8E"&gt;JavaScript Block Scope and Function Scope ‚Äî mmtuts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GhNA0r10MmA"&gt;What the Heck is Lexical Scope? ‚Äî NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FyWdrCZZavQ"&gt;Variable Scope ‚Äî Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=W6NZfCO5SIk"&gt;Javascript Tutorials for Beginners ‚Äî Mosh Hemadani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IaTztAtoNEY"&gt;JavaScript Block scope vs Function scope - nivek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qT5S7GgIioE"&gt;Lexical scoping in javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zMseUdOR7z8"&gt;Modern Scope Handling in JavaScript (ES6 and Beyond) -Prashant Dewangan &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;7. Expression vs Statement&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, expressions produce a value, and statements are instructions to perform an action, such as variable assignment or control flow. Function declarations are hoisted and can be called before they are defined in the code, while function expressions are not hoisted and must be defined before being invoked.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/promhize/javascript-in-depth-all-you-need-to-know-about-expressions-statements-and-expression-statements-5k2"&gt;All you need to know about Javascript's Expressions, Statements and Expression Statements ‚Äî Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/function-expressions-vs-declarations/"&gt;Function Expressions vs Function Declarations ‚Äî Paul Wilkins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@raviroshan.talk/javascript-function-declaration-vs-expression-f5873b8c7b38"&gt;JavaScript Function ‚Äî Declaration vs Expression ‚Äî Ravi Roshan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@mandeep1012/function-declarations-vs-function-expressions-b43646042052"&gt;Function Declarations vs. Function Expressions ‚Äî Mandeep Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/"&gt;Function Declarations vs. Function Expressions ‚Äî Anguls Croll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Expression_statement"&gt;Expression statement ‚Äî MDN web docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=WVyCrI1cHi8"&gt;Expressions vs. Statements in JavaScript ‚Äî Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3jDpNGJkupA"&gt;JavaScript - Expression vs. Statement ‚Äî WebTunings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qz7Nq1tV7Io"&gt;Javascript Function Expression Vs Declaration For Beginners ‚Äî Dev Material&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/eWTuFoBYiwg"&gt;The difference between an expression and a statement in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cVDs3TZ-kXs"&gt;Expression in javascript | Statement in javascript - Sathelli Srikanth&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;8. IIFE, Modules and Namespaces&lt;/h2&gt; 
&lt;p&gt;With the introduction of ES6 modules, the role of IIFEs in scope isolation has diminished but they still remain relevant.&lt;/p&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/IIFE"&gt;IIFE ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/modularity"&gt;Modularity ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Namespace"&gt;Namespace ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@vvkchandra/essential-javascript-mastering-immediately-invoked-function-expressions-67791338ddc6"&gt;Mastering Immediately-Invoked Function Expressions ‚Äï Chandra Gundamaraju&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.javascripttutorial.net/javascript-immediately-invoked-function-expression-iife/"&gt;JavaScript Immediately Invoked Function Expression ‚Äî javascripttutorial.net&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jvandemo.com/a-10-minute-primer-to-javascript-modules-module-formats-module-loaders-and-module-bundlers/"&gt;A 10 minute primer to JavaScript modules, module formats, module loaders and module bundlers ‚Äï Jurgen Van de Moere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://exploringjs.com/es6/ch_modules.html"&gt;Modules ‚Äï Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/understanding-es6-modules/"&gt;Understanding ES6 Modules ‚Äî Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.cloud66.com/an-overview-of-es6-modules-in-javascript/"&gt;An overview of ES6 Modules in JavaScript ‚Äî Brent Graham&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-modules-in-depth"&gt;ES6 Modules in Depth ‚Äî Nicol√°s Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/es6-modules-node-js-and-the-michael-jackson-solution-828dc244b8b"&gt;ES6 modules, Node.js and the Michael Jackson Solution ‚Äî Alberto Gimeno&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/javascript-modules-a-beginner-s-guide-783f7d7a5fcc"&gt;JavaScript Modules: A Beginner's Guide ‚Äî Preethi Kasireddy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/web/fundamentals/primers/modules"&gt;Using JavaScript modules on the web ‚Äî Addy Osmani &amp;amp; Mathias Bynens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/bhagatparwinder/iife-immediately-invoked-function-expressions-49c5"&gt;IIFE: Immediately Invoked Function Expressions ‚Äî Parwinder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sassy-butter-197.notion.site/Javascript-bundlers-016932b17b0744e983c2cc0db31e6f02"&gt;Javascript Module Bundlers ‚Äî Vanshu Hassija&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3cbiZV4H22c"&gt;Immediately Invoked Function Expression - Beau teaches JavaScript ‚Äî freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=I5EntfMeIIQ"&gt;Understanding JavaScript IIFE ‚Äî Sheo Narayan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_3oSWwapPKQ"&gt;JavaScript Modules: ES6 Import and Export ‚Äî Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aQr2bV1BPyE"&gt;ES6 - Modules ‚Äî Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fIP4pjAqCtQ"&gt;ES6 Modules in the Real World ‚Äî Sam Thorogood&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5P04OK6KlXA"&gt;ES6 Modules ‚Äî TempleCoding&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Xd7zgPFwVX8&amp;amp;"&gt;JavaScript IIFE (Immediately Invoked Function Expressions) ‚Äî Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;9. Message Queue and Event Loop&lt;/h2&gt; 
&lt;p&gt;The Event Loop is a critical part of JavaScript's concurrency model, ensuring non-blocking behavior by processing tasks in an asynchronous manner. Understanding how it interacts with the Message Queue and Microtasks is key to mastering JavaScript behavior.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/javascript-event-loop-explained-4cd26af121d4"&gt;JavaScript Event Loop Explained ‚Äî Anoop Raveendran&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-js-the-event-loop-959beae3ac40"&gt;Understanding JS: The Event Loop ‚Äî Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flaviocopes.com/javascript-event-loop/"&gt;The JavaScript Event Loop ‚Äî Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/"&gt;Tasks, microtasks, queues and schedules ‚Äî Jake Archibald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/presto412/visualising-the-javascript-event-loop-with-a-pizza-restaurant-analogy-47a8"&gt;Visualising the JavaScript Event Loop with a Pizza Restaurant analogy ‚Äî Priyansh Jain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lydiahallie/javascript-visualized-event-loop-3dif"&gt;JavaScript Visualized: Event Loop ‚Äî Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-zone/understanding-and-optimizing-javascripts-event-loop-717ae0095038#:~:text=The%20event%20loop%20is%20the,%2Dblocking%20I%2FO%20operations."&gt;Understanding and Optimizing JavaScript's Event Loop ‚Äî Xiuer Old&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ"&gt;What the heck is the event loop anyway? | JSConf EU ‚Äî Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XzXIMZMN9k4"&gt;JavaScript Event Loop ‚Äî ComScience Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6MXRNXXgP_0"&gt;I'm stuck in an Event Loop ‚Äî Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cCOL7MC4Pl0"&gt;In The Loop - Jake Archibald | JSConf.Asia 2018&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Eqq2Rb7LzYE"&gt;Desmitificando el Event Loop (Spanish)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6lbBaM18X3g"&gt;Callbacks, Sincrono, Ass√≠ncrono e Event Loop (PT-BR)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6lbBaM18X3g"&gt;JavaScript Event Loop: How it Works and Why it Matters in 5 Minutes - James Q Quick&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;10. setTimeout, setInterval and requestAnimationFrame&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/settimeout-setinterval"&gt;setTimeout and setInterval ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/akanksha_9560/why-not-to-use-setinterval--2na9"&gt;Why not to use setInterval ‚Äî Akanksha Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://develoger.com/settimeout-vs-setinterval-cff85142555b"&gt;setTimeout VS setInterval ‚Äî Develoger&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/using-requestanimationframe/"&gt;Using requestAnimationFrame ‚Äî Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.javascriptkit.com/javatutors/requestanimationframe.shtml"&gt;Understanding JavaScript's requestAnimationFrame() ‚Äî JavaScript Kit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amitmerchant.com/Handling-Time-Intervals-In-Javascript/"&gt;Handling time intervals in JavaScript - Amit Merchant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-debounce-example/"&gt;Debounce ‚Äì How to Delay a Function in JavaScript - Ondrej Polesny&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6bPKyl8WYWI"&gt;Javascript: How setTimeout and setInterval works ‚Äî Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/nqsPmuicJJc?si=4FXKlZfqiJUqO2Y4"&gt;TRUST ISSUES with setTimeout() ‚Äî Akshay Saini &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=TbCgGWe8LN8"&gt;setTimeout and setInterval in JavaScript ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0VVJSvlUgtg"&gt;JavaScript Timers ‚Äî Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mVKfrWCOB60"&gt;JavaScript setTimeOut and setInterval Explained ‚Äî Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;11. JavaScript Engines&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://www.softwaremag.com/javascript-engines/"&gt;JavaScript Engines ‚Äî Jen Looper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/understanding-the-core-of-nodejs-the-powerful-chrome-v8-engine-79e7eb8af964"&gt;Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code ‚Äî DroidHead&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775"&gt;Understanding V8's Bytecode ‚Äî Franziska Hinkelmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-essentials-why-you-should-know-how-the-engine-works-c2cc0d321553"&gt;JavaScript essentials: why you should know how the engine works - Rainer Hahnekamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/shapes-ics"&gt;JavaScript engine fundamentals: Shapes and Inline Caches&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/prototypes"&gt;JavaScript engine fundamentals: optimizing prototypes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://v8.dev/blog/elements-kinds"&gt;How V8 optimizes array operations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/javascript-internals-javascript-engine-run-time-environment-settimeout-web-api-eeed263b1617"&gt;JavaScript Internals: JavaScript engine, Run-time environment &amp;amp; setTimeout Web API ‚Äî Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5nmpokoRaZI"&gt;JavaScript Engines: The Good Parts‚Ñ¢ ‚Äî Mathias Bynens &amp;amp; Benedikt Meurer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2WJL19wDH68"&gt;JS Engine EXPOSED üî• Google's V8 Architecture üöÄ | Namaste JavaScript Ep. 16 - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/iLWTnMzWtj4"&gt;How JavaScript Code is executed? How Javascript works behind the scenes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xckH5s3UuX4"&gt;Understanding the V8 JavaScript Engine - freeCodeCamp Talks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oc6faXVc54E"&gt;JavaScript Under The Hood - JavaScript Engine Overview - Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QyUFheng6J0"&gt;Arindam Paul - JavaScript VM internals, EventLoop, Async and ScopeChains&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;12. Bitwise Operators, Type Arrays and Array Buffers&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/programming-with-js-bitwise-operations-393eb0745dc4"&gt;Programming with JS: Bitwise Operations ‚Äî Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/using-javascript-bitwise-operators-in-real-life-f551a731ff5"&gt;Using JavaScript's Bitwise Operators in Real Life ‚Äî ian m&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.w3resource.com/javascript/operators/bitwise-operator.php"&gt;JavaScript Bitwise Operators ‚Äî w3resource&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/bother7-blog/bitwise-operators-in-javascript-65c4c69be0d3"&gt;Bitwise Operators in Javascript ‚Äî Joe Cha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/techtrument/a-comprehensive-primer-on-binary-computation-and-bitwise-operators-in-javascript-81acf8341f04"&gt;A Comprehensive Primer on Binary Computation and Bitwise Operators in javascript ‚Äî Paul Brown&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.quora.com/How-can-I-understand-Bitwise-operation-in-JavaScript"&gt;How can I understand Bitwise operation in JavaScript?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mesu75PTDC8"&gt;JavaScript Bitwise Operators ‚Äî Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=igIjGxF2J-w"&gt;Bitwise Operators and WHY we use them ‚Äî Alex Hyett&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RRyxCmLX_ag"&gt;JS Bitwise Operators and Binary Numbers ‚Äî Steve Griffith - Prof3ssorSt3v3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ScZZoHj7mqY"&gt;Deep Dive into Blobs, Files, and ArrayBuffers ‚Äî Steve Griffith - Prof3ssorSt3v3&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;13. DOM and Layout Trees&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model"&gt;Document Object Model (DOM) ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://eloquentjavascript.net/14_dom.html"&gt;Eloquent JavaScript, 3rd Edition: Ch. 14 - The Document Object Model&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/introduction-to-the-dom"&gt;How To Understand and Modify the DOM in JavaScript ‚Äî Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/whats-the-document-object-model-and-why-you-should-know-how-to-use-it-1a2d0bc5429d"&gt;What's the Document Object Model, and why you should know how to use it ‚Äî Leonardo Maldonado&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.guru99.com/how-to-use-dom-and-events-in-javascript.html"&gt;JavaScript DOM Tutorial with Example ‚Äî Guru99&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/dom/"&gt;What is the DOM? ‚Äî Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zellwk.com/blog/dom-traversals/"&gt;Traversing the DOM with JavaScript ‚Äî Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/dom-nodes"&gt;DOM Tree&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/how-to-traverse-the-dom-in-javascript-d6555c335b4e"&gt;How to traverse the DOM in Javascript ‚Äî Vojislav Grujiƒá&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction"&gt;Render Tree Construction ‚Äî Ilya Grigorik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitsofco.de/what-exactly-is-the-dom/"&gt;What exactly is the DOM?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.javascripttutorial.net/javascript-dom/"&gt;JavaScript DOM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Pr4LLrmDLLo"&gt;Traversing the Dom with Javascript&lt;/a&gt; - Steve Griffith (YouTube)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FIORjGvT0kk"&gt;JavaScript DOM ‚Äî The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0ik6X4DJKCc"&gt;JavaScript DOM Crash Course ‚Äî Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=y17RuWkWdn8"&gt;JavaScript DOM Manipulation Methods ‚Äî Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=v7rSSy8CaYE"&gt;JavaScript DOM Traversal Methods ‚Äî Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;14. Factories and Classes&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/understanding-classes-in-javascript"&gt;How To Use Classes in JavaScript ‚Äî Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/tech-tajawal/javascript-classes-under-the-hood-6b26d2667677"&gt;Javascript Classes ‚Äî Under The Hood ‚Äî Majid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/better-javascript-with-es6-pt-ii-a-deep-dive-into-classes"&gt;Better JavaScript with ES6, Pt. II: A Deep Dive into Classes ‚Äï Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/understand-the-factory-design-pattern-in-plain-javascript-20b348c832bd"&gt;Understand the Factory Design Pattern in Plain JavaScript ‚Äî Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://atendesigngroup.com/blog/factory-functions-javascript"&gt;Factory Functions in JavaScript ‚Äî Josh Miller&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@SntsDev/the-factory-pattern-in-js-es6-78f0afad17e9"&gt;The Factory Pattern in JS ES6 ‚Äî SnstsDev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/class-vs-factory-function-exploring-the-way-forward-73258b6a8d15"&gt;Class vs Factory function: exploring the way forward ‚Äî Cristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@robertgrosse/how-es6-classes-really-work-and-how-to-build-your-own-fd6085eb326a"&gt;How ES6 classes really work and how to build your own ‚Äî Robert Grosse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jordankasper.com/understanding-super-in-javascript"&gt;Understanding &lt;code&gt;super&lt;/code&gt; in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lawrence_eagles/an-easy-guide-to-understanding-classes-in-javascript-3bcm"&gt;An Easy Guide To Understanding Classes In JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jpegXpQpb3o"&gt;JavaScript Factory Functions ‚Äî Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ImwrezYhw4w"&gt;Factory Functions in JavaScript ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=R7-IwpH80UE"&gt;Javascript Tutorial Function Factories ‚Äî Crypto Chan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;15. this, call, apply and bind&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call"&gt;call() ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind"&gt;bind() ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply"&gt;apply() ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://levelup.gitconnected.com/grokking-call-apply-and-bind-methods-in-javascript-392351a4be8b"&gt;Grokking call(), apply() and bind() methods in JavaScript ‚Äî Aniket Kudale&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://javascriptissexy.com/javascript-apply-call-and-bind-methods-are-essential-for-javascript-professionals/"&gt;JavaScript's Apply, Call, and Bind Methods are Essential for JavaScript Professionals ‚Äî Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@omergoldberg/javascript-call-apply-and-bind-e5c27301f7bb"&gt;Javascript: call(), apply() and bind() ‚Äî Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@ivansifrim/the-differences-between-call-apply-bind-276724bb825b"&gt;The difference between call / apply / bind ‚Äî Ivan Sifrim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ritik_dev_js/what-the-hack-is-call-apply-bind-in-javascript-11ce"&gt;What the hack is call, apply, bind in JavaScript ‚Äî Ritik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thenewstack.io/mastering-javascript-callbacks-bind-apply-call/"&gt;Mastering 'this' in JavaScript: Callbacks and bind(), apply(), call() ‚Äî Michelle Gienow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/kbk0125/javascripts-apply-call-and-bind-explained-by-hosting-a-cookout-32jo"&gt;JavaScript's apply, call, and bind explained by hosting a cookout ‚Äî Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.eigenx.com/blog/https/mediumcom/eigen-x/how-and-when-to-use-bind-call-and-apply-in-javascript-77b6f42898fb"&gt;How AND When to use bind, call, and apply in Javascript ‚Äî Eigen X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ycmjason/let-me-explain-to-you-what-is-this-javascript-44ja"&gt;Let me explain to you what is &lt;code&gt;this&lt;/code&gt;. (Javascript) ‚Äî Jason Yu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/quick-code/understanding-the-this-keyword-in-javascript-cb76d4c7c5e8"&gt;Understanding the "this" Keyword in JavaScript ‚Äî Pavan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-understand-the-keyword-this-and-context-in-javascript-cd624c6b74b8"&gt;How to understand the keyword this and context in JavaScript ‚Äî Lukas Gisder-Dub√©&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/_hridaysharma/what-the-heck-is-this-in-javascript-37n1"&gt;What the heck is this in Javascript? ‚Äî Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/steelvoltage/this-and-bind-in-javascript-2pam"&gt;This and Bind In Javascript ‚Äî Brian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/canderson93/3-techniques-for-maintaining-your-sanity-using-this-in-javascript-3idf"&gt;3 Techniques for Maintaining Your Sanity Using "This" in JavaScript ‚Äî Carl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/aakashsr/mastering-the-javascript-this-keyword-4pfa"&gt;Mastering the JavaScript "this" Keyword ‚Äî Aakash Srivastav&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/sargalias/this-binding-in-javascript-4-new-binding-2p1n"&gt;This binding in JavaScript ‚Äì 4. New binding ‚Äî Spyros Argalias&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/thatgalnatalie/a-quick-intro-to-this-in-javascript-2mhp"&gt;A quick intro to 'this' in JavaScript ‚Äî Natalie Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/developerkaren/a-conversation-with-the-this-keyword-in-javascript-3j6g"&gt;A conversation with the 'this' keyword in Javascript ‚Äî Karen Efereyan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jscurious.com/what-are-call-apply-and-bind-in-javascript/"&gt;What are call(), apply() and bind() in JavaScript ‚Äî Amitav Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yasemincidem.medium.com/understanding-this-binding-in-javascript-86687397c76d"&gt;Understanding 'this' binding in JavaScript ‚Äî Yasemin Cidem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dmitripavlutin.com/javascript-this-interview-questions/"&gt;Top 7 tricky questions of 'this' keyword&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=c0mLRpw-9rI"&gt;JavaScript call, apply and bind ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AYVYxezrMWA"&gt;JavaScript Practical Applications of Call, Apply and Bind functions‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Uy0NOXLBraE"&gt;JavaScript (call, bind, apply) ‚Äî curious aatma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AOSYY1_np_4"&gt;Understanding Functions and 'this' In The World of ES2017 ‚Äî Bryan Hughes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GhbhD1HR5vk"&gt;bind and this - Object Creation in JavaScript - FunFunFunction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uBdH0iB1VDM"&gt;JS Function Methods call(), apply(), and bind() ‚Äî Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=75W8UPQ5l7k&amp;amp;t=261s"&gt;call, apply and bind method in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;.[Javascript Interview Questions ( Call, Bind and Apply ) - Polyfills, Output Based, Explicit Binding - Roadside Coder] (&lt;a href="https://youtu.be/VkmUOktYDAU?si=SdvLZ8FBmephPxjS"&gt;https://youtu.be/VkmUOktYDAU?si=SdvLZ8FBmephPxjS&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;16. new, Constructor, instanceof and Instances&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-for-beginners-the-new-operator-cee35beb669e"&gt;JavaScript For Beginners: the 'new' operator ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/demystifying-javascripts-new-keyword-874df126184c"&gt;Let's demystify JavaScript's 'new' keyword ‚Äî Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/constructor-new"&gt;Constructor, operator "new" ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/understanding-javascript-constructors/"&gt;Understanding JavaScript Constructors ‚Äî Faraz Kelhini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openclassrooms.com/en/courses/3523231-learn-to-code-with-javascript/4379006-use-constructor-functions"&gt;Use Constructor Functions ‚Äî Openclassrooms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://2ality.com/2017/08/type-right.html"&gt;Beyond &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;: simplifying dynamic type checks ‚Äî Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptrefined.io/function-and-object-instances-of-each-other-1e1095d5faac"&gt;Function and Object, instances of each other ‚Äî Kiro Risk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flexiple.com/javascript/instanceof-javascript"&gt;JavaScript instanceof operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;17. Prototype Inheritance and Prototype Chain&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain"&gt;Inheritance and the prototype chain ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@parsyval/javascript-prototype-vs-class-a7015d5473b"&gt;Javascript : Prototype vs Class ‚Äî Valentin PARSY&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/prototypes"&gt;JavaScript engine fundamentals: optimizing prototypes ‚Äî Mathias Bynens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-prototype-cb29d82b8809"&gt;JavaScript Prototype ‚Äî NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/prototypes-in-javascript-5bba2990e04b"&gt;Prototypes in JavaScript ‚Äî Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/prototype-in-js-busted-5547ec68872"&gt;Prototype in JavaScript: it's quirky, but here's how it works ‚Äî Pranav Jindal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-javascript-prototype-and-inheritance-d55a9a23bde2"&gt;Understanding JavaScript: Prototype and Inheritance ‚Äî Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/_hridaysharma/understanding-classes-es5-and-prototypal-inheritance-in-javascript-n8d"&gt;Understanding Classes (ES5) and Prototypal Inheritance in JavaScript ‚Äî Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/varundey/prototype-proto-and-prototypal-inheritance-in-javascript-2inl"&gt;prototype, &lt;strong&gt;proto&lt;/strong&gt; and Prototypal inheritance in JavaScript ‚Äî Varun Dey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/prototype-inheritance"&gt;Prototypal Inheritance ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/understanding-prototypes-and-inheritance-in-javascript"&gt;How To Work with Prototypes and Inheritance in JavaScript ‚Äî Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/master-javascript-prototypes-inheritance-d0a9a5a75c4e"&gt;Master JavaScript Prototypes &amp;amp; Inheritance ‚Äî Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/understanding-prototypal-inheritance-in-javascript-with-css-93b2fcda75e4"&gt;JavaScript's Prototypal Inheritance Explained Using CSS ‚Äî Nash Vail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/derhuerst/a585c4916b1c361cc6f0"&gt;Prototypal Inheritance in JavaScript ‚Äî Jannis Redmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/demystifying-es6-classes-and-prototypal-inheritance"&gt;Demystifying ES6 Classes And Prototypal Inheritance ‚Äï Neo Ighodaro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/danny/intro-to-prototypal-inheritance---js-9di"&gt;Intro To Prototypal Inheritance ‚Äî Dharani Jayakanthan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/varche/let-s-build-prototypal-inheritance-in-js-56mm"&gt;Let's Build Prototypal Inheritance in JS ‚Äî var-che&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/attacomsian/objects-prototypes-and-classes-in-javascript-3i9b"&gt;Objects, Prototypes and Classes in JavaScript ‚Äî Atta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ladybenko/the-magical-world-of-javascript-prototypes-1mhg"&gt;The magical world of JavaScript prototypes ‚Äî Bel√©n&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lawrence_eagles/understanding-prototypal-inheritance-in-javascript-4f31#chp-4"&gt;Understanding Prototypal Inheritance In JavaScript ‚Äî Lawrence Eagles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/irenejpopova/objects-and-prototypes-in-javascript-2eie"&gt;Objects and Prototypes in JavaScript ‚Äî Irena Popova&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=sOrtAjyk4lQ"&gt;Javascript Prototype Inheritance ‚Äî Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=7oNWNlMrkpc"&gt;JavaScript Prototype Inheritance Explained pt. I ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uIlj6_z_wL8"&gt;JavaScript Prototype Inheritance Explained pt. II ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qMO-LTOrJaE"&gt;JavaScript Prototype Inheritance Explained ‚Äî Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=G6l5CHl67HQ"&gt;Advanced Javascript - Prototypal Inheritance In 1 Minute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=phwzuiJJPpQ"&gt;An Overview Of Classical Javascript Classes and Prototypal Inheritance ‚Äî Pentacode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4jb4AYEyhRc"&gt;Object Oriented JavaScript - Prototype ‚Äî The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2rkEbcptR64"&gt;Prototype in JavaScript ‚Äî kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oCwCcNvaXAQ"&gt;JavaScript Using Prototypes ‚Äî O'Reilly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XskMWBXNbp0"&gt;A Beginner's Guide to Javascript's Prototype ‚Äî Tyler Mcginnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hS_WqkyUah8"&gt;Prototypes in Javascript - p5.js Tutorial ‚Äî The Coding Train&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS/tree/1st-ed"&gt;You Don't Know JS, 1st Edition: this &amp;amp; Object Prototypes ‚Äî Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.google.com.pk/books/edition/The_Principles_of_Object_Oriented_JavaSc/rorlAwAAQBAJ?hl=en&amp;amp;gbpv=1&amp;amp;pg=PP1&amp;amp;printsec=frontcover"&gt;The Principles of Object-Oriented JavaScript - Nicholas C. Zakas&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;18. Object.create and Object.assign&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create"&gt;Object.create() ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"&gt;Object.assign() ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@happymishra66/object-create-in-javascript-fa8674df6ed2"&gt;Object.create in JavaScript ‚Äî Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.htmlgoodies.com/beyond/javascript/object.create-the-new-way-to-create-objects-in-javascript.html"&gt;Object.create(): the New Way to Create Objects in JavaScript ‚Äî Rob Gravelle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://adripofjavascript.com/blog/drips/basic-inheritance-with-object-create.html"&gt;Basic Inheritance with Object.create ‚Äî Joshua Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/object-create-javascript/"&gt;Object.create() In JavaScript ‚Äî GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@jonathanvox01/understanding-the-difference-between-object-create-and-the-new-operator-b2a2f4749358"&gt;Understanding the difference between Object.create() and the new operator ‚Äî Jonathan Voxland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/javascript-object-creation-patterns-best-practises/"&gt;JavaScript Object Creation: Patterns and Best Practices ‚Äî Jeff Mott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/js-dealing-with-objects"&gt;Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/bar-talk/copying-objects-in-javascript"&gt;Copying Objects in JavaScript ‚Äï Orinami Olatunji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-object-assign-bc9696dcbb6e"&gt;JavaScript: Object.assign() ‚Äî Thiago S. Adriano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flaviocopes.com/how-to-clone-javascript-object/"&gt;How to deep clone a JavaScript Object ‚Äî Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/vzing/object-create-when-and-why-to-use-20m9"&gt;Object.create(): When and Why to Use ‚Äî VZing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aw7NfYhR5rc"&gt;Object.assign() explained ‚Äî Aaron Writes Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9Ky4X6inpi4"&gt;Object.assign() Method ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;19. map, reduce, filter&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/jsguru/javascript-functional-programming-map-filter-and-reduce-846ff9ba492d"&gt;JavaScript Functional Programming ‚Äî map, filter and reduce ‚Äî Bojan Gvozderac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@joomiguelcunha/learn-map-filter-and-reduce-in-javascript-ea59009593c4"&gt;Learn map, filter and reduce in Javascript ‚Äî Jo√£o Miguel Cunha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://danmartensen.svbtle.com/javascripts-map-reduce-and-filter"&gt;JavaScript's Map, Reduce, and Filter ‚Äî Dan Martensen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.tutsplus.com/tutorials/how-to-use-map-filter-reduce-in-javascript--cms-26209"&gt;How to Use Map, Filter, &amp;amp; Reduce in JavaScript ‚Äî Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-learn-to-chain-map-filter-and-reduce-acd2d0562cd4"&gt;JavaScript ‚Äî Learn to Chain Map, Filter, and Reduce ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/write-beautiful-javascript-with-%CE%BB-fp-es6-350cd64ab5bf"&gt;Javascript data structure with map, reduce, filter and ES6 ‚Äî Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-map-filter-and-reduce-in-javascript-5df1c7eee464"&gt;Understanding map, filter and reduce in Javascript ‚Äî Luuk Gruijs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/functional-programming-in-js-map-filter-reduce-pt-5-308a205fdd5f"&gt;Functional Programming in JS: map, filter, reduce (Pt. 5) ‚Äî Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wsvincent.com/functional-javascript-map-filter-reduce/"&gt;JavaScript: Map, Filter, Reduce ‚Äî William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/es6-arrow-functions-new-fat-concise-syntax-javascript/"&gt;Arrow Functions: Fat and Concise Syntax in JavaScript ‚Äî Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-arrow-functions-for-beginners-926947fc0cdc"&gt;JavaScript: Arrow Functions for Beginners ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/when-and-why-you-should-use-es6-arrow-functions-and-when-you-shouldnt-3d851d7f0b26"&gt;When (and why) you should use ES6 arrow functions ‚Äî and when you shouldn't ‚Äî Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-learn-understand-arrow-functions-fe2083533946"&gt;JavaScript ‚Äî Learn &amp;amp; Understand Arrow Functions ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/podiihq/javascript-arrow-functions-27d4c3334b83"&gt;(JavaScript )=&amp;gt; Arrow functions ‚Äî sigu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@panderson.dev/javascript-reduce-79aab078da23"&gt;Javascript.reduce() ‚Äî Paul Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gofore.com/en/why-you-should-replace-foreach/"&gt;Why you should replace forEach with map and filter in JavaScript ‚Äî Roope Hakulinen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/poka-techblog/simplify-your-javascript-use-map-reduce-and-filter-bd02c593cc2d"&gt;Simplify your JavaScript ‚Äì Use .map(), .reduce(), and .filter() ‚Äî Etienne Talbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.codeanalogies.com/2018/07/24/javascripts-reduce-method-explained-by-going-on-a-diet/"&gt;JavaScript's Reduce Method Explained By Going On a Diet ‚Äî Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@amiratak88/difference-between-map-filter-and-reduce-in-javascript-822ff79d5160"&gt;Difference between map, filter and reduce in JavaScript ‚Äî Amirata Khodaparast&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/map-filter-reduce-ebbed4be4201"&gt;Map‚áÑFilter‚áÑReduce‚Üª ‚Äî ashay mandwarya&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/finding-your-way-with-map-aecb8ca038f6"&gt;Finding Your Way With .map() ‚Äî Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-write-your-own-map-filter-and-reduce-functions-in-javascript-ab1e35679d26"&gt;How to write your own map, filter and reduce functions in JavaScript ‚Äî Hemand Nair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/manipulating-arrays-in-javascript/"&gt;How to Manipulate Arrays in JavaScript ‚Äî Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/15-useful-javascript-examples-of-map-reduce-and-filter-74cbbb5e0a1f"&gt;How to simplify your codebase with map(), reduce(), and filter() in JavaScript ‚Äî Alex Permyakov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/pickleat/map-filter-and-reduce-2efb"&gt;.map(), .filter(), and .reduce() ‚Äî Andy Pickle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/chrisachard/map-filter-reduce-crash-course-5gan"&gt;Map/Filter/Reduce Crash Course ‚Äî Chris Achard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@js_tut/map-filter-and-reduce-animated-7fe391a35a47"&gt;Map, Filter and Reduce ‚Äì Animated ‚Äî JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/uptheirons78/map-filter-reduce-and-others-arrays-iterators-you-must-know-to-become-an-algorithms-wizard-4209"&gt;Map, Filter, Reduce and others Arrays Iterators You Must Know to Become an Algorithms Wizard ‚Äî Mauro Bono&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterprogramming.pub/how-to-javascripts-map-vs-filter-vs-reduce-80d87a5a0a24"&gt;How to Use JavaScript's .map, .filter, and .reduce ‚Äî Avery Duffin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/using-map-filter-and-reduce-properly-50e07f80c8b2"&gt;Using .map(), .filter() and .reduce() properly ‚Äî Sasanka Kudagoda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/sanderdebr/mastering-the-javascript-reduce-method-2foj"&gt;Mastering the JavaScript Reduce method ‚úÇÔ∏è ‚Äî sanderdebr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-map-how-to-use-the-js-map-function-array-method/"&gt;JavaScript Map ‚Äì How to Use the JS .map() Function (Array Method) ‚Äî FreeCodeCamp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=UXiYii0Y7Nw"&gt;Map, Filter and Reduce ‚Äî Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/zdp0zrpKzIE?si=6QusFzD6tmwn-el4"&gt;Map, Filter and Reduce - Akshaay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vytzLlY_wmU"&gt;Functional JavaScript: Map, forEach, Reduce, Filter ‚Äî Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qTeeVd8hOFY"&gt;JavaScript Array superpowers: Map, Filter, Reduce (part I) ‚Äî Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=gIm9xLYudL0"&gt;JavaScript Array superpowers: Map, Filter, Reduce (part 2) ‚Äî Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zYBeEPxNSbw"&gt;JavaScript Higher Order Functions - Filter, Map, Sort &amp;amp; Reduce ‚Äî Epicop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4qWlqD0yYTU"&gt;[Array Methods 2/3] .filter + .map + .reduce ‚Äî CodeWithNick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6sQDTgOqh-I"&gt;Arrow functions in JavaScript - What, Why and How ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=e-5obm1G_FY&amp;amp;t=1521s"&gt;Learning Functional Programming with JavaScript ‚Äî Anjana Vakil - JSUnconf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bCqtb-Z5YGQ&amp;amp;t=17s"&gt;Map - Parte 2 JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Wl98eZpkp-c"&gt;Reduce basics - Part 3 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1DMolJ2FrNY&amp;amp;t=621s"&gt;Reduce Advanced - Part 4 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IXp06KekEjM"&gt;reduce Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=P4RAFdZDn3M"&gt;map Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/Ah7-PPjQ5Ls"&gt;Different array methods in 1 minute | Midudev (Spanish)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;20. Pure Functions, Side Effects, State Mutation and Event Propagation&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-and-functional-programming-pt-3-pure-functions-d572bb52e21c"&gt;Javascript and Functional Programming ‚Äî Pure Functions ‚Äî Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976"&gt;Master the JavaScript Interview: What is a Pure Function? ‚Äî Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@jamesjefferyuk/javascript-what-are-pure-functions-4d4d5392d49c"&gt;JavaScript: What Are Pure Functions And Why Use Them? ‚Äî James Jeffery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.nicoespeon.com/en/2015/01/pure-functions-javascript/"&gt;Pure functions in JavaScript ‚Äî @nicoespeon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/functional-programming-pure-functions/"&gt;Functional Programming: Pure Functions ‚Äî Arne Brasseur&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://alistapart.com/article/making-your-javascript-pure"&gt;Making your JavaScript Pure ‚Äî Jack Franklin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@fknussel/arrays-objects-and-mutations-6b23348b54aa"&gt;Arrays, Objects and Mutations ‚Äî Federico Kn√ºssel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/the-state-of-immutability-169d2cd11310"&gt;The State of Immutability ‚Äî Maciej Sikora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/zurvin/hablemos-de-inmutabilidad-3dc65d290783"&gt;Hablemos de Inmutabilidad ‚Äî Kike Sanchez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jrsinclair.com/articles/2018/how-to-deal-with-dirty-side-effects-in-your-pure-functional-javascript/"&gt;How to deal with dirty side effects in your pure functional JavaScript ‚Äî James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://davidwalsh.name/preventing-sideeffects-javascript"&gt;Preventing Side Effects in JavaScript ‚Äî David Walsh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wsvincent.com/javascript-pure-functions/"&gt;JavaScript: Pure Functions ‚Äî William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/functional-programming-paradigms-in-modern-javascript-pure-functions-797d9abbee1"&gt;Functional programming paradigms in modern JavaScript: Pure functions ‚Äî Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-javascript-mutation-and-pure-functions-7231cc2180d3"&gt;Understanding Javascript Mutation and Pure Functions ‚Äî Chidume Nnamdi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@bluepnume/functional-ish-javascript-205c05d0ed08"&gt;Functional-ish JavaScript ‚Äî Daniel Brain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events"&gt;Event Propagation ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/bubbling-and-capturing"&gt;Event Propagation ‚Äî Bubbling and capturing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dZ41D6LDSBg"&gt;Pure Functions ‚Äî Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Jh_Uzqzz_wM"&gt;Pure Functions - Functional Programming in JavaScript ‚Äî Paul McBride&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=frT3H-eBmPc"&gt;JavaScript Pure Functions ‚Äî Seth Alexander&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AHbRVJzpB54"&gt;JavaScript Pure vs Impure Functions Explained ‚Äî Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BMUiFMZr7vk"&gt;Pure Functions - Programa√ß√£o Funcional: Parte 1 - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JYc7gr9Ehl0"&gt;Event Propagation - JavaScript Event Bubbling and Propagation - Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;21. Closures&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures"&gt;Closures ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/closure"&gt;Closure ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/i-never-understood-javascript-closures-9663703368e8"&gt;I never understood JavaScript closures ‚Äî Olivier De Meulder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://javascriptissexy.com/understand-javascript-closures-with-ease/"&gt;Understand JavaScript Closures With Ease ‚Äî Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/understanding-javascript-closures-da6aab330302"&gt;Understanding JavaScript Closures ‚Äî Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/understand-closures-in-javascript-d07852fa51e7"&gt;Understand Closures in JavaScript ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/javascript-closures-simplified-d0d23fa06ba4"&gt;A simple guide to help you understand closures in JavaScript ‚Äî Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/understanding-javascript-closures-a-practical-approach"&gt;Understanding JavaScript Closures: A Practical Approach ‚Äî Paul Upendo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-javascript-closures-4188edf5ea1b"&gt;Understanding JavaScript: Closures ‚Äî Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/how-to-use-javascript-closures-with-confidence-85cd1f841a6b"&gt;How to use JavaScript closures with confidence ‚Äî L√©na Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://howchoo.com/g/mge2mji2mtq/javascript-closures-by-example"&gt;JavaScript closures by example ‚Äî tyler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-closures-and-scope-3784c75b9290"&gt;JavaScript‚Ää‚Äî‚ÄäClosures and Scope ‚Äî Alex Aitken&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/discover-the-power-of-closures-in-javascript-5c472a7765d7"&gt;Discover the power of closures in JavaScript‚Ää‚Äî‚ÄäCristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reallifejs.com/the-meat/getting-closure/"&gt;Getting Closure‚Ää‚Äî‚ÄäRealLifeJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ritik_dev_js/what-the-hack-is-closure-currying-and-iife-in-javascript-32m9"&gt;Closure, Currying and IIFE in JavaScript‚Ää‚Äî‚ÄäRitik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/a-beginners-guide-to-closures-in-javascript-97d372284dda"&gt;Understanding Closures in JavaScript‚Ää‚Äî‚ÄäSukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/a-basic-guide-to-closures-in-javascript-9fc8b7e3463e"&gt;A basic guide to Closures in JavaScript‚Ää‚Äî‚ÄäParathan Thiyagalingam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/steelvoltage/closures-using-memoization-3597"&gt;Closures: Using Memoization‚Ää‚Äî‚ÄäBrian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterprogramming.pub/a-brief-introduction-to-closures-and-lexical-scoping-in-javascript-8a5866496232"&gt;A Brief Introduction to Closures and Lexical Scoping in JavaScript‚Ää‚Äî‚ÄäAshutosh K Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/stereobooster/demystify-closures-5g42"&gt;Demystify Closures‚Ää‚Äî‚Äästereobooster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/boywithsilverwings/scopes-and-closures-javascript-concepts-4dfj"&gt;Scopes and Closures - JavaScript Concepts‚Ää‚Äî‚ÄäAgney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/mattpopovich/understanding-closures-in-javascript-3k0d"&gt;Understanding Closures in JavaScript‚Ää‚Äî‚ÄäMatt Popovich&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://whatthefuck.is/closure"&gt;whatthefuck.is ¬∑ A Closure - Dan Abramov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/brandonleboeuf/closure-in-javascript-49n7"&gt;Closures in JavaScript can... - Brandon LeBoeuf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/this_mkhy/do-you-know-es6-part-3-advanced-3fcl#Closures-2"&gt;Do you know Closures - Mohamed Khaled&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XTAzsODSCsM"&gt;JavaScript The Hard Parts: Closure, Scope &amp;amp; Execution Context - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/qikxEIxsXco?si=fGFgUHuaOW49Wg9p"&gt;Namaste Javascript by Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=71AtaJpJHw0"&gt;Javascript Closure ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=CQqwU2Ixu-U"&gt;Closures ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-xqJo5VRP4A"&gt;Closures in JavaScript ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yiEeiMN2Khs"&gt;JavaScript Closures 101: What is a closure? ‚Äî JavaScript Tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1JsJx1x35c0"&gt;Closures ‚Äî freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-rLrGAXK8WE"&gt;JavaScript Closures ‚Äî CodeWorkr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qikxEIxsXco"&gt;Closures in JS - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/xa8lhVwQBw4"&gt;CLOSURES en JavaScript: Qu√© son y c√≥mo funcionan - Carlos Azaustre&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3a0I8ICR1Vg"&gt;Learn Closures In 7 Minutes - Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;22. High Order Functions&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://eloquentjavascript.net/05_higher_order.html"&gt;Eloquent JavaScript, 3rd Edition: Ch. 5 - Higher-order Functions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/higher-order-functions-javascript/"&gt;Higher-Order Functions in JavaScript ‚Äî M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/higher-order-functions-in-javascript-d9101f9cf528"&gt;Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code ‚Äî Guido Schmitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/effective-functional-javascript-first-class-and-higher-order-functions-713fde8df50a"&gt;First-class and Higher Order Functions: Effective Functional JavaScript ‚Äî Hugo Di Francesco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.lullabot.com/articles/higher-order-functions-in-javascript"&gt;Higher Order Functions in JavaScript ‚Äî John Hannah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pedroapfilho/high-order-functions"&gt;Just a reminder on how to use high order functions ‚Äî Pedro Filho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-higher-order-functions-in-javascript-75461803bad"&gt;Understanding Higher-Order Functions in JavaScript ‚Äî Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/nuel_ikwuoma/higher-order-functions-a-pragmatic-approach-51fb"&gt;Higher Order Functions - A pragmatic approach ‚Äî emmanuel ikwuoma&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=rRgD1yVwIvE"&gt;JavaScript Higher Order Functions &amp;amp; Arrays ‚Äî Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BMUiFMZr7vk"&gt;Higher Order Functions ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dTlpYnmBW9I"&gt;Higher Order Functions in Javascript ‚Äî Raja Yogan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GYRMNp1SKXA"&gt;Higher Order Iterators in JavaScript ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=H4awPsyugS0"&gt;Higher Order Functions in JavaScript ‚Äî The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=7E8ctomPQJw"&gt;Part 1: An Introduction to Callbacks and Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=28MXziDZkE4"&gt;Part 2: Understanding Why We Need Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HkWxvB1RJq0"&gt;Higher-Order Functions ft. Functional Programming - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;23. Recursion&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/recursion-in-javascript-1608032c7a1f"&gt;Recursion in JavaScript ‚Äî Kevin Ennis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@zfrisch/understanding-recursion-in-javascript-992e96449e03"&gt;Understanding Recursion in JavaScript ‚Äî Zak Frisch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/learn-and-understand-recursion-in-javascript-b588218e87ea"&gt;Learn and Understand Recursion in JavaScript ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/recursion-functional-javascript/"&gt;Recursion in Functional JavaScript ‚Äî M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/programming-with-js-recursion-31371e2bf808"&gt;Programming with JS: Recursion ‚Äî Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/simov/anonymous-recursion-in-javascript"&gt;Anonymous Recursion in JavaScript ‚Äî simo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.jstips.co/en/javascript/recursion-iteration-and-tail-calls-in-js/"&gt;Recursion, iteration and tail calls in JS ‚Äî loverajoel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/what-is-recursion-in-javascript/"&gt;What is Recursion? A Recursive Function Explained with JavaScript Code Examples ‚Äî Nathan Sebhastian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@newmanbradm/intro-to-recursion-984a8bd50f4b"&gt;Intro to Recursion ‚Äî Brad Newman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.datadriveninvestor.com/accio-recursion-your-new-favorite-javascript-spell-7e10d3125fb3"&gt;Accio Recursion!: Your New Favorite JavaScript Spell ‚Äî Leanne Cabey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/christinamcmahon/recursion-explained-with-examples-4k1m"&gt;Recursion Explained (with Examples) ‚Äî Christina&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VtG0WAUvq2w"&gt;Recursion In JavaScript ‚Äî techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=k7-N8R0-KY4"&gt;Recursion ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vLhHyGTkjCs"&gt;Recursion and Recursive Functions ‚Äî Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=kGXVsd8pBLw"&gt;Recursion: Recursion() ‚Äî JS Monthly ‚Äî Lucas da Costa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uyjsR9eNTIw"&gt;Recursive Function in JavaScript ‚Äî kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Mv9NEXX1VHc"&gt;What on Earth is Recursion? ‚Äî Computerphile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9NO5dXSlbv8"&gt;Javascript Tutorial 34: Introduction To Recursion ‚Äî codedamn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FmiQr4nfoPQ"&gt;Recursion, Iteration, and JavaScript: A Love Story | JSHeroes 2018 ‚Äî Anjana Vakil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lMBVwYrmFZQ&amp;amp;ab_channel=ColtSteele"&gt;Recursion crash course - Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6oDQaB2one8"&gt;What Is Recursion - In Depth - Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;24. Collections and Generators&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator"&gt;Generator ‚Äî MDN web docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/es6-collections-map-set-weakmap-weakset/"&gt;ES6 Collections: Using Map, Set, WeakMap, WeakSet ‚Äî Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-weakmaps-sets-and-weaksets-in-depth"&gt;ES6 WeakMaps, Sets, and WeakSets in Depth ‚Äî Nicol√°s Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/map-set-weakmap-weakset"&gt;Map, Set, WeakMap and WeakSet ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/mildrenben/maps-in-es6---a-quick-guide-35pk"&gt;Maps in ES6 - A Quick Guide ‚Äî Ben Mildren&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/es6-set-vs-array-what-and-when-efc055655e1a"&gt;ES6 ‚Äî Set vs Array ‚Äî What and when? ‚Äî Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/es6-map-vs-object-what-and-when-b80621932373"&gt;ES6 ‚Äî Map vs Object ‚Äî What and when? ‚Äî Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/array-vs-set-vs-map-vs-object-real-time-use-cases-in-javascript-es6-47ee3295329b"&gt;Array vs Set vs Map vs Object ‚Äî Real-time use cases in Javascript (ES6/ES7) ‚Äî Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/claireparker/how-to-create-an-array-of-unique-values-in-javascript-using-sets-5dg6"&gt;How to create an array of unique values in JavaScript using Sets ‚Äî Claire Parker-Jones&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/what-you-should-know-about-es6-maps-dc66af6b9a1e"&gt;What You Should Know About ES6 Maps ‚Äî Just Chris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-maps-in-depth"&gt;ES6 Maps in Depth ‚Äî Nicol√°s Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/what-are-javascript-generators-and-how-to-use-them-c6f2713fd12e"&gt;What are JavaScript Generators and how to use them ‚Äî Vladislav Stepanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/understanding-generators-in-es6-javascript-with-examples-6728834016d5"&gt;Understanding JavaScript Generators With Examples ‚Äî Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://davidwalsh.name/es6-generators"&gt;The Basics of ES6 Generators ‚Äî Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/kallaugher/an-introduction-to-javascript-generators-1224"&gt;An Introduction to JavaScript Generators ‚Äî Alice Kallaugher&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ycohYSx5h9w"&gt;JavaScript ES6 / ES2015 Set, Map, WeakSet and WeakMap ‚Äî Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dcP039DYzmE"&gt;JavaScript ES6 / ES2015 - [11] Generators - Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=m4abICrldQI"&gt;The Differences between ES6 Maps and Sets ‚Äî Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QO07THdLWQo"&gt;Javascript Generators - THEY CHANGE EVERYTHING - ES6 Generators Harmony Generators ‚Äî LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;25. Promises&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"&gt;Promise ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/javascript-promises-for-dummies"&gt;JavaScript Promises for Dummies ‚Äï Jecelyn Yeen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-promises-in-javascript-13d99df067c1"&gt;Understanding promises in JavaScript ‚Äî Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-promise-27fc71e77261"&gt;Master the JavaScript Interview: What is a Promise? ‚Äî Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/overview-javascript-promises/"&gt;An Overview of JavaScript Promises ‚Äî Sandeep Panda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/promises-in-javascript-explained-277b98850de"&gt;How to use Promises in JavaScript ‚Äî Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-implement-promises-in-javascript-1ce2680a7f51"&gt;Implementing Promises In JavaScript ‚Äî Maciej Cieslar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-promises-explained-with-simple-real-life-analogies-dd6908092138"&gt;JavaScript: Promises explained with simple real life analogies ‚Äî Shruti Kapoor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://exploringjs.com/es6/ch_promises.html"&gt;Promises for Asynchronous Programming ‚Äî Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.codeanalogies.com/2018/08/26/javascript-promises-explained-by-gambling-at-a-casino/"&gt;JavaScript Promises Explained By Gambling At A Casino ‚Äî Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/datafire-io/es6-promises-patterns-and-anti-patterns-bbb21a5d0918"&gt;ES6 Promises: Patterns and Anti-Patterns ‚Äî Bobby Brennan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/a-simple-guide-to-es6-promises-d71bacd2e13a"&gt;A Simple Guide to ES6 Promises ‚Äî Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/the-es6-promises-87a979ab27e4"&gt;The ES6 Promises ‚Äî Manoj Singh Negi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-promises-in-depth"&gt;ES6 Promises in Depth ‚Äî Nicol√°s Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/playing-with-javascript-promises-a-comprehensive-approach-25ab752c78c3"&gt;Playing with Javascript Promises: A Comprehensive Approach ‚Äî Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-write-a-javascript-promise-4ed8d44292b8"&gt;How to Write a JavaScript Promise ‚Äî Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@andrewly07/a-coding-writers-guide-an-introduction-to-es6-promises-9ff9f9e88f6c"&gt;A Coding Writer's Guide: An Introduction To ES6 Promises ‚Äî Andrew Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/itnext/reverse-engineering-understand-promises-1jfc"&gt;Understanding Promises in JavaScript ‚Äî Chris Noring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/zellwk/converting-callbacks-to-promises-nhn"&gt;Converting callbacks to promises ‚Äî Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/javascript-promises-zero-to-hero-plus-cheat-sheet-64d75051cffa"&gt;JavaScript Promises: Zero To Hero Plus Cheat Sheet ‚Äî Joshua Saunders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/boywithsilverwings/promises-javascript-concepts-293c"&gt;Promises - JavaScript concepts ‚Äî Agney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/iggredible/javascript-promise-101-3idl"&gt;Javascript &lt;code&gt;Promise&lt;/code&gt; 101 ‚Äî Igor Irianto&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/sunnysingh/simplify-javascript-promises-4djb"&gt;Simplify JavaScript Promises ‚Äî Sunny Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke"&gt;JavaScript Visualized: Promises &amp;amp; Async/Await ‚Äî Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/peterklingelhofer/promises-in-javascript-3h5k"&gt;Promises in JavaScript ‚Äî Peter Klingelhofer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/somedood/best-practices-for-es6-promises-36da"&gt;Best Practices for ES6 Promises ‚Äî Basti Ortiz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/zurvin/lo-que-debemos-saber-de-escript-2020-5fc61da5e4cd"&gt;Lo que debemos saber de EScript 2020 ‚Äî Kike Sanchez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/promise-basics"&gt;Promise Basics - javascript.info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.webdevsimplified.com/2021-09/javascript-promises"&gt;The Complete JavaScript Promise Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/promise-chaining"&gt;Promise Chaining - javascript.info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vQ3MoXnKfuQ"&gt;Let's Learn ES6 - Promises ‚Äî Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XJEHuBZQ5dU"&gt;JavaScript ES6 / ES2015 Promises ‚Äî Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2d7s3spWAzo"&gt;Promises ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=f8IgdnYIwOU"&gt;Error Handling Promises in JavaScript ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QO4NXhWo_NM"&gt;Promises Part 1 - Topics of JavaScript/ES6 ‚Äî The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RvYYCGs45L4"&gt;JavaScript Promise in 100 Seconds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/3NjdOtHpcBM"&gt;JavaScript Promise in 9 Minutes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DHvZLI7Db8E"&gt;JavaScript Promises In 10 Minutes ‚Äî Web Dev Simplified &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/ap-6PPAuK1Y?si=Ri1fopXeYjlrHzpf"&gt;Promises | Ep 02 Season 02 - Namaste JavaScript - Akshay Saini &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;26. async/await&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/async-await"&gt;async/await ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://eloquentjavascript.net/11_async.html"&gt;Eloquent JavaScript, 3rd Edition: Ch. 11 - Asynchronous Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://exploringjs.com/es6/ch_async.html"&gt;Exploring JS: Asynchronous Programming&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-async-await-in-javascript-1d81bb079b2c"&gt;Understanding async/await in Javascript ‚Äî Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/asynchronous-javascript-using-async-await"&gt;Asynchronous Javascript using async/await ‚Äî Joy Warugu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flaviocopes.com/javascript-async-await/"&gt;Modern Asynchronous JavaScript with async/await ‚Äî Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@_bengarrison/javascript-es8-introducing-async-await-functions-7a471ec7de8a"&gt;Javascript ‚Äî ES8 Introducing async/await Functions ‚Äî Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/avoiding-the-async-await-hell-c77a0fb71c4c"&gt;How to escape async/await hell ‚Äî Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/understanding-javascript-async-await"&gt;Understanding JavaScript's async await ‚Äî Nicol√°s Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://techbrij.com/javascript-async-await-parallel-sequence"&gt;JavaScript Async/Await: Serial, Parallel and Complex Flow ‚Äî TechBrij&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.pusher.com/promises-async-await/"&gt;From JavaScript Promises to Async/Await: why bother? ‚Äî Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/flow-control-callbacks-promises-async-await/"&gt;Flow Control in Modern JS: Callbacks to Promises to Async/Await ‚Äî Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/improve-your-asynchronous-javascript-code-with-async-and-await-c02fc3813eda"&gt;How to improve your asynchronous Javascript code with async and await ‚Äî Indrek Lasn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@micksheridan.24/making-fetches-easy-with-async-await-8a1246efa1f6"&gt;Making Fetches Easy With Async Await ‚Äî Mickey Sheridan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/gafi/7-reasons-to-always-use-async-await-over-plain-promises-tutorial-4ej9"&gt;7 Reasons Why JavaScript Async/Await Is Better Than Plain Promises ‚Äî Mostafa Gaafar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/jscrambler/asynchronous-operations-in-javascript-2p6b"&gt;Asynchronous Operations in JavaScript ‚Äî Jscrambler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/better-programming/should-i-use-promises-or-async-await-126ab5c98789"&gt;JavaScript: Promises or async-await ‚Äî Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/zhiyuanamos/async-await-from-zero-to-hero-a22"&gt;Async / Await: From Zero to Hero ‚Äî Zhi Yuan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke"&gt;JavaScript Visualized: Promises &amp;amp; Async/Await ‚Äî Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await"&gt;Making asynchronous programming easier with async and await ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-async-await-tutorial-learn-callbacks-promises-async-await-by-making-icecream/"&gt;JavaScript Async/Await Tutorial ‚Äì Learn Callbacks, Promises, and Async/Await in JS by Making Ice Cream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.webdevsimplified.com/2021-11/async-await/"&gt;Better Than Promises - JavaScript Async/Await&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=exBgWAIeIeg"&gt;Asynchronous JavaScript Crash Course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9YkUCxvaLEk"&gt;Async + Await ‚Äî Wes Bos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SrNQS8J67zc"&gt;Asynchrony: Under the Hood ‚Äî Shelley Vohr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=568g8hxJJp4&amp;amp;index=3&amp;amp;list=PL0zVEGEvSaeHJppaRLrqjeTPnCH6"&gt;async/await in JavaScript - What, Why and How ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XO77Fib9tSI&amp;amp;index=3&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx"&gt;async/await Part 1 - Topics of JavaScript/ES8 ‚Äî The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=chavThlNz3s&amp;amp;index=4&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx"&gt;async/await Part 2 - Topics of JavaScript/ES8 ‚Äî The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=krAYA4rvbdA"&gt;Complete Guide to JS Async &amp;amp; Await ES2017/ES8 ‚Äî Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_9vgd9XKlDQ"&gt;Tips for using async/await in JavaScript ‚Äî James Q Quick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=V_Kr9OSfDeU"&gt;JavaScript Async Await ‚Äî Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/Gjbr21JLfgg?si=SDCVKr9ONw2GsNdT"&gt;Promise async and await in javascript ‚Äî Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;27. Data Structures&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/siliconwat/data-structures-in-javascript-1b9aed0ea17c"&gt;Data Structures in JavaScript ‚Äî Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://itnext.io/algorithms-and-data-structures-in-javascript-a71548f902cb"&gt;Algorithms and Data Structures in JavaScript ‚Äî Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/courses/10-need-to-know-javascript-concepts/data-structures-objects-and-arrays"&gt;Data Structures: Objects and Arrays ‚Äï Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://blog.benoitvallon.com/data-structures-in-javascript/data-structures-in-javascript/"&gt;Data structures in JavaScript ‚Äî Benoit Vallon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.cloudboost.io/playing-with-data-structures-in-javascript-stack-a55ebe50f29d"&gt;Playing with Data Structures in Javascript ‚Äî Anish K.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/the-little-guide-of-queue-in-javascript-4f67e79260d9"&gt;The Little Guide of Queue in JavaScript ‚Äî Germ√°n Cutraro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/barretlee/algorithms"&gt;All algorithms writing with JavaScript in the book 'Algorithms Fourth Edition'&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nzakas/computer-science-in-javascript"&gt;Collection of classic computer science paradigms in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jamiebuilds/itsy-bitsy-data-structures"&gt;All the things you didn't know you wanted to know about data structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/miku86/series/3259"&gt;JavaScript Data Structures: 40 Part Series ‚Äî miku86&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/data-structures-understanding-graphs-82509d35e6b5"&gt;Data Structures: Understanding Graphs ‚Äî Rachel Hawa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/freddieduffield/data-structures-two-ways-linked-list-2n61"&gt;Data Structures Two Ways: Linked List (Pt 1) ‚Äî Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/freddieduffield/data-structures-two-ways-linked-list-pt2-2i60"&gt;Data Structures Two Ways: Linked List (Pt 2) ‚Äî Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/amejiarosario/graph-data-structures-for-beginners-5edn"&gt;Graph Data Structures Explained in JavaScript ‚Äî Adrian Mejia&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=H_EBPZgiAas&amp;amp;list=PLDmvslp_VR0zYUSth_8O69p4_cmvZEgLa"&gt;Algorithms In Javascript | Ace Your Interview ‚Äî Eduonix Learning Solutions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Gj5qBheGOEo&amp;amp;list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ"&gt;Data Structures and Algorithms in JavaScript ‚Äî freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Ymh_AurrMbA"&gt;Learning JavaScript Data Structures and Algorithms: Sorting ‚Äî Packt Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=41GSinwoMYA&amp;amp;ab_channel=Academind"&gt;JavaScript Data Structures: Getting Started ‚Äî Academind&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;28. Expensive Operation and Big O Notation&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/cesars-tech-insights/big-o-notation-javascript-25c79f50b19b"&gt;Big O Notation in Javascript ‚Äî C√©sar Ant√≥n Dorantes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/time-complexity-big-o-notation-1a4310c3ee4b"&gt;Time Complexity/Big O Notation ‚Äî Tim Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@gmedina229/big-o-in-javascript-36ff67766051"&gt;Big O in JavaScript ‚Äî Gabriela Medina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bradoncode.com/blog/2012/04/big-o-algorithm-examples-in-javascript.html"&gt;Big O Search Algorithms in JavaScript ‚Äî Bradley Braithwaite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/time-is-complex-but-priceless-f0abd015063c"&gt;Algorithms in plain English: time complexity and Big-O Notation ‚Äî Michael Olorunnisola&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lofiandcode/an-introduction-to-big-o-notation-210o"&gt;An Introduction to Big O Notation ‚Äî Joseph Trettevik&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HgA5VOFan5E"&gt;JavaScript: Intro to Big O Notation and Function Runtime ‚Äî Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KatlvCFHPRo"&gt;Essential Big O for JavaScript Developers ‚Äî Dave Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ALl86xJiTD8"&gt;Big O Notation - Time Complexity Analysis ‚Äî WebTunings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=itn09C2ZB9Y"&gt;Learn Big O Notation In 12 Minutes - Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3yUuo7TqMW8"&gt;JavaScript Algorithms: Big-O Notation - Codevolution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JgWm6sQwS_I"&gt;JavaScript Algorithms Crash Course: Learn Algorithms &amp;amp; "Big O" from the Ground Up! - Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=LaexPVi1VRE"&gt;Big O Notation - Data Structures and Algorithms in Javascript - RoadSideCoder&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;29. Algorithms&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Crizstian/data-structure-and-algorithms-with-ES6"&gt;Data Structures and Algorithms using ES6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.thatjsdude.com/interview/js1.html"&gt;JS: Interview Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/siliconwat/algorithms-in-javascript-b0bed68f4038"&gt;Algorithms in JavaScript ‚Äî Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/javascript-objects-square-brackets-and-algorithms-e9a2916dc158"&gt;JavaScript Objects, Square Brackets and Algorithms ‚Äî Dmitri Grabov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/felipernb/algorithms.js"&gt;Atwood's Law applied to CS101 - Classic algorithms and data structures implemented in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yangshun/lago"&gt;Data Structures and Algorithms library in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/idosela/algorithms-in-javascript"&gt;Collection of computer science algorithms and data structures written in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/trekhleb/algorithms-and-data-structures-in-javascript-49i3"&gt;Algorithms and Data Structures in JavaScript ‚Äî Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/playlist?list=PLC3y8-rFHvwiRYB4-HHKHblh3_bQNJTMa"&gt;JavaScript Algorithms - Codevolution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/watch?v=oBt53YbR9Kk&amp;amp;t=1021s"&gt;Dynamic Programming - Learn to Solve Algorithmic Problems &amp;amp; Coding Challenges - FreeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/playlist?list=PLKhlp2qtUcSZtJefDThsXcsAbRBCSTgW4"&gt;Data Structures and Algorithms in Javascript | DSA with JS - RoadsideCoder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/playlist?list=PLn2ipk-jqgZiAHiA70hOxAj8RMUeqYNK3"&gt;Javascript Algorithms + Data Structures - KodingKevin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/watch?v=41GSinwoMYA"&gt;JavaScript Data Structures: Getting Started - Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/playlist?list=PLRqwX-V7Uu6ZiZxtDDRCi6uhfTH4FilpH"&gt;Algorithms and Data Structures - The Coding Train (Daniel Shiffman)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;30. Inheritance, Polymorphism and Code Reuse&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Inheritance"&gt;Inheritance in JavaScript ‚Äî MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/class-inheritance"&gt;Class inheritance, super ‚Äî JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/inheritance-in-javascript-21d2b82ffa6f"&gt;Inheritance in JavaScript ‚Äî Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/simple-inheritance-javascript/"&gt;Simple Inheritance with JavaScript ‚Äî David Catuhe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-inheritance-25fe61ab9f85"&gt;JavaScript ‚Äî Inheritance, delegation patterns and Object linking ‚Äî NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.knoldus.com/object-oriented-javascript-polymorphism-with-examples/"&gt;Object Oriented JavaScript: Polymorphism with examples ‚Äî Knoldus Blogs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/yld-blog/program-like-proteus-a-beginners-guide-to-polymorphism-in-javascript-867bea7c8be2"&gt;Program Like Proteus ‚Äî A beginner's guide to polymorphism in Javascript ‚Äî Sam Galson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/object-oriented-javascript-deep-dive-es6-classes/"&gt;Object-oriented JavaScript: A Deep Dive into ES6 Classes ‚Äî Jeff Mott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://prototypr.io/post/unlocking-the-power-of-polymorphism-in-javascript-a-deep-dive"&gt;Unlocking the Power of Polymorphism in JavaScript: A Deep Dive&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yXlFR81tDBM"&gt;Inheritance in JavaScript ‚Äî kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RBLIm5LMrmc"&gt;JavaScript ES6 Classes and Inheritance ‚Äî Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zdovG9cuEBA"&gt;Polymorphism in JavaScript ‚Äî kudvenkat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;31. Design Patterns&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://addyosmani.com/resources/essentialjsdesignpatterns/book/"&gt;Learning JavaScript Design Patterns ‚Äî Addy Osmani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pepa.holla.cz/wp-content/uploads/2016/08/Pro-JavaScript-Design-Patterns.pdf"&gt;Pro JavaScript Design Patterns ‚Äî Ross Harmes and Dustin Diaz&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-design-patterns-explained/"&gt;JavaScript Design Patterns ‚Äì Explained with Examples ‚Äî Germ√°n Cocca&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know"&gt;4 JavaScript Design Patterns You Should Know ‚Äî Devan Patel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/beginners-guide-to-mobile-web-development/javascript-design-patterns-25f0faaaa15"&gt;JavaScript Design Patterns ‚Äì Beginner's Guide to Mobile Web Development ‚Äî Soumyajit Pathak&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/javascript-design-patterns-ed9d4c144c81"&gt;JavaScript Design Patterns ‚Äî Akash Pal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-design-patterns-in-javascript-13345223f2dd"&gt;JavaScript Design Patterns: Understanding Design Patterns in JavaScript - Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fbeline/Design-Patterns-JS"&gt;All the 23 (GoF) design patterns implemented in Javascript ‚Äî Felipe Beline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/better-programming/the-power-of-the-module-pattern-in-javascript-3c73f7cd10e8"&gt;The Power of the Module Pattern in JavaScript ‚Äî jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/omensah/design-patterns-for-developers-using-javascript----part-one--b3e"&gt;Design Patterns for Developers using JavaScript pt. I ‚Äî Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/omensah/design-patterns-for-developers-using-javascript---part-two--3p39"&gt;Design Patterns for Developers using JavaScript pt. II ‚Äî Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://levelup.gitconnected.com/design-patterns-in-modern-javascript-development-ec84d8be06ca"&gt;Design patterns in modern JavaScript development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/carlillo/understanding-design-patterns-iterator-using-dev-to-and-medium-social-networks-3bdd"&gt;Understanding Design Patterns: Iterator using Dev.to and Medium social networks! ‚Äî Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/kristijanfistrek/javascript-design-patterns-factory-pattern-562p"&gt;JavaScript Design Patterns - Factory Pattern ‚Äî KristijanFi≈°trek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/javascript-design-pattern-module-pattern-555737eccecd"&gt;JavaScript Design Pattern ‚Äî Module Pattern - Factory Pattern ‚Äî Moon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/better-programming/design-patterns-null-object-5ee839e37892"&gt;Design Patterns: Null Object - Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/francescoxx/strategy-pattern-5oh"&gt;Strategy Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/francescoxx/adapter-pattern-5bjk"&gt;Adapter Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/jsmanifest/the-power-of-composite-pattern-in-javascript-2732"&gt;The Power of Composite Pattern in JavaScript - jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/bytebodger/in-defense-of-defensive-programming-k45"&gt;In Defense of Defensive Programming - Adam Nathaniel Davis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptpatterns.vercel.app/patterns"&gt;JavaScript Patterns Workshop ‚Äî Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.udacity.com/course/javascript-design-patterns--ud989"&gt;JavaScript Design Patterns ‚Äî Udacity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hO7mzO83N1Q"&gt;JavaScript Patterns for 2017 ‚Äî Scott Allen&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;32. Partial Applications, Currying, Compose and Pipe&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/Functional-Light-JS/raw/master/manuscript/ch3.md"&gt;Functional-Light JavaScript: Ch. 3 - Managing Function Inputs ‚Äî Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@pragyan88/writing-middleware-composition-and-currying-elegance-in-javascript-8b15c98a541b"&gt;Composition and Currying Elegance in JavaScript ‚Äî Pragyan Das&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-functional-composition-for-every-day-use-22421ef65a10"&gt;Functional JavaScript: Function Composition For Every Day Use ‚Äî Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@acparas/what-i-learned-today-july-2-2017-ab9a46dbf85f"&gt;Functional Composition: compose() and pipe() ‚Äî Anton Paras&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://busypeoples.github.io/post/functional-composing-javascript/"&gt;Why The Hipsters Compose Everything: Functional Composing In JavaScript ‚Äî A. Sharif&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jrsinclair.com/articles/2016/gentle-introduction-to-functional-javascript-functions/"&gt;A Gentle Introduction to Functional JavaScript pt III: Functions for making functions ‚Äî James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jsleao.wordpress.com/2015/02/22/curry-and-compose-why-you-should-be-using-something-like-ramda-in-your-code/"&gt;Curry And Compose (why you should be using something like ramda in your code) ‚Äî jsanchesleao&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vanslaars.io/post/create-pipe-function/"&gt;Function Composition in JavaScript with Pipe ‚Äî Andy Van Slaars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.telerik.com/featured/practical-functional-javascript-ramda/"&gt;Practical Functional JavaScript with Ramda ‚Äî Andrew D'Amelio, Yuri Takhteyev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/the-beauty-in-partial-application-currying-and-function-composition-d885bdf0d574"&gt;The beauty in Partial Application, Currying, and Function Composition ‚Äî Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/curry-or-partial-application-8150044c78b8"&gt;Curry or Partial Application? ‚Äî Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://benalman.com/news/2012/09/partial-application-in-javascript/"&gt;Partial Application in JavaScript ‚Äî Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/partial-application-of-functions-dbe7d9b80760"&gt;Partial Application of Functions ‚Äî Functional Reactive Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://raganwald.com/2015/04/01/partial-application.html"&gt;Partial Application in ECMAScript 2015 ‚Äî Ragan Wald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536"&gt;So You Want to be a Functional Programmer pt. I ‚Äî Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-2-7005682cec4a"&gt;So You Want to be a Functional Programmer pt. II ‚Äî Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-3-1b0fd14eb1a7"&gt;So You Want to be a Functional Programmer pt. III ‚Äî Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-4-18fbe3ea9e49"&gt;So You Want to be a Functional Programmer pt. IV ‚Äî Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-5-c70adc9cf56a"&gt;So You Want to be a Functional Programmer pt. V ‚Äî Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/an-introduction-to-the-basic-principles-of-functional-programming-a2c2a15c84"&gt;An introduction to the basic principles of Functional Programming ‚Äî TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/the-renaissance-developer/concepts-of-functional-programming-in-javascript-6bc84220d2aa"&gt;Concepts of Functional Programming in javascript ‚Äî TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/an-introduction-to-functional-programming-style-in-javascript-71fcc050f064"&gt;An Introduction to Functional Programming Style in JavaScript ‚Äî JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/a-practical-guide-to-writing-more-functional-javascript-db49409f71"&gt;A practical guide to writing more functional JavaScript ‚Äî Nadeesha Cabral&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/benlesh/a-simple-explanation-of-functional-pipe-in-javascript-2hbj"&gt;A simple explanation of functional pipe in JavaScript ‚Äî Ben Lesh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Wl2ejJOqHUU"&gt;Compose vs Pipe: Functional Programming in JavaScript ‚Äî Chyld Studios&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jigHxo9YR30"&gt;JavaScript Functional Programing: Compose ‚Äî Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mth5WpEc4Qs"&gt;Function Composition - Functional JavaScript ‚Äî NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Uam37AlzPYw"&gt;JavaScript Function Composition Explained ‚Äî Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VGB9HbL1GHk"&gt;Let's code with function composition ‚Äî Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DzLkRsUN2vE"&gt;Partial Application vs. Currying ‚Äî NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jkebgHEcvac"&gt;JavaScript Partial Application ‚Äî Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=75W8UPQ5l7k&amp;amp;t=261s"&gt;call, apply and bind method in JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;33. Clean Code&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/clean-coding-for-beginners/"&gt;Clean Code Explained ‚Äì A Practical Introduction to Clean Coding for Beginners ‚Äî freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;Clean Code concepts adapted for JavaScript ‚Äî Ryan McDermott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@kevin_peters/function-parameters-in-javascript-clean-code-4caac109159b"&gt;Function parameters in JavaScript Clean Code ‚Äî Kevin Peters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/keeping-your-code-clean-d30bcffd1a10"&gt;Keeping your code clean ‚Äî Samuel James&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/modern-javascript-best-practices/"&gt;Best Practices for Using Modern JavaScript Syntax ‚Äî M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cross-js/cross-js"&gt;best practices for cross node/web development - Jimmy W√§rting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ganderzz/on-writing-clean-code-57cm"&gt;Writing Clean Code - Dylan Paulus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/nityeshaga/writing-clean-code-and-the-practice-of-programming-actionable-advice-for-beginners-5f0k"&gt;Writing Clean Code and The Practice of Programming - Nityesh Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/d_ir/clean-code-dirty-code-human-code-6nm"&gt;Clean code, dirty code, human code - Daniel Irvine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/taillogs/practical-ways-to-write-better-javascript-26d4"&gt;Practical Ways to Write Better JavaScript - Ryland G&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/swlh/the-must-know-clean-code-principles-1371a14a2e75"&gt;The Must-Know Clean Code Principles - Kesk on Medium&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882/"&gt;The Clean Code Book - Robert C Martin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/how-to-use-destructuring-in-javascript-to-write-cleaner-more-powerful-code-9d1b38794050/"&gt;How to use destructuring in JavaScript to write cleaner, more powerful code - freecodecamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterprogramming.pub/write-clean-code-using-javascript-object-destructuring-3551302130e7"&gt;Write Clean Code Using JavaScript Object Destructuring - Asel Siriwardena&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/watch?v=Mus_vwhTCq0"&gt;JavaScript Pro Tips - Code This, NOT That&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/watch?v=b9c5GmmS7ks&amp;amp;list=PLWKjhJtqVAbkK24EaPurzMq0-kw5U9pJh&amp;amp;index=1"&gt;Clean Code playlist - Beau teaches&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://youtu.be/RMN_bkZ1KM0?si=Ssg3cNZ_DB7CIwKQ"&gt;JavaScript Best Practices and Coding Conventions - Write Clean Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://youtu.be/vPXzVNmCPg4?si=QR1k4E6Zx5H4mfcs"&gt;JavaScript Clean Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üé• &lt;a href="https://www.youtube.com/watch?v=0wHyoBPc6zs"&gt;Tips On Learning How To Code&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img align="center" width="35" height="35" src="https://moein.video/wp-content/uploads/2022/05/license-GIF-Certificate-Royalty-Free-Animated-Icon-350px-after-effects-project.gif" /&gt; &lt;a id="license"&gt;License&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;This software is licensed under MIT License. See &lt;a href="https://github.com/leonardomso/33-js-concepts/raw/master/LICENSE"&gt;License&lt;/a&gt; for more information ¬©Leonardo Maldonado.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;‚¨Ü Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt;Happy Learning! ‚≠ê&lt;/strong&gt; 
 &lt;p&gt;If you find this repository helpful, please consider giving it a star!&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>MagicMirrorOrg/MagicMirror</title>
      <link>https://github.com/MagicMirrorOrg/MagicMirror</link>
      <description>&lt;p&gt;MagicMirror¬≤ is an open source modular smart mirror platform. With a growing list of installable modules, the MagicMirror¬≤ allows you to convert your hallway or bathroom mirror into your personal assistant.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://raw.githubusercontent.com/MagicMirrorOrg/MagicMirror/master/.github/header.png" alt="MagicMirror¬≤: The open source modular smart mirror platform." /&gt;&lt;/h1&gt; 
&lt;p style="text-align: center"&gt; &lt;a href="https://choosealicense.com/licenses/mit"&gt; &lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="License" /&gt; &lt;/a&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/magicmirrororg/magicmirror/automated-tests.yaml" alt="GitHub Actions" /&gt; &lt;img src="https://img.shields.io/github/check-runs/magicmirrororg/magicmirror/master" alt="Build Status" /&gt; &lt;a href="https://github.com/MagicMirrorOrg/MagicMirror"&gt; &lt;img src="https://img.shields.io/github/stars/magicmirrororg/magicmirror?style=social" alt="GitHub Stars" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;MagicMirror¬≤&lt;/strong&gt; is an open source modular smart mirror platform. With a growing list of installable modules, the &lt;strong&gt;MagicMirror¬≤&lt;/strong&gt; allows you to convert your hallway or bathroom mirror into your personal assistant. &lt;strong&gt;MagicMirror¬≤&lt;/strong&gt; is built by the creator of &lt;a href="https://michaelteeuw.nl/tagged/magicmirror"&gt;the original MagicMirror&lt;/a&gt; with the incredible help of a &lt;a href="https://github.com/MagicMirrorOrg/MagicMirror/graphs/contributors"&gt;growing community of contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;MagicMirror¬≤ focuses on a modular plugin system and uses &lt;a href="https://www.electronjs.org/"&gt;Electron&lt;/a&gt; as an application wrapper. So no more web server or browser installs necessary!&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For the full documentation including &lt;strong&gt;&lt;a href="https://docs.magicmirror.builders/getting-started/installation.html"&gt;installation instructions&lt;/a&gt;&lt;/strong&gt;, please visit our dedicated documentation website: &lt;a href="https://docs.magicmirror.builders"&gt;https://docs.magicmirror.builders&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href="https://magicmirror.builders"&gt;https://magicmirror.builders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://docs.magicmirror.builders"&gt;https://docs.magicmirror.builders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Forum: &lt;a href="https://forum.magicmirror.builders"&gt;https://forum.magicmirror.builders&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Technical discussions: &lt;a href="https://forum.magicmirror.builders/category/11/core-system"&gt;https://forum.magicmirror.builders/category/11/core-system&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Discord: &lt;a href="https://discord.gg/J5BAtvx"&gt;https://discord.gg/J5BAtvx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Blog: &lt;a href="https://michaelteeuw.nl/tagged/magicmirror"&gt;https://michaelteeuw.nl/tagged/magicmirror&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Donations: &lt;a href="https://magicmirror.builders/#donate"&gt;https://magicmirror.builders/#donate&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing Guidelines&lt;/h2&gt; 
&lt;p&gt;Contributions of all kinds are welcome, not only in the form of code but also with regards to&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;bug reports&lt;/li&gt; 
 &lt;li&gt;documentation&lt;/li&gt; 
 &lt;li&gt;translations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the full contribution guidelines, check out: &lt;a href="https://docs.magicmirror.builders/about/contributing.html"&gt;https://docs.magicmirror.builders/about/contributing.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Enjoying MagicMirror? Consider a donation!&lt;/h2&gt; 
&lt;p&gt;MagicMirror¬≤ is Open Source and free. That doesn't mean we don't need any money.&lt;/p&gt; 
&lt;p&gt;Please consider a donation to help us cover the ongoing costs like webservers and email services. If we receive enough donations we might even be able to free up some working hours and spend some extra time improving the MagicMirror¬≤ core.&lt;/p&gt; 
&lt;p&gt;To donate, please follow &lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=G5D8E9MR5DTD2&amp;amp;source=url"&gt;this&lt;/a&gt; link.&lt;/p&gt; 
&lt;p style="text-align: center"&gt; &lt;a href="https://forum.magicmirror.builders/topic/728/magicmirror-is-voted-number-1-in-the-magpi-top-50"&gt;&lt;img src="https://magicmirror.builders/img/magpi-best-watermark-custom.png" width="150" alt="MagPi Top 50" /&gt;&lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sveltejs/kit</title>
      <link>https://github.com/sveltejs/kit</link>
      <description>&lt;p&gt;web development, streamlined&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://svelte.dev/chat"&gt;&lt;img src="https://img.shields.io/discord/457912077277855764?label=chat&amp;amp;logo=discord" alt="Chat" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;SvelteKit&lt;/h1&gt; 
&lt;p&gt;Web development, streamlined. Read the &lt;a href="https://svelte.dev/docs/kit"&gt;documentation&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h3&gt;Packages&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package&lt;/th&gt; 
   &lt;th&gt;Changelog&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/kit"&gt;@sveltejs/kit&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/kit/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/adapter-auto"&gt;@sveltejs/adapter-auto&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/adapter-auto/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/adapter-cloudflare"&gt;@sveltejs/adapter-cloudflare&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/adapter-cloudflare/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/adapter-netlify"&gt;@sveltejs/adapter-netlify&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/adapter-netlify/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/adapter-node"&gt;@sveltejs/adapter-node&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/adapter-node/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/adapter-static"&gt;@sveltejs/adapter-static&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/adapter-static/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/adapter-vercel"&gt;@sveltejs/adapter-vercel&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/adapter-vercel/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/amp"&gt;@sveltejs/amp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/amp/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/enhanced-img"&gt;@sveltejs/enhanced-img&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/enhanced-img/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/package"&gt;@sveltejs/package&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/packages/package/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;a href="https://sveltesociety.dev/packages?category=sveltekit-adapters"&gt;Additional adapters&lt;/a&gt; are maintained by the community.&lt;/p&gt; 
&lt;h2&gt;Bug reporting&lt;/h2&gt; 
&lt;p&gt;Please make sure the issue you're reporting involves SvelteKit. Many issues related to how a project builds originate from &lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt;, which is used to build a SvelteKit project. You can create a new Vite project with &lt;code&gt;npm create vite@latest&lt;/code&gt; for client-side only repros and &lt;code&gt;npm create vite-extra@latest&lt;/code&gt; for SSR or library repros.&lt;/p&gt; 
&lt;p&gt;If an issue originates from Vite, please report it in the &lt;a href="https://github.com/vitejs/vite/issues"&gt;Vite issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/sveltejs/kit/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for information on how to develop SvelteKit locally.&lt;/p&gt; 
&lt;h2&gt;Supporting Svelte&lt;/h2&gt; 
&lt;p&gt;Svelte is an MIT-licensed open source project with its ongoing development made possible entirely by fantastic volunteers. If you'd like to support their efforts, please consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://opencollective.com/svelte"&gt;Becoming a backer on Open Collective&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Funds donated via Open Collective will be used for compensating expenses related to Svelte's development such as hosting costs. If sufficient donations are received, funds may also be used to support Svelte's development more directly.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/sveltejs/kit/raw/main/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gnmyt/MySpeed</title>
      <link>https://github.com/gnmyt/MySpeed</link>
      <description>&lt;p&gt;A speed test analysis software that shows your internet speed for up to 30 days&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/gnmyt/myspeed/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/gnmyt/myspeed.svg?style=for-the-badge" alt="Contributors" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gnmyt/myspeed/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/gnmyt/myspeed.svg?style=for-the-badge" alt="Forks" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gnmyt/myspeed/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/gnmyt/myspeed.svg?style=for-the-badge" alt="Stargazers" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gnmyt/myspeed/issues"&gt;&lt;img src="https://img.shields.io/github/issues/gnmyt/myspeed.svg?style=for-the-badge" alt="Issues" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gnmyt/myspeed/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/gnmyt/myspeed.svg?style=for-the-badge" alt="MIT License" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gnmyt/myspeed/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/gnmyt/myspeed.svg?style=for-the-badge" alt="Release" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/gnmyt/myspeed"&gt; &lt;img src="https://i.imgur.com/aCmA6rH.png" alt="Logo" width="80" height="80" /&gt; &lt;/a&gt; 
 &lt;h3&gt;MySpeed &lt;a href="https://raw.githubusercontent.com/gnmyt/MySpeed/development/README.de.md"&gt;üá©üá™&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/gnmyt/MySpeed/development/README.md"&gt;üá∫üá∏&lt;/a&gt;&lt;/h3&gt; 
&lt;/div&gt; 
&lt;h2&gt;ü§î What is MySpeed?&lt;/h2&gt; 
&lt;p&gt;MySpeed is a speed test analysis software that records your internet speed for up to 30 days.&lt;/p&gt; 
&lt;h3&gt;‚≠ê Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìä MySpeed generates clear statistics on speed, ping, and more&lt;/li&gt; 
 &lt;li&gt;‚è∞ MySpeed automates speed tests and allows you to set the time between tests using Cron expressions&lt;/li&gt; 
 &lt;li&gt;üóÑÔ∏è Add multiple servers directly to a MySpeed instance&lt;/li&gt; 
 &lt;li&gt;ü©∫ Configure health checks to notify you via email, Signal, WhatsApp, or Telegram in case of errors or downtime&lt;/li&gt; 
 &lt;li&gt;üìÜ Test results can be stored for up to 30 days&lt;/li&gt; 
 &lt;li&gt;üî• Support for Prometheus and Grafana&lt;/li&gt; 
 &lt;li&gt;üó≥Ô∏è Choose between Ookla, LibreSpeed and Cloudflare speed test servers&lt;/li&gt; 
 &lt;li&gt;üíÅ Learn more about MySpeed on our &lt;a href="https://myspeed.dev"&gt;website&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;‚¨áÔ∏è Installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üêß Guide for &lt;a href="https://docs.myspeed.dev/setup/linux"&gt;Linux&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ü™ü Guide for &lt;a href="https://docs.myspeed.dev/setup/windows"&gt;Windows&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üì∏ Example Screenshots&lt;/h3&gt; 
&lt;h4&gt;Homepage (List View)&lt;/h4&gt; 
&lt;img src="https://i.imgur.com/NHX7Ba9.png" alt="Homepage" /&gt; 
&lt;h4&gt;Homepage (Statistics View)&lt;/h4&gt; 
&lt;img src="https://i.imgur.com/5JAFgrk.png" alt="Statistics" /&gt; 
&lt;h4&gt;Server Selection&lt;/h4&gt; 
&lt;img src="https://i.imgur.com/hgOR93G.png" alt="Server Selection" /&gt; 
&lt;h4&gt;Dropdown Menu&lt;/h4&gt; 
&lt;img src="https://i.imgur.com/alKEMrg.png" alt="Dropdown Menu" /&gt; 
&lt;h4&gt;Page During a Speed Test&lt;/h4&gt; 
&lt;img src="https://i.imgur.com/kxsrjIe.png" alt="Page During a Speed Test" /&gt; 
&lt;h2&gt;Convinced?&lt;/h2&gt; 
&lt;p&gt;Great, let's get started! You can find the installation instructions for Linux (and Windows) at the top under Installation.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Distributed under the MIT license. See &lt;code&gt;LICENSE&lt;/code&gt; for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>wangwangit/SubsTracker</title>
      <link>https://github.com/wangwangit/SubsTracker</link>
      <description>&lt;p&gt;Âü∫‰∫éCloudflare WorkersÁöÑËΩªÈáèÁ∫ßËÆ¢ÈòÖÁÆ°ÁêÜÁ≥ªÁªüÔºåÂ∏ÆÂä©ÊÇ®ËΩªÊùæË∑üË∏™ÂêÑÁ±ªËÆ¢ÈòÖÊúçÂä°ÁöÑÂà∞ÊúüÊó∂Èó¥ÔºåÂπ∂ÈÄöËøáTelegramÂèëÈÄÅÂèäÊó∂ÊèêÈÜí„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SubsTracker - ËÆ¢ÈòÖÁÆ°ÁêÜ‰∏éÊèêÈÜíÁ≥ªÁªü&lt;/h1&gt; 
&lt;p&gt;Âü∫‰∫éCloudflare WorkersÁöÑËΩªÈáèÁ∫ßËÆ¢ÈòÖÁÆ°ÁêÜÁ≥ªÁªüÔºåÂ∏ÆÂä©ÊÇ®ËΩªÊùæË∑üË∏™ÂêÑÁ±ªËÆ¢ÈòÖÊúçÂä°ÁöÑÂà∞ÊúüÊó∂Èó¥ÔºåÂπ∂ÈÄöËøá Telegram„ÄÅWebhook Á≠âÂ§öÊ∏†ÈÅìÂèëÈÄÅÂèäÊó∂ÊèêÈÜí„ÄÇ&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/22ff1592-7836-4f73-aa13-24e9d43d7064" alt="image" /&gt;&lt;/p&gt; 
&lt;h2&gt;‚ú® ÂäüËÉΩÁâπËâ≤&lt;/h2&gt; 
&lt;h3&gt;üéØ Ê†∏ÂøÉÂäüËÉΩ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ËÆ¢ÈòÖÁÆ°ÁêÜ&lt;/strong&gt;ÔºöÊ∑ªÂä†„ÄÅÁºñËæë„ÄÅÂà†Èô§ÂêÑÁ±ªËÆ¢ÈòÖÊúçÂä°&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êô∫ËÉΩÊèêÈÜí&lt;/strong&gt;ÔºöËá™ÂÆö‰πâÊèêÂâçÊèêÈÜíÂ§©Êï∞ÔºåËá™Âä®Áª≠ËÆ¢ËÆ°ÁÆó&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÜúÂéÜÊòæÁ§∫&lt;/strong&gt;ÔºöÊîØÊåÅÂÜúÂéÜÊó•ÊúüÊòæÁ§∫ÔºåÂèØÊéßÂà∂ÂºÄÂÖ≥&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Áä∂ÊÄÅÁÆ°ÁêÜ&lt;/strong&gt;ÔºöËÆ¢ÈòÖÂêØÁî®/ÂÅúÁî®ÔºåËøáÊúüÁä∂ÊÄÅËá™Âä®ËØÜÂà´&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üì± Â§öÊ∏†ÈÅìÈÄöÁü•&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Telegram&lt;/strong&gt;ÔºöÊîØÊåÅ Telegram Bot ÈÄöÁü•&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NotifyX&lt;/strong&gt;ÔºöÈõÜÊàê NotifyX Êé®ÈÄÅÊúçÂä°&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Webhook ÈÄöÁü•&lt;/strong&gt;ÔºöÊîØÊåÅËá™ÂÆö‰πâ Webhook Êé®ÈÄÅ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‰ºÅ‰∏öÂæÆ‰ø°Êú∫Âô®‰∫∫&lt;/strong&gt;ÔºöÊîØÊåÅ‰ºÅ‰∏öÂæÆ‰ø°Áæ§Êú∫Âô®‰∫∫ÈÄöÁü•&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÇÆ‰ª∂ÈÄöÁü•&lt;/strong&gt;ÔºöÂü∫‰∫é Resend ÁöÑ‰∏ì‰∏öÈÇÆ‰ª∂ÊúçÂä°&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bark&lt;/strong&gt;ÔºöÊîØÊåÅ iOS Bark Êé®ÈÄÅ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ëá™ÂÆö‰πâ Webhook&lt;/strong&gt;ÔºöÊîØÊåÅËá™ÂÆö‰πâËØ∑Ê±ÇÊ†ºÂºèÂíåÊ®°Êùø&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üåô ÂÜúÂéÜÂäüËÉΩ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÜúÂéÜËΩ¨Êç¢&lt;/strong&gt;ÔºöÊîØÊåÅ 1900-2100 Âπ¥ÂÜúÂéÜËΩ¨Êç¢&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êô∫ËÉΩÊòæÁ§∫&lt;/strong&gt;ÔºöÂàóË°®ÂíåÁºñËæëÈ°µÈù¢ÂèØÊéßÂà∂ÂÜúÂéÜÊòæÁ§∫&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÄöÁü•ÈõÜÊàê&lt;/strong&gt;ÔºöÈÄöÁü•Ê∂àÊÅØ‰∏≠ÂèØÂåÖÂê´ÂÜúÂéÜ‰ø°ÊÅØ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üé® Áî®Êà∑‰ΩìÈ™å&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂìçÂ∫îÂºèËÆæËÆ°&lt;/strong&gt;ÔºöÂÆåÁæéÈÄÇÈÖçÊ°åÈù¢Á´ØÂíåÁßªÂä®Á´Ø&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Â§áÊ≥®‰ºòÂåñ&lt;/strong&gt;ÔºöÈïøÂ§áÊ≥®Ëá™Âä®Êà™Êñ≠ÔºåÊÇ¨ÂÅúÊòæÁ§∫ÂÆåÊï¥ÂÜÖÂÆπ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÆûÊó∂È¢ÑËßà&lt;/strong&gt;ÔºöÊó•ÊúüÈÄâÊã©Êó∂ÂÆûÊó∂ÊòæÁ§∫ÂØπÂ∫îÂÜúÂéÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Áî®Êà∑ÂÅèÂ•Ω&lt;/strong&gt;ÔºöËÆ∞‰ΩèÁî®Êà∑ÁöÑÊòæÁ§∫ÂÅèÂ•ΩËÆæÁΩÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üöÄ ‰∏ÄÈîÆÈÉ®ÁΩ≤&lt;/h2&gt; 
&lt;h3&gt;ÁÇπÂáªÊåâÈíÆÔºå‰∏ÄÈîÆÈÉ®ÁΩ≤Âà∞ CloudFlare Workers,&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://deploy.workers.cloudflare.com/?url=https://github.com/wangwangit/SubsTracker"&gt;&lt;img src="https://deploy.workers.cloudflare.com/button" alt="Deploy to Cloudflare Workers" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ÈÄÇÁî®‰∫éÊñ∞ÈÉ®ÁΩ≤ÁöÑ,‰ª•ÂâçÈÉ®ÁΩ≤ËøáÁöÑÁõ¥Êé•ÊõøÊç¢js‰∏≠ÁöÑÂÜÖÂÆπÂç≥ÂèØ!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üìã ‰∏âÊ≠•ÂºÄÂßã‰ΩøÁî®&lt;/h2&gt; 
&lt;h3&gt;1Ô∏è‚É£ ‰∏ÄÈîÆÈÉ®ÁΩ≤&lt;/h3&gt; 
&lt;p&gt;Fork‰ªìÂ∫ì,ÁÑ∂ÂêéÁÇπÂáªËá™Â∑±‰ªìÂ∫ìÈáåÁöÑÈÉ®ÁΩ≤ÊåâÈíÆÔºåÁ≠âÂæÖÈÉ®ÁΩ≤ÂÆåÊàê,&lt;strong&gt;Ê≥®ÊÑè,KVÂêçÁß∞‰øÆÊîπ‰∏∫ &lt;code&gt;SUBSCRIPTIONS_KV&lt;/code&gt;&lt;/strong&gt; &lt;img src="https://img.wangwangit.com/file/1751942578108_image.png" alt="image.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;2Ô∏è‚É£ È¶ñÊ¨°ÁôªÂΩï&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ËÆøÈóÆÈÉ®ÁΩ≤ÂêéÁöÑÂüüÂêç&lt;/li&gt; 
 &lt;li&gt;ÈªòËÆ§Áî®Êà∑ÂêçÔºö&lt;code&gt;admin&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;ÈªòËÆ§ÂØÜÁ†ÅÔºö&lt;code&gt;password&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3Ô∏è‚É£ ÂºÄÂßã‰ΩøÁî®&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;‰øÆÊîπÈªòËÆ§ÂØÜÁ†Å&lt;/strong&gt;ÔºàËøõÂÖ•Á≥ªÁªüÈÖçÁΩÆÔºâ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÖçÁΩÆÈÄöÁü•Ê∏†ÈÅì&lt;/strong&gt;ÔºàÈÄâÊã©‰∏Ä‰∏™ÊàñÂ§ö‰∏™Ôºâ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ê∑ªÂä†ËÆ¢ÈòÖ&lt;/strong&gt;ÔºåËÆæÁΩÆÊèêÈÜí&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‰∫´ÂèóÊô∫ËÉΩÊèêÈÜí&lt;/strong&gt;ÔºÅ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üîß ÈÄöÁü•Ê∏†ÈÅìÈÖçÁΩÆ&lt;/h2&gt; 
&lt;h3&gt;Telegram&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Bot Token&lt;/strong&gt;: ‰ªé &lt;a href="https://t.me/BotFather"&gt;@BotFather&lt;/a&gt; Ëé∑Âèñ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chat ID&lt;/strong&gt;: ‰ªé &lt;a href="https://t.me/userinfobot"&gt;@userinfobot&lt;/a&gt; Ëé∑Âèñ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;NotifyX&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;API Key&lt;/strong&gt;: ‰ªé &lt;a href="https://www.notifyx.cn/"&gt;NotifyXÂÆòÁΩë&lt;/a&gt; Ëé∑Âèñ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;‰ºÅ‰∏öÂæÆ‰ø°Êú∫Âô®‰∫∫&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Êé®ÈÄÅ URL&lt;/strong&gt;: ÂèÇËÄÉ&lt;a href="https://developer.work.weixin.qq.com/document/path/91770"&gt;ÂÆòÊñπÊñáÊ°£&lt;/a&gt;Ëé∑Âèñ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Webhook ÈÄöÁü•&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Êé®ÈÄÅ URL&lt;/strong&gt;: Ê†πÊçÆÊâÄ‰ΩøÁî®ÁöÑ Webhook ÊúçÂä°ÊàñËá™Âª∫Êé•Âè£Â°´ÂÜôÔºå‰æãÂ¶Ç &lt;code&gt;https://your-service.com/hooks/notify&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅËá™ÂÆö‰πâËØ∑Ê±ÇÊñπÊ≥ï„ÄÅËØ∑Ê±ÇÂ§¥‰∏éÊ∂àÊÅØÊ®°Êùø&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ê®°ÊùøÂç†‰ΩçÁ¨¶&lt;/strong&gt;Ôºö&lt;code&gt;{{title}}&lt;/code&gt;„ÄÅ&lt;code&gt;{{content}}&lt;/code&gt;„ÄÅ&lt;code&gt;{{tags}}&lt;/code&gt;ÔºàÂ§öË°åÂΩ¢ÂºèÔºâ„ÄÅ&lt;code&gt;{{tagsLine}}&lt;/code&gt;„ÄÅ&lt;code&gt;{{timestamp}}&lt;/code&gt;„ÄÅ&lt;code&gt;{{formattedMessage}}&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;BarkÔºàiOS Êé®ÈÄÅÔºâ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÊúçÂä°Âô®Âú∞ÂùÄ&lt;/strong&gt;ÔºöÈªòËÆ§ &lt;code&gt;https://api.day.app&lt;/code&gt;Ôºå‰πüÂèØ‰ΩøÁî®Ëá™Âª∫ÊúçÂä°Âô®&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ËÆæÂ§á Key&lt;/strong&gt;ÔºöÂú® Bark App ÂÜÖÂ§çÂà∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂéÜÂè≤ËÆ∞ÂΩï&lt;/strong&gt;ÔºöÂãæÈÄâ‚Äú‰øùÂ≠òÊé®ÈÄÅ‚ÄùÂêéÂèØ‰øùÁïôÊé®ÈÄÅÂéÜÂè≤&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÈÇÆ‰ª∂ÈÄöÁü• (Resend)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;API Key&lt;/strong&gt;: ‰ªé &lt;a href="https://developers.cloudflare.com/workers/tutorials/send-emails-with-resend/"&gt;Resend ÂÆòÊñπÊïôÁ®ã&lt;/a&gt; Ëé∑Âèñ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Âèë‰ª∂‰∫∫ÈÇÆÁÆ±&lt;/strong&gt;: ÂøÖÈ°ªÊòØÂ∑≤Âú® Resend È™åËØÅÁöÑÂüüÂêçÈÇÆÁÆ±&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êî∂‰ª∂‰∫∫ÈÇÆÁÆ±&lt;/strong&gt;: Êé•Êî∂ÈÄöÁü•ÁöÑÈÇÆÁÆ±Âú∞ÂùÄ&lt;/li&gt; 
 &lt;li&gt;ÊîØÊåÅ HTML Ê†ºÂºèÁöÑÁæéËßÇÈÇÆ‰ª∂Ê®°Êùø&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üîî ÈÄöÁü•Êó∂Èó¥‰∏éÊó∂Âå∫ËØ¥Êòé&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Cloudflare Workers ÁöÑ Cron Ë°®ËææÂºè‰ΩøÁî® &lt;strong&gt;UTC Êó∂Âå∫&lt;/strong&gt;Ôºå‰æãÂ¶Ç &lt;code&gt;0 8 * * *&lt;/code&gt; Ë°®Á§∫ UTC 08:00 Ëß¶Âèë&lt;/li&gt; 
 &lt;li&gt;Ëã•Â∏åÊúõÂú®Âåó‰∫¨Êó∂Èó¥ÔºàUTC+8ÔºâÊó©‰∏ä 8 ÁÇπÊèêÈÜíÔºåÂèØÂ∞Ü Cron ËÆæÁΩÆ‰∏∫ &lt;code&gt;0 0 * * *&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Ëã•ÈúÄË¶ÅÂ∞èÊó∂Á∫ßÊèêÈÜíÔºåÂèØÂ∞Ü Cron Ë∞ÉÊï¥‰∏∫ &lt;code&gt;0 * * * *&lt;/code&gt;ÔºàÊØèÂ∞èÊó∂ÊâßË°å‰∏ÄÊ¨°ÔºâÔºåÂπ∂Âú®Á≥ªÁªüÈÖçÁΩÆ‰∏≠ÊåáÂÆöÂÖÅËÆ∏ÁöÑÈÄöÁü•Â∞èÊó∂&lt;/li&gt; 
 &lt;li&gt;Á≥ªÁªüÈÖçÁΩÆ‰∏≠ÁöÑ ‚ÄúÁ≥ªÁªüÊó∂Âå∫‚Äù Áî®‰∫éËÆ°ÁÆóËÆ¢ÈòÖÂâ©‰ΩôÊó∂Èó¥ÂíåÊ†ºÂºèÂåñÂ±ïÁ§∫ÔºåÂª∫ËÆÆ‰∏éÊèêÈÜíÈúÄÊ±Ç‰øùÊåÅ‰∏ÄËá¥&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üîê Á¨¨‰∏âÊñπ API ÂÆâÂÖ®Ë∞ÉÁî®&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÈÄöËøá &lt;code&gt;POST /api/notify/{token}&lt;/code&gt; ÂèØËß¶ÂèëÁ≥ªÁªüÈÄöÁü•ÔºåËØ∑Âú®ÂêéÂè∞ÈÖçÁΩÆ‚ÄúÁ¨¨‰∏âÊñπ API ËÆøÈóÆ‰ª§Áâå‚Äù&lt;/li&gt; 
 &lt;li&gt;‰ª§Áâå‰πüÂèØÈÄöËøá &lt;code&gt;Authorization: Bearer &amp;lt;token&amp;gt;&lt;/code&gt; Êàñ &lt;code&gt;?token=&amp;lt;token&amp;gt;&lt;/code&gt; ‰º†ÂÖ•&lt;/li&gt; 
 &lt;li&gt;Êú™ÈÖçÁΩÆÊàñ‰ª§Áâå‰∏çÂåπÈÖçÊó∂Êé•Âè£‰ºöÁõ¥Êé•ÊãíÁªùËØ∑Ê±ÇÔºåÂª∫ËÆÆÂÆöÊúüÊõ¥Êç¢ÈöèÊú∫‰ª§Áâå&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üí° &lt;strong&gt;ÊèêÁ§∫&lt;/strong&gt;: Á≥ªÁªüÈªòËÆ§ÊØèÂ§©Êó©‰∏ä8ÁÇπËá™Âä®Ê£ÄÊü•Âç≥Â∞ÜÂà∞ÊúüÁöÑËÆ¢ÈòÖ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Ê¨¢ËøéÂ§ßÂÆ∂ÂÖ≥Ê≥®ÊàëÁöÑÂÖ¨‰ºóÂè∑&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/96bae085-4299-4377-9958-9a3a11294efc" alt="39d8d5a902fa1eee6cbbbc8a0dcff4b" /&gt;&lt;/p&gt; 
&lt;h2&gt;üöÄ ÊâãÂä®ÈÉ®ÁΩ≤ÊåáÂçó&lt;/h2&gt; 
&lt;h3&gt;ÂâçÊèêÊù°‰ª∂&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;CloudflareË¥¶Êà∑&lt;/li&gt; 
 &lt;li&gt;Telegram Bot (Áî®‰∫éÂèëÈÄÅÈÄöÁü•)&lt;/li&gt; 
 &lt;li&gt;ÂèØ‰ª•Áõ¥Êé•Â∞Ü‰ª£Á†Å‰∏¢ÁªôAI,Â∏ÆÂä©Êü•ÊºèË°•Áº∫&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÈÉ®ÁΩ≤Ê≠•È™§&lt;/h3&gt; 
&lt;p&gt;1.ÁôªÈôÜcloudflare,ÂàõÂª∫worker,Á≤òË¥¥Êú¨È°πÁõÆ‰∏≠ÁöÑjs‰ª£Á†Å,ÁÇπÂáªÈÉ®ÁΩ≤&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/ff4ac794-01e1-4916-b226-1f4f604dcbd3" alt="image" /&gt;&lt;/p&gt; 
&lt;p&gt;2.ÂàõÂª∫KVÈîÆÂÄº &lt;strong&gt;SUBSCRIPTIONS_KV&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/c9ebaf3e-6015-4400-bb0a-1a55fd5e14d2" alt="image" /&gt;&lt;/p&gt; 
&lt;p&gt;3.ÁªôworkerÁªëÂÆö‰∏äÈîÆÂÄºÂØπ,‰ª•ÂèäËÆæÁΩÆÂÆöÊó∂ÊâßË°åÊó∂Èó¥!&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/25b663b3-8e8e-4386-a499-9b6bf12ead76" alt="image" /&gt;&lt;/p&gt; 
&lt;p&gt;4.ÊâìÂºÄworkerÊèê‰æõÁöÑÂüüÂêçÂú∞ÂùÄ,ËæìÂÖ•ÈªòËÆ§Ë¥¶Âè∑ÂØÜÁ†Å: admin password (ÊàñËÄÖadmin admin123),ÂèØ‰ª•Âú®‰ª£Á†Å‰∏≠Êü•ÁúãÈªòËÆ§Ë¥¶Âè∑ÂØÜÁ†Å!&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/5dac1ce0-43a3-4642-925c-d9cf21076454" alt="image" /&gt;&lt;/p&gt; 
&lt;p&gt;5.ÂâçÂæÄÁ≥ªÁªüÈÖçÁΩÆ,‰øÆÊîπË¥¶Âè∑ÂØÜÁ†Å,‰ª•ÂèäÈÖçÁΩÆtgÈÄöÁü•ÁöÑ‰ø°ÊÅØ&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/f6db2089-28a1-439d-9de0-412ee4b2807f" alt="image" /&gt;&lt;/p&gt; 
&lt;p&gt;6.ÈÖçÁΩÆÂÆåÊàêÂèØ‰ª•ÁÇπÂáªÊµãËØïÈÄöÁü•,Êü•ÁúãÊòØÂê¶ËÉΩÂ§üÊ≠£Â∏∏ÈÄöÁü•,ÁÑ∂ÂêéÂ∞±ÂèØ‰ª•Ê≠£Â∏∏Ê∑ªÂä†ËÆ¢ÈòÖ‰ΩøÁî®‰∫Ü!&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/af530379-332c-4482-9e6e-229a9e24775e" alt="image" /&gt;&lt;/p&gt; 
&lt;h2&gt;ËµûÂä©&lt;/h2&gt; 
&lt;p&gt;Êú¨È°πÁõÆ CDN Âä†ÈÄüÂèäÂÆâÂÖ®Èò≤Êä§Áî± Tencent EdgeOne ËµûÂä©ÔºöEdgeOne Êèê‰æõÈïøÊúüÊúâÊïàÁöÑÂÖçË¥πÂ•óÈ§êÔºåÂåÖÂê´‰∏çÈôêÈáèÁöÑÊµÅÈáèÂíåËØ∑Ê±ÇÔºåË¶ÜÁõñ‰∏≠ÂõΩÂ§ßÈôÜËäÇÁÇπÔºå‰∏îÊó†‰ªª‰ΩïË∂ÖÈ¢ùÊî∂Ë¥πÔºåÊÑüÂÖ¥Ë∂£ÁöÑÊúãÂèãÂèØ‰ª•ÁÇπÂáª‰∏ãÈù¢ÁöÑÈìæÊé•È¢ÜÂèñ&lt;/p&gt; 
&lt;p&gt;[&lt;a href="https://edgeone.ai/?from=github"&gt;Best Asian CDN, Edge, and Secure Solutions - Tencent EdgeOne&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://edgeone.ai/media/34fe3a45-492d-4ea4-ae5d-ea1087ca7b4b.png"&gt;&lt;img src="https://edgeone.ai/media/34fe3a45-492d-4ea4-ae5d-ea1087ca7b4b.png" alt="image" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ü§ù Ë¥°ÁåÆ&lt;/h2&gt; 
&lt;p&gt;Ê¨¢ËøéË¥°ÁåÆ‰ª£Á†Å„ÄÅÊä•ÂëäÈóÆÈ¢òÊàñÊèêÂá∫Êñ∞ÂäüËÉΩÂª∫ËÆÆ!&lt;/p&gt; 
&lt;h2&gt;üìú ËÆ∏ÂèØËØÅ&lt;/h2&gt; 
&lt;p&gt;MIT License&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#wangwangit/SubsTracker&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=wangwangit/SubsTracker&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>academind/react-complete-guide-course-resources</title>
      <link>https://github.com/academind/react-complete-guide-course-resources</link>
      <description>&lt;p&gt;React - The Complete Guide Course Resources (Code, Attachments, Slides)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React - The Complete Guide Course Resources&lt;/h1&gt; 
&lt;p&gt;This repository provides access to code files, code snapshots, slides &amp;amp; other resources that are used or provided by the &lt;a href="https://acad.link/reactjs"&gt;React - The Complete Guide&lt;/a&gt; course.&lt;/p&gt; 
&lt;p&gt;If you're facing any issues with the code, please post in the course Q&amp;amp;A section.&lt;/p&gt; 
&lt;h1&gt;Repository Content&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code Snapshots:&lt;/strong&gt; All code snapshots (starting snapshots, intermediate snapshots, finished snapshots) for the various course sections can be found in the &lt;a href="https://raw.githubusercontent.com/academind/react-complete-guide-course-resources/main/code/"&gt;/code&lt;/a&gt; folder.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lecture Attachments:&lt;/strong&gt; Any standalone code files or other attachments that are mentioned in course lectures (and attached to those lectures) are stored in the &lt;a href="https://raw.githubusercontent.com/academind/react-complete-guide-course-resources/main/attachments/"&gt;/attachments&lt;/a&gt; folder.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Other Resources:&lt;/strong&gt; Other resources (like the course slides) can be found in the &lt;a href="https://raw.githubusercontent.com/academind/react-complete-guide-course-resources/main/other/"&gt;/other&lt;/a&gt; folder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The &lt;strong&gt;Code Snapshots&lt;/strong&gt; and &lt;strong&gt;Lecture Attachments&lt;/strong&gt; folders contain one subfolder per course section - this allows you to easily access the resources for a specific course section.&lt;/p&gt; 
&lt;h1&gt;How To Use Code Snapshots&lt;/h1&gt; 
&lt;p&gt;Code snapshots are primarily provided to allow you to compare your code to mine. The snapshots are taken directly from the course recordings and therefore reflect my code you see in the videos.&lt;/p&gt; 
&lt;p&gt;Of course, you can also try running those code snapshots on your machine. You'll need to run &lt;code&gt;npm install&lt;/code&gt; in the individual snapshot folders, followed by &lt;code&gt;npm run dev&lt;/code&gt; to start the development server - just as shown in the course.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asabeneh/30-Days-Of-JavaScript</title>
      <link>https://github.com/Asabeneh/30-Days-Of-JavaScript</link>
      <description>&lt;p&gt;30 days of JavaScript programming challenge is a step-by-step guide to learn JavaScript programming language in 30 days. This challenge may take more than 100 days, please just follow your own pace. These videos may help too: https://www.youtube.com/channel/UC7PNRuno1rzYPb1xLa4yktw&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;30 Days Of JavaScript&lt;/h1&gt; 
&lt;!--  &lt;strong&gt;Learn with Asabeneh by joining the upcoming [&lt;em&gt;CODING BOOTCAMP&lt;/em&gt;](https://docs.google.com/forms/d/e/1FAIpQLSf0oNIYR9XU1DCctfl-pY36KbWse-SQX5aQaUgetqSinFYnmQ/viewform) &lt;/strong&gt; --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;# Day&lt;/th&gt; 
   &lt;th align="center"&gt;Topics&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;01&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md"&gt;Introduction&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;02&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md"&gt;Data Types&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;03&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/03_Day_Booleans_operators_date/03_booleans_operators_date.md"&gt;Booleans, Operators, Date&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;04&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/04_Day_Conditionals/04_day_conditionals.md"&gt;Conditionals&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;05&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/05_Day_Arrays/05_day_arrays.md"&gt;Arrays&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;06&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/06_Day_Loops/06_day_loops.md"&gt;Loops&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;07&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/07_Day_Functions/07_day_functions.md"&gt;Functions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;08&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/08_Day_Objects/08_day_objects.md"&gt;Objects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;09&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/09_Day_Higher_order_functions/09_day_higher_order_functions.md"&gt;Higher Order Functions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/10_Day_Sets_and_Maps/10_day_Sets_and_Maps.md"&gt;Sets and Maps&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/11_Day_Destructuring_and_spreading/11_day_destructuring_and_spreading.md"&gt;Destructuring and Spreading&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/12_Day_Regular_expressions/12_day_regular_expressions.md"&gt;Regular Expressions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/13_Day_Console_object_methods/13_day_console_object_methods.md"&gt;Console Object Methods&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/14_Day_Error_handling/14_day_error_handling.md"&gt;Error Handling&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/15_Day_Classes/15_day_classes.md"&gt;Classes&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/16_Day_JSON/16_day_json.md"&gt;JSON&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/17_Day_Web_storages/17_day_web_storages.md"&gt;Web Storages&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/18_Day_Promises/18_day_promises.md"&gt;Promises&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/19_Day_Closures/19_day_closures.md"&gt;Closure&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/20_Day_Writing_clean_codes/20_day_writing_clean_codes.md"&gt;Writing Clean Code&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/21_Day_DOM/21_day_dom.md"&gt;DOM&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/22_Day_Manipulating_DOM_object/22_day_manipulating_DOM_object.md"&gt;Manipulating DOM Object&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/23_Day_Event_listeners/23_day_event_listeners.md"&gt;Event Listeners&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/24_Day_Project_solar_system/24_day_project_solar_system.md"&gt;Mini Project: Solar System&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;25&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/25_Day_World_countries_data_visualization_1/25_day_world_countries_data_visualization_1.md"&gt;Mini Project: World Countries Data Visualization 1&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;26&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/26_Day_World_countries_data_visualization_2/26_day_world_countries_data_visualization_2.md"&gt;Mini Project: World Countries Data Visualization 2&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;27&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/27_Day_Mini_project_portfolio/27_day_mini_project_portfolio.md"&gt;Mini Project: Portfolio&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;28&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/28_Day_Mini_project_leaderboard/28_day_mini_project_leaderboard.md"&gt;Mini Project: Leaderboard&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;29&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/29_Day_Mini_project_animating_characters/29_day_mini_project_animating_characters.md"&gt;Mini Project: Animating characters&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/30_Day_Mini_project_final/30_day_mini_project_final.md"&gt;Final Projects&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!-- &lt;strong&gt;Learn with Asabeneh by joining the upcoming [&lt;em&gt;CODING BOOTCAMP&lt;/em&gt;](https://docs.google.com/forms/d/e/1FAIpQLSf0oNIYR9XU1DCctfl-pY36KbWse-SQX5aQaUgetqSinFYnmQ/viewform) &lt;/strong&gt; --&gt; 
&lt;p&gt;üß°üß°üß° HAPPY CODING üß°üß°üß°&lt;/p&gt; 
&lt;div&gt; 
 &lt;h2&gt;üíñ Sponsors&lt;/h2&gt; 
 &lt;p&gt;Our amazing sponsors for supporting my open-source contribution and the &lt;strong&gt;30 Days of Challenge&lt;/strong&gt; series!&lt;/p&gt; 
 &lt;h3&gt;Current Sponsor&lt;/h3&gt; 
 &lt;hr /&gt; 
 &lt;div align="center"&gt; 
  &lt;a href="https://ref.wisprflow.ai/MPMzRGE" target="_blank"&gt; 
   &lt;picture&gt; 
    &lt;!-- Dark mode --&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/Asabeneh/asabeneh/master/images/Wispr_Flow-Logo-white.png" /&gt; 
    &lt;!-- Light mode (fallback) --&gt; 
    &lt;img src="https://raw.githubusercontent.com/Asabeneh/asabeneh/master/images/Wispr_Flow-logo.png" width="400px" alt="Wispr Flow Logo" title="Wispr Flow" /&gt; 
   &lt;/picture&gt; &lt;/a&gt; 
  &lt;h3&gt;Dictation that understands code&lt;/h3&gt; 
  &lt;p&gt;&lt;em&gt;Ship 4x faster with developer-first dictation that works in every app.&lt;/em&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;hr /&gt; 
 &lt;h3&gt;üôå Become a Sponsor&lt;/h3&gt; 
 &lt;p&gt;You can support this project by becoming a sponsor on &lt;strong&gt;&lt;a href="https://github.com/sponsors/asabeneh"&gt;GitHub Sponsors&lt;/a&gt;&lt;/strong&gt; or through &lt;a href="https://www.paypal.me/asabeneh"&gt;PayPal&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;Every contribution, big or small, makes a huge difference. Thank you for your support! üåü&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;div align="center"&gt; 
  &lt;h1&gt; 30 Days Of JavaScript: Introduction&lt;/h1&gt; 
  &lt;a class="header-badge" target="_blank" href="https://www.linkedin.com/in/asabeneh/"&gt; &lt;img src="https://img.shields.io/badge/style--5eba00.svg?label=LinkedIn&amp;amp;logo=linkedin&amp;amp;style=social" /&gt; &lt;/a&gt; 
  &lt;a class="header-badge" target="_blank" href="https://twitter.com/Asabeneh"&gt; &lt;img alt="Twitter Follow" src="https://img.shields.io/twitter/follow/asabeneh?style=social" /&gt; &lt;/a&gt; 
  &lt;p&gt;&lt;sub&gt;Author: &lt;a href="https://www.linkedin.com/in/asabeneh/" target="_blank"&gt;Asabeneh Yetayeh&lt;/a&gt;&lt;br /&gt; &lt;small&gt; January, 2020&lt;/small&gt; &lt;/sub&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;p&gt;üá¨üáß &lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/readMe.md"&gt;English&lt;/a&gt; üá™üá∏ &lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Spanish/readme.md"&gt;Spanish&lt;/a&gt; üáÆüáπ &lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Italian/readMe.md"&gt;Italian&lt;/a&gt; üá∑üá∫ &lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/RU/README.md"&gt;Russian&lt;/a&gt; üáπüá∑ &lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Turkish/readMe.md"&gt;Turkish&lt;/a&gt; üá¶üáø &lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Azerbaijani/readMe.md"&gt;Azerbaijan&lt;/a&gt; üá∞üá∑ &lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Korea/README.md"&gt;Korean&lt;/a&gt; üáªüá≥ &lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Vietnamese/README.md"&gt;Vietnamese&lt;/a&gt; üáµüá± &lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Polish/readMe.md"&gt;Polish&lt;/a&gt; üáßüá∑ &lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/Portuguese/readMe.md"&gt;Portuguese&lt;/a&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md"&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1_1.png" alt="Thirty Days Of JavaScript" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#30-days-of-javascript"&gt;30 Days Of JavaScript&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-become-a-sponsor"&gt;üôå Become a Sponsor&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1"&gt;üìî Day 1&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#setup"&gt;Setup&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#install-nodejs"&gt;Install Node.js&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#browser"&gt;Browser&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-google-chrome"&gt;Installing Google Chrome&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#opening-google-chrome-console"&gt;Opening Google Chrome Console&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#writing-code-on-browser-console"&gt;Writing Code on Browser Console&lt;/a&gt; 
        &lt;ul&gt; 
         &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog"&gt;Console.log&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#consolelog-with-multiple-arguments"&gt;Console.log with Multiple Arguments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments"&gt;Comments&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#syntax"&gt;Syntax&lt;/a&gt;&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#arithmetics"&gt;Arithmetics&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#code-editor"&gt;Code Editor&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#installing-visual-studio-code"&gt;Installing Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#how-to-use-visual-studio-code"&gt;How to Use Visual Studio Code&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#adding-javascript-to-a-web-page"&gt;Adding JavaScript to a Web Page&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#inline-script"&gt;Inline Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#internal-script"&gt;Internal Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#external-script"&gt;External Script&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#multiple-external-scripts"&gt;Multiple External Scripts&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#introduction-to-data-types"&gt;Introduction to Data types&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#numbers"&gt;Numbers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#strings"&gt;Strings&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#booleans"&gt;Booleans&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#undefined"&gt;Undefined&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#null"&gt;Null&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#checking-data-types"&gt;Checking Data Types&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#comments-again"&gt;Comments Again&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#variables"&gt;Variables&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/#-day-1-exercises"&gt;üíª Day 1: Exercises&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;üìî Day 1&lt;/h1&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt; on deciding to participate in 30 days of JavaScript programming challenge. In this challenge, you will learn everything you need to be a JavaScript programmer, and in general, the whole concept of programming. In the end of the challenge, you will get a 30DaysOfJavaScript programming challenge completion certificate. In case you need help or if you would like to help others you may join the dedicated &lt;a href="https://t.me/ThirtyDaysOfJavaScript"&gt;telegram group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A 30DaysOfJavaScript&lt;/strong&gt; challenge is a guide for both beginners and advanced JavaScript developers. Welcome to JavaScript. JavaScript is the language of the web. I enjoy using and teaching JavaScript and I hope you will do so too.&lt;/p&gt; 
&lt;p&gt;In this step by step JavaScript challenge, you will learn JavaScript, the most popular programming language in the history of mankind. JavaScript is used &lt;strong&gt;&lt;em&gt;to add interactivity to websites, to develop mobile apps, desktop applications, games&lt;/em&gt;&lt;/strong&gt; and nowadays JavaScript can be used for &lt;strong&gt;server-side programming&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;machine learning&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;AI&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;JavaScript (JS)&lt;/em&gt;&lt;/strong&gt; has increased in popularity in recent years and has been the leading programming language for last ten years and is the most used programming language on GitHub.&lt;/p&gt; 
&lt;p&gt;This challenge is easy to read, written in conversational English, engaging, motivating and at the same time, it is very demanding. You need to allocate much time to finish this challenge. If you are a visual learner, you may get the video lesson on &lt;a href="https://www.youtube.com/channel/UC7PNRuno1rzYPb1xLa4yktw"&gt; Washera&lt;/a&gt; YouTube channel. Subscribe the channel, comment and ask questions on YouTube vides and be proactive, the author will eventually notice you.&lt;/p&gt; 
&lt;p&gt;The author likes to hear your opinion about the challenge, share the author by expressing your thoughts about the 30DaysOfJavaScript challenge. You can leave your testimonial on this &lt;a href="https://www.asabeneh.com/testimonials"&gt;link&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;No prior knowledge of programming is required to follow this challenge. You need only:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Motivation&lt;/li&gt; 
 &lt;li&gt;A computer&lt;/li&gt; 
 &lt;li&gt;Internet&lt;/li&gt; 
 &lt;li&gt;A browser&lt;/li&gt; 
 &lt;li&gt;A code editor&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;I believe you have the motivation and a strong desire to be a developer, a computer and Internet. If you have those, then you have everything to get started.&lt;/p&gt; 
&lt;h3&gt;Install Node.js&lt;/h3&gt; 
&lt;p&gt;You may not need Node.js right now but you may need it for later. Install &lt;a href="https://nodejs.org/en/"&gt;node.js&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/download_node.png" alt="Node download" /&gt;&lt;/p&gt; 
&lt;p&gt;After downloading double click and install&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/install_node.png" alt="Install node" /&gt;&lt;/p&gt; 
&lt;p&gt;We can check if node is installed on our local machine by opening our device terminal or command prompt.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;asabeneh $ node -v
v12.14.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When making this tutorial I was using Node version 12.14.0, but now the recommended version of Node.js for download is v14.17.6, by the time you use this material you may have a higher Node.js version.&lt;/p&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;p&gt;There are many browsers out there. However, I strongly recommend Google Chrome.&lt;/p&gt; 
&lt;h4&gt;Installing Google Chrome&lt;/h4&gt; 
&lt;p&gt;Install &lt;a href="https://www.google.com/chrome/"&gt;Google Chrome&lt;/a&gt; if you do not have one yet. We can write small JavaScript code on the browser console, but we do not use the browser console to develop applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/google_chrome.png" alt="Google Chrome" /&gt;&lt;/p&gt; 
&lt;h4&gt;Opening Google Chrome Console&lt;/h4&gt; 
&lt;p&gt;You can open Google Chrome console either by clicking three dots at the top right corner of the browser, selecting &lt;em&gt;More tools -&amp;gt; Developer tools&lt;/em&gt; or using a keyboard shortcut. I prefer using shortcuts.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_developer_tool.png" alt="Opening chrome" /&gt;&lt;/p&gt; 
&lt;p&gt;To open the Chrome console using a keyboard shortcut.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;Mac
Command+Option+J

Windows/Linux:
Ctl+Shift+J
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_chrome_console_shortcut.png" alt="Opening console" /&gt;&lt;/p&gt; 
&lt;p&gt;After you open the Google Chrome console, try to explore the marked buttons. We will spend most of the time on the Console. The Console is the place where your JavaScript code goes. The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_on_chrome_console.png" alt="write code on console" /&gt;&lt;/p&gt; 
&lt;h4&gt;Writing Code on Browser Console&lt;/h4&gt; 
&lt;p&gt;We can write any JavaScript code on the Google console or any browser console. However, for this challenge, we only focus on Google Chrome console. Open the console using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;Mac
Command+Option+I

Windows:
Ctl+Shift+I
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log&lt;/h5&gt; 
&lt;p&gt;To write our first JavaScript code, we used a built-in function &lt;strong&gt;console.log()&lt;/strong&gt;. We passed an argument as input data, and the function displays the output. We passed &lt;code&gt;'Hello, World'&lt;/code&gt; as input data or argument in the console.log() function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;console.log('Hello, World!')
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Console.log with Multiple Arguments&lt;/h5&gt; 
&lt;p&gt;The &lt;strong&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/strong&gt; function can take multiple parameters separated by commas. The syntax looks like as follows:&lt;strong&gt;&lt;code&gt;console.log(param1, param2, param3)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/console_log_multipl_arguments.png" alt="console log multiple arguments" /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;console.log('Hello', 'World', '!')
console.log('HAPPY', 'NEW', 'YEAR', 2020)
console.log('Welcome', 'to', 30, 'Days', 'Of', 'JavaScript')
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see from the snippet code above, &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt; can take multiple arguments.&lt;/p&gt; 
&lt;p&gt;Congratulations! You wrote your first JavaScript code using &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt; 
&lt;h5&gt;Comments&lt;/h5&gt; 
&lt;p&gt;We can add comments to our code. Comments are very important to make code more readable and to leave remarks in our code. JavaScript does not execute the comment part of our code. In JavaScript, any text line starting with // in JavaScript is a comment, and anything enclosed like this &lt;code&gt;//&lt;/code&gt; is also a comment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example: Single Line Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// This is the first comment  
// This is the second comment  
// I am a single line comment
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Example: Multiline Comment&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;/*
This is a multiline comment  
 Multiline comments can take multiple lines  
 JavaScript is the language of the web  
 */
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Syntax&lt;/h5&gt; 
&lt;p&gt;Programming languages are similar to human languages. English or many other language uses words, phrases, sentences, compound sentences and other more to convey a meaningful message. The English meaning of syntax is &lt;em&gt;the arrangement of words and phrases to create well-formed sentences in a language&lt;/em&gt;. The technical definition of syntax is the structure of statements in a computer language. Programming languages have syntax. JavaScript is a programming language and like other programming languages it has its own syntax. If we do not write a syntax that JavaScript understands, it will raise different types of errors. We will explore different kinds of JavaScript errors later. For now, let us see syntax errors.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/raising_syntax_error.png" alt="Error" /&gt;&lt;/p&gt; 
&lt;p&gt;I made a deliberate mistake. As a result, the console raises syntax errors. Actually, the syntax is very informative. It informs what type of mistake was made. By reading the error feedback guideline, we can correct the syntax and fix the problem. The process of identifying and removing errors from a program is called debugging. Let us fix the errors:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;console.log('Hello, World!')
console.log('Hello, World!')
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So far, we saw how to display text using the &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt;. If we are printing text or string using &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt;, the text has to be inside the single quotes, double quotes, or a backtick. &lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;console.log('Hello, World!')
console.log("Hello, World!")
console.log(`Hello, World!`)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arithmetics&lt;/h4&gt; 
&lt;p&gt;Now, let us practice more writing JavaScript codes using &lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt; on Google Chrome console for number data types. In addition to the text, we can also do mathematical calculations using JavaScript. Let us do the following simple calculations. It is possible to write JavaScript code on Google Chrome console can directly without the &lt;strong&gt;&lt;em&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt; function. However, it is included in this introduction because most of this challenge would be taking place in a text editor where the usage of the function would be mandatory. You can play around directly with instructions on the console.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/arithmetic.png" alt="Arithmetic" /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;console.log(2 + 3) // Addition
console.log(3 - 2) // Subtraction
console.log(2 * 3) // Multiplication
console.log(3 / 2) // Division
console.log(3 % 2) // Modulus - finding remainder
console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Editor&lt;/h3&gt; 
&lt;p&gt;We can write our codes on the browser console, but it won't be for bigger projects. In a real working environment, developers use different code editors to write their codes. In this 30 days of JavaScript challenge, we will be using Visual Studio Code.&lt;/p&gt; 
&lt;h4&gt;Installing Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Visual Studio Code is a very popular open-source text editor. I would recommend to &lt;a href="https://code.visualstudio.com/"&gt;download Visual Studio Code&lt;/a&gt;, but if you are in favor of other editors, feel free to follow with what you have.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode.png" alt="Vscode" /&gt;&lt;/p&gt; 
&lt;p&gt;If you installed Visual Studio Code, let us start using it.&lt;/p&gt; 
&lt;h4&gt;How to Use Visual Studio Code&lt;/h4&gt; 
&lt;p&gt;Open the Visual Studio Code by double-clicking its icon. When you open it, you will get this kind of interface. Try to interact with the labeled icons.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vscode_ui.png" alt="Vscode ui" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/adding_project_to_vscode.png" alt="Vscode add project" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/opening_project_on_vscode.png" alt="Vscode open project" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/scripts_on_vscode.png" alt="script file" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/vsc_live_server.png" alt="Installing Live Server" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/running_script.png" alt="running script" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/launched_on_new_tab.png" alt="coding running" /&gt;&lt;/p&gt; 
&lt;h2&gt;Adding JavaScript to a Web Page&lt;/h2&gt; 
&lt;p&gt;JavaScript can be added to a web page in three different ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Inline script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Internal script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;External script&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;em&gt;Multiple External scripts&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following sections show different ways of adding JavaScript code to your web page.&lt;/p&gt; 
&lt;h3&gt;Inline Script&lt;/h3&gt; 
&lt;p&gt;Create a project folder on your desktop or in any location, name it 30DaysOfJS and create an &lt;strong&gt;&lt;em&gt;&lt;code&gt;index.html&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt; file in the project folder. Then paste the following code and open it in a browser, for example &lt;a href="https://www.google.com/chrome/"&gt;Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Inline Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick="alert('Welcome to 30DaysOfJavaScript!')"&amp;gt;Click Me&amp;lt;/button&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, you just wrote your first inline script. We can create a pop up alert message using the &lt;em&gt;&lt;code&gt;alert()&lt;/code&gt;&lt;/em&gt; built-in function.&lt;/p&gt; 
&lt;h3&gt;Internal Script&lt;/h3&gt; 
&lt;p&gt;The internal script can be written in the &lt;em&gt;&lt;code&gt;head&lt;/code&gt;&lt;/em&gt; or the &lt;em&gt;&lt;code&gt;body&lt;/code&gt;&lt;/em&gt;, but it is preferred to put it on the body of the HTML document. First, let us write on the head part of the page.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
    &amp;lt;script&amp;gt;
      console.log('Welcome to 30DaysOfJavaScript')
    &amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is how we write an internal script most of the time. Writing the JavaScript code in the body section is the most preferred option. Open the browser console to see the output from the &lt;code&gt;console.log()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfScript:Internal Script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;button onclick="alert('Welcome to 30DaysOfJavaScript!');"&amp;gt;Click Me&amp;lt;/button&amp;gt;
    &amp;lt;script&amp;gt;
      console.log('Welcome to 30DaysOfJavaScript')
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output from the &lt;code&gt;console.log()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/js_code_vscode.png" alt="js code from vscode" /&gt;&lt;/p&gt; 
&lt;h3&gt;External Script&lt;/h3&gt; 
&lt;p&gt;Similar to the internal script, the external script link can be on the header or body, but it is preferred to put it in the body. First, we should create an external JavaScript file with .js extension. All files ending with .js extension are JavaScript files. Create a file named introduction.js inside your project directory and write the following code and link this .js file at the bottom of the body.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;console.log('Welcome to 30DaysOfJavaScript')
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;head&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
    &amp;lt;script src="introduction.js"&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;External scripts in the &lt;em&gt;body&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;30DaysOfJavaScript:External script&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;!-- JavaScript external link could be in the header or in the body --&amp;gt; 
    &amp;lt;!-- Before the closing tag of the body is the recommended place to put the external JavaScript script --&amp;gt;
    &amp;lt;script src="introduction.js"&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the browser console to see the output of the &lt;code&gt;console.log()&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Multiple External Scripts&lt;/h3&gt; 
&lt;p&gt;We can also link multiple external JavaScript files to a web page. Create a &lt;code&gt;helloworld.js&lt;/code&gt; file inside the 30DaysOfJS folder and write the following code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;console.log('Hello, World!')
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Multiple External Scripts&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;script src="./helloworld.js"&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src="./introduction.js"&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Your main.js file should be below all other scripts&lt;/em&gt;. It is very important to remember this.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/multiple_script.png" alt="Multiple Script" /&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction to Data types&lt;/h2&gt; 
&lt;p&gt;In JavaScript and also other programming languages, there are different types of data types. The following are JavaScript primitive data types: &lt;em&gt;String, Number, Boolean, undefined, Null&lt;/em&gt;, and &lt;em&gt;Symbol&lt;/em&gt;.&lt;/p&gt; 
&lt;h3&gt;Numbers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integers: Integer (negative, zero and positive) numbers Example: ... -3, -2, -1, 0, 1, 2, 3 ...&lt;/li&gt; 
 &lt;li&gt;Float-point numbers: Decimal number Example ... -3.5, -2.25, -1.0, 0.0, 1.1, 2.2, 3.5 ...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Strings&lt;/h3&gt; 
&lt;p&gt;A collection of one or more characters between two single quotes, double quotes, or backticks.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;'a'
'Asabeneh'
"Asabeneh"
'Finland'
'JavaScript is a beautiful programming language'
'I love teaching'
'I hope you are enjoying the first day'
`We can also create a string using a backtick`
'A string could be just as small as one character or as big as many pages'
'Any data type under a single quote, double quote or backtick is a string'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Booleans&lt;/h3&gt; 
&lt;p&gt;A boolean value is either True or False. Any comparisons returns a boolean value, which is either true or false.&lt;/p&gt; 
&lt;p&gt;A boolean data type is either a true or false value.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;true // if the light is on, the value is true
false // if the light is off, the value is false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Undefined&lt;/h3&gt; 
&lt;p&gt;In JavaScript, if we don't assign a value to a variable, the value is undefined. In addition to that, if a function is not returning anything, it returns undefined.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let firstName
console.log(firstName) // undefined, because it is not assigned to a value yet
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Null&lt;/h3&gt; 
&lt;p&gt;Null in JavaScript means an empty value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let emptyValue = null
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checking Data Types&lt;/h2&gt; 
&lt;p&gt;To check the data type of a certain variable, we use the &lt;strong&gt;typeof&lt;/strong&gt; operator. See the following example.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;console.log(typeof 'Asabeneh') // string
console.log(typeof 5) // number
console.log(typeof true) // boolean
console.log(typeof null) // object type
console.log(typeof undefined) // undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Comments Again&lt;/h2&gt; 
&lt;p&gt;Remember that commenting in JavaScript is similar to other programming languages. Comments are important in making your code more readable. There are two ways of commenting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Single line commenting&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Multiline commenting&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// commenting the code itself with a single comment
// let firstName = 'Asabeneh'; single line comment
// let lastName = 'Yetayeh'; single line comment
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Multiline commenting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;/*
  let location = 'Helsinki';
  let age = 100;
  let isMarried = true;
  This is a Multiple line comment
*/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Variables&lt;/h2&gt; 
&lt;p&gt;Variables are &lt;em&gt;containers&lt;/em&gt; of data. Variables are used to &lt;em&gt;store&lt;/em&gt; data in a memory location. When a variable is declared, a memory location is reserved. When a variable is assigned to a value (data), the memory space will be filled with that data. To declare a variable, we use &lt;em&gt;var&lt;/em&gt;, &lt;em&gt;let&lt;/em&gt;, or &lt;em&gt;const&lt;/em&gt; keywords.&lt;/p&gt; 
&lt;p&gt;For a variable that changes at a different time, we use &lt;em&gt;let&lt;/em&gt;. If the data does not change at all, we use &lt;em&gt;const&lt;/em&gt;. For example, PI, country name, gravity do not change, and we can use &lt;em&gt;const&lt;/em&gt;. We will not use var in this challenge and I don't recommend you to use it. It is error prone way of declaring variable it has lots of leak. We will talk more about var, let, and const in detail in other sections (scope). For now, the above explanation is enough.&lt;/p&gt; 
&lt;p&gt;A valid JavaScript variable name must follow the following rules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A JavaScript variable name should not begin with a number.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name does not allow special characters except dollar sign and underscore.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name follows a camelCase convention.&lt;/li&gt; 
 &lt;li&gt;A JavaScript variable name should not have space between words.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following are examples of valid JavaScript variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;firstName
lastName
country
city
capitalCity
age
isMarried

first_name
last_name
is_married
capital_city

num1
num_1
_num_1
$num1
year2020
year_2020
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The first and second variables on the list follows the camelCase convention of declaring in JavaScript. In this material, we will use camelCase variables(camelWithOneHump). We use CamelCase(CamelWithTwoHump) to declare classes, we will discuss about classes and objects in other section.&lt;/p&gt; 
&lt;p&gt;Example of invalid variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;  first-name
  1_num
  num_#_1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Let us declare variables with different data types. To declare a variable, we need to use &lt;em&gt;let&lt;/em&gt; or &lt;em&gt;const&lt;/em&gt; keyword before the variable name. Following the variable name, we write an equal sign (assignment operator), and a value(assigned data).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Syntax
let nameOfVariable = value
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The nameOfVriable is the name that stores different data of value. See below for detail examples.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Examples of declared variables&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Declaring different variables of different data types
let firstName = 'Asabeneh' // first name of a person
let lastName = 'Yetayeh' // last name of a person
let country = 'Finland' // country
let city = 'Helsinki' // capital city
let age = 100 // age in years
let isMarried = true

console.log(firstName, lastName, country, city, age, isMarried)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;Asabeneh Yetayeh Finland Helsinki 100 true
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Declaring variables with number values
let age = 100 // age in years
const gravity = 9.81 // earth gravity  in m/s2
const boilingPoint = 100 // water boiling point, temperature in ¬∞C
const PI = 3.14 // geometrical constant
console.log(gravity, boilingPoint, PI)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;9.81 100 3.14
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Variables can also be declaring in one line separated by comma, however I recommend to use a seperate line to make code more readble
let name = 'Asabeneh', job = 'teacher', live = 'Finland'
console.log(name, job, live)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;Asabeneh teacher Finland
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you run &lt;em&gt;index.html&lt;/em&gt; file in the 01-Day folder you should get this:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/images/day_1.png" alt="Day one" /&gt;&lt;/p&gt; 
&lt;p&gt;üåï You are amazing! You have just completed day 1 challenge and you are on your way to greatness. Now do some exercises for your brain and muscle.&lt;/p&gt; 
&lt;h1&gt;üíª Day 1: Exercises&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Write a single line comment which says, &lt;em&gt;comments can make code readable&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write another single comment which says, &lt;em&gt;Welcome to 30DaysOfJavaScript&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write a multiline comment which says, &lt;em&gt;comments can make code readable, easy to reuse&lt;/em&gt; &lt;em&gt;and informative&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a variable.js file and declare variables and assign string, boolean, undefined and null data types&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create datatypes.js file and use the JavaScript &lt;strong&gt;&lt;em&gt;typeof&lt;/em&gt;&lt;/strong&gt; operator to check different data types. Check the data type of each variable&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables without assigning values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare four variables with assigned values&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in multiple lines&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare variables to store your first name, last name, marital status, country and age in a single line&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Declare two variables &lt;em&gt;myAge&lt;/em&gt; and &lt;em&gt;yourAge&lt;/em&gt; and assign them initial values and log to the browser console.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;I am 25 years old.
You are 30 years old.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üéâ CONGRATULATIONS ! üéâ&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Asabeneh/30-Days-Of-JavaScript/master/02_Day_Data_types/02_day_data_types.md"&gt;Day 2 &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ruvnet/claude-flow</title>
      <link>https://github.com/ruvnet/claude-flow</link>
      <description>&lt;p&gt;üåä The leading agent orchestration platform for Claude. Deploy intelligent multi-agent swarms, coordinate autonomous workflows, and build conversational AI systems. Features enterprise-grade architecture, distributed swarm intelligence, RAG integration, and native Claude Code support via MCP protocol. Ranked #1 in agent-based frameworks.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üåä Claude-Flow v2.7.0: Enterprise AI Orchestration Platform&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/github/stars/ruvnet/claude-flow?style=for-the-badge&amp;amp;logo=github&amp;amp;color=gold" alt="üåü Star on GitHub" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow"&gt;&lt;img src="https://img.shields.io/npm/dt/claude-flow?style=for-the-badge&amp;amp;logo=npm&amp;amp;color=blue&amp;amp;label=Downloads" alt="üìà Downloads" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow"&gt;&lt;img src="https://img.shields.io/npm/v/claude-flow/alpha?style=for-the-badge&amp;amp;logo=npm&amp;amp;color=green&amp;amp;label=v2.7.0-alpha.10" alt="üì¶ Latest Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Claude%20Code-SDK%20Integrated-green?style=for-the-badge&amp;amp;logo=anthropic" alt="‚ö° Claude Code" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/dfxmpwkG2D"&gt;&lt;img src="https://img.shields.io/badge/Agentics-Foundation-crimson?style=for-the-badge&amp;amp;logo=openai" alt="üèõÔ∏è Agentics Foundation" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow?style=for-the-badge&amp;amp;logo=opensourceinitiative" alt="üõ°Ô∏è MIT License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;üåü &lt;strong&gt;Overview&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Claude-Flow v2.7&lt;/strong&gt; is an enterprise-grade AI orchestration platform that combines &lt;strong&gt;hive-mind swarm intelligence&lt;/strong&gt;, &lt;strong&gt;persistent memory&lt;/strong&gt;, and &lt;strong&gt;100+ advanced MCP tools&lt;/strong&gt; to revolutionize AI-powered development workflows.&lt;/p&gt; 
&lt;h3&gt;üéØ &lt;strong&gt;Key Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üé® 25 Claude Skills&lt;/strong&gt;: Natural language-activated skills for development, GitHub, memory, and automation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üöÄ AgentDB v1.3.9 Integration&lt;/strong&gt;: 96x-164x faster vector search with semantic understanding (PR #830)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üß† Hybrid Memory System&lt;/strong&gt;: AgentDB + ReasoningBank with automatic fallback&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîç Semantic Vector Search&lt;/strong&gt;: HNSW indexing (O(log n)) + 9 RL algorithms&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üêù Hive-Mind Intelligence&lt;/strong&gt;: Queen-led AI coordination with specialized worker agents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîß 100 MCP Tools&lt;/strong&gt;: Comprehensive toolkit for swarm orchestration and automation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîÑ Dynamic Agent Architecture (DAA)&lt;/strong&gt;: Self-organizing agents with fault tolerance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíæ Persistent Memory&lt;/strong&gt;: 150x faster search, 4-32x memory reduction (quantization)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ü™ù Advanced Hooks System&lt;/strong&gt;: Automated workflows with pre/post operation hooks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìä GitHub Integration&lt;/strong&gt;: 6 specialized modes for repository management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üåê Flow Nexus Cloud&lt;/strong&gt;: E2B sandboxes, AI swarms, challenges, and marketplace&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üî• &lt;strong&gt;Revolutionary AI Coordination&lt;/strong&gt;: Build faster, smarter, and more efficiently with AI-powered development orchestration&lt;/p&gt; 
 &lt;p&gt;üÜï &lt;strong&gt;NEW: AgentDB Integration&lt;/strong&gt;: 96x-164x performance boost with semantic vector search, reflexion memory, and skill library auto-consolidation&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;‚ö° &lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;üìã &lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js 18+&lt;/strong&gt; (LTS recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;npm 9+&lt;/strong&gt; or equivalent package manager&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows users&lt;/strong&gt;: See &lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/windows-installation.md"&gt;Windows Installation Guide&lt;/a&gt; for special instructions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;‚ö†Ô∏è &lt;strong&gt;IMPORTANT&lt;/strong&gt;: Claude Code must be installed first:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Install Claude Code globally
npm install -g @anthropic-ai/claude-code

# 2. (Optional) Skip permissions check for faster setup
claude --dangerously-skip-permissions
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üöÄ &lt;strong&gt;Install Latest Alpha&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# NPX (recommended - always latest)
npx claude-flow@alpha init --force
npx claude-flow@alpha --help

# Or install globally
npm install -g claude-flow@alpha
claude-flow --version
# v2.7.0-alpha.10
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üé® &lt;strong&gt;Skills System&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Claude-Flow includes &lt;strong&gt;25 specialized skills&lt;/strong&gt; that activate automatically via natural language - no commands to memorize:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Just describe what you want - skills activate automatically
"Let's pair program on this feature"        ‚Üí pair-programming skill
"Review this PR for security issues"       ‚Üí github-code-review skill
"Use vector search to find similar code"   ‚Üí agentdb-vector-search skill
"Create a swarm to build this API"         ‚Üí swarm-orchestration skill
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Skill Categories:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Development &amp;amp; Methodology&lt;/strong&gt; (3) - SPARC, pair programming, skill builder&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Intelligence &amp;amp; Memory&lt;/strong&gt; (6) - AgentDB integration with 150x-12,500x performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Swarm Coordination&lt;/strong&gt; (3) - Multi-agent orchestration and hive-mind&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Integration&lt;/strong&gt; (5) - PR review, workflows, releases, multi-repo&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automation &amp;amp; Quality&lt;/strong&gt; (4) - Hooks, verification, performance analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flow Nexus Platform&lt;/strong&gt; (3) - Cloud sandboxes and neural training&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;üìö &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/skills-tutorial.md"&gt;Complete Skills Tutorial&lt;/a&gt;&lt;/strong&gt; - Full guide with usage examples&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üÜï &lt;strong&gt;What's New in v2.7.0-alpha.10&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;‚úÖ &lt;strong&gt;Semantic Search Fixed&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Critical bug fix for semantic search returning 0 results:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ Fixed stale compiled code (dist-cjs/ now uses Node.js backend)&lt;/li&gt; 
 &lt;li&gt;‚úÖ Fixed result mapping for &lt;code&gt;retrieveMemories()&lt;/code&gt; flat structure&lt;/li&gt; 
 &lt;li&gt;‚úÖ Fixed parameter mismatch (namespace vs domain)&lt;/li&gt; 
 &lt;li&gt;‚úÖ 2-3ms query latency with hash embeddings&lt;/li&gt; 
 &lt;li&gt;‚úÖ Works without API keys (deterministic 1024-dim embeddings)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üß† &lt;strong&gt;ReasoningBank Integration (agentic-flow@1.5.13)&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js Backend&lt;/strong&gt;: Replaced WASM with SQLite + better-sqlite3&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Persistent Storage&lt;/strong&gt;: All memories saved to &lt;code&gt;.swarm/memory.db&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Semantic Search&lt;/strong&gt;: MMR ranking with 4-factor scoring&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Database Tables&lt;/strong&gt;: patterns, embeddings, trajectories, links&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: 2ms queries, 400KB per pattern with embeddings&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Semantic search now fully functional
npx claude-flow@alpha memory store test "API configuration" --namespace semantic --reasoningbank
npx claude-flow@alpha memory query "configuration" --namespace semantic --reasoningbank
# ‚úÖ Found 3 results (semantic search) in 2ms
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üìö &lt;strong&gt;Release Notes&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/RELEASE-NOTES-v2.7.0-alpha.10.md"&gt;v2.7.0-alpha.10&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üß† &lt;strong&gt;Memory System Commands&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;üöÄ NEW: AgentDB v1.3.9 Integration (96x-164x Performance Boost)&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Revolutionary Performance Improvements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Vector Search&lt;/strong&gt;: 96x faster (9.6ms ‚Üí &amp;lt;0.1ms)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Batch Operations&lt;/strong&gt;: 125x faster&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Large Queries&lt;/strong&gt;: 164x faster&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory Usage&lt;/strong&gt;: 4-32x reduction via quantization&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Semantic vector search (understands meaning, not just keywords)
npx claude-flow@alpha memory vector-search "user authentication flow" \
  --k 10 --threshold 0.7 --namespace backend

# Store with vector embedding for semantic search
npx claude-flow@alpha memory store-vector api_design "REST endpoints" \
  --namespace backend --metadata '{"version":"v2"}'

# Get AgentDB integration status and capabilities
npx claude-flow@alpha memory agentdb-info

# Installation (hybrid mode - 100% backward compatible)
npm install agentdb@1.3.9
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;New Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Semantic vector search&lt;/strong&gt; (HNSW indexing, O(log n))&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;9 RL algorithms&lt;/strong&gt; (Q-Learning, PPO, MCTS, Decision Transformer)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Reflexion memory&lt;/strong&gt; (learn from past experiences)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Skill library&lt;/strong&gt; (auto-consolidate successful patterns)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Causal reasoning&lt;/strong&gt; (understand cause-effect relationships)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Quantization&lt;/strong&gt; (binary 32x, scalar 4x, product 8-16x reduction)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;100% backward compatible&lt;/strong&gt; (hybrid mode with graceful fallback)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;code&gt;docs/agentdb/PRODUCTION_READINESS.md&lt;/code&gt; | &lt;strong&gt;PR&lt;/strong&gt;: #830&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;&lt;strong&gt;ReasoningBank (Legacy SQLite Memory - Still Supported)&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Store memories with pattern matching
npx claude-flow@alpha memory store api_key "REST API configuration" \
  --namespace backend --reasoningbank

# Query with pattern search (2-3ms latency)
npx claude-flow@alpha memory query "API config" \
  --namespace backend --reasoningbank
# ‚úÖ Found 3 results (pattern matching)

# List all memories
npx claude-flow@alpha memory list --namespace backend --reasoningbank

# Check status and statistics
npx claude-flow@alpha memory status --reasoningbank
# ‚úÖ Total memories: 30
#    Embeddings: 30
#    Storage: .swarm/memory.db
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;No API Keys Required&lt;/strong&gt;: Hash-based embeddings (1024 dimensions)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Persistent Storage&lt;/strong&gt;: SQLite database survives restarts&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Pattern Matching&lt;/strong&gt;: LIKE-based search with similarity scoring&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Namespace Isolation&lt;/strong&gt;: Organize memories by domain&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Fast Queries&lt;/strong&gt;: 2-3ms average latency&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Process Cleanup&lt;/strong&gt;: Automatic database closing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Optional Enhanced Embeddings:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# For better semantic accuracy with text-embedding-3-small (1536 dimensions)
# Set OPENAI environment variable (see ReasoningBank documentation)
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üêù &lt;strong&gt;Swarm Orchestration&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Quick Swarm Commands&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Quick task execution (recommended)
npx claude-flow@alpha swarm "build REST API with authentication" --claude

# Multi-agent coordination
npx claude-flow@alpha swarm init --topology mesh --max-agents 5
npx claude-flow@alpha swarm spawn researcher "analyze API patterns"
npx claude-flow@alpha swarm spawn coder "implement endpoints"
npx claude-flow@alpha swarm status
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Hive-Mind for Complex Projects&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Initialize hive-mind system
npx claude-flow@alpha hive-mind wizard
npx claude-flow@alpha hive-mind spawn "build enterprise system" --claude

# Session management
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha hive-mind resume session-xxxxx
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;When to Use:&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;swarm&lt;/code&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;hive-mind&lt;/code&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Best For&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Quick tasks&lt;/td&gt; 
   &lt;td&gt;Complex projects&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Setup&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Instant&lt;/td&gt; 
   &lt;td&gt;Interactive wizard&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Memory&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Task-scoped&lt;/td&gt; 
   &lt;td&gt;Project-wide SQLite&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Sessions&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Temporary&lt;/td&gt; 
   &lt;td&gt;Persistent + resume&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üîß &lt;strong&gt;MCP Tools Integration&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Setup MCP Servers&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Add Claude Flow MCP server (required)
claude mcp add claude-flow npx claude-flow@alpha mcp start

# Optional: Enhanced coordination
claude mcp add ruv-swarm npx ruv-swarm mcp start

# Optional: Cloud features (requires registration)
claude mcp add flow-nexus npx flow-nexus@latest mcp start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Available MCP Tools (100 Total)&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Core Tools:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;swarm_init&lt;/code&gt;, &lt;code&gt;agent_spawn&lt;/code&gt;, &lt;code&gt;task_orchestrate&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;memory_usage&lt;/code&gt;, &lt;code&gt;memory_search&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;neural_status&lt;/code&gt;, &lt;code&gt;neural_train&lt;/code&gt;, &lt;code&gt;neural_patterns&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Memory Tools:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;mcp__claude-flow__memory_usage&lt;/code&gt; - Store/retrieve persistent memory&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mcp__claude-flow__memory_search&lt;/code&gt; - Pattern-based search&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;GitHub Tools:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;github_repo_analyze&lt;/code&gt;, &lt;code&gt;github_pr_manage&lt;/code&gt;, &lt;code&gt;github_issue_track&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Performance Tools:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;benchmark_run&lt;/code&gt;, &lt;code&gt;performance_report&lt;/code&gt;, &lt;code&gt;bottleneck_analyze&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;üìö &lt;strong&gt;Full Reference&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/MCP-TOOLS.md"&gt;MCP Tools Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;ü™ù &lt;strong&gt;Advanced Hooks System&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Automated Workflow Enhancement&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Claude-Flow automatically configures hooks for enhanced operations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Auto-configures hooks during init
npx claude-flow@alpha init --force
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Available Hooks&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Pre-Operation:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;pre-task&lt;/code&gt;: Auto-assigns agents by complexity&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pre-edit&lt;/code&gt;: Validates files and prepares resources&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pre-command&lt;/code&gt;: Security validation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Post-Operation:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;post-edit&lt;/code&gt;: Auto-formats code&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;post-task&lt;/code&gt;: Trains neural patterns&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;post-command&lt;/code&gt;: Updates memory&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Session Management:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;session-start&lt;/code&gt;: Restores previous context&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;session-end&lt;/code&gt;: Generates summaries&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;session-restore&lt;/code&gt;: Loads memory&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üéØ &lt;strong&gt;Common Workflows&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Pattern 1: Single Feature Development&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Initialize once per feature
npx claude-flow@alpha init --force
npx claude-flow@alpha hive-mind spawn "Implement authentication" --claude

# Continue same feature (reuse hive)
npx claude-flow@alpha memory query "auth" --recent
npx claude-flow@alpha swarm "Add password reset" --continue-session
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Pattern 2: Multi-Feature Project&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Project initialization
npx claude-flow@alpha init --force --project-name "my-app"

# Feature 1: Authentication
npx claude-flow@alpha hive-mind spawn "auth-system" --namespace auth --claude

# Feature 2: User management
npx claude-flow@alpha hive-mind spawn "user-mgmt" --namespace users --claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Pattern 3: Research &amp;amp; Analysis&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start research session
npx claude-flow@alpha hive-mind spawn "Research microservices" \
  --agents researcher,analyst --claude

# Check learned knowledge
npx claude-flow@alpha memory stats
npx claude-flow@alpha memory query "microservices patterns" --reasoningbank
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üìä &lt;strong&gt;Performance &amp;amp; Stats&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;84.8% SWE-Bench solve rate&lt;/strong&gt; - Industry-leading problem-solving&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;32.3% token reduction&lt;/strong&gt; - Efficient context management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2.8-4.4x speed improvement&lt;/strong&gt; - Parallel coordination&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;96x-164x faster search&lt;/strong&gt; - üÜï AgentDB vector search (9.6ms ‚Üí &amp;lt;0.1ms)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4-32x memory reduction&lt;/strong&gt; - üÜï AgentDB quantization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2-3ms query latency&lt;/strong&gt; - ReasoningBank pattern search (legacy)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;64 specialized agents&lt;/strong&gt; - Complete development ecosystem&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;100 MCP tools&lt;/strong&gt; - Comprehensive automation toolkit&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;180 AgentDB tests&lt;/strong&gt; - &amp;gt;90% coverage, production-ready&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üìö &lt;strong&gt;Documentation&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;üìñ Core Documentation&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/"&gt;Documentation Hub&lt;/a&gt;&lt;/strong&gt; - Complete documentation index with organized structure&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/guides/skills-tutorial.md"&gt;Skills Tutorial&lt;/a&gt;&lt;/strong&gt; - Complete guide to 25 Claude Flow skills with natural language invocation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/INSTALLATION.md"&gt;Installation Guide&lt;/a&gt;&lt;/strong&gt; - Setup instructions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/MEMORY-SYSTEM.md"&gt;Memory System Guide&lt;/a&gt;&lt;/strong&gt; - ReasoningBank + AgentDB hybrid&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/MCP-TOOLS.md"&gt;MCP Tools Reference&lt;/a&gt;&lt;/strong&gt; - Complete tool catalog&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/AGENT-SYSTEM.md"&gt;Agent System&lt;/a&gt;&lt;/strong&gt; - All 64 agents&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;üöÄ Release Notes &amp;amp; Changelogs&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/releases/v2.7.1/"&gt;v2.7.1&lt;/a&gt;&lt;/strong&gt; - Current stable release with critical fixes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/releases/v2.7.0-alpha.10/"&gt;v2.7.0-alpha.10&lt;/a&gt;&lt;/strong&gt; - Semantic search fix&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/releases/v2.7.0-alpha.9/"&gt;v2.7.0-alpha.9&lt;/a&gt;&lt;/strong&gt; - Process cleanup&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/strong&gt; - Full version history&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;üß† AgentDB Integration (96x-164x Performance Boost)&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/agentdb/"&gt;AgentDB Documentation&lt;/a&gt;&lt;/strong&gt; - üÜï Complete AgentDB v1.3.9 integration docs 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/agentdb/PRODUCTION_READINESS.md"&gt;Production Readiness Guide&lt;/a&gt; - Deployment guide&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/agentdb/SWARM_IMPLEMENTATION_COMPLETE.md"&gt;Implementation Complete&lt;/a&gt; - 3-agent swarm details (180 tests)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/agentdb/BACKWARD_COMPATIBILITY_GUARANTEE.md"&gt;Backward Compatibility&lt;/a&gt; - 100% compatibility guarantee&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/agentdb/AGENTDB_INTEGRATION_PLAN.md"&gt;Integration Plan&lt;/a&gt; - Planning and design&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/agentdb/OPTIMIZATION_REPORT.md"&gt;Optimization Report&lt;/a&gt; - Performance analysis&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;‚ö° Performance &amp;amp; Quality&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/performance/"&gt;Performance Documentation&lt;/a&gt;&lt;/strong&gt; - Optimization guides and benchmarks 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/performance/PERFORMANCE-JSON-IMPROVEMENTS.md"&gt;JSON Improvements&lt;/a&gt; - JSON optimization results&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/performance/PERFORMANCE-METRICS-GUIDE.md"&gt;Metrics Guide&lt;/a&gt; - Performance tracking&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/fixes/"&gt;Bug Fixes&lt;/a&gt;&lt;/strong&gt; - Bug fix documentation and patches&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/validation/"&gt;Validation Reports&lt;/a&gt;&lt;/strong&gt; - Test reports and verification results&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;üõ†Ô∏è Advanced Topics&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/NEURAL-MODULE.md"&gt;Neural Module&lt;/a&gt;&lt;/strong&gt; - SAFLA self-learning&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/GOAL-MODULE.md"&gt;Goal Module&lt;/a&gt;&lt;/strong&gt; - GOAP intelligent planning&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/HIVE-MIND.md"&gt;Hive-Mind Intelligence&lt;/a&gt;&lt;/strong&gt; - Queen-led coordination&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/GITHUB-INTEGRATION.md"&gt;GitHub Integration&lt;/a&gt;&lt;/strong&gt; - Repository automation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;‚öôÔ∏è Configuration &amp;amp; Setup&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/CLAUDE-MD-TEMPLATES.md"&gt;CLAUDE.md Templates&lt;/a&gt;&lt;/strong&gt; - Project configs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/SPARC.md"&gt;SPARC Methodology&lt;/a&gt;&lt;/strong&gt; - TDD patterns&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/windows-installation.md"&gt;Windows Installation&lt;/a&gt;&lt;/strong&gt; - Windows setup&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;ü§ù &lt;strong&gt;Community &amp;amp; Support&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: &lt;a href="https://github.com/ruvnet/claude-flow/issues"&gt;Report bugs or request features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Discord&lt;/strong&gt;: &lt;a href="https://discord.com/invite/dfxmpwkG2D"&gt;Join the Agentics Foundation community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href="https://github.com/ruvnet/claude-flow/wiki"&gt;Complete guides and tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Examples&lt;/strong&gt;: &lt;a href="https://github.com/ruvnet/claude-flow/tree/main/examples"&gt;Real-world usage patterns&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üöÄ &lt;strong&gt;Roadmap &amp;amp; Targets&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Immediate (Q4 2025)&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ Semantic search fix (v2.7.0-alpha.10)&lt;/li&gt; 
 &lt;li&gt;‚úÖ ReasoningBank Node.js backend&lt;/li&gt; 
 &lt;li&gt;‚úÖ AgentDB v1.3.9 integration (PR #830) - 96x-164x performance boost&lt;/li&gt; 
 &lt;li&gt;üîÑ AgentDB production deployment (Q4 2025)&lt;/li&gt; 
 &lt;li&gt;üîÑ Enhanced embedding models&lt;/li&gt; 
 &lt;li&gt;üîÑ Multi-user collaboration features&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Q1 2026&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Advanced neural pattern recognition&lt;/li&gt; 
 &lt;li&gt;Cloud swarm coordination&lt;/li&gt; 
 &lt;li&gt;Real-time agent communication&lt;/li&gt; 
 &lt;li&gt;Enterprise SSO integration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Growth Targets&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;5K+ GitHub stars, 50K npm downloads/month&lt;/li&gt; 
 &lt;li&gt;$25K MRR, 15 enterprise customers&lt;/li&gt; 
 &lt;li&gt;90%+ error prevention&lt;/li&gt; 
 &lt;li&gt;30+ minutes saved per developer per week&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://www.star-history.com/#ruvnet/claude-flow&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üìÑ &lt;strong&gt;License&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;MIT License - see &lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/LICENSE"&gt;LICENSE&lt;/a&gt; for details&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Built with ‚ù§Ô∏è by &lt;a href="https://github.com/ruvnet"&gt;rUv&lt;/a&gt; | Powered by Revolutionary AI&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;v2.7.0-alpha.10 - Semantic Search Fixed + ReasoningBank Node.js Backend&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Moustachauve/cookie-editor</title>
      <link>https://github.com/Moustachauve/cookie-editor</link>
      <description>&lt;p&gt;A powerful browser extension to create, edit and delete cookies&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/Moustachauve/cookie-editor/actions/workflows/npm-grunt.yml"&gt;&lt;img src="https://github.com/Moustachauve/cookie-editor/actions/workflows/npm-grunt.yml/badge.svg?sanitize=true" alt="grunt ESLint" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Cookie-Editor&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://cookie-editor.com/"&gt;Cookie-Editor&lt;/a&gt; is a browser extension/add-on that lets you efficiently create, edit and delete cookies for the current tab. Perfect for developing, quickly testing or even manually managing your cookies for your privacy.&lt;/p&gt; 
&lt;h2&gt;Description&lt;/h2&gt; 
&lt;p&gt;Cookie-Editor is designed to have a simple to use interface that let you do most standard cookie operations quickly. It is ideal for developing and testing web pages.&lt;/p&gt; 
&lt;p&gt;You can easily create, edit and delete a cookie for the current page that you are visiting. There is also a handy button to mass delete all the cookies for the current page.&lt;/p&gt; 
&lt;p&gt;Cookie-Editor is available for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Google Chrome&lt;/li&gt; 
 &lt;li&gt;Firefox&lt;/li&gt; 
 &lt;li&gt;Safari&lt;/li&gt; 
 &lt;li&gt;Edge&lt;/li&gt; 
 &lt;li&gt;Opera.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It should be possible to install it on any webkit browser, but keep in mind that only the previous five browsers are officially supported.&lt;/p&gt; 
&lt;p&gt;Cookie-Editor is available on mobile devices with an interface optimised for touchscreens:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Firefox for Android&lt;/li&gt; 
 &lt;li&gt;Safari for iOS&lt;/li&gt; 
 &lt;li&gt;Edge for Android and iOS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Install on Google Chrome&lt;/h3&gt; 
&lt;p&gt;Find this extension on the &lt;a href="https://chrome.google.com/webstore/detail/cookie-editor/hlkenndednhfkekhgcdicdfddnkalmdm?utm_campaign=github"&gt;Chrome Web Store&lt;/a&gt;.&lt;br /&gt; &lt;a href="https://chrome.google.com/webstore/detail/cookie-editor/hlkenndednhfkekhgcdicdfddnkalmdm?utm_campaign=github"&gt;&lt;img src="https://raw.githubusercontent.com/Moustachauve/cookie-editor/master/readme/get-chrome.png" alt="Chrome Web Store" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Install on Firefox&lt;/h3&gt; 
&lt;p&gt;Find this extension on the &lt;a href="https://addons.mozilla.org/addon/cookie-editor?utm_campaign=external-github-readme"&gt;Firefox Add-ons site&lt;/a&gt;.&lt;br /&gt; &lt;a href="https://addons.mozilla.org/addon/cookie-editor?utm_campaign=external-github-readme"&gt;&lt;img src="https://raw.githubusercontent.com/Moustachauve/cookie-editor/master/readme/get-firefox.webp" alt="Firefox Add-ons" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Install on Safari&lt;/h3&gt; 
&lt;p&gt;Cookie-Editor is available for both Mac and iOS. It has been tested on Mac, iPhone and iPad.&lt;br /&gt; Find this extension on the &lt;a href="https://apps.apple.com/app/apple-store/id6446215341?pt=126143671&amp;amp;ct=github&amp;amp;mt=8"&gt;App Store&lt;/a&gt;.&lt;br /&gt; &lt;a href="https://apps.apple.com/app/apple-store/id6446215341?pt=126143671&amp;amp;ct=github&amp;amp;mt=8"&gt;&lt;img src="https://raw.githubusercontent.com/Moustachauve/cookie-editor/master/readme/get-safari-mac.svg?sanitize=true" alt="Apple App Store" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Install on Microsoft Edge&lt;/h3&gt; 
&lt;p&gt;Find this extension on the &lt;a href="https://microsoftedge.microsoft.com/addons/detail/cookieeditor/neaplmfkghagebokkhpjpoebhdledlfi"&gt;Microsoft Store&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Install on Opera&lt;/h3&gt; 
&lt;p&gt;Find this extension on the &lt;a href="https://addons.opera.com/en/extensions/details/cookie-editor-2/"&gt;Opera Extensions site&lt;/a&gt;.&lt;br /&gt; &lt;a href="https://addons.opera.com/en/extensions/details/cookie-editor-2/"&gt;&lt;img src="https://raw.githubusercontent.com/Moustachauve/cookie-editor/master/readme/get-opera.png" alt="Opera add-ons" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Feature Suggestions or Bug Reports&lt;/h2&gt; 
&lt;p&gt;To submit a feature suggestion or file a bug report, please &lt;a href="https://github.com/Moustachauve/cookie-editor/issues"&gt;create a new issue here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How to build&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run npm install to make sure you have all the required packages installed.&lt;/li&gt; 
 &lt;li&gt;Run the command &lt;code&gt;grunt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;All the files are in the &lt;code&gt;dist&lt;/code&gt; directory created&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Note for Safari&lt;/h3&gt; 
&lt;p&gt;Safari needs to be built in Xcode. I have only tested building Cookie-Editor on Xcode 15.&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;Thanks to DigitalOcean for supporting open-source software.&lt;/p&gt; 
&lt;p&gt; &lt;a href="https://digitalocean.pxf.io/k0BxXd"&gt; &lt;img alt="Powered by DigitalOcean" src="https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/PoweredByDO/DO_Powered_by_Badge_blue.svg?sanitize=true" width="201px" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project is not an official Google project. It is not supported by Google and Google specifically disclaims all warranties as to its quality, merchantability, or fitness for a particular purpose.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Superalgos/Superalgos</title>
      <link>https://github.com/Superalgos/Superalgos</link>
      <description>&lt;p&gt;Free, open-source crypto trading bot, automated bitcoin / cryptocurrency trading software, algorithmic trading bots. Visually design your crypto trading bot, leveraging an integrated charting system, data-mining, backtesting, paper trading, and multi-server crypto bot deployments.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Superalgos 1.6.1&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/contributors-anon/Superalgos/Superalgos?label=Contributors" alt="contributors" /&gt; &lt;img src="https://img.shields.io/github/issues-pr-closed-raw/Superalgos/Superalgos?color=blueviolet" alt="pull-activity" /&gt; &lt;img src="https://img.shields.io/github/last-commit/Superalgos/Superalgos/develop?label=last%20commit%20to%20develop" alt="last-commit" /&gt; &lt;img src="https://img.shields.io/badge/Bot%20Friendliness%20Level-119%25-yellow" alt="bot-friendliness" /&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Table of Contents&lt;/h1&gt; 
&lt;h2&gt;Main Topics&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-before-you-begin"&gt;Before You Begin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-installation-options"&gt;Installation Options&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-installation-for-developers-and-contributors"&gt;Installation for Developers and Contributors&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#superalgos-platform-client-installation"&gt;Superalgos Platform Client Installation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-uninstall"&gt;Uninstall&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-get-in-touch"&gt;Get In Touch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-other-resources"&gt;Other Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Appendix&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-prerequisites-notes"&gt;Prerequisites Notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-troubleshooting-dependencies-installation"&gt;Troubleshooting Dependencies Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-wsl2-vscode-ide-environment-setup"&gt;WSL2 VSCode IDE Environment Setup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-running-superalgos-on-a-headless-linux-server-as-a-daemon"&gt;Running Superalgos on a Headless Linux Server as a Daemon&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Introduction&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://superalgos.org/"&gt;Superalgos&lt;/a&gt; is a community-owned open-source project with a decentralized and token-incentivized Social Trading Network crowdsourcing superpowers for retail traders.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We are an open and welcoming community nurtured and incentivized with the project's native &lt;a href="https://superalgos.org/token-overview.shtml"&gt;Superalgos (SA) Token&lt;/a&gt;, which is distributed among contributors to accelerate development.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; Join the &lt;a href="https://t.me/superalgoscommunity"&gt;Telegram Community Group&lt;/a&gt; or the new &lt;a href="https://discord.gg/CGeKC6WQQb"&gt;Discord Server&lt;/a&gt; to connect with other users!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Superalgos is a vast project. The focus of this README file is the Superalgos Platform. Please, visit &lt;a href="https://superalgos.org/crypto-trading-bots-platform.shtml"&gt;the platform's page on the website&lt;/a&gt; for an overview of features and functionality.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/13994516/106380124-844d8980-63b0-11eb-9bd9-4f977b6c183b.gif" alt="superalgos-readme" /&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Before You Begin&lt;/h1&gt; 
&lt;p&gt;Worth noting before you start:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Online Demo | To get a feel of what Superalgos is about without installing anything, take the (limited) &lt;a href="https://superalgos.org/crypto-trading-bots-platform-demo.shtml"&gt;online demo&lt;/a&gt; for a spin!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;System requirements | Learn about the &lt;a href="https://superalgos.org/crypto-trading-bots-system-requirements.shtml"&gt;minimum hardware&lt;/a&gt; required to run the platform on different settings.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;FAQS:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://superalgos.org/faqs-crypto-trading-bots-before-you-being.shtml"&gt;Before you begin&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://superalgos.org/faqs-crypto-trading-bots-trust-and-safety.shtml"&gt;Trust and safety&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://superalgos.org/faqs-crypto-trading-bots-trading-with-superalgos.shtml"&gt;Trading with Superalgos&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://superalgos.org/faqs-crypto-trading-bots-open-source-crypto-trading-bots-strategies.shtml"&gt;Open-source strategies&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Documentation | The platform features interactive and searchable documentation counting over 1500 pages. The Docs are available &lt;a href="https://superalgos.org/Docs/Foundations/Book/user-manual.shtml"&gt;on the website&lt;/a&gt; and within the app. The in-app version of the Docs interacts with the app itself and is likely more up-to-date than the web version.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Getting Started&lt;/h1&gt; 
&lt;p&gt;Superalgos is an ever-growing ecosystem of tools and applications. This guide will walk you through the main ways to install the Superalgos Platform ‚Äî the flagship application of the ecosystem.&lt;/p&gt; 
&lt;p&gt;Once you install and launch the app, a series of interactive tutorials take you by the hand and walk you around the system while you learn the basic skills required to use the interface, mine data, backtest strategies, and even run a live trading session. It is highly recommended to do all tutorials, as they are carefully crafted to make your onboarding as easy as possible.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE:&lt;/strong&gt; Tutorials are the absolute best way to tackle the learning curve. You should do all tutorials before you start exploring other avenues on your own.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/13994516/107038771-4a6bf100-67bd-11eb-92e0-353525a972a9.gif" alt="welcome-tutorial-00" /&gt;&lt;/p&gt; 
&lt;p&gt;The tutorial uses Binance or Binance US as the exchange of choice. If you don't have an account with Binance or Binance US, you will still be able to follow 100% of the tutorial. When you get to the live trading section, keep going even if you don't intend to run the session. You will learn how to work with other exchanges later on. If both Binance and Binance US are blocked in your region, you will need to set up a different exchange from the get-go.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Installation Options&lt;/h1&gt; 
&lt;p&gt;There are a few methods to install the Superalgos Platform.&lt;/p&gt; 
&lt;p&gt;We will briefly describe the options available. Click the link to go to the specific README file with further instructions for the installation method of your choice.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-installation-for-developers-and-contributors"&gt;Developers and Contributors&lt;/a&gt; | This is the default installation for developers that wish to dive into the codebase and contribute to making Superalgos better. It is also the recommended installation for non-developers who wish to contribute improvements to the Docs, translations, design work, and so on. Instructions are available further down this same file.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/README_Docker.md"&gt;Docker deployments&lt;/a&gt; | Docker offers the ability to install the platform in a clean and isolated environment. The standard Docker installation is not optimized for development or contributions, but some workarounds are offered.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/README_RaspberryPi.md"&gt;Raspberry Pi&lt;/a&gt; | Raspberry Pi installations are a great economical option for running live trading sessions. You will need to be comfortable with either options 1 or 2 above to proceed here.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/README_PublicCloud.md"&gt;Public Cloud&lt;/a&gt; | This is a great option for those who wish to run live trading sessions in the cloud. You will need to be comfortable with option 3 above to proceed here.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;ABOUT REMOTE INSTALLATIONS AND MINIMALIST HARDWARE:&lt;/strong&gt; Remote installations and minimalist hardware ‚Äî both virtual and physical ‚Äî are better suited for production deployments, where the use of the GUI is minimal. We highly recommend learning Superalgos in a local installation, on a full-size PC. Mastering the system takes time, and the use of the GUI to go through in-app tutorials is crucial during the learning process. Your experience will be orders of magnitude better if you follow this advice: leave remote installations and minimalist hardware for when you are ready to start trading live.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;EXPERIENCING ISSUES INSTALLING SUPERALGOS?&lt;/strong&gt; If you're having trouble installing or running the app for the first time, do not open an issue. Instead, join the &lt;a href="https://t.me/superalgossupport"&gt;Support Telegram Group&lt;/a&gt; and follow the instructions on the pinned message to ask for help. You may also join the &lt;a href="https://discord.gg/CGeKC6WQQb"&gt;new Discord Server&lt;/a&gt;, but bear in mind that the response time tends to be longer. Online support is provided by volunteers ‚Äî please provide clear information and sufficient context about the issue you are facing, and be mindful of people's time.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you opt for the Developers and Contributors Installation (recommended), please keep on reading. Otherwise, click one of the other options above.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Installation for Developers and Contributors&lt;/h1&gt; 
&lt;p&gt;This is the purest way of installing Superalgos. It has no limitations to contributing, which is highly appreciated and rewarded with SA tokens, and gives you the most freedom for custom configurations.&lt;/p&gt; 
&lt;p&gt;All procedures (other than prerequisites) are the same for Windows, Linux, or Mac OS. Raspberry Pi terminal commands have been included for ease of use. Some edge cases are covered separately, further down this README.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;1‚É£&lt;/span&gt; Install Node.JS, Git, and Chrome&lt;/h3&gt; 
&lt;p&gt;You will need the latest versions of Node JS and Git installed. You will also need a web browser to access the interface. Google Chrome is recommended because it is the most tested browser being used by the development team and power users.&lt;/p&gt; 
&lt;p&gt;Follow the installation wizards to install the latest NodeJS and Git. Make sure to follow all the default and recommended settings while installing Git. If desired also install Chrome.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Node.js download page&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://git-scm.com/downloads"&gt;Git download page&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.google.com/chrome/"&gt;Google Chrome download page&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are running headless (i.e. as a server without a monitor attached) then you do not need to install a web browser and you can follow the tutorial for information on connecting remotely to the server.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;ENVIRONMENT-SPECIFIC NOTES&lt;/strong&gt;: Additional notes about installing prerequisites on specific environments, distributions and edge cases can be found in the &lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-prerequisites-notes"&gt;Prerequisites Notes&lt;/a&gt; section in the Appendix. We recommend checking these instructions before installing prerequisites manually from the above websites.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;TENSORFLOW NOTE&lt;/strong&gt;: If you wish to test the (partial and incomplete) TensorFlow integration, you will also need Python 3.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;span&gt;2‚É£&lt;/span&gt; Get Your Github.com Personal Access Token&lt;/h3&gt; 
&lt;p&gt;You will need to get an access token from Github.com so that you may authenticate with the service from within the app and the terminal/command line.&lt;/p&gt; 
&lt;p&gt;If you don't have a Github.com account, please open one! Once you are logged in, go to the &lt;a href="https://github.com/settings/tokens/new"&gt;New Github Personal Access Token Page&lt;/a&gt; and create a new token.&lt;/p&gt; 
&lt;p&gt;Make sure you give it the repo and workflow scopes. Check the clip below for clarity:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/13994516/161605002-734ddc2a-9cb1-49ec-ac6a-d127850ab64a.gif" alt="github-personal-access-token" /&gt;&lt;/p&gt; 
&lt;p&gt;Once you get the token, copy it and save it somewhere on your local machine. You will need it for later steps of the installation process and from time to time also when using Superalgos.&lt;/p&gt; 
&lt;h2&gt;Superalgos Platform Client Installation&lt;/h2&gt; 
&lt;p&gt;Now that you have all the prerequisites and optional environment configurations set up, we can get to the core installation of Superalgos!&lt;/p&gt; 
&lt;p&gt;There are four steps required to install Superalgos:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Fork the Superalgos Repository&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone Your Fork&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install Node Dependencies&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install Community Plugins&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Let's get on with it!&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;1‚É£&lt;/span&gt; Fork the Superalgos Repository&lt;/h3&gt; 
&lt;p&gt;Scroll this page to the top. Find and click the &lt;strong&gt;Fork&lt;/strong&gt; button to create your fork/copy of this repository.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE&lt;/strong&gt;: On the page that opens when you click the fork button, Github gives you the option to fork only the master branch by default. You must remove the selection so that you fork all branches instead. Play the following video for clarity.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/83468174/184506791-83a00c44-ddc4-4fa3-9bec-d738532555d7.gif" alt="fork" /&gt;&lt;/p&gt; 
&lt;p&gt;To fork Superalgos, you need a Github account. If you don't have one, go ahead and create it. This was one of the listed pre-requirements.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE&lt;/strong&gt;: A Fork is required so that the setup scripts may build the app from multiple repositories, and also for your contributions to the project. The reason why Superalgos is free and open-source is that the project has set up a collective business in which all users may participate. The way to participate is to &lt;a href="https://superalgos.org/community-contribute.shtml"&gt;contribute&lt;/a&gt; to making Superalgos better. The project's &lt;a href="https://superalgos.org/token-overview.shtml"&gt;native SA token&lt;/a&gt; is distributed among contributors as rewards for the value each adds to the project.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;span&gt;2‚É£&lt;/span&gt; Clone Your Fork&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE&lt;/strong&gt;: You will need your Github username and the API token you created earlier.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Once the fork is created, you will land on the page of your fork. Copy the complete URL from your browser's address bar.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE&lt;/strong&gt;: Notice it is your fork you will be cloning, not the upstream repository.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;In your computer/laptop/server, open a command prompt or terminal. Make sure you are in a directory where you have write permissions.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE&lt;/strong&gt;: On most systems, the terminal will open in your user's home directory. It's better to install Superalgos in the root folder of any of your drives, or at least in a path that is not too long. Some systems may experience issues with long paths.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Clone the git repository using the command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone &amp;lt;URL of your Superalgos fork&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, if your Github username is John, the command will look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/John/Superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This creates the &lt;code&gt;Superalgos&lt;/code&gt; folder in the current directory, which contains the whole installation.&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;3‚É£&lt;/span&gt; Install Node Dependencies&lt;/h3&gt; 
&lt;p&gt;After the Superalgos directory has been installed, you need to set up the necessary node dependencies. In the same command prompt or terminal you just used, type the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cd Superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That should take you inside the Superalgos folder created by the &lt;code&gt;git clone&lt;/code&gt; command earlier. The &lt;code&gt;node setup&lt;/code&gt; command installs the dependencies (notice there are a few options you may use).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;node setup
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Available Options:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;node setup &amp;lt;options&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Option&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;shortcuts&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Use this option to create desktop shortcuts. Otherwise, you will launch the app from the command line/terminal.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;tensorflow&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Use this option to include the TensorFlow dependencies, only if you intend to test the (partial and incomplete) TensorFlow integration.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you experience any issues installing dependencies, check the &lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#small_orange_diamond-troubleshooting-dependencies-installation"&gt;Troubleshooting Dependencies Installation&lt;/a&gt; section in the Appendix below.&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;4‚É£&lt;/span&gt; Install Community Plugins&lt;/h3&gt; 
&lt;p&gt;Before using the software, you will need to install the plugins built by the community. To do so, just run this command from the Superalgos main folder:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;node setupPlugins &amp;lt;Your-Github-Username&amp;gt; &amp;lt;Your-Github-Personal-Access-Token&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;node setupPlugins John ghz_2pBD4Sas0iYtwQGPjTq1Xlm3Ot4KpH3RLcr5
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE&lt;/strong&gt;: This is the token you created during earlier steps!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This script is going to fork all Community Plugins repositories into your own Github account, and then it will clone each of these repositories into your local &lt;code&gt;Superalgos/Plugins&lt;/code&gt; folder. The process is designed in a way that if someday a new type of plugin is added, you just need to run this command again and it will fork the new repo and clone it. This script will also find any missing forks needed and clone them too. You are safe running this script whenever you think is good.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE&lt;/strong&gt;: If you ever have issues with your Plugins repos, you can delete individual folders inside &lt;code&gt;Superalgos/Plugins&lt;/code&gt; and run this script to fix the problems for you. Also, if you have any issues with any of your plugin forks in your Github account, you can delete the offending fork and run this script again to fix the problem.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Congratulations! Your setup is complete. Now you may finally run the app for the first time. Please, follow the usage instructions below!&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;OPTIONAL:&lt;/strong&gt; Update Forked Repositories from The Superalgos Upstream Repositories&lt;/h3&gt; 
&lt;p&gt;In case you are re-installing the platform from an older fork, you may want to update your fork's repositories.&lt;/p&gt; 
&lt;p&gt;Prerequisites: &lt;code&gt;node setup&lt;/code&gt; and &lt;code&gt;node setupPlugins&lt;/code&gt; commands must be executed beforehand.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;node updateGithubRepos
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Usage&lt;/h1&gt; 
&lt;h2&gt;Run the Client and GUI&lt;/h2&gt; 
&lt;h3&gt;Using the shortcuts&lt;/h3&gt; 
&lt;p&gt;If you ran &lt;code&gt;node setup shortcuts&lt;/code&gt; while installing dependencies, then you should have a desktop icon that you can double-click to launch the Superalgos application. A terminal window will show the server is running, and a browser window will open with the GUI.&lt;/p&gt; 
&lt;h3&gt;Using the Command Line&lt;/h3&gt; 
&lt;p&gt;To run Superalgos, go to the Superalgos directory/folder and run this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;node platform
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Options usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;node platform &amp;lt;options&amp;gt; &amp;lt;project&amp;gt; &amp;lt;workspace&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Option&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;minMemo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Run with minimal memory footprint. This is critical for running on platforms with 8GB of RAM or less, like a Raspberry Pi.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;noBrowser&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Do not open the GUI in a browser. This is useful on headless servers where a UI is not available.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;To load a specific workspace on launch, add any option you may require, then the project, then the workspace. For example, to load the Blank-Template workspace of the Foundations project with no options:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;node platform Foundations Blank-Template
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Client will run on your terminal and the GUI will launch on your default browser. If Chrome/Safari is not your default browser, copy the URL, close the browser, open Chrome/Safari, and paste the URL. Be patient... it takes a few seconds to fully load the GUI.&lt;/p&gt; 
&lt;h2&gt;Usage Notes&lt;/h2&gt; 
&lt;p&gt;We are testing the UI on Google Chrome and Safari on macOS only. It may work on other browsers as well ‚Äî or not. If you are running on a different browser and ever need support, make sure you mention that fact upfront, or even better, try on Chrome/Safari first.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;TIP&lt;/strong&gt;: If your computer has 8 GB of RAM or less, use &lt;code&gt;node platform minMemo&lt;/code&gt; to run the system with minimal RAM requirements.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Uninstall&lt;/h1&gt; 
&lt;p&gt;Superalgos writes nothing outside of the &lt;code&gt;Superalgos&lt;/code&gt; folder other than shortcut files. To quickly remove the shortcut files, open a terminal or command prompt, navigate to your main Superalgos directory, and type the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;node uninstall
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then simply delete the &lt;code&gt;Superalgos&lt;/code&gt; folder to completely remove the application.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Get In Touch!&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚ö†&lt;/span&gt; &lt;strong&gt;BEWARE OF IMPERSONATORS ‚Äî SCAMMERS ARE LURKING!&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Superalgos Admins, the Founding Team, and Community Mods will never contact you directly unless you contact them first. We will never ask you for API keys, coins, or cash. We will never ask you to trust us in any way. Our &lt;a href="https://superalgos.org/community-safety-policy.shtml"&gt;Community Safety Policy&lt;/a&gt; explains why.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;In short, we want to make it clear that if someone contacts you directly claiming to work with or for the project, it is a scam.&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Please report scammers in the Community group so that they may be banned and to increase awareness of the problem, but also block them and report them to Telegram if the option is available.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;We just opened a brand new &lt;a href="https://discord.gg/CGeKC6WQQb"&gt;Discord server for Support and the Community&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;That said, support questions tend to get faster responses in the &lt;a href="https://t.me/superalgossupport"&gt;Support Telegram Group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We also meet on other &lt;a href="https://superalgos.org/community-join.shtml"&gt;Telegram groups&lt;/a&gt;, where it all started!&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Other Resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Web Site&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;For an overview of what Superalgos can do for you, check the &lt;a href="https://superalgos.org/"&gt;Superalgos Website&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://superalgos.org/community-resources.shtml"&gt;List of community resources&lt;/a&gt; featuring written, audiovisual, and interactive content.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Telegram&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;For official news, join the &lt;a href="https://t.me/superalgos"&gt;Superalgos Announcements Channel&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Meet other users in the &lt;a href="https://t.me/superalgoscommunity"&gt;Superalgos Telegram Community Group&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Meet developers in the &lt;a href="https://t.me/superalgosdevelop"&gt;Superalgos Telegram Developer's Group&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Users meet in other topic-specific Telegram Groups. There's a &lt;a href="https://superalgos.org/community-join.shtml"&gt;complete list of groups&lt;/a&gt; on the website.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Blog: find official announcements and various articles on the &lt;a href="https://medium.com/superalgos"&gt;Superalgos Blog&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Twitter: to stay in the loop, follow &lt;a href="https://twitter.com/superalgos"&gt;Superalgos on Twitter&lt;/a&gt;. Help us spread the word!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Facebook: follow &lt;a href="https://www.facebook.com/superalgos"&gt;Superalgos on Facebook&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Contributing&lt;/h1&gt; 
&lt;p&gt;Superalgos is a Community Project built by users for users. Learn &lt;a href="https://superalgos.org/community-contribute.shtml"&gt;how you may contribute&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; License&lt;/h1&gt; 
&lt;p&gt;Superalgos is open-source software released under &lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/LICENSE"&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;hr /&gt; 
&lt;hr /&gt; 
&lt;hr /&gt; 
&lt;hr /&gt; 
&lt;h1&gt;APPENDIX&lt;/h1&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Prerequisites Notes&lt;/h1&gt; 
&lt;h2&gt;Windows Prerequisites&lt;/h2&gt; 
&lt;p&gt;When following the Windows installer for Git, it is very important to make sure that you follow all the recommended and default settings, particularly on this step below:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/55707292/189213902-7f7b3642-545f-47a7-89fc-3c45971c885d.jpg" alt="IMG_0764" /&gt;&lt;/p&gt; 
&lt;h3&gt;Optional Windows Prerequisites&lt;/h3&gt; 
&lt;p&gt;For Windows users interested in testing the (partial and incomplete) TensorFlow integration, you need to install Python.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.python.org/downloads/release/python-390/"&gt;install Python 3.9&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Github Desktop is a helpful tool to manage Git conflicts and issues. You can install it using the following link.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://desktop.github.com/"&gt;GitHub Desktop download page&lt;/a&gt;. Click the "Download for Windows" button and follow the wizard to install after the download completes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Mac OS Prerequisites Homebrew Installation&lt;/h2&gt; 
&lt;p&gt;Rather than manually installing NodeJS, Git, and Python, &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt; can be used to install the prerequisites with minimal effort on Mac OS. After you clone the repository, change the directory to the Superalgos base and install the requirements using Homebrew.&lt;/p&gt; 
&lt;p&gt;There are two ways to use Homebrew. The first is to type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install git node npm python@3.9
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The second is to use the &lt;code&gt;Brewfile&lt;/code&gt; included in the code repository. After downloading, run this command in the same directory where the &lt;code&gt;Brewfile&lt;/code&gt; resides:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew bundle
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE&lt;/strong&gt;: You can use Safari or Google Chrome as your default browser. If you run into a bug in Safari, you will be asked to reproduce it in Chrome as the development team uses Chrome.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Linux (e.g. Debian, Ubuntu, or Raspberry Pi running Raspberry Pi OS) Prerequisites&lt;/h2&gt; 
&lt;p&gt;Installing Superalgos is easiest when using a Linux distribution already including Node.js in a version &amp;gt;= 16. We successfully tested this for these distributions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Debian version &amp;gt;= 12 ("Bookworm")&lt;/li&gt; 
 &lt;li&gt;Fedora version &amp;gt;= 39&lt;/li&gt; 
 &lt;li&gt;Rocky Linux &amp;gt;= 9&lt;/li&gt; 
 &lt;li&gt;AlmaLinux &amp;gt;= 9&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For Debian-based distributions (e.g. Debian, Ubuntu), run the following command to install required dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;apt-get install nodejs npm git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When using RHEL-oriented distributions (e.g. Fedora, CentOS, Rocky Linux, AlmaLinux), run the following command to install required dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;dnf install nodejs git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Node.js installation instructions for &lt;a href="https://nodejs.org/en/download/package-manager/"&gt;many other distributions&lt;/a&gt; are available.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE&lt;/strong&gt;: You need to have sufficient privileges on your system to install new packages. It may be required to precede above commands by &lt;strong&gt;sudo&lt;/strong&gt; for them to work.&lt;/p&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE&lt;/strong&gt;: While some distributions package &lt;strong&gt;npm&lt;/strong&gt; together with &lt;strong&gt;node&lt;/strong&gt;, other distributions require you to install &lt;strong&gt;npm&lt;/strong&gt; separately.&lt;/p&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE&lt;/strong&gt;: You may additionally install the package "python3". Python 3 is only required for testing the (partial and incomplete) TensorFlow integration.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You may now verify the successful installations and the installed software versions with these commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;node -v
npm -v
git --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All three commands should execute successfully and return a version number. If the version number of node is &amp;lt; 16, please proceed with the below instructions for &lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#installing-newer-versions-of-nodejs"&gt;setting up a newer version of Node.js&lt;/a&gt;. At the time of writing, particularly &lt;strong&gt;Ubuntu users&lt;/strong&gt; will need to do these additional steps as the node version shipped with Ubuntu is outdated.&lt;/p&gt; 
&lt;p&gt;If you want to run Superalgos on a machine different from a standard PC with x86 chipset, such as on ARM-based machines, please ensure to install the &lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#additional-prerequisites-for-non-standard-chipsets"&gt;additional prerequisites for non-standard chipsets&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;After all prerequisites are successfully installed, continue with obtaining your &lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#two-get-your-githubcom-personal-access-token"&gt;Github Personal Access Token&lt;/a&gt; and proceed with the Superalgos Platform Client Installation.&lt;/p&gt; 
&lt;h3&gt;Installing Newer Versions of Node.js&lt;/h3&gt; 
&lt;p&gt;Users of Linux distributions shipping outdated versions of Node.js (e.g. Ubuntu) will need to install a newer version of Node.js manually. We recommend using the Node Version Manager (nvm) to do this. For installing nvm, execute one of these commands (depending on the availability of curl or wget on your system):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;IMPORTANT&lt;/strong&gt;:&lt;/p&gt; 
 &lt;p&gt;After installing nvm, you need to close your current terminal and open a new one (log out and log in again) for the installation to take effect.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;With nvm successfully set up, you can now easily obtain a newer version of node by running &lt;strong&gt;nvm install&lt;/strong&gt;, followed by the version number you'd like to set up. For example to install Node.js v20:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm install 20
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Last but not least, check if the active version of node is now meeting your needs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;node -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Additional Prerequisites for Non-Standard Chipsets&lt;/h3&gt; 
&lt;p&gt;Users running machines with chipsets &lt;strong&gt;different from a standard PC (x86)&lt;/strong&gt;, e.g. users of arm64-based machines, will additionally need to install &lt;strong&gt;make, gcc and g++&lt;/strong&gt; to successfully complete the setup process.&lt;/p&gt; 
&lt;p&gt;For Debian-based distributions (e.g. Debian, Ubuntu) running on machines with chipsets other than x86:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;apt-get install build-essential
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For RHEL-oriented distributions (e.g. Fedora, CentOS, Rocky Linux, AlmaLinux) running on machines with chipsets other than x86:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;dnf install make gcc gcc-c++
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For any other distribution, please investigate the package names for &lt;strong&gt;make, gcc and g++&lt;/strong&gt; and install these packages accordingly.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Troubleshooting Dependencies Installation&lt;/h1&gt; 
&lt;h2&gt;Edge Cases&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE FOR WINDOWS USERS INSTALLING TENSORFLOW DEPENDENCIES:&lt;/strong&gt; You may get an error at the end of the setup process. If you do, please follow the instructions following the error message.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE FOR USERS INSTALLING MULTIPLE INSTANCES OF SUPERALGOS ON THE SAME MACHINE:&lt;/strong&gt; To avoid name conflicts between shortcuts, make sure to rename each Superalgos directory before running &lt;code&gt;node setup shortcuts&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE FOR USERS INSTALLING ON LINUX:&lt;/strong&gt; If after running &lt;code&gt;node setup&lt;/code&gt; you are prompted to address issues by running 'npm audit fix' ignore this step.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE FOR USERS INSTALLING ON LINUX MACHINES WITH NON-STANDARD CHIPSETS:&lt;/strong&gt; If after running &lt;code&gt;node setup&lt;/code&gt; you are receiving error messages pointing to applications like make, cc or gcc missing, check the &lt;a href="https://raw.githubusercontent.com/Superalgos/Superalgos/master/#additional-prerequisites-for-non-standard-chipsets"&gt;additional prerequisites for non-standard chipsets&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;NOTE FOR USERS INSTALLING ON COMPUTERS WITH 1GB OF RAM&lt;/strong&gt; Superalgos has just about outgrown computers with only 1GB of RAM. For Instance a Raspberry Pi 3 does run the Getting Started Tutorials, but over time (Into 2023) this may significantly slow and could even stop. If still wish to use a computer with only 1GB of RAM (you have been warned), you will need to use version 16.x of Node.js as version 18.x needs well over 1 GB of RAM during setup.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;General Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you are having difficulty running the node setup command here are a few common issues that may be getting in the way.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Check the version of node and npm you have installed. Make sure that you are running an updated version of node greater than version 16.6 and npm greater than version 5. You can check which version you have by typing &lt;code&gt;node -v&lt;/code&gt; and &lt;code&gt;npm -v&lt;/code&gt; into a command prompt or terminal. If your version numbers are below these, you can update your installation by following the instructions outlined in the "Node JS Installation" step above.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you are installing Superalgos in an administratively protected directory you will need to do one of the following:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;For Windows start your command prompt as an administrator.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;For Linux and Mac Systems make sure to add the sudo command to node setup. This will look like &lt;code&gt;sudo node setup&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For Windows it is important that you have C:\Windows\System32 added to your global PATH. For instructions on how to do this google "add to the path on Windows 10."&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you are getting a lot of 'unexpected' errors during node setup, try resetting npm using the command &lt;code&gt;npm ci --omit=optional&lt;/code&gt; before running &lt;code&gt;node setup&lt;/code&gt; again.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Enabling Desktop Shortcut in Ubuntu&lt;/h2&gt; 
&lt;p&gt;The majority of shortcuts that are installed will work out of the box. Desktop shortcuts on Ubuntu, however, require a few additional steps to set up. First, desktop icons need to be enabled within the Tweaks app.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Check if Tweaks is installed.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If not go to Ubuntu Software.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install Tweaks.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open Tweaks.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Under extensions turn on Desktop Icons&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/55707292/117553927-f0780300-b019-11eb-9e36-46b509653283.gif" alt="enable-ubuntu-shortcut" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;TIP:&lt;/strong&gt; If you do not see the desktop shortcut appear right away you may need to restart your computer.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Finally, you will need to enable the desktop shortcut. Right-click Superalgos.desktop and select Allow Launching.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/55707292/117553933-fcfc5b80-b019-11eb-872c-4fad81b184d2.gif" alt="allow-launching" /&gt;&lt;/p&gt; 
&lt;p&gt;Now both launcher and desktop shortcuts will launch Superalgos like any other program on your computer.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; WSL2 VSCode IDE Environment Setup&lt;/h1&gt; 
&lt;p&gt;VSCode is a popular IDE. This short section covers some helpful tips for setting up the IDE's development environment.&lt;/p&gt; 
&lt;p&gt;There are a few things that need to be configured to obtain full functionality from VSCode. These configurations will make it possible to run notebooks for ML/AI algos and turn VSCode and Windows into a development bench for working with Superalgos.&lt;/p&gt; 
&lt;p&gt;On windows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;First, you need to install WSL and WSL2 &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install"&gt;https://docs.microsoft.com/en-us/windows/wsl/install&lt;/a&gt; then reboot if prompted.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;You may want to review the Docker WSL2 Backend information for VSCode as well before proceeding. &lt;a href="https://aka.ms/vscode-remote/containers/docker-wsl2"&gt;https://aka.ms/vscode-remote/containers/docker-wsl2&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Install Debian or Ubuntu from the Windows Store, Setup the VM as instructed.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;On windows and Debian:&lt;/p&gt; 
&lt;p&gt;To make managing these WSL instances a lot easier, we will now move to installing VSCode + Tools to allow for Dockerizing and rapidly deploying as well as editing and managing test/usage cases of Superalgos edit and forks you create and contribute.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Install VSCode &lt;a href="https://code.visualstudio.com/docs/?dv=win64user"&gt;https://code.visualstudio.com/docs/?dv=win64user&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Install the remote container and remote docker plugins/extensions for Visual Studio Code &lt;a href="https://code.visualstudio.com/docs/remote/containers#_installation"&gt;https://code.visualstudio.com/docs/remote/containers#_installation&lt;/a&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;em&gt;You may want to spend time reading the specifics of this documentation on their website.&lt;/em&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;em&gt;When prompted&lt;/em&gt; install shell shortcuts for right-click options, this way you can open Superalgos easy inside of VSCode.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;‚úÖ&lt;/span&gt; &lt;strong&gt;IMPORTANT&lt;/strong&gt;:&lt;/p&gt; 
 &lt;p&gt;As mentioned above, you need to remove node.js/node from your system and install NVM if you are using Debian. Please refer to the information above for properly setting up node.js and npm on Debian systems with complications regarding versions of node.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Once the install finishes you can now use VSCode as an interactive IDE/Shell to access SuperAlgos, run Dockers for working with Superalgos, and more.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;üî∏&lt;/span&gt; Running Superalgos on a Headless Linux Server as a Daemon&lt;/h1&gt; 
&lt;p&gt;If you're running Superalgos on a headless Linux server like a Raspberry Pi, you might want to run it as a daemon so it isn't attached to your current login session. The easiest, most standard way to go about this is probably using &lt;code&gt;systemd&lt;/code&gt;. Most Linux distributions use it as the default init system/service manager.&lt;/p&gt; 
&lt;p&gt;Create a &lt;code&gt;superalgos.service&lt;/code&gt; file looking like this (change &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; to your user name and &lt;code&gt;/path/to/Superalgos&lt;/code&gt; to your Superalgos folder, for instance &lt;code&gt;/home/John/Superalgos&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ini"&gt;[Unit]
Description=Superalgos Platform Client

[Service]
Type=simple
User=&amp;lt;user&amp;gt;
WorkingDirectory=/path/to/Superalgos
ExecStart=/usr/bin/node platform minMemo noBrowser

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is no need to run Superalgos as root so we're running it as a user. The &lt;code&gt;minMemo&lt;/code&gt; option assumes you're running on a small machine like a Raspberry Pi, while &lt;code&gt;noBrowser&lt;/code&gt; makes sense for running daemonized. Now, you'll need to move the file to &lt;code&gt;/etc/systemd/system/&lt;/code&gt; for it to be recognized. You'll need then to enable and start the service.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo mv superalgos.service /etc/systemd/system
sudo systemctl daemon-reload
sudo systemctl enable superalgos
sudo systemctl start superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To check the service status&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo systemctl status superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To stop the service:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo systemctl stop superalgos
sudo systemctl disable superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To see the output of Superalgos, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;journalctl -u superalgos
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or to follow the output with &lt;code&gt;-f&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;journalctl -u superalgos -f
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>