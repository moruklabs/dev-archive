<rss version="2.0">
  <channel>
    <title>GitHub Go Daily Trending</title>
    <description>Daily Trending of Go in GitHub</description>
    <pubDate>Tue, 28 Oct 2025 01:33:56 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>apernet/OpenGFW</title>
      <link>https://github.com/apernet/OpenGFW</link>
      <description>&lt;p&gt;OpenGFW is a flexible, easy-to-use, open source implementation of GFW (Great Firewall of China) on Linux&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://raw.githubusercontent.com/apernet/OpenGFW/master/docs/logo.png" alt="OpenGFW" /&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/apernet/OpenGFW/actions/workflows/check.yaml"&gt;&lt;img src="https://github.com/apernet/OpenGFW/actions/workflows/check.yaml/badge.svg?sanitize=true" alt="Quality check status" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/apernet/OpenGFW/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-MPL_2.0-brightgreen.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/apernet/OpenGFW/master/README.zh.md"&gt;‰∏≠ÊñáÊñáÊ°£&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/apernet/OpenGFW/master/README.ja.md"&gt;Êó•Êú¨Ë™û„Éâ„Ç≠„É•„É°„É≥„Éà&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;OpenGFW is your very own DIY Great Firewall of China (&lt;a href="https://en.wikipedia.org/wiki/Great_Firewall"&gt;https://en.wikipedia.org/wiki/Great_Firewall&lt;/a&gt;), available as a flexible, easy-to-use open source program on Linux. Why let the powers that be have all the fun? It's time to give power to the people and democratize censorship. Bring the thrill of cyber-sovereignty right into your home router and start filtering like a pro - you too can play Big Brother.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Documentation site: &lt;a href="https://gfw.dev/"&gt;https://gfw.dev/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Telegram group: &lt;a href="https://t.me/OpGFW"&gt;https://t.me/OpGFW&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] This project is still in very early stages of development. Use at your own risk. We are looking for contributors to help us improve and expand the project.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full IP/TCP reassembly, various protocol analyzers 
  &lt;ul&gt; 
   &lt;li&gt;HTTP, TLS, QUIC, DNS, SSH, SOCKS4/5, WireGuard, OpenVPN, and many more to come&lt;/li&gt; 
   &lt;li&gt;"Fully encrypted traffic" detection for Shadowsocks, VMess, etc. (&lt;a href="https://gfw.report/publications/usenixsecurity23/en/"&gt;https://gfw.report/publications/usenixsecurity23/en/&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;Trojan (proxy protocol) detection&lt;/li&gt; 
   &lt;li&gt;[WIP] Machine learning based traffic classification&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Full IPv4 and IPv6 support&lt;/li&gt; 
 &lt;li&gt;Flow-based multicore load balancing&lt;/li&gt; 
 &lt;li&gt;Connection offloading&lt;/li&gt; 
 &lt;li&gt;Powerful rule engine based on &lt;a href="https://github.com/expr-lang/expr"&gt;expr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Hot-reloadable rules (send &lt;code&gt;SIGHUP&lt;/code&gt; to reload)&lt;/li&gt; 
 &lt;li&gt;Flexible analyzer &amp;amp; modifier framework&lt;/li&gt; 
 &lt;li&gt;Extensible IO implementation (only NFQueue for now)&lt;/li&gt; 
 &lt;li&gt;[WIP] Web UI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Use cases&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ad blocking&lt;/li&gt; 
 &lt;li&gt;Parental control&lt;/li&gt; 
 &lt;li&gt;Malware protection&lt;/li&gt; 
 &lt;li&gt;Abuse prevention for VPN/proxy services&lt;/li&gt; 
 &lt;li&gt;Traffic analysis (log only mode)&lt;/li&gt; 
 &lt;li&gt;Help you fulfill your dictatorial ambitions&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Notifuse/notifuse</title>
      <link>https://github.com/Notifuse/notifuse</link>
      <description>&lt;p&gt;Notifuse is an open-source &amp; modern emailing platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Notifuse&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/Notifuse/notifuse"&gt;&lt;img src="https://img.shields.io/badge/go%20report-A+-brightgreen.svg?style=flat" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Notifuse/notifuse/actions/workflows/go.yml"&gt;&lt;img src="https://github.com/Notifuse/notifuse/actions/workflows/go.yml/badge.svg?sanitize=true" alt="Go" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/Notifuse/notifuse"&gt;&lt;img src="https://codecov.io/gh/Notifuse/notifuse/graph/badge.svg?token=VZ0HBEM9OZ" alt="codecov" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://demo.notifuse.com/signin?email=demo@notifuse.com"&gt;üéØ Try the Live Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The open-source alternative to Mailchimp, Brevo, Mailjet, Listmonk, Mailerlite, and Klaviyo, Loop.so, etc.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Notifuse is a modern, self-hosted emailing platform that allows you to send newsletters and transactional emails at a fraction of the cost. Built with Go and React, it provides enterprise-grade features with the flexibility of open-source software.&lt;/p&gt; 
&lt;img src="https://www.notifuse.com/_astro/email_editor.CGyLoCOD.png" alt="Email Editor" /&gt; 
&lt;h2&gt;üöÄ Key Features&lt;/h2&gt; 
&lt;h3&gt;üìß Email Marketing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Visual Email Builder&lt;/strong&gt;: Drag-and-drop editor with MJML components and real-time preview&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Campaign Management&lt;/strong&gt;: Create, schedule, and send targeted email campaigns&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;A/B Testing&lt;/strong&gt;: Optimize campaigns with built-in testing for subject lines, content, and send times&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;List Management&lt;/strong&gt;: Advanced subscriber segmentation and list organization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contact Profiles&lt;/strong&gt;: Rich contact management with custom fields and detailed profiles&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üîß Developer-Friendly&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Easy Setup&lt;/strong&gt;: Interactive setup wizard for quick deployment and configuration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Transactional API&lt;/strong&gt;: Powerful REST API for automated email delivery&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Webhook Integration&lt;/strong&gt;: Real-time event notifications and integrations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Liquid Templating&lt;/strong&gt;: Dynamic content with variables like &lt;code&gt;{{ contact.first_name }}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Provider Support&lt;/strong&gt;: Connect with Amazon SES, Mailgun, Postmark, Mailjet, SparkPost, and SMTP&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìä Analytics &amp;amp; Insights&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Open &amp;amp; Click Tracking&lt;/strong&gt;: Detailed engagement metrics and campaign performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-time Analytics&lt;/strong&gt;: Monitor delivery rates, opens, clicks, and conversions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Campaign Reports&lt;/strong&gt;: Comprehensive reporting and analytics dashboard&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üé® Advanced Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;S3 File Manager&lt;/strong&gt;: Integrated file management with CDN delivery&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Notification Center&lt;/strong&gt;: Centralized notification system for your applications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Responsive Templates&lt;/strong&gt;: Mobile-optimized email templates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Fields&lt;/strong&gt;: Flexible contact data management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workspace Management&lt;/strong&gt;: Multi-tenant support for teams and agencies&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üèóÔ∏è Architecture&lt;/h2&gt; 
&lt;p&gt;Notifuse follows clean architecture principles with clear separation of concerns:&lt;/p&gt; 
&lt;h3&gt;Backend (Go)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Domain Layer&lt;/strong&gt;: Core business logic and entities (&lt;code&gt;internal/domain/&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Service Layer&lt;/strong&gt;: Business logic implementation (&lt;code&gt;internal/service/&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Repository Layer&lt;/strong&gt;: Data access and storage (&lt;code&gt;internal/repository/&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP Layer&lt;/strong&gt;: API handlers and middleware (&lt;code&gt;internal/http/&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Frontend (React)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Console&lt;/strong&gt;: Admin interface built with React, Ant Design, and TypeScript (&lt;code&gt;console/&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Notification Center&lt;/strong&gt;: Embeddable widget for customer notifications (&lt;code&gt;notification_center/&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;: Primary data storage with Squirrel query builder&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìÅ Project Structure&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;‚îú‚îÄ‚îÄ cmd/                    # Application entry points
‚îú‚îÄ‚îÄ internal/               # Private application code
‚îÇ   ‚îú‚îÄ‚îÄ domain/            # Business entities and logic
‚îÇ   ‚îú‚îÄ‚îÄ service/           # Business logic implementation
‚îÇ   ‚îú‚îÄ‚îÄ repository/        # Data access layer
‚îÇ   ‚îú‚îÄ‚îÄ http/              # HTTP handlers and middleware
‚îÇ   ‚îî‚îÄ‚îÄ database/          # Database configuration
‚îú‚îÄ‚îÄ console/               # React-based admin interface
‚îú‚îÄ‚îÄ notification_center/   # Embeddable notification widget
‚îú‚îÄ‚îÄ pkg/                   # Public packages
‚îî‚îÄ‚îÄ config/                # Configuration files
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; 
&lt;h3&gt;One-click deployment&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://railway.com/deploy/aBzOMu?referralCode=73Ps3m"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Quick Start with Docker Compose&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/Notifuse/notifuse.git
cd notifuse
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Configure required environment variables&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cp env.example .env
# Edit .env with database credentials and SECRET_KEY
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Minimum required variables&lt;/strong&gt;: &lt;code&gt;DB_HOST&lt;/code&gt;, &lt;code&gt;DB_PORT&lt;/code&gt;, &lt;code&gt;DB_USER&lt;/code&gt;, &lt;code&gt;DB_PASSWORD&lt;/code&gt;, &lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start the services&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Access the application and complete setup&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Open &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Follow the interactive &lt;strong&gt;Setup Wizard&lt;/strong&gt; to configure: 
    &lt;ul&gt; 
     &lt;li&gt;Root administrator email&lt;/li&gt; 
     &lt;li&gt;API endpoint&lt;/li&gt; 
     &lt;li&gt;SMTP settings&lt;/li&gt; 
     &lt;li&gt;PASETO keys (automatically generated)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Save the generated keys securely!&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Alternative&lt;/strong&gt;: You can skip the setup wizard by pre-configuring all environment variables in your &lt;code&gt;.env&lt;/code&gt; file. Generate PASETO keys at &lt;a href="https://paseto.notifuse.com"&gt;paseto.notifuse.com&lt;/a&gt; or use &lt;code&gt;make keygen&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Environment Configuration&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;‚ö†Ô∏è Important&lt;/strong&gt;: The included &lt;code&gt;docker-compose.yml&lt;/code&gt; is designed for &lt;strong&gt;testing and development only&lt;/strong&gt;. For production deployments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Use a separate PostgreSQL database&lt;/strong&gt; (managed service recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configure external storage&lt;/strong&gt; for file uploads&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Set up proper SSL/TLS termination&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Use a reverse proxy&lt;/strong&gt; (nginx, Traefik, etc.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Development Setup&lt;/h4&gt; 
&lt;p&gt;The docker-compose includes a PostgreSQL container for quick testing. Simply run &lt;code&gt;docker-compose up -d&lt;/code&gt; to get started, then complete the setup wizard in your browser.&lt;/p&gt; 
&lt;h4&gt;Production Setup&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Required Environment Variables:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;DB_HOST&lt;/code&gt;, &lt;code&gt;DB_PORT&lt;/code&gt;, &lt;code&gt;DB_USER&lt;/code&gt;, &lt;code&gt;DB_PASSWORD&lt;/code&gt; - External PostgreSQL database&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt; - Secret key for encrypting sensitive data (or &lt;code&gt;PASETO_PRIVATE_KEY&lt;/code&gt; as fallback)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DB_SSLMODE=require&lt;/code&gt; - For secure database connections&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Optional (can be configured via Setup Wizard or environment variables):&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ROOT_EMAIL&lt;/code&gt; - Root administrator email&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;API_ENDPOINT&lt;/code&gt; - Public API endpoint URL&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PASETO_PRIVATE_KEY&lt;/code&gt;, &lt;code&gt;PASETO_PUBLIC_KEY&lt;/code&gt; - Authentication keys (auto-generated in wizard)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SMTP_HOST&lt;/code&gt;, &lt;code&gt;SMTP_PORT&lt;/code&gt;, &lt;code&gt;SMTP_USERNAME&lt;/code&gt;, &lt;code&gt;SMTP_PASSWORD&lt;/code&gt; - Email provider settings&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SMTP_FROM_EMAIL&lt;/code&gt;, &lt;code&gt;SMTP_FROM_NAME&lt;/code&gt; - From address and name&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Environment variables always take precedence over database settings configured via the setup wizard.&lt;/p&gt; 
&lt;p&gt;For detailed installation instructions, configuration options, and setup guides, visit &lt;strong&gt;&lt;a href="https://docs.notifuse.com"&gt;docs.notifuse.com&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;üìö Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.notifuse.com"&gt;Complete Documentation&lt;/a&gt;&lt;/strong&gt; - Comprehensive guides and tutorials&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions!&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create a feature branch&lt;/li&gt; 
 &lt;li&gt;Make your changes&lt;/li&gt; 
 &lt;li&gt;Add tests&lt;/li&gt; 
 &lt;li&gt;Submit a pull request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üìÑ License&lt;/h2&gt; 
&lt;p&gt;Notifuse is released under the &lt;a href="https://raw.githubusercontent.com/Notifuse/notifuse/main/LICENSE"&gt;GNU Affero General Public License v3.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üÜò Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href="https://docs.notifuse.com"&gt;docs.notifuse.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Email Support&lt;/strong&gt;: &lt;a href="mailto:hello@notifuse.com"&gt;hello@notifuse.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: &lt;a href="https://github.com/Notifuse/notifuse/issues"&gt;Report bugs or request features&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üåü Why Choose Notifuse?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üí∞ Cost-Effective&lt;/strong&gt;: Self-hosted solution with no per-email pricing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîí Privacy-First&lt;/strong&gt;: Your data stays on your infrastructure&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üõ†Ô∏è Customizable&lt;/strong&gt;: Open-source with extensive customization options&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìà Scalable&lt;/strong&gt;: Built to handle millions of emails&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üöÄ Modern&lt;/strong&gt;: Built with modern technologies and best practices&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîß Developer-Friendly&lt;/strong&gt;: Comprehensive API and webhook support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Ready to get started?&lt;/strong&gt; &lt;a href="https://demo.notifuse.com/signin?email=demo@notifuse.com"&gt;Try the live demo&lt;/a&gt; or &lt;a href="https://docs.notifuse.com"&gt;deploy your own instance&lt;/a&gt; in minutes.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>go-gitea/gitea</title>
      <link>https://github.com/go-gitea/gitea</link>
      <description>&lt;p&gt;Git with a cup of tea! Painless self-hosted all-in-one software development service, including Git hosting, code review, team collaboration, package registry and CI/CD&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gitea&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/go-gitea/gitea/actions/workflows/release-nightly.yml?query=branch%3Amain" title="Release Nightly"&gt;&lt;img src="https://github.com/go-gitea/gitea/actions/workflows/release-nightly.yml/badge.svg?branch=main" alt="" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/Gitea" title="Join the Discord chat at https://discord.gg/Gitea"&gt;&lt;img src="https://img.shields.io/discord/322538954119184384.svg?logo=discord&amp;amp;logoColor=white&amp;amp;label=Discord&amp;amp;color=5865F2" alt="" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/code.gitea.io/gitea" title="Go Report Card"&gt;&lt;img src="https://goreportcard.com/badge/code.gitea.io/gitea" alt="" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/code.gitea.io/gitea" title="GoDoc"&gt;&lt;img src="https://pkg.go.dev/badge/code.gitea.io/gitea?status.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/go-gitea/gitea/releases/latest" title="GitHub release"&gt;&lt;img src="https://img.shields.io/github/release/go-gitea/gitea.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://www.codetriage.com/go-gitea/gitea" title="Help Contribute to Open Source"&gt;&lt;img src="https://www.codetriage.com/go-gitea/gitea/badges/users.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea" title="Become a backer/sponsor of gitea"&gt;&lt;img src="https://opencollective.com/gitea/tiers/backers/badge.svg?label=backers&amp;amp;color=brightgreen" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT" title="License: MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/go-gitea/gitea"&gt;&lt;img src="https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod&amp;amp;color=green" alt="Contribute with Gitpod" /&gt;&lt;/a&gt; &lt;a href="https://translate.gitea.com" title="Crowdin"&gt;&lt;img src="https://badges.crowdin.net/gitea/localized.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/go-gitea/gitea/main/README.zh-tw.md"&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/go-gitea/gitea/main/README.zh-cn.md"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Purpose&lt;/h2&gt; 
&lt;p&gt;The goal of this project is to make the easiest, fastest, and most painless way of setting up a self-hosted Git service.&lt;/p&gt; 
&lt;p&gt;As Gitea is written in Go, it works across &lt;strong&gt;all&lt;/strong&gt; the platforms and architectures that are supported by Go, including Linux, macOS, and Windows on x86, amd64, ARM and PowerPC architectures. This project has been &lt;a href="https://blog.gitea.com/welcome-to-gitea/"&gt;forked&lt;/a&gt; from &lt;a href="https://gogs.io"&gt;Gogs&lt;/a&gt; since November of 2016, but a lot has changed.&lt;/p&gt; 
&lt;p&gt;For online demonstrations, you can visit &lt;a href="https://demo.gitea.com"&gt;demo.gitea.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For accessing free Gitea service (with a limited number of repositories), you can visit &lt;a href="https://gitea.com/user/login"&gt;gitea.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To quickly deploy your own dedicated Gitea instance on Gitea Cloud, you can start a free trial at &lt;a href="https://cloud.gitea.com"&gt;cloud.gitea.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find comprehensive documentation on our official &lt;a href="https://docs.gitea.com/"&gt;documentation website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It includes installation, administration, usage, development, contributing guides, and more to help you get started and explore all features effectively.&lt;/p&gt; 
&lt;p&gt;If you have any suggestions or would like to contribute to it, you can visit the &lt;a href="https://gitea.com/gitea/docs"&gt;documentation repository&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;From the root of the source tree, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TAGS="bindata" make build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or if SQLite support is required:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TAGS="bindata sqlite sqlite_unlock_notify" make build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;build&lt;/code&gt; target is split into two sub-targets:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;make backend&lt;/code&gt; which requires &lt;a href="https://go.dev/dl/"&gt;Go Stable&lt;/a&gt;, the required version is defined in &lt;a href="https://raw.githubusercontent.com/go-gitea/gitea/main/go.mod"&gt;go.mod&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make frontend&lt;/code&gt; which requires &lt;a href="https://nodejs.org/en/download/"&gt;Node.js LTS&lt;/a&gt; or greater and &lt;a href="https://pnpm.io/installation"&gt;pnpm&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Internet connectivity is required to download the go and npm modules. When building from the official source tarballs which include pre-built frontend files, the &lt;code&gt;frontend&lt;/code&gt; target will not be triggered, making it possible to build without Node.js.&lt;/p&gt; 
&lt;p&gt;More info: &lt;a href="https://docs.gitea.com/installation/install-from-source"&gt;https://docs.gitea.com/installation/install-from-source&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Using&lt;/h2&gt; 
&lt;p&gt;After building, a binary file named &lt;code&gt;gitea&lt;/code&gt; will be generated in the root of the source tree by default. To run it, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./gitea web
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you're interested in using our APIs, we have experimental support with &lt;a href="https://docs.gitea.com/api"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Expected workflow is: Fork -&amp;gt; Patch -&amp;gt; Push -&amp;gt; Pull Request&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;YOU MUST READ THE &lt;a href="https://raw.githubusercontent.com/go-gitea/gitea/main/CONTRIBUTING.md"&gt;CONTRIBUTORS GUIDE&lt;/a&gt; BEFORE STARTING TO WORK ON A PULL REQUEST.&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;If you have found a vulnerability in the project, please write privately to &lt;strong&gt;&lt;a href="mailto:security@gitea.io"&gt;security@gitea.io&lt;/a&gt;&lt;/strong&gt;. Thanks!&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Translating&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://translate.gitea.com"&gt;&lt;img src="https://badges.crowdin.net/gitea/localized.svg?sanitize=true" alt="Crowdin" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Translations are done through &lt;a href="https://translate.gitea.com"&gt;Crowdin&lt;/a&gt;. If you want to translate to a new language, ask one of the managers in the Crowdin project to add a new language there.&lt;/p&gt; 
&lt;p&gt;You can also just create an issue for adding a language or ask on Discord on the #translation channel. If you need context or find some translation issues, you can leave a comment on the string or ask on Discord. For general translation questions there is a section in the docs. Currently a bit empty, but we hope to fill it as questions pop up.&lt;/p&gt; 
&lt;p&gt;Get more information from &lt;a href="https://docs.gitea.com/contributing/localization"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Official and Third-Party Projects&lt;/h2&gt; 
&lt;p&gt;We provide an official &lt;a href="https://gitea.com/gitea/go-sdk"&gt;go-sdk&lt;/a&gt;, a CLI tool called &lt;a href="https://gitea.com/gitea/tea"&gt;tea&lt;/a&gt; and an &lt;a href="https://gitea.com/gitea/act_runner"&gt;action runner&lt;/a&gt; for Gitea Action.&lt;/p&gt; 
&lt;p&gt;We maintain a list of Gitea-related projects at &lt;a href="https://gitea.com/gitea/awesome-gitea"&gt;gitea/awesome-gitea&lt;/a&gt;, where you can discover more third-party projects, including SDKs, plugins, themes, and more.&lt;/p&gt; 
&lt;h2&gt;Communication&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/Gitea" title="Join the Discord chat at https://discord.gg/Gitea"&gt;&lt;img src="https://img.shields.io/discord/322538954119184384.svg?logo=discord&amp;amp;logoColor=white&amp;amp;label=Discord&amp;amp;color=5865F2" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you have questions that are not covered by the &lt;a href="https://docs.gitea.com/"&gt;documentation&lt;/a&gt;, you can get in contact with us on our &lt;a href="https://discord.gg/Gitea"&gt;Discord server&lt;/a&gt; or create a post in the &lt;a href="https://forum.gitea.com/"&gt;discourse forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orgs/go-gitea/people"&gt;Maintainers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gitea/gitea/graphs/contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/go-gitea/gitea/main/options/locale/TRANSLATORS"&gt;Translators&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;Thank you to all our backers! üôè [&lt;a href="https://opencollective.com/gitea#backer"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/gitea#backers" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/backers.svg?width=890" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href="https://opencollective.com/gitea#sponsor"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/gitea/sponsor/0/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/0/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/1/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/1/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/2/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/2/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/3/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/3/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/4/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/4/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/5/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/5/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/6/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/6/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/7/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/7/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/8/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/8/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/9/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/9/avatar.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;How do you pronounce Gitea?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Gitea is pronounced &lt;a href="https://youtu.be/EM71-2uDAoY"&gt;/…°…™‚Äôti:/&lt;/a&gt; as in "gi-tea" with a hard g.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Why is this not hosted on a Gitea instance?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We're &lt;a href="https://github.com/go-gitea/gitea/issues/1029"&gt;working on it&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Where can I find the security patches?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In the &lt;a href="https://github.com/go-gitea/gitea/releases"&gt;release log&lt;/a&gt; or the &lt;a href="https://github.com/go-gitea/gitea/raw/main/CHANGELOG.md"&gt;change log&lt;/a&gt;, search for the keyword &lt;code&gt;SECURITY&lt;/code&gt; to find the security patches.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License. See the &lt;a href="https://github.com/go-gitea/gitea/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for the full license text.&lt;/p&gt; 
&lt;h2&gt;Further information&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Looking for an overview of the interface? Check it out!&lt;/summary&gt; 
 &lt;h3&gt;Login/Register Page&lt;/h3&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/login.png" alt="Login" /&gt; &lt;img src="https://dl.gitea.com/screenshots/register.png" alt="Register" /&gt;&lt;/p&gt; 
 &lt;h3&gt;User Dashboard&lt;/h3&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/home.png" alt="Home" /&gt; &lt;img src="https://dl.gitea.com/screenshots/issues.png" alt="Issues" /&gt; &lt;img src="https://dl.gitea.com/screenshots/pull_requests.png" alt="Pull Requests" /&gt; &lt;img src="https://dl.gitea.com/screenshots/milestones.png" alt="Milestones" /&gt;&lt;/p&gt; 
 &lt;h3&gt;User Profile&lt;/h3&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/user_profile.png" alt="Profile" /&gt;&lt;/p&gt; 
 &lt;h3&gt;Explore&lt;/h3&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/explore_repos.png" alt="Repos" /&gt; &lt;img src="https://dl.gitea.com/screenshots/explore_users.png" alt="Users" /&gt; &lt;img src="https://dl.gitea.com/screenshots/explore_orgs.png" alt="Orgs" /&gt;&lt;/p&gt; 
 &lt;h3&gt;Repository&lt;/h3&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/repo_home.png" alt="Home" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_commits.png" alt="Commits" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_branches.png" alt="Branches" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_labels.png" alt="Labels" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_milestones.png" alt="Milestones" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_releases.png" alt="Releases" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_tags.png" alt="Tags" /&gt;&lt;/p&gt; 
 &lt;h4&gt;Repository Issue&lt;/h4&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/repo_issues.png" alt="List" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_issue.png" alt="Issue" /&gt;&lt;/p&gt; 
 &lt;h4&gt;Repository Pull Requests&lt;/h4&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/repo_pull_requests.png" alt="List" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_pull_request.png" alt="Pull Request" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_pull_request_file.png" alt="File" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_pull_request_commits.png" alt="Commits" /&gt;&lt;/p&gt; 
 &lt;h4&gt;Repository Actions&lt;/h4&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/repo_actions.png" alt="List" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_actions_run.png" alt="Details" /&gt;&lt;/p&gt; 
 &lt;h4&gt;Repository Activity&lt;/h4&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/repo_activity.png" alt="Activity" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_contributors.png" alt="Contributors" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_code_frequency.png" alt="Code Frequency" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_recent_commits.png" alt="Recent Commits" /&gt;&lt;/p&gt; 
 &lt;h3&gt;Organization&lt;/h3&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/org_home.png" alt="Home" /&gt;&lt;/p&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>NexaAI/nexa-sdk</title>
      <link>https://github.com/NexaAI/nexa-sdk</link>
      <description>&lt;p&gt;Run the latest LLMs and VLMs across GPU, NPU, and CPU with PC (Python/C++) &amp; mobile (Android &amp; iOS) support, running quickly with OpenAI gpt-oss, Granite4, Qwen3VL, Gemma 3n and more.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt; &lt;img width="100%" src="https://raw.githubusercontent.com/NexaAI/nexa-sdk/main/assets/banner1.png" alt="Nexa AI Banner" /&gt; &lt;/p&gt;
 &lt;div align="center"&gt; 
  &lt;p style="font-size: 1.3em; font-weight: 600; margin-bottom: 10px;"&gt;ü§ù Trusted by Partners&lt;/p&gt; 
  &lt;img src="https://raw.githubusercontent.com/NexaAI/nexa-sdk/main/assets/qualcomm.png" alt="Qualcomm" height="40" style="margin: 0 20px;" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/NexaAI/nexa-sdk/main/assets/nvidia.png" alt="NVIDIA" height="40" style="margin: 0 20px;" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/NexaAI/nexa-sdk/main/assets/AMD.png" alt="AMD" height="42" style="margin: 0 20px;" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/NexaAI/nexa-sdk/main/assets/Intel_logo.png" alt="Intel" height="45" style="margin: 0 10px;" /&gt; 
 &lt;/div&gt; 
 &lt;p&gt;&lt;/p&gt; 
 &lt;p align="center"&gt; &lt;a href="https://docs.nexa.ai"&gt; &lt;img src="https://img.shields.io/badge/docs-website-brightgreen?logo=readthedocs" alt="Documentation" /&gt; &lt;/a&gt; &lt;a href="https://x.com/nexa_ai"&gt;&lt;img alt="X account" src="https://img.shields.io/twitter/url/https/twitter.com/diffuserslib.svg?style=social&amp;amp;label=Follow%20%40Nexa_AI" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/nexa-ai"&gt; &lt;img src="https://img.shields.io/discord/1192186167391682711?color=5865F2&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Join us on Discord" /&gt; &lt;/a&gt; &lt;a href="https://join.slack.com/t/nexa-ai-community/shared_invite/zt-3837k9xpe-LEty0disTTUnTUQ4O3uuNw"&gt; &lt;img src="https://img.shields.io/badge/slack-join%20chat-4A154B?logo=slack&amp;amp;logoColor=white" alt="Join us on Slack" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;NexaSDK - Run any AI model on any backend&lt;/h1&gt; 
&lt;p&gt;NexaSDK is an easy-to-use developer toolkit for running any AI model locally ‚Äî across NPUs, GPUs, and CPUs ‚Äî powered by our NexaML engine, built entirely from scratch for peak performance on every hardware stack. Unlike wrappers that depend on existing runtimes, NexaML is a unified inference engine built at the kernel level. It‚Äôs what lets NexaSDK achieve Day-0 support for new model architectures (LLMs, multimodal, audio, vision). NexaML supports 3 model formats: GGUF, MLX, and Nexa AI's own &lt;code&gt;.nexa&lt;/code&gt; format.&lt;/p&gt; 
&lt;h3&gt;‚öôÔ∏è Differentiation&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Features&lt;/th&gt; 
    &lt;th&gt;&lt;strong&gt;NexaSDK&lt;/strong&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;strong&gt;Ollama&lt;/strong&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;strong&gt;llama.cpp&lt;/strong&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;strong&gt;LM Studio&lt;/strong&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;NPU support&lt;/td&gt; 
    &lt;td&gt;‚úÖ NPU-first&lt;/td&gt; 
    &lt;td&gt;‚ùå&lt;/td&gt; 
    &lt;td&gt;‚ùå&lt;/td&gt; 
    &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Support any model in GGUF, MLX, NEXA format&lt;/td&gt; 
    &lt;td&gt;‚úÖ Low-level Control&lt;/td&gt; 
    &lt;td&gt;‚ùå&lt;/td&gt; 
    &lt;td&gt;‚ö†Ô∏è&lt;/td&gt; 
    &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Full multimodality support&lt;/td&gt; 
    &lt;td&gt;‚úÖ Image, Audio, Text&lt;/td&gt; 
    &lt;td&gt;‚ö†Ô∏è&lt;/td&gt; 
    &lt;td&gt;‚ö†Ô∏è&lt;/td&gt; 
    &lt;td&gt;‚ö†Ô∏è&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Cross-platform support&lt;/td&gt; 
    &lt;td&gt;‚úÖ Desktop, Mobile, Automotive, IoT&lt;/td&gt; 
    &lt;td&gt;‚ö†Ô∏è&lt;/td&gt; 
    &lt;td&gt;‚ö†Ô∏è&lt;/td&gt; 
    &lt;td&gt;‚ö†Ô∏è&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;One line of code to run&lt;/td&gt; 
    &lt;td&gt;‚úÖ&lt;/td&gt; 
    &lt;td&gt;‚úÖ&lt;/td&gt; 
    &lt;td&gt;‚ö†Ô∏è&lt;/td&gt; 
    &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;OpenAI-compatible API + Function calling&lt;/td&gt; 
    &lt;td&gt;‚úÖ&lt;/td&gt; 
    &lt;td&gt;‚úÖ&lt;/td&gt; 
    &lt;td&gt;‚úÖ&lt;/td&gt; 
    &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p align="center" style="margin-top:14px"&gt; &lt;i&gt; &lt;b&gt;Legend:&lt;/b&gt; &lt;span title="Full support"&gt;‚úÖ Supported&lt;/span&gt; &amp;nbsp; | &amp;nbsp; &lt;span title="Partial or limited support"&gt;‚ö†Ô∏è Partial or limited support &lt;/span&gt; &amp;nbsp; | &amp;nbsp; &lt;span title="Not Supported"&gt;‚ùå No&lt;/span&gt; &lt;/i&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Recent Wins&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üì£ Day-0 Support for &lt;strong&gt;Qwen3-VL-4B and 8B&lt;/strong&gt; in GGUF, MLX, .nexa format for NPU/GPU/CPU. We are the only framework that supports the GGUF format. &lt;a href="https://x.com/Alibaba_Qwen/status/1978154384098754943"&gt;Featured in Qwen's post about our partnership&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;üì£ Day-0 Support for &lt;strong&gt;IBM Granite 4.0&lt;/strong&gt; on NPU/GPU/CPU. &lt;a href="https://x.com/IBM/status/1978154384098754943"&gt;NexaML engine were featured right next to vLLM, llama.cpp, and MLX in IBM's blog&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;üì£ Day-0 Support for &lt;strong&gt;Google EmbeddingGemma&lt;/strong&gt; on NPU. We are &lt;a href="https://x.com/googleaidevs/status/1969188152049889511"&gt;featured in Google's social post&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;üì£ Supported &lt;strong&gt;vision capability for Gemma3n&lt;/strong&gt;: First-ever &lt;a href="https://sdk.nexa.ai/model/Gemma3n-E4B"&gt;Gemma-3n&lt;/a&gt; &lt;strong&gt;multimodal&lt;/strong&gt; inference for GPU &amp;amp; CPU, in GGUF format.&lt;/li&gt; 
 &lt;li&gt;üì£ AMD NPU Support for &lt;a href="https://huggingface.co/NexaAI/sdxl-turbo-amd-npu"&gt;SDXL&lt;/a&gt; image generation&lt;/li&gt; 
 &lt;li&gt;üì£ Intel NPU Support &lt;a href="https://sdk.nexa.ai/model/DeepSeek-R1-Distill-Qwen-1.5B-Intel-NPU"&gt;DeepSeek-r1-distill-Qwen-1.5B&lt;/a&gt; and &lt;a href="https://sdk.nexa.ai/model/Llama3.2-3B-Intel-NPU"&gt;Llama3.2-3B&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üì£ Apple Neural Engine Support for real-time speech recognition with &lt;a href="https://sdk.nexa.ai/model/parakeet-v3-ane"&gt;Parakeet v3 model&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Quick Start&lt;/h1&gt; 
&lt;h2&gt;Step 1: Download Nexa CLI with one click&lt;/h2&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://public-storage.nexa4ai.com/nexa_sdk/downloads/nexa-cli_macos_arm64.pkg"&gt;arm64 with Apple Neural Engine support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://public-storage.nexa4ai.com/nexa_sdk/downloads/nexa-cli_macos_x86_64.pkg"&gt;x86_64&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://public-storage.nexa4ai.com/nexa_sdk/downloads/nexa-cli_windows_arm64.exe"&gt;arm64 with Qualcomm NPU support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://public-storage.nexa4ai.com/nexa_sdk/downloads/nexa-cli_windows_x86_64.exe"&gt;x86_64 with Intel / AMD NPU support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;h4&gt;For x86_64:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsSL https://github.com/NexaAI/nexa-sdk/releases/latest/download/nexa-cli_linux_x86_64.sh -o install.sh &amp;amp;&amp;amp; chmod +x install.sh &amp;amp;&amp;amp; ./install.sh &amp;amp;&amp;amp; rm install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;For arm64:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsSL https://github.com/NexaAI/nexa-sdk/releases/latest/download/nexa-cli_linux_arm64.sh -o install.sh &amp;amp;&amp;amp; chmod +x install.sh &amp;amp;&amp;amp; ./install.sh &amp;amp;&amp;amp; rm install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Step 2: Run models with one line of code&lt;/h2&gt; 
&lt;p&gt;You can run any compatible GGUF, MLX, or nexa model from ü§ó Hugging Face by using the &lt;code&gt;nexa infer &amp;lt;full repo name&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;GGUF models&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] GGUF runs on macOS, Linux, and Windows on CPU/GPU. Note certain GGUF models are only supported by NexaSDK (e.g. Qwen3-VL-4B and 8B).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;üìù Run and chat with LLMs, e.g. Qwen3:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer ggml-org/Qwen3-1.7B-GGUF
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üñºÔ∏è Run and chat with Multimodal models, e.g. Qwen3-VL-4B:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer NexaAI/Qwen3-VL-4B-Instruct-GGUF
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MLX models&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] MLX is macOS-only (Apple Silicon). Many MLX models in the Hugging Face mlx-community organization have quality issues and may not run reliably. We recommend starting with models from our curated &lt;a href="https://huggingface.co/NexaAI/collections"&gt;NexaAI Collection&lt;/a&gt; for best results. For example&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;üìù Run and chat with LLMs, e.g. Qwen3:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer NexaAI/Qwen3-4B-4bit-MLX
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üñºÔ∏è Run and chat with Multimodal models, e.g. Gemma3n:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer NexaAI/gemma-3n-E4B-it-4bit-MLX
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Qualcomm NPU models&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] You need to download the &lt;a href="https://public-storage.nexa4ai.com/nexa_sdk/downloads/nexa-cli_windows_arm64.exe"&gt;arm64 with Qualcomm NPU support&lt;/a&gt; and make sure you have Snapdragon¬Æ X Elite chip on your laptop.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Quick Start (Windows arm64, Snapdragon X Elite)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Login &amp;amp; Get Access Token (required for Pro Models)&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create an account at &lt;a href="https://sdk.nexa.ai"&gt;sdk.nexa.ai&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Go to &lt;strong&gt;Deployment ‚Üí Create Token&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;Run this once in your terminal (replace with your token): &lt;pre&gt;&lt;code class="language-bash"&gt;nexa config set license '&amp;lt;your_token_here&amp;gt;'
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run and chat with our multimodal model, OmniNeural-4B, or other models on NPU&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer NexaAI/OmniNeural-4B
nexa infer NexaAI/Granite-4-Micro-NPU
nexa infer NexaAI/Qwen3-VL-4B-Instruct-NPU
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;CLI Reference&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Essential Command&lt;/th&gt; 
   &lt;th&gt;What it does&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa -h&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;show all CLI commands&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa pull &amp;lt;repo&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Interactive download &amp;amp; cache of a model&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa infer &amp;lt;repo&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Local inference&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa list&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Show all cached models with sizes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa remove &amp;lt;repo&amp;gt;&lt;/code&gt; / &lt;code&gt;nexa clean&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Delete one / all cached models&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa serve --host 127.0.0.1:8080&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Launch OpenAI‚Äëcompatible REST server&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa run &amp;lt;repo&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Chat with a model via an existing server&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;üëâ To interact with multimodal models, you can drag photos or audio clips directly into the CLI ‚Äî you can even drop multiple images at once!&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://nexaai.mintlify.app/nexa-sdk-go/NexaCLI"&gt;CLI Reference&lt;/a&gt; for full commands.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;We would like to thank the following projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggml-org/ggml"&gt;ggml&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ml-explore/mlx-lm"&gt;mlx-lm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Blaizzy/mlx-vlm"&gt;mlx-vlm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Blaizzy/mlx-audio"&gt;mlx-audio&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>v2fly/domain-list-community</title>
      <link>https://github.com/v2fly/domain-list-community</link>
      <description>&lt;p&gt;Community managed domain list. Generate geosite.dat for V2Ray.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Domain list community&lt;/h1&gt; 
&lt;p&gt;This project manages a list of domains, to be used as geosites for routing purpose in Project V.&lt;/p&gt; 
&lt;h2&gt;Purpose of this project&lt;/h2&gt; 
&lt;p&gt;This project is not opinionated. In other words, it does NOT endorse, claim or imply that a domain should be blocked or proxied. It can be used to generate routing rules on demand.&lt;/p&gt; 
&lt;h2&gt;Download links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;dlc.dat&lt;/strong&gt;Ôºö&lt;a href="https://github.com/v2fly/domain-list-community/releases/latest/download/dlc.dat"&gt;https://github.com/v2fly/domain-list-community/releases/latest/download/dlc.dat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;dlc.dat.sha256sum&lt;/strong&gt;Ôºö&lt;a href="https://github.com/v2fly/domain-list-community/releases/latest/download/dlc.dat.sha256sum"&gt;https://github.com/v2fly/domain-list-community/releases/latest/download/dlc.dat.sha256sum&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage example&lt;/h2&gt; 
&lt;p&gt;Each file in the &lt;code&gt;data&lt;/code&gt; directory can be used as a rule in this format: &lt;code&gt;geosite:filename&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;"routing": {
  "domainStrategy": "IPIfNonMatch",
  "rules": [
    {
      "type": "field",
      "outboundTag": "Reject",
      "domain": [
        "geosite:category-ads-all",
        "geosite:category-porn"
      ]
    },
    {
      "type": "field",
      "outboundTag": "Direct",
      "domain": [
        "domain:icloud.com",
        "domain:icloud-content.com",
        "domain:cdn-apple.com",
        "geosite:cn",
        "geosite:private"
      ]
    },
    {
      "type": "field",
      "outboundTag": "Proxy-1",
      "domain": [
        "geosite:category-anticensorship",
        "geosite:category-media",
        "geosite:category-vpnservices"
      ]
    },
    {
      "type": "field",
      "outboundTag": "Proxy-2",
      "domain": [
        "geosite:category-dev"
      ]
    },
    {
      "type": "field",
      "outboundTag": "Proxy-3",
      "domain": [
        "geosite:geolocation-!cn"
      ]
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Generate &lt;code&gt;dlc.dat&lt;/code&gt; manually&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;code&gt;golang&lt;/code&gt; and &lt;code&gt;git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Clone project code: &lt;code&gt;git clone https://github.com/v2fly/domain-list-community.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Navigate to project root directory: &lt;code&gt;cd domain-list-community&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install project dependencies: &lt;code&gt;go mod download&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Generate &lt;code&gt;dlc.dat&lt;/code&gt; (without &lt;code&gt;datapath&lt;/code&gt; option means to use domain lists in &lt;code&gt;data&lt;/code&gt; directory of current working directory): 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;go run ./&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;go run ./ --datapath=/path/to/your/custom/data/directory&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Run &lt;code&gt;go run ./ --help&lt;/code&gt; for more usage information.&lt;/p&gt; 
&lt;h2&gt;Structure of data&lt;/h2&gt; 
&lt;p&gt;All data are under &lt;code&gt;data&lt;/code&gt; directory. Each file in the directory represents a sub-list of domains, named by the file name. File content is in the following format.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# comments
include:another-file
domain:google.com @attr1 @attr2
keyword:google
regexp:www\.google\.com$
full:www.google.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The following types of rules are &lt;strong&gt;NOT&lt;/strong&gt; fully compatible with the ones that defined by user in V2Ray config file. Do &lt;strong&gt;Not&lt;/strong&gt; copy and paste directly.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Comment begins with &lt;code&gt;#&lt;/code&gt;. It may begin anywhere in the file. The content in the line after &lt;code&gt;#&lt;/code&gt; is treated as comment and ignored in production.&lt;/li&gt; 
 &lt;li&gt;Inclusion begins with &lt;code&gt;include:&lt;/code&gt;, followed by the file name of an existing file in the same directory.&lt;/li&gt; 
 &lt;li&gt;Subdomain begins with &lt;code&gt;domain:&lt;/code&gt;, followed by a valid domain name. The prefix &lt;code&gt;domain:&lt;/code&gt; may be omitted.&lt;/li&gt; 
 &lt;li&gt;Keyword begins with &lt;code&gt;keyword:&lt;/code&gt;, followed by a string.&lt;/li&gt; 
 &lt;li&gt;Regular expression begins with &lt;code&gt;regexp:&lt;/code&gt;, followed by a valid regular expression (per Golang's standard).&lt;/li&gt; 
 &lt;li&gt;Full domain begins with &lt;code&gt;full:&lt;/code&gt;, followed by a complete and valid domain name.&lt;/li&gt; 
 &lt;li&gt;Domains (including &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;keyword&lt;/code&gt;, &lt;code&gt;regexp&lt;/code&gt; and &lt;code&gt;full&lt;/code&gt;) may have one or more attributes. Each attribute begins with &lt;code&gt;@&lt;/code&gt; and followed by the name of the attribute.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Adding new &lt;code&gt;regexp&lt;/code&gt; and &lt;code&gt;keyword&lt;/code&gt; rules is discouraged because it is easy to use them incorrectly, and proxy software cannot efficiently match these types of rules.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;p&gt;The entire &lt;code&gt;data&lt;/code&gt; directory will be built into an external &lt;code&gt;geosite&lt;/code&gt; file for Project V. Each file in the directory represents a section in the generated file.&lt;/p&gt; 
&lt;p&gt;To generate a section:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Remove all the comments in the file.&lt;/li&gt; 
 &lt;li&gt;Replace &lt;code&gt;include:&lt;/code&gt; lines with the actual content of the file.&lt;/li&gt; 
 &lt;li&gt;Omit all empty lines.&lt;/li&gt; 
 &lt;li&gt;Generate each &lt;code&gt;domain:&lt;/code&gt; line into a &lt;a href="https://github.com/v2fly/v2ray-core/raw/master/app/router/config.proto#L21"&gt;sub-domain routing rule&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Generate each &lt;code&gt;keyword:&lt;/code&gt; line into a &lt;a href="https://github.com/v2fly/v2ray-core/raw/master/app/router/config.proto#L17"&gt;plain domain routing rule&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Generate each &lt;code&gt;regexp:&lt;/code&gt; line into a &lt;a href="https://github.com/v2fly/v2ray-core/raw/master/app/router/config.proto#L19"&gt;regex domain routing rule&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Generate each &lt;code&gt;full:&lt;/code&gt; line into a &lt;a href="https://github.com/v2fly/v2ray-core/raw/master/app/router/config.proto#L23"&gt;full domain routing rule&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;How to organize domains&lt;/h2&gt; 
&lt;h3&gt;File name&lt;/h3&gt; 
&lt;p&gt;Theoretically any string can be used as the name, as long as it is a valid file name. In practice, we prefer names for determinic group of domains, such as the owner (usually a company name) of the domains, e.g., "google", "netflix". Names with unclear scope are generally unrecommended, such as "evil", or "local".&lt;/p&gt; 
&lt;h3&gt;Attributes&lt;/h3&gt; 
&lt;p&gt;Attribute is useful for sub-group of domains, especially for filtering purpose. For example, the list of &lt;code&gt;google&lt;/code&gt; domains may contains its main domains, as well as domains that serve ads. The ads domains may be marked by attribute &lt;code&gt;@ads&lt;/code&gt;, and can be used as &lt;code&gt;geosite:google@ads&lt;/code&gt; in V2Ray routing.&lt;/p&gt; 
&lt;h2&gt;Contribution guideline&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fork this repo, make modifications to your own repo, file a PR.&lt;/li&gt; 
 &lt;li&gt;Please begin with small size PRs, say modification in a single file.&lt;/li&gt; 
 &lt;li&gt;A PR must be reviewed and approved by another member.&lt;/li&gt; 
 &lt;li&gt;A script will verify your pull request to test whether your PR is correct or not every time you update the PR. Only the PR which passes the test will be merged. Please go to the Action label to get detailed information if you didn't pass it. We also provide the file which has been generated to make you test.&lt;/li&gt; 
 &lt;li&gt;After a few successful PRs, you may apply for manager access to this repository.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>caddyserver/caddy</title>
      <link>https://github.com/caddyserver/caddy</link>
      <description>&lt;p&gt;Fast and extensible multi-platform HTTP/1-2-3 web server with automatic HTTPS&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://caddyserver.com"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/1128849/210187358-e2c39003-9a5e-4dd5-a783-6deb6483ee72.svg" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://user-images.githubusercontent.com/1128849/210187356-dfb7f1c5-ac2e-43aa-bb23-fc014280ae1f.svg" /&gt; 
   &lt;img src="https://user-images.githubusercontent.com/1128849/210187356-dfb7f1c5-ac2e-43aa-bb23-fc014280ae1f.svg?sanitize=true" alt="Caddy" width="550" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;br /&gt; &lt;/p&gt;
&lt;h3 align="center"&gt;a &lt;a href="https://zerossl.com"&gt;&lt;img src="https://user-images.githubusercontent.com/55066419/208327323-2770dc16-ec09-43a0-9035-c5b872c2ad7f.svg?sanitize=true" height="28" style="vertical-align: -7.7px" valign="middle" /&gt;&lt;/a&gt; project&lt;/h3&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3 align="center"&gt;Every site on HTTPS&lt;/h3&gt; 
&lt;p align="center"&gt;Caddy is an extensible server platform that uses TLS by default.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/caddyserver/caddy/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/caddyserver/caddy/actions/workflows/ci.yml/badge.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/7141"&gt;&lt;img src="https://www.bestpractices.dev/projects/7141/badge" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/caddyserver/caddy/v2"&gt;&lt;img src="https://img.shields.io/badge/godoc-reference-%23007d9c.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://x.com/caddyserver" title="@caddyserver on Twitter"&gt;&lt;img src="https://img.shields.io/twitter/follow/caddyserver" alt="@caddyserver on Twitter" /&gt;&lt;/a&gt; &lt;a href="https://caddy.community" title="Caddy Forum"&gt;&lt;img src="https://img.shields.io/badge/community-forum-ff69b4.svg?sanitize=true" alt="Caddy Forum" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://sourcegraph.com/github.com/caddyserver/caddy?badge" title="Caddy on Sourcegraph"&gt;&lt;img src="https://sourcegraph.com/github.com/caddyserver/caddy/-/badge.svg?sanitize=true" alt="Caddy on Sourcegraph" /&gt;&lt;/a&gt; &lt;a href="https://cloudsmith.io/~caddy/repos/"&gt;&lt;img src="https://img.shields.io/badge/OSS%20hosting%20by-cloudsmith-blue?logo=cloudsmith" alt="Cloudsmith" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/caddyserver/caddy/releases"&gt;Releases&lt;/a&gt; ¬∑ &lt;a href="https://caddyserver.com/docs/"&gt;Documentation&lt;/a&gt; ¬∑ &lt;a href="https://caddy.community"&gt;Get Help&lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;Menu&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/caddyserver/caddy/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/caddyserver/caddy/master/#install"&gt;Install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/caddyserver/caddy/master/#build-from-source"&gt;Build from source&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/caddyserver/caddy/master/#for-development"&gt;For development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/caddyserver/caddy/master/#with-version-information-andor-plugins"&gt;With version information and/or plugins&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/caddyserver/caddy/master/#quick-start"&gt;Quick start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/caddyserver/caddy/master/#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/caddyserver/caddy/master/#full-documentation"&gt;Full documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/caddyserver/caddy/master/#getting-help"&gt;Getting help&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/caddyserver/caddy/master/#about"&gt;About&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;b&gt;Powered by&lt;/b&gt; &lt;br /&gt; &lt;a href="https://github.com/caddyserver/certmagic"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/55066419/206946718-740b6371-3df3-4d72-a822-47e4c48af999.png" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://user-images.githubusercontent.com/1128849/49704830-49d37200-fbd5-11e8-8385-767e0cd033c3.png" /&gt; 
   &lt;img src="https://user-images.githubusercontent.com/1128849/49704830-49d37200-fbd5-11e8-8385-767e0cd033c3.png" alt="CertMagic" width="250" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://caddyserver.com/features"&gt;Features&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Easy configuration&lt;/strong&gt; with the &lt;a href="https://caddyserver.com/docs/caddyfile"&gt;Caddyfile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Powerful configuration&lt;/strong&gt; with its &lt;a href="https://caddyserver.com/docs/json/"&gt;native JSON config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic configuration&lt;/strong&gt; with the &lt;a href="https://caddyserver.com/docs/api"&gt;JSON API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://caddyserver.com/docs/config-adapters"&gt;&lt;strong&gt;Config adapters&lt;/strong&gt;&lt;/a&gt; if you don't like JSON&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic HTTPS&lt;/strong&gt; by default 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://zerossl.com"&gt;ZeroSSL&lt;/a&gt; and &lt;a href="https://letsencrypt.org"&gt;Let's Encrypt&lt;/a&gt; for public names&lt;/li&gt; 
   &lt;li&gt;Fully-managed local CA for internal names &amp;amp; IPs&lt;/li&gt; 
   &lt;li&gt;Can coordinate with other Caddy instances in a cluster&lt;/li&gt; 
   &lt;li&gt;Multi-issuer fallback&lt;/li&gt; 
   &lt;li&gt;Encrypted ClientHello (ECH) support&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Stays up when other servers go down&lt;/strong&gt; due to TLS/OCSP/certificate-related issues&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Production-ready&lt;/strong&gt; after serving trillions of requests and managing millions of TLS certificates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scales to hundreds of thousands of sites&lt;/strong&gt; as proven in production&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP/1.1, HTTP/2, and HTTP/3&lt;/strong&gt; all supported by default&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Highly extensible&lt;/strong&gt; &lt;a href="https://caddyserver.com/docs/architecture"&gt;modular architecture&lt;/a&gt; lets Caddy do anything without bloat&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Runs anywhere&lt;/strong&gt; with &lt;strong&gt;no external dependencies&lt;/strong&gt; (not even libc)&lt;/li&gt; 
 &lt;li&gt;Written in Go, a language with higher &lt;strong&gt;memory safety guarantees&lt;/strong&gt; than other servers&lt;/li&gt; 
 &lt;li&gt;Actually &lt;strong&gt;fun to use&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;So much more to &lt;a href="https://caddyserver.com/features"&gt;discover&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;The simplest, cross-platform way to get started is to download Caddy from &lt;a href="https://github.com/caddyserver/caddy/releases"&gt;GitHub Releases&lt;/a&gt; and place the executable file in your PATH.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://caddyserver.com/docs/install"&gt;our online documentation&lt;/a&gt; for other install instructions.&lt;/p&gt; 
&lt;h2&gt;Build from source&lt;/h2&gt; 
&lt;p&gt;Requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/dl/"&gt;Go 1.25.0 or newer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;For development&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; These steps &lt;a href="https://github.com/golang/go/issues/29228"&gt;will not embed proper version information&lt;/a&gt;. For that, please follow the instructions in the next section.&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ git clone "https://github.com/caddyserver/caddy.git"
$ cd caddy/cmd/caddy/
$ go build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you run Caddy, it may try to bind to low ports unless otherwise specified in your config. If your OS requires elevated privileges for this, you will need to give your new binary permission to do so. On Linux, this can be done easily with: &lt;code&gt;sudo setcap cap_net_bind_service=+ep ./caddy&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If you prefer to use &lt;code&gt;go run&lt;/code&gt; which only creates temporary binaries, you can still do this with the included &lt;code&gt;setcap.sh&lt;/code&gt; like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ go run -exec ./setcap.sh main.go
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you don't want to type your password for &lt;code&gt;setcap&lt;/code&gt;, use &lt;code&gt;sudo visudo&lt;/code&gt; to edit your sudoers file and allow your user account to run that command without a password, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;username ALL=(ALL:ALL) NOPASSWD: /usr/sbin/setcap
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;replacing &lt;code&gt;username&lt;/code&gt; with your actual username. Please be careful and only do this if you know what you are doing! We are only qualified to document how to use Caddy, not Go tooling or your computer, and we are providing these instructions for convenience only; please learn how to use your own computer at your own risk and make any needful adjustments.&lt;/p&gt; 
&lt;h3&gt;With version information and/or plugins&lt;/h3&gt; 
&lt;p&gt;Using &lt;a href="https://github.com/caddyserver/xcaddy"&gt;our builder tool, &lt;code&gt;xcaddy&lt;/code&gt;&lt;/a&gt;...&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ xcaddy build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;...the following steps are automated:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a new folder: &lt;code&gt;mkdir caddy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Change into it: &lt;code&gt;cd caddy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Copy &lt;a href="https://github.com/caddyserver/caddy/raw/master/cmd/caddy/main.go"&gt;Caddy's main.go&lt;/a&gt; into the empty folder. Add imports for any custom plugins you want to add.&lt;/li&gt; 
 &lt;li&gt;Initialize a Go module: &lt;code&gt;go mod init caddy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;(Optional) Pin Caddy version: &lt;code&gt;go get github.com/caddyserver/caddy/v2@version&lt;/code&gt; replacing &lt;code&gt;version&lt;/code&gt; with a git tag, commit, or branch name.&lt;/li&gt; 
 &lt;li&gt;(Optional) Add plugins by adding their import: &lt;code&gt;_ "import/path/here"&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Compile: &lt;code&gt;go build -tags=nobadger,nomysql,nopgx&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://caddyserver.com/docs/"&gt;Caddy website&lt;/a&gt; has documentation that includes tutorials, quick-start guides, reference, and more.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We recommend that all users -- regardless of experience level -- do our &lt;a href="https://caddyserver.com/docs/getting-started"&gt;Getting Started&lt;/a&gt; guide to become familiar with using Caddy.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you've only got a minute, &lt;a href="https://caddyserver.com/docs/quick-starts"&gt;the website has several quick-start tutorials&lt;/a&gt; to choose from! However, after finishing a quick-start tutorial, please read more documentation to understand how the software works. üôÇ&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Caddy is most often used as an HTTPS server, but it is suitable for any long-running Go program. First and foremost, it is a platform to run Go applications. Caddy "apps" are just Go programs that are implemented as Caddy modules. Two apps -- &lt;code&gt;tls&lt;/code&gt; and &lt;code&gt;http&lt;/code&gt; -- ship standard with Caddy.&lt;/p&gt; 
&lt;p&gt;Caddy apps instantly benefit from &lt;a href="https://caddyserver.com/docs/json/"&gt;automated documentation&lt;/a&gt;, graceful on-line &lt;a href="https://caddyserver.com/docs/api"&gt;config changes via API&lt;/a&gt;, and unification with other Caddy apps.&lt;/p&gt; 
&lt;p&gt;Although &lt;a href="https://caddyserver.com/docs/json/"&gt;JSON&lt;/a&gt; is Caddy's native config language, Caddy can accept input from &lt;a href="https://caddyserver.com/docs/config-adapters"&gt;config adapters&lt;/a&gt; which can essentially convert any config format of your choice into JSON: Caddyfile, JSON 5, YAML, TOML, NGINX config, and more.&lt;/p&gt; 
&lt;p&gt;The primary way to configure Caddy is through &lt;a href="https://caddyserver.com/docs/api"&gt;its API&lt;/a&gt;, but if you prefer config files, the &lt;a href="https://caddyserver.com/docs/command-line"&gt;command-line interface&lt;/a&gt; supports those too.&lt;/p&gt; 
&lt;p&gt;Caddy exposes an unprecedented level of control compared to any web server in existence. In Caddy, you are usually setting the actual values of the initialized types in memory that power everything from your HTTP handlers and TLS handshakes to your storage medium. Caddy is also ridiculously extensible, with a powerful plugin system that makes vast improvements over other web servers.&lt;/p&gt; 
&lt;p&gt;To wield the power of this design, you need to know how the config document is structured. Please see &lt;a href="https://caddyserver.com/docs/"&gt;our documentation site&lt;/a&gt; for details about &lt;a href="https://caddyserver.com/docs/json/"&gt;Caddy's config structure&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Nearly all of Caddy's configuration is contained in a single config document, rather than being scattered across CLI flags and env variables and a configuration file as with other web servers. This makes managing your server config more straightforward and reduces hidden variables/factors.&lt;/p&gt; 
&lt;h2&gt;Full documentation&lt;/h2&gt; 
&lt;p&gt;Our website has complete documentation:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://caddyserver.com/docs/"&gt;https://caddyserver.com/docs/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The docs are also open source. You can contribute to them here: &lt;a href="https://github.com/caddyserver/website"&gt;https://github.com/caddyserver/website&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting help&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;We advise companies using Caddy to secure a support contract through &lt;a href="https://www.ardanlabs.com"&gt;Ardan Labs&lt;/a&gt; before help is needed.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;A &lt;a href="https://github.com/sponsors/mholt"&gt;sponsorship&lt;/a&gt; goes a long way! We can offer private help to sponsors. If Caddy is benefitting your company, please consider a sponsorship. This not only helps fund full-time work to ensure the longevity of the project, it provides your company the resources, support, and discounts you need; along with being a great look for your company to your customers and potential customers!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Individuals can exchange help for free on our community forum at &lt;a href="https://caddy.community"&gt;https://caddy.community&lt;/a&gt;. Remember that people give help out of their spare time and good will. The best way to get help is to give it first!&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please use our &lt;a href="https://github.com/caddyserver/caddy/issues"&gt;issue tracker&lt;/a&gt; only for bug reports and feature requests, i.e. actionable development items (support questions will usually be referred to the forums).&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Matthew Holt began developing Caddy in 2014 while studying computer science at Brigham Young University. (The name "Caddy" was chosen because this software helps with the tedious, mundane tasks of serving the Web, and is also a single place for multiple things to be organized together.) It soon became the first web server to use HTTPS automatically and by default, and now has hundreds of contributors and has served trillions of HTTPS requests.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The name "Caddy" is trademarked.&lt;/strong&gt; The name of the software is "Caddy", not "Caddy Server" or "CaddyServer". Please call it "Caddy" or, if you wish to clarify, "the Caddy web server". Caddy is a registered trademark of Stack Holdings GmbH.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Project on X: &lt;a href="https://x.com/caddyserver"&gt;@caddyserver&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Author on X: &lt;a href="https://x.com/mholt6"&gt;@mholt6&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Caddy is a project of &lt;a href="https://zerossl.com"&gt;ZeroSSL&lt;/a&gt;, a Stack Holdings company.&lt;/p&gt; 
&lt;p&gt;Debian package repository hosting is graciously provided by &lt;a href="https://cloudsmith.com"&gt;Cloudsmith&lt;/a&gt;. Cloudsmith is the only fully hosted, cloud-native, universal package management solution, that enables your organization to create, store and share packages in any format, to any place, with total confidence.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>krillinai/KrillinAI</title>
      <link>https://github.com/krillinai/KrillinAI</link>
      <description>&lt;p&gt;Video translation and dubbing tool powered by LLMs. The video translator offers 100 language translations and one-click full-process deployment. The video translation output is optimized for platforms like YouTubeÔºåTikTok. AIËßÜÈ¢ëÁøªËØëÈÖçÈü≥Â∑•ÂÖ∑Ôºå100ÁßçËØ≠Ë®ÄÂèåÂêëÁøªËØëÔºå‰∏ÄÈîÆÈÉ®ÁΩ≤ÂÖ®ÊµÅÁ®ãÔºåÂèØ‰ª•ÁîüÊäñÈü≥ÔºåÂ∞èÁ∫¢‰π¶ÔºåÂìîÂì©ÂìîÂì©ÔºåËßÜÈ¢ëÂè∑ÔºåTikTokÔºåYoutubeÁ≠âÂΩ¢ÊÄÅÁöÑÂÜÖÂÆπÊàêÈÄÇÈÖç&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/images/logo.jpg" alt="KrillinAI" height="90" /&gt; 
 &lt;h1&gt;Minimalist AI Video Translation and Dubbing Tool&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/13360" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13360" alt="KrillinAI%2FKrillinAI | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/README.md"&gt;English&lt;/a&gt;ÔΩú&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/zh/README.md"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;ÔΩú&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/jp/README.md"&gt;Êó•Êú¨Ë™û&lt;/a&gt;ÔΩú&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/kr/README.md"&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt;ÔΩú&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/vi/README.md"&gt;Ti·∫øng Vi·ªát&lt;/a&gt;ÔΩú&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/fr/README.md"&gt;Fran√ßais&lt;/a&gt;ÔΩú&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/de/README.md"&gt;Deutsch&lt;/a&gt;ÔΩú&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/es/README.md"&gt;Espa√±ol&lt;/a&gt;ÔΩú&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/pt/README.md"&gt;Portugu√™s&lt;/a&gt;ÔΩú&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/rus/README.md"&gt;–†—É—Å—Å–∫–∏–π&lt;/a&gt;ÔΩú&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/ar/README.md"&gt;ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://x.com/KrillinAI"&gt;&lt;img src="https://img.shields.io/badge/Twitter-KrillinAI-orange?logo=twitter" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://jq.qq.com/?_wv=1027&amp;amp;k=754069680"&gt;&lt;img src="https://img.shields.io/badge/QQ%20%E7%BE%A4-754069680-green?logo=tencent-qq" alt="QQ Áæ§" /&gt;&lt;/a&gt; &lt;a href="https://space.bilibili.com/242124650"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?label=Bilibili&amp;amp;query=%24.data.follower&amp;amp;suffix=%E7%B2%89%E4%B8%9D&amp;amp;url=https%3A%2F%2Fapi.bilibili.com%2Fx%2Frelation%2Fstat%3Fvmid%3D242124650&amp;amp;logo=bilibili&amp;amp;color=00A1D6&amp;amp;labelColor=FE7398&amp;amp;logoColor=FFFFFF" alt="Bilibili" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/krillinai/KrillinAI"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Project Introduction (&lt;a href="https://www.klic.studio/"&gt;Try the online version now!&lt;/a&gt;)&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/#-quick-start"&gt;&lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;KrillinAI is a versatile audio and video localization and enhancement solution developed by Krillin AI. This minimalist yet powerful tool integrates video translation, dubbing, and voice cloning, supporting both landscape and portrait formats to ensure perfect presentation on all major platforms (Bilibili, Xiaohongshu, Douyin, WeChat Video, Kuaishou, YouTube, TikTok, etc.). With an end-to-end workflow, you can transform raw materials into beautifully ready-to-use cross-platform content with just a few clicks.&lt;/p&gt; 
&lt;h2&gt;Key Features and Functions:&lt;/h2&gt; 
&lt;p&gt;üéØ &lt;strong&gt;One-click Start&lt;/strong&gt;: No complex environment configuration required, automatic dependency installation, ready to use immediately, with a new desktop version for easier access!&lt;/p&gt; 
&lt;p&gt;üì• &lt;strong&gt;Video Acquisition&lt;/strong&gt;: Supports yt-dlp downloads or local file uploads&lt;/p&gt; 
&lt;p&gt;üìú &lt;strong&gt;Accurate Recognition&lt;/strong&gt;: High-accuracy speech recognition based on Whisper&lt;/p&gt; 
&lt;p&gt;üß† &lt;strong&gt;Intelligent Segmentation&lt;/strong&gt;: Subtitle segmentation and alignment using LLM&lt;/p&gt; 
&lt;p&gt;üîÑ &lt;strong&gt;Terminology Replacement&lt;/strong&gt;: One-click replacement of professional vocabulary&lt;/p&gt; 
&lt;p&gt;üåç &lt;strong&gt;Professional Translation&lt;/strong&gt;: LLM translation with context to maintain natural semantics&lt;/p&gt; 
&lt;p&gt;üéôÔ∏è &lt;strong&gt;Voice Cloning&lt;/strong&gt;: Offers selected voice tones from CosyVoice or custom voice cloning&lt;/p&gt; 
&lt;p&gt;üé¨ &lt;strong&gt;Video Composition&lt;/strong&gt;: Automatically processes landscape and portrait videos and subtitle layout&lt;/p&gt; 
&lt;p&gt;üíª &lt;strong&gt;Cross-Platform&lt;/strong&gt;: Supports Windows, Linux, macOS, providing both desktop and server versions&lt;/p&gt; 
&lt;h2&gt;Effect Demonstration&lt;/h2&gt; 
&lt;p&gt;The image below shows the effect of the subtitle file generated after importing a 46-minute local video and executing it with one click, without any manual adjustments. There are no omissions or overlaps, the segmentation is natural, and the translation quality is very high. &lt;img src="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/images/alignment.png" alt="Alignment Effect" /&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="33%"&gt; &lt;h3&gt;Subtitle Translation&lt;/h3&gt; 
    &lt;hr /&gt; &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/bba1ac0a-fe6b-4947-b58d-ba99306d0339"&gt;https://github.com/user-attachments/assets/bba1ac0a-fe6b-4947-b58d-ba99306d0339&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td width="33%"&gt; &lt;h3&gt;Dubbing&lt;/h3&gt; 
    &lt;hr /&gt; &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/0b32fad3-c3ad-4b6a-abf0-0865f0dd2385"&gt;https://github.com/user-attachments/assets/0b32fad3-c3ad-4b6a-abf0-0865f0dd2385&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td width="33%"&gt; &lt;h3&gt;Portrait Mode&lt;/h3&gt; 
    &lt;hr /&gt; &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/c2c7b528-0ef8-4ba9-b8ac-f9f92f6d4e71"&gt;https://github.com/user-attachments/assets/c2c7b528-0ef8-4ba9-b8ac-f9f92f6d4e71&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;üîç Supported Speech Recognition Services&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;All local models in the table below support automatic installation of executable files + model files; you just need to choose, and Klic will prepare everything for you.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service Source&lt;/th&gt; 
   &lt;th&gt;Supported Platforms&lt;/th&gt; 
   &lt;th&gt;Model Options&lt;/th&gt; 
   &lt;th&gt;Local/Cloud&lt;/th&gt; 
   &lt;th&gt;Remarks&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;OpenAI Whisper&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;All Platforms&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Cloud&lt;/td&gt; 
   &lt;td&gt;Fast speed and good effect&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FasterWhisper&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Windows/Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;tiny&lt;/code&gt;/&lt;code&gt;medium&lt;/code&gt;/&lt;code&gt;large-v2&lt;/code&gt; (recommended medium+)&lt;/td&gt; 
   &lt;td&gt;Local&lt;/td&gt; 
   &lt;td&gt;Faster speed, no cloud service cost&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;WhisperKit&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;macOS (M-series only)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;large-v2&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Local&lt;/td&gt; 
   &lt;td&gt;Native optimization for Apple chips&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;WhisperCpp&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;All Platforms&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;large-v2&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Local&lt;/td&gt; 
   &lt;td&gt;Supports all platforms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Alibaba Cloud ASR&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;All Platforms&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Cloud&lt;/td&gt; 
   &lt;td&gt;Avoids network issues in mainland China&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üöÄ Large Language Model Support&lt;/h2&gt; 
&lt;p&gt;‚úÖ Compatible with all cloud/local large language model services that comply with &lt;strong&gt;OpenAI API specifications&lt;/strong&gt;, including but not limited to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenAI&lt;/li&gt; 
 &lt;li&gt;Gemini&lt;/li&gt; 
 &lt;li&gt;DeepSeek&lt;/li&gt; 
 &lt;li&gt;Tongyi Qianwen&lt;/li&gt; 
 &lt;li&gt;Locally deployed open-source models&lt;/li&gt; 
 &lt;li&gt;Other API services compatible with OpenAI format&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üé§ TTS Text-to-Speech Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Alibaba Cloud Voice Service&lt;/li&gt; 
 &lt;li&gt;OpenAI TTS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Language Support&lt;/h2&gt; 
&lt;p&gt;Input languages supported: Chinese, English, Japanese, German, Turkish, Korean, Russian, Malay (continuously increasing)&lt;/p&gt; 
&lt;p&gt;Translation languages supported: English, Chinese, Russian, Spanish, French, and 101 other languages&lt;/p&gt; 
&lt;h2&gt;Interface Preview&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/images/ui_desktop_light.png" alt="Interface Preview" /&gt; &lt;img src="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/images/ui_desktop_dark.png" alt="Interface Preview" /&gt;&lt;/p&gt; 
&lt;h2&gt;üöÄ Quick Start&lt;/h2&gt; 
&lt;p&gt;You can ask questions on the &lt;a href="https://deepwiki.com/krillinai/KrillinAI"&gt;Deepwiki of KrillinAI&lt;/a&gt;. It indexes the files in the repository, so you can find answers quickly.&lt;/p&gt; 
&lt;h3&gt;Basic Steps&lt;/h3&gt; 
&lt;p&gt;First, download the executable file that matches your device system from the &lt;a href="https://github.com/KrillinAI/KrillinAI/releases"&gt;Release&lt;/a&gt;, then follow the tutorial below to choose between the desktop version or non-desktop version. Place the software download in an empty folder, as running it will generate some directories, and keeping it in an empty folder will make management easier.&lt;/p&gt; 
&lt;p&gt;„ÄêIf it is the desktop version, i.e., the release file with "desktop," see here„Äë &lt;em&gt;The desktop version is newly released to address the issues of new users struggling to edit configuration files correctly, and there are some bugs that are continuously being updated.&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Double-click the file to start using it (the desktop version also requires configuration within the software)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;„ÄêIf it is the non-desktop version, i.e., the release file without "desktop," see here„Äë &lt;em&gt;The non-desktop version is the initial version, which has a more complex configuration but is stable in functionality and suitable for server deployment, as it provides a UI in a web format.&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a &lt;code&gt;config&lt;/code&gt; folder within the folder, then create a &lt;code&gt;config.toml&lt;/code&gt; file in the &lt;code&gt;config&lt;/code&gt; folder. Copy the contents of the &lt;code&gt;config-example.toml&lt;/code&gt; file from the source code's &lt;code&gt;config&lt;/code&gt; directory into &lt;code&gt;config.toml&lt;/code&gt;, and fill in your configuration information according to the comments.&lt;/li&gt; 
 &lt;li&gt;Double-click or execute the executable file in the terminal to start the service&lt;/li&gt; 
 &lt;li&gt;Open your browser and enter &lt;code&gt;http://127.0.0.1:8888&lt;/code&gt; to start using it (replace 8888 with the port you specified in the configuration file)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;To: macOS Users&lt;/h3&gt; 
&lt;p&gt;„ÄêIf it is the desktop version, i.e., the release file with "desktop," see here„Äë Due to signing issues, the desktop version currently cannot be double-clicked to run or installed via dmg; you need to manually trust the application. The method is as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open the terminal in the directory where the executable file (assuming the file name is KrillinAI_1.0.0_desktop_macOS_arm64) is located&lt;/li&gt; 
 &lt;li&gt;Execute the following commands in order:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;sudo xattr -cr ./KrillinAI_1.0.0_desktop_macOS_arm64
sudo chmod +x ./KrillinAI_1.0.0_desktop_macOS_arm64 
./KrillinAI_1.0.0_desktop_macOS_arm64
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;„ÄêIf it is the non-desktop version, i.e., the release file without "desktop," see here„Äë This software is not signed, so when running on macOS, after completing the file configuration in the "Basic Steps," you also need to manually trust the application. The method is as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Open the terminal in the directory where the executable file (assuming the file name is KrillinAI_1.0.0_macOS_arm64) is located&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Execute the following commands in order:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo xattr -rd com.apple.quarantine ./KrillinAI_1.0.0_macOS_arm64
 sudo chmod +x ./KrillinAI_1.0.0_macOS_arm64
 ./KrillinAI_1.0.0_macOS_arm64
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will start the service&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Docker Deployment&lt;/h3&gt; 
&lt;p&gt;This project supports Docker deployment; please refer to the &lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docker.md"&gt;Docker Deployment Instructions&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Based on the provided configuration file, here is the updated "Configuration Help (Must Read)" section for your README file:&lt;/p&gt; 
&lt;h3&gt;Configuration Help (Must Read)&lt;/h3&gt; 
&lt;p&gt;The configuration file is divided into several sections: &lt;code&gt;[app]&lt;/code&gt;, &lt;code&gt;[server]&lt;/code&gt;, &lt;code&gt;[llm]&lt;/code&gt;, &lt;code&gt;[transcribe]&lt;/code&gt;, and &lt;code&gt;[tts]&lt;/code&gt;. A task is composed of speech recognition (&lt;code&gt;transcribe&lt;/code&gt;) + large model translation (&lt;code&gt;llm&lt;/code&gt;) + optional voice services (&lt;code&gt;tts&lt;/code&gt;). Understanding this will help you better grasp the configuration file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Easiest and Quickest Configuration:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For Subtitle Translation Only:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In the &lt;code&gt;[transcribe]&lt;/code&gt; section, set &lt;code&gt;provider.name&lt;/code&gt; to &lt;code&gt;openai&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;You will then only need to fill in your OpenAI API key in the &lt;code&gt;[llm]&lt;/code&gt; block to start performing subtitle translations. The &lt;code&gt;app.proxy&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, and &lt;code&gt;openai.base_url&lt;/code&gt; can be filled in as needed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Balanced Cost, Speed, and Quality (Using Local Speech Recognition):&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In the &lt;code&gt;[transcribe]&lt;/code&gt; section, set &lt;code&gt;provider.name&lt;/code&gt; to &lt;code&gt;fasterwhisper&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Set &lt;code&gt;transcribe.fasterwhisper.model&lt;/code&gt; to &lt;code&gt;large-v2&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Fill in your large language model configuration in the &lt;code&gt;[llm]&lt;/code&gt; block.&lt;/li&gt; 
 &lt;li&gt;The required local model will be automatically downloaded and installed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Text-to-Speech (TTS) Configuration (Optional):&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;TTS configuration is optional.&lt;/li&gt; 
 &lt;li&gt;First, set the &lt;code&gt;provider.name&lt;/code&gt; under the &lt;code&gt;[tts]&lt;/code&gt; section (e.g., &lt;code&gt;aliyun&lt;/code&gt; or &lt;code&gt;openai&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Then, fill in the corresponding configuration block for the selected provider. For example, if you choose &lt;code&gt;aliyun&lt;/code&gt;, you must fill in the &lt;code&gt;[tts.aliyun]&lt;/code&gt; section.&lt;/li&gt; 
 &lt;li&gt;Voice codes in the user interface should be chosen based on the selected provider's documentation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you plan to use the voice cloning feature, you must select &lt;code&gt;aliyun&lt;/code&gt; as the TTS provider.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Alibaba Cloud Configuration:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For details on obtaining the necessary &lt;code&gt;AccessKey&lt;/code&gt;, &lt;code&gt;Bucket&lt;/code&gt;, and &lt;code&gt;AppKey&lt;/code&gt; for Alibaba Cloud services, please refer to the &lt;a href="https://www.google.com/search?q=./aliyun.md"&gt;Alibaba Cloud Configuration Instructions&lt;/a&gt;. The repeated fields for AccessKey, etc., are designed to maintain a clear configuration structure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;p&gt;Please visit &lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/faq.md"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contribution Guidelines&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Do not submit useless files, such as .vscode, .idea, etc.; please use .gitignore to filter them out.&lt;/li&gt; 
 &lt;li&gt;Do not submit config.toml; instead, submit config-example.toml.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Join our QQ group for questions: 754069680&lt;/li&gt; 
 &lt;li&gt;Follow our social media accounts, &lt;a href="https://space.bilibili.com/242124650"&gt;Bilibili&lt;/a&gt;, where we share quality content in the AI technology field every day.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#KrillinAI/KrillinAI&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=KrillinAI/KrillinAI&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AlistGo/alist</title>
      <link>https://github.com/AlistGo/alist</link>
      <description>&lt;p&gt;üóÇÔ∏èA file list/WebDAV program that supports multiple storages, powered by Gin and Solidjs. / ‰∏Ä‰∏™ÊîØÊåÅÂ§öÂ≠òÂÇ®ÁöÑÊñá‰ª∂ÂàóË°®/WebDAVÁ®ãÂ∫èÔºå‰ΩøÁî® Gin Âíå Solidjs„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://alistgo.com"&gt;&lt;img width="100px" alt="logo" src="https://cdn.jsdelivr.net/gh/alist-org/logo@main/logo.svg?sanitize=true" /&gt;&lt;/a&gt; 
 &lt;p&gt;&lt;em&gt;üóÇÔ∏èA file list program that supports multiple storages, powered by Gin and Solidjs.&lt;/em&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;a href="https://goreportcard.com/report/github.com/alist-org/alist/v3"&gt; &lt;img src="https://goreportcard.com/badge/github.com/alist-org/alist/v3" alt="latest version" /&gt; &lt;/a&gt; 
  &lt;a href="https://github.com/alist-org/alist/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/Xhofe/alist" alt="License" /&gt; &lt;/a&gt; 
  &lt;a href="https://github.com/alist-org/alist/actions?query=workflow%3ABuild"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/Xhofe/alist/build.yml?branch=main" alt="Build status" /&gt; &lt;/a&gt; 
  &lt;a href="https://github.com/alist-org/alist/releases"&gt; &lt;img src="https://img.shields.io/github/release/Xhofe/alist" alt="latest version" /&gt; &lt;/a&gt; 
  &lt;a title="Crowdin" target="_blank" href="https://crwd.in/alist"&gt; &lt;img src="https://badges.crowdin.net/alist/localized.svg?sanitize=true" /&gt; &lt;/a&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;a href="https://github.com/alist-org/alist/discussions"&gt; &lt;img src="https://img.shields.io/github/discussions/Xhofe/alist?color=%23ED8936" alt="discussions" /&gt; &lt;/a&gt; 
  &lt;a href="https://discord.gg/F4ymsH4xv2"&gt; &lt;img src="https://img.shields.io/discord/1018870125102895134?logo=discord" alt="discussions" /&gt; &lt;/a&gt; 
  &lt;a href="https://github.com/alist-org/alist/releases"&gt; &lt;img src="https://img.shields.io/github/downloads/Xhofe/alist/total?color=%239F7AEA&amp;amp;logo=github" alt="Downloads" /&gt; &lt;/a&gt; 
  &lt;a href="https://hub.docker.com/r/xhofe/alist"&gt; &lt;img src="https://img.shields.io/docker/pulls/xhofe/alist?color=%2348BB78&amp;amp;logo=docker&amp;amp;label=pulls" alt="Downloads" /&gt; &lt;/a&gt; 
  &lt;a href="https://alistgo.com/guide/sponsor.html"&gt; &lt;img src="https://img.shields.io/badge/%24-sponsor-F87171.svg?sanitize=true" alt="sponsor" /&gt; &lt;/a&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/AlistGo/alist/main/README_cn.md"&gt;‰∏≠Êñá&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/AlistGo/alist/main/README_ja.md"&gt;Êó•Êú¨Ë™û&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/AlistGo/alist/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/AlistGo/alist/main/CODE_OF_CONDUCT.md"&gt;CODE_OF_CONDUCT&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Multiple storages 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Local storage&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.alipan.com/"&gt;Aliyundrive&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; OneDrive / Sharepoint (&lt;a href="https://www.office.com/"&gt;global&lt;/a&gt;, &lt;a href="https://portal.partner.microsoftonline.cn"&gt;cn&lt;/a&gt;,de,us)&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://cloud.189.cn"&gt;189cloud&lt;/a&gt; (Personal, Family)&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://drive.google.com/"&gt;GoogleDrive&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.123pan.com/"&gt;123pan&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; FTP / SFTP&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.mypikpak.com/"&gt;PikPak&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://aws.amazon.com/s3/"&gt;S3&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://seafile.com/"&gt;Seafile&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.upyun.com/products/file-storage"&gt;UPYUN Storage Service&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; WebDav(Support OneDrive/SharePoint without API)&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Teambition(&lt;a href="https://www.teambition.com/"&gt;China&lt;/a&gt;,&lt;a href="https://us.teambition.com/"&gt;International&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.mediafire.com"&gt;MediaFire&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.mediatrack.cn/"&gt;Mediatrack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://proton.me/drive"&gt;ProtonDrive&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://yun.139.com/"&gt;139yun&lt;/a&gt; (Personal, Family, Group)&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://disk.yandex.com/"&gt;YandexDisk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="http://pan.baidu.com/"&gt;BaiduNetdisk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.terabox.com/main"&gt;Terabox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://drive.uc.cn"&gt;UC&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://pan.quark.cn"&gt;Quark&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://pan.xunlei.com"&gt;Thunder&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.lanzou.com/"&gt;Lanzou&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.ilanzou.com/"&gt;ILanzou&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.alipan.com/"&gt;Aliyundrive share&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://photos.google.com/"&gt;Google photo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://mega.nz"&gt;Mega.nz&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://photo.baidu.com/"&gt;Baidu photo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; SMB&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://115.com/"&gt;115&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Cloudreve&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.dropbox.com/"&gt;Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.feijipan.com/"&gt;FeijiPan&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.dogecloud.com/product/oss"&gt;dogecloud&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://azure.microsoft.com/products/storage/blobs"&gt;Azure Blob Storage&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Easy to deploy and out-of-the-box&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; File preview (PDF, markdown, code, plain text, ...)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Image preview in gallery mode&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Video and audio preview, support lyrics and subtitles&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Office documents preview (docx, pptx, xlsx, ...)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;code&gt;README.md&lt;/code&gt; preview rendering&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; File permalink copy and direct file download&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Dark mode&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; I18n&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Protected routes (password protection and authentication)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; WebDav (see &lt;a href="https://alistgo.com/guide/webdav.html"&gt;https://alistgo.com/guide/webdav.html&lt;/a&gt; for details)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://hub.docker.com/r/xhofe/alist"&gt;Docker Deploy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Cloudflare Workers proxy&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; File/Folder package download&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Web upload(Can allow visitors to upload), delete, mkdir, rename, move and copy&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Offline download&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Copy files between two storage&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Multi-thread downloading acceleration for single-thread download/stream&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Document&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://alistgo.com/"&gt;https://alistgo.com/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;API Documentation (via Apifox):&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://alist-public.apifox.cn/"&gt;https://alist-public.apifox.cn/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://al.nn.ci"&gt;https://al.nn.ci&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Discussion&lt;/h2&gt; 
&lt;p&gt;Please go to our &lt;a href="https://github.com/alist-org/alist/discussions"&gt;discussion forum&lt;/a&gt; for general questions, &lt;strong&gt;issues are for bug reports and feature requests only.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsor&lt;/h2&gt; 
&lt;p&gt;AList is an open-source software, if you happen to like this project and want me to keep going, please consider sponsoring me or providing a single donation! Thanks for all the love and support: &lt;a href="https://alistgo.com/guide/sponsor.html"&gt;https://alistgo.com/guide/sponsor.html&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Special sponsors&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://apps.apple.com/app/apple-store/id1659622164?pt=118612019&amp;amp;ct=alist&amp;amp;mt=8"&gt;VidHub&lt;/a&gt; - An elegant cloud video player within the Apple ecosystem. Support for iPhone, iPad, Mac, and Apple TV.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/alist-org/alist/graphs/contributors"&gt;&lt;img src="http://contrib.nn.ci/api?repo=alist-org/alist&amp;amp;repo=alist-org/alist-web&amp;amp;repo=alist-org/docs" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;AList&lt;/code&gt; is open-source software licensed under the AGPL-3.0 license.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;This program is a free and open source project. It is designed to share files on the network disk, which is convenient for downloading and learning Golang. Please abide by relevant laws and regulations when using it, and do not abuse it;&lt;/li&gt; 
 &lt;li&gt;This program is implemented by calling the official sdk/interface, without destroying the official interface behavior;&lt;/li&gt; 
 &lt;li&gt;This program only does 302 redirect/traffic forwarding, and does not intercept, store, or tamper with any user data;&lt;/li&gt; 
 &lt;li&gt;Before using this program, you should understand and bear the corresponding risks, including but not limited to account ban, download speed limit, etc., which is none of this program's business;&lt;/li&gt; 
 &lt;li&gt;If there is any infringement, please contact me by &lt;a href="mailto:i@nn.ci"&gt;email&lt;/a&gt;, and it will be dealt with in time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://github.com/alist-org"&gt;@GitHub&lt;/a&gt; ¬∑ &lt;a href="https://t.me/alist_chat"&gt;@TelegramGroup&lt;/a&gt; ¬∑ &lt;a href="https://discord.gg/F4ymsH4xv2"&gt;@Discord&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>rcourtman/Pulse</title>
      <link>https://github.com/rcourtman/Pulse</link>
      <description>&lt;p&gt;A responsive monitoring platform for Proxmox VE, PBS, and Docker with real-time metrics across nodes and containers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pulse&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/rcourtman/Pulse/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/rcourtman/Pulse" alt="GitHub release" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/rcourtman/pulse"&gt;&lt;img src="https://img.shields.io/docker/pulls/rcourtman/pulse" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/rcourtman/Pulse" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Real-time monitoring for Proxmox VE, Proxmox Mail Gateway, PBS, and Docker infrastructure with alerts and webhooks.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Monitor your hybrid Proxmox and Docker estate from a single dashboard. Get instant alerts when nodes go down, containers misbehave, backups fail, or storage fills up. Supports email, Discord, Slack, Telegram, and more.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://demo.pulserelay.pro"&gt;Try the live demo ‚Üí&lt;/a&gt;&lt;/strong&gt; (read-only with mock data)&lt;/p&gt; 
&lt;img width="2872" height="1502" alt="image" src="https://github.com/user-attachments/assets/41ac125c-59e3-4bdc-bfd2-e300109aa1f7" /&gt; 
&lt;h2&gt;Support Pulse Development&lt;/h2&gt; 
&lt;p&gt;Pulse is built by a solo developer in evenings and weekends. Your support helps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Keep me motivated to add new features&lt;/li&gt; 
 &lt;li&gt;Prioritize bug fixes and user requests&lt;/li&gt; 
 &lt;li&gt;Ensure Pulse stays 100% free and open-source forever&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/rcourtman"&gt;&lt;img src="https://img.shields.io/github/sponsors/rcourtman?style=social&amp;amp;label=Sponsor" alt="GitHub Sponsors" /&gt;&lt;/a&gt; &lt;a href="https://ko-fi.com/rcourtman"&gt;&lt;img src="https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true" alt="ko-fi" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Not ready to sponsor?&lt;/strong&gt; Star the project or share it with your homelab community!&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Auto-Discovery&lt;/strong&gt;: Finds Proxmox nodes on your network, one-liner setup via generated scripts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cluster Support&lt;/strong&gt;: Configure one node, monitor entire cluster&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise Security&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Credentials encrypted at rest, masked in logs, never sent to frontend&lt;/li&gt; 
   &lt;li&gt;CSRF protection for all state-changing operations&lt;/li&gt; 
   &lt;li&gt;Rate limiting (500 req/min general, 10 attempts/min for auth)&lt;/li&gt; 
   &lt;li&gt;Account lockout after failed login attempts&lt;/li&gt; 
   &lt;li&gt;Secure session management with HttpOnly cookies&lt;/li&gt; 
   &lt;li&gt;bcrypt password hashing (cost 12) - passwords NEVER stored in plain text&lt;/li&gt; 
   &lt;li&gt;API tokens stored securely with restricted file permissions&lt;/li&gt; 
   &lt;li&gt;Security headers (CSP, X-Frame-Options, etc.)&lt;/li&gt; 
   &lt;li&gt;Comprehensive audit logging&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Live monitoring of VMs, containers, nodes, storage&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Smart Alerts&lt;/strong&gt;: Email and webhooks (Discord, Slack, Telegram, Teams, ntfy.sh, Gotify) 
  &lt;ul&gt; 
   &lt;li&gt;Example: "VM 'webserver' is down on node 'pve1'"&lt;/li&gt; 
   &lt;li&gt;Example: "Storage 'local-lvm' at 85% capacity"&lt;/li&gt; 
   &lt;li&gt;Example: "VM 'database' is back online"&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Adaptive Thresholds&lt;/strong&gt;: Hysteresis-based trigger/clear levels, fractional network thresholds, per-metric search, reset-to-defaults, and Custom overrides with inline audit trail&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Alert Timeline Analytics&lt;/strong&gt;: Rich history explorer with acknowledgement/clear markers, escalation breadcrumbs, and quick filters for noisy resources&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ceph Awareness&lt;/strong&gt;: Surface Ceph health, pool utilisation, and daemon status automatically when Proxmox exposes Ceph-backed storage&lt;/li&gt; 
 &lt;li&gt;Unified view of PBS backups, PVE backups, and snapshots&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Interactive Backup Explorer&lt;/strong&gt;: Cross-highlighted bar chart + grid with quick time-range pivots (24h/7d/30d/custom) and contextual tooltips for the busiest jobs&lt;/li&gt; 
 &lt;li&gt;Proxmox Mail Gateway analytics: mail volume, spam/virus trends, quarantine health, and cluster node status&lt;/li&gt; 
 &lt;li&gt;Optional Docker container monitoring via lightweight agent&lt;/li&gt; 
 &lt;li&gt;Config export/import with encryption and authentication&lt;/li&gt; 
 &lt;li&gt;Automatic stable updates with safe rollback (opt-in)&lt;/li&gt; 
 &lt;li&gt;Dark/light themes, responsive design&lt;/li&gt; 
 &lt;li&gt;Built with Go for minimal resource usage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/SCREENSHOTS.md"&gt;Screenshots ‚Üí&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Pulse respects your privacy:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;No telemetry or analytics collection&lt;/li&gt; 
 &lt;li&gt;No phone-home functionality&lt;/li&gt; 
 &lt;li&gt;No external API calls (except for configured webhooks)&lt;/li&gt; 
 &lt;li&gt;All data stays on your server&lt;/li&gt; 
 &lt;li&gt;Open source - verify it yourself&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Your infrastructure data is yours alone.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Install&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Recommended: Official installer (auto-detects Proxmox and creates container)
curl -fsSL https://raw.githubusercontent.com/rcourtman/Pulse/main/install.sh | bash

# Need to roll back to a previous release? Pass the tag you want
curl -fsSL https://raw.githubusercontent.com/rcourtman/Pulse/main/install.sh | bash -s -- --version v4.20.0

# Alternative: Docker
docker run -d -p 7655:7655 -v pulse_data:/data rcourtman/pulse:latest

# Testing: Install from main branch source (for testing latest fixes)
curl -fsSL https://raw.githubusercontent.com/rcourtman/Pulse/main/install.sh | bash -s -- --source

# Alternative: Kubernetes (Helm)
helm registry login ghcr.io
helm install pulse oci://ghcr.io/rcourtman/pulse-chart \
  --version $(curl -fsSL https://raw.githubusercontent.com/rcourtman/Pulse/main/VERSION) \
  --namespace pulse \
  --create-namespace
# Replace the VERSION lookup with a specific release if you need to pin. For local development, see docs/KUBERNETES.md.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Proxmox users&lt;/strong&gt;: The installer detects PVE hosts and automatically creates an optimized LXC container. Choose Quick mode for one-minute setup.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/INSTALL.md"&gt;Advanced installation options ‚Üí&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Updating&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Automatic Updates (New!):&lt;/strong&gt; Enable during installation or via Settings UI to stay current automatically&lt;br /&gt; &lt;strong&gt;Standard Install:&lt;/strong&gt; Re-run the installer&lt;br /&gt; &lt;strong&gt;Docker:&lt;/strong&gt; &lt;code&gt;docker pull rcourtman/pulse:latest&lt;/code&gt; then recreate container&lt;/p&gt; 
&lt;h3&gt;Initial Setup&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Option A: Interactive Setup (UI)&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open &lt;code&gt;http://&amp;lt;your-server&amp;gt;:7655&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Complete the mandatory security setup&lt;/strong&gt; (first-time only)&lt;/li&gt; 
 &lt;li&gt;Create your admin username and password&lt;/li&gt; 
 &lt;li&gt;Use &lt;strong&gt;Settings ‚Üí Security ‚Üí API tokens&lt;/strong&gt; to mint dedicated tokens for automation (issue one token per integration so you can revoke credentials individually)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Option B: Automated Setup (No UI)&lt;/strong&gt; For automated deployments, configure authentication via environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start Pulse with auth pre-configured - skips setup screen
API_TOKENS="ansible-token,docker-agent-token" ./pulse

# Or use basic auth
PULSE_AUTH_USER=admin PULSE_AUTH_PASS=password ./pulse

# Plain text credentials are automatically hashed for security
# `API_TOKEN` is still accepted for back-compat, but `API_TOKENS` lets you manage multiple credentials
# You can also provide pre-hashed values if preferred
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/CONFIGURATION.md#automated-setup-skip-ui"&gt;Configuration Guide&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Configure Nodes&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Two authentication methods available:&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;Method 1: Manual Setup (Recommended for interactive use)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;After login, go to Settings ‚Üí Nodes&lt;/li&gt; 
 &lt;li&gt;Discovered nodes appear automatically&lt;/li&gt; 
 &lt;li&gt;Click "Setup Script" next to any node&lt;/li&gt; 
 &lt;li&gt;Click "Generate Setup Code" button (creates a 6-character code valid for 5 minutes)&lt;/li&gt; 
 &lt;li&gt;Copy and run the provided one-liner on your Proxmox/PBS host&lt;/li&gt; 
 &lt;li&gt;Node is configured and monitoring starts automatically&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL "http://pulse:7655/api/setup-script?type=pve&amp;amp;host=https://pve:8006&amp;amp;auth_token=ABC123" | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Method 2: Automated Setup (For scripts/automation)&lt;/h4&gt; 
&lt;p&gt;Use your permanent API token directly in the URL for automation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# For Proxmox VE
curl -sSL "http://pulse:7655/api/setup-script?type=pve&amp;amp;host=https://pve:8006&amp;amp;auth_token=YOUR_API_TOKEN" | bash

# For Proxmox Backup Server
curl -sSL "http://pulse:7655/api/setup-script?type=pbs&amp;amp;host=https://pbs:8007&amp;amp;auth_token=YOUR_API_TOKEN" | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;type&lt;/code&gt;: &lt;code&gt;pve&lt;/code&gt; for Proxmox VE, &lt;code&gt;pbs&lt;/code&gt; for Proxmox Backup Server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;host&lt;/code&gt;: Full URL of your Proxmox/PBS server (e.g., &lt;a href="https://192.168.1.100:8006"&gt;https://192.168.1.100:8006&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;auth_token&lt;/code&gt;: Either a 6-character setup code (expires in 5 min) or your permanent API token&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;backup_perms=true&lt;/code&gt; (optional): Add backup management permissions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pulse_url&lt;/code&gt; (optional): Pulse server URL if different from where script is downloaded&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The script handles user creation, permissions, token generation, and registration automatically.&lt;/p&gt; 
&lt;h3&gt;Monitor Docker Containers (optional)&lt;/h3&gt; 
&lt;p&gt;Deploy the lightweight &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/DOCKER_MONITORING.md"&gt;Pulse Docker agent&lt;/a&gt; on any host running Docker to stream container status and resource data back to Pulse. Install the agent alongside your stack, point it at your Pulse URL and API token, and the &lt;strong&gt;Docker&lt;/strong&gt; workspace lights up with host summaries, restart loop detection, per-container CPU/memory charts, and quick filters for stacks and unhealthy workloads.&lt;/p&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;h3&gt;Basic&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d \
  --name pulse \
  -p 7655:7655 \
  -v pulse_data:/data \
  --restart unless-stopped \
  rcourtman/pulse:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Network Discovery&lt;/h3&gt; 
&lt;p&gt;Pulse automatically discovers Proxmox nodes on your network! By default, it scans:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;192.168.0.0/16 (home networks)&lt;/li&gt; 
 &lt;li&gt;10.0.0.0/8 (private networks)&lt;/li&gt; 
 &lt;li&gt;172.16.0.0/12 (Docker/internal networks)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To scan a custom subnet instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d \
  --name pulse \
  -p 7655:7655 \
  -v pulse_data:/data \
  -e DISCOVERY_SUBNET="192.168.50.0/24" \
  --restart unless-stopped \
  rcourtman/pulse:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Automated Deployment&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Deploy with authentication pre-configured
docker run -d \
  --name pulse \
  -p 7655:7655 \
  -v pulse_data:/data \
  -e API_TOKENS="ansible-token,docker-agent-token" \
  -e PULSE_AUTH_USER="admin" \
  -e PULSE_AUTH_PASS="your-password" \
  --restart unless-stopped \
  rcourtman/pulse:latest

# Plain text credentials are automatically hashed for security
# No setup required - API works immediately
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker Compose&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  pulse:
    image: rcourtman/pulse:latest
    container_name: pulse
    ports:
      - "7655:7655"
    volumes:
      - pulse_data:/data
    environment:
      # NOTE: Env vars override UI settings. Remove env var to allow UI configuration.
      
      # Network discovery (usually not needed - auto-scans common networks)
      # - DISCOVERY_SUBNET=192.168.50.0/24  # Only for non-standard networks
      
      # Ports
      # - PORT=7655                         # Backend port (default: 7655)
      # - FRONTEND_PORT=7655                # Frontend port (default: 7655)
      
      # Security (all optional - runs open by default)
      # - PULSE_AUTH_USER=admin             # Username for web UI login
      # - PULSE_AUTH_PASS=your-password     # Plain text or bcrypt hash (auto-hashed if plain)
      # - API_TOKENS=token-a,token-b        # Comma-separated tokens (plain or SHA3-256 hashed)
      # - API_TOKEN=legacy-token            # Optional single-token fallback
      # - ALLOW_UNPROTECTED_EXPORT=false    # Allow export without auth (default: false)
      
      # Security: Plain text credentials are automatically hashed
      # You can provide either:
      # 1. Plain text (auto-hashed): PULSE_AUTH_PASS=mypassword
      # 2. Pre-hashed (advanced): PULSE_AUTH_PASS='$$2a$$12$$...'
      #    Note: Escape $ as $$ in docker-compose.yml for pre-hashed values
      
      # Performance
      # - CONNECTION_TIMEOUT=10             # Connection timeout in seconds (default: 10)
      
      # CORS &amp;amp; logging
      # - ALLOWED_ORIGINS=https://app.example.com  # CORS origins (default: none, same-origin only)
      # - LOG_LEVEL=info                    # Log level: debug/info/warn/error (default: info)
    restart: unless-stopped

volumes:
  pulse_data:
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Authentication required&lt;/strong&gt; - Protects your Proxmox infrastructure credentials&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Quick setup wizard&lt;/strong&gt; - Secure your installation in under a minute&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple auth methods&lt;/strong&gt;: Password authentication, API tokens, proxy auth (SSO), or combinations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Proxy/SSO support&lt;/strong&gt; - Integrate with Authentik, Authelia, and other authentication proxies (&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/PROXY_AUTH.md"&gt;docs&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise-grade protection&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Credentials encrypted at rest (AES-256-GCM)&lt;/li&gt; 
   &lt;li&gt;CSRF tokens for state-changing operations&lt;/li&gt; 
   &lt;li&gt;Rate limiting and account lockout protection&lt;/li&gt; 
   &lt;li&gt;Secure session management with HttpOnly cookies&lt;/li&gt; 
   &lt;li&gt;bcrypt password hashing (cost 12) - passwords NEVER stored in plain text&lt;/li&gt; 
   &lt;li&gt;API tokens stored securely with restricted file permissions&lt;/li&gt; 
   &lt;li&gt;Security headers (CSP, X-Frame-Options, etc.)&lt;/li&gt; 
   &lt;li&gt;Comprehensive audit logging&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security by design&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Frontend never receives node credentials&lt;/li&gt; 
   &lt;li&gt;API tokens visible only to authenticated users&lt;/li&gt; 
   &lt;li&gt;Export/import requires authentication when configured&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/SECURITY.md"&gt;Security Documentation&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Updating&lt;/h2&gt; 
&lt;h3&gt;Update Notifications&lt;/h3&gt; 
&lt;p&gt;Pulse checks for updates and displays notifications in the UI when new versions are available. For security reasons, updates must be installed manually using the appropriate method for your deployment.&lt;/p&gt; 
&lt;h3&gt;Manual Installation (systemd)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Update to latest stable
curl -fsSL https://raw.githubusercontent.com/rcourtman/Pulse/main/install.sh | bash

# Update to latest RC/pre-release  
curl -fsSL https://raw.githubusercontent.com/rcourtman/Pulse/main/install.sh | bash -s -- --rc

# Install specific version
curl -fsSL https://raw.githubusercontent.com/rcourtman/Pulse/main/install.sh | bash -s -- --version v4.8.0-rc.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker Updates&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Latest stable
docker pull rcourtman/pulse:latest

# Latest RC
docker pull rcourtman/pulse:rc

# Specific version
docker pull rcourtman/pulse:v4.8.0-rc.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Quick start - most settings are in the web UI:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Settings ‚Üí Nodes&lt;/strong&gt;: Add/remove Proxmox instances&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Settings ‚Üí System&lt;/strong&gt;: Polling intervals, timeouts, update settings&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Settings ‚Üí Security&lt;/strong&gt;: Authentication and API tokens&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Alerts&lt;/strong&gt;: Thresholds and notifications&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Apprise Notifications&lt;/h3&gt; 
&lt;p&gt;Pulse can broadcast grouped alerts through &lt;a href="https://github.com/caronc/apprise"&gt;Apprise&lt;/a&gt; using either the local CLI or a remote Apprise API gateway. Configure everything under &lt;strong&gt;Alerts ‚Üí Notifications ‚Üí Apprise&lt;/strong&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Local CLI&lt;/strong&gt; ‚Äì Install Apprise on the Pulse host (for example &lt;code&gt;pip install apprise&lt;/code&gt;) and enter one Apprise URL per line in the delivery targets field. You can override the CLI path and timeout if the executable lives outside of &lt;code&gt;$PATH&lt;/code&gt;. Pulse skips CLI delivery automatically when no targets are configured.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Remote API&lt;/strong&gt; ‚Äì Point Pulse at an Apprise API server by providing the base URL (such as &lt;code&gt;https://apprise-api.local:8000&lt;/code&gt;). Optionally include a configuration key (for &lt;code&gt;/notify/{key}&lt;/code&gt; routes), an API key header/value pair, and allow self-signed certificates for lab deployments. Targets remain optional in API mode‚Äîleave the list empty to let the Apprise server use its stored defaults.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For both modes, delivery targets accept any Apprise URL (Discord, Slack, email, SMS, etc.). The timeout applies to the CLI process or HTTP request respectively.&lt;/p&gt; 
&lt;h3&gt;Configuration Files&lt;/h3&gt; 
&lt;p&gt;Pulse uses three separate configuration files with clear separation of concerns:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;.env&lt;/code&gt; - Authentication credentials only&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;system.json&lt;/code&gt; - Application settings&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nodes.enc&lt;/code&gt; - Encrypted node credentials&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/CONFIGURATION.md"&gt;docs/CONFIGURATION.md&lt;/a&gt; for detailed documentation on configuration structure and management.&lt;/p&gt; 
&lt;h3&gt;Email Alerts Configuration&lt;/h3&gt; 
&lt;p&gt;Configure email notifications in &lt;strong&gt;Settings ‚Üí Alerts ‚Üí Email Destinations&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;Supported Providers&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Gmail/Google Workspace&lt;/strong&gt;: Requires app-specific password&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Outlook/Office 365&lt;/strong&gt;: Requires app-specific password&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom SMTP&lt;/strong&gt;: Any SMTP server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Recommended Settings&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Port 587 with STARTTLS&lt;/strong&gt; (recommended for most providers)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Port 465&lt;/strong&gt; for SSL/TLS&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Port 25&lt;/strong&gt; for unencrypted (not recommended)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Gmail Setup&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Enable 2-factor authentication&lt;/li&gt; 
 &lt;li&gt;Generate app-specific password at &lt;a href="https://myaccount.google.com/apppasswords"&gt;https://myaccount.google.com/apppasswords&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Use your email as username and app password as password&lt;/li&gt; 
 &lt;li&gt;Server: smtp.gmail.com, Port: 587, Enable STARTTLS&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Outlook Setup&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Generate app password at &lt;a href="https://account.microsoft.com/security"&gt;https://account.microsoft.com/security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Use your email as username and app password as password&lt;/li&gt; 
 &lt;li&gt;Server: smtp-mail.outlook.com, Port: 587, Enable STARTTLS&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Alert Configuration&lt;/h3&gt; 
&lt;p&gt;Pulse provides two complementary approaches for managing alerts:&lt;/p&gt; 
&lt;h4&gt;Custom Alert Rules (Permanent Policy)&lt;/h4&gt; 
&lt;p&gt;Configure persistent alert policies in &lt;strong&gt;Settings ‚Üí Alerts ‚Üí Custom Rules&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Define thresholds for specific VMs/containers based on name patterns&lt;/li&gt; 
 &lt;li&gt;Set different thresholds for production vs development environments&lt;/li&gt; 
 &lt;li&gt;Create complex rules with AND/OR logic&lt;/li&gt; 
 &lt;li&gt;Manage all rules through the UI with priority ordering&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Use for:&lt;/strong&gt; Long-term alert policies like "all database VMs should alert at 90%"&lt;/p&gt; 
&lt;h3&gt;HTTPS/TLS Configuration&lt;/h3&gt; 
&lt;p&gt;Enable HTTPS by setting these environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Systemd (service: pulse; legacy installs may use pulse-backend): sudo systemctl edit pulse
Environment="HTTPS_ENABLED=true"
Environment="TLS_CERT_FILE=/etc/pulse/cert.pem"
Environment="TLS_KEY_FILE=/etc/pulse/key.pem"

# Docker
docker run -d -p 7655:7655 \
  -e HTTPS_ENABLED=true \
  -e TLS_CERT_FILE=/data/cert.pem \
  -e TLS_KEY_FILE=/data/key.pem \
  -v pulse_data:/data \
  -v /path/to/certs:/data/certs:ro \
  rcourtman/pulse:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For deployment overrides (ports, etc), use environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Systemd (service: pulse; legacy installs may use pulse-backend): sudo systemctl edit pulse
Environment="FRONTEND_PORT=8080"

# Docker: -e FRONTEND_PORT=8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/CONFIGURATION.md"&gt;Full Configuration Guide ‚Üí&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Backup/Restore&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Via UI (recommended):&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Settings ‚Üí Security ‚Üí Backup &amp;amp; Restore&lt;/li&gt; 
 &lt;li&gt;Export: Choose login password or custom passphrase for encryption&lt;/li&gt; 
 &lt;li&gt;Import: Upload backup file with passphrase&lt;/li&gt; 
 &lt;li&gt;Includes all settings, nodes, and custom console URLs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Via CLI:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Export (v4.0.3+)
pulse config export -o backup.enc

# Import
pulse config import -i backup.enc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Updates&lt;/h2&gt; 
&lt;p&gt;Pulse shows when updates are available and provides deployment-specific instructions:&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull rcourtman/pulse:latest
docker stop pulse
docker rm pulse
# Run docker run command again with your settings
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Install&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsSL https://raw.githubusercontent.com/rcourtman/Pulse/main/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The UI will detect your deployment type and show the appropriate update method when a new version is available.&lt;/p&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Status
curl http://localhost:7655/api/health

# Metrics (default time range: 1h)
curl http://localhost:7655/api/charts

# With authentication (if configured)
curl -H "X-API-Token: your-token" http://localhost:7655/api/health
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/API.md"&gt;Full API Documentation ‚Üí&lt;/a&gt;&lt;/strong&gt; - Complete endpoint reference with examples&lt;/p&gt; 
&lt;h2&gt;Reverse Proxy &amp;amp; SSO&lt;/h2&gt; 
&lt;p&gt;Using Pulse behind a reverse proxy? &lt;strong&gt;WebSocket support is required for real-time updates.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NEW: Proxy Authentication Support&lt;/strong&gt; - Integrate with Authentik, Authelia, and other SSO providers. See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/PROXY_AUTH.md"&gt;Proxy Authentication Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/REVERSE_PROXY.md"&gt;Reverse Proxy Configuration Guide&lt;/a&gt; for nginx, Caddy, Apache, Traefik, HAProxy, and Cloudflare Tunnel configurations.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;h3&gt;Authentication Issues&lt;/h3&gt; 
&lt;h4&gt;Cannot login after setting up security&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: Ensure bcrypt hash is exactly 60 characters and wrapped in single quotes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Compose&lt;/strong&gt;: MUST escape $ characters as $$ (e.g., &lt;code&gt;$$2a$$12$$...&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Example (docker run)&lt;/strong&gt;: &lt;code&gt;PULSE_AUTH_PASS='$2a$12$YTZXOCEylj4TaevZ0DCeI.notayQZ..b0OZ97lUZ.Q24fljLiMQHK'&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Example (docker-compose.yml)&lt;/strong&gt;: &lt;code&gt;PULSE_AUTH_PASS='$$2a$$12$$YTZXOCEylj4TaevZ0DCeI.notayQZ..b0OZ97lUZ.Q24fljLiMQHK'&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;If hash is truncated or mangled, authentication will fail&lt;/li&gt; 
 &lt;li&gt;Use Quick Security Setup in the UI to avoid manual configuration errors&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;.env file not created (Docker)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;: When using environment variables, no .env file is created in /data&lt;/li&gt; 
 &lt;li&gt;The .env file is only created when using Quick Security Setup or password changes&lt;/li&gt; 
 &lt;li&gt;If you provide credentials via environment variables, they take precedence&lt;/li&gt; 
 &lt;li&gt;To use Quick Security Setup: Start container WITHOUT auth environment variables&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;VM Disk Stats Show "-"&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;VMs require QEMU Guest Agent to report disk usage (Proxmox API returns 0 for VMs)&lt;/li&gt; 
 &lt;li&gt;Install guest agent in VM: &lt;code&gt;apt install qemu-guest-agent&lt;/code&gt; (Linux) or virtio-win tools (Windows)&lt;/li&gt; 
 &lt;li&gt;Enable in VM Options ‚Üí QEMU Guest Agent, then restart VM&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/VM_DISK_MONITORING.md"&gt;VM Disk Monitoring Guide&lt;/a&gt; for setup&lt;/li&gt; 
 &lt;li&gt;Container (LXC) disk stats always work (no guest agent needed)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Connection Issues&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check Proxmox API is accessible (port 8006/8007)&lt;/li&gt; 
 &lt;li&gt;Verify credentials have PVEAuditor role plus VM.GuestAgent.Audit (PVE 9) or VM.Monitor (PVE 8); the setup script applies these via the PulseMonitor role (adds Sys.Audit when available)&lt;/li&gt; 
 &lt;li&gt;For PBS: ensure API token has Datastore.Audit permission&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;High CPU/Memory&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Reduce polling interval in Settings&lt;/li&gt; 
 &lt;li&gt;Check number of monitored nodes&lt;/li&gt; 
 &lt;li&gt;Disable unused features (backups, snapshots)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Logs&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Docker
docker logs pulse

# Manual
journalctl -u pulse -f
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/DOCKER.md"&gt;Docker Guide&lt;/a&gt; - Complete Docker deployment guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/CONFIGURATION.md"&gt;Configuration Guide&lt;/a&gt; - Complete setup and configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/VM_DISK_MONITORING.md"&gt;VM Disk Monitoring&lt;/a&gt; - Set up QEMU Guest Agent for accurate VM disk usage&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/PORT_CONFIGURATION.md"&gt;Port Configuration&lt;/a&gt; - How to change the default port&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/TROUBLESHOOTING.md"&gt;Troubleshooting&lt;/a&gt; - Common issues and solutions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/API.md"&gt;API Reference&lt;/a&gt; - REST API endpoints and examples&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/WEBHOOKS.md"&gt;Webhook Guide&lt;/a&gt; - Setting up webhooks and custom payloads&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/PROXY_AUTH.md"&gt;Proxy Authentication&lt;/a&gt; - SSO integration with Authentik, Authelia, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/REVERSE_PROXY.md"&gt;Reverse Proxy Setup&lt;/a&gt; - nginx, Caddy, Apache, Traefik configs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/SECURITY.md"&gt;Security&lt;/a&gt; - Security features and best practices&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/FAQ.md"&gt;FAQ&lt;/a&gt; - Common questions and troubleshooting&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/MIGRATION.md"&gt;Migration Guide&lt;/a&gt; - Backup and migration procedures&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Mandatory authentication&lt;/strong&gt; protects your infrastructure&lt;/li&gt; 
 &lt;li&gt;Credentials stored encrypted (AES-256-GCM)&lt;/li&gt; 
 &lt;li&gt;API token support for automation&lt;/li&gt; 
 &lt;li&gt;Export/import requires authentication&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Setup script authentication&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Setup codes&lt;/strong&gt;: Temporary 6-character codes for manual setup (expire in 5 minutes)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;API tokens&lt;/strong&gt;: Permanent tokens for automation and scripting&lt;/li&gt; 
   &lt;li&gt;Use setup codes when giving access to others without sharing your API token&lt;/li&gt; 
   &lt;li&gt;Use API tokens for your own automation or trusted environments&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/SECURITY.md"&gt;Security Details ‚Üí&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Quick Start - Hot Reload (Recommended)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Launch Vite + Go with automatic frontend proxying
make dev-hot
# Frontend HMR: http://127.0.0.1:5173
# Backend API:   http://127.0.0.1:7655 (served via the Go app)
# Ports come from FRONTEND_PORT/PULSE_DEV_API_PORT (loaded from .env*. Override there if you need a different port.)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The backend now detects &lt;code&gt;FRONTEND_DEV_SERVER&lt;/code&gt; and proxies requests straight to the Vite dev server. Edit files under &lt;code&gt;frontend-modern/src/&lt;/code&gt; and the browser refreshes instantly‚Äîno manual rebuilds or service restarts required. Use &lt;code&gt;CTRL+C&lt;/code&gt; to stop both processes.&lt;/p&gt; 
&lt;h3&gt;Mock Mode - Develop Without Real Infrastructure&lt;/h3&gt; 
&lt;p&gt;Work on Pulse without needing Proxmox servers! Mock mode generates realistic test data and auto-reloads when toggled. The &lt;code&gt;mock.env&lt;/code&gt; configuration file is &lt;strong&gt;included in the repository&lt;/strong&gt;, so it works out of the box for all developers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Enable mock mode with 7 nodes, ~90 guests
npm run mock:on

# Disable mock mode (use real infrastructure)
npm run mock:off

# Edit mock configuration
npm run mock:edit

# Create local overrides (not committed to git)
cp mock.env mock.env.local
# Edit mock.env.local with your personal preferences

# Data directories are isolated automatically:
# - Mock mode:   /opt/pulse/tmp/mock-data
# - Production:  /etc/pulse
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Backend auto-reloads when mock.env changes - no manual restarts!&lt;/strong&gt; The toggle scripts keep mock data isolated from &lt;code&gt;/etc/pulse&lt;/code&gt; so your real credentials stay untouched.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/development/MOCK_MODE.md"&gt;docs/development/MOCK_MODE.md&lt;/a&gt; for full details.&lt;/p&gt; 
&lt;h3&gt;Production-like Development&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Watches files and rebuilds/embeds frontend into Go binary
./dev.sh
# Access at: http://localhost:7655
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Development&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Frontend only
cd frontend-modern
npm install
npm run dev

# Backend only
go build -o pulse ./cmd/pulse
./pulse

# Or use make for full rebuild
make dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Visual Tour&lt;/h2&gt; 
&lt;p&gt;See Pulse in action with our &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/SCREENSHOTS.md"&gt;complete screenshot gallery ‚Üí&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Core Features&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Dashboard&lt;/th&gt; 
   &lt;th&gt;Storage&lt;/th&gt; 
   &lt;th&gt;Backups&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/01-dashboard.png" alt="Dashboard" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/02-storage.png" alt="Storage" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/03-backups.png" alt="Backups" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Real-time monitoring of nodes, VMs &amp;amp; containers&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;Storage pool usage across all nodes&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;Unified backup management &amp;amp; PBS integration&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Alerts &amp;amp; Configuration&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Alert Configuration&lt;/th&gt; 
   &lt;th&gt;Alert History&lt;/th&gt; 
   &lt;th&gt;Settings&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/04-alerts.png" alt="Alerts" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/05-alert-history.png" alt="Alert History" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/06-settings.png" alt="Settings" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Configure thresholds &amp;amp; notifications&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;Track patterns with visual timeline&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;Manage nodes &amp;amp; authentication&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Mobile Experience&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Mobile Dashboard&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/rcourtman/Pulse/main/docs/images/08-mobile.png" alt="Mobile" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Fully responsive interface for monitoring on the go&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rcourtman/Pulse/releases"&gt;Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/rcourtman/pulse"&gt;Docker Hub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rcourtman/Pulse/issues"&gt;Issues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT - See &lt;a href="https://raw.githubusercontent.com/rcourtman/Pulse/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>github/github-mcp-server</title>
      <link>https://github.com/github/github-mcp-server</link>
      <description>&lt;p&gt;GitHub's official MCP Server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub MCP Server&lt;/h1&gt; 
&lt;p&gt;The GitHub MCP Server connects AI tools directly to GitHub's platform. This gives AI agents, assistants, and chatbots the ability to read repositories and code files, manage issues and PRs, analyze code, and automate workflows. All through natural language interactions.&lt;/p&gt; 
&lt;h3&gt;Use Cases&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Repository Management: Browse and query code, search files, analyze commits, and understand project structure across any repository you have access to.&lt;/li&gt; 
 &lt;li&gt;Issue &amp;amp; PR Automation: Create, update, and manage issues and pull requests. Let AI help triage bugs, review code changes, and maintain project boards.&lt;/li&gt; 
 &lt;li&gt;CI/CD &amp;amp; Workflow Intelligence: Monitor GitHub Actions workflow runs, analyze build failures, manage releases, and get insights into your development pipeline.&lt;/li&gt; 
 &lt;li&gt;Code Analysis: Examine security findings, review Dependabot alerts, understand code patterns, and get comprehensive insights into your codebase.&lt;/li&gt; 
 &lt;li&gt;Team Collaboration: Access discussions, manage notifications, analyze team activity, and streamline processes for your team.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Built for developers who want to connect their AI tools to GitHub context and capabilities, from simple natural language queries to complex multi-step agent workflows.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Remote GitHub MCP Server&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://insiders.vscode.dev/redirect/mcp/install?name=github&amp;amp;config=%7B%22type%22%3A%20%22http%22%2C%22url%22%3A%20%22https%3A%2F%2Fapi.githubcopilot.com%2Fmcp%2F%22%7D"&gt;&lt;img src="https://img.shields.io/badge/VS_Code-Install_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white" alt="Install in VS Code" /&gt;&lt;/a&gt; &lt;a href="https://insiders.vscode.dev/redirect/mcp/install?name=github&amp;amp;config=%7B%22type%22%3A%20%22http%22%2C%22url%22%3A%20%22https%3A%2F%2Fapi.githubcopilot.com%2Fmcp%2F%22%7D&amp;amp;quality=insiders"&gt;&lt;img src="https://img.shields.io/badge/VS_Code_Insiders-Install_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white" alt="Install in VS Code Insiders" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The remote GitHub MCP Server is hosted by GitHub and provides the easiest method for getting up and running. If your MCP host does not support remote MCP servers, don't worry! You can use the &lt;a href="https://github.com/github/github-mcp-server?tab=readme-ov-file#local-github-mcp-server"&gt;local version of the GitHub MCP Server&lt;/a&gt; instead.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;A compatible MCP host with remote server support (VS Code 1.101+, Claude Desktop, Cursor, Windsurf, etc.)&lt;/li&gt; 
 &lt;li&gt;Any applicable &lt;a href="https://github.com/github/github-mcp-server/raw/main/docs/policies-and-governance.md"&gt;policies enabled&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Install in VS Code&lt;/h3&gt; 
&lt;p&gt;For quick installation, use one of the one-click install buttons above. Once you complete that flow, toggle Agent mode (located by the Copilot Chat text input) and the server will start. Make sure you're using &lt;a href="https://code.visualstudio.com/updates/v1_101"&gt;VS Code 1.101&lt;/a&gt; or &lt;a href="https://code.visualstudio.com/updates"&gt;later&lt;/a&gt; for remote MCP and OAuth support.&lt;/p&gt; 
&lt;p&gt;Alternatively, to manually configure VS Code, choose the appropriate JSON block from the examples below and add it to your host configuration:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;th&gt;Using OAuth&lt;/th&gt;
   &lt;th&gt;Using a GitHub PAT&lt;/th&gt;
  &lt;/tr&gt; 
  &lt;tr&gt;
   &lt;th align="left" colspan="2"&gt;VS Code (version 1.101 or greater)&lt;/th&gt;
  &lt;/tr&gt; 
  &lt;tr valign="top"&gt; 
   &lt;td&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "servers": {
    "github": {
      "type": "http",
      "url": "https://api.githubcopilot.com/mcp/"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "servers": {
    "github": {
      "type": "http",
      "url": "https://api.githubcopilot.com/mcp/",
      "headers": {
        "Authorization": "Bearer ${input:github_mcp_pat}"
      }
    }
  },
  "inputs": [
    {
      "type": "promptString",
      "id": "github_mcp_pat",
      "description": "GitHub Personal Access Token",
      "password": true
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Install in other MCP hosts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/docs/installation-guides/install-other-copilot-ides.md"&gt;GitHub Copilot in other IDEs&lt;/a&gt;&lt;/strong&gt; - Installation for JetBrains, Visual Studio, Eclipse, and Xcode with GitHub Copilot&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/docs/installation-guides/install-claude.md"&gt;Claude Applications&lt;/a&gt;&lt;/strong&gt; - Installation guide for Claude Web, Claude Desktop and Claude Code CLI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/docs/installation-guides/install-cursor.md"&gt;Cursor&lt;/a&gt;&lt;/strong&gt; - Installation guide for Cursor IDE&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/docs/installation-guides/install-windsurf.md"&gt;Windsurf&lt;/a&gt;&lt;/strong&gt; - Installation guide for Windsurf IDE&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Each MCP host application needs to configure a GitHub App or OAuth App to support remote access via OAuth. Any host application that supports remote MCP servers should support the remote GitHub server with PAT authentication. Configuration details and support levels vary by host. Make sure to refer to the host application's documentation for more info.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;h4&gt;Toolset configuration&lt;/h4&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/docs/remote-server.md"&gt;Remote Server Documentation&lt;/a&gt; for full details on remote server configuration, toolsets, headers, and advanced usage. This file provides comprehensive instructions and examples for connecting, customizing, and installing the remote GitHub MCP Server in VS Code and other MCP hosts.&lt;/p&gt; 
&lt;p&gt;When no toolsets are specified, &lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/#default-toolset"&gt;default toolsets&lt;/a&gt; are used.&lt;/p&gt; 
&lt;h4&gt;Enterprise Cloud with data residency (ghe.com)&lt;/h4&gt; 
&lt;p&gt;GitHub Enterprise Cloud can also make use of the remote server.&lt;/p&gt; 
&lt;p&gt;Example for &lt;code&gt;https://octocorp.ghe.com&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
    ...
    "proxima-github": {
      "type": "http",
      "url": "https://copilot-api.octocorp.ghe.com/mcp",
      "headers": {
        "Authorization": "Bearer ${input:github_mcp_pat}"
      }
    },
    ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;GitHub Enterprise Server does not support remote server hosting. Please refer to &lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/#github-enterprise-server-and-enterprise-cloud-with-data-residency-ghecom"&gt;GitHub Enterprise Server and Enterprise Cloud with data residency (ghe.com)&lt;/a&gt; from the local server configuration.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Local GitHub MCP Server&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://insiders.vscode.dev/redirect/mcp/install?name=github&amp;amp;inputs=%5B%7B%22id%22%3A%22github_token%22%2C%22type%22%3A%22promptString%22%2C%22description%22%3A%22GitHub%20Personal%20Access%20Token%22%2C%22password%22%3Atrue%7D%5D&amp;amp;config=%7B%22command%22%3A%22docker%22%2C%22args%22%3A%5B%22run%22%2C%22-i%22%2C%22--rm%22%2C%22-e%22%2C%22GITHUB_PERSONAL_ACCESS_TOKEN%22%2C%22ghcr.io%2Fgithub%2Fgithub-mcp-server%22%5D%2C%22env%22%3A%7B%22GITHUB_PERSONAL_ACCESS_TOKEN%22%3A%22%24%7Binput%3Agithub_token%7D%22%7D%7D"&gt;&lt;img src="https://img.shields.io/badge/VS_Code-Install_Server-0098FF?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white" alt="Install with Docker in VS Code" /&gt;&lt;/a&gt; &lt;a href="https://insiders.vscode.dev/redirect/mcp/install?name=github&amp;amp;inputs=%5B%7B%22id%22%3A%22github_token%22%2C%22type%22%3A%22promptString%22%2C%22description%22%3A%22GitHub%20Personal%20Access%20Token%22%2C%22password%22%3Atrue%7D%5D&amp;amp;config=%7B%22command%22%3A%22docker%22%2C%22args%22%3A%5B%22run%22%2C%22-i%22%2C%22--rm%22%2C%22-e%22%2C%22GITHUB_PERSONAL_ACCESS_TOKEN%22%2C%22ghcr.io%2Fgithub%2Fgithub-mcp-server%22%5D%2C%22env%22%3A%7B%22GITHUB_PERSONAL_ACCESS_TOKEN%22%3A%22%24%7Binput%3Agithub_token%7D%22%7D%7D&amp;amp;quality=insiders"&gt;&lt;img src="https://img.shields.io/badge/VS_Code_Insiders-Install_Server-24bfa5?style=flat-square&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white" alt="Install with Docker in VS Code Insiders" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;To run the server in a container, you will need to have &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; installed.&lt;/li&gt; 
 &lt;li&gt;Once Docker is installed, you will also need to ensure Docker is running. The image is public; if you get errors on pull, you may have an expired token and need to &lt;code&gt;docker logout ghcr.io&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Lastly you will need to &lt;a href="https://github.com/settings/personal-access-tokens/new"&gt;Create a GitHub Personal Access Token&lt;/a&gt;. The MCP server can use many of the GitHub APIs, so enable the permissions that you feel comfortable granting your AI tools (to learn more about access tokens, please check out the &lt;a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens"&gt;documentation&lt;/a&gt;).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;b&gt;Handling PATs Securely&lt;/b&gt;&lt;/summary&gt; 
 &lt;h3&gt;Environment Variables (Recommended)&lt;/h3&gt; 
 &lt;p&gt;To keep your GitHub PAT secure and reusable across different MCP hosts:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Store your PAT in environment variables&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;export GITHUB_PAT=your_token_here
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or create a &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-env"&gt;GITHUB_PAT=your_token_here
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Protect your &lt;code&gt;.env&lt;/code&gt; file&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Add to .gitignore to prevent accidental commits
echo ".env" &amp;gt;&amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reference the token in configurations&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# CLI usage
claude mcp update github -e GITHUB_PERSONAL_ACCESS_TOKEN=$GITHUB_PAT

# In config files (where supported)
"env": {
  "GITHUB_PERSONAL_ACCESS_TOKEN": "$GITHUB_PAT"
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Environment variable support varies by host app and IDE. Some applications (like Windsurf) require hardcoded tokens in config files.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;h3&gt;Token Security Best Practices&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Minimum scopes&lt;/strong&gt;: Only grant necessary permissions 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt; - Repository operations&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;read:packages&lt;/code&gt; - Docker image access&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;read:org&lt;/code&gt; - Organization team access&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Separate tokens&lt;/strong&gt;: Use different PATs for different projects/environments&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Regular rotation&lt;/strong&gt;: Update tokens periodically&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Never commit&lt;/strong&gt;: Keep tokens out of version control&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;File permissions&lt;/strong&gt;: Restrict access to config files containing tokens &lt;pre&gt;&lt;code class="language-bash"&gt;chmod 600 ~/.your-app/config.json
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;GitHub Enterprise Server and Enterprise Cloud with data residency (ghe.com)&lt;/h3&gt; 
&lt;p&gt;The flag &lt;code&gt;--gh-host&lt;/code&gt; and the environment variable &lt;code&gt;GITHUB_HOST&lt;/code&gt; can be used to set the hostname for GitHub Enterprise Server or GitHub Enterprise Cloud with data residency.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For GitHub Enterprise Server, prefix the hostname with the &lt;code&gt;https://&lt;/code&gt; URI scheme, as it otherwise defaults to &lt;code&gt;http://&lt;/code&gt;, which GitHub Enterprise Server does not support.&lt;/li&gt; 
 &lt;li&gt;For GitHub Enterprise Cloud with data residency, use &lt;code&gt;https://YOURSUBDOMAIN.ghe.com&lt;/code&gt; as the hostname.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;"github": {
    "command": "docker",
    "args": [
    "run",
    "-i",
    "--rm",
    "-e",
    "GITHUB_PERSONAL_ACCESS_TOKEN",
    "-e",
    "GITHUB_HOST",
    "ghcr.io/github/github-mcp-server"
    ],
    "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "${input:github_token}",
        "GITHUB_HOST": "https://&amp;lt;your GHES or ghe.com domain name&amp;gt;"
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Install in GitHub Copilot on VS Code&lt;/h3&gt; 
&lt;p&gt;For quick installation, use one of the one-click install buttons above. Once you complete that flow, toggle Agent mode (located by the Copilot Chat text input) and the server will start.&lt;/p&gt; 
&lt;p&gt;More about using MCP server tools in VS Code's &lt;a href="https://code.visualstudio.com/docs/copilot/chat/mcp-servers"&gt;agent mode documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Install in GitHub Copilot on other IDEs (JetBrains, Visual Studio, Eclipse, etc.)&lt;/p&gt; 
&lt;p&gt;Add the following JSON block to your IDE's MCP settings.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcp": {
    "inputs": [
      {
        "type": "promptString",
        "id": "github_token",
        "description": "GitHub Personal Access Token",
        "password": true
      }
    ],
    "servers": {
      "github": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "-e",
          "GITHUB_PERSONAL_ACCESS_TOKEN",
          "ghcr.io/github/github-mcp-server"
        ],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "${input:github_token}"
        }
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Optionally, you can add a similar example (i.e. without the mcp key) to a file called &lt;code&gt;.vscode/mcp.json&lt;/code&gt; in your workspace. This will allow you to share the configuration with other host applications that accept the same format.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Example JSON block without the MCP key included&lt;/b&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "inputs": [
    {
      "type": "promptString",
      "id": "github_token",
      "description": "GitHub Personal Access Token",
      "password": true
    }
  ],
  "servers": {
    "github": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "GITHUB_PERSONAL_ACCESS_TOKEN",
        "ghcr.io/github/github-mcp-server"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "${input:github_token}"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Install in Other MCP Hosts&lt;/h3&gt; 
&lt;p&gt;For other MCP host applications, please refer to our installation guides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/docs/installation-guides/install-other-copilot-ides.md"&gt;GitHub Copilot in other IDEs&lt;/a&gt;&lt;/strong&gt; - Installation for JetBrains, Visual Studio, Eclipse, and Xcode with GitHub Copilot&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/docs/installation-guides/install-claude.md"&gt;Claude Code &amp;amp; Claude Desktop&lt;/a&gt;&lt;/strong&gt; - Installation guide for Claude Code and Claude Desktop&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/docs/installation-guides/install-cursor.md"&gt;Cursor&lt;/a&gt;&lt;/strong&gt; - Installation guide for Cursor IDE&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/docs/installation-guides/install-gemini-cli.md"&gt;Google Gemini CLI&lt;/a&gt;&lt;/strong&gt; - Installation guide for Google Gemini CLI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/docs/installation-guides/install-windsurf.md"&gt;Windsurf&lt;/a&gt;&lt;/strong&gt; - Installation guide for Windsurf IDE&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For a complete overview of all installation options, see our &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/docs/installation-guides"&gt;Installation Guides Index&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Any host application that supports local MCP servers should be able to access the local GitHub MCP server. However, the specific configuration process, syntax and stability of the integration will vary by host application. While many may follow a similar format to the examples above, this is not guaranteed. Please refer to your host application's documentation for the correct MCP configuration syntax and setup process.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Build from source&lt;/h3&gt; 
&lt;p&gt;If you don't have Docker, you can use &lt;code&gt;go build&lt;/code&gt; to build the binary in the &lt;code&gt;cmd/github-mcp-server&lt;/code&gt; directory, and use the &lt;code&gt;github-mcp-server stdio&lt;/code&gt; command with the &lt;code&gt;GITHUB_PERSONAL_ACCESS_TOKEN&lt;/code&gt; environment variable set to your token. To specify the output location of the build, use the &lt;code&gt;-o&lt;/code&gt; flag. You should configure your server to use the built executable as its &lt;code&gt;command&lt;/code&gt;. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-JSON"&gt;{
  "mcp": {
    "servers": {
      "github": {
        "command": "/path/to/github-mcp-server",
        "args": ["stdio"],
        "env": {
          "GITHUB_PERSONAL_ACCESS_TOKEN": "&amp;lt;YOUR_TOKEN&amp;gt;"
        }
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tool Configuration&lt;/h2&gt; 
&lt;p&gt;The GitHub MCP Server supports enabling or disabling specific groups of functionalities via the &lt;code&gt;--toolsets&lt;/code&gt; flag. This allows you to control which GitHub API capabilities are available to your AI tools. Enabling only the toolsets that you need can help the LLM with tool choice and reduce the context size.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Toolsets are not limited to Tools. Relevant MCP Resources and Prompts are also included where applicable.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;When no toolsets are specified, &lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/#default-toolset"&gt;default toolsets&lt;/a&gt; are used.&lt;/p&gt; 
&lt;h4&gt;Specifying Toolsets&lt;/h4&gt; 
&lt;p&gt;To specify toolsets you want available to the LLM, you can pass an allow-list in two ways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using Command Line Argument&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;github-mcp-server --toolsets repos,issues,pull_requests,actions,code_security
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using Environment Variable&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;GITHUB_TOOLSETS="repos,issues,pull_requests,actions,code_security" ./github-mcp-server
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The environment variable &lt;code&gt;GITHUB_TOOLSETS&lt;/code&gt; takes precedence over the command line argument if both are provided.&lt;/p&gt; 
&lt;h3&gt;Using Toolsets With Docker&lt;/h3&gt; 
&lt;p&gt;When using Docker, you can pass the toolsets as environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -i --rm \
  -e GITHUB_PERSONAL_ACCESS_TOKEN=&amp;lt;your-token&amp;gt; \
  -e GITHUB_TOOLSETS="repos,issues,pull_requests,actions,code_security,experiments" \
  ghcr.io/github/github-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Special toolsets&lt;/h3&gt; 
&lt;h4&gt;"all" toolset&lt;/h4&gt; 
&lt;p&gt;The special toolset &lt;code&gt;all&lt;/code&gt; can be provided to enable all available toolsets regardless of any other configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./github-mcp-server --toolsets all
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or using the environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;GITHUB_TOOLSETS="all" ./github-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;"default" toolset&lt;/h4&gt; 
&lt;p&gt;The default toolset &lt;code&gt;default&lt;/code&gt; is the configuration that gets passed to the server if no toolsets are specified.&lt;/p&gt; 
&lt;p&gt;The default configuration is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;context&lt;/li&gt; 
 &lt;li&gt;repos&lt;/li&gt; 
 &lt;li&gt;issues&lt;/li&gt; 
 &lt;li&gt;pull_requests&lt;/li&gt; 
 &lt;li&gt;users&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To keep the default configuration and add additional toolsets:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;GITHUB_TOOLSETS="default,stargazers" ./github-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Available Toolsets&lt;/h3&gt; 
&lt;p&gt;The following sets of tools are available:&lt;/p&gt; 
&lt;!-- START AUTOMATED TOOLSETS --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Toolset&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;context&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Strongly recommended&lt;/strong&gt;: Tools that provide context about the current user and GitHub context you are operating in&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;actions&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;GitHub Actions workflows and CI/CD operations&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;code_security&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Code security related tools, such as GitHub Code Scanning&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;dependabot&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Dependabot tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;discussions&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;GitHub Discussions related tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;experiments&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Experimental features that are not considered stable yet&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;gists&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;GitHub Gist related tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;issues&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;GitHub Issues related tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;labels&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;GitHub Labels related tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;notifications&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;GitHub Notifications related tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;orgs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;GitHub Organization related tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;projects&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;GitHub Projects related tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;pull_requests&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;GitHub Pull Request related tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;repos&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;GitHub Repository related tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;secret_protection&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Secret protection related tools, such as GitHub Secret Scanning&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;security_advisories&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Security advisories related tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;stargazers&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;GitHub Stargazers related tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;users&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;GitHub User related tools&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!-- END AUTOMATED TOOLSETS --&gt; 
&lt;h3&gt;Additional Toolsets in Remote Github MCP Server&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Toolset&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;copilot&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Copilot related tools (e.g. Copilot Coding Agent)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;copilot_spaces&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Copilot Spaces related tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;github_support_docs_search&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Search docs to answer GitHub product and support questions&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;!-- START AUTOMATED TOOLS --&gt; 
&lt;details&gt; 
 &lt;summary&gt;Actions&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;cancel_workflow_run&lt;/strong&gt; - Cancel workflow run&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;run_id&lt;/code&gt;: The unique identifier of the workflow run (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;delete_workflow_run_logs&lt;/strong&gt; - Delete workflow logs&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;run_id&lt;/code&gt;: The unique identifier of the workflow run (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;download_workflow_run_artifact&lt;/strong&gt; - Download workflow artifact&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;artifact_id&lt;/code&gt;: The unique identifier of the artifact (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_job_logs&lt;/strong&gt; - Get job logs&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;failed_only&lt;/code&gt;: When true, gets logs for all failed jobs in run_id (boolean, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;job_id&lt;/code&gt;: The unique identifier of the workflow job (required for single job logs) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;return_content&lt;/code&gt;: Returns actual log content instead of URLs (boolean, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;run_id&lt;/code&gt;: Workflow run ID (required when using failed_only) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;tail_lines&lt;/code&gt;: Number of lines to return from the end of the log (number, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_workflow_run&lt;/strong&gt; - Get workflow run&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;run_id&lt;/code&gt;: The unique identifier of the workflow run (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_workflow_run_logs&lt;/strong&gt; - Get workflow run logs&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;run_id&lt;/code&gt;: The unique identifier of the workflow run (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_workflow_run_usage&lt;/strong&gt; - Get workflow usage&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;run_id&lt;/code&gt;: The unique identifier of the workflow run (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_workflow_jobs&lt;/strong&gt; - List workflow jobs&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;filter&lt;/code&gt;: Filters jobs by their completed_at timestamp (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;run_id&lt;/code&gt;: The unique identifier of the workflow run (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_workflow_run_artifacts&lt;/strong&gt; - List workflow artifacts&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;run_id&lt;/code&gt;: The unique identifier of the workflow run (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_workflow_runs&lt;/strong&gt; - List workflow runs&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;actor&lt;/code&gt;: Returns someone's workflow runs. Use the login for the user who created the workflow run. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;branch&lt;/code&gt;: Returns workflow runs associated with a branch. Use the name of the branch. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;event&lt;/code&gt;: Returns workflow runs for a specific event type (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;status&lt;/code&gt;: Returns workflow runs with the check run status (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;workflow_id&lt;/code&gt;: The workflow ID or workflow file name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_workflows&lt;/strong&gt; - List workflows&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;rerun_failed_jobs&lt;/strong&gt; - Rerun failed jobs&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;run_id&lt;/code&gt;: The unique identifier of the workflow run (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;rerun_workflow_run&lt;/strong&gt; - Rerun workflow run&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;run_id&lt;/code&gt;: The unique identifier of the workflow run (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;run_workflow&lt;/strong&gt; - Run workflow&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;inputs&lt;/code&gt;: Inputs the workflow accepts (object, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;ref&lt;/code&gt;: The git reference for the workflow. The reference can be a branch or tag name. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;workflow_id&lt;/code&gt;: The workflow ID (numeric) or workflow file name (e.g., main.yml, ci.yaml) (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Code Security&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_code_scanning_alert&lt;/strong&gt; - Get code scanning alert&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;alertNumber&lt;/code&gt;: The number of the alert. (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: The owner of the repository. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: The name of the repository. (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_code_scanning_alerts&lt;/strong&gt; - List code scanning alerts&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: The owner of the repository. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;ref&lt;/code&gt;: The Git reference for the results you want to list. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: The name of the repository. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;severity&lt;/code&gt;: Filter code scanning alerts by severity (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;state&lt;/code&gt;: Filter code scanning alerts by state. Defaults to open (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;tool_name&lt;/code&gt;: The name of the tool used for code scanning. (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Context&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_me&lt;/strong&gt; - Get my user profile&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;No parameters required&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_team_members&lt;/strong&gt; - Get team members&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;org&lt;/code&gt;: Organization login (owner) that contains the team. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;team_slug&lt;/code&gt;: Team slug (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_teams&lt;/strong&gt; - Get teams&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;user&lt;/code&gt;: Username to get teams for. If not provided, uses the authenticated user. (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Dependabot&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_dependabot_alert&lt;/strong&gt; - Get dependabot alert&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;alertNumber&lt;/code&gt;: The number of the alert. (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: The owner of the repository. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: The name of the repository. (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_dependabot_alerts&lt;/strong&gt; - List dependabot alerts&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: The owner of the repository. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: The name of the repository. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;severity&lt;/code&gt;: Filter dependabot alerts by severity (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;state&lt;/code&gt;: Filter dependabot alerts by state. Defaults to open (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Discussions&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_discussion&lt;/strong&gt; - Get discussion&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;discussionNumber&lt;/code&gt;: Discussion Number (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_discussion_comments&lt;/strong&gt; - Get discussion comments&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;after&lt;/code&gt;: Cursor for pagination. Use the endCursor from the previous page's PageInfo for GraphQL APIs. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;discussionNumber&lt;/code&gt;: Discussion Number (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_discussion_categories&lt;/strong&gt; - List discussion categories&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name. If not provided, discussion categories will be queried at the organisation level. (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_discussions&lt;/strong&gt; - List discussions&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;after&lt;/code&gt;: Cursor for pagination. Use the endCursor from the previous page's PageInfo for GraphQL APIs. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;category&lt;/code&gt;: Optional filter by discussion category ID. If provided, only discussions with this category are listed. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;direction&lt;/code&gt;: Order direction. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;orderBy&lt;/code&gt;: Order discussions by field. If provided, the 'direction' also needs to be provided. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name. If not provided, discussions will be queried at the organisation level. (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Gists&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;create_gist&lt;/strong&gt; - Create Gist&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;content&lt;/code&gt;: Content for simple single-file gist creation (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;description&lt;/code&gt;: Description of the gist (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;filename&lt;/code&gt;: Filename for simple single-file gist creation (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;public&lt;/code&gt;: Whether the gist is public (boolean, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_gists&lt;/strong&gt; - List Gists&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;since&lt;/code&gt;: Only gists updated after this time (ISO 8601 timestamp) (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;username&lt;/code&gt;: GitHub username (omit for authenticated user's gists) (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;update_gist&lt;/strong&gt; - Update Gist&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;content&lt;/code&gt;: Content for the file (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;description&lt;/code&gt;: Updated description of the gist (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;filename&lt;/code&gt;: Filename to update or create (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;gist_id&lt;/code&gt;: ID of the gist to update (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Issues&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;add_issue_comment&lt;/strong&gt; - Add comment to issue&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;body&lt;/code&gt;: Comment content (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;issue_number&lt;/code&gt;: Issue number to comment on (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;assign_copilot_to_issue&lt;/strong&gt; - Assign Copilot to issue&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;issueNumber&lt;/code&gt;: Issue number (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_label&lt;/strong&gt; - Get a specific label from a repository.&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: Label name. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (username or organization name) (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;issue_read&lt;/strong&gt; - Get issue details&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;issue_number&lt;/code&gt;: The number of the issue (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;method&lt;/code&gt;: The read operation to perform on a single issue. Options are:&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;ol&gt; 
  &lt;li&gt;get - Get details of a specific issue.&lt;/li&gt; 
  &lt;li&gt;get_comments - Get issue comments.&lt;/li&gt; 
  &lt;li&gt;get_sub_issues - Get sub-issues of the issue.&lt;/li&gt; 
  &lt;li&gt;get_labels - Get labels assigned to the issue. (string, required)&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;owner&lt;/code&gt;: The owner of the repository (string, required)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;repo&lt;/code&gt;: The name of the repository (string, required)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;issue_write&lt;/strong&gt; - Create or update issue.&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;assignees&lt;/code&gt;: Usernames to assign to this issue (string[], optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;body&lt;/code&gt;: Issue body content (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;duplicate_of&lt;/code&gt;: Issue number that this issue is a duplicate of. Only used when state_reason is 'duplicate'. (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;issue_number&lt;/code&gt;: Issue number to update (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;labels&lt;/code&gt;: Labels to apply to this issue (string[], optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;method&lt;/code&gt;: Write operation to perform on a single issue. Options are:&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;'create' - creates a new issue.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;'update' - updates an existing issue. (string, required)&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;milestone&lt;/code&gt;: Milestone number (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;state&lt;/code&gt;: New state (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;state_reason&lt;/code&gt;: Reason for the state change. Ignored unless state is changed. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;title&lt;/code&gt;: Issue title (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;type&lt;/code&gt;: Type of this issue. Only use if the repository has issue types configured. Use list_issue_types tool to get valid type values for the organization. If the repository doesn't support issue types, omit this parameter. (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_issue_types&lt;/strong&gt; - List available issue types&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: The organization owner of the repository (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_issues&lt;/strong&gt; - List issues&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;after&lt;/code&gt;: Cursor for pagination. Use the endCursor from the previous page's PageInfo for GraphQL APIs. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;direction&lt;/code&gt;: Order direction. If provided, the 'orderBy' also needs to be provided. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;labels&lt;/code&gt;: Filter by labels (string[], optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;orderBy&lt;/code&gt;: Order issues by field. If provided, the 'direction' also needs to be provided. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;since&lt;/code&gt;: Filter by date (ISO 8601 timestamp) (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;state&lt;/code&gt;: Filter by state, by default both open and closed issues are returned when not provided (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;search_issues&lt;/strong&gt; - Search issues&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;order&lt;/code&gt;: Sort order (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Optional repository owner. If provided with repo, only issues for this repository are listed. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;query&lt;/code&gt;: Search query using GitHub issues search syntax (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Optional repository name. If provided with owner, only issues for this repository are listed. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sort&lt;/code&gt;: Sort field by number of matches of categories, defaults to best match (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;sub_issue_write&lt;/strong&gt; - Change sub-issue&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;after_id&lt;/code&gt;: The ID of the sub-issue to be prioritized after (either after_id OR before_id should be specified) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;before_id&lt;/code&gt;: The ID of the sub-issue to be prioritized before (either after_id OR before_id should be specified) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;issue_number&lt;/code&gt;: The number of the parent issue (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;method&lt;/code&gt;: The action to perform on a single sub-issue Options are:&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;'add' - add a sub-issue to a parent issue in a GitHub repository.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;'remove' - remove a sub-issue from a parent issue in a GitHub repository.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;'reprioritize' - change the order of sub-issues within a parent issue in a GitHub repository. Use either 'after_id' or 'before_id' to specify the new position. (string, required)&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;replace_parent&lt;/code&gt;: When true, replaces the sub-issue's current parent issue. Use with 'add' method only. (boolean, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sub_issue_id&lt;/code&gt;: The ID of the sub-issue to add. ID is not the same as issue number (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Labels&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_label&lt;/strong&gt; - Get a specific label from a repository.&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: Label name. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (username or organization name) (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;label_write&lt;/strong&gt; - Write operations on repository labels.&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;color&lt;/code&gt;: Label color as 6-character hex code without '#' prefix (e.g., 'f29513'). Required for 'create', optional for 'update'. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;description&lt;/code&gt;: Label description text. Optional for 'create' and 'update'. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;method&lt;/code&gt;: Operation to perform: 'create', 'update', or 'delete' (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: Label name - required for all operations (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;new_name&lt;/code&gt;: New name for the label (used only with 'update' method to rename) (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (username or organization name) (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_label&lt;/strong&gt; - List labels from a repository&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (username or organization name) - required for all operations (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name - required for all operations (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Notifications&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;dismiss_notification&lt;/strong&gt; - Dismiss notification&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;state&lt;/code&gt;: The new state of the notification (read/done) (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;threadID&lt;/code&gt;: The ID of the notification thread (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_notification_details&lt;/strong&gt; - Get notification details&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;notificationID&lt;/code&gt;: The ID of the notification (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_notifications&lt;/strong&gt; - List notifications&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;before&lt;/code&gt;: Only show notifications updated before the given time (ISO 8601 format) (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;filter&lt;/code&gt;: Filter notifications to, use default unless specified. Read notifications are ones that have already been acknowledged by the user. Participating notifications are those that the user is directly involved in, such as issues or pull requests they have commented on or created. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Optional repository owner. If provided with repo, only notifications for this repository are listed. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Optional repository name. If provided with owner, only notifications for this repository are listed. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;since&lt;/code&gt;: Only show notifications updated after the given time (ISO 8601 format) (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;manage_notification_subscription&lt;/strong&gt; - Manage notification subscription&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;action&lt;/code&gt;: Action to perform: ignore, watch, or delete the notification subscription. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;notificationID&lt;/code&gt;: The ID of the notification thread. (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;manage_repository_notification_subscription&lt;/strong&gt; - Manage repository notification subscription&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;action&lt;/code&gt;: Action to perform: ignore, watch, or delete the repository notification subscription. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: The account owner of the repository. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: The name of the repository. (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;mark_all_notifications_read&lt;/strong&gt; - Mark all notifications as read&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;lastReadAt&lt;/code&gt;: Describes the last point that notifications were checked (optional). Default: Now (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Optional repository owner. If provided with repo, only notifications for this repository are marked as read. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Optional repository name. If provided with owner, only notifications for this repository are marked as read. (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Organizations&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;search_orgs&lt;/strong&gt; - Search organizations 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;order&lt;/code&gt;: Sort order (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;query&lt;/code&gt;: Organization search query. Examples: 'microsoft', 'location:california', 'created:&amp;gt;=2025-01-01'. Search is automatically scoped to type:org. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sort&lt;/code&gt;: Sort field by category (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Projects&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;add_project_item&lt;/strong&gt; - Add project item&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;item_id&lt;/code&gt;: The numeric ID of the issue or pull request to add to the project. (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;item_type&lt;/code&gt;: The item's type, either issue or pull_request. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: If owner_type == user it is the handle for the GitHub user account. If owner_type == org it is the name of the organization. The name is not case sensitive. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner_type&lt;/code&gt;: Owner type (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;project_number&lt;/code&gt;: The project's number. (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;delete_project_item&lt;/strong&gt; - Delete project item&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;item_id&lt;/code&gt;: The internal project item ID to delete from the project (not the issue or pull request ID). (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: If owner_type == user it is the handle for the GitHub user account. If owner_type == org it is the name of the organization. The name is not case sensitive. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner_type&lt;/code&gt;: Owner type (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;project_number&lt;/code&gt;: The project's number. (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_project&lt;/strong&gt; - Get project&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: If owner_type == user it is the handle for the GitHub user account. If owner_type == org it is the name of the organization. The name is not case sensitive. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner_type&lt;/code&gt;: Owner type (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;project_number&lt;/code&gt;: The project's number (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_project_field&lt;/strong&gt; - Get project field&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;field_id&lt;/code&gt;: The field's id. (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: If owner_type == user it is the handle for the GitHub user account. If owner_type == org it is the name of the organization. The name is not case sensitive. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner_type&lt;/code&gt;: Owner type (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;project_number&lt;/code&gt;: The project's number. (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_project_item&lt;/strong&gt; - Get project item&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;fields&lt;/code&gt;: Specific list of field IDs to include in the response (e.g. ["102589", "985201", "169875"]). If not provided, only the title field is included. (string[], optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;item_id&lt;/code&gt;: The item's ID. (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: If owner_type == user it is the handle for the GitHub user account. If owner_type == org it is the name of the organization. The name is not case sensitive. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner_type&lt;/code&gt;: Owner type (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;project_number&lt;/code&gt;: The project's number. (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_project_fields&lt;/strong&gt; - List project fields&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: If owner_type == user it is the handle for the GitHub user account. If owner_type == org it is the name of the organization. The name is not case sensitive. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner_type&lt;/code&gt;: Owner type (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;per_page&lt;/code&gt;: Number of results per page (max 100, default: 30) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;project_number&lt;/code&gt;: The project's number. (number, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_project_items&lt;/strong&gt; - List project items&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;fields&lt;/code&gt;: Specific list of field IDs to include in the response (e.g. ["102589", "985201", "169875"]). If not provided, only the title field is included. (string[], optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: If owner_type == user it is the handle for the GitHub user account. If owner_type == org it is the name of the organization. The name is not case sensitive. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner_type&lt;/code&gt;: Owner type (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;per_page&lt;/code&gt;: Number of results per page (max 100, default: 30) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;project_number&lt;/code&gt;: The project's number. (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;query&lt;/code&gt;: Search query to filter items (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_projects&lt;/strong&gt; - List projects&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: If owner_type == user it is the handle for the GitHub user account. If owner_type == org it is the name of the organization. The name is not case sensitive. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner_type&lt;/code&gt;: Owner type (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;per_page&lt;/code&gt;: Number of results per page (max 100, default: 30) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;query&lt;/code&gt;: Filter projects by a search query (matches title and description) (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;update_project_item&lt;/strong&gt; - Update project item&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;item_id&lt;/code&gt;: The unique identifier of the project item. This is not the issue or pull request ID. (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: If owner_type == user it is the handle for the GitHub user account. If owner_type == org it is the name of the organization. The name is not case sensitive. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner_type&lt;/code&gt;: Owner type (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;project_number&lt;/code&gt;: The project's number. (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;updated_field&lt;/code&gt;: Object consisting of the ID of the project field to update and the new value for the field. To clear the field, set value to null. Example: {"id": 123456, "value": "New Value"} (object, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Pull Requests&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;add_comment_to_pending_review&lt;/strong&gt; - Add review comment to the requester's latest pending pull request review&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;body&lt;/code&gt;: The text of the review comment (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;line&lt;/code&gt;: The line of the blob in the pull request diff that the comment applies to. For multi-line comments, the last line of the range (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;path&lt;/code&gt;: The relative path to the file that necessitates a comment (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;pullNumber&lt;/code&gt;: Pull request number (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;side&lt;/code&gt;: The side of the diff to comment on. LEFT indicates the previous state, RIGHT indicates the new state (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;startLine&lt;/code&gt;: For multi-line comments, the first line of the range that the comment applies to (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;startSide&lt;/code&gt;: For multi-line comments, the starting side of the diff that the comment applies to. LEFT indicates the previous state, RIGHT indicates the new state (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;subjectType&lt;/code&gt;: The level at which the comment is targeted (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;create_pull_request&lt;/strong&gt; - Open new pull request&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;base&lt;/code&gt;: Branch to merge into (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;body&lt;/code&gt;: PR description (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;draft&lt;/code&gt;: Create as draft PR (boolean, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;head&lt;/code&gt;: Branch containing changes (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;maintainer_can_modify&lt;/code&gt;: Allow maintainer edits (boolean, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;title&lt;/code&gt;: PR title (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_pull_requests&lt;/strong&gt; - List pull requests&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;base&lt;/code&gt;: Filter by base branch (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;direction&lt;/code&gt;: Sort direction (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;head&lt;/code&gt;: Filter by head user/org and branch (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sort&lt;/code&gt;: Sort by (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;state&lt;/code&gt;: Filter by state (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;merge_pull_request&lt;/strong&gt; - Merge pull request&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;commit_message&lt;/code&gt;: Extra detail for merge commit (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;commit_title&lt;/code&gt;: Title for merge commit (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;merge_method&lt;/code&gt;: Merge method (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;pullNumber&lt;/code&gt;: Pull request number (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;pull_request_read&lt;/strong&gt; - Get details for a single pull request&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;method&lt;/code&gt;: Action to specify what pull request data needs to be retrieved from GitHub. Possible options:&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;ol&gt; 
  &lt;li&gt;get - Get details of a specific pull request.&lt;/li&gt; 
  &lt;li&gt;get_diff - Get the diff of a pull request.&lt;/li&gt; 
  &lt;li&gt;get_status - Get status of a head commit in a pull request. This reflects status of builds and checks.&lt;/li&gt; 
  &lt;li&gt;get_files - Get the list of files changed in a pull request. Use with pagination parameters to control the number of results returned.&lt;/li&gt; 
  &lt;li&gt;get_review_comments - Get the review comments on a pull request. They are comments made on a portion of the unified diff during a pull request review. Use with pagination parameters to control the number of results returned.&lt;/li&gt; 
  &lt;li&gt;get_reviews - Get the reviews on a pull request. When asked for review comments, use get_review_comments method.&lt;/li&gt; 
  &lt;li&gt;get_comments - Get comments on a pull request. Use this if user doesn't specifically want review comments. Use with pagination parameters to control the number of results returned. (string, required)&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;pullNumber&lt;/code&gt;: Pull request number (number, required)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;pull_request_review_write&lt;/strong&gt; - Write operations (create, submit, delete) on pull request reviews.&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;body&lt;/code&gt;: Review comment text (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;commitID&lt;/code&gt;: SHA of commit to review (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;event&lt;/code&gt;: Review action to perform. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;method&lt;/code&gt;: The write operation to perform on pull request review. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;pullNumber&lt;/code&gt;: Pull request number (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;request_copilot_review&lt;/strong&gt; - Request Copilot review&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;pullNumber&lt;/code&gt;: Pull request number (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;search_pull_requests&lt;/strong&gt; - Search pull requests&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;order&lt;/code&gt;: Sort order (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Optional repository owner. If provided with repo, only pull requests for this repository are listed. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;query&lt;/code&gt;: Search query using GitHub pull request search syntax (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Optional repository name. If provided with owner, only pull requests for this repository are listed. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sort&lt;/code&gt;: Sort field by number of matches of categories, defaults to best match (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;update_pull_request&lt;/strong&gt; - Edit pull request&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;base&lt;/code&gt;: New base branch name (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;body&lt;/code&gt;: New description (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;draft&lt;/code&gt;: Mark pull request as draft (true) or ready for review (false) (boolean, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;maintainer_can_modify&lt;/code&gt;: Allow maintainer edits (boolean, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;pullNumber&lt;/code&gt;: Pull request number to update (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;reviewers&lt;/code&gt;: GitHub usernames to request reviews from (string[], optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;state&lt;/code&gt;: New state (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;title&lt;/code&gt;: New title (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;update_pull_request_branch&lt;/strong&gt; - Update pull request branch&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;expectedHeadSha&lt;/code&gt;: The expected SHA of the pull request's HEAD ref (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;pullNumber&lt;/code&gt;: Pull request number (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Repositories&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;create_branch&lt;/strong&gt; - Create branch&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;branch&lt;/code&gt;: Name for new branch (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;from_branch&lt;/code&gt;: Source branch (defaults to repo default) (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;create_or_update_file&lt;/strong&gt; - Create or update file&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;branch&lt;/code&gt;: Branch to create/update the file in (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;content&lt;/code&gt;: Content of the file (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;message&lt;/code&gt;: Commit message (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (username or organization) (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;path&lt;/code&gt;: Path where to create/update the file (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sha&lt;/code&gt;: Required if updating an existing file. The blob SHA of the file being replaced. (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;create_repository&lt;/strong&gt; - Create repository&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;autoInit&lt;/code&gt;: Initialize with README (boolean, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;description&lt;/code&gt;: Repository description (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;organization&lt;/code&gt;: Organization to create the repository in (omit to create in your personal account) (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;private&lt;/code&gt;: Whether repo should be private (boolean, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;delete_file&lt;/strong&gt; - Delete file&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;branch&lt;/code&gt;: Branch to delete the file from (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;message&lt;/code&gt;: Commit message (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (username or organization) (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;path&lt;/code&gt;: Path to the file to delete (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;fork_repository&lt;/strong&gt; - Fork repository&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;organization&lt;/code&gt;: Organization to fork to (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_commit&lt;/strong&gt; - Get commit details&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;include_diff&lt;/code&gt;: Whether to include file diffs and stats in the response. Default is true. (boolean, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sha&lt;/code&gt;: Commit SHA, branch name, or tag name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_file_contents&lt;/strong&gt; - Get file or directory contents&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (username or organization) (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;path&lt;/code&gt;: Path to file/directory (directories must end with a slash '/') (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;ref&lt;/code&gt;: Accepts optional git refs such as &lt;code&gt;refs/tags/{tag}&lt;/code&gt;, &lt;code&gt;refs/heads/{branch}&lt;/code&gt; or &lt;code&gt;refs/pull/{pr_number}/head&lt;/code&gt; (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sha&lt;/code&gt;: Accepts optional commit SHA. If specified, it will be used instead of ref (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_latest_release&lt;/strong&gt; - Get latest release&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_release_by_tag&lt;/strong&gt; - Get a release by tag name&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;tag&lt;/code&gt;: Tag name (e.g., 'v1.0.0') (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_tag&lt;/strong&gt; - Get tag details&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;tag&lt;/code&gt;: Tag name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_branches&lt;/strong&gt; - List branches&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_commits&lt;/strong&gt; - List commits&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;author&lt;/code&gt;: Author username or email address to filter commits by (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sha&lt;/code&gt;: Commit SHA, branch or tag name to list commits of. If not provided, uses the default branch of the repository. If a commit SHA is provided, will list commits up to that SHA. (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_releases&lt;/strong&gt; - List releases&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_tags&lt;/strong&gt; - List tags&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;push_files&lt;/strong&gt; - Push files to repository&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;branch&lt;/code&gt;: Branch to push to (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;files&lt;/code&gt;: Array of file objects to push, each object with path (string) and content (string) (object[], required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;message&lt;/code&gt;: Commit message (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;search_code&lt;/strong&gt; - Search code&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;order&lt;/code&gt;: Sort order for results (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;query&lt;/code&gt;: Search query using GitHub's powerful code search syntax. Examples: 'content:Skill language:Java org:github', 'NOT is:archived language:Python OR language:go', 'repo:github/github-mcp-server'. Supports exact matching, language filters, path filters, and more. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sort&lt;/code&gt;: Sort field ('indexed' only) (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;search_repositories&lt;/strong&gt; - Search repositories&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;minimal_output&lt;/code&gt;: Return minimal repository information (default: true). When false, returns full GitHub API repository objects. (boolean, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;order&lt;/code&gt;: Sort order (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;query&lt;/code&gt;: Repository search query. Examples: 'machine learning in:name stars:&amp;gt;1000 language:python', 'topic:react', 'user:facebook'. Supports advanced search syntax for precise filtering. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sort&lt;/code&gt;: Sort repositories by field, defaults to best match (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Secret Protection&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_secret_scanning_alert&lt;/strong&gt; - Get secret scanning alert&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;alertNumber&lt;/code&gt;: The number of the alert. (number, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: The owner of the repository. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: The name of the repository. (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_secret_scanning_alerts&lt;/strong&gt; - List secret scanning alerts&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: The owner of the repository. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: The name of the repository. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;resolution&lt;/code&gt;: Filter by resolution (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;secret_type&lt;/code&gt;: A comma-separated list of secret types to return. All default secret patterns are returned. To return generic patterns, pass the token name(s) in the parameter. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;state&lt;/code&gt;: Filter by state (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Security Advisories&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_global_security_advisory&lt;/strong&gt; - Get a global security advisory&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;ghsaId&lt;/code&gt;: GitHub Security Advisory ID (format: GHSA-xxxx-xxxx-xxxx). (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_global_security_advisories&lt;/strong&gt; - List global security advisories&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;affects&lt;/code&gt;: Filter advisories by affected package or version (e.g. "package1,package2@1.0.0"). (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;cveId&lt;/code&gt;: Filter by CVE ID. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;cwes&lt;/code&gt;: Filter by Common Weakness Enumeration IDs (e.g. ["79", "284", "22"]). (string[], optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;ecosystem&lt;/code&gt;: Filter by package ecosystem. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;ghsaId&lt;/code&gt;: Filter by GitHub Security Advisory ID (format: GHSA-xxxx-xxxx-xxxx). (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;isWithdrawn&lt;/code&gt;: Whether to only return withdrawn advisories. (boolean, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;modified&lt;/code&gt;: Filter by publish or update date or date range (ISO 8601 date or range). (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;published&lt;/code&gt;: Filter by publish date or date range (ISO 8601 date or range). (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;severity&lt;/code&gt;: Filter by severity. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;type&lt;/code&gt;: Advisory type. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;updated&lt;/code&gt;: Filter by update date or date range (ISO 8601 date or range). (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_org_repository_security_advisories&lt;/strong&gt; - List org repository security advisories&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;direction&lt;/code&gt;: Sort direction. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;org&lt;/code&gt;: The organization login. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sort&lt;/code&gt;: Sort field. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;state&lt;/code&gt;: Filter by advisory state. (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_repository_security_advisories&lt;/strong&gt; - List repository security advisories&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;direction&lt;/code&gt;: Sort direction. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: The owner of the repository. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: The name of the repository. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sort&lt;/code&gt;: Sort field. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;state&lt;/code&gt;: Filter by advisory state. (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Stargazers&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_starred_repositories&lt;/strong&gt; - List starred repositories&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;direction&lt;/code&gt;: The direction to sort the results by. (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sort&lt;/code&gt;: How to sort the results. Can be either 'created' (when the repository was starred) or 'updated' (when the repository was last pushed to). (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;username&lt;/code&gt;: Username to list starred repositories for. Defaults to the authenticated user. (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;star_repository&lt;/strong&gt; - Star repository&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;unstar_repository&lt;/strong&gt; - Unstar repository&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Users&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;search_users&lt;/strong&gt; - Search users 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;order&lt;/code&gt;: Sort order (string, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;page&lt;/code&gt;: Page number for pagination (min 1) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;perPage&lt;/code&gt;: Results per page for pagination (min 1, max 100) (number, optional)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;query&lt;/code&gt;: User search query. Examples: 'john smith', 'location:seattle', 'followers:&amp;gt;100'. Search is automatically scoped to type:user. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;sort&lt;/code&gt;: Sort users by number of followers or repositories, or when the person joined GitHub. (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;!-- END AUTOMATED TOOLS --&gt; 
&lt;h3&gt;Additional Tools in Remote Github MCP Server&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;Copilot&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;create_pull_request_with_copilot&lt;/strong&gt; - Perform task with GitHub Copilot coding agent 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: Repository owner. You can guess the owner, but confirm it with the user before proceeding. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;repo&lt;/code&gt;: Repository name. You can guess the repository name, but confirm it with the user before proceeding. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;problem_statement&lt;/code&gt;: Detailed description of the task to be performed (e.g., 'Implement a feature that does X', 'Fix bug Y', etc.) (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;title&lt;/code&gt;: Title for the pull request that will be created (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;base_ref&lt;/code&gt;: Git reference (e.g., branch) that the agent will start its work from. If not specified, defaults to the repository's default branch (string, optional)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Copilot Spaces&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;get_copilot_space&lt;/strong&gt; - Get Copilot Space&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;owner&lt;/code&gt;: The owner of the space. (string, required)&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: The name of the space. (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;list_copilot_spaces&lt;/strong&gt; - List Copilot Spaces&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;GitHub Support Docs Search&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;github_support_docs_search&lt;/strong&gt; - Retrieve documentation relevant to answer GitHub product and support questions. Support topics include: GitHub Actions Workflows, Authentication, GitHub Support Inquiries, Pull Request Practices, Repository Maintenance, GitHub Pages, GitHub Packages, GitHub Discussions, Copilot Spaces 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;query&lt;/code&gt;: Input from the user about the question they need answered. This is the latest raw unedited user message. You should ALWAYS leave the user message as it is, you should never modify it. (string, required)&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Dynamic Tool Discovery&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This feature is currently in beta and may not be available in all environments. Please test it out and let us know if you encounter any issues.&lt;/p&gt; 
&lt;p&gt;Instead of starting with all tools enabled, you can turn on dynamic toolset discovery. Dynamic toolsets allow the MCP host to list and enable toolsets in response to a user prompt. This should help to avoid situations where the model gets confused by the sheer number of tools available.&lt;/p&gt; 
&lt;h3&gt;Using Dynamic Tool Discovery&lt;/h3&gt; 
&lt;p&gt;When using the binary, you can pass the &lt;code&gt;--dynamic-toolsets&lt;/code&gt; flag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./github-mcp-server --dynamic-toolsets
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When using Docker, you can pass the toolsets as environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -i --rm \
  -e GITHUB_PERSONAL_ACCESS_TOKEN=&amp;lt;your-token&amp;gt; \
  -e GITHUB_DYNAMIC_TOOLSETS=1 \
  ghcr.io/github/github-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Read-Only Mode&lt;/h2&gt; 
&lt;p&gt;To run the server in read-only mode, you can use the &lt;code&gt;--read-only&lt;/code&gt; flag. This will only offer read-only tools, preventing any modifications to repositories, issues, pull requests, etc.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./github-mcp-server --read-only
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When using Docker, you can pass the read-only mode as an environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -i --rm \
  -e GITHUB_PERSONAL_ACCESS_TOKEN=&amp;lt;your-token&amp;gt; \
  -e GITHUB_READ_ONLY=1 \
  ghcr.io/github/github-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;i18n / Overriding Descriptions&lt;/h2&gt; 
&lt;p&gt;The descriptions of the tools can be overridden by creating a &lt;code&gt;github-mcp-server-config.json&lt;/code&gt; file in the same directory as the binary.&lt;/p&gt; 
&lt;p&gt;The file should contain a JSON object with the tool names as keys and the new descriptions as values. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "TOOL_ADD_ISSUE_COMMENT_DESCRIPTION": "an alternative description",
  "TOOL_CREATE_BRANCH_DESCRIPTION": "Create a new branch in a GitHub repository"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can create an export of the current translations by running the binary with the &lt;code&gt;--export-translations&lt;/code&gt; flag.&lt;/p&gt; 
&lt;p&gt;This flag will preserve any translations/overrides you have made, while adding any new translations that have been added to the binary since the last time you exported.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./github-mcp-server --export-translations
cat github-mcp-server-config.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use ENV vars to override the descriptions. The environment variable names are the same as the keys in the JSON file, prefixed with &lt;code&gt;GITHUB_MCP_&lt;/code&gt; and all uppercase.&lt;/p&gt; 
&lt;p&gt;For example, to override the &lt;code&gt;TOOL_ADD_ISSUE_COMMENT_DESCRIPTION&lt;/code&gt; tool, you can set the following environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export GITHUB_MCP_TOOL_ADD_ISSUE_COMMENT_DESCRIPTION="an alternative description"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Library Usage&lt;/h2&gt; 
&lt;p&gt;The exported Go API of this module should currently be considered unstable, and subject to breaking changes. In the future, we may offer stability; please file an issue if there is a use case where this would be valuable.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the MIT open source license. Please refer to &lt;a href="https://raw.githubusercontent.com/github/github-mcp-server/main/LICENSE"&gt;MIT&lt;/a&gt; for the full terms.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>navidrome/navidrome</title>
      <link>https://github.com/navidrome/navidrome</link>
      <description>&lt;p&gt;üéß‚òÅÔ∏è Your Personal Streaming Service&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://www.navidrome.org"&gt;&lt;img src="https://raw.githubusercontent.com/navidrome/navidrome/master/resources/logo-192x192.png" alt="Navidrome logo" title="navidrome" align="right" height="60px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Navidrome Music Server &amp;nbsp;&lt;a href="https://twitter.com/intent/tweet?text=Tired%20of%20paying%20for%20music%20subscriptions%2C%20and%20not%20finding%20what%20you%20really%20like%3F%20Roll%20your%20own%20streaming%20service%21&amp;amp;url=https://navidrome.org&amp;amp;via=navidrome"&gt;&lt;img src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" alt="Tweet" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/navidrome/navidrome/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/navidrome/navidrome?logo=github&amp;amp;label=latest&amp;amp;style=flat-square" alt="Last Release" /&gt;&lt;/a&gt; &lt;a href="https://nightly.link/navidrome/navidrome/workflows/pipeline/master"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/navidrome/navidrome/pipeline.yml?branch=master&amp;amp;logo=github&amp;amp;style=flat-square" alt="Build" /&gt;&lt;/a&gt; &lt;a href="https://github.com/navidrome/navidrome/releases/latest"&gt;&lt;img src="https://img.shields.io/github/downloads/navidrome/navidrome/total?logo=github&amp;amp;style=flat-square" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/deluan/navidrome"&gt;&lt;img src="https://img.shields.io/docker/pulls/deluan/navidrome?logo=docker&amp;amp;label=pulls&amp;amp;style=flat-square" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/xh7j7yF"&gt;&lt;img src="https://img.shields.io/discord/671335427726114836?logo=discord&amp;amp;label=discord&amp;amp;style=flat-square" alt="Dev Chat" /&gt;&lt;/a&gt; &lt;a href="https://www.reddit.com/r/navidrome/"&gt;&lt;img src="https://img.shields.io/reddit/subreddit-subscribers/navidrome?logo=reddit&amp;amp;label=/r/navidrome&amp;amp;style=flat-square" alt="Subreddit" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/navidrome/navidrome/master/CODE_OF_CONDUCT.md"&gt;&lt;img src="https://img.shields.io/badge/Contributor%20Covenant-v2.0-ff69b4.svg?style=flat-square" alt="Contributor Covenant" /&gt;&lt;/a&gt; &lt;a href="https://gurubase.io/g/navidrome"&gt;&lt;img src="https://img.shields.io/badge/Gurubase-Ask%20Navidrome%20Guru-006BFF?style=flat-square" alt="Gurubase" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Navidrome is an open source web-based music collection server and streamer. It gives you freedom to listen to your music collection from any browser or mobile device. It's like your personal Spotify!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;master&lt;/code&gt; branch may be in an unstable or even broken state during development. Please use &lt;a href="https://github.com/navidrome/navidrome/releases"&gt;releases&lt;/a&gt; instead of the &lt;code&gt;master&lt;/code&gt; branch in order to get a stable set of binaries.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://www.navidrome.org/demo/"&gt;Check out our Live Demo!&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Any feedback is welcome!&lt;/strong&gt; If you need/want a new feature, find a bug or think of any way to improve Navidrome, please file a &lt;a href="https://github.com/navidrome/navidrome/issues"&gt;GitHub issue&lt;/a&gt; or join the discussion in our &lt;a href="https://www.reddit.com/r/navidrome/"&gt;Subreddit&lt;/a&gt;. If you want to contribute to the project in any other way (&lt;a href="https://www.navidrome.org/docs/developers/"&gt;ui/backend dev&lt;/a&gt;, &lt;a href="https://www.navidrome.org/docs/developers/translations/"&gt;translations&lt;/a&gt;, &lt;a href="https://www.navidrome.org/docs/developers/creating-themes"&gt;themes&lt;/a&gt;), please join the chat in our &lt;a href="https://discord.gg/xh7j7yF"&gt;Discord server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;See instructions on the &lt;a href="https://www.navidrome.org/docs/installation/"&gt;project's website&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Cloud Hosting&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.pikapods.com"&gt;PikaPods&lt;/a&gt; has partnered with us to offer you an &lt;a href="https://www.navidrome.org/docs/installation/managed/#pikapods"&gt;officially supported, cloud-hosted solution&lt;/a&gt;. A share of the revenue helps fund the development of Navidrome at no additional cost for you.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.pikapods.com/pods?run=navidrome"&gt;&lt;img src="https://www.pikapods.com/static/run-button.svg?sanitize=true" alt="PikaPods" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Handles very &lt;strong&gt;large music collections&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Streams virtually &lt;strong&gt;any audio format&lt;/strong&gt; available&lt;/li&gt; 
 &lt;li&gt;Reads and uses all your beautifully curated &lt;strong&gt;metadata&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Great support for &lt;strong&gt;compilations&lt;/strong&gt; (Various Artists albums) and &lt;strong&gt;box sets&lt;/strong&gt; (multi-disc albums)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt;, each user has their own play counts, playlists, favourites, etc...&lt;/li&gt; 
 &lt;li&gt;Very &lt;strong&gt;low resource usage&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-platform&lt;/strong&gt;, runs on macOS, Linux and Windows. &lt;strong&gt;Docker&lt;/strong&gt; images are also provided&lt;/li&gt; 
 &lt;li&gt;Ready to use binaries for all major platforms, including &lt;strong&gt;Raspberry Pi&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Automatically &lt;strong&gt;monitors your library&lt;/strong&gt; for changes, importing new files and reloading new metadata&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Themeable&lt;/strong&gt;, modern and responsive &lt;strong&gt;Web interface&lt;/strong&gt; based on &lt;a href="https://material-ui.com"&gt;Material UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compatible&lt;/strong&gt; with all Subsonic/Madsonic/Airsonic &lt;a href="https://www.navidrome.org/docs/overview/#apps"&gt;clients&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Transcoding&lt;/strong&gt; on the fly. Can be set per user/player. &lt;strong&gt;Opus encoding is supported&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Translated to &lt;strong&gt;various languages&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;Navidrome uses &lt;a href="https://poeditor.com/"&gt;POEditor&lt;/a&gt; for translations, and we are always looking for &lt;a href="https://www.navidrome.org/docs/developers/translations/"&gt;more contributors&lt;/a&gt;&lt;/p&gt; 
&lt;a href="https://poeditor.com/"&gt; &lt;img height="32" src="https://github.com/user-attachments/assets/c19b1d2b-01e1-4682-a007-12356c42147c" /&gt; &lt;/a&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;All documentation can be found in the project's website: &lt;a href="https://www.navidrome.org/docs"&gt;https://www.navidrome.org/docs&lt;/a&gt;. Here are some useful direct links:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.navidrome.org/docs/overview/"&gt;Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.navidrome.org/docs/installation/"&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.navidrome.org/docs/installation/docker/"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.navidrome.org/docs/installation/pre-built-binaries/"&gt;Binaries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.navidrome.org/docs/installation/build-from-source/"&gt;Build from source&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.navidrome.org/docs/developers/"&gt;Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.navidrome.org/docs/developers/subsonic-api/"&gt;Subsonic API Compatibility&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p align="left"&gt; &lt;img height="550" src="https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-mobile-login.png" /&gt; &lt;img height="550" src="https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-mobile-player.png" /&gt; &lt;img height="550" src="https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-mobile-album-view.png" /&gt; &lt;img width="550" src="https://raw.githubusercontent.com/navidrome/navidrome/master/.github/screenshots/ss-desktop-player.png" /&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>terrastruct/d2</title>
      <link>https://github.com/terrastruct/d2</link>
      <description>&lt;p&gt;D2 is a modern diagram scripting language that turns text to diagrams.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/terrastruct/d2/master/docs/assets/banner.png" alt="D2" /&gt; 
 &lt;h2&gt; A modern diagram scripting language that turns text to diagrams. &lt;/h2&gt; 
 &lt;p&gt;&lt;a href="https://d2lang.com"&gt;Docs&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/docs/assets/cheat_sheet.pdf"&gt;Cheat sheet&lt;/a&gt; | &lt;a href="https://text-to-diagram.com"&gt;Comparisons&lt;/a&gt; | &lt;a href="https://play.d2lang.com"&gt;Playground&lt;/a&gt; | &lt;a href="https://d2studio.ai"&gt;IDE&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/terrastruct/d2/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/terrastruct/d2/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="ci" /&gt;&lt;/a&gt; &lt;a href="https://github.com/terrastruct/d2/actions/workflows/daily.yml"&gt;&lt;img src="https://github.com/terrastruct/d2/actions/workflows/daily.yml/badge.svg?sanitize=true" alt="daily" /&gt;&lt;/a&gt; &lt;a href="https://github.com/terrastruct/d2/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/terrastruct/d2" alt="release" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/CHANGELOG.md"&gt;&lt;img src="https://img.shields.io/badge/changelog-read-blue" alt="changelog" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@terrastruct/d2"&gt;&lt;img src="https://img.shields.io/npm/v/@terrastruct/d2" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/NF6X8K4eDq"&gt;&lt;img src="https://img.shields.io/discord/1039184639652265985?label=discord" alt="discord" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/terrastruct"&gt;&lt;img src="https://img.shields.io/twitter/follow/terrastruct?style=social" alt="twitter" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/github/license/terrastruct/d2?color=9cf" alt="license" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;a href="https://play.d2lang.com"&gt; &lt;img src="https://raw.githubusercontent.com/terrastruct/d2/master/docs/assets/playground_button.png" alt="D2 Playground button" width="200" /&gt; &lt;/a&gt; 
 &lt;a href="https://d2studio.ai"&gt; &lt;img src="https://raw.githubusercontent.com/terrastruct/d2/master/docs/assets/studio_button.png" alt="D2 Studio button" width="200" /&gt; &lt;/a&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/3120367/206125010-bd1fea8e-248a-43e7-8f85-0bbfca0c6e2a.mp4"&gt;https://user-images.githubusercontent.com/3120367/206125010-bd1fea8e-248a-43e7-8f85-0bbfca0c6e2a.mp4&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;!-- toc --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#what-does-d2-look-like"&gt;What does D2 look like?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#quickstart"&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#install"&gt;Install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#d2-as-a-library"&gt;D2 as a library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#themes"&gt;Themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#fonts"&gt;Fonts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#export-file-types"&gt;Export file types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#language-tooling"&gt;Language tooling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#plugins"&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#comparison"&gt;Comparison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#related"&gt;Related&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#official-plugins"&gt;Official plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#community-plugins"&gt;Community plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#misc"&gt;Misc&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#notable-open-source-projects-documenting-with-d2"&gt;Notable open-source projects documenting with D2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What does D2 look like?&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-d2"&gt;vars: {
  d2-config: {
    layout-engine: elk
    # Terminal theme code
    theme-id: 300
  }
}
network: {
  cell tower: {
    satellites: {
      shape: stored_data
      style.multiple: true
    }

    transmitter

    satellites -&amp;gt; transmitter: send
    satellites -&amp;gt; transmitter: send
    satellites -&amp;gt; transmitter: send
  }

  online portal: {
    ui: {shape: hexagon}
  }

  data processor: {
    storage: {
      shape: cylinder
      style.multiple: true
    }
  }

  cell tower.transmitter -&amp;gt; data processor.storage: phone logs
}

user: {
  shape: person
  width: 130
}

user -&amp;gt; network.cell tower: make call
user -&amp;gt; network.online portal.ui: access {
  style.stroke-dash: 3
}

api server -&amp;gt; network.online portal.ui: display
api server -&amp;gt; logs: persist
logs: {shape: page; style.multiple: true}

network.data processor -&amp;gt; api server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p align="center"&gt; &lt;img width="400px" src="https://raw.githubusercontent.com/terrastruct/d2/master/docs/assets/example.svg?sanitize=true" alt="D2 render example" /&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Open in &lt;a href="https://play.d2lang.com/?script=rVLLTsQwDLznKyJxbrWwtyLxFdyR1Zg2ahpHibvLCvXfcdqGfSHthVv8yIxn7APE1OhvpbV5qVryn7ZbQ60dnGjiCn1nPTYa3bCkn_Q7xtF6cJp7HFG3ZHCpLGFlTaP3u51kZjUrj3ykOKyYLTr5REeMhSMBS84yppKRXA9B-BJTRPNhgKEU-OSwHifHNjjp4DitxLNa-SP4NFpmjOoGXVdvl2VBR2_-sWeZgLwTp3SgyOCKnsnKa5PU4xd05OfyIWvTIVKLKdHZExEOHd4Z0p4E3oi2h25s8Ge764uZs4Rr4vqXMfQkAhx1SVanplQWtU0QMCbyEh-t4b7Rz_td6cuo267ryzWPMMiFgHN3XVdu1dkmaPM8K-EiLnGkASsDScj2mQqCFcvj4RGUsSnI_d70Z2GrCptYrVHZTRADXv80VWgL0bVvGfJMoH4A"&gt;playground&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For more examples, see &lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/docs/examples"&gt;./docs/examples&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;The most convenient way to use D2 is to just run it as a CLI executable to produce SVGs from &lt;code&gt;.d2&lt;/code&gt; files.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# First, install D2
curl -fsSL https://d2lang.com/install.sh | sh -s --

echo 'x -&amp;gt; y -&amp;gt; z' &amp;gt; in.d2
d2 --watch in.d2 out.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A browser window will open with &lt;code&gt;out.svg&lt;/code&gt; and live-reload on changes to &lt;code&gt;in.d2&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;The easiest way to install is with our install script:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -fsSL https://d2lang.com/install.sh | sh -s --
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can run the install script with &lt;code&gt;--dry-run&lt;/code&gt; to see the commands that will be used to install without executing them.&lt;/p&gt; 
&lt;p&gt;Or if you have Go installed you can install from source though you won't get the manpage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go install oss.terrastruct.com/d2@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install a release from source which will include manpages. See &lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/docs/INSTALL.md#source-release"&gt;./docs/INSTALL.md#source-release&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To uninstall with the install script:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -fsSL https://d2lang.com/install.sh | sh -s -- --uninstall
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For detailed installation docs, see &lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/docs/INSTALL.md"&gt;./docs/INSTALL.md&lt;/a&gt;. We demonstrate alternative methods and examples for each OS.&lt;/p&gt; 
&lt;p&gt;As well, the functioning of the install script is described in detail to alleviate any concern of its use. We recommend using your OS's package manager directly instead for improved security but the install script is by no means insecure.&lt;/p&gt; 
&lt;h2&gt;D2 as a library&lt;/h2&gt; 
&lt;p&gt;In addition to being a runnable CLI tool, D2 can also be used to produce diagrams from Go programs.&lt;/p&gt; 
&lt;p&gt;For examples, see &lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/docs/examples/lib"&gt;./docs/examples/lib&lt;/a&gt;. This &lt;a href="https://terrastruct.com/blog/post/generate-diagrams-programmatically/"&gt;blog post&lt;/a&gt; also demos a complete, runnable example of using D2 as a library for a real-world use case.&lt;/p&gt; 
&lt;h2&gt;Themes&lt;/h2&gt; 
&lt;p&gt;D2 includes a variety of official themes to style your diagrams beautifully right out of the box. See &lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/d2themes"&gt;./d2themes&lt;/a&gt; to browse the available themes and make or contribute your own creation.&lt;/p&gt; 
&lt;h2&gt;Fonts&lt;/h2&gt; 
&lt;p&gt;D2 ships with "Source Sans Pro" as the font in renders. If you wish to use a different one, please see &lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/d2renderers/d2fonts"&gt;./d2renderers/d2fonts&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Export file types&lt;/h2&gt; 
&lt;p&gt;D2 currently supports SVG, PNG and PDF exports. More coming soon.&lt;/p&gt; 
&lt;h2&gt;Language tooling&lt;/h2&gt; 
&lt;p&gt;D2 is designed with language tooling in mind. D2's parser can parse multiple errors from a broken program, has an autoformatter, syntax highlighting, and we have plans for LSP's and more. Good language tooling is necessary for creating and maintaining large diagrams.&lt;/p&gt; 
&lt;p&gt;The extensions for VSCode and Vim can be found in the &lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/#related"&gt;Related&lt;/a&gt; section.&lt;/p&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;p&gt;D2 is designed to be extensible and composable. The plugin system allows you to change out layout engines and customize the rendering pipeline. Plugins can either be bundled with the build or separately installed as a standalone binary.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Layout engines&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dagrejs/dagre"&gt;dagre&lt;/a&gt; (default, bundled): A fast, directed graph layout engine that produces layered/hierarchical layouts. Based on Graphviz's DOT algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kieler/elkjs"&gt;ELK&lt;/a&gt; (bundled): A directed graph layout engine particularly suited for node-link diagrams with an inherent direction and ports.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terrastruct/TALA"&gt;TALA&lt;/a&gt; (binary): Novel layout engine designed specifically for software architecture diagrams. Requires separate install, visit the Github page for more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;D2 intends to integrate with a variety of layout engines, e.g. &lt;code&gt;dot&lt;/code&gt;, as well as single-purpose layout types like sequence diagrams. You can choose whichever layout engine you like and works best for the diagram you're making.&lt;/p&gt; 
&lt;h2&gt;Comparison&lt;/h2&gt; 
&lt;p&gt;For a comparison against other popular text-to-diagram tools, see &lt;a href="https://text-to-diagram.com"&gt;https://text-to-diagram.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! See &lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/docs/CONTRIBUTING.md"&gt;./docs/CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Open sourced under the Mozilla Public License 2.0. See &lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/LICENSE.txt"&gt;./LICENSE.txt&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;p&gt;We are constantly working on new plugins, integrations, extensions. Contributions are welcome in any official or community plugins. If you have somewhere in your workflow that you want to use D2, feel free to open a discussion. We have limited bandwidth and usually choose the most high-demand ones to work on. If you make something cool with D2 yourself, let us know and we'll be happy to include it here!&lt;/p&gt; 
&lt;h3&gt;Official plugins&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;VSCode extension&lt;/strong&gt;: &lt;a href="https://github.com/terrastruct/d2-vscode"&gt;https://github.com/terrastruct/d2-vscode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vim extension&lt;/strong&gt;: &lt;a href="https://github.com/terrastruct/d2-vim"&gt;https://github.com/terrastruct/d2-vim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Obsidian plugin&lt;/strong&gt;: &lt;a href="https://github.com/terrastruct/d2-obsidian"&gt;https://github.com/terrastruct/d2-obsidian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Slack app&lt;/strong&gt;: &lt;a href="https://d2lang.com/tour/slack"&gt;https://d2lang.com/tour/slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Discord plugin&lt;/strong&gt;: &lt;a href="https://d2lang.com/tour/discord"&gt;https://d2lang.com/tour/discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community plugins&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Tree-sitter grammar&lt;/strong&gt;: &lt;a href="https://github.com/ravsii/tree-sitter-d2"&gt;https://github.com/ravsii/tree-sitter-d2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Emacs major mode&lt;/strong&gt;: &lt;a href="https://github.com/andorsk/d2-mode"&gt;https://github.com/andorsk/d2-mode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Goldmark extension&lt;/strong&gt;: &lt;a href="https://github.com/FurqanSoftware/goldmark-d2"&gt;https://github.com/FurqanSoftware/goldmark-d2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Telegram bot&lt;/strong&gt;: &lt;a href="https://github.com/meinside/telegram-d2-bot"&gt;https://github.com/meinside/telegram-d2-bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Postgres importer&lt;/strong&gt;: &lt;a href="https://github.com/zekenie/d2-erd-from-postgres"&gt;https://github.com/zekenie/d2-erd-from-postgres&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Structurizr to D2 exporter&lt;/strong&gt;: &lt;a href="https://github.com/goto1134/structurizr-d2-exporter"&gt;https://github.com/goto1134/structurizr-d2-exporter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MdBook preprocessor&lt;/strong&gt;: &lt;a href="https://github.com/danieleades/mdbook-d2"&gt;https://github.com/danieleades/mdbook-d2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ROS2 D2 Exporter&lt;/strong&gt;: &lt;a href="https://github.com/Greenroom-Robotics/ros-d2"&gt;https://github.com/Greenroom-Robotics/ros-d2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;D2 org-mode support&lt;/strong&gt;: &lt;a href="https://github.com/xcapaldi/ob-d2"&gt;https://github.com/xcapaldi/ob-d2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Python D2 diagram builder&lt;/strong&gt;: &lt;a href="https://github.com/MrBlenny/py-d2"&gt;https://github.com/MrBlenny/py-d2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Clojure D2 transpiler&lt;/strong&gt;: &lt;a href="https://github.com/judepayne/dictim"&gt;https://github.com/judepayne/dictim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JavaScript D2 diagram builder&lt;/strong&gt;: &lt;a href="https://github.com/Kreshnik/d2lang-js"&gt;https://github.com/Kreshnik/d2lang-js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;C# &amp;amp; dotnet SDK&lt;/strong&gt;: &lt;a href="https://github.com/Stephanvs/d2lang-cs"&gt;https://github.com/Stephanvs/d2lang-cs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Maven plugin&lt;/strong&gt;: &lt;a href="https://github.com/andrinmeier/unofficial-d2lang-maven-plugin"&gt;https://github.com/andrinmeier/unofficial-d2lang-maven-plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Confluence plugin&lt;/strong&gt;: &lt;a href="https://github.com/andrinmeier/unofficial-d2lang-confluence-plugin"&gt;https://github.com/andrinmeier/unofficial-d2lang-confluence-plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CIL (C#, Visual Basic, F#, C++ CLR) to D2&lt;/strong&gt;: &lt;a href="https://github.com/HugoVG/AppDiagram"&gt;https://github.com/HugoVG/AppDiagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;D2 Snippets (for text editors)&lt;/strong&gt;: &lt;a href="https://github.com/Paracelsus-Rose/D2-Language-Code-Snippets"&gt;https://github.com/Paracelsus-Rose/D2-Language-Code-Snippets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mongo to D2&lt;/strong&gt;: &lt;a href="https://github.com/novuhq/mongo-to-D2"&gt;https://github.com/novuhq/mongo-to-D2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pandoc filter (TypeScript)&lt;/strong&gt;: &lt;a href="https://github.com/ram02z/d2-filter"&gt;https://github.com/ram02z/d2-filter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pandoc filter (Python)&lt;/strong&gt;: &lt;a href="https://github.com/fliiiix/pandoc-d2-filter"&gt;https://github.com/fliiiix/pandoc-d2-filter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Logseq-D2&lt;/strong&gt;: &lt;a href="https://github.com/b-yp/logseq-d2"&gt;https://github.com/b-yp/logseq-d2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ent2d2&lt;/strong&gt;: &lt;a href="https://github.com/tmc/ent2d2"&gt;https://github.com/tmc/ent2d2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MkDocs Plugin&lt;/strong&gt;: &lt;a href="https://github.com/landmaj/mkdocs-d2-plugin"&gt;https://github.com/landmaj/mkdocs-d2-plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Remark Plugin&lt;/strong&gt;: &lt;a href="https://github.com/mech-a/remark-d2"&gt;https://github.com/mech-a/remark-d2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VitePress Plugin&lt;/strong&gt;: &lt;a href="https://github.com/BadgerHobbs/vitepress-plugin-d2"&gt;https://github.com/BadgerHobbs/vitepress-plugin-d2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zed extension&lt;/strong&gt;: &lt;a href="https://github.com/gabeidx/zed-d2"&gt;https://github.com/gabeidx/zed-d2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hexo blog extension&lt;/strong&gt;: &lt;a href="https://github.com/leverimmy/hexo-d2"&gt;https://github.com/leverimmy/hexo-d2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rehype Plugin&lt;/strong&gt;: &lt;a href="https://github.com/stereobooster/beoe/tree/main/packages/rehype-d2"&gt;https://github.com/stereobooster/beoe/tree/main/packages/rehype-d2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AsyncAPI to D2&lt;/strong&gt;: &lt;a href="https://github.com/holydocs/messageflow"&gt;https://github.com/holydocs/messageflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Database Schemas to D2&lt;/strong&gt;: &lt;a href="https://github.com/holydocs/dberd"&gt;https://github.com/holydocs/dberd&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Misc&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Comparison site&lt;/strong&gt;: &lt;a href="https://github.com/terrastruct/text-to-diagram-site"&gt;https://github.com/terrastruct/text-to-diagram-site&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Playground&lt;/strong&gt;: &lt;a href="https://github.com/terrastruct/d2-playground"&gt;https://github.com/terrastruct/d2-playground&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;IDE (paid)&lt;/strong&gt;: &lt;a href="https://d2studio.ai"&gt;https://d2studio.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Language docs&lt;/strong&gt;: &lt;a href="https://github.com/terrastruct/d2-docs"&gt;https://github.com/terrastruct/d2-docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hosted icons&lt;/strong&gt;: &lt;a href="https://icons.terrastruct.com"&gt;https://icons.terrastruct.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Does D2 collect telemetry? 
  &lt;ul&gt; 
   &lt;li&gt;No, D2 does not use an internet connection after installation, except to check for version updates from Github periodically.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Does D2 need a browser to run? 
  &lt;ul&gt; 
   &lt;li&gt;No, D2 can run entirely server-side.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;What's coming in the next release? 
  &lt;ul&gt; 
   &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/ci/release/changelogs/next.md"&gt;./ci/release/changelogs/next.md&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;I have a question or need help. 
  &lt;ul&gt; 
   &lt;li&gt;The best way to get help is to ask on &lt;a href="https://discord.gg/NF6X8K4eDq"&gt;D2 Discord&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;I have a feature request, proposal, or bug report. 
  &lt;ul&gt; 
   &lt;li&gt;Please open up a Github Issue.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;I have a private inquiry. 
  &lt;ul&gt; 
   &lt;li&gt;Please reach out at &lt;a href="https://raw.githubusercontent.com/terrastruct/d2/master/hi@d2lang.com"&gt;hi@d2lang.com&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Notable open-source projects documenting with D2&lt;/h2&gt; 
&lt;p&gt;Do you have or see an open-source project with &lt;code&gt;.d2&lt;/code&gt; files? Please submit a PR adding to this selected list of featured projects using D2.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elastic/beats/raw/main/libbeat/publisher/queue/proxy/diagrams/broker.d2"&gt;ElasticSearch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://handbook.sourcegraph.com/departments/engineering/managed-services/telemetry-gateway/#dev-architecture-diagram"&gt;Sourcegraph&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/temporalio/temporal/raw/0be2681c994470c7c61ea88e4fcef89bb4024e58/docs/_assets/matching-context.d2"&gt;Temporal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://v2.tauri.app/concept/inter-process-communication/"&gt;Tauri&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Rust GUI framework (78.5k stars)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JetBrains/intellij-community/raw/45bcfc17a3f3e0d8548bc69e922d4ca97ac21b2b/platform/settings/docs/topics/overview.md"&gt;Intellij&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://coder.com/blog/managing-templates-in-coder"&gt;Coder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ucb-bar/hammer/raw/2b5c04d7b7d9ee3c73575efcd7ee0698bd5bfa88/doc/Hammer-Use/hier.d2"&gt;UC Berkeley&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/minvws/nl-covid19-coronacheck-app-ios/raw/e1567e9d1633b3273c537a105bff0e7d3a57ecfe/Diagrams/client-side-datamodel.d2"&gt;Coronacheck&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Official app of the Netherlands for coronavirus entry passes.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blockprotocol/blockprotocol/raw/db4cf8d422b881e52113aa52467d53115270e2b3/libs/%40blockprotocol/type-system/crate/assets/overview.d2"&gt;Block Protocol&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;The Block Protocol is an open standard for building and using data-driven blocks (1.2k stars).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dagger/dagger/tree/main/cmd/dagger-graph"&gt;Dagger&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;A programmable CI/CD engine that runs your pipelines in containers (8k stars).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ivy-Apps/ivy-wallet/raw/8062624bfa65175ec143cdc4038de27a84d38b57/assets/calc_algo.d2"&gt;Ivy Wallet&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Open-source money manager app for Android (1.1k stars).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.localstack.cloud/references/network-troubleshooting/"&gt;LocalStack&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Cloud service emulator (46k stars)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang-queue/queue/tree/master/images"&gt;Queue Library&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Queue is a Golang library for spawning and managing a Goroutine pool&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>JanDeDobbeleer/oh-my-posh</title>
      <link>https://github.com/JanDeDobbeleer/oh-my-posh</link>
      <description>&lt;p&gt;The most customisable and low-latency cross platform/shell prompt renderer&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img width="400" src="https://raw.githubusercontent.com/jandedobbeleer/oh-my-posh/main/website/static/img/logo.png" alt="Oh My Posh logo ‚Äì Prompt theme engine for any shell" /&gt; &lt;/p&gt; 
&lt;!-- markdownlint-enable --&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/license/JanDeDobbeleer/oh-my-posh.svg?sanitize=true" alt="MIT license badge" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/jandedobbeleer/oh-my-posh/release.yml?branch=main" alt="Build Status badge" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/jandedobbeleer/oh-my-posh?label=Release" alt="Release version number badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://ohmyposh.dev"&gt;&lt;img src="https://img.shields.io/badge/Docs-ohmyposh.dev-blue" alt="Documentation link badge ohmyposh.dev" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/downloads/jandedobbeleer/oh-my-posh/total?color=pink&amp;amp;label=GitHub%20Downloads" alt="Number of GitHub Downloads badge" /&gt;&lt;/p&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;div align="center" markdown="1"&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.warp.dev/oh-my-posh"&gt; &lt;img alt="Warp sponsorship" width="400" src="https://github.com/user-attachments/assets/c21102f7-bab9-4344-a731-0cf6b341cab2" /&gt; &lt;/a&gt; 
 &lt;h3&gt;&lt;a href="https://www.warp.dev/oh-my-posh"&gt;Warp, the intelligent terminal for developers&lt;/a&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;a href="https://www.warp.dev/oh-my-posh"&gt;Available for MacOS, Linux, &amp;amp; Windows&lt;/a&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;!-- markdownlint-enable --&gt; 
&lt;p&gt;This repo was made with love using GitKraken.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.gitkraken.com/invite/nQmDPR9D"&gt;&lt;img src="https://img.shields.io/badge/GitKraken-Legendary%20Git%20Tools-teal?style=plastic&amp;amp;logo=gitkraken" alt="GitKraken shield" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- markdownlint-disable first-header-h1 --&gt; 
&lt;h2&gt;Join the community&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/mastodon/follow/110275292073181892?domain=https%3A%2F%2Fhachyderm.io&amp;amp;label=Mastodon&amp;amp;style=social" alt="Mastodon badge" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/discord/1023597603331526656" alt="Discord badge" /&gt;&lt;/p&gt; 
&lt;p&gt;What started as the offspring of &lt;a href="https://github.com/JanDeDobbeleer/oh-my-posh2"&gt;oh-my-posh2&lt;/a&gt; for PowerShell resulted in a cross platform, highly customizable and extensible prompt theme engine. After 4 years of working on oh-my-posh, a modern and more efficient tool was needed to suit my personal needs.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;‚ù§Ô∏è&lt;/span&gt; Support &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://swag.ohmyposh.dev"&gt;&lt;img src="https://img.shields.io/badge/Swag-Get%20some!-blue" alt="Swag" /&gt;&lt;/a&gt; - Show your love with a t-shirt!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/JanDeDobbeleer"&gt;&lt;img src="https://img.shields.io/badge/-Sponsor-fafbfc?logo=GitHub%20Sponsors" alt="GitHub" /&gt;&lt;/a&gt; - One time support, or a recurring donation?&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://ko-fi.com/jandedobbeleer"&gt;&lt;img src="https://img.shields.io/badge/Ko--fi-Buy%20me%20a%20coffee!-%2346b798.svg?sanitize=true" alt="Ko-Fi" /&gt;&lt;/a&gt; - No coffee, no code.&lt;/p&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;a href="https://polar.sh/oh-my-posh"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://polar.sh/embed/tiers.svg?org=oh-my-posh&amp;amp;darkmode" /&gt; 
  &lt;img alt="Subscription Tiers on Polar" src="https://polar.sh/embed/tiers.svg?org=oh-my-posh" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;!-- markdownlint-enable --&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Shell and platform agnostic&lt;/li&gt; 
 &lt;li&gt;Easily configurable&lt;/li&gt; 
 &lt;li&gt;The &lt;strong&gt;most&lt;/strong&gt; configurable prompt utility&lt;/li&gt; 
 &lt;li&gt;Fast&lt;/li&gt; 
 &lt;li&gt;Secondary prompt&lt;/li&gt; 
 &lt;li&gt;Right prompt&lt;/li&gt; 
 &lt;li&gt;Transient prompt&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://ohmyposh.dev"&gt;&lt;img src="https://img.shields.io/badge/Docs-ohmyposh.dev-blue" alt="Documentation" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Reviews&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://repo-reviews.github.io//reviews/2023-06-21_TameWizard_JanDeDobbeleer_oh-my-posh"&gt;Repo review&lt;/a&gt; by &lt;a href="https://github.com/TameWizard"&gt;TameWizard&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrisbenti/PS-Config"&gt;Chris Benti&lt;/a&gt; providing the first influence to start oh-my-posh&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dahlbyk/posh-git"&gt;Keith Dahlby&lt;/a&gt; for creating posh-git and making life more enjoyable&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ohmyzsh/ohmyzsh"&gt;Robby Russell&lt;/a&gt; for creating oh-my-zsh, without him this would probably not be here&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/justjanne"&gt;Janne Mareike Koschinski&lt;/a&gt; for providing information on how to get certain information using Go (and the amazing &lt;a href="https://github.com/justjanne/powerline-go"&gt;README&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/starship/starship/raw/master/src/init/mod.rs"&gt;Starship&lt;/a&gt; for doing great things&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ollama/ollama</title>
      <link>https://github.com/ollama/ollama</link>
      <description>&lt;p&gt;Get up and running with OpenAI gpt-oss, DeepSeek-R1, Gemma 3 and other models.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt;
  &amp;nbsp; 
 &lt;a href="https://ollama.com"&gt; &lt;img alt="ollama" width="240" src="https://github.com/ollama/ollama/assets/3325447/0d0b44e2-8f4a-4e99-9b52-a5c1c741c8f7" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h1&gt;Ollama&lt;/h1&gt; 
&lt;p&gt;Get up and running with large language models.&lt;/p&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://ollama.com/download/Ollama.dmg"&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://ollama.com/download/OllamaSetup.exe"&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl -fsSL https://ollama.com/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/ollama/ollama/raw/main/docs/linux.md"&gt;Manual install instructions&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;The official &lt;a href="https://hub.docker.com/r/ollama/ollama"&gt;Ollama Docker image&lt;/a&gt; &lt;code&gt;ollama/ollama&lt;/code&gt; is available on Docker Hub.&lt;/p&gt; 
&lt;h3&gt;Libraries&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama/ollama-python"&gt;ollama-python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama/ollama-js"&gt;ollama-js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/ollama"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reddit.com/r/ollama"&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;To run and chat with &lt;a href="https://ollama.com/library/gemma3"&gt;Gemma 3&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama run gemma3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Model library&lt;/h2&gt; 
&lt;p&gt;Ollama supports a list of models available on &lt;a href="https://ollama.com/library" title="ollama model library"&gt;ollama.com/library&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Here are some example models that can be downloaded:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Model&lt;/th&gt; 
   &lt;th&gt;Parameters&lt;/th&gt; 
   &lt;th&gt;Size&lt;/th&gt; 
   &lt;th&gt;Download&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;1B&lt;/td&gt; 
   &lt;td&gt;815MB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:1b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;4B&lt;/td&gt; 
   &lt;td&gt;3.3GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;12B&lt;/td&gt; 
   &lt;td&gt;8.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:12b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;27B&lt;/td&gt; 
   &lt;td&gt;17GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:27b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;QwQ&lt;/td&gt; 
   &lt;td&gt;32B&lt;/td&gt; 
   &lt;td&gt;20GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run qwq&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek-R1&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.7GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run deepseek-r1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek-R1&lt;/td&gt; 
   &lt;td&gt;671B&lt;/td&gt; 
   &lt;td&gt;404GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run deepseek-r1:671b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 4&lt;/td&gt; 
   &lt;td&gt;109B&lt;/td&gt; 
   &lt;td&gt;67GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama4:scout&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 4&lt;/td&gt; 
   &lt;td&gt;400B&lt;/td&gt; 
   &lt;td&gt;245GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama4:maverick&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.3&lt;/td&gt; 
   &lt;td&gt;70B&lt;/td&gt; 
   &lt;td&gt;43GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2&lt;/td&gt; 
   &lt;td&gt;3B&lt;/td&gt; 
   &lt;td&gt;2.0GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2&lt;/td&gt; 
   &lt;td&gt;1B&lt;/td&gt; 
   &lt;td&gt;1.3GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2:1b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2 Vision&lt;/td&gt; 
   &lt;td&gt;11B&lt;/td&gt; 
   &lt;td&gt;7.9GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2-vision&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2 Vision&lt;/td&gt; 
   &lt;td&gt;90B&lt;/td&gt; 
   &lt;td&gt;55GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2-vision:90b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.1&lt;/td&gt; 
   &lt;td&gt;8B&lt;/td&gt; 
   &lt;td&gt;4.7GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.1&lt;/td&gt; 
   &lt;td&gt;405B&lt;/td&gt; 
   &lt;td&gt;231GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.1:405b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Phi 4&lt;/td&gt; 
   &lt;td&gt;14B&lt;/td&gt; 
   &lt;td&gt;9.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run phi4&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Phi 4 Mini&lt;/td&gt; 
   &lt;td&gt;3.8B&lt;/td&gt; 
   &lt;td&gt;2.5GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run phi4-mini&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mistral&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run mistral&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Moondream 2&lt;/td&gt; 
   &lt;td&gt;1.4B&lt;/td&gt; 
   &lt;td&gt;829MB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run moondream&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Neural Chat&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run neural-chat&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Starling&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run starling-lm&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Code Llama&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;3.8GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run codellama&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 2 Uncensored&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;3.8GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama2-uncensored&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LLaVA&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.5GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llava&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Granite-3.3&lt;/td&gt; 
   &lt;td&gt;8B&lt;/td&gt; 
   &lt;td&gt;4.9GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run granite3.3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You should have at least 8 GB of RAM available to run the 7B models, 16 GB to run the 13B models, and 32 GB to run the 33B models.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Customize a model&lt;/h2&gt; 
&lt;h3&gt;Import from GGUF&lt;/h3&gt; 
&lt;p&gt;Ollama supports importing GGUF models in the Modelfile:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create a file named &lt;code&gt;Modelfile&lt;/code&gt;, with a &lt;code&gt;FROM&lt;/code&gt; instruction with the local filepath to the model you want to import.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;FROM ./vicuna-33b.Q4_0.gguf
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create the model in Ollama&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;ollama create example -f Modelfile
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the model&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;ollama run example
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Import from Safetensors&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/ollama/ollama/main/docs/import.md"&gt;guide&lt;/a&gt; on importing models for more information.&lt;/p&gt; 
&lt;h3&gt;Customize a prompt&lt;/h3&gt; 
&lt;p&gt;Models from the Ollama library can be customized with a prompt. For example, to customize the &lt;code&gt;llama3.2&lt;/code&gt; model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama pull llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a &lt;code&gt;Modelfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM llama3.2

# set the temperature to 1 [higher is more creative, lower is more coherent]
PARAMETER temperature 1

# set the system message
SYSTEM """
You are Mario from Super Mario Bros. Answer as Mario, the assistant, only.
"""
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create and run the model:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ollama create mario -f ./Modelfile
ollama run mario
&amp;gt;&amp;gt;&amp;gt; hi
Hello! It's your friend Mario.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on working with a Modelfile, see the &lt;a href="https://raw.githubusercontent.com/ollama/ollama/main/docs/modelfile.md"&gt;Modelfile&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;CLI Reference&lt;/h2&gt; 
&lt;h3&gt;Create a model&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ollama create&lt;/code&gt; is used to create a model from a Modelfile.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama create mymodel -f ./Modelfile
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pull a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama pull llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This command can also be used to update a local model. Only the diff will be pulled.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Remove a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama rm llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Copy a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama cp llama3.2 my-model
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multiline input&lt;/h3&gt; 
&lt;p&gt;For multiline input, you can wrap text with &lt;code&gt;"""&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; """Hello,
... world!
... """
I'm a basic program that prints the famous "Hello, world!" message to the console.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multimodal models&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;ollama run llava "What's in this image? /Users/jmorgan/Desktop/smile.png"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: The image features a yellow smiley face, which is likely the central focus of the picture.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Pass the prompt as an argument&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama run llama3.2 "Summarize this file: $(cat README.md)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: Ollama is a lightweight, extensible framework for building and running language models on the local machine. It provides a simple API for creating, running, and managing models, as well as a library of pre-built models that can be easily used in a variety of applications.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Show model information&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama show llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;List models on your computer&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama list
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;List which models are currently loaded&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama ps
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stop a model which is currently running&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama stop llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start Ollama&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ollama serve&lt;/code&gt; is used when you want to start ollama without running the desktop application.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/ollama/ollama/raw/main/docs/development.md"&gt;developer guide&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Running local builds&lt;/h3&gt; 
&lt;p&gt;Next, start the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./ollama serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, in a separate shell, run a model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./ollama run llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;REST API&lt;/h2&gt; 
&lt;p&gt;Ollama has a REST API for running and managing models.&lt;/p&gt; 
&lt;h3&gt;Generate a response&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl http://localhost:11434/api/generate -d '{
  "model": "llama3.2",
  "prompt":"Why is the sky blue?"
}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chat with a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl http://localhost:11434/api/chat -d '{
  "model": "llama3.2",
  "messages": [
    { "role": "user", "content": "why is the sky blue?" }
  ]
}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/ollama/ollama/main/docs/api.md"&gt;API documentation&lt;/a&gt; for all endpoints.&lt;/p&gt; 
&lt;h2&gt;Community Integrations&lt;/h2&gt; 
&lt;h3&gt;Web &amp;amp; Desktop&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/open-webui/open-webui"&gt;Open WebUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/swift-chat"&gt;SwiftChat (macOS with ReactNative)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AugustDev/enchanted"&gt;Enchanted (macOS native)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fmaclen/hollama"&gt;Hollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ParisNeo/lollms-webui"&gt;Lollms-Webui&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/danny-avila/LibreChat"&gt;LibreChat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bionic-gpt/bionic-gpt"&gt;Bionic GPT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rtcfirefly/ollama-ui"&gt;HTML UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jikkuatwork/saddle"&gt;Saddle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tagspaces.org"&gt;TagSpaces&lt;/a&gt; (A platform for file-based apps, &lt;a href="https://docs.tagspaces.org/ai/"&gt;utilizing Ollama&lt;/a&gt; for the generation of tags and descriptions)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivanfioravanti/chatbot-ollama"&gt;Chatbot UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mckaywrigley/chatbot-ui"&gt;Chatbot UI v2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama-interface/Ollama-Gui?tab=readme-ov-file"&gt;Typescript UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richawo/minimal-llm-ui"&gt;Minimalistic React UI for Ollama Models&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinhermawan/Ollamac"&gt;Ollamac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/enricoros/big-AGI"&gt;big-AGI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cheshire-cat-ai/core"&gt;Cheshire Cat assistant framework&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/semperai/amica"&gt;Amica&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BruceMacD/chatd"&gt;chatd&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kghandour/Ollama-SwiftUI"&gt;Ollama-SwiftUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langgenius/dify"&gt;Dify.AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mindmac.app"&gt;MindMac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jakobhoeg/nextjs-ollama-llm-ui"&gt;NextJS Web Interface for Ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://msty.app"&gt;Msty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Bin-Huang/Chatbox"&gt;Chatbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tgraupmann/WinForm_Ollama_Copilot"&gt;WinForm Ollama Copilot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web"&gt;NextChat&lt;/a&gt; with &lt;a href="https://docs.nextchat.dev/models/ollama"&gt;Get Started Doc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmo80/alpaca-webui"&gt;Alpaca WebUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/enoch1118/ollamaGUI"&gt;OllamaGUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/InternLM/OpenAOE"&gt;OpenAOE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leonid20000/OdinRunes"&gt;Odin Runes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mrdjohnson/llm-x"&gt;LLM-X&lt;/a&gt; (Progressive Web App)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Mintplex-Labs/anything-llm"&gt;AnythingLLM (Docker + MacOs/Windows/Linux native app)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_basic_chat"&gt;Ollama Basic Chat: Uses HyperDiv Reactive UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drazdra/ollama-chats"&gt;Ollama-chats RPG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://intellibar.app/"&gt;IntelliBar&lt;/a&gt; (AI-powered assistant for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AliAhmedNada/jirapt"&gt;Jirapt&lt;/a&gt; (Jira Integration to generate issues, tasks, epics)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AliAhmedNada/ojira"&gt;ojira&lt;/a&gt; (Jira chrome plugin to easily generate descriptions for tasks)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reid41/QA-Pilot"&gt;QA-Pilot&lt;/a&gt; (Interactive chat tool that can leverage Ollama models for rapid understanding and navigation of GitHub code repositories)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sugarforever/chat-ollama"&gt;ChatOllama&lt;/a&gt; (Open Source Chatbot based on Ollama with Knowledge Bases)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Nagi-ovo/CRAG-Ollama-Chat"&gt;CRAG Ollama Chat&lt;/a&gt; (Simple Web Search with Corrective RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/infiniflow/ragflow"&gt;RAGFlow&lt;/a&gt; (Open-source Retrieval-Augmented Generation engine based on deep document understanding)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StreamDeploy-DevRel/streamdeploy-llm-app-scaffold"&gt;StreamDeploy&lt;/a&gt; (LLM Application Scaffold)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/swuecho/chat"&gt;chat&lt;/a&gt; (chat web app for teams)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lobehub/lobe-chat"&gt;Lobe Chat&lt;/a&gt; with &lt;a href="https://lobehub.com/docs/self-hosting/examples/ollama"&gt;Integrating Doc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/datvodinh/rag-chatbot.git"&gt;Ollama RAG Chatbot&lt;/a&gt; (Local Chat with multiple PDFs using Ollama and RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.nurgo-software.com/products/brainsoup"&gt;BrainSoup&lt;/a&gt; (Flexible native client with RAG &amp;amp; multi-agent automation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Renset/macai"&gt;macai&lt;/a&gt; (macOS client for Ollama, ChatGPT, and other compatible API back-ends)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/josStorer/RWKV-Runner"&gt;RWKV-Runner&lt;/a&gt; (RWKV offline LLM deployment tool, also usable as a client for ChatGPT and Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dezoito/ollama-grid-search"&gt;Ollama Grid Search&lt;/a&gt; (app to evaluate and compare models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Otacon/olpaka"&gt;Olpaka&lt;/a&gt; (User-friendly Flutter Web App for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://casibase.org"&gt;Casibase&lt;/a&gt; (An open source AI knowledge base and dialogue system combining the latest RAG, SSO, ollama support, and multiple large language models.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CrazyNeil/OllamaSpring"&gt;OllamaSpring&lt;/a&gt; (Ollama Client for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kartikm7/llocal"&gt;LLocal.in&lt;/a&gt; (Easy to use Electron Desktop Client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dcSpark/shinkai-apps"&gt;Shinkai Desktop&lt;/a&gt; (Two click install Local AI using Ollama + Files + RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeyoyt/ailama"&gt;AiLama&lt;/a&gt; (A Discord User App that allows you to interact with Ollama anywhere in Discord)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_mesop/"&gt;Ollama with Google Mesop&lt;/a&gt; (Mesop Chat Client implementation with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SciPhi-AI/R2R"&gt;R2R&lt;/a&gt; (Open-source RAG engine)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elearningshow/ollama-kis"&gt;Ollama-Kis&lt;/a&gt; (A simple easy-to-use GUI with sample custom LLM for Drivers Education)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://opengpa.org"&gt;OpenGPA&lt;/a&gt; (Open-source offline-first Enterprise Agentic Application)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mateuszmigas/painting-droid"&gt;Painting Droid&lt;/a&gt; (Painting app with AI integrations)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kerlig.com/"&gt;Kerlig AI&lt;/a&gt; (AI writing assistant for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MindWorkAI/AI-Studio"&gt;AI Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gyopak/sidellama"&gt;Sidellama&lt;/a&gt; (browser-based LLM client)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trypromptly/LLMStack"&gt;LLMStack&lt;/a&gt; (No-code multi-agent framework to build LLM agents and workflows)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://boltai.com"&gt;BoltAI for Mac&lt;/a&gt; (AI Chat Client for Mac)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/av/harbor"&gt;Harbor&lt;/a&gt; (Containerized LLM Toolkit with Ollama as default backend)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/szczyglis-dev/py-gpt"&gt;PyGPT&lt;/a&gt; (AI desktop assistant for Linux, Windows, and Mac)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jeffser/Alpaca"&gt;Alpaca&lt;/a&gt; (An Ollama client application for Linux and macOS made with GTK4 and Adwaita)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Significant-Gravitas/AutoGPT/raw/master/docs/content/platform/ollama.md"&gt;AutoGPT&lt;/a&gt; (AutoGPT Ollama integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jonathanhecl.com/go-crew/"&gt;Go-CREW&lt;/a&gt; (Powerful Offline RAG in Golang)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openvmp/partcad/"&gt;PartCAD&lt;/a&gt; (CAD model generation with OpenSCAD and CadQuery)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama4j/ollama4j-web-ui"&gt;Ollama4j Web UI&lt;/a&gt; - Java-based Web UI for Ollama built with Vaadin, Spring Boot, and Ollama4j&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kspviswa/pyOllaMx"&gt;PyOllaMx&lt;/a&gt; - macOS application capable of chatting with both Ollama and Apple MLX models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cline/cline"&gt;Cline&lt;/a&gt; - Formerly known as Claude Dev is a VSCode extension for multi-file/whole-repo coding&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kangfenmao/cherry-studio"&gt;Cherry Studio&lt;/a&gt; (Desktop client with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1runeberg/confichat"&gt;ConfiChat&lt;/a&gt; (Lightweight, standalone, multi-platform, and privacy-focused LLM chat interface with optional encryption)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nickthecook/archyve"&gt;Archyve&lt;/a&gt; (RAG-enabling document library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama-crew-mesop"&gt;crewAI with Mesop&lt;/a&gt; (Mesop Web Interface to run crewAI with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chyok/ollama-gui"&gt;Tkinter-based client&lt;/a&gt; (Python tkinter-based Client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trendy-design/llmchat"&gt;LLMChat&lt;/a&gt; (Privacy focused, 100% local, intuitive all-in-one chat interface)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Leon-Sander/Local-Multimodal-AI-Chat"&gt;Local Multimodal AI Chat&lt;/a&gt; (Ollama-based LLM Chat with support for multiple features, including PDF RAG, voice chat, image-based interactions, and integration with OpenAI.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xark-argo/argo"&gt;ARGO&lt;/a&gt; (Locally download and run Ollama and Huggingface models with RAG and deep research on Mac/Windows/Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EliasPereirah/OrionChat"&gt;OrionChat&lt;/a&gt; - OrionChat is a web interface for chatting with different AI providers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bklieger-groq/g1"&gt;G1&lt;/a&gt; (Prototype of using prompting strategies to improve the LLM's reasoning through o1-like reasoning chains.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lemonit-eric-mao/ollama-web-management"&gt;Web management&lt;/a&gt; (Web management page)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/promptery/promptery"&gt;Promptery&lt;/a&gt; (desktop client for Ollama.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JHubi1/ollama-app"&gt;Ollama App&lt;/a&gt; (Modern and easy-to-use multi-platform client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/annilq/chat-ollama"&gt;chat-ollama&lt;/a&gt; (a React Native client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tcsenpai/spacellama"&gt;SpaceLlama&lt;/a&gt; (Firefox and Chrome extension to quickly summarize web pages with ollama in a sidebar)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tcsenpai/youlama"&gt;YouLama&lt;/a&gt; (Webapp to quickly summarize any YouTube video, supporting Invidious as well)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tcsenpai/dualmind"&gt;DualMind&lt;/a&gt; (Experimental app allowing two models to talk to each other in the terminal or in a web interface)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h1ddenpr0cess20/ollamarama-matrix"&gt;ollamarama-matrix&lt;/a&gt; (Ollama chatbot for the Matrix chat protocol)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anan1213095357/ollama-chat-app"&gt;ollama-chat-app&lt;/a&gt; (Flutter-based chat app)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.perfectmemory.ai/"&gt;Perfect Memory AI&lt;/a&gt; (Productivity AI assists personalized by what you have seen on your screen, heard, and said in the meetings)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexastack/hexabot"&gt;Hexabot&lt;/a&gt; (A conversational AI builder)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/reddit_analyzer"&gt;Reddit Rate&lt;/a&gt; (Search and Rate Reddit topics with a weighted summation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adarshM84/OpenTalkGpt"&gt;OpenTalkGpt&lt;/a&gt; (Chrome Extension to manage open-source models supported by Ollama, create custom models, and chat with models from a user-friendly UI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vinhnx/vt.ai"&gt;VT&lt;/a&gt; (A minimal multimodal AI chat app, with dynamic conversation routing. Supports local models via Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nosia-ai/nosia"&gt;Nosia&lt;/a&gt; (Easy to install and use RAG platform based on Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nbonamy/witsy"&gt;Witsy&lt;/a&gt; (An AI Desktop application available for Mac/Windows/Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/US-Artificial-Intelligence/abbey"&gt;Abbey&lt;/a&gt; (A configurable AI interface server with notebooks, document storage, and YouTube support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dmayboroda/minima"&gt;Minima&lt;/a&gt; (RAG with on-premises or fully local workflow)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AidfulAI/aidful-ollama-model-delete"&gt;aidful-ollama-model-delete&lt;/a&gt; (User interface for simplified model cleanup)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ItzCrazyKns/Perplexica"&gt;Perplexica&lt;/a&gt; (An AI-powered search engine &amp;amp; an open-source alternative to Perplexity AI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oslook/ollama-webui"&gt;Ollama Chat WebUI for Docker &lt;/a&gt; (Support for local docker deployment, lightweight ollama webui)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/ai-tooklit/ollama-docs"&gt;AI Toolkit for Visual Studio Code&lt;/a&gt; (Microsoft-official VSCode extension to chat, test, evaluate models with Ollama support, and use them in your AI applications.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anilkay/MinimalNextOllamaChat"&gt;MinimalNextOllamaChat&lt;/a&gt; (Minimal Web UI for Chat and Model Control)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TilmanGriesel/chipper"&gt;Chipper&lt;/a&gt; AI interface for tinkerers (Ollama, Haystack RAG, Python)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CosmicEventHorizon/ChibiChat"&gt;ChibiChat&lt;/a&gt; (Kotlin-based Android app to chat with Ollama and Koboldcpp API endpoints)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qusaismael/localllm"&gt;LocalLLM&lt;/a&gt; (Minimal Web-App to run ollama models on it with a GUI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buiducnhat/ollamazing"&gt;Ollamazing&lt;/a&gt; (Web extension to run Ollama models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benhaotang/OpenDeepResearcher-via-searxng"&gt;OpenDeepResearcher-via-searxng&lt;/a&gt; (A Deep Research equivalent endpoint with Ollama support for running locally)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AIDotNet/AntSK"&gt;AntSK&lt;/a&gt; (Out-of-the-box &amp;amp; Adaptable RAG Chatbot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1Panel-dev/MaxKB/"&gt;MaxKB&lt;/a&gt; (Ready-to-use &amp;amp; flexible RAG Chatbot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/danielekp/yla"&gt;yla&lt;/a&gt; (Web interface to freely interact with your customized models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RockChinQ/LangBot"&gt;LangBot&lt;/a&gt; (LLM-based instant messaging bots platform, with Agents, RAG features, supports multiple platforms)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1Panel-dev/1Panel/"&gt;1Panel&lt;/a&gt; (Web-based Linux Server Management Tool)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Soulter/AstrBot/"&gt;AstrBot&lt;/a&gt; (User-friendly LLM-based multi-platform chatbot with a WebUI, supporting RAG, LLM agents, and plugins integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ibrahimcetin/reins"&gt;Reins&lt;/a&gt; (Easily tweak parameters, customize system prompts per chat, and enhance your AI experiments with reasoning model support.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aharon-Bensadoun/Flufy"&gt;Flufy&lt;/a&gt; (A beautiful chat interface for interacting with Ollama's API. Built with React, TypeScript, and Material-UI.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeozeozeo/ellama"&gt;Ellama&lt;/a&gt; (Friendly native app to chat with an Ollama instance)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mediar-ai/screenpipe"&gt;screenpipe&lt;/a&gt; Build agents powered by your screen history&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hengkysteen/ollamb"&gt;Ollamb&lt;/a&gt; (Simple yet rich in features, cross-platform built with Flutter and designed for Ollama. Try the &lt;a href="https://hengkysteen.github.io/demo/ollamb/"&gt;web demo&lt;/a&gt;.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Writeopia/Writeopia"&gt;Writeopia&lt;/a&gt; (Text editor with integration with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AppFlowy-IO/AppFlowy"&gt;AppFlowy&lt;/a&gt; (AI collaborative workspace with Ollama, cross-platform and self-hostable)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cushydigit/lumina.git"&gt;Lumina&lt;/a&gt; (A lightweight, minimal React.js frontend for interacting with Ollama servers)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/tiny-notepad"&gt;Tiny Notepad&lt;/a&gt; (A lightweight, notepad-like interface to chat with ollama available on PyPI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hellotunamayo/macLlama"&gt;macLlama (macOS native)&lt;/a&gt; (A native macOS GUI application for interacting with Ollama models, featuring a chat interface.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philberndt/GPTranslate"&gt;GPTranslate&lt;/a&gt; (A fast and lightweight, AI powered desktop translation application written with Rust and Tauri. Features real-time translation with OpenAI/Azure/Ollama.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NGC13009/ollama-launcher"&gt;ollama launcher&lt;/a&gt; (A launcher for Ollama, aiming to provide users with convenient functions such as ollama server launching, management, or configuration.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aj-Seven/ai-hub"&gt;ai-hub&lt;/a&gt; (AI Hub supports multiple models via API keys and Chat support via Ollama API.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/mayan-edms/mayan-edms"&gt;Mayan EDMS&lt;/a&gt; (Open source document management system to organize, tag, search, and automate your files with powerful Ollama driven workflows.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/doolijb/serene-pub"&gt;Serene Pub&lt;/a&gt; (Beginner friendly, open source AI Roleplaying App for Windows, Mac OS and Linux. Search, download and use models with Ollama all inside the app.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aqerd/andes"&gt;Andes&lt;/a&gt; (A Visual Studio Code extension that provides a local UI interface for Ollama models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KashyapTan/clueless"&gt;Clueless&lt;/a&gt; (Open Source &amp;amp; Local Cluely: A desktop application LLM assistant to help you talk to anything on your screen using locally served Ollama models. Also undetectable to screenshare)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carbonatedWaterOrg/ollama-co2"&gt;ollama-co2&lt;/a&gt; (FastAPI web interface for monitoring and managing local and remote Ollama servers with real-time model monitoring and concurrent downloads)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/run/docs/tutorials/gpu-gemma2-with-ollama"&gt;Google Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fly.io/docs/python/do-more/add-ollama/"&gt;Fly.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.koyeb.com/deploy/ollama"&gt;Koyeb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Terminal&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggozad/oterm"&gt;oterm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s-kostyaev/ellama"&gt;Ellama Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zweifisch/ollama"&gt;Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paradoxical-dev/neollama"&gt;neollama&lt;/a&gt; UI client for interacting with models from within Neovim&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/David-Kunz/gen.nvim"&gt;gen.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nomnivore/ollama.nvim"&gt;ollama.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marco-souza/ollero.nvim"&gt;ollero.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gerazov/ollama-chat.nvim"&gt;ollama-chat.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huynle/ogpt.nvim"&gt;ogpt.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/karthink/gptel"&gt;gptel Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dustinblackman/oatmeal"&gt;Oatmeal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pgibler/cmdh"&gt;cmdh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/npahlfer/ooo"&gt;ooo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reid41/shell-pilot"&gt;shell-pilot&lt;/a&gt;(Interact with models via pure shell scripts on Linux or macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pythops/tenere"&gt;tenere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/taketwo/llm-ollama"&gt;llm-ollama&lt;/a&gt; for &lt;a href="https://llm.datasette.io/en/stable/"&gt;Datasette's LLM CLI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anaisbetts/typechat-cli"&gt;typechat-cli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/djcopley/ShellOracle"&gt;ShellOracle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yusufcanb/tlm"&gt;tlm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ericcurtin/podman-ollama"&gt;podman-ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sammcj/gollama"&gt;gollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paulrobello/parllama"&gt;ParLlama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cognitivetech/ollama-ebook-summary/"&gt;Ollama eBook Summary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_moe"&gt;Ollama Mixture of Experts (MOE) in 50 lines of code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pepo-ec/vim-intelligence-bridge"&gt;vim-intelligence-bridge&lt;/a&gt; Simple interaction of "Ollama" with the Vim editor&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x-cmd.com/mod/ollama"&gt;x-cmd ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drunkwcodes/bb7"&gt;bb7&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marcusziade/Swollama"&gt;SwollamaCLI&lt;/a&gt; bundled with the Swollama Swift package. &lt;a href="https://github.com/marcusziade/Swollama?tab=readme-ov-file#cli-usage"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sigoden/aichat"&gt;aichat&lt;/a&gt; All-in-one LLM CLI tool featuring Shell Assistant, Chat-REPL, RAG, AI tools &amp;amp; agents, with access to OpenAI, Claude, Gemini, Ollama, Groq, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rrg92/powershai"&gt;PowershAI&lt;/a&gt; PowerShell module that brings AI to terminal on Windows, including support for Ollama&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Abyss-c0re/deepshell"&gt;DeepShell&lt;/a&gt; Your self-hosted AI assistant. Interactive Shell, Files and Folders analysis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyproto/orbiton"&gt;orbiton&lt;/a&gt; Configuration-free text editor and IDE with support for tab completion with Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/molbal/orca-cli"&gt;orca-cli&lt;/a&gt; Ollama Registry CLI Application - Browse, pull, and download models from Ollama Registry in your terminal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonathanhecl/gguf-to-ollama"&gt;GGUF-to-Ollama&lt;/a&gt; - Importing GGUF to Ollama made easy (multiplatform)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_strands"&gt;AWS-Strands-With-Ollama&lt;/a&gt; - AWS Strands Agents with Ollama Examples&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/attogram/ollama-multirun"&gt;ollama-multirun&lt;/a&gt; - A bash shell script to run a single prompt against any or all of your locally installed ollama models, saving the output and performance statistics as easily navigable web pages. (&lt;a href="https://attogram.github.io/ai_test_zone/"&gt;Demo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/attogram/ollama-bash-toolshed"&gt;ollama-bash-toolshed&lt;/a&gt; - Bash scripts to chat with tool using models. Add new tools to your shed with ease. Runs on Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vinhnx/vtcode"&gt;VT Code&lt;/a&gt; - VT Code is a Rust-based terminal coding agent with semantic code intelligence via Tree-sitter. Ollama integration for running local/cloud models with configurable endpoints.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Apple Vision Pro&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/swift-chat"&gt;SwiftChat&lt;/a&gt; (Cross-platform AI chat app supporting Apple Vision Pro via "Designed for iPad")&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AugustDev/enchanted"&gt;Enchanted&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timescale/pgai"&gt;pgai&lt;/a&gt; - PostgreSQL as a vector database (Create and search embeddings from Ollama models using pgvector) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/timescale/pgai/raw/main/docs/vectorizer-quick-start.md"&gt;Get started guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mindsdb/mindsdb/raw/staging/mindsdb/integrations/handlers/ollama_handler/README.md"&gt;MindsDB&lt;/a&gt; (Connects Ollama models with nearly 200 data platforms and apps)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philippgille/chromem-go/raw/v0.5.0/embed_ollama.go"&gt;chromem-go&lt;/a&gt; with &lt;a href="https://github.com/philippgille/chromem-go/tree/v0.5.0/examples/rag-wikipedia-ollama"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dbkangaroo/kangaroo"&gt;Kangaroo&lt;/a&gt; (AI-powered SQL client and admin tool for popular databases)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Package managers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://archlinux.org/packages/extra/x86_64/ollama/"&gt;Pacman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gentoo/guru/tree/master/app-misc/ollama"&gt;Gentoo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://formulae.brew.sh/formula/ollama"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://artifacthub.io/packages/helm/ollama-helm/ollama"&gt;Helm Chart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeberg.org/tusharhero/ollama-guix"&gt;Guix channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://search.nixos.org/packages?show=ollama&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=ollama"&gt;Nix package&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flox.dev/blog/ollama-part-one"&gt;Flox&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Libraries&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://python.langchain.com/docs/integrations/chat/ollama/"&gt;LangChain&lt;/a&gt; and &lt;a href="https://js.langchain.com/docs/integrations/chat/ollama/"&gt;LangChain.js&lt;/a&gt; with &lt;a href="https://js.langchain.com/docs/tutorials/local_rag/"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://firebase.google.com/docs/genkit/plugins/ollama"&gt;Firebase Genkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/crewAIInc/crewAI"&gt;crewAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://remembersoftwares.github.io/yacana/"&gt;Yacana&lt;/a&gt; (User-friendly multi-agent framework for brainstorming and executing predetermined flows with built-in tool integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spring-projects/spring-ai"&gt;Spring AI&lt;/a&gt; with &lt;a href="https://docs.spring.io/spring-ai/reference/api/chat/ollama-chat.html"&gt;reference&lt;/a&gt; and &lt;a href="https://github.com/tzolov/ollama-tools"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tmc/langchaingo/"&gt;LangChainGo&lt;/a&gt; with &lt;a href="https://github.com/tmc/langchaingo/tree/main/examples/ollama-completion-example"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langchain4j/langchain4j"&gt;LangChain4j&lt;/a&gt; with &lt;a href="https://github.com/langchain4j/langchain4j-examples/tree/main/ollama-examples/src/main/java"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Abraxas-365/langchain-rust"&gt;LangChainRust&lt;/a&gt; with &lt;a href="https://github.com/Abraxas-365/langchain-rust/raw/main/examples/llm_ollama.rs"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tryAGI/LangChain"&gt;LangChain for .NET&lt;/a&gt; with &lt;a href="https://github.com/tryAGI/LangChain/raw/main/examples/LangChain.Samples.OpenAI/Program.cs"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/theodo-group/LLPhant?tab=readme-ov-file#ollama"&gt;LLPhant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.llamaindex.ai/en/stable/examples/llm/ollama/"&gt;LlamaIndex&lt;/a&gt; and &lt;a href="https://ts.llamaindex.ai/modules/llms/available_llms/ollama"&gt;LlamaIndexTS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BerriAI/litellm"&gt;LiteLLM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/presbrey/ollamafarm"&gt;OllamaFarm for Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awaescher/OllamaSharp"&gt;OllamaSharp for .NET&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gbaptista/ollama-ai"&gt;Ollama for Ruby&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pepperoni21/ollama-rs"&gt;Ollama-rs for Rust&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmont-dev/ollama-hpp"&gt;Ollama-hpp for C++&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama4j/ollama4j"&gt;Ollama4j for Java&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://modelfusion.dev/integration/model-provider/ollama"&gt;ModelFusion Typescript Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinhermawan/OllamaKit"&gt;OllamaKit for Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/breitburg/dart-ollama"&gt;Ollama for Dart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudstudio/ollama-laravel"&gt;Ollama for Laravel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davidmigloz/langchain_dart"&gt;LangChainDart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/semantic-kernel/tree/main/python/semantic_kernel/connectors/ai/ollama"&gt;Semantic Kernel - Python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deepset-ai/haystack-integrations/raw/main/integrations/ollama.md"&gt;Haystack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brainlid/langchain"&gt;Elixir LangChain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JBGruber/rollama"&gt;Ollama for R - rollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hauselin/ollama-r"&gt;Ollama for R - ollama-r&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lebrunel/ollama-ex"&gt;Ollama-ex for Elixir&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/b-tocs/abap_btocs_ollama"&gt;Ollama Connector for SAP ABAP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://testcontainers.com/modules/ollama/"&gt;Testcontainers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.ai/docs/welcome/integration-guides/ollama"&gt;Portkey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/svilupp/PromptingTools.jl"&gt;PromptingTools.jl&lt;/a&gt; with an &lt;a href="https://svilupp.github.io/PromptingTools.jl/dev/examples/working_with_ollama"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Project-Llama/llamascript"&gt;LlamaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emirsahin1/llm-axe"&gt;llm-axe&lt;/a&gt; (Python Toolkit for Building LLM Powered Apps)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.gollm.co/examples/ollama-example"&gt;Gollm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonathanhecl/gollama"&gt;Gollama for Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyproto/ollamaclient"&gt;Ollamaclient for Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/tozd/go/fun"&gt;High-level function abstraction in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ArdaGnsrn/ollama-php"&gt;Ollama PHP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agents-flex/agents-flex"&gt;Agents-Flex for Java&lt;/a&gt; with &lt;a href="https://github.com/agents-flex/agents-flex/tree/main/agents-flex-llm/agents-flex-llm-ollama/src/test/java/com/agentsflex/llm/ollama"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/parakeet-nest/parakeet"&gt;Parakeet&lt;/a&gt; is a GoLang library, made to simplify the development of small generative AI applications with Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygill/haverscript"&gt;Haverscript&lt;/a&gt; with &lt;a href="https://github.com/andygill/haverscript/tree/main/examples"&gt;examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattt/ollama-swift"&gt;Ollama for Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marcusziade/Swollama"&gt;Swollama for Swift&lt;/a&gt; with &lt;a href="https://marcusziade.github.io/Swollama/documentation/swollama/"&gt;DocC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prasad89/golamify"&gt;GoLamify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tusharad/ollama-haskell"&gt;Ollama for Haskell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nbonamy/multi-llm-ts"&gt;multi-llm-ts&lt;/a&gt; (A Typescript/JavaScript library allowing access to different LLM in a unified API)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lofcz/llmtornado"&gt;LlmTornado&lt;/a&gt; (C# library providing a unified interface for major FOSS &amp;amp; Commercial inference APIs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dravenk/ollama-zig"&gt;Ollama for Zig&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lunary-ai/abso"&gt;Abso&lt;/a&gt; (OpenAI-compatible TypeScript SDK for any LLM provider)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goodreasonai/nichey"&gt;Nichey&lt;/a&gt; is a Python package for generating custom wikis for your research topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kassane/ollama-d"&gt;Ollama for D&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HardCodeDev777/OllamaPlusPlus"&gt;OllamaPlusPlus&lt;/a&gt; (Very simple C++ library for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozilla-ai/any-llm"&gt;any-llm&lt;/a&gt; (A single interface to use different llm providers by &lt;a href="https://www.mozilla.ai/"&gt;mozilla.ai&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozilla-ai/any-agent"&gt;any-agent&lt;/a&gt; (A single interface to use and evaluate different agent frameworks by &lt;a href="https://www.mozilla.ai/"&gt;mozilla.ai&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cognizant-ai-lab/neuro-san-studio"&gt;Neuro SAN&lt;/a&gt; (Data-driven multi-agent orchestration framework) with &lt;a href="https://github.com/cognizant-ai-lab/neuro-san-studio/raw/main/docs/user_guide.md#ollama"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ai-bot-pro/achatbot-go"&gt;achatbot-go&lt;/a&gt; a multimodal(text/audio/image) chatbot.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mobile&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/swift-chat"&gt;SwiftChat&lt;/a&gt; (Lightning-fast Cross-platform AI chat app with native UI for Android, iOS, and iPad)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AugustDev/enchanted"&gt;Enchanted&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Mobile-Artificial-Intelligence/maid"&gt;Maid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JHubi1/ollama-app"&gt;Ollama App&lt;/a&gt; (Modern and easy-to-use multi-platform client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1runeberg/confichat"&gt;ConfiChat&lt;/a&gt; (Lightweight, standalone, multi-platform, and privacy-focused LLM chat interface with optional encryption)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sunshine0523/OllamaServer"&gt;Ollama Android Chat&lt;/a&gt; (No need for Termux, start the Ollama service with one click on an Android device)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ibrahimcetin/reins"&gt;Reins&lt;/a&gt; (Easily tweak parameters, customize system prompts per chat, and enhance your AI experiments with reasoning model support.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Extensions &amp;amp; Plugins&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MassimilianoPasquini97/raycast_ollama"&gt;Raycast extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mxyng/discollama"&gt;Discollama&lt;/a&gt; (Discord bot inside the Ollama discord channel)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/continuedev/continue"&gt;Continue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thewh1teagle/vibe"&gt;Vibe&lt;/a&gt; (Transcribe and analyze meetings with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hinterdupfinger/obsidian-ollama"&gt;Obsidian Ollama plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/omagdy7/ollama-logseq"&gt;Logseq Ollama plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andersrex/notesollama"&gt;NotesOllama&lt;/a&gt; (Apple Notes Ollama plugin)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samalba/dagger-chatbot"&gt;Dagger Chatbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mekb-turtle/discord-ai-bot"&gt;Discord AI Bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ruecat/ollama-telegram"&gt;Ollama Telegram Bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ej52/hass-ollama-conversation"&gt;Hass Ollama Conversation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abrenneke/rivet-plugin-ollama"&gt;Rivet plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/longy2k/obsidian-bmo-chatbot"&gt;Obsidian BMO Chatbot plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/herval/cliobot"&gt;Cliobot&lt;/a&gt; (Telegram bot with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logancyang/obsidian-copilot"&gt;Copilot for Obsidian plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pfrankov/obsidian-local-gpt"&gt;Obsidian Local GPT plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openinterpreter.com/language-model-setup/local-models/ollama"&gt;Open Interpreter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ex3ndr/llama-coder"&gt;Llama Coder&lt;/a&gt; (Copilot alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bernardo-bruning/ollama-copilot"&gt;Ollama Copilot&lt;/a&gt; (Proxy that allows you to use Ollama as a copilot like GitHub Copilot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rjmacarthy/twinny"&gt;twinny&lt;/a&gt; (Copilot and Copilot chat alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RussellCanfield/wingman-ai"&gt;Wingman-AI&lt;/a&gt; (Copilot code and chat alternative using Ollama and Hugging Face)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/n4ze3m/page-assist"&gt;Page Assist&lt;/a&gt; (Chrome Extension)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/imoize/plasmoid-ollamacontrol"&gt;Plasmoid Ollama Control&lt;/a&gt; (KDE Plasma extension that allows you to quickly manage/control Ollama model)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tusharhero/aitelegrambot"&gt;AI Telegram Bot&lt;/a&gt; (Telegram bot using Ollama in backend)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaroslavyaroslav/OpenAI-sublime-text"&gt;AI ST Completion&lt;/a&gt; (Sublime Text 4 AI assistant plugin with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinthedang/discord-ollama"&gt;Discord-Ollama Chat Bot&lt;/a&gt; (Generalized TypeScript Discord Bot w/ Tuning Documentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/josStorer/chatGPTBox"&gt;ChatGPTBox: All in one browser extension&lt;/a&gt; with &lt;a href="https://github.com/josStorer/chatGPTBox/issues/616#issuecomment-1975186467"&gt;Integrating Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapmd73/Companion"&gt;Discord AI chat/moderation bot&lt;/a&gt; Chat/moderation bot written in python. Uses Ollama to create personalities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nischalj10/headless-ollama"&gt;Headless Ollama&lt;/a&gt; (Scripts to automatically install ollama client &amp;amp; models on any OS for apps that depend on ollama server)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xuyangbocn/terraform-aws-self-host-llm"&gt;Terraform AWS Ollama &amp;amp; Open WebUI&lt;/a&gt; (A Terraform module to deploy on AWS a ready-to-use Ollama service, together with its front-end Open WebUI service.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jakubburkiewicz/node-red-contrib-ollama"&gt;node-red-contrib-ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivostoykov/localAI"&gt;Local AI Helper&lt;/a&gt; (Chrome and Firefox extensions that enable interactions with the active tab and customisable API endpoints. Includes secure storage for user prompts.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jake83741/vnc-lm"&gt;vnc-lm&lt;/a&gt; (Discord bot for messaging with LLMs through Ollama and LiteLLM. Seamlessly move between local and flagship models.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SilasMarvin/lsp-ai"&gt;LSP-AI&lt;/a&gt; (Open-source language server for AI-powered functionality)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Palm1r/QodeAssist"&gt;QodeAssist&lt;/a&gt; (AI-powered coding assistant plugin for Qt Creator)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ECuiDev/obsidian-quiz-generator"&gt;Obsidian Quiz Generator plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philffm/ai-summary-helper"&gt;AI Summmary Helper plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/suncloudsmoon/TextCraft"&gt;TextCraft&lt;/a&gt; (Copilot in Word alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeitlings/alfred-ollama"&gt;Alfred Ollama&lt;/a&gt; (Alfred Workflow)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adarshM84/TextLLaMA"&gt;TextLLaMA&lt;/a&gt; A Chrome Extension that helps you write emails, correct grammar, and translate into any language&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zyphixor/simple-discord-ai"&gt;Simple-Discord-AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/innightwolfsleep/llm_telegram_bot"&gt;LLM Telegram Bot&lt;/a&gt; (telegram bot, primary for RP. Oobabooga-like buttons, &lt;a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui"&gt;A1111&lt;/a&gt; API integration e.t.c)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sammcj/mcp-llm"&gt;mcp-llm&lt;/a&gt; (MCP Server to allow LLMs to call other LLMs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HardCodeDev777/SimpleOllamaUnity"&gt;SimpleOllamaUnity&lt;/a&gt; (Unity Engine extension for communicating with Ollama in a few lines of code. Also works at runtime)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HardCodeDev777/UnityCodeLama"&gt;UnityCodeLama&lt;/a&gt; (Unity Edtior tool to analyze scripts via Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NativeMindBrowser/NativeMindExtension"&gt;NativeMind&lt;/a&gt; (Private, on-device AI Assistant, no cloud dependencies)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gmai.premex.se/"&gt;GMAI - Gradle Managed AI&lt;/a&gt; (Gradle plugin for automated Ollama lifecycle management during build phases)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nomyo-ai/nomyo-router"&gt;NOMYO Router&lt;/a&gt; (A transparent Ollama proxy with model deployment aware routing which auto-manages multiple Ollama instances in a given network)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported backends&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggml-org/llama.cpp"&gt;llama.cpp&lt;/a&gt; project founded by Georgi Gerganov.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Observability&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.comet.com/docs/opik/cookbook/ollama"&gt;Opik&lt;/a&gt; is an open-source platform to debug, evaluate, and monitor your LLM applications, RAG systems, and agentic workflows with comprehensive tracing, automated evaluations, and production-ready dashboards. Opik supports native intergration to Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lunary.ai/docs/integrations/ollama"&gt;Lunary&lt;/a&gt; is the leading open-source LLM observability platform. It provides a variety of enterprise-grade features such as real-time analytics, prompt templates management, PII masking, and comprehensive agent tracing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openlit/openlit"&gt;OpenLIT&lt;/a&gt; is an OpenTelemetry-native tool for monitoring Ollama Applications &amp;amp; GPUs using traces and metrics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.honeyhive.ai/integrations/ollama"&gt;HoneyHive&lt;/a&gt; is an AI observability and evaluation platform for AI agents. Use HoneyHive to evaluate agent performance, interrogate failures, and monitor quality in production.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://langfuse.com/docs/integrations/ollama"&gt;Langfuse&lt;/a&gt; is an open source LLM observability platform that enables teams to collaboratively monitor, evaluate and debug AI applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mlflow.org/docs/latest/llms/tracing/index.html#automatic-tracing"&gt;MLflow Tracing&lt;/a&gt; is an open source LLM observability tool with a convenient API to log and visualize traces, making it easy to debug and evaluate GenAI applications.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>gruntwork-io/terragrunt</title>
      <link>https://github.com/gruntwork-io/terragrunt</link>
      <description>&lt;p&gt;Terragrunt is a flexible orchestration tool that allows Infrastructure as Code written in OpenTofu/Terraform to scale.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Terragrunt&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://gruntwork.io/?ref=repo_terragrunt"&gt;&lt;img src="https://img.shields.io/badge/maintained%20by-gruntwork.io-%235849a6.svg?sanitize=true" alt="Maintained by Gruntwork.io" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/gruntwork-io/terragrunt"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gruntwork-io/terragrunt" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/gruntwork-io/terragrunt"&gt;&lt;img src="https://godoc.org/github.com/gruntwork-io/terragrunt?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/tofu-%3E%3D1.6.0-blue.svg?sanitize=true" alt="OpenTofu Version" /&gt; &lt;img src="https://img.shields.io/badge/tf-%3E%3D0.12.0-blue.svg?sanitize=true" alt="Terraform Version" /&gt;&lt;/p&gt; 
&lt;p&gt;Terragrunt is a flexible orchestration tool that allows Infrastructure as Code written in &lt;a href="https://opentofu.org"&gt;OpenTofu&lt;/a&gt;/&lt;a href="https://www.terraform.io"&gt;Terraform&lt;/a&gt; to scale.&lt;/p&gt; 
&lt;p&gt;Please see the following for more info, including install instructions and complete documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://terragrunt.gruntwork.io"&gt;Terragrunt Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://terragrunt.gruntwork.io/docs/getting-started/quick-start/"&gt;Getting started with Terragrunt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://terragrunt.gruntwork.io/docs"&gt;Terragrunt Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://terragrunt.gruntwork.io/docs/community/contributing"&gt;Contributing to Terragrunt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gruntwork.io/support/"&gt;Commercial Support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Join the Discord!&lt;/h2&gt; 
&lt;p&gt;Join &lt;a href="https://discord.gg/YENaT9h8jh"&gt;our community&lt;/a&gt; for discussions, support, and contributions:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/YENaT9h8jh"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/https://discord.gg/YENaT9h8jh" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This code is released under the MIT License. See &lt;a href="https://raw.githubusercontent.com/gruntwork-io/terragrunt/main/LICENSE.txt"&gt;LICENSE.txt&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>putyy/res-downloader</title>
      <link>https://github.com/putyy/res-downloader</link>
      <description>&lt;p&gt;ËßÜÈ¢ëÂè∑„ÄÅÂ∞èÁ®ãÂ∫è„ÄÅÊäñÈü≥„ÄÅÂø´Êâã„ÄÅÂ∞èÁ∫¢‰π¶„ÄÅÁõ¥Êí≠ÊµÅ„ÄÅm3u8„ÄÅÈÖ∑Áãó„ÄÅQQÈü≥‰πêÁ≠âÂ∏∏ËßÅÁΩëÁªúËµÑÊ∫ê‰∏ãËΩΩ!&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/putyy/res-downloader"&gt;&lt;img src="https://raw.githubusercontent.com/putyy/res-downloader/master/build/appicon.png" width="120" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h1&gt;res-downloader&lt;/h1&gt; 
 &lt;h4&gt;üìñ ‰∏≠Êñá | &lt;a href="https://github.com/putyy/res-downloader/raw/master/README-EN.md"&gt;English&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://github.com/putyy/res-downloader/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/putyy/res-downloader" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/putyy/res-downloader/fork"&gt;&lt;img src="https://img.shields.io/github/forks/putyy/res-downloader" alt="GitHub forks" /&gt;&lt;/a&gt; &lt;a href="https://github.com/putyy/res-downloader/releases"&gt;&lt;img src="https://img.shields.io/github/release/putyy/res-downloader" alt="GitHub release" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/downloads/putyy/res-downloader/total" alt="GitHub All Releases" /&gt; &lt;a href="https://github.com/putyy/res-downloader/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/putyy/res-downloader" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h3&gt;üéâ Áà±‰∫´Á¥†Êùê‰∏ãËΩΩÂô®&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‰∏ÄÊ¨æÂü∫‰∫é Go + &lt;a href="https://github.com/wailsapp/wails"&gt;Wails&lt;/a&gt; ÁöÑË∑®Âπ≥Âè∞ËµÑÊ∫ê‰∏ãËΩΩÂ∑•ÂÖ∑ÔºåÁÆÄÊ¥ÅÊòìÁî®ÔºåÊîØÊåÅÂ§öÁßçËµÑÊ∫êÂóÖÊé¢‰∏é‰∏ãËΩΩ„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;‚ú® ÂäüËÉΩÁâπËâ≤&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üöÄ &lt;strong&gt;ÁÆÄÂçïÊòìÁî®&lt;/strong&gt;ÔºöÊìç‰ΩúÁÆÄÂçïÔºåÁïåÈù¢Ê∏ÖÊô∞ÁæéËßÇ&lt;/li&gt; 
 &lt;li&gt;üñ•Ô∏è &lt;strong&gt;Â§öÂπ≥Âè∞ÊîØÊåÅ&lt;/strong&gt;ÔºöWindows / macOS / Linux&lt;/li&gt; 
 &lt;li&gt;üåê &lt;strong&gt;Â§öËµÑÊ∫êÁ±ªÂûãÊîØÊåÅ&lt;/strong&gt;ÔºöËßÜÈ¢ë / Èü≥È¢ë / ÂõæÁâá / m3u8 / Áõ¥Êí≠ÊµÅÁ≠â&lt;/li&gt; 
 &lt;li&gt;üì± &lt;strong&gt;Âπ≥Âè∞ÂÖºÂÆπÂπøÊ≥õ&lt;/strong&gt;ÔºöÊîØÊåÅÂæÆ‰ø°ËßÜÈ¢ëÂè∑„ÄÅÂ∞èÁ®ãÂ∫è„ÄÅÊäñÈü≥„ÄÅÂø´Êâã„ÄÅÂ∞èÁ∫¢‰π¶„ÄÅÈÖ∑ÁãóÈü≥‰πê„ÄÅQQÈü≥‰πêÁ≠â&lt;/li&gt; 
 &lt;li&gt;üåç &lt;strong&gt;‰ª£ÁêÜÊäìÂåÖ&lt;/strong&gt;ÔºöÊîØÊåÅËÆæÁΩÆ‰ª£ÁêÜËé∑ÂèñÂèóÈôêÁΩëÁªú‰∏ãÁöÑËµÑÊ∫ê&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìö ÊñáÊ°£ &amp;amp; ÁâàÊú¨&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìò &lt;a href="https://res.putyy.com/"&gt;Âú®Á∫øÊñáÊ°£&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üí¨ &lt;a href="https://www.putyy.com/app/admin/upload/img/20250418/6801d9554dc7.webp"&gt;Âä†ÂÖ•‰∫§ÊµÅÁæ§&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üß© &lt;a href="https://github.com/putyy/res-downloader/releases"&gt;ÊúÄÊñ∞Áâà&lt;/a&gt; ÔΩú &lt;a href="https://github.com/putyy/resd-mini"&gt;MiniÁâà ‰ΩøÁî®ÈªòËÆ§ÊµèËßàÂô®Â±ïÁ§∫UI&lt;/a&gt; ÔΩú &lt;a href="https://github.com/putyy/res-downloader/tree/old"&gt;ElectronÊóßÁâà ÊîØÊåÅWin7&lt;/a&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;em&gt;Áæ§Êª°Êó∂ÂèØÂä†ÂæÆ‰ø° &lt;code&gt;AmorousWorld&lt;/code&gt;ÔºåËØ∑Â§áÊ≥®‚Äúgithub‚Äù&lt;/em&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üß© ‰∏ãËΩΩÂú∞ÂùÄ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üÜï &lt;a href="https://github.com/putyy/res-downloader/releases"&gt;GitHub ‰∏ãËΩΩ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üÜï &lt;a href="https://wwjv.lanzoum.com/b04wgtfyb"&gt;ËìùÂ•è‰∫ë‰∏ãËΩΩÔºàÂØÜÁ†ÅÔºö9vs5Ôºâ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;‚ö†Ô∏è &lt;em&gt;Win7 Áî®Êà∑ËØ∑‰∏ãËΩΩ &lt;code&gt;2.3.0&lt;/code&gt; ÁâàÊú¨&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üñºÔ∏è È¢ÑËßà&lt;/h2&gt; 
&lt;h2&gt;&lt;img src="https://raw.githubusercontent.com/putyy/res-downloader/master/docs/images/show.webp" alt="È¢ÑËßà" /&gt;&lt;/h2&gt; 
&lt;h2&gt;üöÄ ‰ΩøÁî®ÊñπÊ≥ï&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ËØ∑Êåâ‰ª•‰∏ãÊ≠•È™§Êìç‰Ωú‰ª•Ê≠£Á°Æ‰ΩøÁî®ËΩØ‰ª∂Ôºö&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;ÂÆâË£ÖÊó∂Âä°ÂøÖ &lt;strong&gt;ÂÖÅËÆ∏ÂÆâË£ÖËØÅ‰π¶Êñá‰ª∂&lt;/strong&gt; Âπ∂ &lt;strong&gt;ÂÖÅËÆ∏ÁΩëÁªúËÆøÈóÆ&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;ÊâìÂºÄËΩØ‰ª∂ ‚Üí È¶ñÈ°µÂ∑¶‰∏äËßíÁÇπÂáª &lt;strong&gt;‚ÄúÂêØÂä®‰ª£ÁêÜ‚Äù&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;ÈÄâÊã©Ë¶ÅËé∑ÂèñÁöÑËµÑÊ∫êÁ±ªÂûãÔºàÈªòËÆ§ÂÖ®ÈÉ®Ôºâ&lt;/li&gt; 
 &lt;li&gt;Âú®Â§ñÈÉ®ÊâìÂºÄËµÑÊ∫êÈ°µÈù¢ÔºàÂ¶ÇËßÜÈ¢ëÂè∑„ÄÅÂ∞èÁ®ãÂ∫è„ÄÅÁΩëÈ°µÁ≠âÔºâ&lt;/li&gt; 
 &lt;li&gt;ËøîÂõûËΩØ‰ª∂È¶ñÈ°µÔºåÂç≥ÂèØÁúãÂà∞ËµÑÊ∫êÂàóË°®&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;‚ùì Â∏∏ËßÅÈóÆÈ¢ò&lt;/h2&gt; 
&lt;h3&gt;üì∫ m3u8 ËßÜÈ¢ëËµÑÊ∫ê&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Âú®Á∫øÈ¢ÑËßàÔºö&lt;a href="https://m3u8play.com/"&gt;m3u8play&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ËßÜÈ¢ë‰∏ãËΩΩÔºö&lt;a href="https://m3u8-down.gowas.cn/"&gt;m3u8-down&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üì° Áõ¥Êí≠ÊµÅËµÑÊ∫ê&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êé®Ëçê‰ΩøÁî® &lt;a href="https://obsproject.com/"&gt;OBS&lt;/a&gt; ËøõË°åÂΩïÂà∂ÔºàÊïôÁ®ãËØ∑ÁôæÂ∫¶Ôºâ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üê¢ ‰∏ãËΩΩÊÖ¢„ÄÅÂ§ßÊñá‰ª∂Â§±Ë¥•Ôºü&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êé®ËçêÂ∑•ÂÖ∑Ôºö 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.neatdownloadmanager.com/index.php/en/"&gt;Neat Download Manager&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://motrix.app/download"&gt;Motrix&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ËßÜÈ¢ëÂè∑ËµÑÊ∫ê‰∏ãËΩΩÂêéÂèØÂú®Êìç‰ΩúÈ°πÁÇπÂáª &lt;code&gt;ËßÜÈ¢ëËß£ÂØÜÔºàËßÜÈ¢ëÂè∑Ôºâ&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üß© ËΩØ‰ª∂Êó†Ê≥ïÊã¶Êà™ËµÑÊ∫êÔºü&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ê£ÄÊü•ÊòØÂê¶Ê≠£Á°ÆËÆæÁΩÆÁ≥ªÁªü‰ª£ÁêÜÔºö&lt;br /&gt; Âú∞ÂùÄÔºö127.0.0.1 Á´ØÂè£Ôºö8899&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üåê ÂÖ≥Èó≠ËΩØ‰ª∂ÂêéÊó†Ê≥ï‰∏äÁΩëÔºü&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ÊâãÂä®ÂÖ≥Èó≠Á≥ªÁªü‰ª£ÁêÜËÆæÁΩÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üß† Êõ¥Â§öÈóÆÈ¢ò&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/putyy/res-downloader/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://s.gowas.cn/d/4089"&gt;Áà±‰∫´ËÆ∫ÂùõËÆ®ËÆ∫Â∏ñ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üí° ÂÆûÁé∞ÂéüÁêÜ &amp;amp; ÂàùË°∑&lt;/h2&gt; 
&lt;p&gt;Êú¨Â∑•ÂÖ∑ÈÄöËøá‰ª£ÁêÜÊñπÂºèÂÆûÁé∞ÁΩëÁªúÊäìÂåÖÔºåÂπ∂Á≠õÈÄâÂèØÁî®ËµÑÊ∫ê„ÄÇ‰∏é Fiddler„ÄÅCharles„ÄÅÊµèËßàÂô® DevTools ÂéüÁêÜÁ±ª‰ººÔºå‰ΩÜÂØπËµÑÊ∫êËøõË°å‰∫ÜÊõ¥ÂèãÂ•ΩÁöÑÁ≠õÈÄâ„ÄÅÂ±ïÁ§∫ÂíåÂ§ÑÁêÜÔºåÂ§ßÂπÖÂ∫¶Èôç‰Ωé‰∫Ü‰ΩøÁî®Èó®ÊßõÔºåÊõ¥ÈÄÇÂêàÂ§ß‰ºóÁî®Êà∑‰ΩøÁî®„ÄÇ&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;‚ö†Ô∏è ÂÖçË¥£Â£∞Êòé&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Êú¨ËΩØ‰ª∂‰ªÖ‰æõÂ≠¶‰π†‰∏éÁ†îÁ©∂Áî®ÈÄîÔºåÁ¶ÅÊ≠¢Áî®‰∫é‰ªª‰ΩïÂïÜ‰∏öÊàñËøùÊ≥ïÁî®ÈÄî„ÄÇ&lt;br /&gt; Â¶ÇÂõ†Ê≠§‰∫ßÁîüÁöÑ‰ªª‰ΩïÊ≥ïÂæãË¥£‰ªªÔºåÊ¶Ç‰∏é‰ΩúËÄÖÊó†ÂÖ≥ÔºÅ&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>syncthing/syncthing</title>
      <link>https://github.com/syncthing/syncthing</link>
      <description>&lt;p&gt;Open Source Continuous File Synchronization&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://syncthing.net/"&gt;&lt;img src="https://raw.githubusercontent.com/syncthing/syncthing/main/assets/logo-text-128.png" alt="Syncthing" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://www.mozilla.org/MPL/2.0/"&gt;&lt;img src="https://img.shields.io/badge/license-MPLv2-blue.svg?style=flat-square" alt="MPLv2 License" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/88"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/88/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/syncthing/syncthing"&gt;&lt;img src="https://goreportcard.com/badge/github.com/syncthing/syncthing" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;p&gt;Syncthing is a &lt;strong&gt;continuous file synchronization program&lt;/strong&gt;. It synchronizes files between two or more computers. We strive to fulfill the goals below. The goals are listed in order of importance, the most important ones first. This is the summary version of the goal list - for more commentary, see the full &lt;a href="https://github.com/syncthing/syncthing/raw/main/GOALS.md"&gt;Goals document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Syncthing should be:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Safe From Data Loss&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Protecting the user's data is paramount. We take every reasonable precaution to avoid corrupting the user's files.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure Against Attackers&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Again, protecting the user's data is paramount. Regardless of our other goals, we must never allow the user's data to be susceptible to eavesdropping or modification by unauthorized parties.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Easy to Use&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing should be approachable, understandable, and inclusive.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automatic&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;User interaction should be required only when absolutely necessary.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Universally Available&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing should run on every common computer. We are mindful that the latest technology is not always available to every individual.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For Individuals&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing is primarily about empowering the individual user with safe, secure, and easy to use file synchronization.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Everything Else&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;There are many things we care about that don't make it on to the list. It is fine to optimize for these values, as long as they are not in conflict with the stated goals above.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Take a look at the &lt;a href="https://docs.syncthing.net/intro/getting-started.html"&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are a few examples for keeping Syncthing running in the background on your system in &lt;a href="https://github.com/syncthing/syncthing/raw/main/etc"&gt;the etc directory&lt;/a&gt;. There are also several &lt;a href="https://docs.syncthing.net/users/contrib.html#gui-wrappers"&gt;GUI implementations&lt;/a&gt; for Windows, Mac, and Linux.&lt;/p&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;p&gt;To run Syncthing in Docker, see &lt;a href="https://github.com/syncthing/syncthing/raw/main/README-Docker.md"&gt;the Docker README&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting in Touch&lt;/h2&gt; 
&lt;p&gt;The first and best point of contact is the &lt;a href="https://forum.syncthing.net/"&gt;Forum&lt;/a&gt;. If you've found something that is clearly a bug, feel free to report it in the &lt;a href="https://github.com/syncthing/syncthing/issues"&gt;GitHub issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you believe that you‚Äôve found a Syncthing-related security vulnerability, please report it by emailing &lt;a href="mailto:security@syncthing.net"&gt;security@syncthing.net&lt;/a&gt;. Do not report it in the Forum or issue tracker.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;Building Syncthing from source is easy. After extracting the source bundle from a release or checking out git, you just need to run &lt;code&gt;go run build.go&lt;/code&gt; and the binaries are created in &lt;code&gt;./bin&lt;/code&gt;. There's &lt;a href="https://docs.syncthing.net/dev/building.html"&gt;a guide&lt;/a&gt; with more details on the build process.&lt;/p&gt; 
&lt;h2&gt;Signed Releases&lt;/h2&gt; 
&lt;p&gt;Release binaries are GPG signed with the key available from &lt;a href="https://syncthing.net/security/"&gt;https://syncthing.net/security/&lt;/a&gt;. There is also a built-in automatic upgrade mechanism (disabled in some distribution channels) which uses a compiled in ECDSA signature. macOS and Windows binaries are also code-signed.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Please see the Syncthing &lt;a href="https://docs.syncthing.net/"&gt;documentation site&lt;/a&gt; &lt;a href="https://github.com/syncthing/docs"&gt;[source]&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All code is licensed under the &lt;a href="https://github.com/syncthing/syncthing/raw/main/LICENSE"&gt;MPLv2 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>smartcontractkit/chainlink</title>
      <link>https://github.com/smartcontractkit/chainlink</link>
      <description>&lt;p&gt;node of the decentralized oracle network, bridging on and off-chain computation&lt;/p&gt;&lt;hr&gt;&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://chain.link" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/logo-chainlink-blue.svg?sanitize=true" width="225" alt="Chainlink logo" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/smartcontract/chainlink/tags"&gt;&lt;img src="https://img.shields.io/github/v/tag/smartcontractkit/chainlink?style=flat-square" alt="GitHub tag (latest SemVer)" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/smartcontractkit/chainlink?style=flat-square" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/actions/workflows/changeset.yml?query=workflow%3AChangeset"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/smartcontractkit/chainlink/changeset.yml" alt="GitHub workflow changeset" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors-anon/smartcontractkit/chainlink?style=flat-square" alt="GitHub contributors" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/commits/master"&gt;&lt;img src="https://img.shields.io/github/commit-activity/y/smartcontractkit/chainlink?style=flat-square" alt="GitHub commit activity" /&gt;&lt;/a&gt; &lt;a href="https://docs.chain.link/"&gt;&lt;img src="https://img.shields.io/static/v1?label=docs&amp;amp;message=latest&amp;amp;color=blue" alt="Official documentation" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://chain.link/"&gt;Chainlink&lt;/a&gt; expands the capabilities of smart contracts by enabling access to real-world data and off-chain computation while maintaining the security and reliability guarantees inherent to blockchain technology.&lt;/p&gt; 
&lt;p&gt;This repo contains the Chainlink core node and contracts. The core node is the bundled binary available to be run by node operators participating in a &lt;a href="https://link.smartcontract.com/whitepaper"&gt;decentralized oracle network&lt;/a&gt;. All major release versions have pre-built docker images available for download from the &lt;a href="https://hub.docker.com/r/smartcontract/chainlink/tags"&gt;Chainlink dockerhub&lt;/a&gt;. If you are interested in contributing please see our &lt;a href="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;. If you are here to report a bug or request a feature, please &lt;a href="https://github.com/smartcontractkit/chainlink/issues"&gt;check currently open Issues&lt;/a&gt;. For more information about how to get started with Chainlink, check our &lt;a href="https://docs.chain.link/"&gt;official documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Chainlink has an active and ever growing community. &lt;a href="https://discordapp.com/invite/aSK4zew"&gt;Discord&lt;/a&gt; is the primary communication channel used for day to day communication, answering development questions, and aggregating Chainlink related content. Take a look at the &lt;a href="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/COMMUNITY.md"&gt;community docs&lt;/a&gt; for more information regarding Chainlink social accounts, news, and networking.&lt;/p&gt; 
&lt;h2&gt;Build Chainlink&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/doc/install"&gt;Install Go 1.23&lt;/a&gt;, and add your GOPATH's &lt;a href="https://golang.org/doc/code.html#GOPATH"&gt;bin directory to your PATH&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Example Path for macOS &lt;code&gt;export PATH=$GOPATH/bin:$PATH&lt;/code&gt; &amp;amp; &lt;code&gt;export GOPATH=/Users/$USER/go&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;a href="https://nodejs.org/en/download/package-manager/"&gt;NodeJS v20&lt;/a&gt; &amp;amp; &lt;a href="https://pnpm.io/installation#using-npm"&gt;pnpm v10 via npm&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;It might be easier long term to use &lt;a href="https://nodejs.org/en/download/package-manager/#nvm"&gt;nvm&lt;/a&gt; to switch between node versions for different projects. For example, assuming $NODE_VERSION was set to a valid version of NodeJS, you could run: &lt;code&gt;nvm install $NODE_VERSION &amp;amp;&amp;amp; nvm use $NODE_VERSION&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;a href="https://wiki.postgresql.org/wiki/Detailed_installation_guides"&gt;Postgres (&amp;gt;= 12.x)&lt;/a&gt;. It is recommended to run the latest major version of postgres. 
  &lt;ul&gt; 
   &lt;li&gt;Note if you are running the official Chainlink docker image, the highest supported Postgres version is 16.x due to the bundled client.&lt;/li&gt; 
   &lt;li&gt;You should &lt;a href="https://www.postgresql.org/docs/current/ssl-tcp.html"&gt;configure Postgres&lt;/a&gt; to use SSL connection (or for testing you can set &lt;code&gt;?sslmode=disable&lt;/code&gt; in your Postgres query string).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Download Chainlink: &lt;code&gt;git clone https://github.com/smartcontractkit/chainlink &amp;amp;&amp;amp; cd chainlink&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Build and install Chainlink: &lt;code&gt;make install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run the node: &lt;code&gt;chainlink help&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For the latest information on setting up a development environment, see the &lt;a href="https://github.com/smartcontractkit/chainlink/wiki/Development-Setup-Guide"&gt;Development Setup Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Build from PR&lt;/h3&gt; 
&lt;p&gt;To build an unofficial testing-only image from a feature branch or PR. You can do one of the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Send a workflow dispatch event from our &lt;a href="https://github.com/smartcontractkit/chainlink/actions/workflows/docker-build.yml"&gt;&lt;code&gt;docker-build&lt;/code&gt; workflow&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Add the &lt;code&gt;build-publish&lt;/code&gt; label to your PR and then either retry the &lt;code&gt;docker-build&lt;/code&gt; workflow, or push a new commit.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Build Plugins&lt;/h3&gt; 
&lt;p&gt;Plugins are defined in yaml files within the &lt;code&gt;plugins/&lt;/code&gt; directory. Each plugin file is a yaml file and has a &lt;code&gt;plugins.&lt;/code&gt; prefix name. Plugins are installed with &lt;a href="https://github.com/smartcontractkit/chainlink-common/tree/main/pkg/loop/cmd/loopinstall"&gt;loopinstall&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To install the plugins, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make install-plugins
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Some plugins (such as those in &lt;code&gt;plugins/plugins.private.yaml&lt;/code&gt;) reference private GitHub repositories. To build these plugins, you must have a GITHUB_TOKEN environment variable set, or preferably use the &lt;a href="https://cli.github.com/manual/gh"&gt;gh&lt;/a&gt; GitHub CLI tool to use the &lt;a href="https://cli.github.com/manual/gh_auth_setup-git"&gt;GitHub CLI credential helper&lt;/a&gt; like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Sets up a credential helper.
gh auth setup-git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can build the plugins with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make install-plugins-private
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker Builds&lt;/h3&gt; 
&lt;p&gt;To build the experimental "plugins" Chainlink docker image, you can run this from the root of the repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# The GITHUB_TOKEN is required to access private repos which are used by some plugins.
export GITHUB_TOKEN=$(gh auth token) # requires the `gh` cli tool.
make docker-plugins
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ethereum Execution Client Requirements&lt;/h3&gt; 
&lt;p&gt;In order to run the Chainlink node you must have access to a running Ethereum node with an open websocket connection. Any Ethereum based network will work once you've &lt;a href="https://github.com/smartcontractkit/chainlink#configure"&gt;configured&lt;/a&gt; the chain ID. Ethereum node versions currently tested and supported:&lt;/p&gt; 
&lt;p&gt;[Officially supported]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openethereum/openethereum"&gt;Parity/Openethereum&lt;/a&gt; (NOTE: Parity is deprecated and support for this client may be removed in future)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ethereum/go-ethereum/releases"&gt;Geth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyperledger/besu"&gt;Besu&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;[Supported but broken] These clients are supported by Chainlink, but have bugs that prevent Chainlink from working reliably on these execution clients.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NethermindEth/nethermind"&gt;Nethermind&lt;/a&gt; Blocking issues: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;del&gt;&lt;a href="https://github.com/NethermindEth/nethermind/issues/4384"&gt;https://github.com/NethermindEth/nethermind/issues/4384&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ledgerwatch/erigon"&gt;Erigon&lt;/a&gt; Blocking issues: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ledgerwatch/erigon/discussions/4946"&gt;https://github.com/ledgerwatch/erigon/discussions/4946&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ledgerwatch/erigon/issues/4030#issuecomment-1113964017"&gt;https://github.com/ledgerwatch/erigon/issues/4030#issuecomment-1113964017&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We cannot recommend specific version numbers for ethereum nodes since the software is being continually updated, but you should usually try to run the latest version available.&lt;/p&gt; 
&lt;h2&gt;Running a local Chainlink node&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: By default, chainlink will run in TLS mode. For local development you can disable this by using a &lt;code&gt;dev build&lt;/code&gt; using &lt;code&gt;make chainlink-dev&lt;/code&gt; and setting the TOML fields:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[WebServer]
SecureCookies = false
TLS.HTTPSPort = 0

[Insecure]
DevWebServer = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can generate self signed certificates using &lt;code&gt;tools/bin/self-signed-certs&lt;/code&gt; or &lt;a href="https://github.com/smartcontractkit/chainlink/wiki/Creating-Self-Signed-Certificates"&gt;manually&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To start your Chainlink node, simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;chainlink node start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default this will start on port 6688. You should be able to access the UI at &lt;a href="http://localhost:6688/"&gt;http://localhost:6688/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Chainlink provides a remote CLI client as well as a UI. Once your node has started, you can open a new terminal window to use the CLI. You will need to log in to authorize the client first:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;chainlink admin login
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(You can also set &lt;code&gt;ADMIN_CREDENTIALS_FILE=/path/to/credentials/file&lt;/code&gt; in future if you like, to avoid having to login again).&lt;/p&gt; 
&lt;p&gt;Now you can view your current jobs with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;chainlink jobs list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To find out more about the Chainlink CLI, you can always run &lt;code&gt;chainlink help&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href="https://docs.chain.link/"&gt;doc&lt;/a&gt; pages on &lt;a href="https://docs.chain.link/docs/jobs/"&gt;Jobs&lt;/a&gt; to learn more about how to create Jobs.&lt;/p&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;Node configuration is managed by a combination of environment variables and direct setting via API/UI/CLI.&lt;/p&gt; 
&lt;p&gt;Check the &lt;a href="https://docs.chain.link/docs/configuration-variables"&gt;official documentation&lt;/a&gt; for more information on how to configure your node.&lt;/p&gt; 
&lt;h3&gt;External Adapters&lt;/h3&gt; 
&lt;p&gt;External adapters are what make Chainlink easily extensible, providing simple integration of custom computations and specialized APIs. A Chainlink node communicates with external adapters via a simple REST API.&lt;/p&gt; 
&lt;p&gt;For more information on creating and using external adapters, please see our &lt;a href="https://docs.chain.link/docs/external-adapters"&gt;external adapters page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Verify Official Chainlink Releases&lt;/h2&gt; 
&lt;p&gt;We use &lt;code&gt;cosign&lt;/code&gt; with OIDC keyless signing during the &lt;a href="https://github.com/smartcontractkit/chainlink/actions/workflows/build-publish.yml"&gt;Build, Sign and Publish Chainlink&lt;/a&gt; workflow.&lt;/p&gt; 
&lt;p&gt;It is encourage for any node operator building from the official Chainlink docker image to verify the tagged release version was did indeed built from this workflow.&lt;/p&gt; 
&lt;p&gt;You will need &lt;code&gt;cosign&lt;/code&gt; in order to do this verification. &lt;a href="https://docs.sigstore.dev/system_config/installation/"&gt;Follow the instruction here to install cosign&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# tag is the tagged release version - ie. 2.16.0
cosign verify index.docker.io/smartcontract/chainlink:${tag} \
      --certificate-oidc-issuer https://token.actions.githubusercontent.com \
      --certificate-identity "https://github.com/smartcontractkit/chainlink/.github/workflows/build-publish.yml@refs/tags/v${tag}"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Running tests&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://pnpm.io/installation#using-npm"&gt;Install pnpm 10 via npm&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;a href="https://github.com/fjl/gencodec"&gt;gencodec&lt;/a&gt; and &lt;a href="https://stedolan.github.io/jq/download/"&gt;jq&lt;/a&gt; to be able to run &lt;code&gt;go generate ./...&lt;/code&gt; and &lt;code&gt;make abigen&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install mockery&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;make mockery&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Using the &lt;code&gt;make&lt;/code&gt; command will install the correct version.&lt;/p&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Generate and compile static assets:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make generate
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Prepare your development environment:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The tests require a postgres database. In turn, the environment variable &lt;code&gt;CL_DATABASE_URL&lt;/code&gt; must be set to value that can connect to &lt;code&gt;_test&lt;/code&gt; database, and the user must be able to create and drop the given &lt;code&gt;_test&lt;/code&gt; database.&lt;/p&gt; 
&lt;p&gt;Note: Other environment variables should not be set for all tests to pass&lt;/p&gt; 
&lt;p&gt;There helper script for initial setup to create an appropriate test user. It requires postgres to be running on localhost at port 5432. You will be prompted for the &lt;code&gt;postgres&lt;/code&gt; user password&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make setup-testdb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This script will save the &lt;code&gt;CL_DATABASE_URL&lt;/code&gt; in &lt;code&gt;.dbenv&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Changes to database require migrations to be run. Similarly, &lt;code&gt;pull&lt;/code&gt;'ing the repo may require migrations to run. After the one-time setup above:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;source .dbenv
make testdb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you encounter the error &lt;code&gt;database accessed by other users (SQLSTATE 55006) exit status 1&lt;/code&gt; and you want force the database creation then use&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;source .dbenv
make testdb-force
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="7"&gt; 
 &lt;li&gt;Run tests:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go test ./...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Notes&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;parallel&lt;/code&gt; flag can be used to limit CPU usage, for running tests in the background (&lt;code&gt;-parallel=4&lt;/code&gt;) - the default is &lt;code&gt;GOMAXPROCS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;p&lt;/code&gt; flag can be used to limit the number of &lt;em&gt;packages&lt;/em&gt; tested concurrently, if they are interferring with one another (&lt;code&gt;-p=1&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;-short&lt;/code&gt; flag skips tests which depend on the database, for quickly spot checking simpler tests in around one minute&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Race Detector&lt;/h4&gt; 
&lt;p&gt;As of Go 1.1, the runtime includes a data race detector, enabled with the &lt;code&gt;-race&lt;/code&gt; flag. This is used in CI via the &lt;code&gt;tools/bin/go_core_race_tests&lt;/code&gt; script. If the action detects a race, the artifact on the summary page will include &lt;code&gt;race.*&lt;/code&gt; files with detailed stack traces.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;&lt;strong&gt;It will not issue false positives, so take its warnings seriously.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For local, targeted race detection, you can run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;GORACE="log_path=$PWD/race" go test -race ./core/path/to/pkg -count 10
GORACE="log_path=$PWD/race" go test -race ./core/path/to/pkg -count 100 -run TestFooBar/sub_test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://go.dev/doc/articles/race_detector"&gt;https://go.dev/doc/articles/race_detector&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Fuzz tests&lt;/h4&gt; 
&lt;p&gt;As of Go 1.18, fuzz tests &lt;code&gt;func FuzzXXX(*testing.F)&lt;/code&gt; are included as part of the normal test suite, so existing cases are executed with &lt;code&gt;go test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, you can run active fuzzing to search for new cases:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go test ./pkg/path -run=XXX -fuzz=FuzzTestName
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://go.dev/doc/fuzz/"&gt;https://go.dev/doc/fuzz/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Go Modules&lt;/h3&gt; 
&lt;p&gt;This repository contains three Go modules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;flowchart RL
    github.com/smartcontractkit/chainlink/v2
    github.com/smartcontractkit/chainlink/integration-tests --&amp;gt; github.com/smartcontractkit/chainlink/v2
    github.com/smartcontractkit/chainlink/core/scripts --&amp;gt; github.com/smartcontractkit/chainlink/v2

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;integration-tests&lt;/code&gt; and &lt;code&gt;core/scripts&lt;/code&gt; modules import the root module using a relative replace in their &lt;code&gt;go.mod&lt;/code&gt; files, so dependency changes in the root &lt;code&gt;go.mod&lt;/code&gt; often require changes in those modules as well. After making a change, &lt;code&gt;go mod tidy&lt;/code&gt; can be run on all three modules using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make gomodtidy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Generation&lt;/h3&gt; 
&lt;p&gt;Go generate is used to generate mocks in this project. Mocks are generated with &lt;a href="https://github.com/vektra/mockery"&gt;mockery&lt;/a&gt; and live in core/internal/mocks.&lt;/p&gt; 
&lt;h3&gt;Nix&lt;/h3&gt; 
&lt;p&gt;A &lt;a href="https://nixos.wiki/wiki/Development_environment_with_nix-shell"&gt;shell.nix&lt;/a&gt; is provided for use with the &lt;a href="https://nixos.org/"&gt;Nix package manager&lt;/a&gt;. By default,we utilize the shell through &lt;a href="https://nixos.wiki/wiki/Flakes"&gt;Nix Flakes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Nix defines a declarative, reproducible development environment. Flakes version use deterministic, frozen (&lt;code&gt;flake.lock&lt;/code&gt;) dependencies to gain more consistency/reproducibility on the built artifacts.&lt;/p&gt; 
&lt;p&gt;To use it:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;a href="https://nixos.org/download.html"&gt;nix package manager&lt;/a&gt; in your system.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enable &lt;a href="https://nixos.wiki/wiki/Flakes#Enable_flakes"&gt;flakes support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Run &lt;code&gt;nix develop&lt;/code&gt;. You will be put in shell containing all the dependencies.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Optionally, &lt;code&gt;nix develop --command $SHELL&lt;/code&gt; will make use of your current shell instead of the default (bash).&lt;/li&gt; 
 &lt;li&gt;You can use &lt;code&gt;direnv&lt;/code&gt; to enable it automatically when &lt;code&gt;cd&lt;/code&gt;-ing into the folder; for that, enable &lt;a href="https://github.com/nix-community/nix-direnv"&gt;nix-direnv&lt;/a&gt; and &lt;code&gt;use flake&lt;/code&gt; on it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Create a local postgres database:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;mkdir -p $PGDATA &amp;amp;&amp;amp; cd $PGDATA/
initdb
pg_ctl -l postgres.log -o "--unix_socket_directories='$PWD'" start
createdb chainlink_test -h localhost
createuser --superuser --password chainlink -h localhost
# then type a test password, e.g.: chainlink, and set it in shell.nix CL_DATABASE_URL
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;When re-entering project, you can restart postgres: &lt;code&gt;cd $PGDATA; pg_ctl -l postgres.log -o "--unix_socket_directories='$PWD'" start&lt;/code&gt; Now you can run tests or compile code as usual.&lt;/li&gt; 
 &lt;li&gt;When you're done, stop it: &lt;code&gt;cd $PGDATA; pg_ctl -o "--unix_socket_directories='$PWD'" stop&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Changesets&lt;/h3&gt; 
&lt;p&gt;We use &lt;a href="https://github.com/changesets/changesets"&gt;changesets&lt;/a&gt; to manage versioning for libs and the services.&lt;/p&gt; 
&lt;p&gt;Every PR that modifies any configuration or code, should most likely accompanied by a changeset file.&lt;/p&gt; 
&lt;p&gt;To install &lt;code&gt;changesets&lt;/code&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;code&gt;pnpm&lt;/code&gt; if it is not already installed - &lt;a href="https://pnpm.io/installation"&gt;docs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;pnpm install&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Either after or before you create a commit, run the &lt;code&gt;pnpm changeset&lt;/code&gt; command to create an accompanying changeset entry which will reflect on the CHANGELOG for the next release.&lt;/p&gt; 
&lt;p&gt;The format is based on &lt;a href="https://keepachangelog.com/en/1.0.0/"&gt;Keep a Changelog&lt;/a&gt;,&lt;/p&gt; 
&lt;p&gt;and this project adheres to &lt;a href="https://semver.org/spec/v2.0.0.html"&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Tips&lt;/h3&gt; 
&lt;p&gt;For more tips on how to build and test Chainlink, see our &lt;a href="https://github.com/smartcontractkit/chainlink/wiki/Development-Tips"&gt;development tips page&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Contributions are welcome to Chainlink's source code.&lt;/p&gt; 
&lt;p&gt;Please check out our &lt;a href="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Thank you!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>modelcontextprotocol/registry</title>
      <link>https://github.com/modelcontextprotocol/registry</link>
      <description>&lt;p&gt;A community driven registry service for Model Context Protocol (MCP) servers.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP Registry&lt;/h1&gt; 
&lt;p&gt;The MCP registry provides MCP clients with a list of MCP servers, like an app store for MCP servers.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/docs/guides/publishing/publish-server.md"&gt;&lt;strong&gt;üì§ Publish my MCP server&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://registry.modelcontextprotocol.io/docs"&gt;&lt;strong&gt;‚ö°Ô∏è Live API docs&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/docs/explanations/ecosystem-vision.md"&gt;&lt;strong&gt;üëÄ Ecosystem vision&lt;/strong&gt;&lt;/a&gt; | üìñ &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/docs"&gt;Full documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Development Status&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;2025-10-24 update&lt;/strong&gt;: The Registry API has entered an &lt;strong&gt;API freeze (v0.1)&lt;/strong&gt; üéâ. For the next month or more, the API will remain stable with no breaking changes, allowing integrators to confidently implement support. This freeze applies to v0.1 while development continues on v0. We'll use this period to validate the API in real-world integrations and gather feedback to shape v1 for general availability. Thank you to everyone for your contributions and patience‚Äîyour involvement has been key to getting us here!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2025-09-08 update&lt;/strong&gt;: The registry has launched in preview üéâ (&lt;a href="https://blog.modelcontextprotocol.io/posts/2025-09-08-mcp-registry-preview/"&gt;announcement blog post&lt;/a&gt;). While the system is now more stable, this is still a preview release and breaking changes or data resets may occur. A general availability (GA) release will follow later. We'd love your feedback in &lt;a href="https://github.com/modelcontextprotocol/registry/discussions/new?category=ideas"&gt;GitHub discussions&lt;/a&gt; or in the &lt;a href="https://discord.com/channels/1358869848138059966/1369487942862504016"&gt;#registry-dev Discord&lt;/a&gt; (&lt;a href="https://modelcontextprotocol.io/community/communication"&gt;joining details here&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;Current key maintainers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Adam Jones&lt;/strong&gt; (Anthropic) &lt;a href="https://github.com/domdomegg"&gt;@domdomegg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tadas Antanavicius&lt;/strong&gt; (PulseMCP) &lt;a href="https://github.com/tadasant"&gt;@tadasant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Toby Padilla&lt;/strong&gt; (GitHub) &lt;a href="https://github.com/toby"&gt;@toby&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Radoslav (Rado) Dimitrov&lt;/strong&gt; (Stacklok) &lt;a href="https://github.com/rdimitrov"&gt;@rdimitrov&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We use multiple channels for collaboration - see &lt;a href="https://modelcontextprotocol.io/community/communication"&gt;modelcontextprotocol.io/community/communication&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Often (but not always) ideas flow through this pipeline:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://modelcontextprotocol.io/community/communication"&gt;Discord&lt;/a&gt;&lt;/strong&gt; - Real-time community discussions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/modelcontextprotocol/registry/discussions"&gt;Discussions&lt;/a&gt;&lt;/strong&gt; - Propose and discuss product/technical requirements&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/modelcontextprotocol/registry/issues"&gt;Issues&lt;/a&gt;&lt;/strong&gt; - Track well-scoped technical work&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/modelcontextprotocol/registry/pulls"&gt;Pull Requests&lt;/a&gt;&lt;/strong&gt; - Contribute work towards issues&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick start:&lt;/h3&gt; 
&lt;h4&gt;Pre-requisites&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Go 1.24.x&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;golangci-lint v2.4.0&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Running the server&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start full development environment
make dev-compose
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This starts the registry at &lt;a href="http://localhost:8080"&gt;&lt;code&gt;localhost:8080&lt;/code&gt;&lt;/a&gt; with PostgreSQL. The database uses ephemeral storage and is reset each time you restart the containers, ensuring a clean state for development and testing.&lt;/p&gt; 
&lt;p&gt;By default, the registry seeds from the production API with a filtered subset of servers (to keep startup fast). This ensures your local environment mirrors production behavior and all seed data passes validation. For offline development you can seed from a file without validation with &lt;code&gt;MCP_REGISTRY_SEED_FROM=data/seed.json MCP_REGISTRY_ENABLE_REGISTRY_VALIDATION=false make dev-compose&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The setup can be configured with environment variables in &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt; - see &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/.env.example"&gt;.env.example&lt;/a&gt; for a reference.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Alternative: Running a pre-built Docker image&lt;/summary&gt; 
 &lt;p&gt;Pre-built Docker images are automatically published to GitHub Container Registry:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Run latest stable release
docker run -p 8080:8080 ghcr.io/modelcontextprotocol/registry:latest

# Run latest from main branch (continuous deployment)
docker run -p 8080:8080 ghcr.io/modelcontextprotocol/registry:main

# Run specific release version
docker run -p 8080:8080 ghcr.io/modelcontextprotocol/registry:v1.0.0

# Run development build from main branch
docker run -p 8080:8080 ghcr.io/modelcontextprotocol/registry:main-20250906-abc123d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Available tags:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Releases&lt;/strong&gt;: &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;v1.0.0&lt;/code&gt;, &lt;code&gt;v1.1.0&lt;/code&gt;, etc.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Continuous&lt;/strong&gt;: &lt;code&gt;main&lt;/code&gt; (latest main branch build)&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Development&lt;/strong&gt;: &lt;code&gt;main-&amp;lt;date&amp;gt;-&amp;lt;sha&amp;gt;&lt;/code&gt; (specific commit builds)&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h4&gt;Publishing a server&lt;/h4&gt; 
&lt;p&gt;To publish a server, we've built a simple CLI. You can use it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Build the latest CLI
make publisher

# Use it!
./bin/mcp-publisher --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/docs/guides/publishing/publish-server.md"&gt;the publisher guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h4&gt;Other commands&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run lint, unit tests and integration tests
make check
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are also a few more helpful commands for development. Run &lt;code&gt;make help&lt;/code&gt; to learn more, or look in &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/Makefile"&gt;Makefile&lt;/a&gt;.&lt;/p&gt; 
&lt;!--
For Claude and other AI tools: Always prefer make targets over custom commands where possible.
--&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;h3&gt;Project Structure&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;‚îú‚îÄ‚îÄ cmd/                     # Application entry points
‚îÇ   ‚îî‚îÄ‚îÄ publisher/           # Server publishing tool
‚îú‚îÄ‚îÄ data/                    # Seed data
‚îú‚îÄ‚îÄ deploy/                  # Deployment configuration (Pulumi)
‚îú‚îÄ‚îÄ docs/                    # Documentation
‚îú‚îÄ‚îÄ internal/                # Private application code
‚îÇ   ‚îú‚îÄ‚îÄ api/                 # HTTP handlers and routing
‚îÇ   ‚îú‚îÄ‚îÄ auth/                # Authentication (GitHub OAuth, JWT, namespace blocking)
‚îÇ   ‚îú‚îÄ‚îÄ config/              # Configuration management
‚îÇ   ‚îú‚îÄ‚îÄ database/            # Data persistence (PostgreSQL)
‚îÇ   ‚îú‚îÄ‚îÄ service/             # Business logic
‚îÇ   ‚îú‚îÄ‚îÄ telemetry/           # Metrics and monitoring
‚îÇ   ‚îî‚îÄ‚îÄ validators/          # Input validation
‚îú‚îÄ‚îÄ pkg/                     # Public packages
‚îÇ   ‚îú‚îÄ‚îÄ api/                 # API types and structures
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ v0/              # Version 0 API types
‚îÇ   ‚îî‚îÄ‚îÄ model/               # Data models for server.json
‚îú‚îÄ‚îÄ scripts/                 # Development and testing scripts
‚îú‚îÄ‚îÄ tests/                   # Integration tests
‚îî‚îÄ‚îÄ tools/                   # CLI tools and utilities
    ‚îî‚îÄ‚îÄ validate-*.sh        # Schema validation tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Authentication&lt;/h3&gt; 
&lt;p&gt;Publishing supports multiple authentication methods:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub OAuth&lt;/strong&gt; - For publishing by logging into GitHub&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub OIDC&lt;/strong&gt; - For publishing from GitHub Actions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DNS verification&lt;/strong&gt; - For proving ownership of a domain and its subdomains&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP verification&lt;/strong&gt; - For proving ownership of a domain&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The registry validates namespace ownership when publishing. E.g. to publish...:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;io.github.domdomegg/my-cool-mcp&lt;/code&gt; you must login to GitHub as &lt;code&gt;domdomegg&lt;/code&gt;, or be in a GitHub Action on domdomegg's repos&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;me.adamjones/my-cool-mcp&lt;/code&gt; you must prove ownership of &lt;code&gt;adamjones.me&lt;/code&gt; via DNS or HTTP challenge&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community Projects&lt;/h2&gt; 
&lt;p&gt;Check out &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/docs/community-projects.md"&gt;community projects&lt;/a&gt; to explore notable registry-related work created by the community.&lt;/p&gt; 
&lt;h2&gt;More documentation&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/registry/main/docs"&gt;documentation&lt;/a&gt; for more details if your question has not been answered here!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rivo/tview</title>
      <link>https://github.com/rivo/tview</link>
      <description>&lt;p&gt;Terminal UI library with rich, interactive widgets ‚Äî¬†written in Golang&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rich Interactive Widgets for Terminal UIs&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/rivo/tview"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/rivo/tview" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/rivo/tview"&gt;&lt;img src="https://img.shields.io/badge/go%20report-A%2B-brightgreen.svg?sanitize=true" alt="Go Report" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This Go package provides commonly used components for terminal based user interfaces.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/rivo/tview/master/tview.gif" alt="Screenshot" /&gt;&lt;/p&gt; 
&lt;p&gt;Among these components are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Input forms&lt;/strong&gt; (including &lt;strong&gt;text input&lt;/strong&gt;, &lt;strong&gt;selections&lt;/strong&gt;, &lt;strong&gt;checkboxes&lt;/strong&gt;, and &lt;strong&gt;buttons&lt;/strong&gt;)&lt;/li&gt; 
 &lt;li&gt;Navigable multi-color &lt;strong&gt;text views&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Editable multi-line &lt;strong&gt;text areas&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Sophisticated navigable &lt;strong&gt;table views&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Flexible &lt;strong&gt;tree views&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Selectable &lt;strong&gt;lists&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Images&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grid&lt;/strong&gt;, &lt;strong&gt;Flexbox&lt;/strong&gt; and &lt;strong&gt;page layouts&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Modal &lt;strong&gt;message windows&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;An &lt;strong&gt;application&lt;/strong&gt; wrapper&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;They come with lots of customization options and can be easily extended to fit your needs.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To add this package to your project:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/rivo/tview@master
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Hello World&lt;/h2&gt; 
&lt;p&gt;This basic example creates a box titled "Hello, World!" and displays it in your terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"github.com/rivo/tview"
)

func main() {
	box := tview.NewBox().SetBorder(true).SetTitle("Hello, world!")
	if err := tview.NewApplication().SetRoot(box, true).Run(); err != nil {
		panic(err)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check out the &lt;a href="https://github.com/rivo/tview/wiki"&gt;GitHub Wiki&lt;/a&gt; for more examples along with screenshots. Or try the examples in the "demos" subdirectory.&lt;/p&gt; 
&lt;p&gt;For a presentation highlighting this package, compile and run the program found in the "demos/presentation" subdirectory.&lt;/p&gt; 
&lt;h2&gt;Projects using &lt;code&gt;tview&lt;/code&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/derailed/k9s"&gt;K9s - Kubernetes CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termoose/irccloud"&gt;IRCCloud Terminal Client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/epiclabs-io/winman"&gt;Window manager for &lt;code&gt;tview&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Endi1/drawer"&gt;CLI bookmark manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/IdlePhysicist/cave-logger"&gt;A caving database interface written in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bannzai/itree"&gt;Interactive file browse and exec any command.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Macmod/godap"&gt;A complete TUI for LDAP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/broadcastle/crm"&gt;A simple CRM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cyberdummy/todoista"&gt;Terminal UI for todist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dcaiafa/kpick"&gt;Graphical kubectl wrapper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/decred/dcrdex"&gt;Decred Decentralized Exchange &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/destinmoulton/pixi"&gt;A CLI file browser for Raspberry PI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/divramod/dp"&gt;A tool to manage projects.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/erleene/go-bmi"&gt;A simple app for BMI monitoring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/godsic/vibe"&gt;Stream TIDAL from command line&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/guillaumemichel/passtor/"&gt;Secure solution for fully decentralized password management&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muesli/service-tools/"&gt;A growing collection of convenient little tools to work with systemd services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nitishm/redis-terminal"&gt;A terminal based browser for Redis written in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pablogadhi/XMPPClient"&gt;First project for the Computer Networks course.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shilangyu/typer-go"&gt;Test your typing speed in the terminal!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skanehira/docui"&gt;TUI Client for Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stephane-martin/vssh"&gt;SSH client using certificates signed by HashiCorp Vault&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thebsdbox/vctui"&gt;VMware vCenter Text UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tryffel/bookmarker"&gt;Bookmarks on terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vaelen/udp-tester"&gt;A UDP testing utility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/witchard/toukan"&gt;A simple Kanban board for your terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wtfutil/wtf"&gt;The personal information dashboard for your terminal. &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xxjwxc/gormt"&gt;MySQL database to Golang struct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/diamondburned/6cord"&gt;Discord, TUI and SIXEL.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.github.com/dhulihan/grump"&gt;A CLI Audio Player&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/profclems/glab"&gt;GLab, a GitLab CLI tool&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/swartzrock/ecsview"&gt;Browse your AWS ECS Clusters in the Terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ajaxray/geek-life"&gt;The CLI Task Manager for Geeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dundee/gdu"&gt;Fast disk usage analyzer written in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qnkhuat/gochess"&gt;Multiplayer Chess On Terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/issadarkthing/gomu"&gt;Scriptable TUI music player&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/darylhjd/mangadesk"&gt;MangaDesk : TUI Client for downloading manga to your computer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ledongthuc/gohowmuch"&gt;Go How Much? a Crypto coin price tracking from terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KenanBek/dbui"&gt;dbui: Universal CLI for Database Connections&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bnaydenov/ssmbrowse"&gt;ssmbrowse: Simple and elegant cli AWS SSM parameter browser&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/infl00p/gobit"&gt;gobit: binance intelligence terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sachaos/viddy"&gt;viddy: A modern watch command&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hirose31/s3surfer"&gt;s3surfer: CLI tool for browsing S3 bucket and download objects interactively&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/audstanley/libgen-tui"&gt;libgen-tui: A terminal UI for downloading books from Library Genesis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/togettoyou/kubectl-lazy"&gt;kubectl-lazy: kubectl plugin to easy to view pod&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containers/podman-tui"&gt;podman-tui: podman user interface&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/navidys/tvxwidgets"&gt;tvxwidgets: tview extra widgets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gusti-andika/card-domino.git"&gt;Domino card game on terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glendsoza/goaround"&gt;goaround: Query stackoverflow API and get results on terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abdfnx/resto"&gt;resto: a CLI app can send pretty HTTP &amp;amp; API requests with TUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zmnpl/twad"&gt;twad: a WAD launcher for the terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moson-mo/pacseek"&gt;pacseek: A TUI for searching and installing Arch Linux packages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/letientai299/7guis/tree/master/tui"&gt;7GUIs demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ashis0013/tuihub"&gt;tuihub: A utility hub/dashboard for personal use&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aurc/loggo"&gt;l'oggo: A terminal app for structured log streaming (GCP stack driver, k8s, local streaming)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goyalmunish/reminder"&gt;reminder: Terminal based interactive app for organising tasks with minimal efforts.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peltho/tufw"&gt;tufw: A terminal UI for ufw.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cli/cli"&gt;gh: the GitHub CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glendsoza/piptui/"&gt;piptui: Terminal UI to manage pip packages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ntsd/cross-clipboard"&gt;cross-clipboard: A cross-platform clipboard sharing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mebitek/tui-deck"&gt;tui-deck: nextcloud deck frontend&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vladimirvivien/ktop"&gt;ktop: A top-like tool for your Kubernetes clusters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/merlinfuchs/blimp"&gt;blimp: UI for weather, network latency, application status, &amp;amp; more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/migcaraballo/curly"&gt;Curly - A simple TUI leveraging curl to test endpoints&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pehlicd/amtui"&gt;amtui: Alertmanager TUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/costa86/cli-manager"&gt;A TUI CLI manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adrianbrad/privatebtc"&gt;PrivateBTC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paololazzari/play"&gt;play: A TUI playground to experiment with your favorite programs, such as grep, sed, awk, jq and yq&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NathanFirmo/gorest"&gt;gorest: Enjoy making HTTP requests in your terminal, just like you do in Insomnia.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vergonha/garden-tui"&gt;Terminal-based application to listen Radio Stations around the world!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SHAPPY0/ntui"&gt;ntui: A TUI to manage Hashicorp Nomad clusters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jorgerojas26/lazysql"&gt;lazysql: A cross-platform TUI database management tool written in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mylxsw/redis-tui"&gt;redis-tui: A Redis Text-based UI client in CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kivattt/fen"&gt;fen: File manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LinPr/sqltui"&gt;sqltui: A terminal UI to operate sql and nosql databases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/murat-cileli/dbee"&gt;DBee: Simple database browser&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dos-2/oddshub"&gt;oddshub: A TUI for sports betting odds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/erdemkosk/envolve"&gt;envolve: Terminal based interactive app for manage enviroment variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/markusressel/zfs-file-history"&gt;zfs-file-history: Terminal UI for inspecting and restoring file history on ZFS snapshots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/markusressel/fan2go-tui"&gt;fan2go-tui: Terminal UI for fan2go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nats-dash-gui.returnzero.win/"&gt;NatsDash: Terminal UI for NATS Jetstream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linuxexam/tuissh"&gt;tuissh: A terminal UI to manage ssh connections&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/felangga/chiko"&gt;chiko: Ultimate Beauty TUI gRPC Client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/phsym/kmip-explorer"&gt;kmip-explorer: Browse &amp;amp; manage your KMIP objects from the terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antvirf/stui"&gt;stui: Slurm TUI for managing HPC clusters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dimonomid/nerdlog"&gt;nerdlog: Fast, remote-first, multi-host log viewer with timeline histogram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liangzhaoliang95/lxz"&gt;lxz: A powerful DevOps graphical command-line interface tool&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/declan-whiting/vaulty"&gt;vaulty: Terminal UI for Azure Keyvault&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dbohdan/pago"&gt;pago: Command-line password manager&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Refer to &lt;a href="https://pkg.go.dev/github.com/rivo/tview"&gt;https://pkg.go.dev/github.com/rivo/tview&lt;/a&gt; for the package's documentation. Also check out the &lt;a href="https://github.com/rivo/tview/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;p&gt;This package is based on &lt;a href="https://github.com/gdamore/tcell"&gt;github.com/gdamore/tcell&lt;/a&gt; (and its dependencies) as well as on &lt;a href="https://github.com/rivo/uniseg"&gt;github.com/rivo/uniseg&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsor this Project&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/rivo?metadata_source=tview_readme"&gt;Become a Sponsor on GitHub&lt;/a&gt; to further this project!&lt;/p&gt; 
&lt;h2&gt;Backwards-Compatibility&lt;/h2&gt; 
&lt;p&gt;I try really hard to keep this project backwards compatible. Your software should not break when you upgrade &lt;code&gt;tview&lt;/code&gt;. But this also means that some of its shortcomings that were present in the initial versions will remain. Having said that, backwards compatibility may still break when:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;a new version of an imported package (most likely &lt;a href="https://github.com/gdamore/tcell"&gt;&lt;code&gt;tcell&lt;/code&gt;&lt;/a&gt;) changes in such a way that forces me to make changes in &lt;code&gt;tview&lt;/code&gt; as well,&lt;/li&gt; 
 &lt;li&gt;I fix something that I consider a bug, rather than a feature, something that does not work as originally intended,&lt;/li&gt; 
 &lt;li&gt;I make changes to "internal" interfaces such as &lt;a href="https://pkg.go.dev/github.com/rivo/tview#Primitive"&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt;. You shouldn't need these interfaces unless you're writing your own primitives for &lt;code&gt;tview&lt;/code&gt;. (Yes, I realize these are public interfaces. This has advantages as well as disadvantages. For the time being, it is what it is.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Your Feedback&lt;/h2&gt; 
&lt;p&gt;Add your issue here on GitHub. Feel free to get in touch if you have any questions.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;We follow Golang's Code of Conduct which you can find &lt;a href="https://golang.org/conduct"&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>googleapis/genai-toolbox</title>
      <link>https://github.com/googleapis/genai-toolbox</link>
      <description>&lt;p&gt;MCP Toolbox for Databases is an open source MCP server for databases.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/logo.png" alt="logo" /&gt;&lt;/p&gt; 
&lt;h1&gt;MCP Toolbox for Databases&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://googleapis.github.io/genai-toolbox/"&gt;&lt;img src="https://img.shields.io/badge/docs-MCP_Toolbox-blue" alt="Docs" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/Dmm69peqjh"&gt;&lt;img src="https://img.shields.io/badge/Discord-%235865F2.svg?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://medium.com/@mcp_toolbox"&gt;&lt;img src="https://img.shields.io/badge/Medium-12100E?style=flat&amp;amp;logo=medium&amp;amp;logoColor=white" alt="Medium" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/googleapis/genai-toolbox"&gt;&lt;img src="https://goreportcard.com/badge/github.com/googleapis/genai-toolbox" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] MCP Toolbox for Databases is currently in beta, and may see breaking changes until the first stable release (v1.0).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;MCP Toolbox for Databases is an open source MCP server for databases. It enables you to develop tools easier, faster, and more securely by handling the complexities such as connection pooling, authentication, and more.&lt;/p&gt; 
&lt;p&gt;This README provides a brief overview. For comprehensive details, see the &lt;a href="https://googleapis.github.io/genai-toolbox/"&gt;full documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This solution was originally named ‚ÄúGen AI Toolbox for Databases‚Äù as its initial development predated MCP, but was renamed to align with recently added MCP compatibility.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- TOC ignore:true --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- TOC --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#why-toolbox"&gt;Why Toolbox?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#general-architecture"&gt;General Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#getting-started"&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#installing-the-server"&gt;Installing the server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#running-the-server"&gt;Running the server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#integrating-your-application"&gt;Integrating your application&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#configuration"&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#sources"&gt;Sources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#toolsets"&gt;Toolsets&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#versioning"&gt;Versioning&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#pre-100-versioning"&gt;Pre-1.0.0 Versioning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#post-100-versioning"&gt;Post-1.0.0 Versioning&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- /TOC --&gt; 
&lt;h2&gt;Why Toolbox?&lt;/h2&gt; 
&lt;p&gt;Toolbox helps you build Gen AI tools that let your agents access data in your database. Toolbox provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Simplified development&lt;/strong&gt;: Integrate tools to your agent in less than 10 lines of code, reuse tools between multiple agents or frameworks, and deploy new versions of tools more easily.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Better performance&lt;/strong&gt;: Best practices such as connection pooling, authentication, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced security&lt;/strong&gt;: Integrated auth for more secure access to your data&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;End-to-end observability&lt;/strong&gt;: Out of the box metrics and tracing with built-in support for OpenTelemetry.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;‚ö° Supercharge Your Workflow with an AI Database Assistant ‚ö°&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Stop context-switching and let your AI assistant become a true co-developer. By &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/connect-ide/"&gt;connecting your IDE to your databases with MCP Toolbox&lt;/a&gt;, you can delegate complex and time-consuming database tasks, allowing you to build faster and focus on what matters. This isn't just about code completion; it's about giving your AI the context it needs to handle the entire development lifecycle.&lt;/p&gt; 
&lt;p&gt;Here‚Äôs how it will save you time:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Query in Plain English&lt;/strong&gt;: Interact with your data using natural language right from your IDE. Ask complex questions like, &lt;em&gt;"How many orders were delivered in 2024, and what items were in them?"&lt;/em&gt; without writing any SQL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automate Database Management&lt;/strong&gt;: Simply describe your data needs, and let the AI assistant manage your database for you. It can handle generating queries, creating tables, adding indexes, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generate Context-Aware Code&lt;/strong&gt;: Empower your AI assistant to generate application code and tests with a deep understanding of your real-time database schema. This accelerates the development cycle by ensuring the generated code is directly usable.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Slash Development Overhead&lt;/strong&gt;: Radically reduce the time spent on manual setup and boilerplate. MCP Toolbox helps streamline lengthy database configurations, repetitive code, and error-prone schema migrations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/connect-ide/"&gt;how to connect your AI tools (IDEs) to Toolbox using MCP&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;General Architecture&lt;/h2&gt; 
&lt;p&gt;Toolbox sits between your application's orchestration framework and your database, providing a control plane that is used to modify, distribute, or invoke tools. It simplifies the management of your tools by providing you with a centralized location to store and update tools, allowing you to share tools between agents and applications and update those tools without necessarily redeploying your application.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/docs/en/getting-started/introduction/architecture.png" alt="architecture" /&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Installing the server&lt;/h3&gt; 
&lt;p&gt;For the latest version, check the &lt;a href="https://github.com/googleapis/genai-toolbox/releases"&gt;releases page&lt;/a&gt; and use the following instructions for your OS and CPU architecture.&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt;Binary&lt;/summary&gt; 
 &lt;p&gt;To install Toolbox as a binary:&lt;/p&gt; 
 &lt;!-- {x-release-please-start-version} --&gt; 
 &lt;blockquote&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Linux (AMD64)&lt;/summary&gt; 
   &lt;p&gt;To install Toolbox as a binary on Linux (AMD64):&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-sh"&gt;# see releases page for other versions
export VERSION=0.18.0
curl -L -o toolbox https://storage.googleapis.com/genai-toolbox/v$VERSION/linux/amd64/toolbox
chmod +x toolbox
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;macOS (Apple Silicon)&lt;/summary&gt; 
   &lt;p&gt;To install Toolbox as a binary on macOS (Apple Silicon):&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-sh"&gt;# see releases page for other versions
export VERSION=0.18.0
curl -L -o toolbox https://storage.googleapis.com/genai-toolbox/v$VERSION/darwin/arm64/toolbox
chmod +x toolbox
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;macOS (Intel)&lt;/summary&gt; 
   &lt;p&gt;To install Toolbox as a binary on macOS (Intel):&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-sh"&gt;# see releases page for other versions
export VERSION=0.18.0
curl -L -o toolbox https://storage.googleapis.com/genai-toolbox/v$VERSION/darwin/amd64/toolbox
chmod +x toolbox
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Windows (AMD64)&lt;/summary&gt; 
   &lt;p&gt;To install Toolbox as a binary on Windows (AMD64):&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-powershell"&gt;# see releases page for other versions
$VERSION = "0.18.0"
Invoke-WebRequest -Uri "https://storage.googleapis.com/genai-toolbox/v$VERSION/windows/amd64/toolbox.exe" -OutFile "toolbox.exe"
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Container image&lt;/summary&gt; You can also install Toolbox as a container: 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# see releases page for other versions
export VERSION=0.18.0
docker pull us-central1-docker.pkg.dev/database-toolbox/toolbox/toolbox:$VERSION
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Homebrew&lt;/summary&gt; 
 &lt;p&gt;To install Toolbox using Homebrew on macOS or Linux:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;brew install mcp-toolbox
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Compile from source&lt;/summary&gt; 
 &lt;p&gt;To install from source, ensure you have the latest version of &lt;a href="https://go.dev/doc/install"&gt;Go installed&lt;/a&gt;, and then run the following command:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;go install github.com/googleapis/genai-toolbox@v0.18.0
&lt;/code&gt;&lt;/pre&gt; 
 &lt;!-- {x-release-please-end} --&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Gemini CLI Extensions&lt;/summary&gt; 
 &lt;p&gt;To install Gemini CLI Extensions for MCP Toolbox, run the following command:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;gemini extensions install https://github.com/gemini-cli-extensions/mcp-toolbox
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Running the server&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#configuration"&gt;Configure&lt;/a&gt; a &lt;code&gt;tools.yaml&lt;/code&gt; to define your tools, and then execute &lt;code&gt;toolbox&lt;/code&gt; to start the server:&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt;Binary&lt;/summary&gt; 
 &lt;p&gt;To run Toolbox from binary:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;./toolbox --tools-file "tools.yaml"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;‚ìò Note&lt;br /&gt; Toolbox enables dynamic reloading by default. To disable, use the &lt;code&gt;--disable-reload&lt;/code&gt; flag.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Container image&lt;/summary&gt; 
 &lt;p&gt;To run the server after pulling the &lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#installing-the-server"&gt;container image&lt;/a&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;export VERSION=0.11.0 # Use the version you pulled
docker run -p 5000:5000 \
-v $(pwd)/tools.yaml:/app/tools.yaml \
us-central1-docker.pkg.dev/database-toolbox/toolbox/toolbox:$VERSION \
--tools-file "/app/tools.yaml"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;‚ìò Note&lt;br /&gt; The &lt;code&gt;-v&lt;/code&gt; flag mounts your local &lt;code&gt;tools.yaml&lt;/code&gt; into the container, and &lt;code&gt;-p&lt;/code&gt; maps the container's port &lt;code&gt;5000&lt;/code&gt; to your host's port &lt;code&gt;5000&lt;/code&gt;.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Source&lt;/summary&gt; 
 &lt;p&gt;To run the server directly from source, navigate to the project root directory and run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;go run .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;‚ìò Note&lt;br /&gt; This command runs the project from source, and is more suitable for development and testing. It does &lt;strong&gt;not&lt;/strong&gt; compile a binary into your &lt;code&gt;$GOPATH&lt;/code&gt;. If you want to compile a binary instead, refer the &lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/DEVELOPER.md#building-the-binary"&gt;Developer Documentation&lt;/a&gt;.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Homebrew&lt;/summary&gt; 
 &lt;p&gt;If you installed Toolbox using &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;, the &lt;code&gt;toolbox&lt;/code&gt; binary is available in your system path. You can start the server with the same command:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;toolbox --tools-file "tools.yaml"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Gemini CLI&lt;/summary&gt; 
 &lt;p&gt;Interact with your custom tools using natural language. Check &lt;a href="https://github.com/gemini-cli-extensions/mcp-toolbox"&gt;gemini-cli-extensions/mcp-toolbox&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;You can use &lt;code&gt;toolbox help&lt;/code&gt; for a full list of flags! To stop the server, send a terminate signal (&lt;code&gt;ctrl+c&lt;/code&gt; on most platforms).&lt;/p&gt; 
&lt;p&gt;For more detailed documentation on deploying to different environments, check out the resources in the &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/"&gt;How-to section&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Integrating your application&lt;/h3&gt; 
&lt;p&gt;Once your server is up and running, you can load the tools into your application. See below the list of Client SDKs for using various frameworks:&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt;Python (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-core/"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_core import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = await client.load_toolset("toolset_name")
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
   &lt;p&gt;For more detailed instructions on using the Toolbox Core SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python/tree/main/packages/toolbox-core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain / LangGraph&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-langchain/"&gt;Toolbox LangChain SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-langchain
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_langchain import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = client.load_toolset()
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox LangChain SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python/raw/main/packages/toolbox-langchain/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LlamaIndex&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-llamaindex/"&gt;Toolbox Llamaindex SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-llamaindex
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_llamaindex import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = client.load_toolset()
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Llamaindex SDK, see the &lt;a href="https://github.com/googleapis/genai-toolbox-llamaindex-python/raw/main/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;  
&lt;details&gt; 
 &lt;summary&gt;Javascript/Typescript (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-js"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const tools = await client.loadToolset('toolsetName');
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Core SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-js/raw/main/packages/toolbox-core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain / LangGraph&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const toolboxTools = await client.loadToolset('toolsetName');

// Define the basics of the tool: name, description, schema and core logic
const getTool = (toolboxTool) =&amp;gt; tool(currTool, {
    name: toolboxTool.getName(),
    description: toolboxTool.getDescription(),
    schema: toolboxTool.getParamSchema()
});

// Use these tools in your Langchain/Langraph applications
const tools = toolboxTools.map(getTool);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Genkit&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';
import { genkit } from 'genkit';

// Initialise genkit
const ai = genkit({
    plugins: [
        googleAI({
            apiKey: process.env.GEMINI_API_KEY || process.env.GOOGLE_API_KEY
        })
    ],
    model: googleAI.model('gemini-2.0-flash'),
});

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const toolboxTools = await client.loadToolset('toolsetName');

// Define the basics of the tool: name, description, schema and core logic
const getTool = (toolboxTool) =&amp;gt; ai.defineTool({
    name: toolboxTool.getName(),
    description: toolboxTool.getDescription(),
    schema: toolboxTool.getParamSchema()
}, toolboxTool)

// Use these tools in your Genkit applications
const tools = toolboxTools.map(getTool);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;  
&lt;details&gt; 
 &lt;summary&gt;Go (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-go"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "context"
)

func main() {
  // Make sure to add the error checks
  // update the url to point to your server
  URL := "http://127.0.0.1:5000";
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tools
  tools, err := client.LoadToolset("toolsetName", ctx)
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Go SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-go/raw/main/core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain Go&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "github.com/tmc/langchaingo/llms"
)

func main() {
  // Make sure to add the error checks
  // update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var paramsSchema map[string]any
  _ = json.Unmarshal(inputschema, &amp;amp;paramsSchema)

  // Use this tool with LangChainGo
  langChainTool := llms.Tool{
    Type: "function",
    Function: &amp;amp;llms.FunctionDefinition{
      Name:        tool.Name(),
      Description: tool.Description(),
      Parameters:  paramsSchema,
    },
  }
}

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Genkit&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main
import (
  "context"
  "log"

  "github.com/firebase/genkit/go/genkit"
  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "github.com/googleapis/mcp-toolbox-sdk-go/tbgenkit"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()
  g := genkit.Init(ctx)

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Convert the tool using the tbgenkit package
  // Use this tool with Genkit Go
  genkitTool, err := tbgenkit.ToGenkitTool(tool, g)
  if err != nil {
    log.Fatalf("Failed to convert tool: %v\n", err)
  }
  log.Printf("Successfully converted tool: %s", genkitTool.Name())
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Go GenAI&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "google.golang.org/genai"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var schema *genai.Schema
  _ = json.Unmarshal(inputschema, &amp;amp;schema)

  funcDeclaration := &amp;amp;genai.FunctionDeclaration{
    Name:        tool.Name(),
    Description: tool.Description(),
    Parameters:  schema,
  }

  // Use this tool with Go GenAI
  genAITool := &amp;amp;genai.Tool{
    FunctionDeclarations: []*genai.FunctionDeclaration{funcDeclaration},
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;OpenAI Go&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  openai "github.com/openai/openai-go"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var paramsSchema openai.FunctionParameters
  _ = json.Unmarshal(inputschema, &amp;amp;paramsSchema)

  // Use this tool with OpenAI Go
  openAITool := openai.ChatCompletionToolParam{
    Function: openai.FunctionDefinitionParam{
      Name:        tool.Name(),
      Description: openai.String(tool.Description()),
      Parameters:  paramsSchema,
    },
  }

}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;   
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;The primary way to configure Toolbox is through the &lt;code&gt;tools.yaml&lt;/code&gt; file. If you have multiple files, you can tell toolbox which to load with the &lt;code&gt;--tools-file tools.yaml&lt;/code&gt; flag.&lt;/p&gt; 
&lt;p&gt;You can find more detailed reference documentation to all resource types in the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/"&gt;Resources&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Sources&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;sources&lt;/code&gt; section of your &lt;code&gt;tools.yaml&lt;/code&gt; defines what data sources your Toolbox should have access to. Most tools will have at least one source to execute against.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;sources:
  my-pg-source:
    kind: postgres
    host: 127.0.0.1
    port: 5432
    database: toolbox_db
    user: toolbox_user
    password: my-password
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring different types of sources, see the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/sources"&gt;Sources&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;tools&lt;/code&gt; section of a &lt;code&gt;tools.yaml&lt;/code&gt; define the actions an agent can take: what kind of tool it is, which source(s) it affects, what parameters it uses, etc.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;tools:
  search-hotels-by-name:
    kind: postgres-sql
    source: my-pg-source
    description: Search for hotels based on name.
    parameters:
      - name: name
        type: string
        description: The name of the hotel.
    statement: SELECT * FROM hotels WHERE name ILIKE '%' || $1 || '%';
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring different types of tools, see the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/tools"&gt;Tools&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Toolsets&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;toolsets&lt;/code&gt; section of your &lt;code&gt;tools.yaml&lt;/code&gt; allows you to define groups of tools that you want to be able to load together. This can be useful for defining different groups based on agent or application.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;toolsets:
    my_first_toolset:
        - my_first_tool
        - my_second_tool
    my_second_toolset:
        - my_second_tool
        - my_third_tool
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can load toolsets by name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# This will load all tools
all_tools = client.load_toolset()

# This will only load the tools listed in 'my_second_toolset'
my_second_toolset = client.load_toolset("my_second_toolset")
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;This project uses &lt;a href="https://semver.org/"&gt;semantic versioning&lt;/a&gt; (&lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt;). Since the project is in a pre-release stage (version &lt;code&gt;0.x.y&lt;/code&gt;), we follow the standard conventions for initial development:&lt;/p&gt; 
&lt;h3&gt;Pre-1.0.0 Versioning&lt;/h3&gt; 
&lt;p&gt;While the major version is &lt;code&gt;0&lt;/code&gt;, the public API should be considered unstable. The version will be incremented as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;0.MINOR.PATCH&lt;/code&gt;&lt;/strong&gt;: The &lt;strong&gt;MINOR&lt;/strong&gt; version is incremented when we add new functionality or make breaking, incompatible API changes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;0.MINOR.PATCH&lt;/code&gt;&lt;/strong&gt;: The &lt;strong&gt;PATCH&lt;/strong&gt; version is incremented for backward-compatible bug fixes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Post-1.0.0 Versioning&lt;/h3&gt; 
&lt;p&gt;Once the project reaches a stable &lt;code&gt;1.0.0&lt;/code&gt; release, the versioning will follow the more common convention:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt;&lt;/strong&gt;: Incremented for incompatible API changes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt;&lt;/strong&gt;: Incremented for new, backward-compatible functionality.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt;&lt;/strong&gt;: Incremented for backward-compatible bug fixes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The public API that this applies to is the CLI associated with Toolbox, the interactions with official SDKs, and the definitions in the &lt;code&gt;tools.yaml&lt;/code&gt; file.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome. Please, see the &lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. See &lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/CODE_OF_CONDUCT.md"&gt;Contributor Code of Conduct&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.gg/GQrFB3Ec3W"&gt;discord community&lt;/a&gt; to connect with our developers!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>