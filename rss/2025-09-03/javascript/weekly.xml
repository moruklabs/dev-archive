<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Tue, 02 Sep 2025 01:45:58 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>openai/openai-realtime-console</title>
      <link>https://github.com/openai/openai-realtime-console</link>
      <description>&lt;p&gt;React app for inspecting, building and debugging with the Realtime API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI Realtime Console&lt;/h1&gt; 
&lt;p&gt;This is an example application showing how to use the &lt;a href="https://platform.openai.com/docs/guides/realtime"&gt;OpenAI Realtime API&lt;/a&gt; with &lt;a href="https://platform.openai.com/docs/guides/realtime-webrtc"&gt;WebRTC&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation and usage&lt;/h2&gt; 
&lt;p&gt;Before you begin, you'll need an OpenAI API key - &lt;a href="https://platform.openai.com/settings/api-keys"&gt;create one in the dashboard here&lt;/a&gt;. Create a &lt;code&gt;.env&lt;/code&gt; file from the example file and set your API key in there:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cp .env.example .env
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Running this application locally requires &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; to be installed. Install dependencies for the application with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start the application server with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This should start the console application on &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This application is a minimal template that uses &lt;a href="https://expressjs.com/"&gt;express&lt;/a&gt; to serve the React frontend contained in the &lt;a href="https://raw.githubusercontent.com/openai/openai-realtime-console/main/client"&gt;&lt;code&gt;/client&lt;/code&gt;&lt;/a&gt; folder. The server is configured to use &lt;a href="https://vitejs.dev/"&gt;vite&lt;/a&gt; to build the React frontend.&lt;/p&gt; 
&lt;p&gt;This application shows how to send and receive Realtime API events over the WebRTC data channel and configure client-side function calling. You can also view the JSON payloads for client and server events using the logging panel in the UI.&lt;/p&gt; 
&lt;p&gt;For a more comprehensive example, see the &lt;a href="https://github.com/openai/openai-realtime-agents"&gt;OpenAI Realtime Agents&lt;/a&gt; demo built with Next.js, using an agentic architecture inspired by &lt;a href="https://github.com/openai/swarm"&gt;OpenAI Swarm&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Previous WebSockets version&lt;/h2&gt; 
&lt;p&gt;The previous version of this application that used WebSockets on the client (not recommended in browsers) &lt;a href="https://github.com/openai/openai-realtime-console/tree/websockets"&gt;can be found here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>eyaltoledano/claude-task-master</title>
      <link>https://github.com/eyaltoledano/claude-task-master</link>
      <description>&lt;p&gt;An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name="readme-top"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://trendshift.io/repositories/13971" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13971" alt="eyaltoledano%2Fclaude-task-master | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;a href="https://task-master.dev"&gt;&lt;img src="https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/images/logo.png?raw=true" alt="Taskmaster logo" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;b&gt;Taskmaster&lt;/b&gt;: A task management system for AI-driven development, designed to work seamlessly with any AI chat. &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://discord.gg/taskmasterai" target="_blank"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/https://discord.gg/taskmasterai?style=flat" alt="Discord" /&gt;&lt;/a&gt; | &lt;a href="https://docs.task-master.dev" target="_blank"&gt;Docs&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/eyaltoledano/claude-task-master/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eyaltoledano/claude-task-master/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/eyaltoledano/claude-task-master?style=social" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;a href="https://badge.fury.io/js/task-master-ai"&gt;&lt;img src="https://badge.fury.io/js/task-master-ai.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT%20with%20Commons%20Clause-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/package/task-master-ai"&gt;&lt;img src="https://img.shields.io/npm/d18m/task-master-ai?style=flat" alt="NPM Downloads" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/task-master-ai"&gt;&lt;img src="https://img.shields.io/npm/dm/task-master-ai?style=flat" alt="NPM Downloads" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/task-master-ai"&gt;&lt;img src="https://img.shields.io/npm/dw/task-master-ai?style=flat" alt="NPM Downloads" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;By &lt;a href="https://x.com/eyaltoledano"&gt;@eyaltoledano&lt;/a&gt; &amp;amp; &lt;a href="https://x.com/RalphEcom"&gt;@RalphEcom&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://x.com/eyaltoledano"&gt;&lt;img src="https://img.shields.io/twitter/follow/eyaltoledano" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://x.com/RalphEcom"&gt;&lt;img src="https://img.shields.io/twitter/follow/RalphEcom" alt="Twitter Follow" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A task management system for AI-driven development with Claude, designed to work seamlessly with Cursor AI.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;📚 &lt;strong&gt;&lt;a href="https://docs.task-master.dev"&gt;View Full Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;For detailed guides, API references, and comprehensive examples, visit our documentation site.&lt;/p&gt; 
&lt;h3&gt;Quick Reference&lt;/h3&gt; 
&lt;p&gt;The following documentation is also available in the &lt;code&gt;docs&lt;/code&gt; directory:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/configuration.md"&gt;Configuration Guide&lt;/a&gt; - Set up environment variables and customize Task Master&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/tutorial.md"&gt;Tutorial&lt;/a&gt; - Step-by-step guide to getting started with Task Master&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/command-reference.md"&gt;Command Reference&lt;/a&gt; - Complete list of all available commands&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/task-structure.md"&gt;Task Structure&lt;/a&gt; - Understanding the task format and features&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/examples.md"&gt;Example Interactions&lt;/a&gt; - Common Cursor AI interaction examples&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/migration-guide.md"&gt;Migration Guide&lt;/a&gt; - Guide to migrating to the new project structure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Quick Install for Cursor 1.0+ (One-Click)&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://cursor.com/en/install-mcp?name=task-master-ai&amp;amp;config=eyJjb21tYW5kIjoibnB4IC15IC0tcGFja2FnZT10YXNrLW1hc3Rlci1haSB0YXNrLW1hc3Rlci1haSIsImVudiI6eyJBTlRIUk9QSUNfQVBJX0tFWSI6IllPVVJfQU5USFJPUElDX0FQSV9LRVlfSEVSRSIsIlBFUlBMRVhJVFlfQVBJX0tFWSI6IllPVVJfUEVSUExFWElUWV9BUElfS0VZX0hFUkUiLCJPUEVOQUlfQVBJX0tFWSI6IllPVVJfT1BFTkFJX0tFWV9IRVJFIiwiR09PR0xFX0FQSV9LRVkiOiJZT1VSX0dPT0dMRV9LRVlfSEVSRSIsIk1JU1RSQUxfQVBJX0tFWSI6IllPVVJfTUlTVFJBTF9LRVlfSEVSRSIsIkdST1FfQVBJX0tFWSI6IllPVVJfR1JPUV9LRVlfSEVSRSIsIk9QRU5ST1VURVJfQVBJX0tFWSI6IllPVVJfT1BFTlJPVVRFUl9LRVlfSEVSRSIsIlhBSV9BUElfS0VZIjoiWU9VUl9YQUlfS0VZX0hFUkUiLCJBWlVSRV9PUEVOQUlfQVBJX0tFWSI6IllPVVJfQVpVUkVfS0VZX0hFUkUiLCJPTExBTUFfQVBJX0tFWSI6IllPVVJfT0xMQU1BX0FQSV9LRVlfSEVSRSJ9fQ%3D%3D"&gt;&lt;img src="https://cursor.com/deeplink/mcp-install-dark.svg?sanitize=true" alt="Add task-master-ai MCP server to Cursor" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; After clicking the link, you'll still need to add your API keys to the configuration. The link installs the MCP server with placeholder keys that you'll need to replace with your actual API keys.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;Taskmaster utilizes AI across several commands, and those require a separate API key. You can use a variety of models from different AI providers provided you add your API keys. For example, if you want to use Claude 3.7, you'll need an Anthropic API key.&lt;/p&gt; 
&lt;p&gt;You can define 3 types of models to be used: the main model, the research model, and the fallback model (in case either the main or research fail). Whatever model you use, its provider API key must be present in either mcp.json or .env.&lt;/p&gt; 
&lt;p&gt;At least one (1) of the following is required:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Anthropic API key (Claude API)&lt;/li&gt; 
 &lt;li&gt;OpenAI API key&lt;/li&gt; 
 &lt;li&gt;Google Gemini API key&lt;/li&gt; 
 &lt;li&gt;Perplexity API key (for research model)&lt;/li&gt; 
 &lt;li&gt;xAI API Key (for research or main model)&lt;/li&gt; 
 &lt;li&gt;OpenRouter API Key (for research or main model)&lt;/li&gt; 
 &lt;li&gt;Claude Code (no API key required - requires Claude Code CLI)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Using the research model is optional but highly recommended. You will need at least ONE API key (unless using Claude Code). Adding all API keys enables you to seamlessly switch between model providers at will.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Option 1: MCP (Recommended)&lt;/h3&gt; 
&lt;p&gt;MCP (Model Control Protocol) lets you run Task Master directly from your editor.&lt;/p&gt; 
&lt;h4&gt;1. Add your MCP config at the following path depending on your editor&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Editor&lt;/th&gt; 
   &lt;th&gt;Scope&lt;/th&gt; 
   &lt;th&gt;Linux/macOS Path&lt;/th&gt; 
   &lt;th&gt;Windows Path&lt;/th&gt; 
   &lt;th&gt;Key&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Cursor&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Global&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;~/.cursor/mcp.json&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;%USERPROFILE%\.cursor\mcp.json&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;mcpServers&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Project&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;project_folder&amp;gt;/.cursor/mcp.json&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;project_folder&amp;gt;\.cursor\mcp.json&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;mcpServers&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Windsurf&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Global&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;~/.codeium/windsurf/mcp_config.json&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;%USERPROFILE%\.codeium\windsurf\mcp_config.json&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;mcpServers&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;VS Code&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Project&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;project_folder&amp;gt;/.vscode/mcp.json&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;project_folder&amp;gt;\.vscode\mcp.json&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;servers&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h5&gt;Manual Configuration&lt;/h5&gt; 
&lt;h6&gt;Cursor &amp;amp; Windsurf (&lt;code&gt;mcpServers&lt;/code&gt;)&lt;/h6&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "task-master-ai": {
      "command": "npx",
      "args": ["-y", "--package=task-master-ai", "task-master-ai"],
      "env": {
        "ANTHROPIC_API_KEY": "YOUR_ANTHROPIC_API_KEY_HERE",
        "PERPLEXITY_API_KEY": "YOUR_PERPLEXITY_API_KEY_HERE",
        "OPENAI_API_KEY": "YOUR_OPENAI_KEY_HERE",
        "GOOGLE_API_KEY": "YOUR_GOOGLE_KEY_HERE",
        "MISTRAL_API_KEY": "YOUR_MISTRAL_KEY_HERE",
        "GROQ_API_KEY": "YOUR_GROQ_KEY_HERE",
        "OPENROUTER_API_KEY": "YOUR_OPENROUTER_KEY_HERE",
        "XAI_API_KEY": "YOUR_XAI_KEY_HERE",
        "AZURE_OPENAI_API_KEY": "YOUR_AZURE_KEY_HERE",
        "OLLAMA_API_KEY": "YOUR_OLLAMA_API_KEY_HERE"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🔑 Replace &lt;code&gt;YOUR_…_KEY_HERE&lt;/code&gt; with your real API keys. You can remove keys you don't use.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you see &lt;code&gt;0 tools enabled&lt;/code&gt; in the MCP settings, try removing the &lt;code&gt;--package=task-master-ai&lt;/code&gt; flag from &lt;code&gt;args&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h6&gt;VS Code (&lt;code&gt;servers&lt;/code&gt; + &lt;code&gt;type&lt;/code&gt;)&lt;/h6&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "servers": {
    "task-master-ai": {
      "command": "npx",
      "args": ["-y", "--package=task-master-ai", "task-master-ai"],
      "env": {
        "ANTHROPIC_API_KEY": "YOUR_ANTHROPIC_API_KEY_HERE",
        "PERPLEXITY_API_KEY": "YOUR_PERPLEXITY_API_KEY_HERE",
        "OPENAI_API_KEY": "YOUR_OPENAI_KEY_HERE",
        "GOOGLE_API_KEY": "YOUR_GOOGLE_KEY_HERE",
        "MISTRAL_API_KEY": "YOUR_MISTRAL_KEY_HERE",
        "GROQ_API_KEY": "YOUR_GROQ_KEY_HERE",
        "OPENROUTER_API_KEY": "YOUR_OPENROUTER_KEY_HERE",
        "XAI_API_KEY": "YOUR_XAI_KEY_HERE",
        "AZURE_OPENAI_API_KEY": "YOUR_AZURE_KEY_HERE",
        "OLLAMA_API_KEY": "YOUR_OLLAMA_API_KEY_HERE"
      },
      "type": "stdio"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🔑 Replace &lt;code&gt;YOUR_…_KEY_HERE&lt;/code&gt; with your real API keys. You can remove keys you don't use.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;2. (Cursor-only) Enable Taskmaster MCP&lt;/h4&gt; 
&lt;p&gt;Open Cursor Settings (Ctrl+Shift+J) ➡ Click on MCP tab on the left ➡ Enable task-master-ai with the toggle&lt;/p&gt; 
&lt;h4&gt;3. (Optional) Configure the models you want to use&lt;/h4&gt; 
&lt;p&gt;In your editor's AI chat pane, say:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-txt"&gt;Change the main, research and fallback models to &amp;lt;model_name&amp;gt;, &amp;lt;model_name&amp;gt; and &amp;lt;model_name&amp;gt; respectively.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, to use Claude Code (no API key required):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-txt"&gt;Change the main model to claude-code/sonnet
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/models.md"&gt;Table of available models&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/examples/claude-code-usage.md"&gt;Claude Code setup&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;4. Initialize Task Master&lt;/h4&gt; 
&lt;p&gt;In your editor's AI chat pane, say:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-txt"&gt;Initialize taskmaster-ai in my project
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;5. Make sure you have a PRD (Recommended)&lt;/h4&gt; 
&lt;p&gt;For &lt;strong&gt;new projects&lt;/strong&gt;: Create your PRD at &lt;code&gt;.taskmaster/docs/prd.txt&lt;/code&gt;&lt;br /&gt; For &lt;strong&gt;existing projects&lt;/strong&gt;: You can use &lt;code&gt;scripts/prd.txt&lt;/code&gt; or migrate with &lt;code&gt;task-master migrate&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;An example PRD template is available after initialization in &lt;code&gt;.taskmaster/templates/example_prd.txt&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] While a PRD is recommended for complex projects, you can always create individual tasks by asking "Can you help me implement [description of what you want to do]?" in chat.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Always start with a detailed PRD.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The more detailed your PRD, the better the generated tasks will be.&lt;/p&gt; 
&lt;h4&gt;6. Common Commands&lt;/h4&gt; 
&lt;p&gt;Use your AI assistant to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Parse requirements: &lt;code&gt;Can you parse my PRD at scripts/prd.txt?&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Plan next step: &lt;code&gt;What's the next task I should work on?&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Implement a task: &lt;code&gt;Can you help me implement task 3?&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;View multiple tasks: &lt;code&gt;Can you show me tasks 1, 3, and 5?&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Expand a task: &lt;code&gt;Can you help me expand task 4?&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Research fresh information&lt;/strong&gt;: &lt;code&gt;Research the latest best practices for implementing JWT authentication with Node.js&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Research with context&lt;/strong&gt;: &lt;code&gt;Research React Query v5 migration strategies for our current API implementation in src/api.js&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/examples.md"&gt;More examples on how to use Task Master in chat&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Option 2: Using Command Line&lt;/h3&gt; 
&lt;h4&gt;Installation&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install globally
npm install -g task-master-ai

# OR install locally within your project
npm install task-master-ai
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Initialize a new project&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# If installed globally
task-master init

# If installed locally
npx task-master init

# Initialize project with specific rules
task-master init --rules cursor,windsurf,vscode
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will prompt you for project details and set up a new project with the necessary files and structure.&lt;/p&gt; 
&lt;h4&gt;Common Commands&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Initialize a new project
task-master init

# Parse a PRD and generate tasks
task-master parse-prd your-prd.txt

# List all tasks
task-master list

# Show the next task to work on
task-master next

# Show specific task(s) - supports comma-separated IDs
task-master show 1,3,5

# Research fresh information with project context
task-master research "What are the latest best practices for JWT authentication?"

# Move tasks between tags (cross-tag movement)
task-master move --from=5 --from-tag=backlog --to-tag=in-progress
task-master move --from=5,6,7 --from-tag=backlog --to-tag=done --with-dependencies
task-master move --from=5 --from-tag=backlog --to-tag=in-progress --ignore-dependencies

# Generate task files
task-master generate

# Add rules after initialization
task-master rules add windsurf,roo,vscode
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Claude Code Support&lt;/h2&gt; 
&lt;p&gt;Task Master now supports Claude models through the Claude Code CLI, which requires no API key:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Models&lt;/strong&gt;: &lt;code&gt;claude-code/opus&lt;/code&gt; and &lt;code&gt;claude-code/sonnet&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Requirements&lt;/strong&gt;: Claude Code CLI installed&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;: No API key needed, uses your local Claude instance&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/examples/claude-code-usage.md"&gt;Learn more about Claude Code setup&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;h3&gt;If &lt;code&gt;task-master init&lt;/code&gt; doesn't respond&lt;/h3&gt; 
&lt;p&gt;Try running it with Node directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;node node_modules/claude-task-master/scripts/init.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or clone the repository and run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/eyaltoledano/claude-task-master.git
cd claude-task-master
node scripts/init.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/eyaltoledano/claude-task-master/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=eyaltoledano/claude-task-master" alt="Task Master project contributors" /&gt; &lt;/a&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#eyaltoledano/claude-task-master&amp;amp;Timeline"&gt;&lt;img src="https://api.star-history.com/svg?repos=eyaltoledano/claude-task-master&amp;amp;type=Timeline" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Task Master is licensed under the MIT License with Commons Clause. This means you can:&lt;/p&gt; 
&lt;p&gt;✅ &lt;strong&gt;Allowed&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use Task Master for any purpose (personal, commercial, academic)&lt;/li&gt; 
 &lt;li&gt;Modify the code&lt;/li&gt; 
 &lt;li&gt;Distribute copies&lt;/li&gt; 
 &lt;li&gt;Create and sell products built using Task Master&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;❌ &lt;strong&gt;Not Allowed&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Sell Task Master itself&lt;/li&gt; 
 &lt;li&gt;Offer Task Master as a hosted service&lt;/li&gt; 
 &lt;li&gt;Create competing products based on Task Master&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for the complete license text and &lt;a href="https://raw.githubusercontent.com/eyaltoledano/claude-task-master/main/docs/licensing.md"&gt;licensing details&lt;/a&gt; for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>louislam/uptime-kuma</title>
      <link>https://github.com/louislam/uptime-kuma</link>
      <description>&lt;p&gt;A fancy self-hosted monitoring tool&lt;/p&gt;&lt;hr&gt;&lt;div align="center" width="100%"&gt; 
 &lt;img src="https://raw.githubusercontent.com/louislam/uptime-kuma/master/public/icon.svg?sanitize=true" width="128" alt="" /&gt; 
&lt;/div&gt; 
&lt;h1&gt;Uptime Kuma&lt;/h1&gt; 
&lt;p&gt;Uptime Kuma is an easy-to-use self-hosted monitoring tool.&lt;/p&gt; 
&lt;p&gt;&lt;a target="_blank" href="https://github.com/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/github/stars/louislam/uptime-kuma?style=flat" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://hub.docker.com/r/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/docker/pulls/louislam/uptime-kuma" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://hub.docker.com/r/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver." /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://github.com/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/github/last-commit/louislam/uptime-kuma" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://opencollective.com/uptime-kuma"&gt;&lt;img src="https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;amp;color=brightgreen" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/louislam"&gt;&lt;img src="https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors" alt="GitHub Sponsors" /&gt;&lt;/a&gt; &lt;a href="https://weblate.kuma.pet/projects/uptime-kuma/uptime-kuma/"&gt; &lt;img src="https://weblate.kuma.pet/widgets/uptime-kuma/-/svg-badge.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://user-images.githubusercontent.com/1336778/212262296-e6205815-ad62-488c-83ec-a5b0d0689f7c.jpg" width="700" alt="" /&gt; 
&lt;h2&gt;🥔 Live Demo&lt;/h2&gt; 
&lt;p&gt;Try it!&lt;/p&gt; 
&lt;p&gt;Demo Server (Location: Frankfurt - Germany): &lt;a href="https://demo.kuma.pet/start-demo"&gt;https://demo.kuma.pet/start-demo&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;It is a temporary live demo, all data will be deleted after 10 minutes. Sponsored by &lt;a href="https://github.com/louislam/uptime-kuma#%EF%B8%8F-sponsors"&gt;Uptime Kuma Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;⭐ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monitoring uptime for HTTP(s) / TCP / HTTP(s) Keyword / HTTP(s) Json Query / Ping / DNS Record / Push / Steam Game Server / Docker Containers&lt;/li&gt; 
 &lt;li&gt;Fancy, Reactive, Fast UI/UX&lt;/li&gt; 
 &lt;li&gt;Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and &lt;a href="https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications"&gt;90+ notification services, click here for the full list&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;20-second intervals&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/louislam/uptime-kuma/tree/master/src/lang"&gt;Multi Languages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Multiple status pages&lt;/li&gt; 
 &lt;li&gt;Map status pages to specific domains&lt;/li&gt; 
 &lt;li&gt;Ping chart&lt;/li&gt; 
 &lt;li&gt;Certificate info&lt;/li&gt; 
 &lt;li&gt;Proxy support&lt;/li&gt; 
 &lt;li&gt;2FA support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔧 How to Install&lt;/h2&gt; 
&lt;h3&gt;🐳 Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Uptime Kuma is now running on &lt;a href="http://0.0.0.0:3001"&gt;http://0.0.0.0:3001&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] File Systems like &lt;strong&gt;NFS&lt;/strong&gt; (Network File System) are &lt;strong&gt;NOT&lt;/strong&gt; supported. Please map to a local directory or volume.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you want to limit exposure to localhost (without exposing port for other users or to use a &lt;a href="https://github.com/louislam/uptime-kuma/wiki/Reverse-Proxy"&gt;reverse proxy&lt;/a&gt;), you can expose the port like this:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --restart=always -p 127.0.0.1:3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;💪🏻 Non-Docker&lt;/h3&gt; 
&lt;p&gt;Requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Platform 
  &lt;ul&gt; 
   &lt;li&gt;✅ Major Linux distros such as Debian, Ubuntu, CentOS, Fedora and ArchLinux etc.&lt;/li&gt; 
   &lt;li&gt;✅ Windows 10 (x64), Windows Server 2012 R2 (x64) or higher&lt;/li&gt; 
   &lt;li&gt;❌ FreeBSD / OpenBSD / NetBSD&lt;/li&gt; 
   &lt;li&gt;❌ Replit / Heroku&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; 18 / 20.4&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.npmjs.com/cli/"&gt;npm&lt;/a&gt; 9&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git-scm.com/downloads"&gt;Git&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pm2.keymetrics.io/"&gt;pm2&lt;/a&gt; - For running Uptime Kuma in the background&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/louislam/uptime-kuma.git
cd uptime-kuma
npm run setup

# Option 1. Try it
node server/server.js

# (Recommended) Option 2. Run in the background using PM2
# Install PM2 if you don't have it:
npm install pm2 -g &amp;amp;&amp;amp; pm2 install pm2-logrotate

# Start Server
pm2 start server/server.js --name uptime-kuma
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Uptime Kuma is now running on &lt;a href="http://localhost:3001"&gt;http://localhost:3001&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;More useful PM2 Commands&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# If you want to see the current console output
pm2 monit

# If you want to add it to startup
pm2 save &amp;amp;&amp;amp; pm2 startup
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Advanced Installation&lt;/h3&gt; 
&lt;p&gt;If you need more options or need to browse via a reverse proxy, please read:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install"&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🆙 How to Update&lt;/h2&gt; 
&lt;p&gt;Please read:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update"&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🆕 What's Next?&lt;/h2&gt; 
&lt;p&gt;I will assign requests/issues to the next milestone.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma/milestones"&gt;https://github.com/louislam/uptime-kuma/milestones&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;❤️ Sponsors&lt;/h2&gt; 
&lt;p&gt;Thank you so much! (GitHub Sponsors will be updated manually. OpenCollective sponsors will be updated automatically, the list will be cached by GitHub though. It may need some time to be updated)&lt;/p&gt; 
&lt;img src="https://uptime.kuma.pet/sponsors?v=6" alt /&gt; 
&lt;h2&gt;🖼 More Screenshots&lt;/h2&gt; 
&lt;p&gt;Light Mode:&lt;/p&gt; 
&lt;img src="https://uptime.kuma.pet/img/light.jpg" width="512" alt="" /&gt; 
&lt;p&gt;Status Page:&lt;/p&gt; 
&lt;img src="https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png" width="512" alt="" /&gt; 
&lt;p&gt;Settings Page:&lt;/p&gt; 
&lt;img src="https://louislam.net/uptimekuma/2.jpg" width="400" alt="" /&gt; 
&lt;p&gt;Telegram Notification Sample:&lt;/p&gt; 
&lt;img src="https://louislam.net/uptimekuma/3.jpg" width="400" alt="" /&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;I was looking for a self-hosted monitoring tool like "Uptime Robot", but it is hard to find a suitable one. One of the closest ones is statping. Unfortunately, it is not stable and no longer maintained.&lt;/li&gt; 
 &lt;li&gt;Wanted to build a fancy UI.&lt;/li&gt; 
 &lt;li&gt;Learn Vue 3 and vite.js.&lt;/li&gt; 
 &lt;li&gt;Show the power of Bootstrap 5.&lt;/li&gt; 
 &lt;li&gt;Try to use WebSocket with SPA instead of a REST API.&lt;/li&gt; 
 &lt;li&gt;Deploy my first Docker image to Docker Hub.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you love this project, please consider giving it a ⭐.&lt;/p&gt; 
&lt;h2&gt;🗣️ Discussion / Ask for Help&lt;/h2&gt; 
&lt;p&gt;⚠️ For any general or technical questions, please don't send me an email, as I am unable to provide support in that manner. I will not respond if you ask questions there.&lt;/p&gt; 
&lt;p&gt;I recommend using Google, GitHub Issues, or Uptime Kuma's subreddit for finding answers to your question. If you cannot find the information you need, feel free to ask:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/louislam/uptime-kuma/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.reddit.com/r/UptimeKuma/"&gt;Subreddit (r/UptimeKuma)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;My Reddit account: &lt;a href="https://reddit.com/u/louislamlam"&gt;u/louislamlam&lt;/a&gt; You can mention me if you ask a question on the subreddit.&lt;/p&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;h3&gt;Create Pull Requests&lt;/h3&gt; 
&lt;p&gt;We DO NOT accept all types of pull requests and do not want to waste your time. Please be sure that you have read and follow pull request rules: &lt;a href="https://github.com/louislam/uptime-kuma/raw/master/CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma"&gt;CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Test Pull Requests&lt;/h3&gt; 
&lt;p&gt;There are a lot of pull requests right now, but I don't have time to test them all.&lt;/p&gt; 
&lt;p&gt;If you want to help, you can check this: &lt;a href="https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests"&gt;https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Test Beta Version&lt;/h3&gt; 
&lt;p&gt;Check out the latest beta release here: &lt;a href="https://github.com/louislam/uptime-kuma/releases"&gt;https://github.com/louislam/uptime-kuma/releases&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Bug Reports / Feature Requests&lt;/h3&gt; 
&lt;p&gt;If you want to report a bug or request a new feature, feel free to open a &lt;a href="https://github.com/louislam/uptime-kuma/issues"&gt;new issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Translations&lt;/h3&gt; 
&lt;p&gt;If you want to translate Uptime Kuma into your language, please visit &lt;a href="https://github.com/louislam/uptime-kuma/raw/master/src/lang/README.md"&gt;Weblate Readme&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Spelling &amp;amp; Grammar&lt;/h3&gt; 
&lt;p&gt;Feel free to correct the grammar in the documentation or code. My mother language is not English and my grammar is not that great.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UseInterstellar/Interstellar</title>
      <link>https://github.com/UseInterstellar/Interstellar</link>
      <description>&lt;p&gt;One of the most popular modern web proxies with blazing fast speeds and a variety of games.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/UseInterstellar/Interstellar/main/.github/branding/in.png" /&gt; 
 &lt;p&gt;Serving over 15 million users since 2022.&lt;/p&gt;
 &lt;p&gt; &lt;/p&gt;
 &lt;p&gt;Interstellar is a web proxy with a Clean and Sleek UI and easy to use menus. Our goal is to provide the best user experience to everyone.&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;img src="https://github.com/UseInterstellar/Interstellar/assets/89202835/2669efed-5186-4932-83c4-725acae60bd2" alt="inpreview" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] If you fork this project, consider giving it a star in the original repository!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Join Our &lt;a href="https://discord.gg/interstellar"&gt;Discord Community&lt;/a&gt; for support, more links, and an active community!&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;About:Blank Cloaking&lt;/li&gt; 
 &lt;li&gt;Tab Cloaking&lt;/li&gt; 
 &lt;li&gt;Wide collection of apps &amp;amp; games&lt;/li&gt; 
 &lt;li&gt;Clean, Easy to use UI&lt;/li&gt; 
 &lt;li&gt;Inspect Element&lt;/li&gt; 
 &lt;li&gt;Various Themes&lt;/li&gt; 
 &lt;li&gt;Password Protection (Optional)&lt;/li&gt; 
 &lt;li&gt;Built-in Tab System&lt;/li&gt; 
 &lt;li&gt;Now.gg Support&lt;/li&gt; 
 &lt;li&gt;Fast Speeds&lt;/li&gt; 
 &lt;li&gt;Geforce NOW Support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] You &lt;strong&gt;cannot&lt;/strong&gt; deploy to static web hosts, including Netlify, Cloudflare Pages, and GitHub Pages.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Password Protection&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the &lt;code&gt;config.js&lt;/code&gt; file and set &lt;code&gt;challenge&lt;/code&gt; to &lt;strong&gt;true&lt;/strong&gt;. Then, set the environment variable as follows:&lt;/li&gt; 
 &lt;li&gt;For PNPM: Run either &lt;code&gt;config=true pnpm start&lt;/code&gt; or &lt;code&gt;$env:config=true; pnpm start&lt;/code&gt;, depending on your server.&lt;/li&gt; 
 &lt;li&gt;For Bun: Run either &lt;code&gt;config=true bun start&lt;/code&gt; or &lt;code&gt;$env:config=true; bun start&lt;/code&gt; if you prefer Bun.&lt;/li&gt; 
 &lt;li&gt;For NPM: Run either &lt;code&gt;config=true npm start&lt;/code&gt; or &lt;code&gt;$env:config=true; npm start&lt;/code&gt; if you prefer NPM.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Server Deployment&lt;/h3&gt; 
&lt;p&gt;You must run these commands on your server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/UseInterstellar/Interstellar
cd Interstellar
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Ad-Free Deployment&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone --branch Ad-Free https://github.com/UseInterstellar/Interstellar
cd Interstellar
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next depending on your package manager, run one of the following commands:&lt;/p&gt; 
&lt;h4&gt;Bun&lt;/h4&gt; 
&lt;p&gt;If you are using Bun, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun i
bun start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;pnpm&lt;/h4&gt; 
&lt;p&gt;If you are using pnpm, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm i
pnpm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;npm&lt;/h4&gt; 
&lt;p&gt;If you are using npm, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i
npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Updating&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd Interstellar
git pull --force --allow-unrelated-histories # This may overwrite your local changes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a target="_blank" href="https://heroku.com/deploy/?template=https://github.com/UseInterstellar/Interstellar"&gt;&lt;img alt="Deploy to Heroku" src="https://binbashbanana.github.io/deploy-buttons/buttons/remade/heroku.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://app.koyeb.com/deploy?type=git&amp;amp;repository=github.com/UseInterstellar/Interstellar"&gt;&lt;img alt="Deploy to Koyeb" src="https://binbashbanana.github.io/deploy-buttons/buttons/remade/koyeb.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Deployment Alternatives&lt;/h3&gt; 
&lt;p&gt;For more deployment options, join our &lt;a href="https://discord.gg/interstellar"&gt;Discord Server&lt;/a&gt; for various ways to deploy Interstellar. This includes methods of deploying to Render/OnRender.&lt;/p&gt; 
&lt;h4&gt;What happened to Replit Deployment?&lt;/h4&gt; 
&lt;p&gt;As of January 1st, 2024, Replit is &lt;a href="https://blog.replit.com/hosting-changes"&gt;no longer free&lt;/a&gt;. Try GitHub Codespaces instead.&lt;/p&gt; 
&lt;h3&gt;GitHub Codespaces&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you're setting the port below 1023, then you must run &lt;code&gt;sudo PORT=1023&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a GitHub account if you haven't already.&lt;/li&gt; 
 &lt;li&gt;Click "Code" (green button) and then "Create Codespace on main."&lt;/li&gt; 
 &lt;li&gt;In the terminal at the bottom, paste &lt;code&gt;pnpm i &amp;amp;&amp;amp; pnpm start&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Respond to the application popup by clicking "Make public."&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Make sure you click the "Make public." button, or the proxy won't function properly.&lt;br /&gt; If you get a Range Error, go back and make sure you clicked Make public!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Access the deployed website from the ports tab.&lt;/li&gt; 
 &lt;li&gt;For subsequent uses in the same codespace, just run &lt;code&gt;pnpm start&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Solution for if there is no popup.&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;pnpm i&lt;/code&gt;, and before &lt;code&gt;pnpm start&lt;/code&gt;, prepend &lt;code&gt;PORT=8080&lt;/code&gt;, replacing 8080 with another port. For example, &lt;code&gt;PORT=6969 pnpm start&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If this does not work then you can prepend &lt;code&gt;$env:PORT=8080;&lt;/code&gt;, replacing 8080 with another port. For example, &lt;code&gt;$env:PORT=6969; pnpm start&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Go to the ports tab, Click Forward A Port, And type the port number.&lt;/li&gt; 
 &lt;li&gt;Right-click Visibility and set Port Visibility to Public.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] We are committed to making Interstellar easy and personalized however, as of now we need your support in making it ad-free. Consider keeping ads so Interstellar can run freely or contribute by being a supporter.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Report Issues&lt;/h2&gt; 
&lt;p&gt;If you encounter problems, open an issue on GitHub, and we'll address it promptly.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you're having trouble, don't hesitate to reach out to us on &lt;a href="https://discord.gg/interstellar"&gt;Discord&lt;/a&gt; for personalized support.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Credits&lt;/h1&gt; 
&lt;p&gt;A huge thanks goes out to all of the people who have contributed to Interstellar.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/UseInterstellar/Interstellar/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=UseInterstellar/Interstellar" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/next.js</title>
      <link>https://github.com/vercel/next.js</link>
      <description>&lt;p&gt;The React Framework&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://nextjs.org"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://assets.vercel.com/image/upload/v1662130559/nextjs/Icon_dark_background.png" /&gt; 
   &lt;img alt="Next.js logo" src="https://assets.vercel.com/image/upload/v1662130559/nextjs/Icon_light_background.png" height="128" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
 &lt;h1&gt;Next.js&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://vercel.com"&gt;&lt;img alt="Vercel logo" src="https://img.shields.io/badge/MADE%20BY%20Vercel-000000.svg?style=for-the-badge&amp;amp;logo=Vercel&amp;amp;labelColor=000" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/next"&gt;&lt;img alt="NPM version" src="https://img.shields.io/npm/v/next.svg?style=for-the-badge&amp;amp;labelColor=000000" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vercel/next.js/raw/canary/license.md"&gt;&lt;img alt="License" src="https://img.shields.io/npm/l/next.svg?style=for-the-badge&amp;amp;labelColor=000000" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vercel/next.js/discussions"&gt;&lt;img alt="Join the community on GitHub" src="https://img.shields.io/badge/Join%20the%20community-blueviolet.svg?style=for-the-badge&amp;amp;logo=Next.js&amp;amp;labelColor=000000&amp;amp;logoWidth=20" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Used by some of the world's largest companies, Next.js enables you to create full-stack web applications by extending the latest React features, and integrating powerful Rust-based JavaScript tooling for the fastest builds.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visit our &lt;a href="https://nextjs.org/learn"&gt;Learn Next.js&lt;/a&gt; course to get started with Next.js.&lt;/li&gt; 
 &lt;li&gt;Visit the &lt;a href="https://nextjs.org/showcase"&gt;Next.js Showcase&lt;/a&gt; to see more sites built with Next.js.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://nextjs.org/docs"&gt;https://nextjs.org/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Next.js community can be found on &lt;a href="https://github.com/vercel/next.js/discussions"&gt;GitHub Discussions&lt;/a&gt; where you can ask questions, voice ideas, and share your projects with other people.&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the Next.js &lt;a href="https://nextjs.org/discord"&gt;Discord&lt;/a&gt; server.&lt;/p&gt; 
&lt;p&gt;Do note that our &lt;a href="https://github.com/vercel/next.js/raw/canary/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; applies to all Next.js community channels. Users are &lt;strong&gt;highly encouraged&lt;/strong&gt; to read and adhere to it to avoid repercussions.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions to Next.js are welcome and highly appreciated. However, before you jump right into it, we would like you to review our &lt;a href="https://raw.githubusercontent.com/vercel/next.js/canary/contributing.md"&gt;Contribution Guidelines&lt;/a&gt; to make sure you have a smooth experience contributing to Next.js.&lt;/p&gt; 
&lt;h3&gt;Good First Issues:&lt;/h3&gt; 
&lt;p&gt;We have a list of &lt;strong&gt;&lt;a href="https://github.com/vercel/next.js/labels/%22good%20first%20issue%22"&gt;good first issues&lt;/a&gt;&lt;/strong&gt; that contain bugs that have a relatively limited scope. This is a great place for newcomers and beginners alike to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you believe you have found a security vulnerability in Next.js, we encourage you to &lt;strong&gt;&lt;em&gt;responsibly disclose this and NOT open a public issue&lt;/em&gt;&lt;/strong&gt;. We will investigate all legitimate reports.&lt;/p&gt; 
&lt;p&gt;Our preference is that you make use of GitHub's private vulnerability reporting feature to disclose potential security vulnerabilities in our Open Source Software. To do this, please visit &lt;a href="https://github.com/vercel/next.js/security"&gt;https://github.com/vercel/next.js/security&lt;/a&gt; and click the "Report a vulnerability" button.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>naptha/tesseract.js</title>
      <link>https://github.com/naptha/tesseract.js</link>
      <description>&lt;p&gt;Pure Javascript OCR for more than 100 Languages 📖🎉🖥&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://tesseract.projectnaptha.com/"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./docs/images/tesseract_dark.png" /&gt; 
   &lt;img width="256px" height="256px" alt="Tesseract.js" src="https://raw.githubusercontent.com/naptha/tesseract.js/master/docs/images/tesseract.png" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/naptha/tesseract.js/workflows/Node.js%20CI/badge.svg?sanitize=true" alt="Lint &amp;amp; Test" /&gt; &lt;img src="https://github.com/naptha/tesseract.js/workflows/CodeQL/badge.svg?sanitize=true" alt="CodeQL" /&gt; &lt;a href="https://github.com/naptha/tesseract.js"&gt;&lt;img src="https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod" alt="Gitpod Ready-to-Code" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tesseractjs"&gt;&lt;img src="https://opencollective.com/tesseractjs/all/badge.svg?label=financial+contributors" alt="Financial Contributors on Open Collective" /&gt;&lt;/a&gt; &lt;a href="https://badge.fury.io/js/tesseract.js"&gt;&lt;img src="https://badge.fury.io/js/tesseract.js.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/naptha/tesseract.js/graphs/commit-activity"&gt;&lt;img src="https://img.shields.io/badge/Maintained%3F-yes-green.svg?sanitize=true" alt="Maintenance" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://github.com/airbnb/javascript"&gt;&lt;img src="https://badgen.net/badge/code%20style/airbnb/ff5a5f?icon=airbnb" alt="Code Style" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/npm/dm/tesseract.js?label=npm%20downloads" alt="npm" /&gt; &lt;img src="https://img.shields.io/jsdelivr/npm/hm/tesseract.js?label=jsdelivr%20hits" alt="jsDelivr hits (npm)" /&gt;&lt;/p&gt; 
&lt;p&gt;Tesseract.js is a javascript library that gets words in &lt;a href="https://raw.githubusercontent.com/naptha/tesseract.js/master/docs/tesseract_lang_list.md"&gt;almost any language&lt;/a&gt; out of images. (&lt;a href="http://tesseract.projectnaptha.com/"&gt;Demo&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;Image Recognition&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://tesseract.projectnaptha.com"&gt;&lt;img src="https://raw.githubusercontent.com/naptha/tesseract.js/master/docs/images/demo.gif" alt="fancy demo gif" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Video Real-time Recognition&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/jeromewu/tesseract.js-video"&gt;&lt;img alt="Tesseract.js Video" src="https://raw.githubusercontent.com/naptha/tesseract.js/master/docs/images/video-demo.gif" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Tesseract.js works in the browser using &lt;a href="https://webpack.js.org/"&gt;webpack&lt;/a&gt;, esm, or plain script tags with a &lt;a href="https://raw.githubusercontent.com/naptha/tesseract.js/master/#CDN"&gt;CDN&lt;/a&gt; and on the server with &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;. After you &lt;a href="https://raw.githubusercontent.com/naptha/tesseract.js/master/#installation"&gt;install it&lt;/a&gt;, using it is as simple as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import { createWorker } from 'tesseract.js';

(async () =&amp;gt; {
  const worker = await createWorker('eng');
  const ret = await worker.recognize('https://tesseract.projectnaptha.com/img/eng_bw.png');
  console.log(ret.data.text);
  await worker.terminate();
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When recognizing multiple images, users should create a worker once, run &lt;code&gt;worker.recognize&lt;/code&gt; for each image, and then run &lt;code&gt;worker.terminate()&lt;/code&gt; once at the end (rather than running the above snippet for every image).&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Tesseract.js works with a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag via local copy or CDN, with webpack via &lt;code&gt;npm&lt;/code&gt; and on Node.js with &lt;code&gt;npm/yarn&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;CDN&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;!-- v5 --&amp;gt;
&amp;lt;script src='https://cdn.jsdelivr.net/npm/tesseract.js@5/dist/tesseract.min.js'&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After including the script the &lt;code&gt;Tesseract&lt;/code&gt; variable will be globally available and a worker can be created using &lt;code&gt;Tesseract.createWorker&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Alternatively, an ESM build (used with &lt;code&gt;import&lt;/code&gt; syntax) can be found at &lt;code&gt;https://cdn.jsdelivr.net/npm/tesseract.js@5/dist/tesseract.esm.min.js&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Node.js&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Requires Node.js v14 or higher&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# For latest version
npm install tesseract.js
yarn add tesseract.js

# For old versions
npm install tesseract.js@3.0.3
yarn add tesseract.js@3.0.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Project Scope&lt;/h2&gt; 
&lt;p&gt;Tesseract.js aims to bring the &lt;a href="https://github.com/tesseract-ocr/tesseract"&gt;Tesseract&lt;/a&gt; OCR engine (a separate project) to the browser and Node.js, and works by wrapping a &lt;a href="https://github.com/naptha/tesseract.js-core"&gt;WebAssembly port&lt;/a&gt; of Tesseract. This project does not modify core Tesseract features. Most notably, &lt;strong&gt;Tesseract.js does not support PDF files and does not modify the Tesseract recognition model to improve accuracy.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If your project requires features outside of this scope, consider the &lt;a href="https://github.com/scribeocr/scribe.js"&gt;Scribe.js library&lt;/a&gt;. Scribe.js is an alternative library created to accommodate common feature requests that are outside of the scope of this repo. Scribe.js includes improvements to the Tesseract recognition model and supports extracting text from PDF documents, among other features. For more information see &lt;a href="https://github.com/scribeocr/scribe.js/raw/master/docs/scribe_vs_tesseract.md"&gt;Scribe.js vs. Tesseract.js&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/naptha/tesseract.js/master/docs/workers_vs_schedulers.md"&gt;Workers vs. Schedulers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/naptha/tesseract.js/master/docs/examples.md"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/naptha/tesseract.js/master/docs/image-format.md"&gt;Supported Image Formats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/naptha/tesseract.js/master/docs/api.md"&gt;API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/naptha/tesseract.js/master/docs/local-installation.md"&gt;Local Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/naptha/tesseract.js/master/docs/faq.md"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community Projects and Examples&lt;/h2&gt; 
&lt;p&gt;The following are examples and projects built by the community using Tesseract.js. Officially supported examples are found in the &lt;a href="https://github.com/naptha/tesseract.js/tree/master/examples"&gt;examples&lt;/a&gt; directory.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Projects 
  &lt;ul&gt; 
   &lt;li&gt;Scribe OCR: web application for scanning documents (images and PDFs) 
    &lt;ul&gt; 
     &lt;li&gt;Site at &lt;a href="https://scribeocr.com/"&gt;scribeocr.com&lt;/a&gt;, repo at &lt;a href="https://github.com/scribeocr/scribeocr"&gt;github.com/scribeocr/scribeocr&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Chrome Extension (with Manifest V3): &lt;a href="https://github.com/Tshetrim/Image-To-Text-OCR-extension-for-ChatGPT"&gt;https://github.com/Tshetrim/Image-To-Text-OCR-extension-for-ChatGPT&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Examples 
  &lt;ul&gt; 
   &lt;li&gt;Converting PDF to text: &lt;a href="https://github.com/racosa/pdf2text-ocr"&gt;https://github.com/racosa/pdf2text-ocr&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Use &lt;code&gt;blocks&lt;/code&gt; output to generate granular data [word/symbol level]: &lt;a href="https://github.com/Kishlay-notabot/tesseract-bbox-examples"&gt;https://github.com/Kishlay-notabot/tesseract-bbox-examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Electron: &lt;a href="https://github.com/Balearica/tesseract.js-electron"&gt;https://github.com/Balearica/tesseract.js-electron&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Typescript: &lt;a href="https://github.com/Balearica/tesseract.js-typescript"&gt;https://github.com/Balearica/tesseract.js-typescript&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have a project or example repo that uses Tesseract.js, feel free to add it to this list using a pull request. Examples submitted should be well documented such that new users can run them; projects should be functional and actively maintained.&lt;/p&gt; 
&lt;h2&gt;Major changes in v6&lt;/h2&gt; 
&lt;p&gt;Version 6 changes are documented in &lt;a href="https://github.com/naptha/tesseract.js/issues/993"&gt;this issue&lt;/a&gt;. Highlights are below.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed memory leak in previous versions&lt;/li&gt; 
 &lt;li&gt;Overall reductions in runtime and memory usage&lt;/li&gt; 
 &lt;li&gt;Breaking changes: 
  &lt;ul&gt; 
   &lt;li&gt;All outputs formats other than &lt;code&gt;text&lt;/code&gt; are disabled by default. 
    &lt;ul&gt; 
     &lt;li&gt;To re-enable the &lt;code&gt;hocr&lt;/code&gt; output (for example), set the following: &lt;code&gt;worker.recognize(image, {}, { hocr: true })&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Minor changes to the structure of the JavaScript object (&lt;code&gt;blocks&lt;/code&gt;) output&lt;/li&gt; 
   &lt;li&gt;See &lt;a href="https://github.com/naptha/tesseract.js/issues/993"&gt;this issue&lt;/a&gt; for full list&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Major changes in v5&lt;/h2&gt; 
&lt;p&gt;Version 5 changes are documented in &lt;a href="https://github.com/naptha/tesseract.js/issues/820"&gt;this issue&lt;/a&gt;. Highlights are below.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Significantly smaller files by default (54% smaller for English, 73% smaller for Chinese) 
  &lt;ul&gt; 
   &lt;li&gt;This results in a ~50% reduction in runtime for first-time users (who do not have the files cached yet)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Significantly lower memory usage&lt;/li&gt; 
 &lt;li&gt;Breaking changes: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;createWorker&lt;/code&gt; arguments changed 
    &lt;ul&gt; 
     &lt;li&gt;Setting non-default language and OEM now happens in &lt;code&gt;createWorker&lt;/code&gt; 
      &lt;ul&gt; 
       &lt;li&gt;E.g. &lt;code&gt;createWorker("chi_sim", 1)&lt;/code&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;worker.initialize&lt;/code&gt; and &lt;code&gt;worker.loadLanguage&lt;/code&gt; functions should be deleted from code&lt;/li&gt; 
   &lt;li&gt;See &lt;a href="https://github.com/naptha/tesseract.js/issues/820"&gt;this issue&lt;/a&gt; for full list&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Upgrading from v2 to v5? See &lt;a href="https://github.com/naptha/tesseract.js/issues/771"&gt;this guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Major changes in v4&lt;/h2&gt; 
&lt;p&gt;Version 4 includes many new features and bug fixes--see &lt;a href="https://github.com/naptha/tesseract.js/issues/662"&gt;this issue&lt;/a&gt; for a full list. Several highlights are below.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added rotation preprocessing options (including auto-rotate) for significantly better accuracy&lt;/li&gt; 
 &lt;li&gt;Processed images (rotated, grayscale, binary) can now be retrieved&lt;/li&gt; 
 &lt;li&gt;Improved support for parallel processing (schedulers)&lt;/li&gt; 
 &lt;li&gt;Breaking changes: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;createWorker&lt;/code&gt; is now async&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;getPDF&lt;/code&gt; function replaced by &lt;code&gt;pdf&lt;/code&gt; recognize option&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;p&gt;To run a development copy of Tesseract.js do the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# First we clone the repository
git clone https://github.com/naptha/tesseract.js.git
cd tesseract.js

# Then we install the dependencies
npm install

# And finally we start the development server
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The development server will be available at &lt;a href="http://localhost:3000/examples/browser/basic-efficient.html"&gt;http://localhost:3000/examples/browser/basic-efficient.html&lt;/a&gt; in your favorite browser. It will automatically rebuild &lt;code&gt;tesseract.min.js&lt;/code&gt; and &lt;code&gt;worker.min.js&lt;/code&gt; when you change files in the &lt;strong&gt;src&lt;/strong&gt; folder.&lt;/p&gt; 
&lt;h3&gt;Building Static Files&lt;/h3&gt; 
&lt;p&gt;To build the compiled static files just execute the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will output the files into the &lt;code&gt;dist&lt;/code&gt; directory.&lt;/p&gt; 
&lt;h3&gt;Run Tests&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Always confirm the automated tests pass before submitting a pull request.&lt;/strong&gt; To run the automated tests locally, run the following commands.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm run lint
npm run test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;h3&gt;Code Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href="https://github.com/naptha/tesseract.js?tab=readme-ov-file#contributing"&gt;Contribute&lt;/a&gt;]. &lt;a href="https://github.com/naptha/tesseract.js/graphs/contributors"&gt;&lt;img src="https://opencollective.com/tesseractjs/contributors.svg?width=890&amp;amp;button=false" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Financial Contributors&lt;/h3&gt; 
&lt;p&gt;Become a financial contributor and help us sustain our community. [&lt;a href="https://opencollective.com/tesseractjs/contribute"&gt;Contribute&lt;/a&gt;]&lt;/p&gt; 
&lt;h4&gt;Individuals&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/tesseractjs"&gt;&lt;img src="https://opencollective.com/tesseractjs/individuals.svg?width=890" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Organizations&lt;/h4&gt; 
&lt;p&gt;Support this project with your organization. Your logo will show up here with a link to your website. [&lt;a href="https://opencollective.com/tesseractjs/contribute"&gt;Contribute&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/tesseractjs/organization/0/website"&gt;&lt;img src="https://opencollective.com/tesseractjs/organization/0/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tesseractjs/organization/1/website"&gt;&lt;img src="https://opencollective.com/tesseractjs/organization/1/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tesseractjs/organization/2/website"&gt;&lt;img src="https://opencollective.com/tesseractjs/organization/2/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tesseractjs/organization/3/website"&gt;&lt;img src="https://opencollective.com/tesseractjs/organization/3/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tesseractjs/organization/4/website"&gt;&lt;img src="https://opencollective.com/tesseractjs/organization/4/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tesseractjs/organization/5/website"&gt;&lt;img src="https://opencollective.com/tesseractjs/organization/5/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tesseractjs/organization/6/website"&gt;&lt;img src="https://opencollective.com/tesseractjs/organization/6/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tesseractjs/organization/7/website"&gt;&lt;img src="https://opencollective.com/tesseractjs/organization/7/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tesseractjs/organization/8/website"&gt;&lt;img src="https://opencollective.com/tesseractjs/organization/8/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tesseractjs/organization/9/website"&gt;&lt;img src="https://opencollective.com/tesseractjs/organization/9/avatar.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tw93/Pake</title>
      <link>https://github.com/tw93/Pake</link>
      <description>&lt;p&gt;🤱🏻 Turn any webpage into a desktop app with Rust. 🤱🏻 利用 Rust 轻松构建轻量级多端桌面应用&lt;/p&gt;&lt;hr&gt;&lt;h4 align="right"&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/README_CN.md"&gt;简体中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/README_JP.md"&gt;日本語&lt;/a&gt;&lt;/h4&gt; 
&lt;p align="center"&gt; &lt;img src="https://gw.alipayobjects.com/zos/k/fa/logo-modified.png" width="138/" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Pake&lt;/h1&gt; 
&lt;p align="center"&gt;&lt;strong&gt;Turn any webpage into a desktop app with Rust &lt;em&gt;with ease&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://twitter.com/HiTw93" target="_blank"&gt; &lt;img alt="twitter" src="https://img.shields.io/badge/follow-Tw93-red?style=flat-square&amp;amp;logo=Twitter" /&gt;&lt;/a&gt; 
 &lt;a href="https://t.me/+GclQS9ZnxyI2ODQ1" target="_blank"&gt; &lt;img alt="telegram" src="https://img.shields.io/badge/chat-telegram-blueviolet?style=flat-square&amp;amp;logo=Telegram" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/tw93/Pake/releases" target="_blank"&gt; &lt;img alt="GitHub downloads" src="https://img.shields.io/github/downloads/tw93/Pake/total.svg?style=flat-square" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/tw93/Pake/commits" target="_blank"&gt; &lt;img alt="GitHub commit" src="https://img.shields.io/github/commit-activity/m/tw93/Pake?style=flat-square" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/tw93/Pake/issues?q=is%3Aissue+is%3Aclosed" target="_blank"&gt; &lt;img alt="GitHub closed issues" src="https://img.shields.io/github/issues-closed/tw93/Pake.svg?style=flat-square" /&gt;&lt;/a&gt; 
 &lt;a href="https://colab.research.google.com/drive/1bX345znvDZ30848xjRtpgtU8eypWwXrp?usp=sharing" target="_blank"&gt; &lt;img alt="Open in Colab" src="https://colab.research.google.com/assets/colab-badge.svg?sanitize=true" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="left"&gt;
 Pake supports Mac, Windows, and Linux. Check out README for 
 &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#popular-packages"&gt;Popular Packages&lt;/a&gt;, 
 &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#command-line-packaging"&gt;Command-Line Packaging&lt;/a&gt;, and 
 &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#development"&gt;Customized Development&lt;/a&gt; information. Feel free to share your suggestions in 
 &lt;a href="https://github.com/tw93/Pake/discussions"&gt;Discussions&lt;/a&gt;.
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎐 Nearly 20 times smaller than an Electron package (around 5M!)&lt;/li&gt; 
 &lt;li&gt;🚀 With Rust Tauri, Pake is much more lightweight and faster than JS-based frameworks.&lt;/li&gt; 
 &lt;li&gt;📦 Battery-included package — shortcut pass-through, immersive windows, and minimalist customization.&lt;/li&gt; 
 &lt;li&gt;🖱️ Smart right-click context menus with download support for images, videos, and files.&lt;/li&gt; 
 &lt;li&gt;👻 Pake is just a simple tool — replaces the old bundle approach with Tauri (though PWA is also a good alternative).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Popular Packages&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;WeRead &lt;a href="https://github.com/tw93/Pake/releases/latest/download/WeRead.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/WeRead_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/WeRead_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Twitter &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Twitter.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Twitter_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Twitter_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/WeRead.jpg" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Twitter.jpg" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Grok &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Grok.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Grok_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Grok_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;DeepSeek &lt;a href="https://github.com/tw93/Pake/releases/latest/download/DeepSeek.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/DeepSeek_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/DeepSeek_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Grok.png" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/DeepSeek.png" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ChatGPT &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ChatGPT.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ChatGPT_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ChatGPT_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Gemini &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Gemini.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Gemini_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Gemini_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/ChatGPT.png" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Gemini.png" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YouTube Music &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTubeMusic.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTubeMusic_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTubeMusic_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;YouTube &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTube.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTube_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/YouTube_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/YouTubeMusic.png" width="600" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/YouTube.jpg" width="600" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LiZhi &lt;a href="https://github.com/tw93/Pake/releases/latest/download/LiZhi.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/LiZhi_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/LiZhi_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;ProgramMusic &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ProgramMusic.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ProgramMusic_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/ProgramMusic_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/LiZhi.jpg" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/ProgramMusic.jpg" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Excalidraw &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Excalidraw.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Excalidraw_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/Excalidraw_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;XiaoHongShu &lt;a href="https://github.com/tw93/Pake/releases/latest/download/XiaoHongShu.dmg"&gt;Mac&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/XiaoHongShu_x64.msi"&gt;Windows&lt;/a&gt; &lt;a href="https://github.com/tw93/Pake/releases/latest/download/XiaoHongShu_x86_64.deb"&gt;Linux&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/Excalidraw.png" width="600/" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/XiaoHongShu.png" width="600/" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;details&gt; 
 &lt;summary&gt;🏂 You can download more applications from &lt;a href="https://github.com/tw93/Pake/releases"&gt;Releases&lt;/a&gt;. &lt;b&gt;Click here to expand the shortcuts reference!&lt;/b&gt;&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Mac&lt;/th&gt; 
    &lt;th&gt;Windows/Linux&lt;/th&gt; 
    &lt;th&gt;Function&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;[&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;←&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Return to the previous page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;]&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;→&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Go to the next page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;↑&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;↑&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Auto scroll to top of page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;↓&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;↓&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Auto scroll to bottom of page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;r&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;r&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Refresh Page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;w&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;w&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Hide window, not quit&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Zoom out the page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;+&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;+&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Zoom in the page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;=&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;=&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Zoom in the Page&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;kbd&gt;⌘&lt;/kbd&gt; + &lt;kbd&gt;0&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;0&lt;/kbd&gt;&lt;/td&gt; 
    &lt;td&gt;Reset the page zoom&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;In addition, double-click the title bar to switch to full-screen mode. For Mac users, you can also use the gesture to go to the previous or next page and drag the title bar to move the window.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Before starting&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;For beginners&lt;/strong&gt;: Play with Popular Packages to find out Pake's capabilities, or try to pack your application with &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/github-actions-usage.md"&gt;GitHub Actions&lt;/a&gt;. Don't hesitate to reach for assistance at &lt;a href="https://github.com/tw93/Pake/discussions"&gt;Discussion&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;For developers&lt;/strong&gt;: “Command-Line Packaging” supports macOS fully. For Windows/Linux users, it requires some tinkering. &lt;a href="https://tauri.app/start/prerequisites/"&gt;Configure your environment&lt;/a&gt; before getting started.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;For hackers&lt;/strong&gt;: For people who are good at both front-end development and Rust, how about customizing your apps' function more with the following &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#development"&gt;Customized Development&lt;/a&gt;?&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Command-Line Packaging&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/tw93/static/main/pake/pake.gif" alt="Pake" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Pake provides a command line tool, making the flow of package customization quicker and easier. See the &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/cli-usage.md"&gt;CLI usage guide&lt;/a&gt; for more information.&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Recommended (pnpm)
pnpm install -g pake-cli

# Alternative (npm)
npm install -g pake-cli

# Command usage
pake url [OPTIONS]...

# Feel free to play with Pake! It might take a while to prepare the environment the first time you launch Pake.
pake https://weekly.tw93.fun --name Weekly --hide-title-bar
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are new to the command line, you can compile packages online with &lt;em&gt;GitHub Actions&lt;/em&gt;. See our &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/#documentation"&gt;documentation&lt;/a&gt; for detailed guides.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Prepare your environment before starting. Make sure you have Rust &lt;code&gt;&amp;gt;=1.89&lt;/code&gt; and Node &lt;code&gt;&amp;gt;=18&lt;/code&gt; (e.g., &lt;code&gt;22.11.0&lt;/code&gt;) installed on your computer. &lt;em&gt;Note: Latest stable versions are recommended.&lt;/em&gt; For installation guidance, see &lt;a href="https://tauri.app/start/prerequisites/"&gt;Tauri documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are unfamiliar with these, it is better to try out the above tool to pack with one click.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Install dependencies
pnpm i

# Local development (right-click to open debug mode)
pnpm run dev

# Build application
pnpm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/cli-usage.md"&gt;CLI Usage&lt;/a&gt;&lt;/strong&gt; | &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/cli-usage_CN.md"&gt;中文&lt;/a&gt; - Command-line interface reference&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/advanced-usage.md"&gt;Advanced Usage&lt;/a&gt;&lt;/strong&gt; | &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/advanced-usage_CN.md"&gt;中文&lt;/a&gt; - Customization and advanced features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/github-actions-usage.md"&gt;GitHub Actions&lt;/a&gt;&lt;/strong&gt; | &lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/github-actions-usage_CN.md"&gt;中文&lt;/a&gt; - Build apps online&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/docs/pake-action.md"&gt;Pake Action&lt;/a&gt;&lt;/strong&gt; - Use Pake as GitHub Action in your projects&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/tw93/Pake/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;&lt;/strong&gt; - How to contribute to development&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Developers&lt;/h2&gt; 
&lt;p&gt;Pake's development can not be without these Hackers. They contributed a lot of capabilities for Pake. Also, welcome to follow them! ❤️&lt;/p&gt; 
&lt;!-- readme: contributors -start --&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/tw93"&gt; &lt;img src="https://avatars.githubusercontent.com/u/8736212?v=4" width="90;" alt="tw93" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Tw93&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Tlntin"&gt; &lt;img src="https://avatars.githubusercontent.com/u/28218658?v=4" width="90;" alt="Tlntin" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Tlntin&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/jeasonnow"&gt; &lt;img src="https://avatars.githubusercontent.com/u/16950207?v=4" width="90;" alt="jeasonnow" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Santree&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/pan93412"&gt; &lt;img src="https://avatars.githubusercontent.com/u/28441561?v=4" width="90;" alt="pan93412" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Pan93412&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/stone-w4tch3r"&gt; &lt;img src="https://avatars.githubusercontent.com/u/100294019?v=4" width="90;" alt="stone-w4tch3r" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Данил Бизимов&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/wanghanzhen"&gt; &lt;img src="https://avatars.githubusercontent.com/u/25301012?v=4" width="90;" alt="wanghanzhen" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Volare&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/liby"&gt; &lt;img src="https://avatars.githubusercontent.com/u/38807139?v=4" width="90;" alt="liby" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Bryan Lee&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/essesoul"&gt; &lt;img src="https://avatars.githubusercontent.com/u/58624474?v=4" width="90;" alt="essesoul" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Essesoul&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/YangguangZhou"&gt; &lt;img src="https://avatars.githubusercontent.com/u/61733195?v=4" width="90;" alt="YangguangZhou" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Jerry Zhou&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/AielloChan"&gt; &lt;img src="https://avatars.githubusercontent.com/u/7900765?v=4" width="90;" alt="AielloChan" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Aiello&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/m1911star"&gt; &lt;img src="https://avatars.githubusercontent.com/u/4948120?v=4" width="90;" alt="m1911star" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Horus&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Pake-Actions"&gt; &lt;img src="https://avatars.githubusercontent.com/u/126550811?v=4" width="90;" alt="Pake-Actions" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Pake Actions&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/GoodbyeNJN"&gt; &lt;img src="https://avatars.githubusercontent.com/u/6856639?v=4" width="90;" alt="GoodbyeNJN" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;GoodbyeNJN&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/kittizz"&gt; &lt;img src="https://avatars.githubusercontent.com/u/62899732?v=4" width="90;" alt="kittizz" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Kittizz&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/mattbajorek"&gt; &lt;img src="https://avatars.githubusercontent.com/u/17235301?v=4" width="90;" alt="mattbajorek" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Matt Bajorek&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/vaddisrinivas"&gt; &lt;img src="https://avatars.githubusercontent.com/u/38348871?v=4" width="90;" alt="vaddisrinivas" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Srinivas Vaddi&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/QingZ11"&gt; &lt;img src="https://avatars.githubusercontent.com/u/38887077?v=4" width="90;" alt="QingZ11" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Steam&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Tianj0o"&gt; &lt;img src="https://avatars.githubusercontent.com/u/68584284?v=4" width="90;" alt="Tianj0o" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Qitianjia&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/xinyii"&gt; &lt;img src="https://avatars.githubusercontent.com/u/17895104?v=4" width="90;" alt="xinyii" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Yi Xin&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/g1eny0ung"&gt; &lt;img src="https://avatars.githubusercontent.com/u/15034155?v=4" width="90;" alt="g1eny0ung" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Yue Yang&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/lkieryan"&gt; &lt;img src="https://avatars.githubusercontent.com/u/187804088?v=4" width="90;" alt="lkieryan" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Kieran&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/exposir"&gt; &lt;img src="https://avatars.githubusercontent.com/u/33340988?v=4" width="90;" alt="exposir" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;孟世博&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/2nthony"&gt; &lt;img src="https://avatars.githubusercontent.com/u/19513289?v=4" width="90;" alt="2nthony" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;2nthony&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/ACGNnsj"&gt; &lt;img src="https://avatars.githubusercontent.com/u/22112141?v=4" width="90;" alt="ACGNnsj" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/imabutahersiddik"&gt; &lt;img src="https://avatars.githubusercontent.com/u/138387257?v=4" width="90;" alt="imabutahersiddik" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Abu Taher Siddik&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/kidylee"&gt; &lt;img src="https://avatars.githubusercontent.com/u/841310?v=4" width="90;" alt="kidylee" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;An Li&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/nekomeowww"&gt; &lt;img src="https://avatars.githubusercontent.com/u/11081491?v=4" width="90;" alt="nekomeowww" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Ayaka Neko&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/turkyden"&gt; &lt;img src="https://avatars.githubusercontent.com/u/24560160?v=4" width="90;" alt="turkyden" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Dengju Deng&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/fvn-elmy"&gt; &lt;img src="https://avatars.githubusercontent.com/u/71275745?v=4" width="90;" alt="fvn-elmy" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Fabien&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Fechin"&gt; &lt;img src="https://avatars.githubusercontent.com/u/2541482?v=4" width="90;" alt="Fechin" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Fechin&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/ImgBotApp"&gt; &lt;img src="https://avatars.githubusercontent.com/u/31427850?v=4" width="90;" alt="ImgBotApp" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Imgbot&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/droid-Q"&gt; &lt;img src="https://avatars.githubusercontent.com/u/708277?v=4" width="90;" alt="droid-Q" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Jiaqi Gu&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Jason6987"&gt; &lt;img src="https://avatars.githubusercontent.com/u/140222795?v=4" width="90;" alt="Jason6987" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Luminall&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/Milo123459"&gt; &lt;img src="https://avatars.githubusercontent.com/u/50248166?v=4" width="90;" alt="Milo123459" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Milo&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/princemaple"&gt; &lt;img src="https://avatars.githubusercontent.com/u/1329716?v=4" width="90;" alt="princemaple" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Po Chen&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/beautifulrem"&gt; &lt;img src="https://avatars.githubusercontent.com/u/98527099?v=4" width="90;" alt="beautifulrem" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Xie Ruiqi&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/bocanhcam"&gt; &lt;img src="https://avatars.githubusercontent.com/u/35592955?v=4" width="90;" alt="bocanhcam" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/geekvest"&gt; &lt;img src="https://avatars.githubusercontent.com/u/126322776?v=4" width="90;" alt="geekvest" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/houhoz"&gt; &lt;img src="https://avatars.githubusercontent.com/u/19684376?v=4" width="90;" alt="houhoz" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Hyzhao&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/lakca"&gt; &lt;img src="https://avatars.githubusercontent.com/u/16255922?v=4" width="90;" alt="lakca" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Null&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/liudonghua123"&gt; &lt;img src="https://avatars.githubusercontent.com/u/2276718?v=4" width="90;" alt="liudonghua123" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Liudonghua&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/liusishan"&gt; &lt;img src="https://avatars.githubusercontent.com/u/33129823?v=4" width="90;" alt="liusishan" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Liusishan&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/piaoyidage"&gt; &lt;img src="https://avatars.githubusercontent.com/u/5135405?v=4" width="90;" alt="piaoyidage" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Ranger&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/hetz"&gt; &lt;img src="https://avatars.githubusercontent.com/u/820141?v=4" width="90;" alt="hetz" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;贺天卓&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
 &lt;tbody&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- readme: contributors -end --&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;I have two cats, TangYuan and Coke. If you think Pake delights your life, you can feed them &lt;a href="https://miaoyan.app/cats.html?name=Pake" target="_blank"&gt;some canned food 🥩&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you like Pake, you can star it on GitHub. Also, welcome to &lt;a href="https://twitter.com/intent/tweet?url=https://github.com/tw93/Pake&amp;amp;text=%23Pake%20-%20A%20simple%20Rust%20packaged%20web%20pages%20to%20generate%20Mac%20App%20tool,%20compared%20to%20traditional%20Electron%20package,%20the%20size%20of%20nearly%2040%20times%20smaller,%20generally%20about%202M,%20the%20underlying%20use%20of%20Tauri,%20performance%20experience%20than%20the%20JS%20framework%20is%20much%20lighter~"&gt;recommend Pake&lt;/a&gt; to your friends.&lt;/li&gt; 
 &lt;li&gt;You can follow my &lt;a href="https://twitter.com/HiTw93"&gt;Twitter&lt;/a&gt; to get the latest news of Pake or join our &lt;a href="https://t.me/+GclQS9ZnxyI2ODQ1"&gt;Telegram&lt;/a&gt; chat group.&lt;/li&gt; 
 &lt;li&gt;I hope that you enjoy playing with it. Let us know if you find a website that would be great for a Mac App!&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>pedroslopez/whatsapp-web.js</title>
      <link>https://github.com/pedroslopez/whatsapp-web.js</link>
      <description>&lt;p&gt;A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;p&gt; &lt;a href="https://wwebjs.dev"&gt;&lt;img src="https://github.com/wwebjs/logos/raw/main/4_Full%20Logo%20Lockup_Small/small_banner_blue.png?raw=true" title="whatsapp-web.js" alt="WWebJS Website" width="500" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;br /&gt; 
 &lt;p&gt; &lt;a href="https://www.npmjs.com/package/whatsapp-web.js"&gt;&lt;img src="https://img.shields.io/npm/v/whatsapp-web.js.svg?sanitize=true" alt="npm" /&gt;&lt;/a&gt; &lt;a href="https://depfu.com/github/pedroslopez/whatsapp-web.js?project_id=9765"&gt;&lt;img src="https://badges.depfu.com/badges/4a65a0de96ece65fdf39e294e0c8dcba/overview.svg?sanitize=true" alt="Depfu" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/WhatsApp_Web-2.3000.1017054665-brightgreen.svg?sanitize=true" alt="WhatsApp_Web 2.2346.52" /&gt; &lt;a href="https://discord.gg/H7DqQs4"&gt;&lt;img src="https://img.shields.io/discord/698610475432411196.svg?logo=discord" alt="Discord server" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A WhatsApp API client that connects through the WhatsApp Web browser app&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The library works by launching the WhatsApp Web browser application and managing it using Puppeteer to create an instance of WhatsApp Web, thereby mitigating the risk of being blocked. The WhatsApp API client connects through the WhatsApp Web browser app, accessing its internal functions. This grants you access to nearly all the features available on WhatsApp Web, enabling dynamic handling similar to any other Node.js application.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] &lt;strong&gt;It is not guaranteed you will not be blocked by using this method. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn't be considered totally safe.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://wwebjs.dev"&gt;Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://guide.wwebjs.dev/guide"&gt;Guide&lt;/a&gt; (&lt;a href="https://github.com/wwebjs/wwebjs.dev/tree/main"&gt;source&lt;/a&gt;) &lt;em&gt;(work in progress)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.wwebjs.dev/"&gt;Documentation&lt;/a&gt; (&lt;a href="https://github.com/pedroslopez/whatsapp-web.js/tree/main/docs"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/H7DqQs4"&gt;WWebJS Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pedroslopez/whatsapp-web.js"&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://npmjs.org/package/whatsapp-web.js"&gt;npm&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The module is now available on npm! &lt;code&gt;npm i whatsapp-web.js&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] &lt;strong&gt;Node &lt;code&gt;v18+&lt;/code&gt; is required.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;QUICK STEPS TO UPGRADE NODE&lt;/h2&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;h4&gt;Manual&lt;/h4&gt; 
&lt;p&gt;Just get the latest LTS from the &lt;a href="https://nodejs.org/en/download/"&gt;official node website&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;npm&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;sudo npm install -g n
sudo n stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Choco&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;choco install nodejs-lts
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Winget&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;winget install OpenJS.NodeJS.LTS
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ubuntu / Debian&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash - &amp;amp;&amp;amp;\
sudo apt-get install -y nodejs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const { Client } = require('whatsapp-web.js');

const client = new Client();

client.on('qr', (qr) =&amp;gt; {
    // Generate and scan this code with your phone
    console.log('QR RECEIVED', qr);
});

client.on('ready', () =&amp;gt; {
    console.log('Client is ready!');
});

client.on('message', msg =&amp;gt; {
    if (msg.body == '!ping') {
        msg.reply('pong');
    }
});

client.initialize();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Take a look at &lt;a href="https://github.com/pedroslopez/whatsapp-web.js/raw/master/example.js"&gt;example.js&lt;/a&gt; for another examples with additional use cases.&lt;br /&gt; For further details on saving and restoring sessions, explore the provided &lt;a href="https://wwebjs.dev/guide/creating-your-bot/authentication.html"&gt;Authentication Strategies&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multi Device&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send messages&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive messages&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send media (images/audio/documents)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send media (video)&lt;/td&gt; 
   &lt;td&gt;✅ &lt;a href="https://wwebjs.dev/guide/creating-your-bot/handling-attachments.html#caveat-for-sending-videos-and-gifs"&gt;(requires Google Chrome)&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send stickers&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive media (images/audio/video/documents)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send contact cards&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send location&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send buttons&lt;/td&gt; 
   &lt;td&gt;❌ &lt;a href="https://www.youtube.com/watch?v=hv1R1rLeVVE"&gt;(DEPRECATED)&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send lists&lt;/td&gt; 
   &lt;td&gt;❌ &lt;a href="https://www.youtube.com/watch?v=hv1R1rLeVVE"&gt;(DEPRECATED)&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive location&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Message replies&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Join groups by invite&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get invite for group&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modify group info (subject, description)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modify group settings (send messages, edit info)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Add group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kick group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Promote/demote group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mention users&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mention groups&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mute/unmute chats&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Block/unblock contacts&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get contact info&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get profile pictures&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Set user status message&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;React to messages&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Create polls&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Channels&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Vote in polls&lt;/td&gt; 
   &lt;td&gt;🔜&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Communities&lt;/td&gt; 
   &lt;td&gt;🔜&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Something missing? Make an issue and let us know!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Feel free to open pull requests; we welcome contributions! However, for significant changes, it's best to open an issue beforehand. Make sure to review our &lt;a href="https://github.com/pedroslopez/whatsapp-web.js/raw/main/CODE_OF_CONDUCT.md"&gt;contribution guidelines&lt;/a&gt; before creating a pull request. Before creating your own issue or pull request, always check to see if one already exists!&lt;/p&gt; 
&lt;h2&gt;Supporting the project&lt;/h2&gt; 
&lt;p&gt;You can support the maintainer of this project through the links below&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sponsors/pedroslopez"&gt;Support via GitHub Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.paypal.me/psla/"&gt;Support via PayPal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://m.do.co/c/73f906a36ed4"&gt;Sign up for DigitalOcean&lt;/a&gt; and get $200 in credit when you sign up (Referral)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates. The official WhatsApp website can be found at &lt;a href="https://whatsapp.com"&gt;whatsapp.com&lt;/a&gt;. "WhatsApp" as well as related names, marks, emblems and images are registered trademarks of their respective owners. Also it is not guaranteed you will not be blocked by using this method. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn't be considered totally safe.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2019 Pedro S Lopez&lt;/p&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");&lt;br /&gt; you may not use this project except in compliance with the License.&lt;br /&gt; You may obtain a copy of the License at &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software&lt;br /&gt; distributed under the License is distributed on an "AS IS" BASIS,&lt;br /&gt; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br /&gt; See the License for the specific language governing permissions and&lt;br /&gt; limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>asgeirtj/system_prompts_leaks</title>
      <link>https://github.com/asgeirtj/system_prompts_leaks</link>
      <description>&lt;p&gt;Collection of extracted System Prompts from popular chatbots like ChatGPT, Claude &amp; Gemini&lt;/p&gt;&lt;hr&gt;&lt;p&gt;NEW: 23 Aug 2025 &lt;a href="https://github.com/asgeirtj/system_prompts_leaks/raw/main/OpenAI/gpt-5-thinking.md"&gt;OpenAI/gpt-5-thinking.md &lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;System Prompts Leaks&lt;/h1&gt; 
&lt;p&gt;Collection of system message instructions for various publicly deployed chatbots.&lt;/p&gt; 
&lt;p&gt;Feel free to do PR's.&lt;/p&gt; 
&lt;p&gt;Please use discussions tabs for discussions not the Issues tab.&lt;/p&gt; 
&lt;p&gt;Discord username: asgeirtj&lt;br /&gt; X profile: &lt;a href="https://x.com/asgeirtj"&gt;https://x.com/asgeirtj&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#asgeirtj/system_prompts_leaks&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=asgeirtj/system_prompts_leaks&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CodeWithHarry/Sigma-Web-Dev-Course</title>
      <link>https://github.com/CodeWithHarry/Sigma-Web-Dev-Course</link>
      <description>&lt;p&gt;Source Code for Sigma Web Development Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Sigma's Web Development Course - Hindi Web Development Tutorials! 🚀&lt;/h1&gt; 
&lt;h2&gt;What's Inside:&lt;/h2&gt; 
&lt;p&gt;If you've been itching to dive into the world of web development but feel lost in a sea of English tutorials, you're in the right place! Our course is exclusively in Hindi and is crafted to guide you from being an absolute beginner to a seasoned pro, one step at a time.&lt;/p&gt; 
&lt;h2&gt;Who Can Benefit?&lt;/h2&gt; 
&lt;h3&gt;This course is a perfect fit for:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Beginners eager to start their web development journey&lt;/li&gt; 
 &lt;li&gt;Intermediate developers looking to refine their skills&lt;/li&gt; 
 &lt;li&gt;Individuals who prefer learning in Hindi&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;What You'll Master:&lt;/h2&gt; 
&lt;h3&gt;During this course, you'll delve into:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;The fundamentals of HTML, CSS, and JavaScript&lt;/li&gt; 
 &lt;li&gt;Both front-end and back-end development&lt;/li&gt; 
 &lt;li&gt;How to seamlessly integrate databases&lt;/li&gt; 
 &lt;li&gt;Real-world project implementation&lt;/li&gt; 
 &lt;li&gt;And a whole lot more!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;The Schedule:&lt;/h2&gt; 
&lt;p&gt;We're committed to your growth. Expect fresh source code additions nearly every day. Keep up the pace with our schedule and watch your skills soar! 📅&lt;/p&gt; 
&lt;p&gt;Get ready to embark on an exciting coding journey! 👨‍💻🌟&lt;/p&gt; 
&lt;p&gt;Ready to start? &lt;a href="https://www.youtube.com/playlist?list=PLu0W_9lII9agq5TrH9XLIKQvv0iaF2X3w"&gt;Click here&lt;/a&gt; to access the complete YouTube playlist.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>meshery/meshery</title>
      <link>https://github.com/meshery/meshery</link>
      <description>&lt;p&gt;Meshery, the cloud native manager&lt;/p&gt;&lt;hr&gt;&lt;p style="text-align:center;" align="center"&gt;&lt;a href="https://meshery.io"&gt;
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg" /&gt; 
   &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg?sanitize=true" alt="Meshery Logo" width="70%" /&gt;
  &lt;/picture&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://hub.docker.com/r/meshery/meshery" alt="Docker pulls"&gt; &lt;img src="https://img.shields.io/docker/pulls/meshery/meshery.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://github.com/issues?q=is%3Aopen%20is%3Aissue%20archived%3Afalse%20(org%3Ameshery%20OR%20org%3Aservice-mesh-performance%20OR%20org%3Aservice-mesh-patterns%20OR%20org%3Ameshery-extensions)%20label%3A%22help%20wanted%22%20" alt="GitHub issues by-label"&gt; &lt;img src="https://img.shields.io/github/issues/meshery/meshery/help%20wanted.svg?color=informational" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meshery/meshery/raw/master/LICENSE" alt="LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/meshery/meshery?color=brightgreen" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/meshery/meshery" alt="Artifact Hub Meshery"&gt; &lt;img src="https://img.shields.io/endpoint?color=brightgreen&amp;amp;label=Helm%20Chart&amp;amp;style=plastic&amp;amp;url=https%3A%2F%2Fartifacthub.io%2Fbadge%2Frepository%2Fartifact-hub" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/meshery/meshery" alt="Go Report Card"&gt; &lt;img src="https://goreportcard.com/badge/github.com/meshery/meshery" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meshery/meshery/actions" alt="Build Status"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/meshery/meshery/release-drafter.yml" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/3564" alt="CLI Best Practices"&gt; &lt;img src="https://bestpractices.coreinfrastructure.org/projects/3564/badge" /&gt;&lt;/a&gt; &lt;a href="https://meshery.io/community#discussion-forums" alt="Discussion Forum"&gt; &lt;img src="https://img.shields.io/discourse/users?label=discuss&amp;amp;logo=discourse&amp;amp;server=https%3A%2F%2Fmeshery.io/community" /&gt;&lt;/a&gt; &lt;a href="https://slack.meshery.io" alt="Join Slack"&gt; &lt;img src="https://img.shields.io/badge/Slack-@meshery.svg?logo=slack" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=mesheryio" alt="Twitter Follow"&gt; &lt;img src="https://img.shields.io/twitter/follow/mesheryio.svg?label=Follow+Meshery&amp;amp;style=social" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meshery/meshery/releases" alt="Meshery Downloads"&gt; &lt;img src="https://img.shields.io/github/downloads/meshery/meshery/total" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/meshery/meshery" alt="OpenSSF Scorecard"&gt; &lt;img src="https://api.scorecard.dev/projects/github.com/meshery/meshery/badge" /&gt;&lt;/a&gt; &lt;a href="https://trendshift.io/repositories/888" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/888" alt="meshery%2Fmeshery | Trendshift" style="width: 150px;" width="150px" /&gt;&lt;/a&gt; 
 &lt;!-- &lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery?ref=badge_shield" alt="License Scan Report"&gt;
  &lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery.svg?type=shield"/&gt;&lt;/a&gt;  
  --&gt; &lt;/p&gt; 
&lt;h5&gt;&lt;p align="center"&gt;&lt;i&gt;If you like Meshery, please &lt;a href="https://github.com/meshery/meshery/stargazers"&gt;★&lt;/a&gt; this repository to show your support! 🤩&lt;/i&gt;&lt;/p&gt;&lt;/h5&gt; 
&lt;p align="center"&gt; MESHERY IS A CLOUD NATIVE COMPUTING FOUNDATION PROJECT &lt;/p&gt; 
&lt;div align="center" width="100%"&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cncf-white.svg#gh-dark-mode-only" width="30%" align="center" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cncf-black.svg#gh-light-mode-only" width="30%" align="center" /&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; A self-service engineering platform, &lt;a href="https://meshery.io"&gt;Meshery&lt;/a&gt;, is the open source, cloud native manager that enables the design and management of all Kubernetes-based infrastructure and applications (multi-cloud). Among other features, As an extensible platform, Meshery offers visual and collaborative GitOps, freeing you from the chains of YAML while managing Kubernetes multi-cluster deployments. &lt;/p&gt; 
&lt;br /&gt; 
&lt;div align="center" width="100%"&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-dashboard-hero-image.png" width="800px" /&gt; 
 &lt;br /&gt;Try Meshery in your browser using the 
 &lt;a href="https://play.meshery.io"&gt;Cloud Native Playground&lt;/a&gt; (
 &lt;a href="https://www.youtube.com/watch?v=034nVaQUyME&amp;amp;list=PL3A-A6hPO2IO_yzN83wSJJUNQActzCJvO&amp;amp;index=9"&gt;teaser video&lt;/a&gt;) 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;!--
- [Functionality](#functionality)
  - [Meshery Architecture](#meshery-architecture)
  - [Join the Meshery community!](#join-the-meshery-community)
  - [Contributing](#contributing)
    - [Stargazers](#stargazers)
    - [License](#license)
--&gt; 
&lt;!-- &lt;p style="clear:both;"&gt;&amp;nbsp;&lt;/p&gt;
&lt;a href="https://meshery.io"&gt;&lt;picture&gt;
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg"&gt;
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg"&gt;
  &lt;img alt="Meshery - the Cloud Native Manager" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg" align="left" width="45%"&gt;
  &lt;/picture&gt;&lt;/a&gt; 
&lt;a href="https://meshery.io"&gt;
&lt;h3 style="margin:auto;"&gt;&lt;br /&gt;&lt;br /&gt;
  &lt;a href="https://docs.google.com/presentation/d/14kxjwYSJ_FyE3K_6CDEd6oq2kqwn0OSE8RDJ4H-KlKU/edit?usp=sharing"&gt;&lt;center&gt;&lt;i&gt;Project Overview Presentation&lt;/i&gt;&lt;/center&gt;&lt;/a&gt;
  &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;/h3&gt; --&gt; 
&lt;p style="clear:both;"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;Functionality&lt;/h1&gt; 
&lt;h2&gt;Infrastructure Lifecycle Management&lt;/h2&gt; 
&lt;p&gt;Meshery manages the configuration, deployment, and operation of your Cloud services and Kubernetes clusters while supporting hundreds of different types of cloud native infrastructure integrations. Meshery supports &lt;a href="https://raw.githubusercontent.com/meshery/meshery/master/https//meshery.io/integrations"&gt;300+ integrations&lt;/a&gt;.&lt;/p&gt; 
&lt;!--
&lt;a href="https://www.youtube.com/watch?v=034nVaQUyME"&gt;&lt;img alt="Meshery cloud native management" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshmap.gif"  style="margin-left:10px; margin-bottom:10px;" width="100%" align="center" /&gt;&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;--&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cloud-native-integrations.png"&gt;&lt;img alt="Meshery Integrations" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cloud-native-integrations.png" style="margin-right:10px;margin-bottom:10px;" width="100%" align="center" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Find infrastructure configuration patterns in Meshery's &lt;a href="https://meshery.io/catalog"&gt;catalog of curated design templates&lt;/a&gt; filled with configuration best practices.&lt;/p&gt; 
&lt;h2&gt;Multiple Kubernetes Clusters and Multiple Clouds&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://meshery.io/assets/images/screens/multi-cluster-management.gif" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" align="center" /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;Meshery provides a single pane of glass to manage multiple Kubernetes clusters across any infrastructure, including various cloud providers. Meshery enables consistent configuration, operation, and observability across your entire Kubernetes landscape.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;Dry-run your deployments&lt;/h4&gt;&lt;/summary&gt; Meshery leverages Kubernetes' built-in dry-run capabilities to allow you to simulate deployments without actually applying the changes to your cluster. This enables you to: 
 &lt;ul&gt; 
  &lt;li&gt;Validate configurations: Ensure your deployment specifications (e.g., YAML manifests, Helm charts, Meshery Designs) are syntactically correct and will be accepted by the Kubernetes API server. &amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Identify potential issues: Detect errors in your configurations, such as invalid resource definitions, missing fields, or API version mismatches, before they impact your live environment.&lt;/li&gt; 
  &lt;li&gt;Preview changes: Understand the objects that Kubernetes would create or modify during a real deployment.&lt;/li&gt; 
  &lt;li&gt;Integrate with CI/CD: Incorporate dry-run as a step in your continuous integration and continuous delivery pipelines to automate pre-deployment checks and prevent faulty deployments.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;By providing this dry-run functionality, Meshery helps you increase the reliability and stability of your Kubernetes deployments by catching potential problems early in the development and deployment process.&lt;/p&gt; 
 &lt;!-- 
Assess your cloud native infrastructure configuration against deployment and operational best practices with Meshery's configuration validator. Manage your workloads with confidence. Check your Kubernetes configuration for anti-patterns and avoid common pitfalls. --&gt; 
&lt;/details&gt; 
&lt;h3&gt;Visually and collaboratively manage your infrastructure&lt;/h3&gt; 
&lt;p&gt;Using a GitOps-centric approach, visually and collaboratively design and manage your infrastructure and microservices. Meshery intelligently infers the manner in which each resource &lt;a href="https://docs.meshery.io/concepts/logical/relationships"&gt;interrelates&lt;/a&gt; with each other. Meshery supports a broad variety of built-in relationships between components, which you can use to create your own custom relationships.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/edge_mount_relationship_pod_persistent_volume.svg?sanitize=true" width="50%" alt="Multi-cluster Kubernetes Manager" align="center" /&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;img alt="OPA Logo" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/opa-logo.svg?sanitize=true" style="margin-right:10px;" width="25px" align="left" /&gt;&lt;h4&gt;Context-Aware Policies For Applications&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img alt="Meshery and Open Policy Agent Integration" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-policies-2.png" style="margin:auto;text-align:center" width="50%" /&gt; 
 &lt;p&gt;Leverage built-in relationships to enforce configuration best practices consistently from code to Kubernetes. Customize Configure your infrastructure with confidence without needing to know or write Open Policy Agent's Rego query language.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Workspaces: Your team's Google Drive for cloud native projects&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/workspace.gif" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" /&gt; 
&lt;p&gt;Workspaces let you organize your work and serve as the central point of collaboration for you and your teams and point of access control to Environments and their resources.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;Manage your connections with Environments&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/environments.gif" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" /&gt; 
 &lt;p&gt;&lt;a href="https://docs.meshery.io/concepts/logical/environments"&gt;Environments&lt;/a&gt; make it easier for you to manage, share, and work with a collection of resources as a group, instead of dealing with all your Connections and Credentials on an individual basis.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;See changes to your infra before you merge&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-snapshot.png" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" align="center" /&gt; 
 &lt;p&gt;Get snapshots of your infrastructure directly in your PRs. Preview your deployment, view changes pull request-to-pull request and get infrastructure snapshots within your PRs by connecting Kanvas to your GitHub repositories.&lt;/p&gt; 
&lt;/details&gt; 
&lt;!-- &lt;h3&gt;Operate with configuration best practices&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Assess your configurations against deployment and operational best practices with Meshery's configuration validator.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;h3&gt;Control all of your infrastructure with mesheryctl&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Whether managing multiple Meshery deployments, importing designs, discoverying Kubernetes clusters, do so with ease using Meshery CLI in your terminal.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt; --&gt; 
&lt;h2&gt;Platform Engineering with Meshery's Extension Points&lt;/h2&gt; 
&lt;p&gt;Extend Meshery as your self-service engineering platform by taking advantage of its &lt;a href="https://docs.meshery.io/extensibility"&gt;vast set of extensibility features&lt;/a&gt;, including gRPC adapters, hot-loadable Reactjs packages and Golang plugins, subscriptions on NATS topics, consumable &lt;em&gt;and&lt;/em&gt; extendable API interfaces via REST and GraphQL.The great number of extension points in Meshery make it ideal as the foundation of your internal developer platform.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;Access the Cloud Native Patterns for Kubernetes&lt;/h4&gt;&lt;/summary&gt; 
 &lt;p&gt;Design and manage all of your cloud native infrastructure using the design configurator in Meshery or start from a template using the patterns from the &lt;a href="https://meshery.io/catalog"&gt;catalog&lt;/a&gt;. &lt;/p&gt;
&lt;/details&gt; 
&lt;p&gt;Meshery offers robust capabilities for managing multiple tenants within a shared Kubernetes infrastructure. Meshery provides the tools and integrations necessary to create a secure, isolated, and manageable multi-tenant environments, allowing multiple teams or organizations with granular control over their role-based access controls.&lt;/p&gt; 
&lt;p&gt;Meshery's "multi-player" functionality refers to its collaborative features that enable multiple users to interact with and manage cloud native infrastructure simultaneously. This is primarily facilitated through Kanvas, a Meshery extension visual designer and management interface.&lt;/p&gt; 
&lt;h2&gt;Performance Management&lt;/h2&gt; 
&lt;p&gt;Meshery offers load generation and performance characterization to help you assess and optimize the performance of your applications and infrastructure.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/performance-metrics.gif" alt="Multi-cluster Kubernetes Manager" width="50%" /&gt; 
&lt;p&gt;Create and reuse performance profiles for consistent characterization of the configuration of your infrastructure in context of how it performs.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h4&gt; Manage the performance of your infrastructure and its workloads&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-performance.gif" /&gt; 
 &lt;p&gt;Baseline and track your cloud native performance from release to release.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use performance profiles to track the historical performance of your workloads.&lt;/li&gt; 
  &lt;li&gt;Track your application performance from version to version.&lt;/li&gt; 
  &lt;li&gt;Understand behavioral differences between cloud native network functions.&lt;/li&gt; 
  &lt;li&gt;Compare performance across infrastructure deployments.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h4&gt;Load Generation and Microservice Performance Characteristization&lt;/h4&gt;&lt;/summary&gt; 
 &lt;picture align="left"&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg" width="18%" align="left" style="margin-left:10px;" /&gt; 
  &lt;img alt="Shows an illustrated light mode meshery logo in light color mode and a dark mode meshery logo dark color mode." src="https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg?sanitize=true" width="18%" align="left" style="margin-left:10px;" /&gt; 
 &lt;/picture&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Multiple Load Generators:&lt;/strong&gt; Meshery supports various load generators, including Fortio, Wrk2, and Nighthawk, allowing users to choose the tool that best suits your needs.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Configurable Performance Profiles:&lt;/strong&gt; Meshery provides a highly configurable set of load profiles with tunable facets, enabling users to generate TCP, gRPC, and HTTP load. You can customize parameters such as duration, concurrent threads, concurrent generators, and load generator type.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Statistical Analysis:&lt;/strong&gt; Meshery performs statistical analysis on the results of performance tests, presenting data in the form of histograms with latency buckets. Understand the distribution of response times and identify potential bottlenecks.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Comparison of Test Results:&lt;/strong&gt; Meshery enables you to compare the difference in request performance (latency and throughput) between independent performance tests. Save your load test configurations as Performance Profiles, making it easy to rerun tests with the same settings and track performance variations over time.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Kubernetes Cluster and Workload Metrics:&lt;/strong&gt; - Meshery connects to one or more Prometheus servers to gather both cluster and application metrics. Meshery also integrates with Grafana, allowing you to import your existing dashboards and visualize performance data.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;In an effort to produce infrastructure agnostic tooling, Meshery uses the &lt;a href="https://smp-spec.io"&gt;Cloud Native Performance&lt;/a&gt; specification as a common format to capture and measure your infrastructure's performance against a universal cloud native performance index. Meshery participates in advancing cloud native infrastructure adoption through the standardization of APIs. Meshery enables you to measure the value provided by Docker, Kubernetes, or other cloud native infrastructure in the context of the overhead incurred.&lt;/p&gt; 
 &lt;!-- 

SCREENSHOT / GIF NEEDED HERE

--&gt; 
&lt;/details&gt; 
&lt;h2&gt;&lt;a name="running"&gt;&lt;/a&gt;Get Started with Meshery&lt;/h2&gt; 
&lt;p style="clear:both;"&gt;&lt;/p&gt; 
&lt;!-- &lt;img alt="Control Kubernetes and your workloads with mesheryctl" src=".github/assets/images/readme/mesheryctl.png"  style="margin-left:10px; margin-bottom:10px;" width="50%" align="right" /&gt; --&gt; 
&lt;h3&gt;Using `mesheryctl`&lt;/h3&gt; 
&lt;p&gt;Meshery runs as a set of containers inside or outside of your Kubernetes clusters.&lt;/p&gt; 
&lt;pre&gt;curl -L https://meshery.io/install | bash -&lt;/pre&gt; 
&lt;p&gt;Use the &lt;a href="https://docs.meshery.io/installation/quick-start"&gt;quick start&lt;/a&gt; guide.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;See all supported platforms&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;See the &lt;a href="https://meshery.io/#getting-started"&gt;getting started&lt;/a&gt; section to quickly deploy Meshery on any of these supported platforms:&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Platform&lt;/th&gt; 
    &lt;th align="center"&gt;Supported?&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/docker"&gt;Docker&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/docker"&gt;Docker - Docker App&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/docker/docker-extensiongit"&gt;Docker - Docker Extension&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/kubernetes.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes"&gt;Kubernetes&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/aks.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/aks"&gt;Kubernetes - AKS&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Kubernetes - Docker Desktop&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/eks.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/eks"&gt;Kubernetes - EKS&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/gke.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/gke"&gt;Kubernetes - GKE&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/helm.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/helm"&gt;Kubernetes - Helm&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/kind.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/kind"&gt;Kubernetes - kind&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/minikube.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/minikube"&gt;Kubernetes - Minikube&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/openshift.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes"&gt;Kubernetes - OpenShift&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/kubernetes.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes"&gt;Kubernetes - Rancher&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/linux.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Linux&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/apple.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Mac&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/homebrew.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Mac - Homebrew&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/wsl2.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#windows"&gt;Windows&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/wsl2.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#windows"&gt;Scoop&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/wsl2.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/platforms/windows#wsl2"&gt;WSL2&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/raspberry-pi.png" width="20" height="20" vertical-align="middle" /&gt; Raspberry Pi&lt;/td&gt; 
    &lt;td align="center"&gt;In Progress&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;&lt;a href="https://docs.meshery.io/installation"&gt;Meshery documentation&lt;/a&gt; offers thorough installation guides for your platform of choice.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p style="clear:both;"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;h2&gt;Join the Meshery community&lt;/h2&gt; 
&lt;p&gt;&lt;a name="contributing"&gt;&lt;/a&gt;&lt;a name="community"&gt;&lt;/a&gt; Our projects are community-built and welcome collaboration. 👍 Be sure to see the &lt;a href="https://meshery.io/community"&gt;Contributor Journey Map&lt;/a&gt; and &lt;a href="https://meshery.io/community#handbook"&gt;Community Handbook&lt;/a&gt; for a tour of resources available to you and the &lt;a href="https://meshery.io/community/#handbook/repository-overview"&gt;Repository Overview&lt;/a&gt; for a cursory description of repository by technology and programming language. Jump into community &lt;a href="https://slack.meshery.io"&gt;Slack&lt;/a&gt; or &lt;a href="https://meshery.io/community#discussion-forums"&gt;discussion forum&lt;/a&gt; to participate.&lt;/p&gt; 
&lt;p style="clear:both;"&gt; &lt;/p&gt;
&lt;h3&gt;Find your MeshMate&lt;/h3&gt; 
&lt;p&gt;MeshMates are experienced Meshery community members, who will help you learn your way around, discover live projects, and expand your community network. Connect with a MeshMate today!&lt;/p&gt; 
&lt;p&gt;Learn more about the &lt;a href="https://meshery.io/community#meshmates"&gt;MeshMates&lt;/a&gt; program. &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;div style="display: flex; justify-content: center; align-items:center;"&gt; 
 &lt;div&gt; 
  &lt;a href="https://meshery.io/community"&gt;&lt;img alt="Meshery Community" src="https://docs.meshery.io/assets/img/readme/community.png" width="140px" style="margin-right:36px; margin-bottom:7px;" align="left" /&gt;&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;div style="width:60%; padding-left: 16px; padding-right: 16px"&gt; 
  &lt;p&gt; ✔️ &lt;em&gt;&lt;strong&gt;Join&lt;/strong&gt;&lt;/em&gt; any or all of the weekly meetings on &lt;a href="https://meshery.io/calendar"&gt;community calendar&lt;/a&gt;.&lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Watch&lt;/strong&gt;&lt;/em&gt; community &lt;a href="https://www.youtube.com/@mesheryio?sub_confirmation=1"&gt;meeting recordings&lt;/a&gt;.&lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Fill-in&lt;/strong&gt;&lt;/em&gt; a &lt;a href="https://meshery.io/newcomers"&gt;member form&lt;/a&gt; and gain access to community resources. &lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Discuss&lt;/strong&gt;&lt;/em&gt; in the &lt;a href="https://meshery.io/community#discussion-forums"&gt;community forum&lt;/a&gt;.&lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Explore more&lt;/strong&gt;&lt;/em&gt; in the &lt;a href="https://meshery.io/community#handbook"&gt;community handbook&lt;/a&gt;.&lt;br /&gt; &lt;/p&gt; 
 &lt;/div&gt;
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;div&gt; 
  &lt;a href="https://slack.meshery.io"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/slack.svg" width="110px" /&gt; 
    &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/slack.svg" width="110px" /&gt; 
    &lt;img alt="Shows an illustrated light mode meshery logo in light color mode and a dark mode meshery logo dark color mode." src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/slack.svg?sanitize=true" width="110px" align="left" /&gt; 
   &lt;/picture&gt; &lt;/a&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;p align="left"&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;Not sure where to start?&lt;/i&gt; Grab an open issue with the &lt;a href="https://github.com/issues?q=is%3Aopen%20is%3Aissue%20archived%3Afalse%20(org%3Ameshery%20OR%20org%3Aservice-mesh-performance%20OR%20org%3Aservice-mesh-patterns%20OR%20org%3Ameshery-extensions)%20label%3A%22help%20wanted%22%20"&gt;help-wanted label&lt;/a&gt;. &lt;/p&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please do! We're a warm and welcoming community of open source contributors. Please join. All types of contributions are welcome. Be sure to read the &lt;a href="https://docs.meshery.io/project/contributing"&gt;Contributor Guides&lt;/a&gt; for a tour of resources available to you and how to get started.&lt;/p&gt; 
&lt;!-- &lt;a href="https://youtu.be/MXQV-i-Hkf8"&gt;&lt;img alt="Deploying Linkerd with Meshery" src="https://docs.meshery.io/assets/img/readme/deploying-linkerd-with-meshery.png" width="100%" align="center" /&gt;&lt;/a&gt; --&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;h3&gt;Stargazers&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;i&gt;If you like Meshery, please &lt;a href="https://raw.githubusercontent.com/meshery/stargazers"&gt;★&lt;/a&gt; star this repository to show your support! 🤩&lt;/i&gt; &lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/meshery/stargazers"&gt; &lt;img align="center" src="https://api.star-history.com/svg?repos=meshery/meshery&amp;amp;type=Date" /&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;This repository and site are available as open-source under the terms of the &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Software Bill of Materials (SBOM)&lt;/h4&gt; 
&lt;p&gt;Meshery's &lt;a href="https://github.com/meshery/meshery/actions/workflows/bom.yaml"&gt;Software Bill of Materials&lt;/a&gt; (SBOM) is available as a build artifact.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>met4citizen/TalkingHead</title>
      <link>https://github.com/met4citizen/TalkingHead</link>
      <description>&lt;p&gt;Talking Head (3D): A JavaScript class for real-time lip-sync using Ready Player Me full-body 3D avatars.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Talking Head (3D)&lt;/h1&gt; 
&lt;h3&gt;Demo Videos&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;All the demo videos are real-time screen captures from a Chrome browser running the TalkingHead test web app without any post-processing.&lt;/em&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Video&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;span style="display: block; min-width:400px"&gt;&lt;a href="https://youtu.be/YUbDIWkskuw"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/dynamicbones.jpg" width="400" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://youtu.be/4Y9NFnENH5s"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/dynamicbones2.jpg" width="400" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Having a good hair day! – A two-part introduction to the TalkingHead's dynamic bones feature 🦴🦴 and built-in physics engine. Using custom models with rigged hair and two different hairstyles. See Appendix E for more details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://youtu.be/OA6LBZjkzJI"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/screenshot4.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;I chat with Jenny and Harri. The close-up view allows you to evaluate the accuracy of lip-sync in both English and Finnish. Using GPT-3.5 and Microsoft text-to-speech.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://youtu.be/fJrYGaGCAGo"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/screenshot5.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A short demo of how AI can control the avatar's movements. Using OpenAI's function calling and Google TTS with the TalkingHead's built-in viseme generation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://youtu.be/6XRxALY1Iwg"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/screenshot6.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Michael lip-syncs to two MP3 audio tracks using OpenAI's Whisper and TalkingHead's &lt;code&gt;speakAudio&lt;/code&gt; method. He kicks things off with some casual talk, but then goes all out by trying to tackle an old Meat Loaf classic. 🤘 Keep rockin', Michael! 🎤😂&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://youtu.be/SfnqRnWKT40"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/screenshot3.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Julia and I showcase some of the features of the TalkingHead class and the test app including the settings, some poses and animations.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Use Case Examples&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Some videos, apps, and projects using the TalkingHead class:&lt;/em&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Video/App&lt;/th&gt; 
   &lt;th&gt;Use Case&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;span style="display: block; min-width:400px"&gt;&lt;a href="https://youtu.be/9GeXwjuslnQ"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/olivia.jpg" width="400" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Video conferencing&lt;/strong&gt;. A video conferencing solution with real-time transcription, contextual AI responses, and voice lip-sync. The app and demo, featuring Olivia, by &lt;a href="https://github.com/namnm"&gt;namnm&lt;/a&gt; 👍&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.edgespeaker.com/"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/edgespeaker.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Fully in-browser AI you can talk to&lt;/strong&gt;. Uses TalkingHead, &lt;a href="https://github.com/met4citizen/HeadTTS"&gt;HeadTTS (with Kokoro)&lt;/a&gt;, &lt;a href="https://github.com/xenova/whisper-web"&gt;whisper-web&lt;/a&gt;, and &lt;a href="https://github.com/mlc-ai/web-llm"&gt;WebLLM (with Llama 3.2)&lt;/a&gt;. No APIs, no accounts. For more details, see &lt;a href="https://github.com/met4citizen/TalkingHead/issues/115"&gt;#115&lt;/a&gt;. — For best performance and WebGPU support, use a desktop version of Chrome or Edge: 👉 &lt;a href="https://www.edgespeaker.com/"&gt;EdgeSpeaker.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=Dl2o9kRvbLQ"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/geminicompetition.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Recycling Advisor 3D&lt;/strong&gt;. Snap a photo and get local recycling advice from a talking avatar. My entry for the &lt;a href="https://ai.google.dev/competition/projects/recycling-advisor-3d"&gt;Gemini API Developer Competition&lt;/a&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=OG1vwOit_Yk"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/evertrail.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Live Twitch adventure&lt;/strong&gt;. &lt;a href="https://evertrail.app"&gt;Evertrail&lt;/a&gt; is an infinite, real-time generated world where all of your choices shape the outcome. Video clip and the app by &lt;a href="https://github.com/JPhilipp"&gt;JPhilipp&lt;/a&gt; 👏👏&lt;br /&gt;&lt;strong&gt;NEWS&lt;/strong&gt;: Featured at the AI Film Awards during the 2025 Cannes Film Festival!&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=vNJ9Ifv-as8"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/cliquevm.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Quantum physics using a blackboard&lt;/strong&gt;. David introduces us to the CHSH game and explores the mystery of quantum entanglement. For more information about the research project, see &lt;a href="https://github.com/met4citizen/CliqueVM"&gt;CliqueVM&lt;/a&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://akshatrastogi.in/"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/interactiveportfolio.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Interactive Portfolio&lt;/strong&gt;. Click the image to open the app, where you can interview the virtual persona of its developer, &lt;a href="https://github.com/AkshatRastogi-1nC0re"&gt;AkshatRastogi-1nC0re&lt;/a&gt; 👋&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=Hv-ItCZ0qc4"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/datingprofile.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Interactive Dating Profiles&lt;/strong&gt;. ❤️ Researchers from the MIT Media Lab and Harvard used the TalkingHead class and data-driven AI to create digital twins that potential dating partners could interact with. Their paper (Baradari et al., 2025) was presented at &lt;a href="https://programs.sigchi.org/chi/2025/program/content/194739"&gt;CHI 2025&lt;/a&gt; in Japan.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Introduction&lt;/h3&gt; 
&lt;p&gt;Talking Head (3D) is a browser JavaScript class featuring a 3D avatar that can speak and lip-sync in real-time. The class supports &lt;a href="https://readyplayer.me/"&gt;Ready Player Me&lt;/a&gt; / &lt;a href="https://playerzero.me/"&gt;PlayerZero&lt;/a&gt; full-body 3D avatars (GLB) and &lt;a href="https://www.mixamo.com"&gt;Mixamo&lt;/a&gt; animations (FBX). It also knows a set of emojis and can convert them into facial expressions.&lt;/p&gt; 
&lt;p&gt;You can create your own 3D avatar for free using the Ready Player Me or PlayerZero service. Alternatively, you can create a custom 3D avatar by making it compatible with RPM models. See Appendix A for more details.&lt;/p&gt; 
&lt;p&gt;By default, the class uses &lt;a href="https://cloud.google.com/text-to-speech"&gt;Google Cloud TTS&lt;/a&gt; for text-to-speech and has a built-in lip-sync support for English, Finnish, and Lithuanian (beta). New lip-sync languages can be added by creating new lip-sync language modules.&lt;/p&gt; 
&lt;p&gt;It is also possible to integrate the TalkingHead class with any external TTS service that can provide word-level timestamps, such as the &lt;a href="https://elevenlabs.io"&gt;ElevenLabs WebSocket API&lt;/a&gt;. Note that a lip-sync language module is not required if your TTS engine can output viseme IDs or blend shape data directly. For example, by using the &lt;a href="https://github.com/microsoft/cognitive-services-speech-sdk-js"&gt;Microsoft Azure Speech SDK&lt;/a&gt;, you can extend TalkingHead's lip-sync support to 100+ languages.&lt;/p&gt; 
&lt;p&gt;The class uses &lt;a href="https://github.com/mrdoob/three.js/"&gt;ThreeJS&lt;/a&gt; / WebGL for 3D rendering.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you're looking for a free English TTS that can output timestamps and viseme IDs, check out &lt;a href="https://github.com/met4citizen/HeadTTS"&gt;HeadTTS&lt;/a&gt;. It offers Kokoro neural voices, phoneme-level timestamps, and can run locally or even entirely in a browser using WebGPU. And best of all, it's fully compatible with the TalkingHead class.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Talking Head class&lt;/h3&gt; 
&lt;p&gt;You can download the TalkingHead modules from &lt;a href="https://github.com/met4citizen/TalkingHead/releases"&gt;releases&lt;/a&gt; (without dependencies). Alternatively, you can install them from &lt;a href="https://www.npmjs.com/package/@met4citizen/talkinghead"&gt;NPM&lt;/a&gt;, or import all the needed modules from a CDN:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;&amp;lt;script type="importmap"&amp;gt;
{ "imports":
  {
    "three": "https://cdn.jsdelivr.net/npm/three@0.170.0/build/three.module.js/+esm",
    "three/addons/": "https://cdn.jsdelivr.net/npm/three@0.170.0/examples/jsm/",
    "talkinghead": "https://cdn.jsdelivr.net/gh/met4citizen/TalkingHead@1.5/modules/talkinghead.mjs"
  }
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] &lt;strong&gt;FOR HOBBYISTS:&lt;/strong&gt; If you're just looking to experiment on your personal laptop without dealing with proxies, JSON Web Tokens, or Single Sign-On, take a look at the &lt;a href="https://github.com/met4citizen/TalkingHead/raw/main/examples/minimal.html"&gt;minimal code example&lt;/a&gt;. Simply download the file, add your Google TTS API key, and you'll have a basic web app template with a talking head.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to use the built-in Google TTS and lip-sync using Single Sign-On (SSO) functionality, give the class your TTS proxy endpoint and a function from which to obtain the JSON Web Token needed to use that proxy. Refer to Appendix B for one way to implement JWT SSO.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import { TalkingHead } from "talkinghead";

// Create the talking head avatar
const nodeAvatar = document.getElementById('avatar');
const head = new TalkingHead( nodeAvatar, {
  ttsEndpoint: "/gtts/",
  jwtGet: jwtGet,
  lipsyncModules: ["en", "fi"],
  mixerGainSpeech: 3
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;CLICK HERE to see all the available OPTIONS.&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Option&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
    &lt;th&gt;Default&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;jwsGet&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Function to get the JSON Web Token (JWT). See Appendix B for more information.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsEndpoint&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Text-to-speech backend/endpoint/proxy implementing the Google Text-to-Speech API.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsApikey&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If you don't want to use a proxy or JWT, you can use Google TTS endpoint directly and provide your API key here. &lt;strong&gt;NOTE: I recommend that you don't use this in production and never put your API key in any client-side code.&lt;/strong&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsLang&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Google text-to-speech language.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"fi-FI"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsVoice&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Google text-to-speech voice. The used voice must support SSML and &amp;lt;mark&amp;gt; tags that are needed to get word-level timestamps. Currently, Google supports SSML and &amp;lt;mark&amp;gt; tags when using Standard, Wavenet, Neural2, News, or Casual voice types.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"fi-FI-Standard-A"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsRate&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Google text-to-speech rate in the range [0.25, 4.0].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;1.0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsPitch&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Google text-to-speech pitch in the range [-20.0, 20.0].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsVolume&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Google text-to-speech volume gain (in dB) in the range [-96.0, 16.0].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsTrimStart&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Trim the viseme sequence start relative to the beginning of the audio (shift in milliseconds).&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsTrimEnd&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Trim the viseme sequence end relative to the end of the audio (shift in milliseconds).&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;400&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;mixerGainSpeech&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The amount of gain for speech. See Web Audio API / GainNode for more information.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;mixerGainBackground&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The amount of gain for background audio. See Web Audio API / GainNode for more information.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lipsyncModules&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Lip-sync modules to load dynamically at start-up. Limiting the number of language modules improves the loading time and memory usage.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;["en", "fi", "lt"]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lipsyncLang&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Lip-sync language.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"fi"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;pcmSampleRate&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;PCM (signed 16bit little endian) sample rate used in &lt;code&gt;speakAudio&lt;/code&gt; in Hz.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;22050&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;modelRoot&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The root name of the armature.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;Armature&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;modelPixelRatio&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Sets the device's pixel ratio.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;modelFPS&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Frames per second. Note that actual frame rate will be a bit lower than the set value.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;30&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;modelMovementFactor&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;A factor in the range [0,1] limiting the avatar's upper body movement when standing.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;dracoEnabled&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If &lt;code&gt;true&lt;/code&gt;, use Draco geometry compression. [≥&lt;code&gt;v1.5&lt;/code&gt;]&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;dracoDecoderPath&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Draco decoder library path. [≥&lt;code&gt;v1.5&lt;/code&gt;]&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"https://www.gstatic.com/&lt;/code&gt;&lt;br /&gt;&lt;code&gt;draco/v1/decoders/"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraView&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Initial view. Supported views are &lt;code&gt;"full"&lt;/code&gt;, &lt;code&gt;"mid"&lt;/code&gt;, &lt;code&gt;"upper"&lt;/code&gt; and &lt;code&gt;"head"&lt;/code&gt;.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"full"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraDistance&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Camera distance offset for initial view in meters.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraX&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Camera position offset in X direction in meters.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraY&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Camera position offset in Y direction in meters.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraRotateX&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Camera rotation offset in X direction in radians.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraRotateY&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Camera rotation offset in Y direction in radians.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraRotateEnable&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If true, the user is allowed to rotate the 3D model.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraPanEnable&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If true, the user is allowed to pan the 3D model.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraZoomEnable&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If true, the user is allowed to zoom the 3D model.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightAmbientColor&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Ambient light color. The value can be a hexadecimal color or CSS-style string.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0xffffff&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightAmbientIntensity&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Ambient light intensity.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightDirectColor&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Direction light color. The value can be a hexadecimal color or CSS-style string.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0x8888aa&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightDirectIntensity&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Direction light intensity.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;30&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightDirectPhi&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Direction light phi angle.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.1&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightDirectTheta&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Direction light theta angle.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightSpotColor&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Spot light color. The value can be a hexadecimal color or CSS-style string.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0x3388ff&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightSpotIntensity&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Spot light intensity.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightSpotPhi&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Spot light phi angle.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.1&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightSpotTheta&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Spot light theta angle.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;4&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightSpotDispersion&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Spot light dispersion.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarMood&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The mood of the avatar. Supported moods: &lt;code&gt;"neutral"&lt;/code&gt;, &lt;code&gt;"happy"&lt;/code&gt;, &lt;code&gt;"angry"&lt;/code&gt;, &lt;code&gt;"sad"&lt;/code&gt;, &lt;code&gt;"fear"&lt;/code&gt;, &lt;code&gt;"disgust"&lt;/code&gt;, &lt;code&gt;"love"&lt;/code&gt;, &lt;code&gt;"sleep"&lt;/code&gt;.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"neutral"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarMute&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Mute the avatar. This can be helpful option if you want to output subtitles without audio and lip-sync.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarIdle&lt;/code&gt;&lt;br /&gt;&lt;code&gt;EyeContact&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The average proportion of eye contact while idle in the range [0,1].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.2&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarIdle&lt;/code&gt;&lt;br /&gt;&lt;code&gt;HeadMove&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The average proportion of head movement while idle in the range [0,1].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.5&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarSpeaking&lt;/code&gt;&lt;br /&gt;&lt;code&gt;EyeContact&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The average proportion of eye contact while speaking in the range [0,1].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.5&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarSpeaking&lt;/code&gt;&lt;br /&gt;&lt;code&gt;HeadMove&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The average proportion of head movement while speaking in the range [0,1].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.5&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarIgnoreCamera&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, makes the avatar to ignore the camera and speak to whatever it is facing.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;listeningSilence&lt;/code&gt;&lt;br /&gt;&lt;code&gt;ThresholdLevel&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Silence detection threshold in the range of [0,100]. If the volume stays below the level for the set duration, a &lt;code&gt;"stop"&lt;/code&gt; event is triggered.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;40&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;listeningSilence&lt;/code&gt;&lt;br /&gt;&lt;code&gt;ThresholdMs&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Silence detection duration in milliseconds. If the volume stays below the level for the set duration, a &lt;code&gt;"stop"&lt;/code&gt; event is triggered.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;2000&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;listeningSilence&lt;/code&gt;&lt;br /&gt;&lt;code&gt;DurationMax&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Maximum silence in milliseconds before &lt;code&gt;"maxsilence"&lt;/code&gt; event is triggered.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;10000&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;listeningActive&lt;/code&gt;&lt;br /&gt;&lt;code&gt;ThresholdLevel&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Activity detection threshold in the range of [0,100]. If the volume stays above the set level for the set duration, a &lt;code&gt;"start"&lt;/code&gt; event is triggered.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;90&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;listeningActive&lt;/code&gt;&lt;br /&gt;&lt;code&gt;ThresholdMs&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Activity detection duration in milliseconds. If the volume stays above the set level for the set duration, a &lt;code&gt;"start"&lt;/code&gt; event is triggered.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;400&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;listeningActive&lt;/code&gt;&lt;br /&gt;&lt;code&gt;DurationMax&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Maximum activity in milliseconds before &lt;code&gt;"maxactive"&lt;/code&gt; event is triggered.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;240000&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarOnly&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If &lt;code&gt;true&lt;/code&gt;, creates an avatar armature object instead of a standalone instance with a 3D scene, lights, and renderer. Read Appendix H for more details about the &lt;code&gt;avatarOnly&lt;/code&gt; mode. (EXPERIMENTAL)&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarOnlyCamera&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;In &lt;code&gt;avatarOnly&lt;/code&gt; mode, sets the camera to which the avatar is linked.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarOnlyScene&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If set in &lt;code&gt;avatarOnly&lt;/code&gt; mode, the armature object is automatically added to the specified scene.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;update&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Custom callback function inside the &lt;code&gt;requestAnimationFrame&lt;/code&gt; animation loop. Enables the app to do custom processing before rendering the 3D scene. If &lt;code&gt;null&lt;/code&gt;, disabled.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;statsNode&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Parent DOM element for the three.js stats display. If &lt;code&gt;null&lt;/code&gt;, don't use.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;statsStyle&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;CSS style for the stats element. If &lt;code&gt;null&lt;/code&gt;, use the three.js default style.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;p&gt;Once the instance has been created, you can load and display your avatar. Refer to Appendix A for how to make your avatar:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Load and show the avatar
try {
  await head.showAvatar( {
    url: './avatars/brunette.glb',
    body: 'F',
    avatarMood: 'neutral',
    ttsLang: "en-GB",
    ttsVoice: "en-GB-Standard-A",
    lipsyncLang: 'en'
  });
} catch (error) {
  console.log(error);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An example of how to make the avatar speak the text on input &lt;code&gt;text&lt;/code&gt; when the button &lt;code&gt;speak&lt;/code&gt; is clicked:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Speak 'text' when the button 'speak' is clicked
const nodeSpeak = document.getElementById('speak');
nodeSpeak.addEventListener('click', function () {
  try {
    const text = document.getElementById('text').value;
    if ( text ) {
      head.speakText( text );
    }
  } catch (error) {
    console.log(error);
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;CLICK HERE to see the key METHODS.&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Method&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;showAvatar(avatar, [onprogress=null])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Load and show the specified avatar. The &lt;code&gt;avatar&lt;/code&gt; object must include the &lt;code&gt;url&lt;/code&gt; for GLB file. Optional properties are &lt;code&gt;body&lt;/code&gt; for either male &lt;code&gt;M&lt;/code&gt; or female &lt;code&gt;F&lt;/code&gt; body form, &lt;code&gt;lipsyncLang&lt;/code&gt;, &lt;code&gt;lipsyncHeadMovement&lt;/code&gt;, &lt;code&gt;baseline&lt;/code&gt; object for blend shape baseline, &lt;code&gt;modelDynamicBones&lt;/code&gt; for dynamic bones (see Appendix E), &lt;code&gt;ttsLang&lt;/code&gt;, &lt;code&gt;ttsVoice&lt;/code&gt;, &lt;code&gt;ttsRate&lt;/code&gt;, &lt;code&gt;ttsPitch&lt;/code&gt;, &lt;code&gt;ttsVolume&lt;/code&gt;, &lt;code&gt;avatarMood&lt;/code&gt;, &lt;code&gt;avatarMute&lt;/code&gt;, &lt;code&gt;avatarIdleEyeContact&lt;/code&gt;, &lt;code&gt;avatarSpeakingEyeContact&lt;/code&gt;, &lt;code&gt;avatarListeningEyeContact&lt;/code&gt;, and &lt;code&gt;avatarIgnoreCamera&lt;/code&gt;.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;setView(view, [opt])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Set view. Supported views are &lt;code&gt;"full"&lt;/code&gt;, &lt;code&gt;"mid"&lt;/code&gt;, &lt;code&gt;"upper"&lt;/code&gt; and &lt;code&gt;"head"&lt;/code&gt;. The &lt;code&gt;opt&lt;/code&gt; object can be used to set &lt;code&gt;cameraDistance&lt;/code&gt;, &lt;code&gt;cameraX&lt;/code&gt;, &lt;code&gt;cameraY&lt;/code&gt;, &lt;code&gt;cameraRotateX&lt;/code&gt;, &lt;code&gt;cameraRotateY&lt;/code&gt;.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;setLighting(opt)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Change lighting settings. The &lt;code&gt;opt&lt;/code&gt; object can be used to set &lt;code&gt;lightAmbientColor&lt;/code&gt;, &lt;code&gt;lightAmbientIntensity&lt;/code&gt;, &lt;code&gt;lightDirectColor&lt;/code&gt;, &lt;code&gt;lightDirectIntensity&lt;/code&gt;, &lt;code&gt;lightDirectPhi&lt;/code&gt;, &lt;code&gt;lightDirectTheta&lt;/code&gt;, &lt;code&gt;lightSpotColor&lt;/code&gt;, &lt;code&gt;lightSpotIntensity&lt;/code&gt;, &lt;code&gt;lightSpotPhi&lt;/code&gt;, &lt;code&gt;lightSpotTheta&lt;/code&gt;, &lt;code&gt;lightSpotDispersion&lt;/code&gt;.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;speakText(text, [opt={}], [onsubtitles=null], [excludes=[]])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Add the &lt;code&gt;text&lt;/code&gt; string to the speech queue. The text can contain face emojis. Options &lt;code&gt;opt&lt;/code&gt; can be used to set text-specific &lt;code&gt;lipsyncLang&lt;/code&gt;, &lt;code&gt;ttsLang&lt;/code&gt;, &lt;code&gt;ttsVoice&lt;/code&gt;, &lt;code&gt;ttsRate&lt;/code&gt;, &lt;code&gt;ttsPitch&lt;/code&gt;, &lt;code&gt;ttsVolume&lt;/code&gt;, &lt;code&gt;avatarMood&lt;/code&gt;, &lt;code&gt;avatarMute&lt;/code&gt;. Optional callback function &lt;code&gt;onsubtitles&lt;/code&gt; is called whenever a new subtitle is to be written with the parameter of the added string. The optional &lt;code&gt;excludes&lt;/code&gt; is an array of [start,end] indices to be excluded from audio but to be included in the subtitles.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;speakAudio(audio, [opt={}], [onsubtitles=null])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Add a new &lt;code&gt;audio&lt;/code&gt; object to the speech queue. In audio object, property &lt;code&gt;audio&lt;/code&gt; is either &lt;code&gt;AudioBuffer&lt;/code&gt; or an array of PCM 16bit LE audio chunks. Property &lt;code&gt;words&lt;/code&gt; is an array of words, &lt;code&gt;wtimes&lt;/code&gt; is an array of corresponding starting times in milliseconds, and &lt;code&gt;wdurations&lt;/code&gt; an array of durations in milliseconds. If the Oculus viseme IDs are known, they can be given in optional &lt;code&gt;visemes&lt;/code&gt;, &lt;code&gt;vtimes&lt;/code&gt; and &lt;code&gt;vdurations&lt;/code&gt; arrays. The object also supports optional timed callbacks using &lt;code&gt;markers&lt;/code&gt; and &lt;code&gt;mtimes&lt;/code&gt;. In addition, you can provide an optional &lt;code&gt;anim&lt;/code&gt; as an animation template object that can drive your own blendshape or morph target data in sync with audio playback. See Appendix F for more details. The &lt;code&gt;opt&lt;/code&gt; object can be used to set text-specific &lt;code&gt;lipsyncLang&lt;/code&gt;.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;streamStart(opt={}, onAudioStart = null, onAudioEnd = null, onSubtitles = null, onMetrics = null)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Sets the talking head in streaming mode. See Appendix G for streaming instructions.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;streamAudio(audio)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Starts feeding audio chunks to talkinghead in the streaming mode. See Appendix G for streaming instructions.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;streamNotifyEnd()&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Signals the end of streaming audio chunks to the talkinghead. See Appendix G for streaming instructions.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;streamInterrupt()&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Interrupts ongoing audio and lip-sync in streaming mode without ending the session. See Appendix G for streaming instructions.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;streamStop()&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Exits the streaming mode and ends the session. See Appendix G for streaming instructions.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;speakEmoji(e)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Add an emoji &lt;code&gt;e&lt;/code&gt; to the speech queue.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;speakBreak(t)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Add a break of &lt;code&gt;t&lt;/code&gt; milliseconds to the speech queue.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;speakMarker(onmarker)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Add a marker to the speech queue. The callback function &lt;code&gt;onmarker&lt;/code&gt; is called when the queue processes the marker.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lookAt(x,y,t)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Make the avatar's head turn to look at the screen position (&lt;code&gt;x&lt;/code&gt;,&lt;code&gt;y&lt;/code&gt;) for &lt;code&gt;t&lt;/code&gt; milliseconds.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lookAhead(t)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Make avatar look ahead for &lt;code&gt;t&lt;/code&gt; milliseconds.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lookAtCamera(t)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Make the avatar's head turn to look at the camera for &lt;code&gt;t&lt;/code&gt; milliseconds. If &lt;code&gt;avatarIgnoreCamera&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, looks ahead for &lt;code&gt;t&lt;/code&gt; milliseconds.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;makeEyeContact(t)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Make the avatar maintain eye contact with the person in front of it for (at least) &lt;code&gt;t&lt;/code&gt; milliseconds.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;setMood(mood)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Set avatar mood.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;playBackgroundAudio(url)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Play background audio such as ambient sounds/music in a loop.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;stopBackgroundAudio()&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Stop playing the background audio.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;setMixerGain(speech, [background=null], [fadeSecs=0])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The amount of gain for speech and background audio (see Web Audio API / GainNode for more information). Value &lt;code&gt;null&lt;/code&gt; means no change. Optional &lt;code&gt;fadeSecs&lt;/code&gt; parameter sets exponential fade in/out time in seconds.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;playAnimation(url, [onprogress=null], [dur=10], [ndx=0], [scale=0.01])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Play Mixamo animation file for &lt;code&gt;dur&lt;/code&gt; seconds, but full rounds and at least once. If the FBX file includes several animations, the parameter &lt;code&gt;ndx&lt;/code&gt; specifies the index. Since Mixamo rigs have a scale 100 and RPM a scale 1, the &lt;code&gt;scale&lt;/code&gt; factor can be used to scale the positions.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;stopAnimation()&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Stop the current animation started by &lt;code&gt;playAnimation&lt;/code&gt;.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;playPose(url, [onprogress=null], [dur=5], [ndx=0], [scale=0.01])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Play the initial pose of a Mixamo animation file for &lt;code&gt;dur&lt;/code&gt; seconds. If the FBX file includes several animations, the parameter &lt;code&gt;ndx&lt;/code&gt; specifies the index. Since Mixamo rigs have a scale 100 and RPM a scale 1, the &lt;code&gt;scale&lt;/code&gt; factor can be used to scale the positions.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;stopPose()&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Stop the current pose started by &lt;code&gt;playPose&lt;/code&gt;.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;playGesture(name, [dur=3], [mirror=false], [ms=1000])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Play a named hand gesture and/or animated emoji for &lt;code&gt;dur&lt;/code&gt; seconds with the &lt;code&gt;ms&lt;/code&gt; transition time. The available hand gestures are &lt;code&gt;handup&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;ok&lt;/code&gt;, &lt;code&gt;thumbup&lt;/code&gt;, &lt;code&gt;thumbdown&lt;/code&gt;, &lt;code&gt;side&lt;/code&gt;, &lt;code&gt;shrug&lt;/code&gt;. By default, hand gestures are done with the left hand. If you want the right handed version, set &lt;code&gt;mirror&lt;/code&gt; to true. You can also use &lt;code&gt;playGesture&lt;/code&gt; to play emojis. See Appendix D for more details.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;stopGesture([ms=1000])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Stop the gesture with &lt;code&gt;ms&lt;/code&gt; transition time.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;startListening(analyzer, [opt={}], [onchange=null])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Start listening &lt;code&gt;analyzer&lt;/code&gt; AnalyserNode. The &lt;code&gt;opt&lt;/code&gt; object can be used to set options &lt;code&gt;listeningSilenceThresholdLevel&lt;/code&gt;, &lt;code&gt;listeningSilenceThresholdMs&lt;/code&gt;, &lt;code&gt;listeningSilenceDurationMax&lt;/code&gt;, &lt;code&gt;listeningActiveThresholdLevel&lt;/code&gt;, &lt;code&gt;listeningActiveThresholdMs&lt;/code&gt;, &lt;code&gt;listeningActiveDurationMax&lt;/code&gt;. The callback function &lt;code&gt;onchange&lt;/code&gt; is called, when the state changes with one of the following parameter: &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, &lt;code&gt;maxsilence&lt;/code&gt;, &lt;code&gt;maxactive&lt;/code&gt;.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;stopListening&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Stop listening the incoming audio.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;start&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Start/re-start the Talking Head animation loop.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Stop the Talking Head animation loop.&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;p&gt;The class has been tested on the latest Chrome, Firefox, Safari, and Edge desktop browsers, as well as on iPad.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;The &lt;code&gt;index.html&lt;/code&gt; Test App&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;em&gt;The &lt;code&gt;index.html&lt;/code&gt; app was created for testing and developing the TalkingHead class. It includes various integrations with several paid services. If you only want to use the TalkingHead class in your own app, there is no need to install and configure the &lt;code&gt;index.html&lt;/code&gt; app.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;In addition to testing and development, the test app be used as an example of how to integrate the TalkingHead class with &lt;a href="https://elevenlabs.io"&gt;ElevenLabs WebSocket API&lt;/a&gt;, &lt;a href="https://github.com/microsoft/cognitive-services-speech-sdk-js"&gt;Microsoft Azure Speech SDK&lt;/a&gt;, &lt;a href="https://openai.com"&gt;OpenAI&lt;/a&gt;, &lt;a href="https://ai.google.dev/gemini-api"&gt;Gemini&lt;/a&gt; and &lt;a href="https://docs.x.ai"&gt;Grok&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can try out the test app online &lt;a href="https://met4citizen.github.io/TalkingHead/"&gt;here on GitHub&lt;/a&gt;. By default, the text-to-speech and AI features will not work, but you can activate them by navigating to the settings menu (☰) and pasting your own API key in the relevant field(s). Your API keys will not be stored, so you will need to re-enter them each time you reload the page.&lt;/p&gt; 
&lt;p&gt;To set up the test app in your local environment, follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Copy the latest files to your own web server, for example:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone --depth 1 https://github.com/met4citizen/TalkingHead.git &amp;amp;&amp;amp; rm -r TalkingHead/.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Optional: Create API proxies as described in Appendix B and check/update your proxy configuration in &lt;code&gt;index.html&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// API proxys
const jwtEndpoint = "/app/jwt/get"; // Get JSON Web Token for Single Sign-On
const openaiChatCompletionsProxy = "/openai/v1/chat/completions";
const openaiModerationsProxy = "/openai/v1/moderations";
const openaiAudioTranscriptionsProxy = "/openai/v1/audio/transcriptions";
const vertexaiChatCompletionsProxy = "/vertexai/";
const googleTTSProxy = "/gtts/";
const elevenTTSProxy = [
  "wss://" + window.location.host + "/elevenlabs/",
  "/v1/text-to-speech/",
  "/stream-input?model_id=eleven_multilingual_v2&amp;amp;output_format=pcm_22050"
];
const microsoftTTSProxy = [
  "wss://" + window.location.host + "/mstts/",
  "/cognitiveservices/websocket/v1"
];
const grokChatCompletionsProxy = "/grok/v1/chat/completions"; // Grok-beta
const llamaChatCompletionsProxy = "/llama/v1/chat/completions"; // Local llama.cpp
const localWhisperCppProxy = "/whisper/"; // Local whisper.cpp
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt; &lt;p&gt;The test app's UI supports Finnish and English. If you want to add another language, you need to add an another entry to the &lt;code&gt;i18n&lt;/code&gt; object.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Add you own background images, videos, audio files, avatars etc. in the directory structure and update your site configuration &lt;code&gt;siteconfig.js&lt;/code&gt; accordingly. The keys are in English, but the entries can include translations to other languages.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Licenses, attributions and notes related to the &lt;code&gt;index.html&lt;/code&gt; web app assets:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The app uses &lt;a href="https://github.com/markedjs/marked"&gt;Marked&lt;/a&gt; Markdown parser and &lt;a href="https://github.com/cure53/DOMPurify"&gt;DOMPurify&lt;/a&gt; XSS sanitizer.&lt;/li&gt; 
 &lt;li&gt;Fira Sans Condensed and Fira Sans Extra Condensed fonts are licensed under the SIL Open Font License, version 1.1, available with a FAQ at &lt;a href="http://scripts.sil.org/OFL"&gt;http://scripts.sil.org/OFL&lt;/a&gt;. Digitized data copyright (c) 2012-2015, The Mozilla Foundation and Telefonica S.A.&lt;/li&gt; 
 &lt;li&gt;SVG icons from &lt;a href="https://github.com/astrit/css.gg"&gt;css.gg&lt;/a&gt;, MIT License (versions prior to license update).&lt;/li&gt; 
 &lt;li&gt;Example avatar "brunette.glb" was created at &lt;a href="https://readyplayer.me/"&gt;Ready Player Me&lt;/a&gt;. The avatar is free to all developers for non-commercial use under the &lt;a href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;CC BY-NC 4.0 DEED&lt;/a&gt;. If you want to integrate Ready Player Me avatars into a commercial app or game, you must sign up as a Ready Player Me developer.&lt;/li&gt; 
 &lt;li&gt;Example animation &lt;code&gt;walking.fbx&lt;/code&gt; and the pose &lt;code&gt;dance.fbx&lt;/code&gt; are from Mixamo, a subsidiary of Adobe Inc. &lt;a href="https://www.mixamo.com"&gt;Mixamo&lt;/a&gt; service is free and its animations/poses (&amp;gt;2000) can be used royalty free for personal, commercial, and non-profit projects. Raw animation files can't be distributed outside the project team and can't be used to train ML models.&lt;/li&gt; 
 &lt;li&gt;Background view examples are from &lt;a href="https://virtualbackgrounds.site"&gt;Virtual Backgrounds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Impulse response (IR) files for reverb effects: 
  &lt;ul&gt; 
   &lt;li&gt;ir-room: &lt;a href="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/www.openairlib.net"&gt;OpenAir&lt;/a&gt;, Public Domain Creative Commons license&lt;/li&gt; 
   &lt;li&gt;ir-basement: &lt;a href="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/www.openairlib.net"&gt;OpenAir&lt;/a&gt;, Public Domain Creative Commons license&lt;/li&gt; 
   &lt;li&gt;ir-forest (Abies Grandis Forest, Wheldrake Wood): &lt;a href="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/www.openairlib.net"&gt;OpenAir&lt;/a&gt;, Creative Commons Attribution 4.0 International License&lt;/li&gt; 
   &lt;li&gt;ir-church (St. Andrews Church): &lt;a href="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/www.openairlib.net"&gt;OpenAir&lt;/a&gt;, Share Alike Creative Commons 3.0&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Ambient sounds/music attributions: 
  &lt;ul&gt; 
   &lt;li&gt;murmur.mp3: &lt;a href="https://github.com/siwalikm/coffitivity-offline"&gt;https://github.com/siwalikm/coffitivity-offline&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; None of the assets described above are used or distributed as part of the TalkingHead class releases. If you wish to use them in your own application, please refer to the exact terms of use provided by the copyright holders.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Why not use the free Web Speech API?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The free Web Speech API can't provide word-to-audio timestamps, which are essential for accurate lip-sync. As far as I know, there is no way even to get Web Speech API speech synthesis as an audio file or determine its duration in advance. At some point I tried to use the Web Speech API events for syncronization, but the results were not good.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;What paid text-to-speech service should I use?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;It depends on your use case and budget. If the built-in lip-sync support is sufficient for your needs, I would recommend Google TTS, because it gives you up to 4 million characters for free each month. If your app needs to support multiple languages, I would consider Microsoft Speech SDK.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I would like to have lip-sync support for language X.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You have two options. First, you can implement a word-to-viseme class similar to those that currently exist for English and Finnish. See Appendix C for detailed instructions. Alternatively, you can check if Microsoft Azure TTS can provide visemes for your language and use Microsoft Speech SDK integration (&lt;code&gt;speakAudio&lt;/code&gt;) instead of Google TTS and the built-in lip-sync (&lt;code&gt;speakText&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Can I use a custom 3D model?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The class supports full-body Ready Player Me avatars. You can also make your own custom model, but it needs to have a RPM compatible rig/bone structure and all their blend shapes. Please refer to Appendix A and readyplayer.me documentation for more details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Any future plans for the project?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This is just a small side-project for me, so I don't have any big plans for it. That said, there are several companies that are currently developing text-to-3D-avatar and text-to-3D-animation features. If and when they get released as APIs, I will probably take a look at them and see if they can be used/integrated in some way to the project.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;[1] &lt;a href="https://en.wiktionary.org/wiki/Appendix:Finnish_pronunciation"&gt;Finnish pronunciation&lt;/a&gt;, Wiktionary&lt;/p&gt; 
&lt;p&gt;[2] Elovitz, H. S., Johnson, R. W., McHugh, A., Shore, J. E., Automatic Translation of English Text to Phonetics by Means of Letter-to-Sound Rules (NRL Report 7948). Naval Research Laboratory (NRL). Washington, D. C., 1976. &lt;a href="https://apps.dtic.mil/sti/pdfs/ADA021929.pdf"&gt;https://apps.dtic.mil/sti/pdfs/ADA021929.pdf&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix A: Create Your Own 3D Avatar&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;FOR HOBBYISTS:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create your own full-body avatar free at &lt;a href="https://readyplayer.me/avatar/"&gt;https://readyplayer.me/avatar/&lt;/a&gt; or &lt;a href="https://playerzero.readyplayer.me/"&gt;https://playerzero.readyplayer.me/&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Copy your avatar’s unique ID (e.g., &lt;code&gt;64bfa15f0e72c63d7c3934a6&lt;/code&gt;) and download the GLB file using one of the links below. Replace the ID with your own, and make sure to keep the URL parameters to include the necessary morph targets (blend shapes).&lt;br /&gt;&lt;br /&gt;Ready Player Me:&lt;br /&gt;&lt;code&gt;https://models.readyplayer.me/64bfa15f0e72c63d7c3934a6.glb?morphTargets=ARKit,Oculus+Visemes,mouthOpen,mouthSmile,eyesClosed,eyesLookUp,eyesLookDown&amp;amp;textureSizeLimit=1024&amp;amp;textureFormat=png&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;PlayerZero:&lt;br /&gt;&lt;code&gt;https://avatars.readyplayer.me/67ebd62a688cd661ebe09988.glb?morphTargetsGroup=ARKit,Oculus+Visemes&amp;amp;morphTargets=mouthSmile,mouthOpen,eyesClosed,eyesLookUp,eyesLookDown&amp;amp;textureSizeLimit=1024&amp;amp;textureFormat=png&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;Depending on your use case, you can customize the texture format and texture quality (e.g. &lt;code&gt;textureFormat=webp&amp;amp;textureQuality=high&lt;/code&gt;), the triangle count (e.g. &lt;code&gt;lod=1&lt;/code&gt;), use Draco mesh compression (&lt;code&gt;useDracoMeshCompression=true&lt;/code&gt;), and so on. See the full list of option &lt;a href="https://docs.readyplayer.me/ready-player-me/api-reference/rest-api/avatars/get-3d-avatars"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;FOR 3D MODELERS:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can create and use your own 3D full-body model, but it has to be Ready Player Me compatible. Their rig has a Mixamo-compatible bone structure described here:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.readyplayer.me/ready-player-me/api-reference/avatars/full-body-avatars"&gt;https://docs.readyplayer.me/ready-player-me/api-reference/avatars/full-body-avatars&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For lip-sync and facial expressions, you also need to have ARKit and Oculus compatible blend shapes, and a few additional ones, all listed in the following two pages:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.readyplayer.me/ready-player-me/api-reference/avatars/morph-targets/apple-arkit"&gt;https://docs.readyplayer.me/ready-player-me/api-reference/avatars/morph-targets/apple-arkit&lt;/a&gt; &lt;a href="https://docs.readyplayer.me/ready-player-me/api-reference/avatars/morph-targets/oculus-ovr-libsync"&gt;https://docs.readyplayer.me/ready-player-me/api-reference/avatars/morph-targets/oculus-ovr-libsync&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;br /&gt; The additional blend shapes mentioned in the specs (&lt;code&gt;"mouthOpen"&lt;/code&gt;, &lt;code&gt;"mouthSmile"&lt;/code&gt;, &lt;code&gt;"eyesClosed"&lt;/code&gt;, &lt;code&gt;"eyesLookUp"&lt;/code&gt;, &lt;code&gt;"eyesLookDown"&lt;/code&gt;) are not strictly required, as the TalkingHead class will automatically generate them from ARKit blend shapes if they are missing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The TalkingHead class supports both separated mesh and texture atlasing.&lt;/p&gt; 
&lt;p&gt;Here are some Blender Python scripts that could be useful in converting custom models:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Script&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/met4citizen/TalkingHead/raw/main/blender/rename-mixamo-bones.py"&gt;rename-mixamo-bones.py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;If your model doesn't have a compatible rig, you can auto-rig your model easily at &lt;a href="https://www.mixamo.com"&gt;Mixamo&lt;/a&gt; and use this Blender script to rename the Mixamo bones.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/met4citizen/TalkingHead/raw/main/blender/rename-rocketbox-shapekeys.py"&gt;rename-rocketbox-shapekeys.py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;Rename &lt;a href="https://github.com/microsoft/Microsoft-Rocketbox"&gt;Microsoft Rocketbox&lt;/a&gt; model shape keys.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/met4citizen/TalkingHead/raw/main/blender/rename-avatarsdk-shapekeys.py"&gt;rename-avatarsdk-shapekeys.py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;Rename &lt;a href="https://github.com/avatarsdk"&gt;Avatar SDK MetaPerson&lt;/a&gt; model shape keys.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/met4citizen/TalkingHead/raw/main/blender/build-extras-from-arkit.py"&gt;build-extras-from-arkit.py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;Build RPM extras (mouthOpen, mouthSmile, eyesClosed, eyesLookUp, eyesLookDown) from ARKit blendshapes. Note: The TalkingHead will generate these automatically if they're missing. However, building them yourself allows you to fine-tune them to your taste.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/met4citizen/TalkingHead/raw/main/blender/build-visemes-from-arkit.py"&gt;build-visemes-from-arkit.py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;Build Oculus visemes from ARKit blendshapes. As models are all different, you should fine-tune the script for best result. EXPERIMENTAL&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix B: Create API Proxies with JSON Web Token (JWT) Single Sign-On (SSO)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Make a CGI script that generates a new JSON Web Token with an expiration time (exp). See &lt;a href="https://jwt.io"&gt;jwt.io&lt;/a&gt; for more information about JWT and libraries that best fit your needs and architecture. In my own test setup, I return the generated JWT as JSON.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{ "jwt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c" }
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Protect your CGI script with some authentication scheme. Below is an example Apache 2.4 directory config that uses Basic authentication (remember to always use HTTPS/SSL!). Put your CGI script &lt;code&gt;get&lt;/code&gt; in the &lt;code&gt;jwt&lt;/code&gt; directory.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-apacheconf"&gt;# Restricted applications
&amp;lt;Directory "/var/www/app"&amp;gt;
  AuthType Basic
  AuthName "Restricted apps"
  AuthUserFile /etc/httpd/.htpasswd
  Require valid-user
&amp;lt;/Directory&amp;gt;

# JSON Web Token
&amp;lt;Directory "/var/www/app/jwt" &amp;gt;
  Options ExecCGI
  SetEnv REMOTE_USER %{REMOTE_USER}
  SetHandler cgi-script
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Make an &lt;a href="https://httpd.apache.org/docs/2.4/rewrite/rewritemap.html#prg"&gt;External Rewriting Program&lt;/a&gt; script that verifies JSON Web Tokens. The script should return &lt;code&gt;OK&lt;/code&gt; if the given token is not expired and its signature is valid. Start the script in Apache 2.4 config. User's don't use the verifier script directly, so put it in some internal directory, not under document root.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-apacheconf"&gt;# JSON Web Token verifier
RewriteEngine On
RewriteMap jwtverify "prg:/etc/httpd/jwtverify" apache:apache
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Make a proxy configuration for each service you want to use. Add the required API keys and protect the proxies with the JWT token verifier. Below are some example configs for Apache 2.4 web server. Note that when opening a WebSocket connection (ElevenLabs, Azure) you can't add authentication headers in browser JavaScript. This problem is solved here by including the JWT token as a part of the request URL. The downside is that the token might end up in server log files. This is typically not a problem as long as you are controlling the proxy server, you are using HTTPS/SSL, and the token has an expiration time.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-apacheconf"&gt;# OpenAI API
&amp;lt;Location /openai/&amp;gt;
  RewriteCond ${jwtverify:%{http:Authorization}} !=OK
  RewriteRule .+ - [F]
  ProxyPass https://api.openai.com/
  ProxyPassReverse  https://api.openai.com/
  ProxyPassReverseCookiePath "/"  "/openai/"
  ProxyPassReverseCookieDomain ".api.openai.com" ".&amp;lt;insert-your-proxy-domain-here&amp;gt;"
  RequestHeader set Authorization "Bearer &amp;lt;insert-your-openai-api-key-here&amp;gt;"
&amp;lt;/Location&amp;gt;

# Google TTS API
&amp;lt;Location /gtts/&amp;gt;
  RewriteCond ${jwtverify:%{http:Authorization}} !=OK
  RewriteRule .+ - [F]
  ProxyPass https://eu-texttospeech.googleapis.com/v1beta1/text:synthesize?key=&amp;lt;insert-your-api-key-here&amp;gt; nocanon
  RequestHeader unset Authorization
&amp;lt;/Location&amp;gt;

# Microsoft Azure TTS WebSocket API (Speech SDK)
&amp;lt;LocationMatch /mstts/(?&amp;lt;jwt&amp;gt;[^/]+)/&amp;gt;
  RewriteCond ${jwtverify:%{env:MATCH_JWT}} !=OK
  RewriteRule .+ - [F]
  RewriteCond %{HTTP:Connection} Upgrade [NC]
  RewriteCond %{HTTP:Upgrade} websocket [NC]
  RewriteRule /mstts/[^/]+/(.+) "wss://&amp;lt;insert-your-region-here&amp;gt;.tts.speech.microsoft.com/$1" [P]
  RequestHeader set "Ocp-Apim-Subscription-Key" &amp;lt;insert-your-subscription-key-here&amp;gt;
&amp;lt;/LocationMatch&amp;gt;

# ElevenLabs Text-to-speech WebSocket API
&amp;lt;LocationMatch /elevenlabs/(?&amp;lt;jwt&amp;gt;[^/]+)/&amp;gt;
  RewriteCond ${jwtverify:%{env:MATCH_JWT}} !=OK
  RewriteRule .+ - [F]
  RewriteCond %{HTTP:Connection} Upgrade [NC]
  RewriteCond %{HTTP:Upgrade} websocket [NC]
  RewriteRule /elevenlabs/[^/]+/(.+) "wss://api.elevenlabs.io/$1" [P]
  RequestHeader set "xi-api-key" "&amp;lt;add-your-elevenlabs-api-key-here&amp;gt;"
&amp;lt;/LocationMatch&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix C: Create A New Lip-sync Module&lt;/h3&gt; 
&lt;p&gt;The steps that are common to all new languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new file named &lt;code&gt;lipsync-xx.mjs&lt;/code&gt; where &lt;code&gt;xx&lt;/code&gt; is your language code, and place the file in the &lt;code&gt;./modules/&lt;/code&gt; directory. The language module should have a class named &lt;code&gt;LipsyncXx&lt;/code&gt; where Xx is the language code. The naming in important, because the modules are loaded dynamically based on their names.&lt;/li&gt; 
 &lt;li&gt;The class should have (at least) the following two methods: &lt;code&gt;preProcessText&lt;/code&gt; and &lt;code&gt;wordsToVisemes&lt;/code&gt;. These are the methods used in the TalkingHead class.&lt;/li&gt; 
 &lt;li&gt;The purpose of the &lt;code&gt;preProcessText&lt;/code&gt; method is to preprocess the given text by converting symbols to words, numbers to words, and filtering out characters that should be left unspoken (if any), etc. This is often needed to prevent ambiguities between TTS and lip-sync engines. This method takes a string as a parameter and returns the preprocessed string.&lt;/li&gt; 
 &lt;li&gt;The purpose of the &lt;code&gt;wordsToVisemes&lt;/code&gt; method is to convert the given text into visemes and timestamps. The method takes a string as a parameter and returns a lip-sync object. The lipsync object has three required properties: &lt;code&gt;visemes&lt;/code&gt;, &lt;code&gt;times&lt;/code&gt;and &lt;code&gt;durations&lt;/code&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;Property &lt;code&gt;visemes&lt;/code&gt; is an array of Oculus OVR viseme codes. Each viseme is one of the strings: &lt;code&gt;'aa'&lt;/code&gt;, &lt;code&gt;'E'&lt;/code&gt;, &lt;code&gt;'I'&lt;/code&gt;, &lt;code&gt;'O'&lt;/code&gt;, &lt;code&gt;'U'&lt;/code&gt;, &lt;code&gt;'PP'&lt;/code&gt;, &lt;code&gt;'SS'&lt;/code&gt;, &lt;code&gt;'TH'&lt;/code&gt;, &lt;code&gt;'CH'&lt;/code&gt;, &lt;code&gt;'FF'&lt;/code&gt;, &lt;code&gt;'kk'&lt;/code&gt;, &lt;code&gt;'nn'&lt;/code&gt;, &lt;code&gt;'RR'&lt;/code&gt;, &lt;code&gt;'DD'&lt;/code&gt;, &lt;code&gt;'sil'&lt;/code&gt;. See the reference images here: &lt;a href="https://developer.oculus.com/documentation/unity/audio-ovrlipsync-viseme-reference/"&gt;https://developer.oculus.com/documentation/unity/audio-ovrlipsync-viseme-reference/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Property &lt;code&gt;times&lt;/code&gt; is an array of starting times, one entry for each viseme in &lt;code&gt;visemes&lt;/code&gt;. Starting times are to be given in relative units. They will be scaled later on based on the word timestamps that we get from the TTS engine.&lt;/li&gt; 
   &lt;li&gt;Property &lt;code&gt;durations&lt;/code&gt; is an array of relative durations, one entry for each viseme in &lt;code&gt;visemes&lt;/code&gt;. Durations are to be given in relative units. They will be scaled later on based on the word timestamps that we get from the TTS engine.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The difficult part is to actually make the conversion from words to visemes. What is the best approach depends on the language. Here are some typical approaches to consider (not a comprehensive list):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Direct mapping from graphemes to phonemes to visemes&lt;/strong&gt;. This works well for languages that have a consistent one-to-one mapping between individual letters and phonemes. This was used as the approach for the Finnish language (&lt;code&gt;lipsync-fi.mjs&lt;/code&gt;) giving &amp;gt;99.9% lip-sync accuracy compared to the Finnish phoneme dictionary. Implementation size was ~4k. Unfortunately not all languages are phonetically orthographic languages.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rule-based mapping&lt;/strong&gt;. This was used as the approach for the English language (&lt;code&gt;lipsync-en.mjs&lt;/code&gt;) giving around 80% lip-sync accuracy compared to the English phoneme dictionary. However, since the rules cover the most common words, the effective accuracy is higher. Implementation size ~12k.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dictionary based approach&lt;/strong&gt;. If neither of the previous approaches work for your language, make a search from some open source phoneme dictionary. Note that you still need some backup algorithm for those words that are not in the dictionary. The problem with phoneme dictionaries is their size. For example, the CMU phoneme dictionary for English is ~5M.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural-net approach based on transformer models&lt;/strong&gt;. Typically this should be done on server-side as the model size can be &amp;gt;50M.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;TalkingHead is supposed to be a real-time class, so latency is always something to consider. It is often better to be small and fast than to aim for 100% accuracy.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix D: Adding Custom Poses, Moods, Gestures, and Emojis (ADVANCED)&lt;/h3&gt; 
&lt;p&gt;In the TalkingHead class, the avatar's movements are based on four data structures: &lt;code&gt;head.poseTemplates&lt;/code&gt;, &lt;code&gt;head.animMoods&lt;/code&gt;, &lt;code&gt;head.gestureTemplates&lt;/code&gt;, and &lt;code&gt;head.animEmojis&lt;/code&gt;. By using these objects, you can give your avatar its own personal body language.&lt;/p&gt; 
&lt;p&gt;In &lt;code&gt;head.poseTemplates&lt;/code&gt; the hip position is defined as an {x, y, z} coordinate in meters, and bone rotations as Euler XYZ rotations in radians. In each pose, the avatar should have its weight on the left leg, if any, as the class automatically mirrors it for the right side. Setting the boolean properties &lt;code&gt;standing&lt;/code&gt;, &lt;code&gt;sitting&lt;/code&gt;, &lt;code&gt;bend&lt;/code&gt;, &lt;code&gt;kneeling&lt;/code&gt;, and &lt;code&gt;lying&lt;/code&gt; helps the class make the transitions between different poses in proper steps.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;head.poseTemplates["custom-pose-1"] = {
  standing: true, sitting: false, bend: false, kneeling: false, lying: false,
  props: {
    'Hips.position':{x:0, y:0.989, z:0.001}, 'Hips.rotation':{x:0.047, y:0.007, z:-0.007}, 'Spine.rotation':{x:-0.143, y:-0.007, z:0.005}, 'Spine1.rotation':{x:-0.043, y:-0.014, z:0.012}, 'Spine2.rotation':{x:0.072, y:-0.013, z:0.013}, 'Neck.rotation':{x:0.048, y:-0.003, z:0.012}, 'Head.rotation':{x:0.05, y:-0.02, z:-0.017}, 'LeftShoulder.rotation':{x:1.62, y:-0.166, z:-1.605}, 'LeftArm.rotation':{x:1.275, y:0.544, z:-0.092}, 'LeftForeArm.rotation':{x:0, y:0, z:0.302}, 'LeftHand.rotation':{x:-0.225, y:-0.154, z:0.11}, 'LeftHandThumb1.rotation':{x:0.435, y:-0.044, z:0.457}, 'LeftHandThumb2.rotation':{x:-0.028, y:0.002, z:-0.246}, 'LeftHandThumb3.rotation':{x:-0.236, y:-0.025, z:0.113}, 'LeftHandIndex1.rotation':{x:0.218, y:0.008, z:-0.081}, 'LeftHandIndex2.rotation':{x:0.165, y:-0.001, z:-0.017}, 'LeftHandIndex3.rotation':{x:0.165, y:-0.001, z:-0.017}, 'LeftHandMiddle1.rotation':{x:0.235, y:-0.011, z:-0.065}, 'LeftHandMiddle2.rotation':{x:0.182, y:-0.002, z:-0.019}, 'LeftHandMiddle3.rotation':{x:0.182, y:-0.002, z:-0.019}, 'LeftHandRing1.rotation':{x:0.316, y:-0.017, z:0.008}, 'LeftHandRing2.rotation':{x:0.253, y:-0.003, z:-0.026}, 'LeftHandRing3.rotation':{x:0.255, y:-0.003, z:-0.026}, 'LeftHandPinky1.rotation':{x:0.336, y:-0.062, z:0.088}, 'LeftHandPinky2.rotation':{x:0.276, y:-0.004, z:-0.028}, 'LeftHandPinky3.rotation':{x:0.276, y:-0.004, z:-0.028}, 'RightShoulder.rotation':{x:1.615, y:0.064, z:1.53}, 'RightArm.rotation':{x:1.313, y:-0.424, z:0.131}, 'RightForeArm.rotation':{x:0, y:0, z:-0.317}, 'RightHand.rotation':{x:-0.158, y:-0.639, z:-0.196}, 'RightHandThumb1.rotation':{x:0.44, y:0.048, z:-0.549}, 'RightHandThumb2.rotation':{x:-0.056, y:-0.008, z:0.274}, 'RightHandThumb3.rotation':{x:-0.258, y:0.031, z:-0.095}, 'RightHandIndex1.rotation':{x:0.169, y:-0.011, z:0.105}, 'RightHandIndex2.rotation':{x:0.134, y:0.001, z:0.011}, 'RightHandIndex3.rotation':{x:0.134, y:0.001, z:0.011}, 'RightHandMiddle1.rotation':{x:0.288, y:0.014, z:0.092}, 'RightHandMiddle2.rotation':{x:0.248, y:0.003, z:0.02}, 'RightHandMiddle3.rotation':{x:0.249, y:0.003, z:0.02}, 'RightHandRing1.rotation':{x:0.369, y:0.019, z:0.006}, 'RightHandRing2.rotation':{x:0.321, y:0.004, z:0.026}, 'RightHandRing3.rotation':{x:0.323, y:0.004, z:0.026}, 'RightHandPinky1.rotation':{x:0.468, y:0.085, z:-0.03}, 'RightHandPinky2.rotation':{x:0.427, y:0.007, z:0.034}, 'RightHandPinky3.rotation':{x:0.142, y:0.001, z:0.012}, 'LeftUpLeg.rotation':{x:-0.077, y:-0.058, z:3.126}, 'LeftLeg.rotation':{x:-0.252, y:0.001, z:-0.018}, 'LeftFoot.rotation':{x:1.315, y:-0.064, z:0.315}, 'LeftToeBase.rotation':{x:0.577, y:-0.07, z:-0.009}, 'RightUpLeg.rotation':{x:-0.083, y:-0.032, z:3.124}, 'RightLeg.rotation':{x:-0.272, y:-0.003, z:0.021}, 'RightFoot.rotation':{x:1.342, y:0.076, z:-0.222}, 'RightToeBase.rotation':{x:0.44, y:0.069, z:0.016}
  }
};
head.playPose("custom-pose-1");
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In &lt;code&gt;head.animMoods&lt;/code&gt; the syntax is more complex, so I suggest that you take a look at the existing moods. In &lt;code&gt;anims&lt;/code&gt;, each leaf object is an animation loop template. Whenever a loop starts, the class iterates through the nested hierarchy of objects by following keys that match the current state (&lt;code&gt;idle&lt;/code&gt;, &lt;code&gt;talking&lt;/code&gt;), body form (&lt;code&gt;M&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;), current view (&lt;code&gt;full&lt;/code&gt;, &lt;code&gt;upper&lt;/code&gt;, &lt;code&gt;mid&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt;), and/or probabilities (&lt;code&gt;alt&lt;/code&gt; + &lt;code&gt;p&lt;/code&gt;). The next animation will be created internally by using the &lt;code&gt;animFactory&lt;/code&gt; method. The property &lt;code&gt;delay&lt;/code&gt; (ms) determines how long that pose is held, &lt;code&gt;dt&lt;/code&gt; defines durations (ms) for each part in the sequence, and &lt;code&gt;vs&lt;/code&gt; defines the shapekeys and their target values for each part.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;
head.animMoods["custom-mood-1"] = {
  baseline: { eyesLookDown: 0.1 },
  speech: { deltaRate: 0, deltaPitch: 0, deltaVolume: 0 },
  anims: [
    { name: 'breathing', delay: 1500, dt: [ 1200,500,1000 ], vs: { chestInhale: [0.5,0.5,0] } },
    { name: 'pose', alt: [
      { p: 0.2, delay: [5000,20000], vs: { pose: ['side'] } },
      { p: 0.2, delay: [5000,20000], vs: { pose: ['hip'] },
        'M': { delay: [5000,20000], vs: { pose: ['wide'] } }
      },
      { delay: [5000,20000], vs: { pose: ['custom-pose-1'] } }
    ]},
    { name: 'head',
      idle: { delay: [0,1000], dt: [ [200,5000] ], vs: { headRotateX: [[-0.04,0.10]], headRotateY: [[-0.3,0.3]], headRotateZ: [[-0.08,0.08]] } },
      talking: { dt: [ [0,1000,0] ], vs: { headRotateX: [[-0.05,0.15,1,2]], headRotateY: [[-0.1,0.1]], headRotateZ: [[-0.1,0.1]] } }
    },
    { name: 'eyes', delay: [200,5000], dt: [ [100,500],[100,5000,2] ], vs: { eyesRotateY: [[-0.6,0.6]], eyesRotateX: [[-0.2,0.6]] } },
    { name: 'blink', delay: [1000,8000,1,2], dt: [50,[100,300],100], vs: { eyeBlinkLeft: [1,1,0], eyeBlinkRight: [1,1,0] } },
    { name: 'mouth', delay: [1000,5000], dt: [ [100,500],[100,5000,2] ], vs : { mouthRollLower: [[0,0.3,2]], mouthRollUpper: [[0,0.3,2]], mouthStretchLeft: [[0,0.3]], mouthStretchRight: [[0,0.3]], mouthPucker: [[0,0.3]] } },
    { name: 'misc', delay: [100,5000], dt: [ [100,500],[100,5000,2] ], vs : { eyeSquintLeft: [[0,0.3,3]], eyeSquintRight: [[0,0.3,3]], browInnerUp: [[0,0.3]], browOuterUpLeft: [[0,0.3]], browOuterUpRight: [[0,0.3]] } }
  ]
};
head.setMood("custom-mood-1");

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Typical value range is [0,1] or [-1,1]. At the end of each animation, the value will automatically return to its baseline value. If the value is an array, it defines a range for a uniform/Gaussian random value (approximated using CLT). See the class method &lt;code&gt;gaussianRandom&lt;/code&gt; for more information.&lt;/p&gt; 
&lt;p&gt;In &lt;code&gt;head.gestureTemplates&lt;/code&gt; each property is a subset of bone rotations that will be used to override the current pose.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;head.gestureTemplates["salute"] = {
  'LeftShoulder.rotation':{x:1.706, y:-0.171, z:-1.756}, 'LeftArm.rotation':{x:0.883, y:-0.288, z:0.886}, 'LeftForeArm.rotation':{x:0, y:0, z:2.183}, 'LeftHand.rotation':{x:0.029, y:-0.298, z:0.346}, 'LeftHandThumb1.rotation':{x:1.43, y:-0.887, z:0.956}, 'LeftHandThumb2.rotation':{x:-0.406, y:0.243, z:0.094}, 'LeftHandThumb3.rotation':{x:-0.024, y:0.008, z:-0.012}, 'LeftHandIndex1.rotation':{x:0.247, y:-0.011, z:-0.084}, 'LeftHandIndex2.rotation':{x:0.006, y:0, z:0}, 'LeftHandIndex3.rotation':{x:-0.047, y:0, z:0.004}, 'LeftHandMiddle1.rotation':{x:0.114, y:-0.004, z:-0.055}, 'LeftHandMiddle2.rotation':{x:0.09, y:0, z:-0.007}, 'LeftHandMiddle3.rotation':{x:0.078, y:0, z:-0.006}, 'LeftHandRing1.rotation':{x:0.205, y:-0.009, z:0.023}, 'LeftHandRing2.rotation':{x:0.109, y:0, z:-0.009}, 'LeftHandRing3.rotation':{x:-0.015, y:0, z:0.001}, 'LeftHandPinky1.rotation':{x:0.267, y:-0.012, z:0.031}, 'LeftHandPinky2.rotation':{x:0.063, y:0, z:-0.005}, 'LeftHandPinky3.rotation':{x:0.178, y:-0.001, z:-0.014}
};
head.playGesture("salute",3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In &lt;code&gt;head.animEmojis&lt;/code&gt; each object is an animated emoji. Note that you can also use &lt;code&gt;head.playGesture&lt;/code&gt; to play animated emojis. This makes it easy to combine a hand gesture and a facial expression by giving the gesture and the emoji the same name.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;head.animEmojis["🫤"] = { dt: [300,2000], vs: {
    browInnerUp: [0.5], eyeWideLeft: [0.5], eyeWideRight: [0.5], mouthLeft: [0.5], mouthPressLeft: [0.8], mouthPressRight: [0.2], mouthRollLower: [0.5], mouthStretchLeft: [0.7],   mouthStretchRight: [0.7]
  }
};
head.playGesture("🫤",3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix E: Dynamic Bones (ADVANCED)&lt;/h3&gt; 
&lt;p&gt;If you want your character's hair or other body parts to wiggle as the character moves, you can use TalkingHead's Dynamic Bones feature. The built-in physics engine simulates Newton's equations of motions using a spring-damper model and the &lt;a href="https://en.wikipedia.org/wiki/Verlet_integration"&gt;velocity Verlet integration&lt;/a&gt; method.&lt;/p&gt; 
&lt;p&gt;Standard Ready Player Me 3D avatars don't yet include features like hair bones. Until they do, you'll need to add the dynamic bones and weights to the model yourself. Here's an example of rigged hair in Blender.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/ponytail.jpg" /&gt; 
&lt;p&gt;Once your custom rig is in place, you can configure the dynamic bones by setting the &lt;code&gt;modelDynamicBones&lt;/code&gt; property to the &lt;code&gt;avatar&lt;/code&gt; object of the &lt;code&gt;showAvatar&lt;/code&gt; method. Here's an example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Load and show the avatar
try {
  await head.showAvatar( {
    url: './avatars/custom.glb',
    body: 'F',
    avatarMood: 'neutral',
    ttsLang: "en-GB",
    ttsVoice: "en-GB-Standard-A",
    lipsyncLang: 'en',
    modelDynamicBones: [
      {
        bone: "ponytail1", type: "full", stiffness: 20, damping: 2,
        limits: [null,null,[null,0.01],null],
      },
      {
        bone: "ponytail2", type: "full", stiffness: 200, damping: 10,
        pivot: true
      },
      {
        bone: "ponytail3", type: "full", stiffness: 400, damping: 10,
        excludes: [{"bone":"Head","deltaLocal":[0,0.05,0.02],"radius":0.13}]
      }
    ]
  });
} catch (error) {
  console.log(error);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Each item in &lt;code&gt;modelDynamicBones&lt;/code&gt; array represents one dynamic bone, which can be configured separately.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;CLICK HERE to see all the available PROPERTIES.&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Property&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
    &lt;th&gt;Example&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;bone&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The name of the bone in your custom skeleton. Note that each dynamic bone must have a parent bone.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"ponytail1"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;type&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;
     &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;"point"&lt;/code&gt; updates only the bone's local position [x,y,z]. It is fast to calculate, but may cause skinned meshes to deform unnaturally.&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;"link"&lt;/code&gt; updates only the parent's quaternions (XZ rotations).&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;"mix1"&lt;/code&gt; mixes XZ rotations with a stretch (bone length, position change).&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;"mix2"&lt;/code&gt; mixes XZ rotations with a twist (Y rotations).&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;"full"&lt;/code&gt; link with both stretch and twist.&lt;/li&gt;
     &lt;/ul&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"full"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;stiffness&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Mass-normalized spring constant &lt;code&gt;k&lt;/code&gt; [m/s^2]. Either a non-negative number or an array with separate values for each dimension [x, y, z, t].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;20&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;damping&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Mass-normalized damping coefficient &lt;code&gt;c&lt;/code&gt; [1/s]. Either a non-negative number or an array with separate values for each dimension [x, y, z, t].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;external&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;External scaling factor between [0,1] that can be used to scale down the external forces caused by parent's movement. If set to &lt;code&gt;0&lt;/code&gt;, the bone is rigid and moves with its parent without experiencing any external force. If set to &lt;code&gt;1&lt;/code&gt;, the bone follows its parent with a lag (inertia) and feels the force. OPTIONAL, default value &lt;code&gt;1.0&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.7&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;limits&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Sets the limiting range [low, high] for each dimension [x, y, z, t] in meters [m]. This can help prevent situations in which meshes overlap due to sudden movements or when the amplitude becomes unrealistic. Limits are applied in local space. OPTIONAL, default &lt;code&gt;null&lt;/code&gt; (no limit)&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;[null,null,[null,0.01],null]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;deltaLocal&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Local position translation [dx,dy,dz] in meters [m]. OPTIONAL, default &lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;[0,0.01,0]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;deltaWorld&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;World position translation [dx,dy,dz] in meters [m]. OPTIONAL, default &lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;[0,-0.02,0]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;pivot&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If &lt;code&gt;true&lt;/code&gt;, the bone becomes a free-hanging bone along the Y-axis. This means that the parent's X/Z rotations are automatically compensated. Use with caution, as this requires additional computational effort, and the &lt;code&gt;limits&lt;/code&gt; do not apply as usual. OPTIONAL, default &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;excludes&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Sets one or more spherical excluded zones that act as invisible force fields, limiting the movement of the bone. An array of objects in the format &lt;code&gt;{ bone, deltaLocal, radius}&lt;/code&gt; in which &lt;code&gt;bone&lt;/code&gt; specifies the center bone name, &lt;code&gt;deltaLocal&lt;/code&gt; (optional) offset [x,y,z] relative to center bone, and &lt;code&gt;radius&lt;/code&gt; in meters. OPTIONAL, default &lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&amp;nbsp;&lt;code&gt;[ { bone: "Head", deltaLocal: [0,0.05,0.02], radius: 0.13 } ]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;helper&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If &lt;code&gt;true&lt;/code&gt;, add a helper object to the scene to assist with visualizing the bone during testing. If the dynamic bone type is "point", displays only a square, otherwise also the line from parent to the bone. OPTIONAL, default &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;p&gt;Finding a good combination of &lt;code&gt;stiffness&lt;/code&gt;, &lt;code&gt;damping&lt;/code&gt;, and &lt;code&gt;external&lt;/code&gt;, is mostly a matter of trial and error. Turn on the helper property or use the test app to fine-tune the settings while running animations typical to your use case.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] For dynamic bones of type &lt;code&gt;"point"&lt;/code&gt;, you can simulate gravity by applying a &lt;code&gt;deltaWorld&lt;/code&gt; translation down the Y-axis and compensating for the initial stretch in the rest pose by applying &lt;code&gt;deltaLocal&lt;/code&gt; translation up the Y-axis.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix F: Controlling Blendshapes Directly (Advanced)&lt;/h3&gt; 
&lt;p&gt;The TalkingHead class provides basic facial expressions and animations by controlling the 3D avatar's blendshapes (a.k.a. morph targets). It also possible to control these blendshapes directly from your app. Below are some of the available approaches, with simple code examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;code&gt;setFixedValue&lt;/code&gt; method to smoothly transition from the current blendshape value to some fixed value. The fixed value will override all other methods as well as internal/external animations. To return back to normal operation, set the fixed value to &lt;code&gt;null&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;head.setFixedValue("jawOpen",1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use the &lt;code&gt;realtime&lt;/code&gt; value of the &lt;code&gt;head.mtAvatar&lt;/code&gt; property to set the blend shape value without any smooth transition. This is useful for cases like face landmark detection, where you need to stay in sync with real-time input. To return back to normal operation, set the realtime value to &lt;code&gt;null&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;Object.assign( head.mtAvatar["jawOpen"],{ realtime: 1, needsUpdate: true });
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add an animation template object &lt;code&gt;anim&lt;/code&gt; to the audio data in &lt;code&gt;speakAudio&lt;/code&gt; to drive blendshapes in sync with audio playback. This is especially useful when using facial animation data from external sources (e.g., Azure TTS 3D blendshapes or motion capture) and want to play it alongside spoken audio:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;head.speakAudio({
  audio: audio,
  anim: {
    name: "blendshapes",
    dt: [ 33, 33, 33, ... ],  // durations in milliseconds for each frame
    vs: { // Blend shape keys and values for each frame
      "jawOpen": [ 0, 0.2, 0.4, ... ],
      "mouthRollLower": [ 0, 0.05, 0.1, ... ],
      // ... additional blendshape keys
    }
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See a full code example using Azure blendshape output &lt;a href="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/examples/azure-blendshapes.html"&gt;here&lt;/a&gt;. - &lt;strong&gt;Note&lt;/strong&gt;: Azure's output relies solely on ARKit blendshapes and is not optimized for RPM avatars. As a result, the quality of lip-sync may be less natural compared to using Oculus visemes and the TalkingHead's internal lip-sync language module. For example, the mouth may open too widely, or the lips may fail to touch for certain phonemes they should.&lt;/p&gt; 
&lt;p&gt;See also the next Appendix G for how to stream audio with lip-sync.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix G: Streaming Audio and Lip-sync (Advanced)&lt;/h3&gt; 
&lt;p&gt;This low-level streaming interface is designed for real-time scenarios, such as speech-to-speech or live TTS integrations where latency must be minimized. Use this interface if you require direct, chunked audio playback and on-the-fly lip-sync updates. You can, for instance, integrate a real-time TTS pipeline (like Azure Speech SDK or another live audio source) that continuously streams audio and word/viseme data into TalkingHead.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; The calling application must handle all aspects of managing and synchronizing the data streams (e.g., facial expressions, eye contact, hand gestures), as well as preventing concurrency issues and buffering multiple sources. The system is designed to handle one stream at a time.&lt;/p&gt; 
&lt;h4&gt;Stream Session Reusability&lt;/h4&gt; 
&lt;p&gt;Once a streaming session is started with &lt;code&gt;streamStart()&lt;/code&gt;, the session remains active and reusable until explicitly ended with &lt;code&gt;streamStop()&lt;/code&gt;. You can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Natural completion&lt;/strong&gt;: Call &lt;code&gt;streamNotifyEnd()&lt;/code&gt; after streaming all data with &lt;code&gt;streamAudio()&lt;/code&gt; to signal the end of an utterance. The session remains active for reuse.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Interruption&lt;/strong&gt;: Call &lt;code&gt;streamInterrupt()&lt;/code&gt; to immediately stop ongoing audio and lip-sync. The session remains active for reuse.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reconfiguration&lt;/strong&gt;: Call &lt;code&gt;streamStart()&lt;/code&gt; again at any time to reconfigure the session with new options.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Session termination&lt;/strong&gt;: Call &lt;code&gt;streamStop()&lt;/code&gt; to completely end the streaming session.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;API Overview&lt;/h4&gt; 
&lt;h5&gt;1. &lt;code&gt;streamStart(opt={}, onAudioStart, onAudioEnd, onSubtitles, onMetrics)&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Enters streaming mode using an &lt;code&gt;AudioWorklet&lt;/code&gt; for low-latency playback. Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;opt&lt;/code&gt; &lt;em&gt;(object, optional)&lt;/em&gt; – Settings controlling streaming behavior: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;sampleRate&lt;/code&gt; – A number in the range [8000, 96000].&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;gain&lt;/code&gt; – Sets the playback gain (volume) for the streaming audio.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;lipsyncLang&lt;/code&gt; – Specifies lip-sync language if you want viseme generation using words. Defaults to avatar &lt;code&gt;lipsyncLang&lt;/code&gt;, or to options &lt;code&gt;lipsyncLang&lt;/code&gt; value.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;lipsyncType&lt;/code&gt; – Specifies lip-sync data type. Can take one of the values &lt;code&gt;visemes&lt;/code&gt; (default), &lt;code&gt;blendshapes&lt;/code&gt;, and &lt;code&gt;words&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;waitForAudioChunks&lt;/code&gt; – Boolean (default: &lt;code&gt;true&lt;/code&gt;). If &lt;code&gt;false&lt;/code&gt;, lip-sync will play immediately without waiting for audio chunks. This can be used to play lip-sync without audio.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;mood&lt;/code&gt; – Sets avatar mood upon starting the stream.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;metrics&lt;/code&gt; – Used for in development performance monitoring: &lt;code&gt;{enabled: true, intervalHz: 2}&lt;/code&gt;. Enables queue depth and underrun tracking in the audio worklet. Do not set in production.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onAudioStart&lt;/code&gt; &lt;em&gt;(function, optional)&lt;/em&gt; – Callback invoked the moment audio playback starts.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onAudioEnd&lt;/code&gt; &lt;em&gt;(function, optional)&lt;/em&gt; – Callback invoked automatically once audio playback concludes.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onSubtitles&lt;/code&gt; &lt;em&gt;(function, optional)&lt;/em&gt; – Callback to handle showing subtitle text.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onMetrics&lt;/code&gt; &lt;em&gt;(function, optional)&lt;/em&gt; – Callback receiving performance monitoring data: queue depth, underruns, playback state.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Upon calling &lt;code&gt;streamStart&lt;/code&gt;, all queued speech (&lt;code&gt;speakText&lt;/code&gt;, &lt;code&gt;speakAudio&lt;/code&gt;) is stopped, the engine enters streaming mode, and the avatar prepares for real-time lip-sync. You can then feed audio via &lt;code&gt;streamAudio()&lt;/code&gt;. The session remains active until &lt;code&gt;streamStop()&lt;/code&gt; is called.&lt;/p&gt; 
&lt;h5&gt;2. &lt;code&gt;streamAudio(r)&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Sends one chunk of PCM audio data (16-bit little-endian) plus lip-sync data. Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;r.audio&lt;/code&gt; – An &lt;code&gt;ArrayBuffer&lt;/code&gt; or typed array of &lt;strong&gt;16-bit LE PCM&lt;/strong&gt; samples. These are played immediately.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;r.visemes&lt;/code&gt;, &lt;code&gt;r.vtimes&lt;/code&gt;, &lt;code&gt;r.vdurations&lt;/code&gt; &lt;em&gt;(optional)&lt;/em&gt; – Directly schedule lip-sync visemes at specific times with specific durations. This is the default type of lip-sync data.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;r.words&lt;/code&gt;, &lt;code&gt;r.wtimes&lt;/code&gt;, &lt;code&gt;r.wdurations&lt;/code&gt; &lt;em&gt;(optional)&lt;/em&gt; – Per-word timings and durations (e.g. TTS), allowing the library to create subtitles and/or calculate visemes if the &lt;code&gt;lipsyncType&lt;/code&gt; option is set to &lt;code&gt;words&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;r.anims&lt;/code&gt; &lt;em&gt;(optional)&lt;/em&gt; – An array of blendshape animations that play in sync with the audio. Requires setting &lt;code&gt;lipsyncType&lt;/code&gt; option to &lt;code&gt;blendshapes&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each call to &lt;code&gt;streamAudio()&lt;/code&gt; schedules an immediate chunk for playback and any included lip-sync or subtitle data on the animation timeline. Include only lip-sync data as specified in the &lt;code&gt;lipsyncType&lt;/code&gt; option via the &lt;code&gt;streamStart&lt;/code&gt; call. You can include any number of visemes, anims, or words which are not necessarily associated with the included audio chunk. You need to buffer the lip-sync data in the application and send it alongside the audio chunks.&lt;/p&gt; 
&lt;h5&gt;3. &lt;code&gt;streamNotifyEnd()&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Signals that no more chunks are expected for the current streaming utterance. Playback stops automatically once queued audio finishes. This is useful for gracefully concluding real-time TTS streams when your pipeline has no additional data to send. The streaming session remains active and can be reused by calling &lt;code&gt;streamAudio()&lt;/code&gt; again.&lt;/p&gt; 
&lt;h5&gt;4. &lt;code&gt;streamInterrupt()&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Immediately interrupts any ongoing audio playback and lip-sync animations in the streaming session. This method stops the current utterance but keeps the streaming session active for reuse. You can continue using the session by calling &lt;code&gt;streamAudio()&lt;/code&gt; again after interruption.&lt;/p&gt; 
&lt;h5&gt;5. &lt;code&gt;streamStop()&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Forces an immediate end to the streaming session. All queued audio and lip-sync animations are cleared, the avatar reverts to its idle state, and the audio worklet is disconnected and cleaned up. To start streaming again after calling &lt;code&gt;streamStop()&lt;/code&gt;, you must call &lt;code&gt;streamStart()&lt;/code&gt; to create a new session.&lt;/p&gt; 
&lt;h4&gt;Example Usage&lt;/h4&gt; 
&lt;p&gt;Refer to the example provided in the repository &lt;code&gt;azure-audio-streaming.html&lt;/code&gt; on how to integrate this interface with Azure TTS streamed audio.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix H: Avatar-Only Mode (EXPERIMENTAL)&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] This is still an experimental feature, so expect rapid changes.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;By default, the TalkingHead class operates in standalone mode, creating its own 3D scene, renderer, lights, and other 3D components. If you already have your own 3D scene, you can create an avatar-only instance and call the &lt;code&gt;head.animate(dt)&lt;/code&gt; update function from within your own renderer. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Create avatarOnly instance and load
const head = new TalkingHead( container, {
  /* ... */
  avatarOnly: true, // set avatarOnly mode
  avatarOnlyCamera: camera // Your camera avatar talks to
});
await head.showAvatar({ /* ... */ });

// Add to your own scene
head.armature.position.set(1,0,0);
head.armature.rotation.set(0,0.5,0);
scene.add(head.armature);

// You own animation loop
const clock = new THREE.Clock();
function animate() {
  const delta = clock.getDelta();
  head.animate(delta * 1000); // Update avatar
  renderer.render( scene, camera );
}
renderer.setAnimationLoop(animate);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also add &lt;code&gt;avatarOnly&lt;/code&gt; armatures to your standalone TalkingHead scene to have multiple avatars in one scene. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;let headStandalone, headAvatarOnly;

// Standalone instance
headStandalone = new TalkingHead( container, {
  /* ... */
  update: (dt) =&amp;gt; { headAvatarOnly?.animate(dt); }
});
await headStandalone.showAvatar({ /* ... */ });

// avatarOnly instance
headAvatarOnly = new TalkingHead( container, {
  /* ... */
  avatarOnly: true, // set avatarOnly mode
  avatarOnlyCamera: headStandalone.camera // Standalone camera
});
await headAvatarOnly.showAvatar({ /* ... */ });

// Add avatarOnly to standalone scene
headAvatarOnly.armature.position.set(1,0,0);
headStandalone.scene.add( headAvatarOnly.armature );
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want one TalkingHead avatar to speak to another, set its &lt;code&gt;speakTo&lt;/code&gt; property. The value can be another TalkingHead instance, any 3D object, or a world position. For example, to make two avatars talk to each other:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;headAvatarOnly.speakTo = headStandalone;
headStandalone.speakTo = headAvatarOnly;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want the avatar to address the user again, set &lt;code&gt;speakTo&lt;/code&gt; value to &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>evershopcommerce/evershop</title>
      <link>https://github.com/evershopcommerce/evershop</link>
      <description>&lt;p&gt;🛍️ Typescript E-commerce Platform&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="60" height="68" alt="EverShop Logo" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/logo-green.png" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;EverShop&lt;/h1&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://evershop.io/docs/development/getting-started/introduction"&gt;Documentation&lt;/a&gt; | &lt;a href="https://demo.evershop.io/"&gt;Demo&lt;/a&gt; &lt;/h4&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/evershopcommerce/evershop/actions/workflows/build_test.yml/badge.svg?sanitize=true" alt="Github Action" /&gt; &lt;a href="https://twitter.com/evershopjs"&gt; &lt;img alt="Twitter Follow" src="https://img.shields.io/twitter/follow/evershopjs?style=social" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/GSzt7dt7RM"&gt; &lt;img src="https://img.shields.io/discord/757179260417867879?label=discord" alt="Discord" /&gt; &lt;/a&gt; &lt;a href="https://opensource.org/licenses/GPL-3.0"&gt; &lt;img src="https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true" alt="License" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="EverShop" width="950" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/banner.png" /&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;EverShop is a modern, TypeScript-first eCommerce platform built with GraphQL and React. Designed for developers, it offers essential commerce features in a modular, fully customizable architecture—perfect for building tailored shopping experiences with confidence and speed.&lt;/p&gt; 
&lt;h2&gt;Installation Using Docker&lt;/h2&gt; 
&lt;p&gt;You can get started with EverShop in minutes by using the Docker image. The Docker image is a great way to get started with EverShop without having to worry about installing dependencies or configuring your environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL https://raw.githubusercontent.com/evershopcommerce/evershop/main/docker-compose.yml &amp;gt; docker-compose.yml
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the full installation guide, please refer to our &lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/module/create-your-first-extension"&gt;Extension development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/theme/theme-overview"&gt;Theme development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Explore our demo store.&lt;/p&gt; 
&lt;p align="left"&gt; &lt;a href="https://demo.evershop.io/admin" target="_blank"&gt; &lt;img alt="EverShop Admin Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-back.png" /&gt; &lt;/a&gt; &lt;a href="https://demo.evershop.io/" target="_blank"&gt; &lt;img alt="EverShop Store Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-front.png" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;b&gt;Demo user:&lt;/b&gt; 
&lt;p&gt;Email: &lt;a href="mailto:demo@evershop.io"&gt;demo@evershop.io&lt;/a&gt;&lt;br /&gt; Password: 123456&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you like my work, feel free to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;⭐ this repository. It helps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fevershopcommerce%2Fevershop&amp;amp;text=Awesome%20React%20Ecommerce%20Project&amp;amp;hashtags=react,ecommerce,expressjs,graphql"&gt;&lt;img src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" alt="Tweet" /&gt;&lt;/a&gt; about EverShop. Thank you!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;EverShop is an open-source project. We are committed to a fully transparent development process and appreciate highly any contributions. Whether you are helping us fix bugs, proposing new features, improving our documentation or spreading the word - we would love to have you as part of the EverShop community.&lt;/p&gt; 
&lt;h3&gt;Ask a question about EverShop&lt;/h3&gt; 
&lt;p&gt;You can ask questions, and participate in discussions about EverShop-related topics in the EverShop Discord channel.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/GSzt7dt7RM"&gt;&lt;img src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/discord_banner_github.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create a bug report&lt;/h3&gt; 
&lt;p&gt;If you see an error message or run into an issue, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;create bug report&lt;/a&gt;. This effort is valued and it will help all EverShop users.&lt;/p&gt; 
&lt;h3&gt;Submit a feature request&lt;/h3&gt; 
&lt;p&gt;If you have an idea, or you're missing a capability that would make development easier and more robust, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;Submit feature request&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If a similar feature request already exists, don't forget to leave a "+1". If you add some more information such as your thoughts and vision about the feature, your comments will be embraced warmly :)&lt;/p&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/evershopcommerce/evershop/raw/main/LICENSE"&gt;GPL-3.0 License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mickael-kerjean/filestash</title>
      <link>https://github.com/mickael-kerjean/filestash</link>
      <description>&lt;p&gt;📁 A file manager / web client for SFTP, S3, FTP, WebDAV, Git, Minio, LDAP, CalDAV, CardDAV, Mysql, Backblaze, ...&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/mickael-kerjean/filestash_images/master/.assets/photo.jpg" alt="screenshot" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/mickael-kerjean/contributors" alt="Contributors"&gt; &lt;img src="https://img.shields.io/github/contributors/mickael-kerjean/filestash" style="max-width:100%;" /&gt; &lt;/a&gt; &lt;a href="https://hub.docker.com/r/machines/filestash" alt="Docker Hub"&gt; &lt;img src="https://img.shields.io/docker/pulls/machines/filestash" style="max-width:100%;" /&gt; &lt;/a&gt; &lt;a href="https://kiwiirc.com/nextclient/#irc://irc.libera.chat/#filestash?nick=guest??" alt="Chat on IRC"&gt; &lt;img src="https://img.shields.io/badge/IRC-%23filestash-brightgreen.svg?sanitize=true" style="max-width:100%;" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; A Dropbox-like file manager that let you manage your data anywhere it is located:&lt;br /&gt; &lt;a href="https://www.filestash.app/ftp-client.html"&gt;FTP&lt;/a&gt; • &lt;a href="https://www.filestash.app/ftp-client.html"&gt;FTPS&lt;/a&gt; • &lt;a href="https://www.filestash.app/ssh-file-transfer.html"&gt;SFTP&lt;/a&gt; • &lt;a href="https://www.filestash.app/webdav-client.html"&gt;WebDAV&lt;/a&gt; • Git • &lt;a href="https://www.filestash.app/s3-browser.html"&gt;S3&lt;/a&gt; • NFS • &lt;a href="https://www.filestash.app/smb-client.html"&gt;SMB&lt;/a&gt; • Artifactory • &lt;a href="https://www.filestash.app/ldap-browser.html"&gt;LDAP&lt;/a&gt; • Mysql &lt;br /&gt; Storj • CardDAV • CalDAV • Backblaze B2 • &lt;a href="https://www.filestash.app/s3-browser.html"&gt;Minio&lt;/a&gt; &lt;br /&gt;Dropbox • Google Drive &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="http://demo.filestash.app"&gt; &lt;img src="https://raw.githubusercontent.com/mickael-kerjean/filestash_images/master/.assets/button_demo.png" alt="demo button" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;Key Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Manage files from your browser&lt;/li&gt; 
 &lt;li&gt;Sleek, Speedy, Snappy, works great on Desktop and Mobile&lt;/li&gt; 
 &lt;li&gt;Extensible / Customisable / Hackable via a rich ecosystem of plugins&lt;/li&gt; 
 &lt;li&gt;Shared Links which you can mount locally as network drives&lt;/li&gt; 
 &lt;li&gt;Builtin Music, Video, Image viewers with optional transcoding and Chromecast support&lt;/li&gt; 
 &lt;li&gt;API and LLM integration via &lt;a href="https://www.filestash.app/docs/api/#mcp"&gt;MCP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.filestash.app/docs/plugin/#theme"&gt;Themes&lt;/a&gt; replicating the UX of &lt;a href="https://www.filestash.app/img/screenshots/theme_dropbox.png"&gt;dropbox&lt;/a&gt;, &lt;a href="https://www.filestash.app/img/screenshots/theme_gdrive.png"&gt;gdrive&lt;/a&gt;, &lt;a href="https://www.filestash.app/img/screenshots/theme_github.png"&gt;github&lt;/a&gt;, &lt;a href="https://www.filestash.app/img/screenshots/theme_ibm.png"&gt;ibm&lt;/a&gt;, &lt;a href="https://www.filestash.app/img/screenshots/theme_onedrive.png"&gt;onedrive&lt;/a&gt;, &lt;a href="https://www.filestash.app/img/screenshots/theme_untitled.png"&gt;and more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;... and much &lt;sub&gt;much &lt;sub&gt;much&lt;/sub&gt;&lt;/sub&gt; more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.filestash.app/docs/"&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.filestash.app/docs/install-and-upgrade/"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.filestash.app/docs/api/#api"&gt;API&lt;/a&gt; and &lt;a href="https://www.filestash.app/docs/api/#mcp"&gt;MCP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.filestash.app/docs/plugin/"&gt;Plugins Inventory&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://downloads.filestash.app/upload/hardening-guide.pdf"&gt;Hardening Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Vision &amp;amp; Philosophy&lt;/h1&gt; 
&lt;p&gt;Our goal is simple: &lt;strong&gt;to build the best web based file manager ever made. Period.&lt;/strong&gt; But "best" means different things to different people, and making Filestash modular is the only sane model to accomplish that. Anything that isn't a fundamental truth of the universe and might spark a debate belongs in a plugin.&lt;/p&gt; 
&lt;p&gt;This modularity is made possible by the magic of programming interfaces. For example, if you want a &lt;a href="https://news.ycombinator.com/item?id=9224"&gt;Dropbox-like frontend for FTP&lt;/a&gt;, you will find out the &lt;a href="https://github.com/mickael-kerjean/filestash/tree/master/server/plugin/plg_backend_ftp"&gt;FTP plugin&lt;/a&gt; simply implements this interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type IBackend interface {
	Ls(path string) ([]os.FileInfo, error)           // list files in a folder
	Cat(path string) (io.ReadCloser, error)          // download a file
	Mkdir(path string) error                         // create a folder
	Rm(path string) error                            // remove something
	Mv(from string, to string) error                 // rename something
	Save(path string, file io.Reader) error          // save a file
	Touch(path string) error                         // create a file

	// I have omitted 2 other methods, a first one to enable connections reuse and
	// another one to declare what should the login form be like.
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are interfaces you can implement for every key component of Filestash: from storage, to authentication, authorisation, custom apps, search, thumbnailing, frontend patches, middleware, endpoint creation and a &lt;a href="https://github.com/mickael-kerjean/filestash/raw/master/server/common/plugin.go"&gt;few others&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To see what's currently installed in your instance, head over to &lt;a href="https://demo.filestash.app/about"&gt;/about&lt;/a&gt;. The inventory of plugins is &lt;a href="https://www.filestash.app/docs/plugin/"&gt;documented here&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Roadmap&lt;/h1&gt; 
&lt;p&gt;There are 2 major pieces of work currently underway:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Making Filestash able to open virtually anything. Thanks to plugin, we're adding support for files your browser has never heard of, from astrophysics to embroidery patterns. Concretly we have added support for: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://demo.filestash.app/assets/plugin/application_photography.zip"&gt;photography&lt;/a&gt;: heif, nef, raf, tiff, raw, arw, sr2, srf, nrw, cr2, crw, x3f, pef, rw2, orf, mrw, mdc, mef, mos, dcr, kdc, 3fr, erf and srw&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://demo.filestash.app/assets/plugin/application_photography.zip"&gt;astronomy&lt;/a&gt;: fits, xisf&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://demo.filestash.app/assets/plugin/application_science.zip"&gt;science&lt;/a&gt;: with latex, plantuml &amp;amp; pandoc compilers&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://demo.filestash.app/assets/plugin/application_musician.zip"&gt;music&lt;/a&gt;: mid, midi, gp4 and gp5&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://demo.filestash.app/assets/plugin/application_gis.zip"&gt;GIS&lt;/a&gt;: &lt;a href="https://www.filestash.app/tools/geojson-viewer.html"&gt;geojson&lt;/a&gt;, &lt;a href="https://www.filestash.app/tools/shp-viewer.html"&gt;shp&lt;/a&gt;, gpx, wms and &lt;a href="https://www.filestash.app/tools/dbf-viewer.html"&gt;dbf&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://demo.filestash.app/assets/plugin/application_engineering.zip"&gt;data engineering&lt;/a&gt;: &lt;a href="https://www.filestash.app/tools/parquet-viewer.html"&gt;parquet&lt;/a&gt;, &lt;a href="https://www.filestash.app/tools/arrow-viewer.html"&gt;arrow&lt;/a&gt;, &lt;a href="https://www.filestash.app/tools/feather-viewer.html"&gt;feather&lt;/a&gt;, &lt;a href="https://www.filestash.app/tools/avro-viewer.html"&gt;avro&lt;/a&gt;, &lt;a href="https://www.filestash.app/tools/orc-viewer.html"&gt;orc&lt;/a&gt;, hdf5, h5, netcdf, nc, rds, rda and rdata&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://demo.filestash.app/assets/plugin/application_dev.zip"&gt;dev&lt;/a&gt;: a, so, o, dylib, dll, har, cap, pcap, pcapng and &lt;a href="https://www.filestash.app/tools/sqlite-viewer.html"&gt;sqlite&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://demo.filestash.app/assets/plugin/application_creative.zip"&gt;creative work&lt;/a&gt;: svg, &lt;a href="https://www.filestash.app/tools/psd-viewer.html"&gt;psd&lt;/a&gt;, ai, &lt;a href="https://www.filestash.app/tools/sketch-viewer.html"&gt;sketch&lt;/a&gt;, &lt;a href="https://www.filestash.app/tools/cdr-viewer.html"&gt;cdr&lt;/a&gt;, woff, woff2, ttf, otf, eot, exr, tga, pgm, ppm, dds, ktx, dpx, pcx, xpm, pnm, xbm, aai, xwd, cin, pbm, pcd, sgi, wbmp and rgb&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://demo.filestash.app/assets/plugin/application_biomed.zip"&gt;biomedical&lt;/a&gt;: dicom, sam, bam, cif, pdb, xyz, sdf, mol, mol2 and mmtf&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://demo.filestash.app/assets/plugin/application_autodesk.zip"&gt;autodesk&lt;/a&gt;: &lt;a href="https://www.filestash.app/tools/dwg-viewer.html"&gt;dwg&lt;/a&gt; and &lt;a href="https://www.filestash.app/tools/dxf-viewer.html"&gt;dxf&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://demo.filestash.app/assets/plugin/application_adobe.zip"&gt;adobe&lt;/a&gt;: &lt;a href="https://www.filestash.app/tools/psd-viewer.html"&gt;psd&lt;/a&gt;, ai, &lt;a href="https://www.filestash.app/tools/xd-viewer.html"&gt;xd&lt;/a&gt;, &lt;a href="https://www.filestash.app/tools/dng-viewer.html"&gt;dng&lt;/a&gt;, &lt;a href="https://www.filestash.app/tools/eps-viewer.html"&gt;postscript&lt;/a&gt;, aco, ase, swf&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://demo.filestash.app/assets/plugin/application_3d.zip"&gt;3d&lt;/a&gt;: fbx, gltf, obj, stl, step, mesh, ifc, dae&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://demo.filestash.app/assets/plugin/application_embroidery.zip"&gt;embroidery&lt;/a&gt;: dgt, dst, dsb, dsz, edr, exp, 10o, col, hus, inf, jef, ksm, pcm, pcs, pes, sew, shv, sst, tap, u01, vip, vp3 and xxx&lt;/li&gt; 
   &lt;li&gt;there is more to come as we stumbled upon new niches and spend time talking to real people.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Getting to v1.0. Filestash is already rock solid, it has been in active development for over 8 years. But the bar for v1.0 will be reached when Filestash is objectively better than Dropbox, Google Drive, and Box by every single measurable metric we care about. That's the mission.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;Support&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Commercial Users → &lt;a href="https://www.filestash.app/pricing/?origin=github"&gt;support contract&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;For individuals → &lt;a href="https://kiwiirc.com/nextclient/#irc://irc.libera.chat/#filestash?nick=guest??"&gt;#filestash&lt;/a&gt; on IRC (libera.chat).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Want to help us sprinkle some toppings on our noodle cups?&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bitcoin: &lt;code&gt;3LX5KGmSmHDj5EuXrmUvcg77EJxCxmdsgW&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://opencollective.com/filestash"&gt;Open Collective&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Credits&lt;/h1&gt; 
&lt;p&gt;Filestash stands on the shoulder of: &lt;a href="https://github.com/mickael-kerjean/filestash/graphs/contributors"&gt;contributors&lt;/a&gt;, folks developing &lt;a href="https://github.com/mickael-kerjean/filestash/raw/master/go.mod"&gt;awesome libraries&lt;/a&gt;, a whole bunch of C stuff (the &lt;a href="https://imgs.xkcd.com/comics/dependency.png"&gt;C standard library&lt;/a&gt;, &lt;a href="https://libjpeg-turbo.org/"&gt;libjpeg&lt;/a&gt;, &lt;a href="https://www.libpng.org/pub/png/libpng.html"&gt;libpng&lt;/a&gt;, &lt;a href="https://giflib.sourceforge.net/"&gt;libgif&lt;/a&gt;, &lt;a href="https://www.libraw.org/about"&gt;libraw&lt;/a&gt; and many more), &lt;a href="https://fontawesome.com"&gt;fontawesome&lt;/a&gt;, &lt;a href="https://material.io/icons/"&gt;material&lt;/a&gt;, &lt;a href="https://www.browserstack.com/"&gt;Browser stack&lt;/a&gt; to let us test on real devices, and the many guys from Nebraska and elsewhere who have been thanklessly maintaining the critical pieces that Filestash sits on top:&lt;/p&gt; 
&lt;img src="https://imgs.xkcd.com/comics/dependency.png" alt="credit to the nebraska guy on xkcd" /&gt;</description>
    </item>
    
    <item>
      <title>anuraghazra/github-readme-stats</title>
      <link>https://github.com/anuraghazra/github-readme-stats</link>
      <description>&lt;p&gt;⚡ Dynamically generated stats for your github readmes&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img width="100px" src="https://res.cloudinary.com/anuraghazra/image/upload/v1594908242/logo_ccswme.svg?sanitize=true" align="center" alt="GitHub Readme Stats" /&gt; &lt;/p&gt;
&lt;h2 align="center"&gt;GitHub Readme Stats&lt;/h2&gt; 
&lt;p align="center"&gt;Get dynamically generated GitHub stats on your READMEs!&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/actions"&gt; &lt;img alt="Tests Passing" src="https://github.com/anuraghazra/github-readme-stats/workflows/Test/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/graphs/contributors"&gt; &lt;img alt="GitHub Contributors" src="https://img.shields.io/github/contributors/anuraghazra/github-readme-stats" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/anuraghazra/github-readme-stats"&gt; &lt;img alt="Tests Coverage" src="https://codecov.io/gh/anuraghazra/github-readme-stats/branch/master/graph/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues"&gt; &lt;img alt="Issues" src="https://img.shields.io/github/issues/anuraghazra/github-readme-stats?color=0088ff" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/pulls"&gt; &lt;img alt="GitHub pull requests" src="https://img.shields.io/github/issues-pr/anuraghazra/github-readme-stats?color=0088ff" /&gt; &lt;/a&gt; &lt;a href="https://securityscorecards.dev/viewer/?uri=github.com/anuraghazra/github-readme-stats"&gt; &lt;img alt="OpenSSF Scorecard" src="https://api.securityscorecards.dev/projects/github.com/anuraghazra/github-readme-stats/badge" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://vercel.com?utm\_source=github\_readme\_stats\_team\&amp;amp;utm\_campaign=oss"&gt; &lt;img src="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#all-demos"&gt;View Demo&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.yml"&gt;Report Bug&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.yml"&gt;Request Feature&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/1770"&gt;FAQ&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/new?category=q-a"&gt;Ask Question&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt;Love the project? Please consider &lt;a href="https://www.paypal.me/anuraghazra"&gt;donating&lt;/a&gt; to help it improve!&lt;/p&gt; 
&lt;a href="https://indiafightscorona.giveindia.org"&gt; &lt;img src="https://cfstatic.give.do/logo.png" alt="Give india logo" width="200" /&gt; &lt;/a&gt; 
&lt;p&gt;Are you considering supporting the project by donating to me? Please DO NOT!!!&lt;/p&gt; 
&lt;img src="https://cfstatic.give.do/910ede2a-7892-43fe-8c8a-dea45e96d950.webp" alt="Picture of Coromandel Express train tragedy" width="35%" /&gt; 
&lt;p&gt;India has recently suffered one of the most devastating train accidents, and your help will be immensely valuable for the people who were affected by this tragedy.&lt;/p&gt; 
&lt;p&gt;Please visit &lt;a href="https://give.do/fundraisers/stand-beside-the-victims-of-the-coromandel-express-train-tragedy-in-odisha-donate-now"&gt;this link&lt;/a&gt; and make a small donation to help the people in need. A small donation goes a long way. &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h1&gt;Features 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-stats-card"&gt;GitHub Stats Card&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hiding-individual-stats"&gt;Hiding individual stats&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-additional-individual-stats"&gt;Showing additional individual stats&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-icons"&gt;Showing icons&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes"&gt;Themes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization"&gt;Customization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-extra-pins"&gt;GitHub Extra Pins&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-gist-pins"&gt;GitHub Gist Pins&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage-1"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-1"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#top-languages-card"&gt;Top Languages Card&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage-2"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#exclude-individual-repositories"&gt;Exclude individual repositories&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-individual-languages"&gt;Hide individual languages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#show-more-languages"&gt;Show more languages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#compact-language-card-layout"&gt;Compact Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#donut-chart-language-card-layout"&gt;Donut Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#donut-vertical-chart-language-card-layout"&gt;Donut Vertical Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#pie-chart-language-card-layout"&gt;Pie Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-progress-bars"&gt;Hide Progress Bars&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-2"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#wakatime-stats-card"&gt;WakaTime Stats Card&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-3"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#all-demos"&gt;All Demos&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#quick-tip-align-the-cards"&gt;Quick Tip (Align The Cards)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;Deploy on your own&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#on-vercel"&gt;On Vercel&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#film_projector-check-out-step-by-step-video-tutorial-by-codestackr"&gt;&lt;span&gt;📽&lt;/span&gt; Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#on-other-platforms"&gt;On other platforms&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections"&gt;Disable rate limit protections&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#keep-your-fork-up-to-date"&gt;Keep your fork up to date&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#sparkling_heart-support-the-project"&gt;&lt;span&gt;💖&lt;/span&gt; Support the project&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Important Notices 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; Since the GitHub API only &lt;a href="https://docs.github.com/en/graphql/overview/resource-limitations"&gt;allows 5k requests per hour per user account&lt;/a&gt;, the public Vercel instance hosted on &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471"&gt;#1471&lt;/a&gt;). We use caching to prevent this from happening (see &lt;a href="https://github.com/anuraghazra/github-readme-stats#common-options"&gt;https://github.com/anuraghazra/github-readme-stats#common-options&lt;/a&gt;). You can turn off these rate limit protections by deploying &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections"&gt;your own Vercel instance&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img alt="Uptime Badge" src="https://img.shields.io/endpoint?url=https%3A%2F%2Fgithub-readme-stats-git-monitoring-github-readme-stats-team.vercel.app%2Fapi%2Fstatus%2Fup%3Ftype%3Dshields" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; We're a small team, and to prioritize, we rely on upvotes &lt;span&gt;👍&lt;/span&gt;. We use the Top Issues dashboard for tracking community demand (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1935"&gt;#1935&lt;/a&gt;). Do not hesitate to upvote the issues and pull requests you are interested in. We will work on the most upvoted first.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;GitHub Stats Card&lt;/h1&gt; 
&lt;p&gt;Copy and paste this into your markdown, and that's it. Simple!&lt;/p&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your GitHub username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; By default, the stats card only shows statistics like stars, commits, and pull requests from public repositories. To show private statistics on the stats card, you should &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; using your own GitHub API token.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Available ranks are S (top 1%), A+ (12.5%), A (25%), A- (37.5%), B+ (50%), B (62.5%), B- (75%), C+ (87.5%) and C (everyone). This ranking scheme is based on the &lt;a href="https://wikipedia.org/wiki/Academic_grading_in_Japan"&gt;Japanese academic grading&lt;/a&gt; system. The global percentile is calculated as a weighted sum of percentiles for each statistic (number of commits, pull requests, reviews, issues, stars, and followers), based on the cumulative distribution function of the &lt;a href="https://wikipedia.org/wiki/exponential_distribution"&gt;exponential&lt;/a&gt; and the &lt;a href="https://wikipedia.org/wiki/Log-normal_distribution"&gt;log-normal&lt;/a&gt; distributions. The implementation can be investigated at &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/master/src/calculateRank.js"&gt;src/calculateRank.js&lt;/a&gt;. The circle around the rank shows 100 minus the global percentile.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Hiding individual stats&lt;/h3&gt; 
&lt;p&gt;You can pass a query parameter &lt;code&gt;&amp;amp;hide=&lt;/code&gt; to hide any specific stats with comma-separated values.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;hide=stars,commits,prs,issues,contribs&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,prs)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing additional individual stats&lt;/h3&gt; 
&lt;p&gt;You can pass a query parameter &lt;code&gt;&amp;amp;show=&lt;/code&gt; to show any specific additional stats with comma-separated values.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing icons&lt;/h3&gt; 
&lt;p&gt;To enable icons, you can pass &lt;code&gt;&amp;amp;show_icons=true&lt;/code&gt; in the query param, like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;p&gt;With inbuilt themes, you can customize the look of the card without doing any &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization"&gt;manual customization&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;&amp;amp;theme=THEME_NAME&lt;/code&gt; parameter like so :&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;All inbuilt themes&lt;/h4&gt; 
&lt;p&gt;GitHub Readme Stats comes with several built-in themes (e.g. &lt;code&gt;dark&lt;/code&gt;, &lt;code&gt;radical&lt;/code&gt;, &lt;code&gt;merko&lt;/code&gt;, &lt;code&gt;gruvbox&lt;/code&gt;, &lt;code&gt;tokyonight&lt;/code&gt;, &lt;code&gt;onedark&lt;/code&gt;, &lt;code&gt;cobalt&lt;/code&gt;, &lt;code&gt;synthwave&lt;/code&gt;, &lt;code&gt;highcontrast&lt;/code&gt;, &lt;code&gt;dracula&lt;/code&gt;).&lt;/p&gt; 
&lt;img src="https://res.cloudinary.com/anuraghazra/image/upload/v1595174536/grs-themes_l4ynja.png" alt="GitHub Readme Stats Themes" width="600px" /&gt; 
&lt;p&gt;You can look at a preview for &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;all available themes&lt;/a&gt; or checkout the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/index.js"&gt;theme config file&lt;/a&gt;. Please note that we paused the addition of new themes to decrease maintenance efforts; all pull requests related to new themes will be closed.&lt;/p&gt; 
&lt;h4&gt;Responsive Card Theme&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats#responsive-card-theme#gh-dark-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only" alt="Anurag's GitHub stats-Dark" /&gt;&lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats#responsive-card-theme#gh-light-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only" alt="Anurag's GitHub stats-Light" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Since GitHub will re-upload the cards and serve them from their &lt;a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/about-anonymized-urls"&gt;CDN&lt;/a&gt;, we can not infer the browser/GitHub theme on the server side. There are, however, four methods you can use to create dynamics themes on the client side.&lt;/p&gt; 
&lt;h5&gt;Use the transparent theme&lt;/h5&gt; 
&lt;p&gt;We have included a &lt;code&gt;transparent&lt;/code&gt; theme that has a transparent background. This theme is optimized to look good on GitHub's dark and light default themes. You can enable this theme using the &lt;code&gt;&amp;amp;theme=transparent&lt;/code&gt; parameter like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=transparent)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=transparent" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Add transparent alpha channel to a themes bg_color&lt;/h5&gt; 
&lt;p&gt;You can use the &lt;code&gt;bg_color&lt;/code&gt; parameter to make any of &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;the available themes&lt;/a&gt; transparent. This is done by setting the &lt;code&gt;bg_color&lt;/code&gt; to a color with a transparent alpha channel (i.e. &lt;code&gt;bg_color=00000000&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;bg_color=00000000)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;bg_color=00000000" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Use GitHub's theme context tag&lt;/h5&gt; 
&lt;p&gt;You can use &lt;a href="https://github.blog/changelog/2021-11-24-specify-theme-context-for-images-in-markdown/"&gt;GitHub's theme context&lt;/a&gt; tags to switch the theme based on the user GitHub theme automatically. This is done by appending &lt;code&gt;#gh-dark-mode-only&lt;/code&gt; or &lt;code&gt;#gh-light-mode-only&lt;/code&gt; to the end of an image URL. This tag will define whether the image specified in the markdown is only shown to viewers using a light or a dark GitHub theme:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Anurag's GitHub stats-Dark](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only)
[![Anurag's GitHub stats-Light](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only" alt="Anurag's GitHub stats-Dark" /&gt;&lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only" alt="Anurag's GitHub stats-Light" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Use GitHub's new media feature&lt;/h5&gt; 
&lt;p&gt;You can use &lt;a href="https://github.blog/changelog/2022-05-19-specify-theme-context-for-images-in-markdown-beta/"&gt;GitHub's new media feature&lt;/a&gt; in HTML to specify whether to display images for light or dark themes. This is done using the HTML &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element in combination with the &lt;code&gt;prefers-color-scheme&lt;/code&gt; media feature.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;picture&amp;gt;
  &amp;lt;source
    srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark"
    media="(prefers-color-scheme: dark)"
  /&amp;gt;
  &amp;lt;source
    srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true"
    media="(prefers-color-scheme: light), (prefers-color-scheme: no-preference)"
  /&amp;gt;
  &amp;lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" /&amp;gt;
&amp;lt;/picture&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;picture&gt; 
  &lt;source srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark" media="(prefers-color-scheme: dark)" /&gt; 
  &lt;source srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" media="(prefers-color-scheme: light), (prefers-color-scheme: no-preference)" /&gt; 
  &lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" /&gt; 
 &lt;/picture&gt; 
&lt;/details&gt; 
&lt;h3&gt;Customization&lt;/h3&gt; 
&lt;p&gt;You can customize the appearance of all your cards however you wish with URL parameters.&lt;/p&gt; 
&lt;h4&gt;Common Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;title_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's title color.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;2f80ed&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;text_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Body text color.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;434d58&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;icon_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Icons color if available.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;4c71f2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;border_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's border color. Does not apply when &lt;code&gt;hide_border&lt;/code&gt; is enabled.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;e4e2e2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;bg_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's background color.&lt;/td&gt; 
   &lt;td&gt;string (hex color or a gradient in the form of &lt;em&gt;angle,start,end&lt;/em&gt;)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;fffefe&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_border&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the card's border.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;theme&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Name of the theme, choose from &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;all available themes&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;cache_seconds&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the cache header manually (min: 21600, max: 86400).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;21600&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the language in the card, you can check full list of available locales &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#available-locales"&gt;here&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;border_radius&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Corner rounding on the card.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;4.5&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; We use caching to decrease the load on our servers (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471#issuecomment-1271551425"&gt;https://github.com/anuraghazra/github-readme-stats/issues/1471#issuecomment-1271551425&lt;/a&gt;). Our cards have the following default cache hours: stats card - 24 hours, top languages card - 144 hours (6 days), pin card - 240 hours (10 days), gist card - 48 hours (2 days). If you want the data on your statistics card to be updated more often you can &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; and set &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections"&gt;environment variable&lt;/a&gt; &lt;code&gt;CACHE_SECONDS&lt;/code&gt; to a value of your choosing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;Gradient in bg_color&lt;/h5&gt; 
&lt;p&gt;You can provide multiple comma-separated values in the bg_color option to render a gradient with the following format:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;amp;bg_color=DEG,COLOR1,COLOR2,COLOR3...COLOR10
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Available locales&lt;/h5&gt; 
&lt;p&gt;Here is a list of all available locales:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;cn&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Chinese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;zh-tw&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Chinese (Taiwan)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ar&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Arabic&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;cs&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Czech&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;de&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;German&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;English&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;bn&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Bengali&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;es&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Spanish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;fr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;French&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;hu&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Hungarian&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;it&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Italian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ja&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Japanese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;kr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Korean&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;nl&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Dutch&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pt-pt&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Portuguese (Portugal)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pt-br&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Portuguese (Brazil)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;np&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Nepali&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;el&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Greek&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ru&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Russian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;uk-ua&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Ukrainian&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Indonesian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ml&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Malayalam&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;my&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Burmese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;sk&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Slovak&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;tr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Turkish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pl&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Polish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;uz&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Uzbek&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;vi&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Vietnamese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;se&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Swedish&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;If we don't support your language, please consider contributing! You can find more information about how to do it in our &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/CONTRIBUTING.md#translations-contribution"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Stats Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hiding-individual-stats"&gt;specified items&lt;/a&gt; from stats.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your stats card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;card_width&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the card's width manually.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;500px (approx.)&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_rank&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the rank and automatically resizes the card width.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;rank_icon&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows alternative rank icon (i.e. &lt;code&gt;github&lt;/code&gt;, &lt;code&gt;percentile&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_icons&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows icons near all stats.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;include_all_commits&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Count total commits instead of just the current year commits.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;line_height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the line height between text.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;exclude_repo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Excludes specified repositories.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;username&amp;gt; GitHub Stats&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;text_bold&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Uses bold text.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ring_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of the rank circle.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;2f80ed&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;number_format&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between two available formats for displaying the card values &lt;code&gt;short&lt;/code&gt; (i.e. &lt;code&gt;6.6k&lt;/code&gt;) and &lt;code&gt;long&lt;/code&gt; (i.e. &lt;code&gt;6626&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;short&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-additional-individual-stats"&gt;additional items&lt;/a&gt; on stats card (i.e. &lt;code&gt;reviews&lt;/code&gt;, &lt;code&gt;discussions_started&lt;/code&gt;, &lt;code&gt;discussions_answered&lt;/code&gt;, &lt;code&gt;prs_merged&lt;/code&gt; or &lt;code&gt;prs_merged_percentage&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; When hide_rank=&lt;code&gt;true&lt;/code&gt;, the minimum card width is 270 px + the title length and padding.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Repo Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_owner&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows the repo's owner name.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;description_lines_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Manually set the number of lines for the description. Specified value will be clamped between 1 and 3. If this parameter is not specified, the number of lines will be automatically adjusted according to the actual length of the description.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Gist Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_owner&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows the gist's owner name.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Language Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-individual-languages"&gt;specified languages&lt;/a&gt; from card.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;layout&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between five available layouts &lt;code&gt;normal&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt; &amp;amp; &lt;code&gt;donut&lt;/code&gt; &amp;amp; &lt;code&gt;donut-vertical&lt;/code&gt; &amp;amp; &lt;code&gt;pie&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;normal&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;card_width&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the card's width manually.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;300&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;langs_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows more languages on the card, between 1-20.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;5&lt;/code&gt; for &lt;code&gt;normal&lt;/code&gt; and &lt;code&gt;donut&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt; for other layouts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;exclude_repo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Excludes specified repositories.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Most Used Languages&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_progress&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Uses the compact layout option, hides percentages, and removes the bars.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;size_weight&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Configures language stats algorithm (see &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;count_weight&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Configures language stats algorithm (see &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Language names should be URI-escaped, as specified in &lt;a href="https://en.wikipedia.org/wiki/Percent-encoding"&gt;Percent Encoding&lt;/a&gt; (i.e: &lt;code&gt;c++&lt;/code&gt; should become &lt;code&gt;c%2B%2B&lt;/code&gt;, &lt;code&gt;jupyter notebook&lt;/code&gt; should become &lt;code&gt;jupyter%20notebook&lt;/code&gt;, etc.) You can use &lt;a href="https://www.urlencoder.org/"&gt;urlencoder.org&lt;/a&gt; to help you do this automatically.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;WakaTime Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the languages specified from the card.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;line_height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the line height between text.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_progress&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the progress bar and percentage.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WakaTime Stats&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;layout&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between two available layouts &lt;code&gt;default&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;langs_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Limits the number of languages on the card, defaults to all reported languages.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;api_domain&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom API domain for the card, e.g. to use services like &lt;a href="https://github.com/mujx/hakatime"&gt;Hakatime&lt;/a&gt; or &lt;a href="https://github.com/muety/wakapi"&gt;Wakapi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;wakatime.com&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;display_format&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the WakaTime stats display format. Choose &lt;code&gt;time&lt;/code&gt; to display time-based stats or &lt;code&gt;percent&lt;/code&gt; to show percentages.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;time&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h1&gt;GitHub Extra Pins&lt;/h1&gt; 
&lt;p&gt;GitHub extra pins allow you to pin more than 6 repositories in your profile using a GitHub readme profile.&lt;/p&gt; 
&lt;p&gt;Yay! You are no longer limited to 6 pinned repositories.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" alt="Readme Card" /&gt;&lt;/p&gt; 
&lt;p&gt;Use &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#repo-card-exclusive-options"&gt;show_owner&lt;/a&gt; query option to include the repo's owner username&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;show_owner=true" alt="Readme Card" /&gt;&lt;/p&gt; 
&lt;h1&gt;GitHub Gist Pins&lt;/h1&gt; 
&lt;p&gt;GitHub gist pins allow you to pin gists in your GitHub profile using a GitHub readme profile.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/gist?id=bbfce31e0217a3689c8d961a356cb10d&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Gist Card](https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d)](https://gist.github.com/Yizack/bbfce31e0217a3689c8d961a356cb10d/)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;p&gt;Use &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#gist-card-exclusive-options"&gt;show_owner&lt;/a&gt; query option to include the gist's owner username&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d&amp;amp;show_owner=true" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;h1&gt;Top Languages Card&lt;/h1&gt; 
&lt;p&gt;The top languages card shows a GitHub user's most frequently used languages.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; By default, the language card shows language results only from public repositories. To include languages used in private repositories, you should &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; using your own GitHub API token.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Top Languages does not indicate the user's skill level or anything like that; it's a GitHub metric to determine which languages have the most code on GitHub. It is a new feature of github-readme-stats.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; This card shows language usage only inside your own non-forked repositories, not depending on who the author of the commits is. It does not include your contributions into another users/organizations repositories. Currently there are no way to get this data from GitHub API. If you want this behavior to be improved you can support &lt;a href="https://github.com/orgs/community/discussions/18230"&gt;this feature request&lt;/a&gt; created by &lt;a href="https://github.com/rickstaa"&gt;@rickstaa&lt;/a&gt; inside GitHub Community.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Currently this card shows data only about first 100 repositories. This is because GitHub API limitations which cause downtimes of public instances (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471"&gt;#1471&lt;/a&gt;). In future this behavior will be improved by releasing GitHub action or providing environment variables for user's own instances.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/top-langs?username=anuraghazra&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Language stats algorithm&lt;/h3&gt; 
&lt;p&gt;We use the following algorithm to calculate the languages percentages on the language card:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;ranking_index = (byte_count ^ size_weight) * (repo_count ^ count_weight)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, only the byte count is used for determining the languages percentages shown on the language card (i.e. &lt;code&gt;size_weight=1&lt;/code&gt; and &lt;code&gt;count_weight=0&lt;/code&gt;). You can, however, use the &lt;code&gt;&amp;amp;size_weight=&lt;/code&gt; and &lt;code&gt;&amp;amp;count_weight=&lt;/code&gt; options to weight the language usage calculation. The values must be positive real numbers. &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1600#issuecomment-1046056305"&gt;More details about the algorithm can be found here&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=1&amp;amp;count_weight=0&lt;/code&gt; - &lt;em&gt;(default)&lt;/em&gt; Orders by byte count.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=0.5&amp;amp;count_weight=0.5&lt;/code&gt; - &lt;em&gt;(recommended)&lt;/em&gt; Uses both byte and repo count for ranking&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=0&amp;amp;count_weight=1&lt;/code&gt; - Orders by repo count&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;size_weight=0.5&amp;amp;count_weight=0.5)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Exclude individual repositories&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;exclude_repo=repo1,repo2&lt;/code&gt; parameter to exclude individual repositories.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;exclude_repo=github-readme-stats,anuraghazra.github.io)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hide individual languages&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;&amp;amp;hide=language1,language2&lt;/code&gt; parameter to hide individual languages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide=javascript,html)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Show more languages&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;langs_count=&lt;/code&gt; option to increase or decrease the number of languages shown on the card. Valid values are integers between 1 and 20 (inclusive). By default it was set to &lt;code&gt;5&lt;/code&gt; for &lt;code&gt;normal&lt;/code&gt; &amp;amp; &lt;code&gt;donut&lt;/code&gt; and &lt;code&gt;6&lt;/code&gt; for other layouts.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;langs_count=8)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compact Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=compact&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Donut Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=donut&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Donut Vertical Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=donut-vertical&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut-vertical)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pie Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=pie&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=pie)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hide Progress Bars&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;hide_progress=true&lt;/code&gt; option to hide the percentages and the progress bars (layout will be automatically set to &lt;code&gt;compact&lt;/code&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide_progress=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Donut Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Donut Vertical Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut-vertical" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pie Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=pie" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hidden progress bars&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide_progress=true" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;h1&gt;WakaTime Stats Card&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Please be aware that we currently only show data from WakaTime profiles that are public. You therefore have to make sure that &lt;strong&gt;BOTH&lt;/strong&gt; &lt;code&gt;Display code time publicly&lt;/code&gt; and &lt;code&gt;Display languages, editors, os, categories publicly&lt;/code&gt; are enabled.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your &lt;a href="https://wakatime.com"&gt;WakaTime&lt;/a&gt; username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Harlok's WakaTime stats](https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs&amp;amp;hide_progress=true" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs&amp;amp;layout=compact" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;All Demos&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Default&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hiding specific stats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,issues" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing additional stats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing icons&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=issues&amp;amp;show_icons=true" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Shows Github logo instead rank level&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;rank_icon=github" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Shows user rank percentile instead of rank level&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;rank_icon=percentile" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customize Border Color&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;border_color=2e4058" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Include All Commits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;include_all_commits=true" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Themes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Choose from any of the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes"&gt;default themes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gradient&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;bg_color=30,e96443,904e95&amp;amp;title_color=fff&amp;amp;text_color=fff" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing stats card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;show_icons=true&amp;amp;title_color=fff&amp;amp;icon_color=79ff97&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Setting card locale&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;locale=es" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing repo card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;title_color=fff&amp;amp;icon_color=f9f9f9&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515" alt="Customized Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gist card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing gist card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d&amp;amp;theme=calm" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Top languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;WakaTime card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Tip (Align The Cards)&lt;/h2&gt; 
&lt;p&gt;By default, GitHub does not lay out the cards side by side. To do that, you can use this approach:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://github.com/anuraghazra/github-readme-stats"&amp;gt;
  &amp;lt;img height=200 align="center" src="https://github-readme-stats.vercel.app/api?username=anuraghazra" /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;a href="https://github.com/anuraghazra/convoychat"&amp;gt;
  &amp;lt;img height=200 align="center" src="https://github-readme-stats.vercel.app/api/top-langs?username=anuraghazra&amp;amp;layout=compact&amp;amp;langs_count=8&amp;amp;card_width=320" /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://github.com/anuraghazra/github-readme-stats"&amp;gt;
  &amp;lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;a href="https://github.com/anuraghazra/convoychat"&amp;gt;
  &amp;lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat" /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt; &lt;img height="200" align="center" src="https://github-readme-stats.vercel.app/api?username=anuraghazra" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/anuraghazra/convoychat"&gt; &lt;img height="200" align="center" src="https://github-readme-stats.vercel.app/api/top-langs?username=anuraghazra&amp;amp;layout=compact&amp;amp;langs_count=8&amp;amp;card_width=320" /&gt; &lt;/a&gt; 
 &lt;hr /&gt; 
 &lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt; &lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/anuraghazra/convoychat"&gt; &lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat" /&gt; &lt;/a&gt; 
&lt;/details&gt; 
&lt;h1&gt;Deploy on your own&lt;/h1&gt; 
&lt;h2&gt;On Vercel&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;📽&lt;/span&gt; &lt;a href="https://youtu.be/n6d4KHSKqGk?t=107"&gt;Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Since the GitHub API only allows 5k requests per hour, my &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter. If you host it on your own Vercel server, then you do not have to worry about anything. Click on the deploy button to get started!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Since &lt;a href="https://github.com/anuraghazra/github-readme-stats/pull/58"&gt;#58&lt;/a&gt;, we should be able to handle more than 5k requests and have fewer issues with downtime &lt;span&gt;😁&lt;/span&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; If you are on the &lt;a href="https://vercel.com/pricing"&gt;Pro (i.e. paid)&lt;/a&gt; Vercel plan, the &lt;a href="https://vercel.com/docs/concepts/projects/project-configuration#value-definition"&gt;maxDuration&lt;/a&gt; value found in the &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/master/vercel.json"&gt;vercel.json&lt;/a&gt; can be increased when your Vercel instance frequently times out during the card request. You are advised to keep this value lower than &lt;code&gt;30&lt;/code&gt; seconds to prevent high memory usage.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://vercel.com/import/project?template=https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://vercel.com/button" alt="Deploy to Vercel" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;span&gt;🛠&lt;/span&gt; Step-by-step guide on setting up your own Vercel instance&lt;/b&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to &lt;a href="https://vercel.com/"&gt;vercel.com&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;Click on &lt;code&gt;Log in&lt;/code&gt;. &lt;img src="https://files.catbox.moe/pcxk33.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Sign in with GitHub by pressing &lt;code&gt;Continue with GitHub&lt;/code&gt;. &lt;img src="https://files.catbox.moe/b9oxey.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Sign in to GitHub and allow access to all repositories if prompted.&lt;/li&gt; 
  &lt;li&gt;Fork this repo.&lt;/li&gt; 
  &lt;li&gt;Go back to your &lt;a href="https://vercel.com/dashboard"&gt;Vercel dashboard&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;To import a project, click the &lt;code&gt;Add New...&lt;/code&gt; button and select the &lt;code&gt;Project&lt;/code&gt; option. &lt;img src="https://files.catbox.moe/3n76fh.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Click the &lt;code&gt;Continue with GitHub&lt;/code&gt; button, search for the required Git Repository and import it by clicking the &lt;code&gt;Import&lt;/code&gt; button. Alternatively, you can import a Third-Party Git Repository using the &lt;code&gt;Import Third-Party Git Repository -&amp;gt;&lt;/code&gt; link at the bottom of the page. &lt;img src="https://files.catbox.moe/mg5p04.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Create a personal access token (PAT) &lt;a href="https://github.com/settings/tokens/new"&gt;here&lt;/a&gt; and enable the &lt;code&gt;repo&lt;/code&gt; and &lt;code&gt;user&lt;/code&gt; permissions (this allows access to see private repo and user stats).&lt;/li&gt; 
  &lt;li&gt;Add the PAT as an environment variable named &lt;code&gt;PAT_1&lt;/code&gt; (as shown). &lt;img src="https://files.catbox.moe/0yclio.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Click deploy, and you're good to go. See your domains to use the API!&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;On other platforms&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; This way of using GRS is not officially supported and was added to cater to some particular use cases where Vercel could not be used (e.g. &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/2341"&gt;#2341&lt;/a&gt;). The support for this method, therefore, is limited.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;span&gt;🛠&lt;/span&gt; Step-by-step guide for deploying on other platforms&lt;/b&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Fork or clone this repo as per your needs&lt;/li&gt; 
  &lt;li&gt;Add &lt;code&gt;express&lt;/code&gt; to the dependencies section of &lt;code&gt;package.json&lt;/code&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L54-L61"&gt;https://github.com/anuraghazra/github-readme-stats/blob/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L54-L61&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Run &lt;code&gt;npm i&lt;/code&gt; if needed (initial setup)&lt;/li&gt; 
  &lt;li&gt;Run &lt;code&gt;node express.js&lt;/code&gt; to start the server, or set the entry point to &lt;code&gt;express.js&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt; if you're deploying on a managed service &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L11"&gt;https://github.com/anuraghazra/github-readme-stats/blob/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L11&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;You're done 🎉 &lt;/li&gt;
 &lt;/ol&gt;
&lt;/details&gt;   
&lt;h2&gt;Disable rate limit protections&lt;/h2&gt; 
&lt;p&gt;Github Readme Stats contains several Vercel environment variables that can be used to remove the rate limit protections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CACHE_SECONDS&lt;/code&gt;: This environment variable takes precedence over our cache minimum and maximum values and can circumvent these values for self-hosted Vercel instances.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://vercel.com/docs/concepts/projects/environment-variables"&gt;the Vercel documentation&lt;/a&gt; on adding these environment variables to your Vercel instance.&lt;/p&gt; 
&lt;h2&gt;Keep your fork up to date&lt;/h2&gt; 
&lt;p&gt;You can keep your fork, and thus your private Vercel instance up to date with the upstream using GitHub's &lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork"&gt;Sync Fork button&lt;/a&gt;. You can also use the &lt;a href="https://github.com/wei/pull"&gt;pull&lt;/a&gt; package created by &lt;a href="https://github.com/wei"&gt;@wei&lt;/a&gt; to automate this process.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;💖&lt;/span&gt; Support the project&lt;/h1&gt; 
&lt;p&gt;I open-source almost everything I can and try to reply to everyone needing help using these projects. Obviously, this takes time. You can use this service for free.&lt;/p&gt; 
&lt;p&gt;However, if you are using this project and are happy with it or just want to encourage me to continue creating stuff, there are a few ways you can do it:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Giving proper credit when you use github-readme-stats on your readme, linking back to it. :D&lt;/li&gt; 
 &lt;li&gt;Starring and sharing the project. &lt;span&gt;🚀&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.paypal.me/anuraghazra"&gt;&lt;img src="https://ionicabizau.github.io/badges/paypal.svg?sanitize=true" alt="paypal.me/anuraghazra" /&gt;&lt;/a&gt; - You can make a one-time donations via PayPal. I'll probably buy a &lt;del&gt;coffee&lt;/del&gt; tea. &lt;span&gt;🍵&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks! &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss"&gt;&lt;img src="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true" alt="https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Contributions are welcome! &amp;lt;3&lt;/p&gt; 
&lt;p&gt;Made with &lt;span&gt;❤️&lt;/span&gt; and JavaScript.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>