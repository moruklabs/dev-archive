<rss version="2.0">
  <channel>
    <title>GitHub Go Weekly Trending</title>
    <description>Weekly Trending of Go in GitHub</description>
    <pubDate>Wed, 01 Oct 2025 01:45:01 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>quic-go/quic-go</title>
      <link>https://github.com/quic-go/quic-go</link>
      <description>&lt;p&gt;A production-ready QUIC implementation in pure Go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;A QUIC implementation in pure Go&lt;/h1&gt; 
&lt;img src="https://raw.githubusercontent.com/quic-go/quic-go/master/docs/quic.png" width="303" height="124" /&gt; 
&lt;p&gt;&lt;a href="https://quic-go.net/docs/"&gt;&lt;img src="https://img.shields.io/badge/docs-quic--go.net-red?style=flat" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/quic-go/quic-go"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/quic-go/quic-go" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/quic-go/quic-go/"&gt;&lt;img src="https://img.shields.io/codecov/c/github/quic-go/quic-go/master.svg?style=flat-square" alt="Code Coverage" /&gt;&lt;/a&gt; &lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:quic-go"&gt;&lt;img src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/quic-go.svg?sanitize=true" alt="Fuzzing Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;quic-go is an implementation of the QUIC protocol (&lt;a href="https://datatracker.ietf.org/doc/html/rfc9000"&gt;RFC 9000&lt;/a&gt;, &lt;a href="https://datatracker.ietf.org/doc/html/rfc9001"&gt;RFC 9001&lt;/a&gt;, &lt;a href="https://datatracker.ietf.org/doc/html/rfc9002"&gt;RFC 9002&lt;/a&gt;) in Go. It has support for HTTP/3 (&lt;a href="https://datatracker.ietf.org/doc/html/rfc9114"&gt;RFC 9114&lt;/a&gt;), including QPACK (&lt;a href="https://datatracker.ietf.org/doc/html/rfc9204"&gt;RFC 9204&lt;/a&gt;) and HTTP Datagrams (&lt;a href="https://datatracker.ietf.org/doc/html/rfc9297"&gt;RFC 9297&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;In addition to these base RFCs, it also implements the following RFCs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Unreliable Datagram Extension (&lt;a href="https://datatracker.ietf.org/doc/html/rfc9221"&gt;RFC 9221&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Datagram Packetization Layer Path MTU Discovery (DPLPMTUD, &lt;a href="https://datatracker.ietf.org/doc/html/rfc8899"&gt;RFC 8899&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;QUIC Version 2 (&lt;a href="https://datatracker.ietf.org/doc/html/rfc9369"&gt;RFC 9369&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;QUIC Event Logging using qlog (&lt;a href="https://datatracker.ietf.org/doc/draft-ietf-quic-qlog-main-schema/"&gt;draft-ietf-quic-qlog-main-schema&lt;/a&gt; and &lt;a href="https://datatracker.ietf.org/doc/draft-ietf-quic-qlog-quic-events/"&gt;draft-ietf-quic-qlog-quic-events&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;QUIC Stream Resets with Partial Delivery (&lt;a href="https://datatracker.ietf.org/doc/html/draft-ietf-quic-reliable-stream-reset-07"&gt;draft-ietf-quic-reliable-stream-reset&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Support for WebTransport over HTTP/3 (&lt;a href="https://datatracker.ietf.org/doc/draft-ietf-webtrans-http3/"&gt;draft-ietf-webtrans-http3&lt;/a&gt;) is implemented in &lt;a href="https://github.com/quic-go/webtransport-go"&gt;webtransport-go&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Detailed documentation can be found on &lt;a href="https://quic-go.net/docs/"&gt;quic-go.net&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Projects using quic-go&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Project&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Stars&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/AdguardTeam/AdGuardHome"&gt;AdGuardHome&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Free and open source, powerful network-wide ads &amp;amp; trackers blocking DNS server.&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/AdguardTeam/AdGuardHome?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/xyproto/algernon"&gt;algernon&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Small self-contained pure-Go web server with Lua, Markdown, HTTP/2, QUIC, Redis and PostgreSQL support&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/xyproto/algernon?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/caddyserver/caddy/"&gt;caddy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Fast, multi-platform web server with automatic HTTPS&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/caddyserver/caddy?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/cloudflare/cloudflared"&gt;cloudflared&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A tunneling daemon that proxies traffic from the Cloudflare network to your origins&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/cloudflare/cloudflared?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/fatedier/frp"&gt;frp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/fatedier/frp?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/libp2p/go-libp2p"&gt;go-libp2p&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;libp2p implementation in Go, powering &lt;a href="https://github.com/ipfs/kubo"&gt;Kubo&lt;/a&gt; (IPFS) and &lt;a href="https://github.com/filecoin-project/lotus"&gt;Lotus&lt;/a&gt; (Filecoin), among others&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/libp2p/go-libp2p?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/go-gost/gost"&gt;gost&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A simple security tunnel written in Go&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/go-gost/gost?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/apernet/hysteria"&gt;Hysteria&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A powerful, lightning fast and censorship resistant proxy&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/apernet/hysteria?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/dunglas/mercure"&gt;Mercure&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;An open, easy, fast, reliable and battery-efficient solution for real-time communications&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/dunglas/mercure?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ooni/probe-cli"&gt;OONI Probe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Next generation OONI Probe. Library and CLI tool.&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/ooni/probe-cli?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/flipt-io/reverst"&gt;reverst&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Reverse Tunnels in Go over HTTP/3 and QUIC&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/flipt-io/reverst?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/roadrunner-server/roadrunner"&gt;RoadRunner&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;High-performance PHP application server, process manager written in Go and powered with plugins&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/roadrunner-server/roadrunner?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/syncthing/syncthing/"&gt;syncthing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Open Source Continuous File Synchronization&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/syncthing/syncthing?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/traefik/traefik"&gt;traefik&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The Cloud Native Application Proxy&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/traefik/traefik?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/v2fly/v2ray-core"&gt;v2ray-core&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A platform for building proxies to bypass network restrictions&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/v2fly/v2ray-core?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/yomorun/yomo"&gt;YoMo&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Streaming Serverless Framework for Geo-distributed System&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/yomorun/yomo?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you'd like to see your project added to this list, please send us a PR.&lt;/p&gt; 
&lt;h2&gt;Release Policy&lt;/h2&gt; 
&lt;p&gt;quic-go always aims to support the latest two Go releases.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We are always happy to welcome new contributors! We have a number of self-contained issues that are suitable for first-time contributors, they are tagged with &lt;a href="https://github.com/quic-go/quic-go/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22"&gt;help wanted&lt;/a&gt;. If you have any questions, please feel free to reach out by opening an issue or leaving a comment.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>istio/istio</title>
      <link>https://github.com/istio/istio</link>
      <description>&lt;p&gt;Connect, secure, control, and observe services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Istio&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://bestpractices.coreinfrastructure.org/projects/1395"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/1395/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/istio/istio"&gt;&lt;img src="https://goreportcard.com/badge/github.com/istio/istio" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/istio.io/istio"&gt;&lt;img src="https://godoc.org/istio.io/istio?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;a href="https://istio.io/"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/cncf/artwork/refs/heads/main/projects/istio/icon/color/istio-icon-color.svg" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/istio/istio/raw/master/logo/istio-bluelogo-whitebackground-unframed.svg" /&gt; 
  &lt;img title="Istio" height="100" width="100" alt="Istio logo" src="https://github.com/istio/istio/raw/master/logo/istio-bluelogo-whitebackground-unframed.svg?sanitize=true" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;p&gt;Istio is an open source service mesh that layers transparently onto existing distributed applications. Istio’s powerful features provide a uniform and more efficient way to secure, connect, and monitor services. Istio is the path to load balancing, service-to-service authentication, and monitoring – with few or no service code changes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For in-depth information about how to use Istio, visit &lt;a href="https://istio.io"&gt;istio.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;To ask questions and get assistance from our community, visit &lt;a href="https://github.com/istio/istio/discussions"&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;To learn how to participate in our overall community, visit &lt;a href="https://istio.io/about/community"&gt;our community page&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In this README:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/#repositories"&gt;Repositories&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/#issue-management"&gt;Issue management&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In addition, here are some other documents you may wish to read:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/istio/community#istio-community"&gt;Istio Community&lt;/a&gt; - describes how to get involved and contribute to the Istio project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/istio/istio/wiki/Preparing-for-Development"&gt;Istio Developer's Guide&lt;/a&gt; - explains how to set up and use an Istio development environment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/istio/istio/wiki/Development-Conventions"&gt;Project Conventions&lt;/a&gt; - describes the conventions we use within the code base&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/istio/istio/wiki/Writing-Fast-and-Lean-Code"&gt;Creating Fast and Lean Code&lt;/a&gt; - performance-oriented advice and guidelines for the code base&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You'll find many other useful documents on our &lt;a href="https://github.com/istio/istio/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://istio.io/latest/docs/concepts/what-is-istio/"&gt;Istio&lt;/a&gt; is an open platform for providing a uniform way to &lt;a href="https://istio.io/latest/docs/examples/microservices-istio/"&gt;integrate microservices&lt;/a&gt;, manage &lt;a href="https://istio.io/latest/docs/concepts/traffic-management/"&gt;traffic flow&lt;/a&gt; across microservices, enforce policies and aggregate telemetry data. Istio's control plane provides an abstraction layer over the underlying cluster management platform, such as Kubernetes.&lt;/p&gt; 
&lt;p&gt;Istio is composed of these components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Envoy&lt;/strong&gt; - Sidecar proxies per microservice to handle ingress/egress traffic between services in the cluster and from a service to external services. The proxies form a &lt;em&gt;secure microservice mesh&lt;/em&gt; providing a rich set of functions like discovery, rich layer-7 routing, circuit breakers, policy enforcement and telemetry recording/reporting functions.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Note: The service mesh is not an overlay network. It simplifies and enhances how microservices in an application talk to each other over the network provided by the underlying platform.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Istiod&lt;/strong&gt; - The Istio control plane. It provides service discovery, configuration and certificate management. It consists of the following sub-components:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Pilot&lt;/strong&gt; - Responsible for configuring the proxies at runtime.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Citadel&lt;/strong&gt; - Responsible for certificate issuance and rotation.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Galley&lt;/strong&gt; - Responsible for validating, ingesting, aggregating, transforming and distributing config within Istio.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Operator&lt;/strong&gt; - The component provides user friendly options to operate the Istio service mesh.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Repositories&lt;/h2&gt; 
&lt;p&gt;The Istio project is divided across a few GitHub repositories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/api"&gt;istio/api&lt;/a&gt;. This repository defines component-level APIs and common configuration formats for the Istio platform.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/community"&gt;istio/community&lt;/a&gt;. This repository contains information on the Istio community, including the various documents that govern the Istio open source project.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/README.md"&gt;istio/istio&lt;/a&gt;. This is the main code repository. It hosts Istio's core components, install artifacts, and sample programs. It includes:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/istioctl/"&gt;istioctl&lt;/a&gt;. This directory contains code for the &lt;a href="https://istio.io/latest/docs/reference/commands/istioctl/"&gt;&lt;em&gt;istioctl&lt;/em&gt;&lt;/a&gt; command line utility.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/pilot/"&gt;pilot&lt;/a&gt;. This directory contains platform-specific code to populate the &lt;a href="https://istio.io/docs/concepts/traffic-management/#pilot"&gt;abstract service model&lt;/a&gt;, dynamically reconfigure the proxies when the application topology changes, as well as translate &lt;a href="https://istio.io/latest/docs/reference/config/networking/"&gt;routing rules&lt;/a&gt; into proxy specific configuration.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/security/"&gt;security&lt;/a&gt;. This directory contains &lt;a href="https://istio.io/latest/docs/concepts/security/"&gt;security&lt;/a&gt; related code, including Citadel (acting as Certificate Authority), citadel agent, etc.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/proxy"&gt;istio/proxy&lt;/a&gt;. The Istio proxy contains extensions to the &lt;a href="https://github.com/envoyproxy/envoy"&gt;Envoy proxy&lt;/a&gt; (in the form of Envoy filters) that support authentication, authorization, and telemetry collection.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/ztunnel"&gt;istio/ztunnel&lt;/a&gt;. The repository contains the Rust implementation of the ztunnel component of Ambient mesh.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/client-go"&gt;istio/client-go&lt;/a&gt;. This repository defines auto-generated Kubernetes clients for interacting with Istio resources programmatically.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Only the &lt;code&gt;istio/api&lt;/code&gt; and &lt;code&gt;istio/client-go&lt;/code&gt; repositories expose stable interfaces intended for direct usage as libraries.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Issue management&lt;/h2&gt; 
&lt;p&gt;We use GitHub to track all of our bugs and feature requests. Each issue we track has a variety of metadata:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Epic&lt;/strong&gt;. An epic represents a feature area for Istio as a whole. Epics are fairly broad in scope and are basically product-level things. Each issue is ultimately part of an epic.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Milestone&lt;/strong&gt;. Each issue is assigned a milestone. This is 0.1, 0.2, ..., or 'Nebulous Future'. The milestone indicates when we think the issue should get addressed.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Priority&lt;/strong&gt;. Each issue has a priority which is represented by the column in the &lt;a href="https://github.com/orgs/istio/projects/6"&gt;Prioritization&lt;/a&gt; project. Priority can be one of P0, P1, P2, or &amp;gt;P2. The priority indicates how important it is to address the issue within the milestone. P0 says that the milestone cannot be considered achieved if the issue isn't resolved.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/cncf/artwork/refs/heads/main/other/cncf/horizontal/color-whitetext/cncf-color-whitetext.svg" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/cncf/artwork/master/other/cncf/horizontal/color/cncf-color.svg" /&gt; 
  &lt;img width="300" alt="Cloud Native Computing Foundation logo" src="https://raw.githubusercontent.com/cncf/artwork/refs/heads/main/other/cncf/horizontal/color-whitetext/cncf-color-whitetext.svg?sanitize=true" /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;Istio is a &lt;a href="https://cncf.io"&gt;Cloud Native Computing Foundation&lt;/a&gt; project.&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>slackhq/nebula</title>
      <link>https://github.com/slackhq/nebula</link>
      <description>&lt;p&gt;A scalable overlay networking tool with a focus on performance, simplicity and security&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;What is Nebula?&lt;/h2&gt; 
&lt;p&gt;Nebula is a scalable overlay networking tool with a focus on performance, simplicity and security. It lets you seamlessly connect computers anywhere in the world. Nebula is portable, and runs on Linux, OSX, Windows, iOS, and Android. It can be used to connect a small number of computers, but is also able to connect tens of thousands of computers.&lt;/p&gt; 
&lt;p&gt;Nebula incorporates a number of existing concepts like encryption, security groups, certificates, and tunneling. What makes Nebula different to existing offerings is that it brings all of these ideas together, resulting in a sum that is greater than its individual parts.&lt;/p&gt; 
&lt;p&gt;Further documentation can be found &lt;a href="https://nebula.defined.net/docs/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can read more about Nebula &lt;a href="https://medium.com/p/884110a5579"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also join the NebulaOSS Slack group &lt;a href="https://join.slack.com/t/nebulaoss/shared_invite/zt-39pk4xopc-CUKlGcb5Z39dQ0cK1v7ehA"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported Platforms&lt;/h2&gt; 
&lt;h4&gt;Desktop and Server&lt;/h4&gt; 
&lt;p&gt;Check the &lt;a href="https://github.com/slackhq/nebula/releases/latest"&gt;releases&lt;/a&gt; page for downloads or see the &lt;a href="https://github.com/slackhq/nebula#distribution-packages"&gt;Distribution Packages&lt;/a&gt; section.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux - 64 and 32 bit, arm, and others&lt;/li&gt; 
 &lt;li&gt;Windows&lt;/li&gt; 
 &lt;li&gt;MacOS&lt;/li&gt; 
 &lt;li&gt;Freebsd&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Distribution Packages&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://archlinux.org/packages/extra/x86_64/nebula/"&gt;Arch Linux&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;sudo pacman -S nebula
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://src.fedoraproject.org/rpms/nebula"&gt;Fedora Linux&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;sudo dnf install nebula
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://packages.debian.org/source/stable/nebula"&gt;Debian Linux&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;sudo apt install nebula
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://pkgs.alpinelinux.org/packages?name=nebula"&gt;Alpine Linux&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;sudo apk add nebula
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/Homebrew/homebrew-core/raw/HEAD/Formula/n/nebula.rb"&gt;macOS Homebrew&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;brew install nebula
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://hub.docker.com/r/nebulaoss/nebula"&gt;Docker&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker pull nebulaoss/nebula
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Mobile&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://apps.apple.com/us/app/mobile-nebula/id1509587936?itsct=apps_box&amp;amp;itscg=30200"&gt;iOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=net.defined.mobile_nebula&amp;amp;pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1"&gt;Android&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technical Overview&lt;/h2&gt; 
&lt;p&gt;Nebula is a mutually authenticated peer-to-peer software-defined network based on the &lt;a href="https://noiseprotocol.org/"&gt;Noise Protocol Framework&lt;/a&gt;. Nebula uses certificates to assert a node's IP address, name, and membership within user-defined groups. Nebula's user-defined groups allow for provider agnostic traffic filtering between nodes. Discovery nodes (aka lighthouses) allow individual peers to find each other and optionally use UDP hole punching to establish connections from behind most firewalls or NATs. Users can move data between nodes in any number of cloud service providers, datacenters, and endpoints, without needing to maintain a particular addressing scheme.&lt;/p&gt; 
&lt;p&gt;Nebula uses Elliptic-curve Diffie-Hellman (&lt;code&gt;ECDH&lt;/code&gt;) key exchange and &lt;code&gt;AES-256-GCM&lt;/code&gt; in its default configuration.&lt;/p&gt; 
&lt;p&gt;Nebula was created to provide a mechanism for groups of hosts to communicate securely, even across the internet, while enabling expressive firewall definitions similar in style to cloud security groups.&lt;/p&gt; 
&lt;h2&gt;Getting started (quickly)&lt;/h2&gt; 
&lt;p&gt;To set up a Nebula network, you'll need:&lt;/p&gt; 
&lt;h4&gt;1. The &lt;a href="https://github.com/slackhq/nebula/releases"&gt;Nebula binaries&lt;/a&gt; or &lt;a href="https://github.com/slackhq/nebula#distribution-packages"&gt;Distribution Packages&lt;/a&gt; for your specific platform. Specifically you'll need &lt;code&gt;nebula-cert&lt;/code&gt; and the specific nebula binary for each platform you use.&lt;/h4&gt; 
&lt;h4&gt;2. (Optional, but you really should..) At least one discovery node with a routable IP address, which we call a lighthouse.&lt;/h4&gt; 
&lt;p&gt;Nebula lighthouses allow nodes to find each other, anywhere in the world. A lighthouse is the only node in a Nebula network whose IP should not change. Running a lighthouse requires very few compute resources, and you can easily use the least expensive option from a cloud hosting provider. If you're not sure which provider to use, a number of us have used $6/mo &lt;a href="https://digitalocean.com"&gt;DigitalOcean&lt;/a&gt; droplets as lighthouses.&lt;/p&gt; 
&lt;p&gt;Once you have launched an instance, ensure that Nebula udp traffic (default port udp/4242) can reach it over the internet.&lt;/p&gt; 
&lt;h4&gt;3. A Nebula certificate authority, which will be the root of trust for a particular Nebula network.&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./nebula-cert ca -name "Myorganization, Inc"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create files named &lt;code&gt;ca.key&lt;/code&gt; and &lt;code&gt;ca.cert&lt;/code&gt; in the current directory. The &lt;code&gt;ca.key&lt;/code&gt; file is the most sensitive file you'll create, because it is the key used to sign the certificates for individual nebula nodes/hosts. Please store this file somewhere safe, preferably with strong encryption.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Be aware!&lt;/strong&gt; By default, certificate authorities have a 1-year lifetime before expiration. See &lt;a href="https://nebula.defined.net/docs/guides/rotating-certificate-authority/"&gt;this guide&lt;/a&gt; for details on rotating a CA.&lt;/p&gt; 
&lt;h4&gt;4. Nebula host keys and certificates generated from that certificate authority&lt;/h4&gt; 
&lt;p&gt;This assumes you have four nodes, named lighthouse1, laptop, server1, host3. You can name the nodes any way you'd like, including FQDN. You'll also need to choose IP addresses and the associated subnet. In this example, we are creating a nebula network that will use 192.168.100.x/24 as its network range. This example also demonstrates nebula groups, which can later be used to define traffic rules in a nebula network.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./nebula-cert sign -name "lighthouse1" -ip "192.168.100.1/24"
./nebula-cert sign -name "laptop" -ip "192.168.100.2/24" -groups "laptop,home,ssh"
./nebula-cert sign -name "server1" -ip "192.168.100.9/24" -groups "servers"
./nebula-cert sign -name "host3" -ip "192.168.100.10/24"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, host certificates will expire 1 second before the CA expires. Use the &lt;code&gt;-duration&lt;/code&gt; flag to specify a shorter lifetime.&lt;/p&gt; 
&lt;h4&gt;5. Configuration files for each host&lt;/h4&gt; 
&lt;p&gt;Download a copy of the nebula &lt;a href="https://github.com/slackhq/nebula/raw/master/examples/config.yml"&gt;example configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;On the lighthouse node, you'll need to ensure &lt;code&gt;am_lighthouse: true&lt;/code&gt; is set.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;On the individual hosts, ensure the lighthouse is defined properly in the &lt;code&gt;static_host_map&lt;/code&gt; section, and is added to the lighthouse &lt;code&gt;hosts&lt;/code&gt; section.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;6. Copy nebula credentials, configuration, and binaries to each host&lt;/h4&gt; 
&lt;p&gt;For each host, copy the nebula binary to the host, along with &lt;code&gt;config.yml&lt;/code&gt; from step 5, and the files &lt;code&gt;ca.crt&lt;/code&gt;, &lt;code&gt;{host}.crt&lt;/code&gt;, and &lt;code&gt;{host}.key&lt;/code&gt; from step 4.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;DO NOT COPY &lt;code&gt;ca.key&lt;/code&gt; TO INDIVIDUAL NODES.&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;7. Run nebula on each host&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./nebula -config /path/to/config.yml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more detailed instructions, &lt;a href="https://nebula.defined.net/docs/"&gt;find the full documentation here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building Nebula from source&lt;/h2&gt; 
&lt;p&gt;Make sure you have &lt;a href="https://go.dev/doc/install"&gt;go&lt;/a&gt; installed and clone this repo. Change to the nebula directory.&lt;/p&gt; 
&lt;p&gt;To build nebula for all platforms: &lt;code&gt;make all&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;To build nebula for a specific platform (ex, Windows): &lt;code&gt;make bin-windows&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/slackhq/nebula/master/Makefile"&gt;Makefile&lt;/a&gt; for more details on build targets&lt;/p&gt; 
&lt;h2&gt;Curve P256 and BoringCrypto&lt;/h2&gt; 
&lt;p&gt;The default curve used for cryptographic handshakes and signatures is Curve25519. This is the recommended setting for most users. If your deployment has certain compliance requirements, you have the option of creating your CA using &lt;code&gt;nebula-cert ca -curve P256&lt;/code&gt; to use NIST Curve P256. The CA will then sign certificates using ECDSA P256, and any hosts using these certificates will use P256 for ECDH handshakes.&lt;/p&gt; 
&lt;p&gt;In addition, Nebula can be built using the &lt;a href="https://github.com/golang/go/raw/go1.20/src/crypto/internal/boring/README.md"&gt;BoringCrypto GOEXPERIMENT&lt;/a&gt; by running either of the following make targets:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;make bin-boringcrypto
make release-boringcrypto
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is not the recommended default deployment, but may be useful based on your compliance requirements.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Nebula was created at Slack Technologies, Inc by Nate Brown and Ryan Huber, with contributions from Oliver Fross, Alan Lam, Wade Simmons, and Lining Wang.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gin-gonic/gin</title>
      <link>https://github.com/gin-gonic/gin</link>
      <description>&lt;p&gt;Gin is a high-performance HTTP web framework written in Go. It provides a Martini-like API but with significantly better performance—up to 40 times faster—thanks to httprouter. Gin is designed for building REST APIs, web applications, and microservices.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gin Web Framework&lt;/h1&gt; 
&lt;img align="right" width="159px" src="https://raw.githubusercontent.com/gin-gonic/logo/master/color.png" /&gt; 
&lt;p&gt;&lt;a href="https://github.com/gin-gonic/gin/actions/workflows/gin.yml"&gt;&lt;img src="https://github.com/gin-gonic/gin/actions/workflows/gin.yml/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/gin-gonic/gin"&gt;&lt;img src="https://codecov.io/gh/gin-gonic/gin/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/gin-gonic/gin"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gin-gonic/gin" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/gin-gonic/gin?tab=doc"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/gin-gonic/gin?status.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://sourcegraph.com/github.com/gin-gonic/gin?badge"&gt;&lt;img src="https://sourcegraph.com/github.com/gin-gonic/gin/-/badge.svg?sanitize=true" alt="Sourcegraph" /&gt;&lt;/a&gt; &lt;a href="https://www.codetriage.com/gin-gonic/gin"&gt;&lt;img src="https://www.codetriage.com/gin-gonic/gin/badges/users.svg?sanitize=true" alt="Open Source Helpers" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gin-gonic/gin/releases"&gt;&lt;img src="https://img.shields.io/github/release/gin-gonic/gin.svg?style=flat-square" alt="Release" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📰 &lt;a href="https://gin-gonic.com/en/blog/news/gin-1-11-0-release-announcement/"&gt;Announcing Gin 1.11.0!&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Read about the latest features and improvements in Gin 1.11.0 on our official blog.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Gin is a high-performance HTTP web framework written in &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt;. It provides a Martini-like API but with significantly better performance—up to 40 times faster—thanks to &lt;a href="https://github.com/julienschmidt/httprouter"&gt;httprouter&lt;/a&gt;. Gin is designed for building REST APIs, web applications, and microservices where speed and developer productivity are essential.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Why choose Gin?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Gin combines the simplicity of Express.js-style routing with Go's performance characteristics, making it ideal for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Building high-throughput REST APIs&lt;/li&gt; 
 &lt;li&gt;Developing microservices that need to handle many concurrent requests&lt;/li&gt; 
 &lt;li&gt;Creating web applications that require fast response times&lt;/li&gt; 
 &lt;li&gt;Prototyping web services quickly with minimal boilerplate&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Gin's key features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Zero allocation router&lt;/strong&gt; - Extremely memory-efficient routing with no heap allocations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;High performance&lt;/strong&gt; - Benchmarks show superior speed compared to other Go web frameworks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Middleware support&lt;/strong&gt; - Extensible middleware system for authentication, logging, CORS, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Crash-free&lt;/strong&gt; - Built-in recovery middleware prevents panics from crashing your server&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSON validation&lt;/strong&gt; - Automatic request/response JSON binding and validation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Route grouping&lt;/strong&gt; - Organize related routes and apply common middleware&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Error management&lt;/strong&gt; - Centralized error handling and logging&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built-in rendering&lt;/strong&gt; - Support for JSON, XML, HTML templates, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt; - Large ecosystem of community middleware and plugins&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Go version&lt;/strong&gt;: Gin requires &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt; version &lt;a href="https://go.dev/doc/devel/release#go1.23.0"&gt;1.23&lt;/a&gt; or above&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Basic Go knowledge&lt;/strong&gt;: Familiarity with Go syntax and package management is helpful&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;With &lt;a href="https://go.dev/wiki/Modules#how-to-use-modules"&gt;Go's module support&lt;/a&gt;, simply import Gin in your code and Go will automatically fetch it during build:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "github.com/gin-gonic/gin"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Your First Gin Application&lt;/h3&gt; 
&lt;p&gt;Here's a complete example that demonstrates Gin's simplicity:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "net/http"

  "github.com/gin-gonic/gin"
)

func main() {
  // Create a Gin router with default middleware (logger and recovery)
  r := gin.Default()
  
  // Define a simple GET endpoint
  r.GET("/ping", func(c *gin.Context) {
    // Return JSON response
    c.JSON(http.StatusOK, gin.H{
      "message": "pong",
    })
  })
  
  // Start server on port 8080 (default)
  // Server will listen on 0.0.0.0:8080 (localhost:8080 on Windows)
  r.Run()
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Running the application:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Save the code above as &lt;code&gt;main.go&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the application:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open your browser and visit &lt;a href="http://localhost:8080/ping"&gt;&lt;code&gt;http://localhost:8080/ping&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You should see: &lt;code&gt;{"message":"pong"}&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;What this example demonstrates:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Creating a Gin router with default middleware&lt;/li&gt; 
 &lt;li&gt;Defining HTTP endpoints with simple handler functions&lt;/li&gt; 
 &lt;li&gt;Returning JSON responses&lt;/li&gt; 
 &lt;li&gt;Starting an HTTP server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Next Steps&lt;/h3&gt; 
&lt;p&gt;After running your first Gin application, explore these resources to learn more:&lt;/p&gt; 
&lt;h4&gt;📚 Learning Resources&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/gin-gonic/gin/master/docs/doc.md"&gt;Gin Quick Start Guide&lt;/a&gt;&lt;/strong&gt; - Comprehensive tutorial with API examples and build configurations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/gin-gonic/examples"&gt;Example Repository&lt;/a&gt;&lt;/strong&gt; - Ready-to-run examples demonstrating various Gin use cases: 
  &lt;ul&gt; 
   &lt;li&gt;REST API development&lt;/li&gt; 
   &lt;li&gt;Authentication &amp;amp; middleware&lt;/li&gt; 
   &lt;li&gt;File uploads and downloads&lt;/li&gt; 
   &lt;li&gt;WebSocket connections&lt;/li&gt; 
   &lt;li&gt;Template rendering&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📖 Documentation&lt;/h2&gt; 
&lt;h3&gt;API Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://pkg.go.dev/github.com/gin-gonic/gin"&gt;Go.dev API Documentation&lt;/a&gt;&lt;/strong&gt; - Complete API reference with examples&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;User Guides&lt;/h3&gt; 
&lt;p&gt;The comprehensive documentation is available on &lt;a href="https://gin-gonic.com"&gt;gin-gonic.com&lt;/a&gt; in multiple languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/en/docs/"&gt;English&lt;/a&gt; | &lt;a href="https://gin-gonic.com/zh-cn/docs/"&gt;简体中文&lt;/a&gt; | &lt;a href="https://gin-gonic.com/zh-tw/docs/"&gt;繁體中文&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/ja/docs/"&gt;日本語&lt;/a&gt; | &lt;a href="https://gin-gonic.com/ko-kr/docs/"&gt;한국어&lt;/a&gt; | &lt;a href="https://gin-gonic.com/es/docs/"&gt;Español&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/tr/docs/"&gt;Turkish&lt;/a&gt; | &lt;a href="https://gin-gonic.com/fa/docs/"&gt;Persian&lt;/a&gt; | &lt;a href="https://gin-gonic.com/pt/docs/"&gt;Português&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/ru/docs/"&gt;Russian&lt;/a&gt; | &lt;a href="https://gin-gonic.com/id/docs/"&gt;Indonesian&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Official Tutorials&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://go.dev/doc/tutorial/web-service-gin"&gt;Go.dev Tutorial: Developing a RESTful API with Go and Gin&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⚡ Performance Benchmarks&lt;/h2&gt; 
&lt;p&gt;Gin demonstrates exceptional performance compared to other Go web frameworks. It uses a custom version of &lt;a href="https://github.com/julienschmidt/httprouter"&gt;HttpRouter&lt;/a&gt; for maximum efficiency. &lt;a href="https://raw.githubusercontent.com/gin-gonic/gin/master/BENCHMARKS.md"&gt;View detailed benchmarks →&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gin vs. Other Go Frameworks&lt;/strong&gt; (GitHub API routing benchmark):&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Benchmark name&lt;/th&gt; 
   &lt;th align="right"&gt;(1)&lt;/th&gt; 
   &lt;th align="right"&gt;(2)&lt;/th&gt; 
   &lt;th align="right"&gt;(3)&lt;/th&gt; 
   &lt;th align="right"&gt;(4)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGin_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;&lt;strong&gt;43550&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="right"&gt;&lt;strong&gt;27364 ns/op&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="right"&gt;&lt;strong&gt;0 B/op&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="right"&gt;&lt;strong&gt;0 allocs/op&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkAce_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;40543&lt;/td&gt; 
   &lt;td align="right"&gt;29670 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkAero_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;57632&lt;/td&gt; 
   &lt;td align="right"&gt;20648 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkBear_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;9234&lt;/td&gt; 
   &lt;td align="right"&gt;216179 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;86448 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;943 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkBeego_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;7407&lt;/td&gt; 
   &lt;td align="right"&gt;243496 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;71456 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkBone_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;420&lt;/td&gt; 
   &lt;td align="right"&gt;2922835 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;720160 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;8620 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkChi_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;7620&lt;/td&gt; 
   &lt;td align="right"&gt;238331 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;87696 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkDenco_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;18355&lt;/td&gt; 
   &lt;td align="right"&gt;64494 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;20224 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;167 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkEcho_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;31251&lt;/td&gt; 
   &lt;td align="right"&gt;38479 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGocraftWeb_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;4117&lt;/td&gt; 
   &lt;td align="right"&gt;300062 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;131656 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;1686 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGoji_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;3274&lt;/td&gt; 
   &lt;td align="right"&gt;416158 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;56112 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;334 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGojiv2_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;1402&lt;/td&gt; 
   &lt;td align="right"&gt;870518 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;352720 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;4321 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGoJsonRest_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;2976&lt;/td&gt; 
   &lt;td align="right"&gt;401507 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;134371 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;2737 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGoRestful_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;410&lt;/td&gt; 
   &lt;td align="right"&gt;2913158 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;910144 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;2938 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGorillaMux_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;346&lt;/td&gt; 
   &lt;td align="right"&gt;3384987 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;251650 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;1994 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGowwwRouter_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;143025 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;72144 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;501 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkHttpRouter_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;55938&lt;/td&gt; 
   &lt;td align="right"&gt;21360 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkHttpTreeMux_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;153944 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;65856 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;671 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkKocha_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;106315 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;23304 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;843 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkLARS_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;47779&lt;/td&gt; 
   &lt;td align="right"&gt;25084 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkMacaron_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;3266&lt;/td&gt; 
   &lt;td align="right"&gt;371907 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;149409 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;1624 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkMartini_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;331&lt;/td&gt; 
   &lt;td align="right"&gt;3444706 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;226551 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;2325 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkPat_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;273&lt;/td&gt; 
   &lt;td align="right"&gt;4381818 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;1483152 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;26963 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkPossum_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;164367 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;84448 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkR2router_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;160220 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;77328 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;979 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkRivet_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;14625&lt;/td&gt; 
   &lt;td align="right"&gt;82453 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;16272 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;167 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkTango_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;6255&lt;/td&gt; 
   &lt;td align="right"&gt;279611 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;63826 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;1618 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkTigerTonic_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;2008&lt;/td&gt; 
   &lt;td align="right"&gt;687874 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;193856 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;4474 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkTraffic_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;355&lt;/td&gt; 
   &lt;td align="right"&gt;3478508 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;820744 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;14114 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkVulcan_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;6885&lt;/td&gt; 
   &lt;td align="right"&gt;193333 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;19894 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;(1): Total Repetitions achieved in constant time, higher means more confident result&lt;/li&gt; 
 &lt;li&gt;(2): Single Repetition Duration (ns/op), lower is better&lt;/li&gt; 
 &lt;li&gt;(3): Heap Memory (B/op), lower is better&lt;/li&gt; 
 &lt;li&gt;(4): Average Allocations per Repetition (allocs/op), lower is better&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔌 Middleware Ecosystem&lt;/h2&gt; 
&lt;p&gt;Gin has a rich ecosystem of middleware for common web development needs. Explore community-contributed middleware:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/gin-contrib"&gt;gin-contrib&lt;/a&gt;&lt;/strong&gt; - Official middleware collection including:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Authentication (JWT, Basic Auth, Sessions)&lt;/li&gt; 
   &lt;li&gt;CORS, Rate limiting, Compression&lt;/li&gt; 
   &lt;li&gt;Logging, Metrics, Tracing&lt;/li&gt; 
   &lt;li&gt;Static file serving, Template engines&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/gin-gonic/contrib"&gt;gin-gonic/contrib&lt;/a&gt;&lt;/strong&gt; - Additional community middleware&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🏢 Production Usage&lt;/h2&gt; 
&lt;p&gt;Gin powers many high-traffic applications and services in production:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/appleboy/gorush"&gt;gorush&lt;/a&gt;&lt;/strong&gt; - High-performance push notification server&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/fnproject/fn"&gt;fnproject&lt;/a&gt;&lt;/strong&gt; - Container-native, serverless platform&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/photoprism/photoprism"&gt;photoprism&lt;/a&gt;&lt;/strong&gt; - AI-powered personal photo management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/luraproject/lura"&gt;lura&lt;/a&gt;&lt;/strong&gt; - Ultra-performant API Gateway framework&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/thoas/picfit"&gt;picfit&lt;/a&gt;&lt;/strong&gt; - Real-time image processing server&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/distribworks/dkron"&gt;dkron&lt;/a&gt;&lt;/strong&gt; - Distributed job scheduling system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;Gin is the work of hundreds of contributors from around the world. We welcome and appreciate your contributions!&lt;/p&gt; 
&lt;h3&gt;How to Contribute&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 &lt;strong&gt;Report bugs&lt;/strong&gt; - Help us identify and fix issues&lt;/li&gt; 
 &lt;li&gt;💡 &lt;strong&gt;Suggest features&lt;/strong&gt; - Share your ideas for improvements&lt;/li&gt; 
 &lt;li&gt;📝 &lt;strong&gt;Improve documentation&lt;/strong&gt; - Help make our docs clearer&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;strong&gt;Submit code&lt;/strong&gt; - Fix bugs or implement new features&lt;/li&gt; 
 &lt;li&gt;🧪 &lt;strong&gt;Write tests&lt;/strong&gt; - Improve our test coverage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Getting Started with Contributing&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check out our &lt;a href="https://raw.githubusercontent.com/gin-gonic/gin/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for detailed guidelines&lt;/li&gt; 
 &lt;li&gt;Join our community discussions and ask questions&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;All contributions are valued and help make Gin better for everyone!&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>filebrowser/filebrowser</title>
      <link>https://github.com/filebrowser/filebrowser</link>
      <description>&lt;p&gt;📂 Web File Browser&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/filebrowser/logo/master/banner.png" width="550" /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/filebrowser/filebrowser/actions/workflows/main.yaml"&gt;&lt;img src="https://github.com/filebrowser/filebrowser/actions/workflows/main.yaml/badge.svg?sanitize=true" alt="Build" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/filebrowser/filebrowser"&gt;&lt;img src="https://goreportcard.com/badge/github.com/filebrowser/filebrowser" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="http://godoc.org/github.com/filebrowser/filebrowser"&gt;&lt;img src="https://img.shields.io/badge/godoc-reference-blue.svg?sanitize=true" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://github.com/filebrowser/filebrowser/releases/latest"&gt;&lt;img src="https://img.shields.io/github/release/filebrowser/filebrowser.svg?sanitize=true" alt="Version" /&gt;&lt;/a&gt; &lt;a href="http://webchat.freenode.net/?channels=%23filebrowser"&gt;&lt;img src="https://img.shields.io/badge/freenode-%23filebrowser-blue.svg?sanitize=true" alt="Chat IRC" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;File Browser provides a file managing interface within a specified directory and it can be used to upload, delete, preview and edit your files. It is a &lt;strong&gt;create-your-own-cloud&lt;/strong&gt;-kind of software where you can just install it on your server, direct it to a path and access your files through a nice web interface.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation on how to install, configure, and contribute to this project is hosted at &lt;a href="https://filebrowser.org"&gt;filebrowser.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Project Status&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;/p&gt; 
 &lt;p&gt;This project is currently on &lt;strong&gt;maintenance-only&lt;/strong&gt; mode, and is looking for new maintainers. For more information, please read the &lt;a href="https://github.com/filebrowser/filebrowser/discussions/4906"&gt;discussion #4906&lt;/a&gt;. Therefore, please note the following:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;It can take a while until someone gets back to you. Please be patient.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/filebrowser/filebrowser/issues"&gt;Issues&lt;/a&gt; are only being used to track bugs. Any unrelated issues will be converted into a &lt;a href="https://github.com/filebrowser/filebrowser/discussions"&gt;discussion&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;No new features will be implemented until further notice. The priority is on triaging issues and merge bug fixes.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;If you're interested in maintaining this project, please reach out via the discussion above.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are always welcome. To start contributing to this project, read our &lt;a href="https://raw.githubusercontent.com/filebrowser/filebrowser/master/CONTRIBUTING.md"&gt;guidelines&lt;/a&gt; first.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/filebrowser/filebrowser/master/LICENSE"&gt;Apache License 2.0&lt;/a&gt; © File Browser Contributors&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>smartcontractkit/chainlink</title>
      <link>https://github.com/smartcontractkit/chainlink</link>
      <description>&lt;p&gt;node of the decentralized oracle network, bridging on and off-chain computation&lt;/p&gt;&lt;hr&gt;&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://chain.link" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/logo-chainlink-blue.svg?sanitize=true" width="225" alt="Chainlink logo" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/smartcontract/chainlink/tags"&gt;&lt;img src="https://img.shields.io/github/v/tag/smartcontractkit/chainlink?style=flat-square" alt="GitHub tag (latest SemVer)" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/smartcontractkit/chainlink?style=flat-square" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/actions/workflows/changeset.yml?query=workflow%3AChangeset"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/smartcontractkit/chainlink/changeset.yml" alt="GitHub workflow changeset" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors-anon/smartcontractkit/chainlink?style=flat-square" alt="GitHub contributors" /&gt;&lt;/a&gt; &lt;a href="https://github.com/smartcontractkit/chainlink/commits/master"&gt;&lt;img src="https://img.shields.io/github/commit-activity/y/smartcontractkit/chainlink?style=flat-square" alt="GitHub commit activity" /&gt;&lt;/a&gt; &lt;a href="https://docs.chain.link/"&gt;&lt;img src="https://img.shields.io/static/v1?label=docs&amp;amp;message=latest&amp;amp;color=blue" alt="Official documentation" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://chain.link/"&gt;Chainlink&lt;/a&gt; expands the capabilities of smart contracts by enabling access to real-world data and off-chain computation while maintaining the security and reliability guarantees inherent to blockchain technology.&lt;/p&gt; 
&lt;p&gt;This repo contains the Chainlink core node and contracts. The core node is the bundled binary available to be run by node operators participating in a &lt;a href="https://link.smartcontract.com/whitepaper"&gt;decentralized oracle network&lt;/a&gt;. All major release versions have pre-built docker images available for download from the &lt;a href="https://hub.docker.com/r/smartcontract/chainlink/tags"&gt;Chainlink dockerhub&lt;/a&gt;. If you are interested in contributing please see our &lt;a href="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;. If you are here to report a bug or request a feature, please &lt;a href="https://github.com/smartcontractkit/chainlink/issues"&gt;check currently open Issues&lt;/a&gt;. For more information about how to get started with Chainlink, check our &lt;a href="https://docs.chain.link/"&gt;official documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Chainlink has an active and ever growing community. &lt;a href="https://discordapp.com/invite/aSK4zew"&gt;Discord&lt;/a&gt; is the primary communication channel used for day to day communication, answering development questions, and aggregating Chainlink related content. Take a look at the &lt;a href="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/COMMUNITY.md"&gt;community docs&lt;/a&gt; for more information regarding Chainlink social accounts, news, and networking.&lt;/p&gt; 
&lt;h2&gt;Build Chainlink&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/doc/install"&gt;Install Go 1.23&lt;/a&gt;, and add your GOPATH's &lt;a href="https://golang.org/doc/code.html#GOPATH"&gt;bin directory to your PATH&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Example Path for macOS &lt;code&gt;export PATH=$GOPATH/bin:$PATH&lt;/code&gt; &amp;amp; &lt;code&gt;export GOPATH=/Users/$USER/go&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;a href="https://nodejs.org/en/download/package-manager/"&gt;NodeJS v20&lt;/a&gt; &amp;amp; &lt;a href="https://pnpm.io/installation#using-npm"&gt;pnpm v10 via npm&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;It might be easier long term to use &lt;a href="https://nodejs.org/en/download/package-manager/#nvm"&gt;nvm&lt;/a&gt; to switch between node versions for different projects. For example, assuming $NODE_VERSION was set to a valid version of NodeJS, you could run: &lt;code&gt;nvm install $NODE_VERSION &amp;amp;&amp;amp; nvm use $NODE_VERSION&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;a href="https://wiki.postgresql.org/wiki/Detailed_installation_guides"&gt;Postgres (&amp;gt;= 12.x)&lt;/a&gt;. It is recommended to run the latest major version of postgres. 
  &lt;ul&gt; 
   &lt;li&gt;Note if you are running the official Chainlink docker image, the highest supported Postgres version is 16.x due to the bundled client.&lt;/li&gt; 
   &lt;li&gt;You should &lt;a href="https://www.postgresql.org/docs/current/ssl-tcp.html"&gt;configure Postgres&lt;/a&gt; to use SSL connection (or for testing you can set &lt;code&gt;?sslmode=disable&lt;/code&gt; in your Postgres query string).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Download Chainlink: &lt;code&gt;git clone https://github.com/smartcontractkit/chainlink &amp;amp;&amp;amp; cd chainlink&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Build and install Chainlink: &lt;code&gt;make install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run the node: &lt;code&gt;chainlink help&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For the latest information on setting up a development environment, see the &lt;a href="https://github.com/smartcontractkit/chainlink/wiki/Development-Setup-Guide"&gt;Development Setup Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Build from PR&lt;/h3&gt; 
&lt;p&gt;To build an unofficial testing-only image from a feature branch or PR. You can do one of the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Send a workflow dispatch event from our &lt;a href="https://github.com/smartcontractkit/chainlink/actions/workflows/docker-build.yml"&gt;&lt;code&gt;docker-build&lt;/code&gt; workflow&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Add the &lt;code&gt;build-publish&lt;/code&gt; label to your PR and then either retry the &lt;code&gt;docker-build&lt;/code&gt; workflow, or push a new commit.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Build Plugins&lt;/h3&gt; 
&lt;p&gt;Plugins are defined in yaml files within the &lt;code&gt;plugins/&lt;/code&gt; directory. Each plugin file is a yaml file and has a &lt;code&gt;plugins.&lt;/code&gt; prefix name. Plugins are installed with &lt;a href="https://github.com/smartcontractkit/chainlink-common/tree/main/pkg/loop/cmd/loopinstall"&gt;loopinstall&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To install the plugins, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make install-plugins
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Some plugins (such as those in &lt;code&gt;plugins/plugins.private.yaml&lt;/code&gt;) reference private GitHub repositories. To build these plugins, you must have a GITHUB_TOKEN environment variable set, or preferably use the &lt;a href="https://cli.github.com/manual/gh"&gt;gh&lt;/a&gt; GitHub CLI tool to use the &lt;a href="https://cli.github.com/manual/gh_auth_setup-git"&gt;GitHub CLI credential helper&lt;/a&gt; like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Sets up a credential helper.
gh auth setup-git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can build the plugins with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make install-plugins-private
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker Builds&lt;/h3&gt; 
&lt;p&gt;To build the experimental "plugins" Chainlink docker image, you can run this from the root of the repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# The GITHUB_TOKEN is required to access private repos which are used by some plugins.
export GITHUB_TOKEN=$(gh auth token) # requires the `gh` cli tool.
make docker-plugins
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ethereum Execution Client Requirements&lt;/h3&gt; 
&lt;p&gt;In order to run the Chainlink node you must have access to a running Ethereum node with an open websocket connection. Any Ethereum based network will work once you've &lt;a href="https://github.com/smartcontractkit/chainlink#configure"&gt;configured&lt;/a&gt; the chain ID. Ethereum node versions currently tested and supported:&lt;/p&gt; 
&lt;p&gt;[Officially supported]&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openethereum/openethereum"&gt;Parity/Openethereum&lt;/a&gt; (NOTE: Parity is deprecated and support for this client may be removed in future)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ethereum/go-ethereum/releases"&gt;Geth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyperledger/besu"&gt;Besu&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;[Supported but broken] These clients are supported by Chainlink, but have bugs that prevent Chainlink from working reliably on these execution clients.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NethermindEth/nethermind"&gt;Nethermind&lt;/a&gt; Blocking issues: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;del&gt;&lt;a href="https://github.com/NethermindEth/nethermind/issues/4384"&gt;https://github.com/NethermindEth/nethermind/issues/4384&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ledgerwatch/erigon"&gt;Erigon&lt;/a&gt; Blocking issues: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ledgerwatch/erigon/discussions/4946"&gt;https://github.com/ledgerwatch/erigon/discussions/4946&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ledgerwatch/erigon/issues/4030#issuecomment-1113964017"&gt;https://github.com/ledgerwatch/erigon/issues/4030#issuecomment-1113964017&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We cannot recommend specific version numbers for ethereum nodes since the software is being continually updated, but you should usually try to run the latest version available.&lt;/p&gt; 
&lt;h2&gt;Running a local Chainlink node&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: By default, chainlink will run in TLS mode. For local development you can disable this by using a &lt;code&gt;dev build&lt;/code&gt; using &lt;code&gt;make chainlink-dev&lt;/code&gt; and setting the TOML fields:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[WebServer]
SecureCookies = false
TLS.HTTPSPort = 0

[Insecure]
DevWebServer = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can generate self signed certificates using &lt;code&gt;tools/bin/self-signed-certs&lt;/code&gt; or &lt;a href="https://github.com/smartcontractkit/chainlink/wiki/Creating-Self-Signed-Certificates"&gt;manually&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To start your Chainlink node, simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;chainlink node start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default this will start on port 6688. You should be able to access the UI at &lt;a href="http://localhost:6688/"&gt;http://localhost:6688/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Chainlink provides a remote CLI client as well as a UI. Once your node has started, you can open a new terminal window to use the CLI. You will need to log in to authorize the client first:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;chainlink admin login
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(You can also set &lt;code&gt;ADMIN_CREDENTIALS_FILE=/path/to/credentials/file&lt;/code&gt; in future if you like, to avoid having to login again).&lt;/p&gt; 
&lt;p&gt;Now you can view your current jobs with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;chainlink jobs list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To find out more about the Chainlink CLI, you can always run &lt;code&gt;chainlink help&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href="https://docs.chain.link/"&gt;doc&lt;/a&gt; pages on &lt;a href="https://docs.chain.link/docs/jobs/"&gt;Jobs&lt;/a&gt; to learn more about how to create Jobs.&lt;/p&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;Node configuration is managed by a combination of environment variables and direct setting via API/UI/CLI.&lt;/p&gt; 
&lt;p&gt;Check the &lt;a href="https://docs.chain.link/docs/configuration-variables"&gt;official documentation&lt;/a&gt; for more information on how to configure your node.&lt;/p&gt; 
&lt;h3&gt;External Adapters&lt;/h3&gt; 
&lt;p&gt;External adapters are what make Chainlink easily extensible, providing simple integration of custom computations and specialized APIs. A Chainlink node communicates with external adapters via a simple REST API.&lt;/p&gt; 
&lt;p&gt;For more information on creating and using external adapters, please see our &lt;a href="https://docs.chain.link/docs/external-adapters"&gt;external adapters page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Verify Official Chainlink Releases&lt;/h2&gt; 
&lt;p&gt;We use &lt;code&gt;cosign&lt;/code&gt; with OIDC keyless signing during the &lt;a href="https://github.com/smartcontractkit/chainlink/actions/workflows/build-publish.yml"&gt;Build, Sign and Publish Chainlink&lt;/a&gt; workflow.&lt;/p&gt; 
&lt;p&gt;It is encourage for any node operator building from the official Chainlink docker image to verify the tagged release version was did indeed built from this workflow.&lt;/p&gt; 
&lt;p&gt;You will need &lt;code&gt;cosign&lt;/code&gt; in order to do this verification. &lt;a href="https://docs.sigstore.dev/system_config/installation/"&gt;Follow the instruction here to install cosign&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# tag is the tagged release version - ie. 2.16.0
cosign verify index.docker.io/smartcontract/chainlink:${tag} \
      --certificate-oidc-issuer https://token.actions.githubusercontent.com \
      --certificate-identity "https://github.com/smartcontractkit/chainlink/.github/workflows/build-publish.yml@refs/tags/v${tag}"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Running tests&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://pnpm.io/installation#using-npm"&gt;Install pnpm 10 via npm&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;a href="https://github.com/fjl/gencodec"&gt;gencodec&lt;/a&gt; and &lt;a href="https://stedolan.github.io/jq/download/"&gt;jq&lt;/a&gt; to be able to run &lt;code&gt;go generate ./...&lt;/code&gt; and &lt;code&gt;make abigen&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install mockery&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;make mockery&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Using the &lt;code&gt;make&lt;/code&gt; command will install the correct version.&lt;/p&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Generate and compile static assets:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make generate
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Prepare your development environment:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The tests require a postgres database. In turn, the environment variable &lt;code&gt;CL_DATABASE_URL&lt;/code&gt; must be set to value that can connect to &lt;code&gt;_test&lt;/code&gt; database, and the user must be able to create and drop the given &lt;code&gt;_test&lt;/code&gt; database.&lt;/p&gt; 
&lt;p&gt;Note: Other environment variables should not be set for all tests to pass&lt;/p&gt; 
&lt;p&gt;There helper script for initial setup to create an appropriate test user. It requires postgres to be running on localhost at port 5432. You will be prompted for the &lt;code&gt;postgres&lt;/code&gt; user password&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make setup-testdb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This script will save the &lt;code&gt;CL_DATABASE_URL&lt;/code&gt; in &lt;code&gt;.dbenv&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Changes to database require migrations to be run. Similarly, &lt;code&gt;pull&lt;/code&gt;'ing the repo may require migrations to run. After the one-time setup above:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;source .dbenv
make testdb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you encounter the error &lt;code&gt;database accessed by other users (SQLSTATE 55006) exit status 1&lt;/code&gt; and you want force the database creation then use&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;source .dbenv
make testdb-force
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="7"&gt; 
 &lt;li&gt;Run tests:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go test ./...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Notes&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;parallel&lt;/code&gt; flag can be used to limit CPU usage, for running tests in the background (&lt;code&gt;-parallel=4&lt;/code&gt;) - the default is &lt;code&gt;GOMAXPROCS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;p&lt;/code&gt; flag can be used to limit the number of &lt;em&gt;packages&lt;/em&gt; tested concurrently, if they are interferring with one another (&lt;code&gt;-p=1&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;-short&lt;/code&gt; flag skips tests which depend on the database, for quickly spot checking simpler tests in around one minute&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Race Detector&lt;/h4&gt; 
&lt;p&gt;As of Go 1.1, the runtime includes a data race detector, enabled with the &lt;code&gt;-race&lt;/code&gt; flag. This is used in CI via the &lt;code&gt;tools/bin/go_core_race_tests&lt;/code&gt; script. If the action detects a race, the artifact on the summary page will include &lt;code&gt;race.*&lt;/code&gt; files with detailed stack traces.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;&lt;strong&gt;It will not issue false positives, so take its warnings seriously.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For local, targeted race detection, you can run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;GORACE="log_path=$PWD/race" go test -race ./core/path/to/pkg -count 10
GORACE="log_path=$PWD/race" go test -race ./core/path/to/pkg -count 100 -run TestFooBar/sub_test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://go.dev/doc/articles/race_detector"&gt;https://go.dev/doc/articles/race_detector&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Fuzz tests&lt;/h4&gt; 
&lt;p&gt;As of Go 1.18, fuzz tests &lt;code&gt;func FuzzXXX(*testing.F)&lt;/code&gt; are included as part of the normal test suite, so existing cases are executed with &lt;code&gt;go test&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, you can run active fuzzing to search for new cases:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go test ./pkg/path -run=XXX -fuzz=FuzzTestName
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://go.dev/doc/fuzz/"&gt;https://go.dev/doc/fuzz/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Go Modules&lt;/h3&gt; 
&lt;p&gt;This repository contains three Go modules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;flowchart RL
    github.com/smartcontractkit/chainlink/v2
    github.com/smartcontractkit/chainlink/integration-tests --&amp;gt; github.com/smartcontractkit/chainlink/v2
    github.com/smartcontractkit/chainlink/core/scripts --&amp;gt; github.com/smartcontractkit/chainlink/v2

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;integration-tests&lt;/code&gt; and &lt;code&gt;core/scripts&lt;/code&gt; modules import the root module using a relative replace in their &lt;code&gt;go.mod&lt;/code&gt; files, so dependency changes in the root &lt;code&gt;go.mod&lt;/code&gt; often require changes in those modules as well. After making a change, &lt;code&gt;go mod tidy&lt;/code&gt; can be run on all three modules using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make gomodtidy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Generation&lt;/h3&gt; 
&lt;p&gt;Go generate is used to generate mocks in this project. Mocks are generated with &lt;a href="https://github.com/vektra/mockery"&gt;mockery&lt;/a&gt; and live in core/internal/mocks.&lt;/p&gt; 
&lt;h3&gt;Nix&lt;/h3&gt; 
&lt;p&gt;A &lt;a href="https://nixos.wiki/wiki/Development_environment_with_nix-shell"&gt;shell.nix&lt;/a&gt; is provided for use with the &lt;a href="https://nixos.org/"&gt;Nix package manager&lt;/a&gt;. By default,we utilize the shell through &lt;a href="https://nixos.wiki/wiki/Flakes"&gt;Nix Flakes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Nix defines a declarative, reproducible development environment. Flakes version use deterministic, frozen (&lt;code&gt;flake.lock&lt;/code&gt;) dependencies to gain more consistency/reproducibility on the built artifacts.&lt;/p&gt; 
&lt;p&gt;To use it:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;a href="https://nixos.org/download.html"&gt;nix package manager&lt;/a&gt; in your system.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enable &lt;a href="https://nixos.wiki/wiki/Flakes#Enable_flakes"&gt;flakes support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Run &lt;code&gt;nix develop&lt;/code&gt;. You will be put in shell containing all the dependencies.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Optionally, &lt;code&gt;nix develop --command $SHELL&lt;/code&gt; will make use of your current shell instead of the default (bash).&lt;/li&gt; 
 &lt;li&gt;You can use &lt;code&gt;direnv&lt;/code&gt; to enable it automatically when &lt;code&gt;cd&lt;/code&gt;-ing into the folder; for that, enable &lt;a href="https://github.com/nix-community/nix-direnv"&gt;nix-direnv&lt;/a&gt; and &lt;code&gt;use flake&lt;/code&gt; on it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Create a local postgres database:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;mkdir -p $PGDATA &amp;amp;&amp;amp; cd $PGDATA/
initdb
pg_ctl -l postgres.log -o "--unix_socket_directories='$PWD'" start
createdb chainlink_test -h localhost
createuser --superuser --password chainlink -h localhost
# then type a test password, e.g.: chainlink, and set it in shell.nix CL_DATABASE_URL
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;When re-entering project, you can restart postgres: &lt;code&gt;cd $PGDATA; pg_ctl -l postgres.log -o "--unix_socket_directories='$PWD'" start&lt;/code&gt; Now you can run tests or compile code as usual.&lt;/li&gt; 
 &lt;li&gt;When you're done, stop it: &lt;code&gt;cd $PGDATA; pg_ctl -o "--unix_socket_directories='$PWD'" stop&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Changesets&lt;/h3&gt; 
&lt;p&gt;We use &lt;a href="https://github.com/changesets/changesets"&gt;changesets&lt;/a&gt; to manage versioning for libs and the services.&lt;/p&gt; 
&lt;p&gt;Every PR that modifies any configuration or code, should most likely accompanied by a changeset file.&lt;/p&gt; 
&lt;p&gt;To install &lt;code&gt;changesets&lt;/code&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;code&gt;pnpm&lt;/code&gt; if it is not already installed - &lt;a href="https://pnpm.io/installation"&gt;docs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;pnpm install&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Either after or before you create a commit, run the &lt;code&gt;pnpm changeset&lt;/code&gt; command to create an accompanying changeset entry which will reflect on the CHANGELOG for the next release.&lt;/p&gt; 
&lt;p&gt;The format is based on &lt;a href="https://keepachangelog.com/en/1.0.0/"&gt;Keep a Changelog&lt;/a&gt;,&lt;/p&gt; 
&lt;p&gt;and this project adheres to &lt;a href="https://semver.org/spec/v2.0.0.html"&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Tips&lt;/h3&gt; 
&lt;p&gt;For more tips on how to build and test Chainlink, see our &lt;a href="https://github.com/smartcontractkit/chainlink/wiki/Development-Tips"&gt;development tips page&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;Contributions are welcome to Chainlink's source code.&lt;/p&gt; 
&lt;p&gt;Please check out our &lt;a href="https://raw.githubusercontent.com/smartcontractkit/chainlink/develop/docs/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Thank you!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chaitin/SafeLine</title>
      <link>https://github.com/chaitin/SafeLine</link>
      <description>&lt;p&gt;SafeLine is a self-hosted WAF(Web Application Firewall) / reverse proxy to protect your web apps from attacks and exploits.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/banner.png" width="400" /&gt; &lt;/p&gt; 
&lt;h4 align="center"&gt; SafeLine - Make your web apps secure &lt;/h4&gt; 
&lt;p align="center"&gt; &lt;a target="_blank" href="https://ly.safepoint.cloud/laA8asp"&gt;🏠 Website&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target="_blank" href="https://ly.safepoint.cloud/w2AeHhb"&gt;📖 Docs&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target="_blank" href="https://ly.safepoint.cloud/hSMd4SH"&gt;🔍 Live Demo&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target="_blank" href="https://discord.gg/SVnZGzHFvn"&gt;🙋‍♂️ Discord&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target="_blank" href="https://raw.githubusercontent.com/chaitin/SafeLine/main/README_CN.md"&gt;中文版&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;👋 INTRODUCTION&lt;/h2&gt; 
&lt;p&gt;SafeLine is a self-hosted &lt;strong&gt;&lt;code&gt;WAF(Web Application Firewall)&lt;/code&gt;&lt;/strong&gt; to protect your web apps from attacks and exploits.&lt;/p&gt; 
&lt;p&gt;A web application firewall helps protect web apps by filtering and monitoring HTTP traffic between a web application and the Internet. It typically protects web apps from attacks such as &lt;code&gt;SQL injection&lt;/code&gt;, &lt;code&gt;XSS&lt;/code&gt;, &lt;code&gt;code injection&lt;/code&gt;, &lt;code&gt;os command injection&lt;/code&gt;, &lt;code&gt;CRLF injection&lt;/code&gt;, &lt;code&gt;ldap injection&lt;/code&gt;, &lt;code&gt;xpath injection&lt;/code&gt;, &lt;code&gt;RCE&lt;/code&gt;, &lt;code&gt;XXE&lt;/code&gt;, &lt;code&gt;SSRF&lt;/code&gt;, &lt;code&gt;path traversal&lt;/code&gt;, &lt;code&gt;backdoor&lt;/code&gt;, &lt;code&gt;bruteforce&lt;/code&gt;, &lt;code&gt;http-flood&lt;/code&gt;, &lt;code&gt;bot abused&lt;/code&gt;, among others.&lt;/p&gt; 
&lt;h4&gt;💡 How It Works&lt;/h4&gt; 
&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/how-it-works.png" width="800" /&gt; 
&lt;p&gt;By deploying a WAF in front of a web application, a shield is placed between the web application and the Internet. While a proxy server protects a client machine’s identity by using an intermediary, a WAF is a type of reverse-proxy, protecting the server from exposure by having clients pass through the WAF before reaching the server.&lt;/p&gt; 
&lt;p&gt;A WAF protects your web apps by filtering, monitoring, and blocking any malicious HTTP/S traffic traveling to the web application, and prevents any unauthorized data from leaving the app. It does this by adhering to a set of policies that help determine what traffic is malicious and what traffic is safe. Just as a proxy server acts as an intermediary to protect the identity of a client, a WAF operates in similar fashion but acting as a reverse proxy intermediary that protects the web app server from a potentially malicious client.&lt;/p&gt; 
&lt;p&gt;its core capabilities include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Defenses for web attacks&lt;/li&gt; 
 &lt;li&gt;Proactive bot abused defense&lt;/li&gt; 
 &lt;li&gt;HTML &amp;amp; JS code encryption&lt;/li&gt; 
 &lt;li&gt;IP-based rate limiting&lt;/li&gt; 
 &lt;li&gt;Web Access Control List&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;⚡️ Screenshots&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/screenshot-1.png" width="370" /&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/screenshot-2.png" width="370" /&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/screenshot-3.png" width="370" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/screenshot-4.png" width="370" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Get &lt;a href="https://demo.waf.chaitin.com:9443/"&gt;Live Demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🔥 FEATURES&lt;/h2&gt; 
&lt;p&gt;List of the main features as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Block Web Attacks&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;It defenses for all of web attacks, such as &lt;code&gt;SQL injection&lt;/code&gt;, &lt;code&gt;XSS&lt;/code&gt;, &lt;code&gt;code injection&lt;/code&gt;, &lt;code&gt;os command injection&lt;/code&gt;, &lt;code&gt;CRLF injection&lt;/code&gt;, &lt;code&gt;XXE&lt;/code&gt;, &lt;code&gt;SSRF&lt;/code&gt;, &lt;code&gt;path traversal&lt;/code&gt; and so on.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Rate Limiting&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Defend your web apps against &lt;code&gt;DoS attacks&lt;/code&gt;, &lt;code&gt;bruteforce attempts&lt;/code&gt;, &lt;code&gt;traffic surges&lt;/code&gt;, and other types of abuse by throttling traffic that exceeds defined limits.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Anti-Bot Challenge&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Anti-Bot challenges to protect your website from &lt;code&gt;bot attacks&lt;/code&gt;, humen users will be allowed, crawlers and bots will be blocked.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Authentication Challenge&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When authentication challenge turned on, visitors need to enter the password, otherwise they will be blocked.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;Dynamic Protection&lt;/code&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When dynamic protection turned on, html and js codes in your web server will be dynamically encrypted by each time you visit.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🧩 Showcases&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Legitimate User&lt;/th&gt; 
   &lt;th&gt;Malicious User&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;Block Web Attacks&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/skeleton.png" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/blocked-for-attack-detected.png" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;Rate Limiting&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/skeleton.png" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/blocked-for-access-too-fast.png" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;Anti-Bot Challenge&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/captcha-1.gif" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/captcha-2.gif" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;Auth Challenge&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/auth-1.gif" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/auth-2.gif" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;HTML Dynamic Protection&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/dynamic-html-1.png" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/dynamic-html-2.png" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;JS Dynamic Protection&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/dynamic-js-1.png" width="270" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/dynamic-js-2.png" width="270" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🚀 Quickstart&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] 中国大陆用户安装国际版可能会导致无法连接云服务，请查看 &lt;a href="https://docs.waf-ce.chaitin.cn/zh/%E4%B8%8A%E6%89%8B%E6%8C%87%E5%8D%97/%E5%AE%89%E8%A3%85%E9%9B%B7%E6%B1%A0"&gt;中文版安装文档&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;📦 Installing&lt;/h4&gt; 
&lt;p&gt;Information on how to install SafeLine can be found in the &lt;a href="https://docs.waf.chaitin.com/en/GetStarted/Deploy"&gt;Install Guide&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;⚙️ Protecting Web Apps&lt;/h4&gt; 
&lt;p&gt;to see &lt;a href="https://docs.waf.chaitin.com/en/GetStarted/AddApplication"&gt;Configuration&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📋 More Informations&lt;/h2&gt; 
&lt;h4&gt;Effect Evaluation&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Metric&lt;/th&gt; 
   &lt;th&gt;ModSecurity, Level 1&lt;/th&gt; 
   &lt;th&gt;CloudFlare, Free&lt;/th&gt; 
   &lt;th&gt;SafeLine, Balance&lt;/th&gt; 
   &lt;th&gt;SafeLine, Strict&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Total Samples&lt;/td&gt; 
   &lt;td&gt;33669&lt;/td&gt; 
   &lt;td&gt;33669&lt;/td&gt; 
   &lt;td&gt;33669&lt;/td&gt; 
   &lt;td&gt;33669&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Detection&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;69.74%&lt;/td&gt; 
   &lt;td&gt;10.70%&lt;/td&gt; 
   &lt;td&gt;71.65%&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;76.17%&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;False Positive&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;17.58%&lt;/td&gt; 
   &lt;td&gt;0.07%&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;0.07%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;0.22%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Accuracy&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;82.20%&lt;/td&gt; 
   &lt;td&gt;98.40%&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;99.45%&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;99.38%&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Is SafeLine Production-Ready?&lt;/h4&gt; 
&lt;p&gt;Yes, SafeLine is production-ready.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Over 180,000 installations worldwide&lt;/li&gt; 
 &lt;li&gt;Protecting over 1,000,000 Websites&lt;/li&gt; 
 &lt;li&gt;Handling over 30,000,000,000 HTTP Requests Daily&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🙋‍♂️ Community&lt;/h4&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.gg/SVnZGzHFvn"&gt;Discord&lt;/a&gt; to get community support, the core team members are identified by the STAFF role in Discord.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;channel &lt;a href="https://discord.com/channels/1243085666485534830/1243120292822253598"&gt;#feedback&lt;/a&gt;: for new features discussion.&lt;/li&gt; 
 &lt;li&gt;channel &lt;a href="https://discord.com/channels/1243085666485534830/1263761679619981413"&gt;#FAQ&lt;/a&gt;: for FAQ.&lt;/li&gt; 
 &lt;li&gt;channel &lt;a href="https://discord.com/channels/1243085666485534830/1243115843919806486"&gt;#general&lt;/a&gt;: for any other questions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Several contact options exist for our community, the primary one being Discord. These are in addition to GitHub issues for creating a new issue.&lt;/p&gt; 
&lt;p align="left"&gt; &lt;a target="_blank" href="https://discord.gg/SVnZGzHFvn"&gt;&lt;img src="https://img.shields.io/badge/Discord-5865F2?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a target="_blank" href="https://x.com/safeline_waf"&gt;&lt;img src="https://img.shields.io/badge/X.com-000000?style=flat&amp;amp;logo=x&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a target="_blank" href="https://raw.githubusercontent.com/chaitin/SafeLine/main/images/wechat.png"&gt;&lt;img src="https://img.shields.io/badge/WeChat-07C160?style=flat&amp;amp;logo=wechat&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h4&gt;💪 PRO Edition&lt;/h4&gt; 
&lt;p&gt;Coming soon!&lt;/p&gt; 
&lt;h4&gt;📝 License&lt;/h4&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/chaitin/SafeLine/main/LICENSE.md"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>go-git/go-git</title>
      <link>https://github.com/go-git/go-git</link>
      <description>&lt;p&gt;A highly extensible Git implementation in pure Go.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://cdn.rawgit.com/src-d/artwork/02036484/go-git/files/go-git-github-readme-header.png" alt="go-git logo" /&gt; &lt;a href="https://pkg.go.dev/github.com/go-git/go-git/v6"&gt;&lt;img src="https://godoc.org/github.com/go-git/go-git/v6?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://github.com/go-git/go-git/actions"&gt;&lt;img src="https://github.com/go-git/go-git/workflows/Test/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/go-git/go-git"&gt;&lt;img src="https://goreportcard.com/badge/github.com/go-git/go-git" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/go-git/go-git"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/go-git/go-git/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;go-git&lt;/em&gt; is a highly extensible git implementation library written in &lt;strong&gt;pure Go&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;It can be used to manipulate git repositories at low level &lt;em&gt;(plumbing)&lt;/em&gt; or high level &lt;em&gt;(porcelain)&lt;/em&gt;, through an idiomatic Go API. It also supports several types of storage, such as in-memory filesystems, or custom implementations, thanks to the &lt;a href="https://pkg.go.dev/github.com/go-git/go-git/v6/plumbing/storer"&gt;&lt;code&gt;Storer&lt;/code&gt;&lt;/a&gt; interface.&lt;/p&gt; 
&lt;p&gt;It's being actively developed since 2015 and is being used extensively by &lt;a href="https://keybase.io/blog/encrypted-git-for-everyone"&gt;Keybase&lt;/a&gt;, &lt;a href="https://gitea.io/en-us/"&gt;Gitea&lt;/a&gt; or &lt;a href="https://github.com/search?q=org%3Apulumi+go-git&amp;amp;type=Code"&gt;Pulumi&lt;/a&gt;, and by many other libraries and tools.&lt;/p&gt; 
&lt;h2&gt;Project Status&lt;/h2&gt; 
&lt;p&gt;After the &lt;a href="https://github.com/src-d/go-git/issues/1295#issuecomment-592965250"&gt;legal issues&lt;/a&gt; with the &lt;a href="https://github.com/src-d"&gt;&lt;code&gt;src-d&lt;/code&gt;&lt;/a&gt; organization, the lack of update for four months and the requirement to make a hard fork, the project is &lt;strong&gt;now back to normality&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;The project is currently actively maintained by individual contributors, including several of the original authors, but also backed by a new company, &lt;a href="https://github.com/gitsight"&gt;gitsight&lt;/a&gt;, where &lt;code&gt;go-git&lt;/code&gt; is a critical component used at scale.&lt;/p&gt; 
&lt;h2&gt;Comparison with git&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;go-git&lt;/em&gt; aims to be fully compatible with &lt;a href="https://github.com/git/git"&gt;git&lt;/a&gt;, all the &lt;em&gt;porcelain&lt;/em&gt; operations are implemented to work exactly as &lt;em&gt;git&lt;/em&gt; does.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;git&lt;/em&gt; is a humongous project with years of development by thousands of contributors, making it challenging for &lt;em&gt;go-git&lt;/em&gt; to implement all the features. You can find a comparison of &lt;em&gt;go-git&lt;/em&gt; vs &lt;em&gt;git&lt;/em&gt; in the &lt;a href="https://raw.githubusercontent.com/go-git/go-git/main/COMPATIBILITY.md"&gt;compatibility documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The recommended way to install &lt;em&gt;go-git&lt;/em&gt; is:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "github.com/go-git/go-git/v6" // with go modules enabled (GO111MODULE=on or outside GOPATH)
import "github.com/go-git/go-git" // with go modules disabled
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Please note that the &lt;code&gt;CheckIfError&lt;/code&gt; and &lt;code&gt;Info&lt;/code&gt; functions used in the examples are from the &lt;a href="https://github.com/go-git/go-git/raw/master/_examples/common.go#L19"&gt;examples package&lt;/a&gt; just to be used in the examples.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Basic example&lt;/h3&gt; 
&lt;p&gt;A basic example that mimics the standard &lt;code&gt;git clone&lt;/code&gt; command&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;// Clone the given repository to the given directory
Info("git clone https://github.com/go-git/go-git")

_, err := git.PlainClone("/tmp/foo", &amp;amp;git.CloneOptions{
    URL:      "https://github.com/go-git/go-git",
    Progress: os.Stdout,
})

CheckIfError(err)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Outputs:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Counting objects: 4924, done.
Compressing objects: 100% (1333/1333), done.
Total 4924 (delta 530), reused 6 (delta 6), pack-reused 3533
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;In-memory example&lt;/h3&gt; 
&lt;p&gt;Cloning a repository into memory and printing the history of HEAD, just like &lt;code&gt;git log&lt;/code&gt; does&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;// Clones the given repository in memory, creating the remote, the local
// branches and fetching the objects, exactly as:
Info("git clone https://github.com/go-git/go-billy")

r, err := git.Clone(memory.NewStorage(), nil, &amp;amp;git.CloneOptions{
    URL: "https://github.com/go-git/go-billy",
})

CheckIfError(err)

// Gets the HEAD history from HEAD, just like this command:
Info("git log")

// ... retrieves the branch pointed by HEAD
ref, err := r.Head()
CheckIfError(err)


// ... retrieves the commit history
cIter, err := r.Log(&amp;amp;git.LogOptions{From: ref.Hash()})
CheckIfError(err)

// ... just iterates over the commits, printing it
err = cIter.ForEach(func(c *object.Commit) error {
	fmt.Println(c)
	return nil
})
CheckIfError(err)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Outputs:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;commit ded8054fd0c3994453e9c8aacaf48d118d42991e
Author: Santiago M. Mola &amp;lt;santi@mola.io&amp;gt;
Date:   Sat Nov 12 21:18:41 2016 +0100

    index: ReadFrom/WriteTo returns IndexReadError/IndexWriteError. (#9)

commit df707095626f384ce2dc1a83b30f9a21d69b9dfc
Author: Santiago M. Mola &amp;lt;santi@mola.io&amp;gt;
Date:   Fri Nov 11 13:23:22 2016 +0100

    readwriter: fix bug when writing index. (#10)

    When using ReadWriter on an existing siva file, absolute offset for
    index entries was not being calculated correctly.
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find this &lt;a href="https://raw.githubusercontent.com/go-git/go-git/main/_examples/log/main.go"&gt;example&lt;/a&gt; and many others in the &lt;a href="https://raw.githubusercontent.com/go-git/go-git/main/_examples"&gt;examples&lt;/a&gt; folder.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/go-git/go-git/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22"&gt;Contributions&lt;/a&gt; are more than welcome, if you are interested please take a look to our &lt;a href="https://raw.githubusercontent.com/go-git/go-git/main/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache License Version 2.0, see &lt;a href="https://raw.githubusercontent.com/go-git/go-git/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>oauth2-proxy/oauth2-proxy</title>
      <link>https://github.com/oauth2-proxy/oauth2-proxy</link>
      <description>&lt;p&gt;A reverse proxy that provides authentication with Google, Azure, OpenID Connect and many more identity providers.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/oauth2-proxy/oauth2-proxy/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/oauth2-proxy/oauth2-proxy/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Continuous Integration" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/oauth2-proxy/oauth2-proxy"&gt;&lt;img src="https://goreportcard.com/badge/github.com/oauth2-proxy/oauth2-proxy" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/oauth2-proxy/oauth2-proxy"&gt;&lt;img src="https://godoc.org/github.com/oauth2-proxy/oauth2-proxy?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/oauth2-proxy/oauth2-proxy/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="MIT licensed" /&gt;&lt;/a&gt; &lt;a href="https://codeclimate.com/github/oauth2-proxy/oauth2-proxy/maintainability"&gt;&lt;img src="https://api.codeclimate.com/v1/badges/a58ff79407212e2beacb/maintainability" alt="Maintainability" /&gt;&lt;/a&gt; &lt;a href="https://codeclimate.com/github/oauth2-proxy/oauth2-proxy/test_coverage"&gt;&lt;img src="https://api.codeclimate.com/v1/badges/a58ff79407212e2beacb/test_coverage" alt="Test Coverage" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/oauth2-proxy/oauth2-proxy/master/docs/static/img/logos/OAuth2_Proxy_horizontal.svg?sanitize=true" alt="OAuth2 Proxy" /&gt;&lt;/p&gt; 
&lt;p&gt;OAuth2-Proxy is a flexible, open-source tool that can act as either a standalone reverse proxy or a middleware component integrated into existing reverse proxy or load balancer setups. It provides a simple and secure way to protect your web applications with OAuth2 / OIDC authentication. As a reverse proxy, it intercepts requests to your application and redirects users to an OAuth2 provider for authentication. As a middleware, it can be seamlessly integrated into your existing infrastructure to handle authentication for multiple applications.&lt;/p&gt; 
&lt;p&gt;OAuth2-Proxy supports a lot of OAuth2 as well as OIDC providers. Either through a generic OIDC client or a specific implementation for Google, Microsoft Entra ID, GitHub, login.gov and others. Through specialised provider implementations oauth2-proxy can extract more details about the user like preferred usernames and groups. Those details can then be forwarded as HTTP headers to your upstream applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/oauth2-proxy/oauth2-proxy/master/docs/static/img/simplified-architecture.svg?sanitize=true" alt="Simplified Architecture" /&gt;&lt;/p&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;OAuth2-Proxy's &lt;a href="https://oauth2-proxy.github.io/oauth2-proxy/installation"&gt;Installation Docs&lt;/a&gt; cover how to install and configure your setup. Additionally you can take a further look at the &lt;a href="https://github.com/oauth2-proxy/oauth2-proxy/tree/master/contrib/local-environment"&gt;example setup files&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;h3&gt;Binaries&lt;/h3&gt; 
&lt;p&gt;We publish oauth2-proxy as compiled binaries on GitHub for all major architectures as well as more exotic ones like &lt;code&gt;ppc64le&lt;/code&gt; as well as &lt;code&gt;s390x&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href="https://github.com/oauth2-proxy/oauth2-proxy/releases/latest"&gt;latest release&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Images&lt;/h3&gt; 
&lt;p&gt;From &lt;code&gt;v7.6.0&lt;/code&gt; and up the base image has been changed from Alpine to &lt;a href="https://github.com/GoogleContainerTools/distroless"&gt;GoogleContainerTools/distroless&lt;/a&gt;. This image comes with even fewer installed dependencies and thus should improve security. The image therefore is also slightly smaller than Alpine. For debugging purposes (and those who really need it. e.g. &lt;code&gt;armv6&lt;/code&gt;) we still provide images based on Alpine. The tags of these images are suffixed with &lt;code&gt;-alpine&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Since 2023-11-18 we build nightly images directly from the &lt;code&gt;master&lt;/code&gt; branch and provide them at &lt;code&gt;quay.io/oauth2-proxy/oauth2-proxy-nightly&lt;/code&gt;. These images are considered unstable and therefore should &lt;strong&gt;NOT&lt;/strong&gt; be used for production purposes unless you know what you're doing.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/9/96/Microsoft_logo_%282012%29.svg?sanitize=true" alt="Microsoft" /&gt; Microsoft Azure credits for open source projects&lt;/p&gt; 
&lt;p&gt;Would you like to sponsor the project then please contact us at &lt;a href="mailto:sponsors@oauth2-proxy.dev"&gt;sponsors@oauth2-proxy.dev&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Involved&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://gophers.slack.com/archives/CM2RSS25N"&gt;&lt;img src="https://img.shields.io/badge/slack-Gopher_%23oauth2--proxy-red?logo=slack" alt="Slack" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Join the #oauth2-proxy &lt;a href="https://gophers.slack.com/archives/CM2RSS25N"&gt;Slack channel&lt;/a&gt; to chat with other users of oauth2-proxy or reach out to the maintainers directly. Use the &lt;a href="https://invite.slack.golangbridge.org/"&gt;public invite link&lt;/a&gt; to get an invite for the Gopher Slack space.&lt;/p&gt; 
&lt;p&gt;OAuth2-Proxy is a community-driven project. We rely on the contribut️ions of our users to continually improve it. While review times can vary, we appreciate your patience and understanding. As a volunteer-driven project, we strive to keep this project stable and might take longer to merge changes.&lt;/p&gt; 
&lt;p&gt;If you want to contribute to the project. Please see our &lt;a href="https://oauth2-proxy.github.io/oauth2-proxy/community/contribution"&gt;Contributing&lt;/a&gt; guide.&lt;/p&gt; 
&lt;p&gt;Who uses OAuth2-Proxy? Have a look at our new &lt;a href="https://raw.githubusercontent.com/oauth2-proxy/oauth2-proxy/master/ADOPTERS.md"&gt;ADOPTERS&lt;/a&gt; file and feel free to open a PR to add your organisation.&lt;/p&gt; 
&lt;p&gt;Thanks to all the people who already contributed ❤&lt;/p&gt; 
&lt;a href="https://github.com/oauth2-proxy/oauth2-proxy/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=oauth2-proxy/oauth2-proxy&amp;amp;columns=15&amp;amp;max=75" /&gt; &lt;img src="https://img.shields.io/github/contributors/oauth2-proxy/oauth2-proxy" /&gt; &lt;/a&gt; 
&lt;p&gt;Made with &lt;a href="https://contrib.rocks"&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you believe you have found a vulnerability within OAuth2 Proxy or any of its dependencies, please do &lt;strong&gt;NOT&lt;/strong&gt; open an issue or PR on GitHub, please do &lt;strong&gt;NOT&lt;/strong&gt; post any details publicly.&lt;/p&gt; 
&lt;p&gt;Security disclosures &lt;strong&gt;MUST&lt;/strong&gt; be done in private. If you have found an issue that you would like to bring to the attention of the maintainers, please compose an email and send it to the list of people listed in our &lt;a href="https://raw.githubusercontent.com/oauth2-proxy/oauth2-proxy/master/MAINTAINERS"&gt;MAINTAINERS&lt;/a&gt; file.&lt;/p&gt; 
&lt;p&gt;For more details read our full &lt;a href="https://oauth2-proxy.github.io/oauth2-proxy/community/security#security-disclosures"&gt;Security Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Security Notice for v6.0.0 and older&lt;/h3&gt; 
&lt;p&gt;If you are running a version older than v6.0.0 we &lt;strong&gt;strongly recommend&lt;/strong&gt; to the current version.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/oauth2-proxy/oauth2-proxy/security/advisories/GHSA-5m6c-jp6f-2vcv"&gt;open redirect vulnerability&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Repository History&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;2018-11-27:&lt;/strong&gt; This repository was forked from &lt;a href="https://github.com/bitly/oauth2_proxy"&gt;bitly/OAuth2_Proxy&lt;/a&gt;. Versions v3.0.0 and up are from this fork and will have diverged from any changes in the original fork. A list of changes can be seen in the &lt;a href="https://raw.githubusercontent.com/oauth2-proxy/oauth2-proxy/master/CHANGELOG.md"&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2020-03-29:&lt;/strong&gt; This project was formerly hosted as &lt;code&gt;pusher/oauth2_proxy&lt;/code&gt; but has been renamed to &lt;code&gt;oauth2-proxy/oauth2-proxy&lt;/code&gt;. Going forward, all images shall be available at &lt;code&gt;quay.io/oauth2-proxy/oauth2-proxy&lt;/code&gt; and binaries will be named &lt;code&gt;oauth2-proxy&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;OAuth2-Proxy is distributed under &lt;a href="https://raw.githubusercontent.com/oauth2-proxy/oauth2-proxy/master/LICENSE"&gt;The MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>putyy/res-downloader</title>
      <link>https://github.com/putyy/res-downloader</link>
      <description>&lt;p&gt;视频号、小程序、抖音、快手、小红书、直播流、m3u8、酷狗、QQ音乐等常见网络资源下载!&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/putyy/res-downloader"&gt;&lt;img src="https://raw.githubusercontent.com/putyy/res-downloader/master/build/appicon.png" width="120" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h1&gt;res-downloader&lt;/h1&gt; 
 &lt;h4&gt;📖 中文 | &lt;a href="https://github.com/putyy/res-downloader/raw/master/README-EN.md"&gt;English&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://github.com/putyy/res-downloader/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/putyy/res-downloader" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/putyy/res-downloader/fork"&gt;&lt;img src="https://img.shields.io/github/forks/putyy/res-downloader" alt="GitHub forks" /&gt;&lt;/a&gt; &lt;a href="https://github.com/putyy/res-downloader/releases"&gt;&lt;img src="https://img.shields.io/github/release/putyy/res-downloader" alt="GitHub release" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/downloads/putyy/res-downloader/total" alt="GitHub All Releases" /&gt; &lt;a href="https://github.com/putyy/res-downloader/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/putyy/res-downloader" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h3&gt;🎉 爱享素材下载器&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;一款基于 Go + &lt;a href="https://github.com/wailsapp/wails"&gt;Wails&lt;/a&gt; 的跨平台资源下载工具，简洁易用，支持多种资源嗅探与下载。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;✨ 功能特色&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 &lt;strong&gt;简单易用&lt;/strong&gt;：操作简单，界面清晰美观&lt;/li&gt; 
 &lt;li&gt;🖥️ &lt;strong&gt;多平台支持&lt;/strong&gt;：Windows / macOS / Linux&lt;/li&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;多资源类型支持&lt;/strong&gt;：视频 / 音频 / 图片 / m3u8 / 直播流等&lt;/li&gt; 
 &lt;li&gt;📱 &lt;strong&gt;平台兼容广泛&lt;/strong&gt;：支持微信视频号、小程序、抖音、快手、小红书、酷狗音乐、QQ音乐等&lt;/li&gt; 
 &lt;li&gt;🌍 &lt;strong&gt;代理抓包&lt;/strong&gt;：支持设置代理获取受限网络下的资源&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📚 文档 &amp;amp; 版本&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📘 &lt;a href="https://res.putyy.com/"&gt;在线文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💬 &lt;a href="https://www.putyy.com/app/admin/upload/img/20250418/6801d9554dc7.webp"&gt;加入交流群&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🧩 &lt;a href="https://github.com/putyy/res-downloader/releases"&gt;最新版&lt;/a&gt; ｜ &lt;a href="https://github.com/putyy/resd-mini"&gt;Mini版 使用默认浏览器展示UI&lt;/a&gt; ｜ &lt;a href="https://github.com/putyy/res-downloader/tree/old"&gt;Electron旧版 支持Win7&lt;/a&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;em&gt;群满时可加微信 &lt;code&gt;AmorousWorld&lt;/code&gt;，请备注“github”&lt;/em&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🧩 下载地址&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🆕 &lt;a href="https://github.com/putyy/res-downloader/releases"&gt;GitHub 下载&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🆕 &lt;a href="https://wwjv.lanzoum.com/b04wgtfyb"&gt;蓝奏云下载（密码：9vs5）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;⚠️ &lt;em&gt;Win7 用户请下载 &lt;code&gt;2.3.0&lt;/code&gt; 版本&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🖼️ 预览&lt;/h2&gt; 
&lt;h2&gt;&lt;img src="https://raw.githubusercontent.com/putyy/res-downloader/master/docs/images/show.webp" alt="预览" /&gt;&lt;/h2&gt; 
&lt;h2&gt;🚀 使用方法&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;请按以下步骤操作以正确使用软件：&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;安装时务必 &lt;strong&gt;允许安装证书文件&lt;/strong&gt; 并 &lt;strong&gt;允许网络访问&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;打开软件 → 首页左上角点击 &lt;strong&gt;“启动代理”&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;选择要获取的资源类型（默认全部）&lt;/li&gt; 
 &lt;li&gt;在外部打开资源页面（如视频号、小程序、网页等）&lt;/li&gt; 
 &lt;li&gt;返回软件首页，即可看到资源列表&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;❓ 常见问题&lt;/h2&gt; 
&lt;h3&gt;📺 m3u8 视频资源&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;在线预览：&lt;a href="https://m3u8play.com/"&gt;m3u8play&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;视频下载：&lt;a href="https://m3u8-down.gowas.cn/"&gt;m3u8-down&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📡 直播流资源&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;推荐使用 &lt;a href="https://obsproject.com/"&gt;OBS&lt;/a&gt; 进行录制（教程请百度）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🐢 下载慢、大文件失败？&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;推荐工具： 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.neatdownloadmanager.com/index.php/en/"&gt;Neat Download Manager&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://motrix.app/download"&gt;Motrix&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;视频号资源下载后可在操作项点击 &lt;code&gt;视频解密（视频号）&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧩 软件无法拦截资源？&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;检查是否正确设置系统代理：&lt;br /&gt; 地址：127.0.0.1 端口：8899&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🌐 关闭软件后无法上网？&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;手动关闭系统代理设置&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧠 更多问题&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/putyy/res-downloader/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://s.gowas.cn/d/4089"&gt;爱享论坛讨论帖&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💡 实现原理 &amp;amp; 初衷&lt;/h2&gt; 
&lt;p&gt;本工具通过代理方式实现网络抓包，并筛选可用资源。与 Fiddler、Charles、浏览器 DevTools 原理类似，但对资源进行了更友好的筛选、展示和处理，大幅度降低了使用门槛，更适合大众用户使用。&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⚠️ 免责声明&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;本软件仅供学习与研究用途，禁止用于任何商业或违法用途。&lt;br /&gt; 如因此产生的任何法律责任，概与作者无关！&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>actions/actions-runner-controller</title>
      <link>https://github.com/actions/actions-runner-controller</link>
      <description>&lt;p&gt;Kubernetes controller for GitHub Actions self-hosted runners&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Actions Runner Controller (ARC)&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://bestpractices.coreinfrastructure.org/projects/6061"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/6061/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jonico/awesome-runners"&gt;&lt;img src="https://img.shields.io/badge/listed%20on-awesome--runners-blue.svg?sanitize=true" alt="awesome-runners" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/search?repo=actions-runner-controller"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/actions-runner-controller" alt="Artifact Hub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Actions Runner Controller (ARC) is a Kubernetes operator that orchestrates and scales self-hosted runners for GitHub Actions.&lt;/p&gt; 
&lt;p&gt;With ARC, you can create runner scale sets that automatically scale based on the number of workflows running in your repository, organization, or enterprise. Because controlled runners can be ephemeral and based on containers, new runner instances can scale up or down rapidly and cleanly. For more information about autoscaling, see &lt;a href="https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners/autoscaling-with-self-hosted-runners"&gt;"Autoscaling with self-hosted runners."&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can set up ARC on Kubernetes using Helm, then create and run a workflow that uses runner scale sets. For more information about runner scale sets, see &lt;a href="https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners-with-actions-runner-controller/deploying-runner-scale-sets-with-actions-runner-controller#runner-scale-set"&gt;"Deploying runner scale sets with Actions Runner Controller."&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;People&lt;/h2&gt; 
&lt;p&gt;Actions Runner Controller (ARC) is an open-source project currently developed and maintained in collaboration with the GitHub Actions team, external maintainers @mumoshu and @toast-gear, various &lt;a href="https://github.com/actions/actions-runner-controller/graphs/contributors"&gt;contributors&lt;/a&gt;, and the &lt;a href="https://github.com/actions/actions-runner-controller/discussions"&gt;awesome community&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you think the project is awesome and is adding value to your business, please consider directly sponsoring &lt;a href="https://github.com/sponsors/actions-runner-controller"&gt;community maintainers&lt;/a&gt; and individual contributors via GitHub Sponsors.&lt;/p&gt; 
&lt;p&gt;If you are already the employer of one of the contributors, sponsoring via GitHub Sponsors might not be an option. Just support them by other means!&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/sponsors/actions-runner-controller"&gt;the sponsorship dashboard&lt;/a&gt; for the former and the current sponsors.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;To give ARC a try with just a handful of commands, please refer to the &lt;a href="https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners-with-actions-runner-controller/quickstart-for-actions-runner-controller"&gt;Quickstart guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For an overview of ARC, please refer to &lt;a href="https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners-with-actions-runner-controller/about-actions-runner-controller"&gt;About ARC&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;With the introduction of &lt;a href="https://github.com/actions/actions-runner-controller/discussions/2775"&gt;autoscaling runner scale sets&lt;/a&gt;, the existing &lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/automatically-scaling-runners.md"&gt;autoscaling modes&lt;/a&gt; are now legacy. The legacy modes have certain use cases and will continue to be maintained by the community only.&lt;/p&gt; 
&lt;p&gt;For further information on what is supported by GitHub and what's managed by the community, please refer to &lt;a href="https://github.com/actions/actions-runner-controller/discussions/2775"&gt;this announcement discussion.&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;ARC documentation is available on &lt;a href="https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners-with-actions-runner-controller/quickstart-for-actions-runner-controller"&gt;docs.github.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Legacy documentation&lt;/h3&gt; 
&lt;p&gt;The following documentation is for the legacy autoscaling modes that continue to be maintained by the community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/quickstart.md"&gt;Quickstart guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/about-arc.md"&gt;About ARC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/installing-arc.md"&gt;Installing ARC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/authenticating-to-the-github-api.md"&gt;Authenticating to the GitHub API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/deploying-arc-runners.md"&gt;Deploying ARC runners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/choosing-runner-destination.md"&gt;Adding ARC runners to a repository, organization, or enterprise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/automatically-scaling-runners.md"&gt;Automatically scaling runners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/using-custom-volumes.md"&gt;Using custom volumes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/using-arc-runners-in-a-workflow.md"&gt;Using ARC runners in a workflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/managing-access-with-runner-groups.md"&gt;Managing access with runner groups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/configuring-windows-runners.md"&gt;Configuring Windows runners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/using-arc-across-organizations.md"&gt;Using ARC across organizations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/using-entrypoint-features.md"&gt;Using entrypoint features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/deploying-alternative-runners.md"&gt;Deploying alternative runners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/actions-runner-controller/master/docs/monitoring-and-troubleshooting.md"&gt;Monitoring and troubleshooting&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from the community. For more details on contributing to the project (including requirements), please refer to "&lt;a href="https://github.com/actions/actions-runner-controller/raw/master/CONTRIBUTING.md"&gt;Getting Started with Contributing&lt;/a&gt;."&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;We are very happy to help you with any issues you have. Please refer to the "&lt;a href="https://github.com/actions/actions-runner-controller/raw/master/TROUBLESHOOTING.md"&gt;Troubleshooting&lt;/a&gt;" section for common issues.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ethereum/go-ethereum</title>
      <link>https://github.com/ethereum/go-ethereum</link>
      <description>&lt;p&gt;Go implementation of the Ethereum protocol&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Go Ethereum&lt;/h2&gt; 
&lt;p&gt;Golang execution layer implementation of the Ethereum protocol.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/ethereum/go-ethereum?tab=doc"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/ethereum/go-ethereum" alt="API Reference" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/ethereum/go-ethereum"&gt;&lt;img src="https://goreportcard.com/badge/github.com/ethereum/go-ethereum" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://app.travis-ci.com/github/ethereum/go-ethereum"&gt;&lt;img src="https://app.travis-ci.com/ethereum/go-ethereum.svg?branch=master" alt="Travis" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/nthXNEv"&gt;&lt;img src="https://img.shields.io/badge/discord-join%20chat-blue.svg?sanitize=true" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://x.com/go_ethereum"&gt;&lt;img src="https://img.shields.io/twitter/follow/go_ethereum" alt="Twitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Automated builds are available for stable releases and the unstable master branch. Binary archives are published at &lt;a href="https://geth.ethereum.org/downloads/"&gt;https://geth.ethereum.org/downloads/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building the source&lt;/h2&gt; 
&lt;p&gt;For prerequisites and detailed build instructions please read the &lt;a href="https://geth.ethereum.org/docs/getting-started/installing-geth"&gt;Installation Instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Building &lt;code&gt;geth&lt;/code&gt; requires both a Go (version 1.23 or later) and a C compiler. You can install them using your favourite package manager. Once the dependencies are installed, run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make geth
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or, to build the full suite of utilities:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Executables&lt;/h2&gt; 
&lt;p&gt;The go-ethereum project comes with several wrappers/executables found in the &lt;code&gt;cmd&lt;/code&gt; directory.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;&lt;code&gt;geth&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Our main Ethereum CLI client. It is the entry point into the Ethereum network (main-, test- or private net), capable of running as a full node (default), archive node (retaining all historical state) or a light node (retrieving data live). It can be used by other processes as a gateway into the Ethereum network via JSON RPC endpoints exposed on top of HTTP, WebSocket and/or IPC transports. &lt;code&gt;geth --help&lt;/code&gt; and the &lt;a href="https://geth.ethereum.org/docs/fundamentals/command-line-options"&gt;CLI page&lt;/a&gt; for command line options.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;clef&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Stand-alone signing tool, which can be used as a backend signer for &lt;code&gt;geth&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;devp2p&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Utilities to interact with nodes on the networking layer, without running a full blockchain.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;abigen&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Source code generator to convert Ethereum contract definitions into easy-to-use, compile-time type-safe Go packages. It operates on plain &lt;a href="https://docs.soliditylang.org/en/develop/abi-spec.html"&gt;Ethereum contract ABIs&lt;/a&gt; with expanded functionality if the contract bytecode is also available. However, it also accepts Solidity source files, making development much more streamlined. Please see our &lt;a href="https://geth.ethereum.org/docs/developers/dapp-developer/native-bindings"&gt;Native DApps&lt;/a&gt; page for details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;evm&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Developer utility version of the EVM (Ethereum Virtual Machine) that is capable of running bytecode snippets within a configurable environment and execution mode. Its purpose is to allow isolated, fine-grained debugging of EVM opcodes (e.g. &lt;code&gt;evm --code 60ff60ff --debug run&lt;/code&gt;).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;rlpdump&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Developer utility tool to convert binary RLP (&lt;a href="https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp"&gt;Recursive Length Prefix&lt;/a&gt;) dumps (data encoding used by the Ethereum protocol both network as well as consensus wise) to user-friendlier hierarchical representation (e.g. &lt;code&gt;rlpdump --hex CE0183FFFFFFC4C304050583616263&lt;/code&gt;).&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Running &lt;code&gt;geth&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Going through all the possible command line flags is out of scope here (please consult our &lt;a href="https://geth.ethereum.org/docs/fundamentals/command-line-options"&gt;CLI Wiki page&lt;/a&gt;), but we've enumerated a few common parameter combos to get you up to speed quickly on how you can run your own &lt;code&gt;geth&lt;/code&gt; instance.&lt;/p&gt; 
&lt;h3&gt;Hardware Requirements&lt;/h3&gt; 
&lt;p&gt;Minimum:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CPU with 4+ cores&lt;/li&gt; 
 &lt;li&gt;8GB RAM&lt;/li&gt; 
 &lt;li&gt;1TB free storage space to sync the Mainnet&lt;/li&gt; 
 &lt;li&gt;8 MBit/sec download Internet service&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Recommended:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fast CPU with 8+ cores&lt;/li&gt; 
 &lt;li&gt;16GB+ RAM&lt;/li&gt; 
 &lt;li&gt;High-performance SSD with at least 1TB of free space&lt;/li&gt; 
 &lt;li&gt;25+ MBit/sec download Internet service&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Full node on the main Ethereum network&lt;/h3&gt; 
&lt;p&gt;By far the most common scenario is people wanting to simply interact with the Ethereum network: create accounts; transfer funds; deploy and interact with contracts. For this particular use case, the user doesn't care about years-old historical data, so we can sync quickly to the current state of the network. To do so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ geth console
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Start &lt;code&gt;geth&lt;/code&gt; in snap sync mode (default, can be changed with the &lt;code&gt;--syncmode&lt;/code&gt; flag), causing it to download more data in exchange for avoiding processing the entire history of the Ethereum network, which is very CPU intensive.&lt;/li&gt; 
 &lt;li&gt;Start the built-in interactive &lt;a href="https://geth.ethereum.org/docs/interacting-with-geth/javascript-console"&gt;JavaScript console&lt;/a&gt;, (via the trailing &lt;code&gt;console&lt;/code&gt; subcommand) through which you can interact using &lt;a href="https://github.com/ChainSafe/web3.js/raw/0.20.7/DOCUMENTATION.md"&gt;&lt;code&gt;web3&lt;/code&gt; methods&lt;/a&gt; (note: the &lt;code&gt;web3&lt;/code&gt; version bundled within &lt;code&gt;geth&lt;/code&gt; is very old, and not up to date with official docs), as well as &lt;code&gt;geth&lt;/code&gt;'s own &lt;a href="https://geth.ethereum.org/docs/interacting-with-geth/rpc"&gt;management APIs&lt;/a&gt;. This tool is optional and if you leave it out you can always attach it to an already running &lt;code&gt;geth&lt;/code&gt; instance with &lt;code&gt;geth attach&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;A Full node on the Holesky test network&lt;/h3&gt; 
&lt;p&gt;Transitioning towards developers, if you'd like to play around with creating Ethereum contracts, you almost certainly would like to do that without any real money involved until you get the hang of the entire system. In other words, instead of attaching to the main network, you want to join the &lt;strong&gt;test&lt;/strong&gt; network with your node, which is fully equivalent to the main network, but with play-Ether only.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ geth --holesky console
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;console&lt;/code&gt; subcommand has the same meaning as above and is equally useful on the testnet too.&lt;/p&gt; 
&lt;p&gt;Specifying the &lt;code&gt;--holesky&lt;/code&gt; flag, however, will reconfigure your &lt;code&gt;geth&lt;/code&gt; instance a bit:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Instead of connecting to the main Ethereum network, the client will connect to the Holesky test network, which uses different P2P bootnodes, different network IDs and genesis states.&lt;/li&gt; 
 &lt;li&gt;Instead of using the default data directory (&lt;code&gt;~/.ethereum&lt;/code&gt; on Linux for example), &lt;code&gt;geth&lt;/code&gt; will nest itself one level deeper into a &lt;code&gt;holesky&lt;/code&gt; subfolder (&lt;code&gt;~/.ethereum/holesky&lt;/code&gt; on Linux). Note, on OSX and Linux this also means that attaching to a running testnet node requires the use of a custom endpoint since &lt;code&gt;geth attach&lt;/code&gt; will try to attach to a production node endpoint by default, e.g., &lt;code&gt;geth attach &amp;lt;datadir&amp;gt;/holesky/geth.ipc&lt;/code&gt;. Windows users are not affected by this.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Note: Although some internal protective measures prevent transactions from crossing over between the main network and test network, you should always use separate accounts for play and real money. Unless you manually move accounts, &lt;code&gt;geth&lt;/code&gt; will by default correctly separate the two networks and will not make any accounts available between them.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;As an alternative to passing the numerous flags to the &lt;code&gt;geth&lt;/code&gt; binary, you can also pass a configuration file via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ geth --config /path/to/your_config.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get an idea of how the file should look like you can use the &lt;code&gt;dumpconfig&lt;/code&gt; subcommand to export your existing configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ geth --your-favourite-flags dumpconfig
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Docker quick start&lt;/h4&gt; 
&lt;p&gt;One of the quickest ways to get Ethereum up and running on your machine is by using Docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run -d --name ethereum-node -v /Users/alice/ethereum:/root \
           -p 8545:8545 -p 30303:30303 \
           ethereum/client-go
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will start &lt;code&gt;geth&lt;/code&gt; in snap-sync mode with a DB memory allowance of 1GB, as the above command does. It will also create a persistent volume in your home directory for saving your blockchain as well as map the default ports. There is also an &lt;code&gt;alpine&lt;/code&gt; tag available for a slim version of the image.&lt;/p&gt; 
&lt;p&gt;Do not forget &lt;code&gt;--http.addr 0.0.0.0&lt;/code&gt;, if you want to access RPC from other containers and/or hosts. By default, &lt;code&gt;geth&lt;/code&gt; binds to the local interface and RPC endpoints are not accessible from the outside.&lt;/p&gt; 
&lt;h3&gt;Programmatically interfacing &lt;code&gt;geth&lt;/code&gt; nodes&lt;/h3&gt; 
&lt;p&gt;As a developer, sooner rather than later you'll want to start interacting with &lt;code&gt;geth&lt;/code&gt; and the Ethereum network via your own programs and not manually through the console. To aid this, &lt;code&gt;geth&lt;/code&gt; has built-in support for a JSON-RPC based APIs (&lt;a href="https://ethereum.org/en/developers/docs/apis/json-rpc/"&gt;standard APIs&lt;/a&gt; and &lt;a href="https://geth.ethereum.org/docs/interacting-with-geth/rpc"&gt;&lt;code&gt;geth&lt;/code&gt; specific APIs&lt;/a&gt;). These can be exposed via HTTP, WebSockets and IPC (UNIX sockets on UNIX based platforms, and named pipes on Windows).&lt;/p&gt; 
&lt;p&gt;The IPC interface is enabled by default and exposes all the APIs supported by &lt;code&gt;geth&lt;/code&gt;, whereas the HTTP and WS interfaces need to manually be enabled and only expose a subset of APIs due to security reasons. These can be turned on/off and configured as you'd expect.&lt;/p&gt; 
&lt;p&gt;HTTP based JSON-RPC API options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--http&lt;/code&gt; Enable the HTTP-RPC server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--http.addr&lt;/code&gt; HTTP-RPC server listening interface (default: &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--http.port&lt;/code&gt; HTTP-RPC server listening port (default: &lt;code&gt;8545&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--http.api&lt;/code&gt; API's offered over the HTTP-RPC interface (default: &lt;code&gt;eth,net,web3&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--http.corsdomain&lt;/code&gt; Comma separated list of domains from which to accept cross-origin requests (browser enforced)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws&lt;/code&gt; Enable the WS-RPC server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws.addr&lt;/code&gt; WS-RPC server listening interface (default: &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws.port&lt;/code&gt; WS-RPC server listening port (default: &lt;code&gt;8546&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws.api&lt;/code&gt; API's offered over the WS-RPC interface (default: &lt;code&gt;eth,net,web3&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws.origins&lt;/code&gt; Origins from which to accept WebSocket requests&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ipcdisable&lt;/code&gt; Disable the IPC-RPC server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ipcpath&lt;/code&gt; Filename for IPC socket/pipe within the datadir (explicit paths escape it)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You'll need to use your own programming environments' capabilities (libraries, tools, etc) to connect via HTTP, WS or IPC to a &lt;code&gt;geth&lt;/code&gt; node configured with the above flags and you'll need to speak &lt;a href="https://www.jsonrpc.org/specification"&gt;JSON-RPC&lt;/a&gt; on all transports. You can reuse the same connection for multiple requests!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note: Please understand the security implications of opening up an HTTP/WS based transport before doing so! Hackers on the internet are actively trying to subvert Ethereum nodes with exposed APIs! Further, all browser tabs can access locally running web servers, so malicious web pages could try to subvert locally available APIs!&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Operating a private network&lt;/h3&gt; 
&lt;p&gt;Maintaining your own private network is more involved as a lot of configurations taken for granted in the official networks need to be manually set up.&lt;/p&gt; 
&lt;p&gt;Unfortunately since &lt;a href="https://ethereum.org/en/roadmap/merge/"&gt;the Merge&lt;/a&gt; it is no longer possible to easily set up a network of geth nodes without also setting up a corresponding beacon chain.&lt;/p&gt; 
&lt;p&gt;There are three different solutions depending on your use case:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you are looking for a simple way to test smart contracts from go in your CI, you can use the &lt;a href="https://geth.ethereum.org/docs/developers/dapp-developer/native-bindings#blockchain-simulator"&gt;Simulated Backend&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you want a convenient single node environment for testing, you can use our &lt;a href="https://geth.ethereum.org/docs/developers/dapp-developer/dev-mode"&gt;Dev Mode&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you are looking for a multiple node test network, you can set one up quite easily with &lt;a href="https://geth.ethereum.org/docs/fundamentals/kurtosis"&gt;Kurtosis&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Thank you for considering helping out with the source code! We welcome contributions from anyone on the internet, and are grateful for even the smallest of fixes!&lt;/p&gt; 
&lt;p&gt;If you'd like to contribute to go-ethereum, please fork, fix, commit and send a pull request for the maintainers to review and merge into the main code base. If you wish to submit more complex changes though, please check up with the core devs first on &lt;a href="https://discord.gg/invite/nthXNEv"&gt;our Discord Server&lt;/a&gt; to ensure those changes are in line with the general philosophy of the project and/or get some early feedback which can make both your efforts much lighter as well as our review and merge procedures quick and simple.&lt;/p&gt; 
&lt;p&gt;Please make sure your contributions adhere to our coding guidelines:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code must adhere to the official Go &lt;a href="https://golang.org/doc/effective_go.html#formatting"&gt;formatting&lt;/a&gt; guidelines (i.e. uses &lt;a href="https://golang.org/cmd/gofmt/"&gt;gofmt&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Code must be documented adhering to the official Go &lt;a href="https://golang.org/doc/effective_go.html#commentary"&gt;commentary&lt;/a&gt; guidelines.&lt;/li&gt; 
 &lt;li&gt;Pull requests need to be based on and opened against the &lt;code&gt;master&lt;/code&gt; branch.&lt;/li&gt; 
 &lt;li&gt;Commit messages should be prefixed with the package(s) they modify. 
  &lt;ul&gt; 
   &lt;li&gt;E.g. "eth, rpc: make trace configs optional"&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please see the &lt;a href="https://geth.ethereum.org/docs/developers/geth-developer/dev-guide"&gt;Developers' Guide&lt;/a&gt; for more details on configuring your environment, managing project dependencies, and testing procedures.&lt;/p&gt; 
&lt;h3&gt;Contributing to geth.ethereum.org&lt;/h3&gt; 
&lt;p&gt;For contributions to the &lt;a href="https://geth.ethereum.org"&gt;go-ethereum website&lt;/a&gt;, please checkout and raise pull requests against the &lt;code&gt;website&lt;/code&gt; branch. For more detailed instructions please see the &lt;code&gt;website&lt;/code&gt; branch &lt;a href="https://github.com/ethereum/go-ethereum/tree/website#readme"&gt;README&lt;/a&gt; or the &lt;a href="https://geth.ethereum.org/docs/developers/geth-developer/contributing"&gt;contributing&lt;/a&gt; page of the website.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The go-ethereum library (i.e. all code outside of the &lt;code&gt;cmd&lt;/code&gt; directory) is licensed under the &lt;a href="https://www.gnu.org/licenses/lgpl-3.0.en.html"&gt;GNU Lesser General Public License v3.0&lt;/a&gt;, also included in our repository in the &lt;code&gt;COPYING.LESSER&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;The go-ethereum binaries (i.e. all code inside of the &lt;code&gt;cmd&lt;/code&gt; directory) are licensed under the &lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html"&gt;GNU General Public License v3.0&lt;/a&gt;, also included in our repository in the &lt;code&gt;COPYING&lt;/code&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cosmos/cosmos-sdk</title>
      <link>https://github.com/cosmos/cosmos-sdk</link>
      <description>&lt;p&gt;⛓️ A Framework for Building High Value Public Blockchains ✨&lt;/p&gt;&lt;hr&gt;&lt;div align="left"&gt; 
 &lt;h1&gt; Cosmos SDK &lt;/h1&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cosmos/cosmos-sdk/main/docs/static/img/banner.svg?sanitize=true" alt="banner" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/cosmos/cosmos-sdk/raw/main/LICENSE"&gt; &lt;img alt="License: Apache-2.0" src="https://img.shields.io/github/license/cosmos/cosmos-sdk.svg?sanitize=true" /&gt; &lt;/a&gt; 
 &lt;a href="https://pkg.go.dev/github.com/cosmos/cosmos-sdk"&gt; &lt;img src="https://pkg.go.dev/badge/github.com/cosmos/cosmos-sdk.svg?sanitize=true" alt="Go Reference" /&gt; &lt;/a&gt; 
 &lt;a href="https://goreportcard.com/report/github.com/cosmos/cosmos-sdk"&gt; &lt;img alt="Go report card" src="https://goreportcard.com/badge/github.com/cosmos/cosmos-sdk" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://discord.com/invite/interchain"&gt; &lt;img alt="Discord" src="https://img.shields.io/discord/669268347736686612.svg?sanitize=true" /&gt; &lt;/a&gt; 
 &lt;a href="https://sourcegraph.com/github.com/cosmos/cosmos-sdk?badge"&gt; &lt;img alt="Imported by" src="https://sourcegraph.com/github.com/cosmos/cosmos-sdk/-/badge.svg?sanitize=true" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;The Cosmos SDK is a modular, open-source blockchain SDK for building secure, high-performance Layer 1 chains with full customizability used by 200+ chains in production. Developers can use the Cosmos SDK to easily and quickly spin up custom blockchains that can natively interoperate.&lt;/p&gt; 
&lt;p&gt;The Cosmos SDK is tailored for building secure, sovereign application-specific blockchains. Developers building with the Cosmos SDK can use predefined modules that cover standard blockchain functionality or create custom modules for their specific use case. This composable architecture enables robust customization. The SDK provides abstractions for permissioning, governance, state management, account abstraction, tokenization processes, application logic, and more.&lt;/p&gt; 
&lt;p&gt;Cosmos SDK blockchains get interoperability out-of-the-box via a native integration with the &lt;a href="https://github.com/cosmos/ibc-go"&gt;Inter-Blockchain Communication Protocol (IBC)&lt;/a&gt;. Ibc-go is implemented as a Go module in the Cosmos SDK.&lt;/p&gt; 
&lt;p&gt;While the Cosmos SDK is plug-and-play with any consensus engine, we recommend using &lt;a href="https://github.com/cometbft/cometbft"&gt;CometBFT&lt;/a&gt; for a fast, battle-tested, high-throughput, configurable BFT state machine. CometBFT is developed as part of the Cosmos Stack and its releases are updated alongside the SDK.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: The Cosmos SDK has mostly stabilized, but we are still making some breaking changes.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;To learn how the Cosmos SDK works from a high-level perspective, see the Cosmos SDK &lt;a href="https://docs.cosmos.network/main/intro/overview"&gt;High-Level Intro&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to get started quickly and learn how to build on top of Cosmos SDK, visit &lt;a href="https://tutorials.cosmos.network"&gt;Cosmos SDK Tutorials&lt;/a&gt;. You can also fork the tutorial's repository to get started building your own Cosmos SDK application.&lt;/p&gt; 
&lt;p&gt;Note: We advise to always use the latest maintained &lt;a href="https://go.dev/dl/"&gt;Go version&lt;/a&gt; for building Cosmos SDK applications.&lt;/p&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;The Cosmos SDK maintains a set of modules that can be included in your blockchain application. For more information on modules, see our &lt;a href="https://raw.githubusercontent.com/cosmos/cosmos-sdk/main/x/README.md"&gt;introduction doc&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://cosmoslabs.io/"&gt;Cosmos Labs&lt;/a&gt; maintains the core components of the stack: Cosmos SDK, CometBFT, IBC, Cosmos EVM, and various developer tools and frameworks. In addition to developing and maintaining the Cosmos Stack, Cosmos Labs provides advisory and engineering services for blockchain solutions. &lt;a href="https://www.cosmoslabs.io/contact"&gt;Get in touch with Cosmos Labs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Cosmos Labs is a wholly-owned subsidiary of the &lt;a href="https://interchain.io/"&gt;Interchain Foundation&lt;/a&gt;, the Swiss nonprofit responsible for treasury management, funding public goods, and supporting governance for Cosmos.&lt;/p&gt; 
&lt;p&gt;The Cosmos Stack is supported by a robust community of open-source contributors.&lt;/p&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;The Cosmos SDK was first released in 2019, and the first blockchain to use the SDK in production was the &lt;a href="https://hub.cosmos.network/main"&gt;Cosmos Hub&lt;/a&gt;. Today, the Cosmos SDK is a popular, battle-tested, open-source framework used by hundreds of chains.&lt;/p&gt; 
&lt;p&gt;The Cosmos Hub still receives the most up-to-date Cosmos SDK versions. The Cosmos Hub application, &lt;code&gt;gaia&lt;/code&gt;, has its own &lt;a href="https://github.com/cosmos/gaia"&gt;cosmos/gaia repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Developer Community and Support&lt;/h2&gt; 
&lt;p&gt;The issue list of this repo is exclusively for bug reports and feature requests. We have active, helpful communities on Discord, Telegram, and Slack.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;| Need Help? | Support &amp;amp; Community: &lt;a href="https://discord.com/invite/interchain"&gt;Discord&lt;/a&gt; - &lt;a href="https://t.me/CosmosOG"&gt;Telegram&lt;/a&gt; - &lt;a href="https://cosmos.network/interest-form"&gt;Talk to an Expert&lt;/a&gt; - &lt;a href="https://forms.gle/A8jawLgB8zuL1FN36"&gt;Join the #Cosmos-tech Slack Channel&lt;/a&gt; |&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation and Resources&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;View the Cosmos SDK documentation: &lt;a href="https://docs.cosmos.network/"&gt;https://docs.cosmos.network/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Cosmos Stack Libraries&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cometbft/cometbft"&gt;CometBFT&lt;/a&gt; - High-performance, 10k+ TPS configurable BFT consensus engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cosmos/ibc-go/"&gt;The Inter-Blockchain Communication Protocol (IBC)&lt;/a&gt; - A blockchain interoperability protocol that allows blockchains to transfer any type of data encoded in bytes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cosmos/evm"&gt;Cosmos EVM&lt;/a&gt; - Native EVM layer for Cosmos SDK chains.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disambiguation&lt;/h2&gt; 
&lt;p&gt;This Cosmos SDK project is not related to the &lt;a href="https://github.com/react-cosmos/react-cosmos"&gt;React-Cosmos&lt;/a&gt; project (yet). Many thanks to Evan Coury and Ovidiu (@skidding) for this Github organization name. As per our agreement, this disambiguation notice will stay here.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pingcap/tidb</title>
      <link>https://github.com/pingcap/tidb</link>
      <description>&lt;p&gt;TiDB - the open-source, cloud-native, distributed SQL database designed for modern applications.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://www.pingcap.com/?utm_source=github&amp;amp;utm_medium=tidb"&gt; &lt;img src="https://raw.githubusercontent.com/pingcap/tidb/master/docs/tidb-logo.png" alt="TiDB, a distributed SQL database" height="100" /&gt; &lt;/a&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;a href="https://github.com/pingcap/tidb/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://golang.org/"&gt;&lt;img src="https://img.shields.io/badge/Language-Go-blue.svg?sanitize=true" alt="Language" /&gt;&lt;/a&gt; &lt;a href="https://prow.tidb.net/?repo=pingcap%2Ftidb&amp;amp;type=postsubmit&amp;amp;job=pingcap%2Ftidb%2Fmerged_build"&gt;&lt;img src="https://prow.tidb.net/badge.svg?jobs=pingcap/tidb/merged_build" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/pingcap/tidb"&gt;&lt;img src="https://goreportcard.com/badge/github.com/pingcap/tidb" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/pingcap/tidb/releases"&gt;&lt;img src="https://img.shields.io/github/tag/pingcap/tidb.svg?label=release" alt="GitHub release" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;TiDB&lt;/h1&gt; 
&lt;p&gt;TiDB (/’taɪdiːbi:/, "Ti" stands for Titanium) is an open-source, cloud-native, distributed SQL database designed for high availability, horizontal and vertical scalability, strong consistency, and high performance.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pingcap/tidb/master/#key-features"&gt;Key Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pingcap/tidb/master/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pingcap/tidb/master/#need-help"&gt;Need Help?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pingcap/tidb/master/#architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pingcap/tidb/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pingcap/tidb/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pingcap/tidb/master/#see-also"&gt;See Also&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pingcap/tidb/master/#acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pingcap.com/blog/distributed-transactions-tidb?utm_source=github&amp;amp;utm_medium=tidb"&gt;Distributed Transactions&lt;/a&gt;&lt;/strong&gt;: TiDB uses a two-phase commit protocol to ensure ACID compliance, providing strong consistency. Transactions span multiple nodes, and TiDB's distributed nature ensures data correctness even in the presence of network partitions or node failures.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://docs.pingcap.com/tidb/stable/scale-tidb-using-tiup?utm_source=github&amp;amp;utm_medium=tidb"&gt;Horizontal and Vertical Scalability&lt;/a&gt;&lt;/strong&gt;: TiDB can be scaled horizontally by adding more nodes or vertically by increasing resources of existing nodes, all without downtime. TiDB's architecture separates computing from storage, enabling you to adjust both independently as needed for flexibility and growth.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://docs.pingcap.com/tidbcloud/high-availability-with-multi-az?utm_source=github&amp;amp;utm_medium=tidb"&gt;High Availability&lt;/a&gt;&lt;/strong&gt;: Built-in Raft consensus protocol ensures reliability and automated failover. Data is stored in multiple replicas, and transactions are committed only after writing to the majority of replicas, guaranteeing strong consistency and availability, even if some replicas fail. Geographic placement of replicas can be configured for different disaster tolerance levels.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pingcap.com/blog/htap-demystified-defining-modern-data-architecture-tidb?utm_source=github&amp;amp;utm_medium=tidb"&gt;Hybrid Transactional/Analytical Processing (HTAP)&lt;/a&gt;&lt;/strong&gt;: TiDB provides two storage engines: TiKV, a row-based storage engine, and TiFlash, a columnar storage engine. TiFlash uses the Multi-Raft Learner protocol to replicate data from TiKV in real time, ensuring consistent data between the TiKV row-based storage engine and the TiFlash columnar storage engine. The TiDB Server coordinates query execution across both TiKV and TiFlash to optimize performance.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pingcap.com/cloud-native?utm_source=github&amp;amp;utm_medium=tidb"&gt;Cloud-Native&lt;/a&gt;&lt;/strong&gt;: TiDB can be deployed in public clouds, on-premises, or natively in Kubernetes. &lt;a href="https://docs.pingcap.com/tidb-in-kubernetes/stable/tidb-operator-overview/?utm_source=github&amp;amp;utm_medium=tidb"&gt;TiDB Operator&lt;/a&gt; helps manage TiDB on Kubernetes, automating cluster operations, while &lt;a href="https://tidbcloud.com/?utm_source=github&amp;amp;utm_medium=tidb"&gt;TiDB Cloud&lt;/a&gt; provides a fully-managed service for easy and economical deployment, allowing users to set up clusters with just a few clicks.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://docs.pingcap.com/tidb/stable/mysql-compatibility?utm_source=github&amp;amp;utm_medium=tidb"&gt;MySQL Compatibility&lt;/a&gt;&lt;/strong&gt;: TiDB is compatible with MySQL 8.0, allowing you to use familiar protocols, frameworks and tools. You can migrate applications to TiDB without changing any code, or with minimal modifications. Additionally, TiDB provides a suite of &lt;a href="https://docs.pingcap.com/tidb/stable/ecosystem-tool-user-guide?utm_source=github&amp;amp;utm_medium=tidb"&gt;data migration tools&lt;/a&gt; to help easily migrate application data into TiDB.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pingcap.com/blog/open-source-is-in-our-dna-reaffirming-tidb-commitment?utm_source=github&amp;amp;utm_medium=tidb"&gt;Open Source Commitment&lt;/a&gt;&lt;/strong&gt;: Open source is at the core of TiDB's identity. All source code is available on GitHub under the Apache 2.0 license, including enterprise-grade features. TiDB is built with the belief that open source enables transparency, innovation, and collaboration. We actively encourage contributions from the community to help build a vibrant and inclusive ecosystem, reaffirming our commitment to open development and accessibility for everyone.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Tip]&lt;br /&gt; As part of our commitment to open source, we want to reward all GitHub users. In addition to the free tier, you can get up to $2000 in TiDB Cloud Serverless credits for your open-source contributions - &lt;a href="https://ossinsight.io/open-source-heroes/?utm_source=ossinsight&amp;amp;utm_medium=referral&amp;amp;utm_campaign=plg_OSScontribution_credit_05"&gt;Claim here&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Start a TiDB Cluster&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;On Local Playground&lt;/strong&gt;. To start a local test cluster, please refer to the &lt;a href="https://docs.pingcap.com/tidb/stable/quick-start-with-tidb#deploy-a-local-test-cluster?utm_source=github&amp;amp;utm_medium=tidb"&gt;TiDB quick start guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;On Kubernetes&lt;/strong&gt;. TiDB can be easily deployed in a self-managed Kubernetes environment or Kubernetes services on public clouds using TiDB Operator. For more details, please refer to the &lt;a href="https://docs.pingcap.com/tidb-in-kubernetes/stable/get-started?utm_source=github&amp;amp;utm_medium=tidb"&gt;TiDB on Kubernetes quick start guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using TiDB Cloud (Recommended)&lt;/strong&gt;. TiDB Cloud offers a fully managed version of TiDB with a free tier, no credit card required, so you can get a free cluster in seconds and start easily: &lt;a href="https://tidbcloud.com/free-trial?utm_source=github&amp;amp;utm_medium=tidb"&gt;Sign up for TiDB Cloud&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Learn About TiDB SQL: To explore the SQL capabilities of TiDB, refer to the &lt;a href="https://docs.pingcap.com/tidb/stable/sql-statement-overview?utm_source=github&amp;amp;utm_medium=tidb"&gt;TiDB SQL documentation&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use MySQL Driver or ORM to &lt;a href="https://docs.pingcap.com/tidbcloud/dev-guide-overview?utm_source=github&amp;amp;utm_medium=tidb"&gt;Build an App with TiDB with TiDB&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Explore key features, such as &lt;a href="https://docs.pingcap.com/tidbcloud/tidb-cloud-migration-overview?utm_source=github&amp;amp;utm_medium=tidb"&gt;data migration&lt;/a&gt;, &lt;a href="https://docs.pingcap.com/tidbcloud/changefeed-overview?utm_source=github&amp;amp;utm_medium=tidb"&gt;changefeed&lt;/a&gt;, &lt;a href="https://docs.pingcap.com/tidbcloud/vector-search-overview?utm_source=github&amp;amp;utm_medium=tidb"&gt;vector search&lt;/a&gt;, &lt;a href="https://docs.pingcap.com/tidbcloud/tidb-cloud-htap-quickstart?utm_source=github&amp;amp;utm_medium=tidb"&gt;HTAP&lt;/a&gt;, &lt;a href="https://docs.pingcap.com/tidb/stable/dr-solution-introduction?utm_source=github&amp;amp;utm_medium=tidb"&gt;disaster recovery&lt;/a&gt;, etc.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Need Help?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;You can connect with TiDB users, ask questions, find answers, and help others on our community platforms: &lt;a href="https://discord.gg/KVRZBR2DrG?utm_source=github"&gt;Discord&lt;/a&gt;, Slack (&lt;a href="https://slack.tidb.io/invite?team=tidb-community&amp;amp;channel=everyone&amp;amp;ref=pingcap-tidb"&gt;English&lt;/a&gt;, &lt;a href="https://slack.tidb.io/invite?team=tidb-community&amp;amp;channel=tidb-japan&amp;amp;ref=github-tidb"&gt;Japanese&lt;/a&gt;), &lt;a href="https://stackoverflow.com/questions/tagged/tidb"&gt;Stack Overflow&lt;/a&gt;, &lt;a href="https://asktug.com"&gt;TiDB Chinese Forum&lt;/a&gt;, X &lt;a href="https://twitter.com/PingCAP"&gt;@PingCAP&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For filing bugs, suggesting improvements, or requesting new features, use &lt;a href="https://github.com/pingcap/tidb/issues"&gt;Github Issues&lt;/a&gt; or join discussions on &lt;a href="https://github.com/orgs/pingcap/discussions"&gt;Github Discussions&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To troubleshoot TiDB, refer to &lt;a href="https://docs.pingcap.com/tidb/stable/tidb-troubleshooting-map?utm_source=github&amp;amp;utm_medium=tidb"&gt;Toubleshooting documentation&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/pingcap/tidb/master/docs/tidb-architecture.png" alt="TiDB architecture" /&gt;&lt;/p&gt; 
&lt;p&gt;Learn more details about TiDB architecture in our &lt;a href="https://docs.pingcap.com/tidb/stable/tidb-architecture?utm_source=github&amp;amp;utm_medium=tidb"&gt;Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;TiDB is built on a commitment to open source, and we welcome contributions from everyone. Whether you are interested in improving documentation, fixing bugs, or developing new features, we invite you to shape the future of TiDB.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;See our &lt;a href="https://github.com/pingcap/community/raw/master/contributors/README.md#how-to-contribute"&gt;Contributor Guide&lt;/a&gt; and &lt;a href="https://pingcap.github.io/tidb-dev-guide/index.html"&gt;TiDB Development Guide&lt;/a&gt; to get started.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you're looking for issues to work on, try looking at the &lt;a href="https://github.com/pingcap/tidb/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22"&gt;good first issues&lt;/a&gt; or &lt;a href="https://github.com/pingcap/tidb/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22"&gt;help wanted issues&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;a href="https://github.com/pingcap/tidb-map/raw/master/maps/contribution-map.md#a-map-that-guides-what-and-how-contributors-can-contribute"&gt;contribution map&lt;/a&gt; lists everything you can contribute.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;a href="https://github.com/pingcap/community"&gt;community repository&lt;/a&gt; contains everything else you need.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Don't forget to claim your contribution swag by filling in and submitting this &lt;a href="https://forms.pingcap.com/f/tidb-contribution-swag"&gt;form&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;a href="https://next.ossinsight.io/widgets/official/compose-recent-active-contributors?repo_id=41986369&amp;amp;limit=30" target="_blank" style="display: block" align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://next.ossinsight.io/widgets/official/compose-recent-active-contributors/thumbnail.png?repo_id=41986369&amp;amp;limit=30&amp;amp;image_size=auto&amp;amp;color_scheme=dark" width="655" height="auto" /&gt; 
  &lt;img alt="Active Contributors of pingcap/tidb - Last 28 days" src="https://next.ossinsight.io/widgets/official/compose-recent-active-contributors/thumbnail.png?repo_id=41986369&amp;amp;limit=30&amp;amp;image_size=auto&amp;amp;color_scheme=light" width="655" height="auto" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;TiDB is under the Apache 2.0 license. See the &lt;a href="https://raw.githubusercontent.com/pingcap/tidb/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;See Also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://play.tidbcloud.com/?utm_source=github&amp;amp;utm_medium=tidb_readme"&gt;TiDB Online Playground&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;TiDB Case Studies: &lt;a href="https://www.pingcap.com/customers/?utm_source=github&amp;amp;utm_medium=tidb"&gt;TiDB Customers&lt;/a&gt;, &lt;a href="https://pingcap.co.jp/case-study/?utm_source=github&amp;amp;utm_medium=tidb"&gt;TiDB 事例記事&lt;/a&gt;, &lt;a href="https://cn.pingcap.com/case/?utm_source=github&amp;amp;utm_medium=tidb"&gt;TiDB 中文用户案例&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.pingcap.com/tidb/stable?utm_source=github&amp;amp;utm_medium=tidb"&gt;TiDB User Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pingcap/tidb/master/docs/design"&gt;TiDB Design Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.pingcap.com/tidb/dev/release-notes?utm_source=github&amp;amp;utm_medium=tidb"&gt;TiDB Release Notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.pingcap.com/blog/?utm_source=github&amp;amp;utm_medium=tidb"&gt;TiDB Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pingcap/tidb/master/roadmap.md"&gt;TiDB Roadmap&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Thanks &lt;a href="https://github.com/cznic"&gt;cznic&lt;/a&gt; for providing some great open source tools.&lt;/li&gt; 
 &lt;li&gt;Thanks &lt;a href="https://github.com/syndtr/goleveldb"&gt;GolevelDB&lt;/a&gt;, &lt;a href="https://github.com/boltdb/bolt"&gt;BoltDB&lt;/a&gt;, and &lt;a href="https://github.com/facebook/rocksdb"&gt;RocksDB&lt;/a&gt; for their powerful storage engines.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Done-0/fuck-u-code</title>
      <link>https://github.com/Done-0/fuck-u-code</link>
      <description>&lt;p&gt;Legacy-Mess Detector – assess the “legacy-mess level” of your code and output a beautiful report | 屎山代码检测器，评估代码的“屎山等级”并输出美观的报告&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fuck-u-code &lt;a href="https://raw.githubusercontent.com/Done-0/fuck-u-code/main/README.md"&gt;&lt;img src="https://img.shields.io/badge/%E6%96%87%E6%A1%A3-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-blue?style=flat-square" alt="中文" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/Done-0/fuck-u-code/main/README_EN.md"&gt;&lt;img src="https://img.shields.io/badge/Docs-English-red?style=flat-square" alt="English" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Important] 📢 记住这个命令：fuck-u-code - 让代码不再烂到发指！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;一款专门揭露屎山代码的质量分析工具，用犀利又搞笑的方式告诉你：&lt;strong&gt;你的代码到底有多烂&lt;/strong&gt;。&lt;/p&gt; 
&lt;h2&gt;特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;多语言支持&lt;/strong&gt;: Go、JS/TS、Python、Java、C/C++&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;屎山指数&lt;/strong&gt;: 0~100 分，越高越烂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;七维度检测&lt;/strong&gt;: 复杂度 / 函数长度 / 注释率 / 错误处理 / 命名 / 重复度 / 结构&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;彩色终端报告&lt;/strong&gt;: 批评也能笑着听&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Markdown 输出&lt;/strong&gt;: 方便 AI 分析与文档集成&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;灵活配置&lt;/strong&gt;: 摘要 / 详细模式，多语言报告&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Note]&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;分数越高越烂，欢迎“高分大佬”上榜&lt;/li&gt; 
  &lt;li&gt;全程本地运行，不上传代码，安全无忧&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;安装&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 方法一：Go 安装
go install github.com/Done-0/fuck-u-code/cmd/fuck-u-code@latest

# 方法二：源码构建
git clone https://github.com/Done-0/fuck-u-code.git
cd fuck-u-code &amp;amp;&amp;amp; go build -o fuck-u-code ./cmd/fuck-u-code

# 方法三：Docker 构建
docker build -t fuck-u-code .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;使用方法&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 基本分析
fuck-u-code analyze /path/to/project
# 或
fuck-u-code /path/to/project

# Docker 运行
docker run --rm -v "/path/to/project:/build" fuck-u-code analyze

# 默认分析当前目录
fuck-u-code analyze
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;常用选项&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;选项&lt;/th&gt; 
   &lt;th&gt;简写&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--verbose&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;显示详细报告&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--top N&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-t&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;最烂的前 N 个文件&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--issues N&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;每文件显示 N 个问题&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--summary&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;只看总结，不看过程&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--markdown&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;输出 Markdown 格式报告&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--lang&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;报告语言 (zh-CN/en-US)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--exclude&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-e&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;排除指定目录或文件&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--skipindex&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-x&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;跳过 index.js/ts 文件&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;示例&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fuck-u-code analyze --verbose
fuck-u-code analyze --top 3
fuck-u-code analyze --lang en-US
fuck-u-code analyze --summary
fuck-u-code analyze --exclude "**/test/**"
fuck-u-code analyze --markdown &amp;gt; report.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;高级用法&lt;/h2&gt; 
&lt;h3&gt;Markdown 输出&lt;/h3&gt; 
&lt;p&gt;适合 &lt;strong&gt;AI 分析、文档集成、CI/CD、团队协作&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fuck-u-code analyze --markdown
fuck-u-code analyze --markdown &amp;gt; report.md
fuck-u-code analyze --markdown --top 10 --lang en-US &amp;gt; report.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Markdown 报告包含：总体评分 / 指标表格 / 问题文件 / 改进建议&lt;/p&gt; 
&lt;h3&gt;默认排除路径&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;前端: &lt;code&gt;node_modules&lt;/code&gt;、&lt;code&gt;dist&lt;/code&gt;、&lt;code&gt;build&lt;/code&gt;、&lt;code&gt;*.min.js&lt;/code&gt; 等&lt;/li&gt; 
 &lt;li&gt;后端: &lt;code&gt;vendor&lt;/code&gt;、&lt;code&gt;bin&lt;/code&gt;、&lt;code&gt;target&lt;/code&gt;、&lt;code&gt;logs&lt;/code&gt;、&lt;code&gt;migrations&lt;/code&gt; 等&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;疑难解答&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;command not found&lt;/code&gt; → 把 Go bin 路径加到 &lt;code&gt;PATH&lt;/code&gt;：&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;export PATH="$PATH:$(go env GOPATH)/bin"
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;并写入 &lt;code&gt;.bash_profile&lt;/code&gt; / &lt;code&gt;.zshrc&lt;/code&gt; 等&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;许可证&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt; 
&lt;h2&gt;贡献&lt;/h2&gt; 
&lt;p&gt;欢迎提 PR，一起优化“fuck-u-code” 🚀&lt;/p&gt; 
&lt;h2&gt;安利一下&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://bazi.site"&gt;玄学工坊&lt;/a&gt; — AI 赛博算命网站&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Done-0/Jank"&gt;Jank&lt;/a&gt; — Go 语言开源博客&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>abiosoft/colima</title>
      <link>https://github.com/abiosoft/colima</link>
      <description>&lt;p&gt;Container runtimes on macOS (and Linux) with minimal setup&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/abiosoft/colima/main/colima.png" alt="colima-logo" /&gt;&lt;/p&gt; 
&lt;h2&gt;Colima - container runtimes on macOS (and Linux) with minimal setup.&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/abiosoft/colima/actions/workflows/go.yml"&gt;&lt;img src="https://github.com/abiosoft/colima/actions/workflows/go.yml/badge.svg?sanitize=true" alt="Go" /&gt;&lt;/a&gt; &lt;a href="https://github.com/abiosoft/colima/actions/workflows/integration.yml"&gt;&lt;img src="https://github.com/abiosoft/colima/actions/workflows/integration.yml/badge.svg?sanitize=true" alt="Integration" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/abiosoft/colima"&gt;&lt;img src="https://goreportcard.com/badge/github.com/abiosoft/colima" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/abiosoft/colima/main/colima.gif" alt="Demonstration" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Support for Intel and Apple Silicon Macs, and Linux&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simple CLI interface with sensible defaults&lt;/li&gt; 
 &lt;li&gt;Automatic Port Forwarding&lt;/li&gt; 
 &lt;li&gt;Volume mounts&lt;/li&gt; 
 &lt;li&gt;Multiple instances&lt;/li&gt; 
 &lt;li&gt;Support for multiple container runtimes 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docker.com"&gt;Docker&lt;/a&gt; (with optional Kubernetes)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://containerd.io"&gt;Containerd&lt;/a&gt; (with optional Kubernetes)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://linuxcontainers.org/incus"&gt;Incus&lt;/a&gt; (containers and virtual machines)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;Colima is available on Homebrew, MacPorts, and Nix. Check &lt;a href="https://raw.githubusercontent.com/abiosoft/colima/main/docs/INSTALL.md"&gt;here&lt;/a&gt; for other installation options.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# Homebrew
brew install colima

# MacPorts
sudo port install colima

# Nix
nix-env -iA nixpkgs.colima
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or stay on the bleeding edge (only Homebrew)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;brew install --HEAD colima
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Upgrading&lt;/h3&gt; 
&lt;p&gt;If upgrading from v0.5.6 or lower, it is required to start afresh by deleting existing instance.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;colima delete # delete existing instance
colima start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Start Colima with defaults&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;colima start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more usage options&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;colima --help
colima start --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use a config file&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;colima start --edit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using Templates&lt;/h2&gt; 
&lt;p&gt;When you run the &lt;code&gt;colima template&lt;/code&gt; command, Colima opens the default configuration in a temporary file using your editor (VS Code by default, if installed).&lt;/p&gt; 
&lt;p&gt;For example, you might see something like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;/var/folders/hm/xmq4vxs13dl2hx2jyct65r080000gn/T/colima-2758922589.yaml

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can edit this temporary file as needed. Once you save and close the file in the editor, Colima automatically overwrites the default template config located at:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;~/.colima/_templates/default.yaml

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To see more options for working with templates, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;colima template --help

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Runtimes&lt;/h2&gt; 
&lt;p&gt;On initial startup, Colima initiates with a user specified runtime that defaults to Docker.&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;Docker client is required for Docker runtime. Installable with brew &lt;code&gt;brew install docker&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can use the &lt;code&gt;docker&lt;/code&gt; client on macOS after &lt;code&gt;colima start&lt;/code&gt; with no additional setup.&lt;/p&gt; 
&lt;h3&gt;Containerd&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;colima start --runtime containerd&lt;/code&gt; starts and setup Containerd. You can use &lt;code&gt;colima nerdctl&lt;/code&gt; to interact with Containerd using &lt;a href="https://github.com/containerd/nerdctl"&gt;nerdctl&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It is recommended to run &lt;code&gt;colima nerdctl install&lt;/code&gt; to install &lt;code&gt;nerdctl&lt;/code&gt; alias script in $PATH.&lt;/p&gt; 
&lt;h3&gt;Kubernetes&lt;/h3&gt; 
&lt;p&gt;kubectl is required for Kubernetes. Installable with &lt;code&gt;brew install kubectl&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To enable Kubernetes, start Colima with &lt;code&gt;--kubernetes&lt;/code&gt; flag.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;colima start --kubernetes
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Interacting with Image Registry&lt;/h4&gt; 
&lt;p&gt;For Docker runtime, images built or pulled with Docker are accessible to Kubernetes.&lt;/p&gt; 
&lt;p&gt;For Containerd runtime, images built or pulled in the &lt;code&gt;k8s.io&lt;/code&gt; namespace are accessible to Kubernetes.&lt;/p&gt; 
&lt;h3&gt;Incus&lt;/h3&gt; 
&lt;p&gt;&lt;small&gt;&lt;strong&gt;Requires v0.7.0&lt;/strong&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;p&gt;Incus client is required for Incus runtime. Installable with brew &lt;code&gt;brew install incus&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;colima start --runtime incus&lt;/code&gt; starts and setup Incus.&lt;/p&gt; 
&lt;p&gt;You can use the &lt;code&gt;incus&lt;/code&gt; client on macOS after &lt;code&gt;colima start&lt;/code&gt; with no additional setup.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Running virtual machines on Incus is only supported on m3 or newer Apple Silicon devices.&lt;/p&gt; 
&lt;h3&gt;None&lt;/h3&gt; 
&lt;p&gt;&lt;small&gt;&lt;strong&gt;Requires v0.7.0&lt;/strong&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;p&gt;Colima can also be utilised solely as a headless virtual machine manager by specifying &lt;code&gt;none&lt;/code&gt; runtime.&lt;/p&gt; 
&lt;h3&gt;Customizing the VM&lt;/h3&gt; 
&lt;p&gt;The default VM created by Colima has 2 CPUs, 2GiB memory and 100GiB storage.&lt;/p&gt; 
&lt;p&gt;The VM can be customized either by passing additional flags to &lt;code&gt;colima start&lt;/code&gt;. e.g. &lt;code&gt;--cpu&lt;/code&gt;, &lt;code&gt;--memory&lt;/code&gt;, &lt;code&gt;--disk&lt;/code&gt;, &lt;code&gt;--runtime&lt;/code&gt;. Or by editing the config file with &lt;code&gt;colima start --edit&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;del&gt;disk size cannot be changed after the VM is created.&lt;/del&gt; From v0.5.3, disk size can be increased.&lt;/p&gt; 
&lt;h4&gt;Customization Examples&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;create VM with 1CPU, 2GiB memory and 10GiB storage.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;colima start --cpu 1 --memory 2 --disk 10
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;modify an existing VM to 4CPUs and 8GiB memory.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;colima stop
colima start --cpu 4 --memory 8
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;create VM with Rosetta 2 emulation. Requires v0.5.3 and MacOS &amp;gt;= 13 (Ventura) on Apple Silicon.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;colima start --vm-type=vz --vz-rosetta
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Goal&lt;/h2&gt; 
&lt;p&gt;To provide container runtimes on macOS with minimal setup.&lt;/p&gt; 
&lt;h2&gt;What is with the name?&lt;/h2&gt; 
&lt;p&gt;Colima means Containers on &lt;a href="https://github.com/lima-vm/lima"&gt;Lima&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Since Lima is aka Linux Machines. By transitivity, Colima can also mean Containers on Linux Machines.&lt;/p&gt; 
&lt;h2&gt;And the Logo?&lt;/h2&gt; 
&lt;p&gt;The logo was contributed by &lt;a href="https://github.com/dhodvogner"&gt;Daniel Hodvogner&lt;/a&gt;. Check &lt;a href="https://github.com/abiosoft/colima/issues/781"&gt;this issue&lt;/a&gt; for more.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting and FAQs&lt;/h2&gt; 
&lt;p&gt;Check &lt;a href="https://raw.githubusercontent.com/abiosoft/colima/main/docs/FAQ.md"&gt;here&lt;/a&gt; for Frequently Asked Questions.&lt;/p&gt; 
&lt;h2&gt;How to Contribute?&lt;/h2&gt; 
&lt;p&gt;Check &lt;a href="https://raw.githubusercontent.com/abiosoft/colima/main/docs/CONTRIBUTE.md"&gt;here&lt;/a&gt; for the instructions on contributing to the project.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abiosoft/colima/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abiosoft/colima/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;#colima&lt;/code&gt; channel in the CNCF Slack 
  &lt;ul&gt; 
   &lt;li&gt;New account: &lt;a href="https://slack.cncf.io/"&gt;https://slack.cncf.io/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Login: &lt;a href="https://cloud-native.slack.com/"&gt;https://cloud-native.slack.com/&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Help Wanted&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation and project website&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt; 
&lt;h2&gt;Sponsoring the Project&lt;/h2&gt; 
&lt;p&gt;If you (or your company) are benefiting from the project and would like to support the contributors, kindly sponsor.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sponsors/abiosoft"&gt;Github Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.buymeacoffee.com/abiosoft"&gt;Buy me a coffee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://patreon.com/colima"&gt;Patreon&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://macstadium.com"&gt;&lt;img src="https://uploads-ssl.webflow.com/5ac3c046c82724970fc60918/5c019d917bba312af7553b49_MacStadium-developerlogo.png" style="max-height: 150px" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pulumi/pulumi</title>
      <link>https://github.com/pulumi/pulumi</link>
      <description>&lt;p&gt;Pulumi - Infrastructure as Code in any programming language 🚀&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.pulumi.com/?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_content=top+logo" title="Pulumi - Modern Infrastructure as Code - AWS Azure Kubernetes Containers Serverless"&gt; &lt;img src="https://www.pulumi.com/images/logo/logo-on-white-box.svg?" width="350" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://slack.pulumi.com/"&gt;&lt;img src="http://www.pulumi.com/images/docs/badges/slack.svg?sanitize=true" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://github.com/pulumi/pulumi/discussions"&gt;&lt;img src="https://img.shields.io/github/discussions/pulumi/pulumi" alt="GitHub Discussions" /&gt;&lt;/a&gt; &lt;a href="https://npmjs.com/package/@pulumi/pulumi"&gt;&lt;img src="https://badge.fury.io/js/%40pulumi%2Fpulumi.svg?sanitize=true" alt="NPM version" /&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/pulumi"&gt;&lt;img src="https://badge.fury.io/py/pulumi.svg?sanitize=true" alt="Python version" /&gt;&lt;/a&gt; &lt;a href="https://badge.fury.io/nu/pulumi"&gt;&lt;img src="https://badge.fury.io/nu/pulumi.svg?sanitize=true" alt="NuGet version" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/pulumi/pulumi"&gt;&lt;img src="https://godoc.org/github.com/pulumi/pulumi?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/pulumi/pulumi/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/pulumi/pulumi" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Infrastructure as Code in any Programming Language&lt;/h1&gt; 
&lt;a href="https://www.pulumi.com/docs/iac/get-started/"&gt; &lt;img src="https://www.pulumi.com/images/get-started.svg?" align="right" width="120" /&gt; &lt;/a&gt; 
&lt;p&gt;&lt;strong&gt;Pulumi Infrastructure as Code&lt;/strong&gt; is the easiest way to build and deploy infrastructure, of any architecture and on any cloud, using programming languages that you already know and love. Code and ship infrastructure faster with your favorite languages and tools, and embed IaC anywhere with &lt;a href="https://www.pulumi.com/docs/iac/using-pulumi/automation-api/"&gt;Automation API&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Simply write code in your favorite language and Pulumi automatically provisions and manages your resources on &lt;a href="https://www.pulumi.com/docs/iac/clouds/aws/"&gt;AWS&lt;/a&gt;, &lt;a href="https://www.pulumi.com/docs/iac/clouds/azure/"&gt;Azure&lt;/a&gt;, &lt;a href="https://www.pulumi.com/docs/iac/clouds/gcp/"&gt;Google Cloud Platform&lt;/a&gt;, &lt;a href="https://www.pulumi.com/docs/iac/clouds/kubernetes/"&gt;Kubernetes&lt;/a&gt;, and &lt;a href="https://www.pulumi.com/registry/"&gt;120+ providers&lt;/a&gt; using an &lt;a href="https://www.pulumi.com/what-is/what-is-infrastructure-as-code/"&gt;infrastructure-as-code&lt;/a&gt; approach. Skip the YAML, and use standard language features like loops, functions, classes, and package management that you already know and love.&lt;/p&gt; 
&lt;p&gt;For example, create three web servers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;const aws = require("@pulumi/aws");
const sg = new aws.ec2.SecurityGroup("web-sg", {
    ingress: [{ protocol: "tcp", fromPort: 80, toPort: 80, cidrBlocks: ["0.0.0.0/0"] }],
});
for (let i = 0; i &amp;lt; 3; i++) {
    new aws.ec2.Instance(`web-${i}`, {
        ami: "ami-7172b611",
        instanceType: "t2.micro",
        vpcSecurityGroupIds: [sg.id],
        userData: `#!/bin/bash
            echo "Hello, World!" &amp;gt; index.html
            nohup python -m SimpleHTTPServer 80 &amp;amp;`,
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or a simple serverless timer that archives Hacker News every day at 8:30AM:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;const aws = require("@pulumi/aws");

const snapshots = new aws.dynamodb.Table("snapshots", {
    attributes: [{ name: "id", type: "S", }],
    hashKey: "id", billingMode: "PAY_PER_REQUEST",
});

aws.cloudwatch.onSchedule("daily-yc-snapshot", "cron(30 8 * * ? *)", () =&amp;gt; {
    require("https").get("https://news.ycombinator.com", res =&amp;gt; {
        let content = "";
        res.setEncoding("utf8");
        res.on("data", chunk =&amp;gt; content += chunk);
        res.on("end", () =&amp;gt; new aws.sdk.DynamoDB.DocumentClient().put({
            TableName: snapshots.name.get(),
            Item: { date: Date.now(), content },
        }).promise());
    }).end();
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Many examples are available spanning containers, serverless, and infrastructure in &lt;a href="https://github.com/pulumi/examples"&gt;pulumi/examples&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Pulumi is open source under the &lt;a href="https://github.com/pulumi/pulumi/raw/master/LICENSE"&gt;Apache 2.0 license&lt;/a&gt;, supports many languages and clouds, and is easy to extend. This repo contains the &lt;code&gt;pulumi&lt;/code&gt; CLI, language SDKs, and core Pulumi engine, and individual libraries are in their own repos.&lt;/p&gt; 
&lt;h2&gt;Welcome&lt;/h2&gt; 
&lt;img align="right" width="400" src="https://www.pulumi.com/images/docs/quickstart/console.png" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/docs/iac/get-started/"&gt;Get Started with Pulumi&lt;/a&gt;&lt;/strong&gt;: Deploy a simple application in AWS, Azure, Google Cloud, or Kubernetes using Pulumi.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/tutorials/"&gt;Learn&lt;/a&gt;&lt;/strong&gt;: Follow Pulumi learning pathways to learn best practices and architectural patterns through authentic examples.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/pulumi/examples"&gt;Examples&lt;/a&gt;&lt;/strong&gt;: Browse several examples across many languages, clouds, and scenarios including containers, serverless, and infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/docs/"&gt;Docs&lt;/a&gt;&lt;/strong&gt;: Learn about Pulumi concepts, follow user-guides, and consult the reference documentation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/registry/"&gt;Registry&lt;/a&gt;&lt;/strong&gt;: Find the Pulumi Package with the resources you need. Install the package directly into your project, browse the API documentation, and start building.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/product/secrets-management/"&gt;Secrets Management&lt;/a&gt;&lt;/strong&gt;: Tame secrets sprawl and configuration complexity securely across all your cloud infrastructure and applications with Pulumi ESC.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/orgs/pulumi/projects/44"&gt;Pulumi Roadmap&lt;/a&gt;&lt;/strong&gt;: Review the planned work for the upcoming quarter and a selected backlog of issues that are on our mind but not yet scheduled.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://slack.pulumi.com/"&gt;Community Slack&lt;/a&gt;&lt;/strong&gt;: Join us in Pulumi Community Slack. All conversations and questions are welcome.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/pulumi/pulumi/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/strong&gt;: Ask questions or share what you're building with Pulumi.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a name="getting-started"&gt;&lt;/a&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=6f8KF6UGN7g"&gt;&lt;img src="https://raw.githubusercontent.com/pulumi/pulumi/master/youtube_preview_image.png" alt="Watch the video" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://www.pulumi.com/docs/iac/get-started/"&gt;Get Started&lt;/a&gt; guide to quickly get started with Pulumi on your platform and cloud of choice.&lt;/p&gt; 
&lt;p&gt;Otherwise, the following steps demonstrate how to deploy your first Pulumi program, using AWS Serverless Lambdas, in minutes:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;To install the latest Pulumi release, run the following (see full &lt;a href="https://www.pulumi.com/docs/iac/download-install/"&gt;installation instructions&lt;/a&gt; for additional installation options):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ curl -fsSL https://get.pulumi.com/ | sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a Project&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;After installing, you can get started with the &lt;code&gt;pulumi new&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ mkdir pulumi-demo &amp;amp;&amp;amp; cd pulumi-demo
$ pulumi new hello-aws-javascript
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;new&lt;/code&gt; command offers templates for all languages and clouds. Run it without an argument and it'll prompt you with available projects. This command created an AWS Serverless Lambda project written in JavaScript.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Deploy to the Cloud&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Run &lt;code&gt;pulumi up&lt;/code&gt; to get your code to the cloud:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ pulumi up
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This makes all cloud resources needed to run your code. Simply make edits to your project, and subsequent &lt;code&gt;pulumi up&lt;/code&gt;s will compute the minimal diff to deploy your changes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use Your Program&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Now that your code is deployed, you can interact with it. In the above example, we can curl the endpoint:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ curl $(pulumi stack output url)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Access the Logs&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;If you're using containers or functions, Pulumi's unified logging command will show all of your logs:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ pulumi logs -f
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Destroy your Resources&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;After you're done, you can remove all resources created by your program:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ pulumi destroy -y
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To learn more, head over to &lt;a href="https://pulumi.com/"&gt;pulumi.com&lt;/a&gt; for much more information, including &lt;a href="https://www.pulumi.com/tutorials/"&gt;tutorials&lt;/a&gt;, &lt;a href="https://github.com/pulumi/examples"&gt;examples&lt;/a&gt;, and details of the core Pulumi CLI and &lt;a href="https://www.pulumi.com/docs/iac/concepts/"&gt;programming model concepts&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a name="platform"&gt;&lt;/a&gt;Platform&lt;/h2&gt; 
&lt;h3&gt;Languages&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Runtime&lt;/th&gt; 
   &lt;th&gt;Versions&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/logo-js.png" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/javascript/"&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://nodejs.org/en/about/previous-releases"&gt;Current, Active and Maintenance LTS versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/logo-ts.png" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/javascript/"&gt;TypeScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://nodejs.org/en/about/previous-releases"&gt;Current, Active and Maintenance LTS versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/logo-python.svg?sanitize=true" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/python/"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;Python&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://devguide.python.org/versions/#versions"&gt;Supported versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/logo-golang.png" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/go/"&gt;Go&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://go.dev/doc/devel/release#policy"&gt;Supported versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/dotnet.svg?sanitize=true" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/dotnet/"&gt;.NET (C#/F#/VB.NET)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;.NET&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://dotnet.microsoft.com/en-us/platform/support/policy/dotnet-core#lifecycle"&gt;Supported versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/java.svg?sanitize=true" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/java/"&gt;Java&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;JDK&lt;/td&gt; 
   &lt;td&gt;11+&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/yaml.svg?sanitize=true" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/yaml/"&gt;YAML&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;EOL Releases&lt;/h3&gt; 
&lt;p&gt;The Pulumi CLI v1 and v2 are no longer supported. If you are not yet running v3, please consider migrating to v3 to continue getting the latest and greatest Pulumi has to offer! &lt;span&gt;💪&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To migrate from v2 to v3, please see our &lt;a href="https://www.pulumi.com/docs/iac/download-install/migrating-3.0/"&gt;v3 Migration Guide&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Clouds&lt;/h3&gt; 
&lt;p&gt;Visit the &lt;a href="https://www.pulumi.com/registry/"&gt;Registry&lt;/a&gt; for the full list of supported cloud and infrastructure providers.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://github.com/pulumi/pulumi/raw/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for information on building Pulumi from source or contributing improvements.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NexaAI/nexa-sdk</title>
      <link>https://github.com/NexaAI/nexa-sdk</link>
      <description>&lt;p&gt;Run the latest LLMs and VLMs across GPU, NPU, and CPU with bindings for Python, Android Java, and iOS Swift, getting up and running quickly with OpenAI gpt-oss, Gemma 3, Qwen3, and more.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt; &lt;img width="100%" src="https://raw.githubusercontent.com/NexaAI/nexa-sdk/main/assets/banner.png" alt="Nexa AI Banner" /&gt; &lt;/p&gt; 
 &lt;p align="center"&gt; &lt;a href="https://docs.nexa.ai"&gt; &lt;img src="https://img.shields.io/badge/docs-website-brightgreen?logo=readthedocs" alt="Documentation" /&gt; &lt;/a&gt; &lt;a href="https://x.com/nexa_ai"&gt;&lt;img alt="X account" src="https://img.shields.io/twitter/url/https/twitter.com/diffuserslib.svg?style=social&amp;amp;label=Follow%20%40Nexa_AI" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/nexa-ai"&gt; &lt;img src="https://img.shields.io/discord/1192186167391682711?color=5865F2&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Join us on Discord" /&gt; &lt;/a&gt; &lt;a href="https://join.slack.com/t/nexa-ai-community/shared_invite/zt-3837k9xpe-LEty0disTTUnTUQ4O3uuNw"&gt; &lt;img src="https://img.shields.io/badge/slack-join%20chat-4A154B?logo=slack&amp;amp;logoColor=white" alt="Join us on Slack" /&gt; &lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://img.shields.io/badge/os-linux%20%7C%20macOS%20%7C%20windows-purple" alt="OS" /&gt; &lt;img src="https://img.shields.io/badge/hardware-CPU%20%7C%20GPU%20%7C%20NPU-yellow" alt="Hardware" /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;Nexa SDK&lt;/h1&gt; 
&lt;p&gt;Nexa SDK is an on-device inference framework that runs any model on any device, across any backend. It runs on CPUs, GPUs, NPUs with backend support for CUDA, Metal, Vulkan, and Qualcomm NPU. It handles multiple input modalities including text 📝, image 🖼️, and audio 🎧. The SDK includes an OpenAI-compatible API server with support for JSON schema-based function calling and streaming. It supports model formats such as GGUF, MLX, Nexa AI's own &lt;code&gt;.nexa&lt;/code&gt; format, enabling efficient quantized inference across diverse platforms.&lt;/p&gt; 
&lt;h2&gt;Qualcomm NPU PC Demos&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="50%"&gt; &lt;img width="100%" src="https://raw.githubusercontent.com/NexaAI/nexa-sdk/main/assets/PC_demo_2_image.gif" alt="Multi-Image Reasoning Demo" /&gt; &lt;p align="center"&gt;&lt;b&gt;🖼️ Multi-Image Reasoning&lt;/b&gt;&lt;br /&gt;Spot the difference across two images in multi-round dialogue.&lt;/p&gt; &lt;/td&gt; 
   &lt;td width="50%"&gt; &lt;img width="100%" src="https://raw.githubusercontent.com/NexaAI/nexa-sdk/main/assets/PC_Demo_Agent.gif" alt="Image + Audio Function Call Demo" /&gt; &lt;p align="center"&gt;&lt;b&gt;🎤 Image + Text → Function Call&lt;/b&gt;&lt;br /&gt;Snap a poster, add a voice note, and AI agent creates a calendar event.&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="2" align="center"&gt; &lt;img width="50%" src="https://raw.githubusercontent.com/NexaAI/nexa-sdk/main/assets/PC_Demo_Audio.gif" alt="Multi-Audio Comparison Demo" /&gt; &lt;p align="center"&gt;&lt;b&gt;🎶 Multi-Audio Comparison&lt;/b&gt;&lt;br /&gt;Tell the difference between two music clips locally.&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Recent updates&lt;/h2&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.09.23: Intel NPU Support&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;LLM inference with &lt;a href="https://sdk.nexa.ai/model/DeepSeek-R1-Distill-Qwen-1.5B-Intel-NPU"&gt;DeepSeek-r1-distill-Qwen-1.5B&lt;/a&gt; and &lt;a href="https://sdk.nexa.ai/model/Llama3.2-3B-Intel-NPU"&gt;Llama3.2-3B&lt;/a&gt; on Intel NPU&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.09.22: Apple Neural Engine (ANE) Support&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Real-time speech recognition with &lt;a href="https://sdk.nexa.ai/model/parakeet-v3-ane"&gt;Parakeet v3 model&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.09.15: New Models Support&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;First-ever &lt;a href="https://sdk.nexa.ai/model/Gemma3n-E4B"&gt;Gemma-3n&lt;/a&gt; &lt;strong&gt;multimodal&lt;/strong&gt; inference for GPU &amp;amp; CPU, in GGUF format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sdk.nexa.ai/model/Prefect-illustrious-XL-v2.0p"&gt;SDXL image generation&lt;/a&gt; from Civitai for GPU&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sdk.nexa.ai/model/embeddinggemma-300m-npu"&gt;EmbeddingGemma&lt;/a&gt; for Qualcomm NPU&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sdk.nexa.ai/model/phi4-mini-npu-turbo"&gt;Phi4-mini turbo&lt;/a&gt; and &lt;a href="https://sdk.nexa.ai/model/phi3.5-mini-npu"&gt;Phi3.5-mini&lt;/a&gt; for Qualcomm NPU&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sdk.nexa.ai/model/parakeet-v3-npu"&gt;Parakeet V3 model&lt;/a&gt; for Qualcomm NPU&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.09.05: Turbo Engine &amp;amp; Unified Interface&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nexa.ai/blogs/nexaml-turbo"&gt;Nexa ML Turbo engine&lt;/a&gt; for optimized NPU performance 
  &lt;ul&gt; 
   &lt;li&gt;Try &lt;a href="https://sdk.nexa.ai/model/phi4-mini-npu-turbo"&gt;Phi4-mini turbo&lt;/a&gt; and &lt;a href="https://sdk.nexa.ai/model/Llama3.2-3B-NPU-Turbo"&gt;Llama3.2-3B-NPU-Turbo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;80% faster at shorter contexts (&amp;lt;=2048), 33% faster at longer contexts (&amp;gt;2048) than current NPU solutions&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nexa.ai/blogs/sdk-unifiedarchitecture"&gt;Unified interface&lt;/a&gt; supporting NPU/GPU/CPU backends: 
  &lt;ul&gt; 
   &lt;li&gt;Single installer architecture eliminating dependency conflicts&lt;/li&gt; 
   &lt;li&gt;Lazy loading and plugin isolation for improved performance&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.08.20: Qualcomm NPU Support with NexaML Turbo Engine&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;OmniNeural-4B: the &lt;strong&gt;first multimodal AI model built natively for NPUs&lt;/strong&gt; — handling text, images, and audio in one model&lt;/li&gt; 
 &lt;li&gt;Check the model and demos at &lt;a href="https://huggingface.co/NexaAI/OmniNeural-4B"&gt;Hugging Face repo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Check our &lt;a href="https://nexa.ai/blogs/omnineural-4b"&gt;OmniNeural-4B technical blog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📣 &lt;strong&gt;2025.08.12: ASR &amp;amp; TTS Support in MLX format&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Parakeet and Kokoro models support in MLX format.&lt;/li&gt; 
 &lt;li&gt;new &lt;code&gt;/mic&lt;/code&gt; mode to transcribe live speech directly in your terminal.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nexa-model-hub-bucket.s3.us-west-1.amazonaws.com/public/nexa_sdk/downloads/nexa-cli_macos_arm64.pkg"&gt;arm64 with Apple Neural Engine support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nexa-model-hub-bucket.s3.us-west-1.amazonaws.com/public/nexa_sdk/downloads/nexa-cli_macos_x86_64.pkg"&gt;x86_64&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nexa-model-hub-bucket.s3.us-west-1.amazonaws.com/public/nexa_sdk/downloads/nexa-cli_windows_arm64.exe"&gt;arm64 with Qualcomm NPU support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nexa-model-hub-bucket.s3.us-west-1.amazonaws.com/public/nexa_sdk/downloads/nexa-cli_windows_x86_64.exe"&gt;x86_64 with Intel NPU support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsSL https://github.com/NexaAI/nexa-sdk/releases/latest/download/nexa-cli_linux_x86_64.sh -o install.sh &amp;amp;&amp;amp; chmod +x install.sh &amp;amp;&amp;amp; ./install.sh &amp;amp;&amp;amp; rm install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Supported Models&lt;/h2&gt; 
&lt;p&gt;You can run any compatible GGUF, MLX, or nexa model from 🤗 Hugging Face by using the &lt;code&gt;&amp;lt;full repo name&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Qualcomm NPU models&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] You need to download the &lt;a href="https://nexa-model-hub-bucket.s3.us-west-1.amazonaws.com/public/nexa_sdk/downloads/nexa-cli_windows_arm64.exe"&gt;arm64 with Qualcomm NPU support&lt;/a&gt; and make sure you have Snapdragon® X Elite chip on your laptop.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Quick Start (Windows arm64, Snapdragon X Elite)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Login &amp;amp; Get Access Token (required for Pro Models)&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create an account at &lt;a href="https://sdk.nexa.ai"&gt;sdk.nexa.ai&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Go to &lt;strong&gt;Deployment → Create Token&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;Run this once in your terminal (replace with your token): &lt;pre&gt;&lt;code class="language-bash"&gt;nexa config set license '&amp;lt;your_token_here&amp;gt;'
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run and chat with our multimodal model, OmniNeural-4B, or other models on NPU&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer omni-neural
nexa infer NexaAI/OmniNeural-4B
nexa infer NexaAI/qwen3-1.7B-npu
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;GGUF models&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] GGUF runs on macOS, Linux, and Windows.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;📝 Run and chat with LLMs, e.g. Qwen3:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer ggml-org/Qwen3-1.7B-GGUF
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🖼️ Run and chat with Multimodal models, e.g. Qwen2.5-Omni:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer NexaAI/Qwen2.5-Omni-3B-GGUF
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MLX models&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] MLX is macOS-only (Apple Silicon). Many MLX models in the Hugging Face mlx-community organization have quality issues and may not run reliably. We recommend starting with models from our curated &lt;a href="https://huggingface.co/NexaAI/collections"&gt;NexaAI Collection&lt;/a&gt; for best results. For example&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;📝 Run and chat with LLMs, e.g. Qwen3:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer NexaAI/Qwen3-4B-4bit-MLX
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🖼️ Run and chat with Multimodal models, e.g. Gemma3n:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nexa infer NexaAI/gemma-3n-E4B-it-4bit-MLX
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;CLI Reference&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Essential Command&lt;/th&gt; 
   &lt;th&gt;What it does&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa -h&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;show all CLI commands&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa pull &amp;lt;repo&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Interactive download &amp;amp; cache of a model&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa infer &amp;lt;repo&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Local inference&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa list&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Show all cached models with sizes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa remove &amp;lt;repo&amp;gt;&lt;/code&gt; / &lt;code&gt;nexa clean&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Delete one / all cached models&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa serve --host 127.0.0.1:8080&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Launch OpenAI‑compatible REST server&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;nexa run &amp;lt;repo&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Chat with a model via an existing server&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;👉 To interact with multimodal models, you can drag photos or audio clips directly into the CLI — you can even drop multiple images at once!&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://nexaai.mintlify.app/nexa-sdk-go/NexaCLI"&gt;CLI Reference&lt;/a&gt; for full commands.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;We would like to thank the following projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggml-org/llama.cpp"&gt;llama.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ml-explore/mlx-lm"&gt;mlx-lm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Blaizzy/mlx-vlm"&gt;mlx-vlm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Blaizzy/mlx-audio"&gt;mlx-audio&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>rancher/rancher</title>
      <link>https://github.com/rancher/rancher</link>
      <description>&lt;p&gt;Complete container management platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rancher&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://store.docker.com/community/images/rancher/rancher"&gt;&lt;img src="https://img.shields.io/docker/pulls/rancher/rancher.svg?sanitize=true" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/rancher/rancher"&gt;&lt;img src="https://goreportcard.com/badge/github.com/rancher/rancher" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Rancher is an open source container management platform built for organizations that deploy containers in production. Rancher makes it easy to run Kubernetes everywhere, meet IT requirements, and empower DevOps teams.&lt;/p&gt; 
&lt;h2&gt;Stable Release&lt;/h2&gt; 
&lt;!-- stable v2.12.2 DO NOT REMOVE THIS LINE --&gt; 
&lt;ul&gt; 
 &lt;li&gt;v2.12 
  &lt;ul&gt; 
   &lt;li&gt;Stable - v2.12.2 - &lt;code&gt;rancher/rancher:v2.12.2&lt;/code&gt; / &lt;code&gt;rancher/rancher:stable&lt;/code&gt; - Read the full release &lt;a href="https://github.com/rancher/rancher/releases/tag/v2.12.2"&gt;notes&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;v2.11 
  &lt;ul&gt; 
   &lt;li&gt;Stable - v2.11.3 - &lt;code&gt;rancher/rancher:v2.11.3&lt;/code&gt; - Read the full release &lt;a href="https://github.com/rancher/rancher/releases/tag/v2.11.3"&gt;notes&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;v2.10 
  &lt;ul&gt; 
   &lt;li&gt;Stable - v2.10.3 - &lt;code&gt;rancher/rancher:v2.10.3&lt;/code&gt; - Read the full release &lt;a href="https://github.com/rancher/rancher/releases/tag/v2.10.3"&gt;notes&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To get automated notifications of our latest release, you can watch the announcements category in our &lt;a href="http://forums.rancher.com/c/announcements"&gt;forums&lt;/a&gt;, or subscribe to the RSS feed &lt;code&gt;https://forums.rancher.com/c/announcements.rss&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;sudo docker run -d --restart=unless-stopped -p 80:80 -p 443:443 --privileged rancher/rancher
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open your browser to &lt;a href="https://localhost"&gt;https://localhost&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://ranchermanager.docs.rancher.com/v2.8/pages-for-subheaders/installation-and-upgrade"&gt;Installing/Upgrading Rancher&lt;/a&gt; for all installation options.&lt;/p&gt; 
&lt;h3&gt;Minimum Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Operating Systems 
  &lt;ul&gt; 
   &lt;li&gt;Please see &lt;a href="https://rancher.com/support-matrix/"&gt;Support Matrix&lt;/a&gt; for specific OS versions for each Rancher version. Note that the link will default to the support matrix for the latest version of Rancher. Use the left navigation menu to select a different Rancher version.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Hardware &amp;amp; Software 
  &lt;ul&gt; 
   &lt;li&gt;Please see &lt;a href="https://ranchermanager.docs.rancher.com/v2.8/pages-for-subheaders/installation-requirements"&gt;Installation Requirements&lt;/a&gt; for hardware and software requirements.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Using Rancher&lt;/h3&gt; 
&lt;p&gt;To learn more about using Rancher, please refer to our &lt;a href="https://ranchermanager.docs.rancher.com/v2.8"&gt;Rancher Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Source Code&lt;/h2&gt; 
&lt;p&gt;This repo is a meta-repo used for packaging and contains the majority of Rancher codebase. For other Rancher projects and modules, &lt;a href="https://github.com/rancher/rancher/raw/release/v2.8/go.mod"&gt;see go.mod&lt;/a&gt; for the full list.&lt;/p&gt; 
&lt;p&gt;Rancher also includes other open source libraries and projects, &lt;a href="https://github.com/rancher/rancher/raw/release/v2.8/go.mod"&gt;see go.mod&lt;/a&gt; for the full list.&lt;/p&gt; 
&lt;h2&gt;Build configuration&lt;/h2&gt; 
&lt;p&gt;Refer to the &lt;a href="https://raw.githubusercontent.com/rancher/rancher/main/docs/build.md"&gt;build docs&lt;/a&gt; on how to customize the building and packaging of Rancher.&lt;/p&gt; 
&lt;h2&gt;Support, Discussion, and Community&lt;/h2&gt; 
&lt;p&gt;If you need any help with Rancher, please join us at either our &lt;a href="http://forums.rancher.com/"&gt;Rancher forums&lt;/a&gt; or &lt;a href="https://slack.rancher.io/"&gt;Slack&lt;/a&gt; where most of our team hangs out at.&lt;/p&gt; 
&lt;p&gt;Please submit any Rancher bugs, issues, and feature requests to &lt;a href="https://github.com/rancher/rancher/issues"&gt;rancher/rancher&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For security issues, please first check our &lt;a href="https://github.com/rancher/rancher/security"&gt;security policy&lt;/a&gt; and email &lt;a href="mailto:security-rancher@suse.com"&gt;security-rancher@suse.com&lt;/a&gt; instead of posting a public issue in GitHub. You may (but are not required to) use the GPG key located on &lt;a href="https://keybase.io/rancher"&gt;Keybase&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Copyright (c) 2014-2025 &lt;a href="http://rancher.com"&gt;SUSE&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>redis/go-redis</title>
      <link>https://github.com/redis/go-redis</link>
      <description>&lt;p&gt;Redis Go client&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Redis client for Go&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/redis/go-redis/actions"&gt;&lt;img src="https://github.com/redis/go-redis/actions/workflows/build.yml/badge.svg?sanitize=true" alt="build workflow" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/redis/go-redis/v9?tab=doc"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/redis/go-redis/v9" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;a href="https://redis.uptrace.dev/"&gt;&lt;img src="https://img.shields.io/badge/redis-documentation-informational" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/redis/go-redis/v9"&gt;&lt;img src="https://goreportcard.com/badge/github.com/redis/go-redis/v9" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/github/redis/go-redis"&gt;&lt;img src="https://codecov.io/github/redis/go-redis/graph/badge.svg?token=tsrCZKuSSw" alt="codecov" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/W4txy5AeKM"&gt;&lt;img src="https://img.shields.io/discord/697882427875393627.svg?style=social&amp;amp;logo=discord" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://www.twitch.tv/redisinc"&gt;&lt;img src="https://img.shields.io/twitch/status/redisinc?style=social" alt="Twitch" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/redisinc"&gt;&lt;img src="https://img.shields.io/youtube/channel/views/UCD78lHSwYqMlyetR0_P4Vig?style=social" alt="YouTube" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/redisinc"&gt;&lt;img src="https://img.shields.io/twitter/follow/redisinc?style=social" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://stackoverflow.com/questions/tagged/go-redis"&gt;&lt;img src="https://img.shields.io/stackexchange/stackoverflow/t/go-redis?style=social&amp;amp;logo=stackoverflow&amp;amp;label=Stackoverflow" alt="Stack Exchange questions" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;go-redis is the official Redis client library for the Go programming language. It offers a straightforward interface for interacting with Redis servers.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Supported versions&lt;/h2&gt; 
&lt;p&gt;In &lt;code&gt;go-redis&lt;/code&gt; we are aiming to support the last three releases of Redis. Currently, this means we do support:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redis/redis/7.2/00-RELEASENOTES"&gt;Redis 7.2&lt;/a&gt; - using Redis Stack 7.2 for modules support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redis/redis/7.4/00-RELEASENOTES"&gt;Redis 7.4&lt;/a&gt; - using Redis Stack 7.4 for modules support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redis/redis/8.0/00-RELEASENOTES"&gt;Redis 8.0&lt;/a&gt; - using Redis CE 8.0 where modules are included&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redis/redis/8.2/00-RELEASENOTES"&gt;Redis 8.2&lt;/a&gt; - using Redis CE 8.2 where modules are included&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Although the &lt;code&gt;go.mod&lt;/code&gt; states it requires at minimum &lt;code&gt;go 1.18&lt;/code&gt;, our CI is configured to run the tests against all three versions of Redis and latest two versions of Go (&lt;a href="https://go.dev/doc/devel/release#go1.23.0"&gt;1.23&lt;/a&gt;, &lt;a href="https://go.dev/doc/devel/release#go1.24.0"&gt;1.24&lt;/a&gt;). We observe that some modules related test may not pass with Redis Stack 7.2 and some commands are changed with Redis CE 8.0. Please do refer to the documentation and the tests if you experience any issues. We do plan to update the go version in the &lt;code&gt;go.mod&lt;/code&gt; to &lt;code&gt;go 1.24&lt;/code&gt; in one of the next releases.&lt;/p&gt; 
&lt;h2&gt;How do I Redis?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://university.redis.com/"&gt;Learn for free at Redis University&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://launchpad.redis.com/"&gt;Build faster with the Redis Launchpad&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://redis.com/try-free/"&gt;Try the Redis Cloud&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://developer.redis.com/"&gt;Dive in developer tutorials&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://redis.com/community/"&gt;Join the Redis community&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://redis.com/company/careers/jobs/"&gt;Work at Redis&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://redis.uptrace.dev"&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redis.uptrace.dev/zh/"&gt;简体中文&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/redis/go-redis/discussions"&gt;Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/W4txy5AeKM"&gt;Chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/github.com/redis/go-redis/v9"&gt;Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/github.com/redis/go-redis/v9#pkg-examples"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-redis/redismock"&gt;Redis Mock&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bsm/redislock"&gt;Distributed Locks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-redis/cache"&gt;Redis Cache&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-redis/redis_rate"&gt;Rate limiting&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This client also works with &lt;a href="https://github.com/apache/incubator-kvrocks"&gt;Kvrocks&lt;/a&gt;, a distributed key value NoSQL database that uses RocksDB as storage engine and is compatible with Redis protocol.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Redis commands except QUIT and SYNC.&lt;/li&gt; 
 &lt;li&gt;Automatic connection pooling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redis/go-redis/master/#1-streaming-credentials-provider-highest-priority"&gt;StreamingCredentialsProvider (e.g. entra id, oauth)&lt;/a&gt; (experimental)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redis.uptrace.dev/guide/go-redis-pubsub.html"&gt;Pub/Sub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redis.uptrace.dev/guide/go-redis-pipelines.html"&gt;Pipelines and transactions&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redis.uptrace.dev/guide/lua-scripting.html"&gt;Scripting&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redis.uptrace.dev/guide/go-redis-sentinel.html"&gt;Redis Sentinel&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redis.uptrace.dev/guide/go-redis-cluster.html"&gt;Redis Cluster&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redis.uptrace.dev/guide/ring.html"&gt;Redis Ring&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redis.uptrace.dev/guide/redis-performance-monitoring.html"&gt;Redis Performance Monitoring&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redis.io/docs/data-types/probabilistic/"&gt;Redis Probabilistic [RedisStack]&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redis/go-redis/master/#custom-buffer-sizes"&gt;Customizable read and write buffers size.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;go-redis supports 2 last Go versions and requires a Go version with &lt;a href="https://github.com/golang/go/wiki/Modules"&gt;modules&lt;/a&gt; support. So make sure to initialize a Go module:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;go mod init github.com/my/repo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then install go-redis/&lt;strong&gt;v9&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;go get github.com/redis/go-redis/v9
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import (
    "context"
    "fmt"

    "github.com/redis/go-redis/v9"
)

var ctx = context.Background()

func ExampleClient() {
    rdb := redis.NewClient(&amp;amp;redis.Options{
        Addr:     "localhost:6379",
        Password: "", // no password set
        DB:       0,  // use default DB
    })

    err := rdb.Set(ctx, "key", "value", 0).Err()
    if err != nil {
        panic(err)
    }

    val, err := rdb.Get(ctx, "key").Result()
    if err != nil {
        panic(err)
    }
    fmt.Println("key", val)

    val2, err := rdb.Get(ctx, "key2").Result()
    if err == redis.Nil {
        fmt.Println("key2 does not exist")
    } else if err != nil {
        panic(err)
    } else {
        fmt.Println("key2", val2)
    }
    // Output: key value
    // key2 does not exist
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Authentication&lt;/h3&gt; 
&lt;p&gt;The Redis client supports multiple ways to provide authentication credentials, with a clear priority order. Here are the available options:&lt;/p&gt; 
&lt;h4&gt;1. Streaming Credentials Provider (Highest Priority) - Experimental feature&lt;/h4&gt; 
&lt;p&gt;The streaming credentials provider allows for dynamic credential updates during the connection lifetime. This is particularly useful for managed identity services and token-based authentication.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type StreamingCredentialsProvider interface {
    Subscribe(listener CredentialsListener) (Credentials, UnsubscribeFunc, error)
}

type CredentialsListener interface {
    OnNext(credentials Credentials)  // Called when credentials are updated
    OnError(err error)              // Called when an error occurs
}

type Credentials interface {
    BasicAuth() (username string, password string)
    RawCredentials() string
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;rdb := redis.NewClient(&amp;amp;redis.Options{
    Addr: "localhost:6379",
    StreamingCredentialsProvider: &amp;amp;MyCredentialsProvider{},
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The streaming credentials provider can be used with &lt;a href="https://github.com/redis/go-redis-entraid"&gt;go-redis-entraid&lt;/a&gt; to enable Entra ID (formerly Azure AD) authentication. This allows for seamless integration with Azure's managed identity services and token-based authentication.&lt;/p&gt; 
&lt;p&gt;Example with Entra ID:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import (
    "github.com/redis/go-redis/v9"
    "github.com/redis/go-redis-entraid"
)

// Create an Entra ID credentials provider
provider := entraid.NewDefaultAzureIdentityProvider()

// Configure Redis client with Entra ID authentication
rdb := redis.NewClient(&amp;amp;redis.Options{
    Addr: "your-redis-server.redis.cache.windows.net:6380",
    StreamingCredentialsProvider: provider,
    TLSConfig: &amp;amp;tls.Config{
        MinVersion: tls.VersionTLS12,
    },
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;2. Context-based Credentials Provider&lt;/h4&gt; 
&lt;p&gt;The context-based provider allows credentials to be determined at the time of each operation, using the context.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;rdb := redis.NewClient(&amp;amp;redis.Options{
    Addr: "localhost:6379",
    CredentialsProviderContext: func(ctx context.Context) (string, string, error) {
        // Return username, password, and any error
        return "user", "pass", nil
    },
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;3. Regular Credentials Provider&lt;/h4&gt; 
&lt;p&gt;A simple function-based provider that returns static credentials.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;rdb := redis.NewClient(&amp;amp;redis.Options{
    Addr: "localhost:6379",
    CredentialsProvider: func() (string, string) {
        // Return username and password
        return "user", "pass"
    },
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;4. Username/Password Fields (Lowest Priority)&lt;/h4&gt; 
&lt;p&gt;The most basic way to provide credentials is through the &lt;code&gt;Username&lt;/code&gt; and &lt;code&gt;Password&lt;/code&gt; fields in the options.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;rdb := redis.NewClient(&amp;amp;redis.Options{
    Addr:     "localhost:6379",
    Username: "user",
    Password: "pass",
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Priority Order&lt;/h4&gt; 
&lt;p&gt;The client will use credentials in the following priority order:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Streaming Credentials Provider (if set)&lt;/li&gt; 
 &lt;li&gt;Context-based Credentials Provider (if set)&lt;/li&gt; 
 &lt;li&gt;Regular Credentials Provider (if set)&lt;/li&gt; 
 &lt;li&gt;Username/Password fields (if set)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If none of these are set, the client will attempt to connect without authentication.&lt;/p&gt; 
&lt;h3&gt;Protocol Version&lt;/h3&gt; 
&lt;p&gt;The client supports both RESP2 and RESP3 protocols. You can specify the protocol version in the options:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;rdb := redis.NewClient(&amp;amp;redis.Options{
    Addr:     "localhost:6379",
    Password: "", // no password set
    DB:       0,  // use default DB
    Protocol: 3,  // specify 2 for RESP 2 or 3 for RESP 3
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Connecting via a redis url&lt;/h3&gt; 
&lt;p&gt;go-redis also supports connecting via the &lt;a href="https://github.com/redis/redis-specifications/tree/master/uri/redis.txt"&gt;redis uri specification&lt;/a&gt;. The example below demonstrates how the connection can easily be configured using a string, adhering to this specification.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import (
    "github.com/redis/go-redis/v9"
)

func ExampleClient() *redis.Client {
    url := "redis://user:password@localhost:6379/0?protocol=3"
    opts, err := redis.ParseURL(url)
    if err != nil {
        panic(err)
    }

    return redis.NewClient(opts)
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Instrument with OpenTelemetry&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import (
    "github.com/redis/go-redis/v9"
    "github.com/redis/go-redis/extra/redisotel/v9"
    "errors"
)

func main() {
    ...
    rdb := redis.NewClient(&amp;amp;redis.Options{...})

    if err := errors.Join(redisotel.InstrumentTracing(rdb), redisotel.InstrumentMetrics(rdb)); err != nil {
        log.Fatal(err)
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Buffer Size Configuration&lt;/h3&gt; 
&lt;p&gt;go-redis uses 32KiB read and write buffers by default for optimal performance. For high-throughput applications or large pipelines, you can customize buffer sizes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;rdb := redis.NewClient(&amp;amp;redis.Options{
    Addr:            "localhost:6379",
    ReadBufferSize:  1024 * 1024, // 1MiB read buffer
    WriteBufferSize: 1024 * 1024, // 1MiB write buffer
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Advanced Configuration&lt;/h3&gt; 
&lt;p&gt;go-redis supports extending the client identification phase to allow projects to send their own custom client identification.&lt;/p&gt; 
&lt;h4&gt;Default Client Identification&lt;/h4&gt; 
&lt;p&gt;By default, go-redis automatically sends the client library name and version during the connection process. This feature is available in redis-server as of version 7.2. As a result, the command is "fire and forget", meaning it should fail silently, in the case that the redis server does not support this feature.&lt;/p&gt; 
&lt;h4&gt;Disabling Identity Verification&lt;/h4&gt; 
&lt;p&gt;When connection identity verification is not required or needs to be explicitly disabled, a &lt;code&gt;DisableIdentity&lt;/code&gt; configuration option exists. Initially there was a typo and the option was named &lt;code&gt;DisableIndentity&lt;/code&gt; instead of &lt;code&gt;DisableIdentity&lt;/code&gt;. The misspelled option is marked as Deprecated and will be removed in V10 of this library. Although both options will work at the moment, the correct option is &lt;code&gt;DisableIdentity&lt;/code&gt;. The deprecated option will be removed in V10 of this library, so please use the correct option name to avoid any issues.&lt;/p&gt; 
&lt;p&gt;To disable verification, set the &lt;code&gt;DisableIdentity&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; in the Redis client options:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;rdb := redis.NewClient(&amp;amp;redis.Options{
    Addr:            "localhost:6379",
    Password:        "",
    DB:              0,
    DisableIdentity: true, // Disable set-info on connect
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Unstable RESP3 Structures for RediSearch Commands&lt;/h4&gt; 
&lt;p&gt;When integrating Redis with application functionalities using RESP3, it's important to note that some response structures aren't final yet. This is especially true for more complex structures like search and query results. We recommend using RESP2 when using the search and query capabilities, but we plan to stabilize the RESP3-based API-s in the coming versions. You can find more guidance in the upcoming release notes.&lt;/p&gt; 
&lt;p&gt;To enable unstable RESP3, set the option in your client configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;redis.NewClient(&amp;amp;redis.Options{
			UnstableResp3: true,
		})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When UnstableResp3 mode is enabled, it's necessary to use RawResult() and RawVal() to retrieve a raw data. Since, raw response is the only option for unstable search commands Val() and Result() calls wouldn't have any affect on them:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;res1, err := client.FTSearchWithArgs(ctx, "txt", "foo bar", &amp;amp;redis.FTSearchOptions{}).RawResult()
val1 := client.FTSearchWithArgs(ctx, "txt", "foo bar", &amp;amp;redis.FTSearchOptions{}).RawVal()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Redis-Search Default Dialect&lt;/h4&gt; 
&lt;p&gt;In the Redis-Search module, &lt;strong&gt;the default dialect is 2&lt;/strong&gt;. If needed, you can explicitly specify a different dialect using the appropriate configuration in your queries.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: Be aware that the query dialect may impact the results returned. If needed, you can revert to a different dialect version by passing the desired dialect in the arguments of the command you want to execute. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;	res2, err := rdb.FTSearchWithArgs(ctx,
		"idx:bicycle",
		"@pickup_zone:[CONTAINS $bike]",
		&amp;amp;redis.FTSearchOptions{
			Params: map[string]interface{}{
				"bike": "POINT(-0.1278 51.5074)",
			},
			DialectVersion: 3,
		},
	).Result()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find further details in the &lt;a href="https://redis.io/docs/latest/develop/interact/search-and-query/advanced-concepts/dialects/"&gt;query dialect documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Custom buffer sizes&lt;/h4&gt; 
&lt;p&gt;Prior to v9.12, the buffer size was the default go value of 4096 bytes. Starting from v9.12, go-redis uses 32KiB read and write buffers by default for optimal performance. For high-throughput applications or large pipelines, you can customize buffer sizes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;rdb := redis.NewClient(&amp;amp;redis.Options{
    Addr:            "localhost:6379",
    ReadBufferSize:  1024 * 1024, // 1MiB read buffer
    WriteBufferSize: 1024 * 1024, // 1MiB write buffer
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: If you experience any issues with the default buffer sizes, please try setting them to the go default of 4096 bytes.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions to the go-redis library! If you have a bug fix, feature request, or improvement, please open an issue or pull request on GitHub. We appreciate your help in making go-redis better for everyone. If you are interested in contributing to the go-redis library, please check out our &lt;a href="https://raw.githubusercontent.com/redis/go-redis/master/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; for more information on how to get started.&lt;/p&gt; 
&lt;h2&gt;Look and feel&lt;/h2&gt; 
&lt;p&gt;Some corner cases:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;// SET key value EX 10 NX
set, err := rdb.SetNX(ctx, "key", "value", 10*time.Second).Result()

// SET key value keepttl NX
set, err := rdb.SetNX(ctx, "key", "value", redis.KeepTTL).Result()

// SORT list LIMIT 0 2 ASC
vals, err := rdb.Sort(ctx, "list", &amp;amp;redis.Sort{Offset: 0, Count: 2, Order: "ASC"}).Result()

// ZRANGEBYSCORE zset -inf +inf WITHSCORES LIMIT 0 2
vals, err := rdb.ZRangeByScoreWithScores(ctx, "zset", &amp;amp;redis.ZRangeBy{
    Min: "-inf",
    Max: "+inf",
    Offset: 0,
    Count: 2,
}).Result()

// ZINTERSTORE out 2 zset1 zset2 WEIGHTS 2 3 AGGREGATE SUM
vals, err := rdb.ZInterStore(ctx, "out", &amp;amp;redis.ZStore{
    Keys: []string{"zset1", "zset2"},
    Weights: []int64{2, 3}
}).Result()

// EVAL "return {KEYS[1],ARGV[1]}" 1 "key" "hello"
vals, err := rdb.Eval(ctx, "return {KEYS[1],ARGV[1]}", []string{"key"}, "hello").Result()

// custom command
res, err := rdb.Do(ctx, "set", "key", "value").Result()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Run the test&lt;/h2&gt; 
&lt;p&gt;Recommended to use Docker, just need to run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;See also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://bun.uptrace.dev"&gt;Golang ORM&lt;/a&gt; for PostgreSQL, MySQL, MSSQL, and SQLite&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bun.uptrace.dev/postgres/"&gt;Golang PostgreSQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bunrouter.uptrace.dev/"&gt;Golang HTTP router&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uptrace/go-clickhouse"&gt;Golang ClickHouse ORM&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The go-redis project was originally initiated by &lt;span&gt;⭐&lt;/span&gt; &lt;a href="https://github.com/uptrace/uptrace"&gt;&lt;strong&gt;uptrace/uptrace&lt;/strong&gt;&lt;/a&gt;. Uptrace is an open-source APM tool that supports distributed tracing, metrics, and logs. You can use it to monitor applications and set up automatic alerts to receive notifications via email, Slack, Telegram, and others.&lt;/p&gt; 
 &lt;p&gt;See &lt;a href="https://github.com/redis/go-redis/tree/master/example/otel"&gt;OpenTelemetry&lt;/a&gt; example which demonstrates how you can use Uptrace to monitor go-redis.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Thanks to all the people who already contributed!&lt;/p&gt; 
&lt;a href="https://github.com/redis/go-redis/graphs/contributors"&gt; &lt;img src="https://contributors-img.web.app/image?repo=redis/go-redis" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>gofiber/fiber</title>
      <link>https://github.com/gofiber/fiber</link>
      <description>&lt;p&gt;⚡️ Express inspired web framework written in Go&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;a href="https://gofiber.io"&gt; 
  &lt;picture&gt; 
   &lt;source height="125" media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/gofiber/docs/master/static/img/logo-dark.svg" /&gt; 
   &lt;img height="125" alt="Fiber" src="https://raw.githubusercontent.com/gofiber/docs/master/static/img/logo.svg?sanitize=true" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://pkg.go.dev/github.com/gofiber/fiber/v3#pkg-overview"&gt; &lt;img src="https://img.shields.io/badge/%F0%9F%93%9A%20godoc-pkg-00ACD7.svg?color=00ACD7&amp;amp;style=flat-square" /&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/gofiber/fiber/v3"&gt; &lt;img src="https://img.shields.io/badge/%F0%9F%93%9D%20goreport-A%2B-75C46B?style=flat-square" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/gofiber/fiber"&gt; &lt;img alt="Codecov" src="https://img.shields.io/codecov/c/github/gofiber/fiber?token=3Cr92CwaPQ&amp;amp;style=flat-square&amp;amp;logo=codecov&amp;amp;label=codecov" /&gt; &lt;/a&gt; &lt;a href="https://github.com/gofiber/fiber/actions?query=workflow%3ATest"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/gofiber/fiber/test.yml?branch=main&amp;amp;label=%F0%9F%A7%AA%20tests&amp;amp;style=flat-square&amp;amp;color=75C46B" /&gt; &lt;/a&gt; &lt;a href="https://docs.gofiber.io"&gt; &lt;img src="https://img.shields.io/badge/%F0%9F%92%A1%20fiber-docs-00ACD7.svg?style=flat-square" /&gt; &lt;/a&gt; &lt;a href="https://gofiber.io/discord"&gt; &lt;img src="https://img.shields.io/discord/704680098577514527?style=flat-square&amp;amp;label=%F0%9F%92%AC%20discord&amp;amp;color=00ACD7" /&gt; &lt;/a&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;em&gt;&lt;b&gt;Fiber&lt;/b&gt; is an &lt;a href="https://github.com/expressjs/express"&gt;Express&lt;/a&gt; inspired &lt;b&gt;web framework&lt;/b&gt; built on top of &lt;a href="https://github.com/valyala/fasthttp"&gt;Fasthttp&lt;/a&gt;, the &lt;b&gt;fastest&lt;/b&gt; HTTP engine for &lt;a href="https://go.dev/doc/"&gt;Go&lt;/a&gt;. Designed to &lt;b&gt;ease&lt;/b&gt; things up for &lt;b&gt;fast&lt;/b&gt; development with &lt;a href="https://docs.gofiber.io/#zero-allocation"&gt;&lt;b&gt;zero memory allocation&lt;/b&gt;&lt;/a&gt; and &lt;b&gt;performance&lt;/b&gt; in mind.&lt;/em&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⚠️ &lt;strong&gt;Attention&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Fiber v3 is currently in beta and under active development. While it offers exciting new features, please note that it may not be stable for production use. We recommend sticking to the latest stable release (v2.x) for mission-critical applications. If you choose to use v3, be prepared for potential bugs and breaking changes. Always check the official documentation and release notes for updates and proceed with caution. Happy coding! 🚀&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⚙️ Installation&lt;/h2&gt; 
&lt;p&gt;Fiber requires &lt;strong&gt;Go version &lt;code&gt;1.24&lt;/code&gt; or higher&lt;/strong&gt; to run. If you need to install or upgrade Go, visit the &lt;a href="https://go.dev/dl/"&gt;official Go download page&lt;/a&gt;. To start setting up your project, create a new directory for your project and navigate into it. Then, initialize your project with Go modules by executing the following command in your terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go mod init github.com/your/repo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To learn more about Go modules and how they work, you can check out the &lt;a href="https://go.dev/blog/using-go-modules"&gt;Using Go Modules&lt;/a&gt; blog post.&lt;/p&gt; 
&lt;p&gt;After setting up your project, you can install Fiber with the &lt;code&gt;go get&lt;/code&gt; command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go get -u github.com/gofiber/fiber/v3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command fetches the Fiber package and adds it to your project's dependencies, allowing you to start building your web applications with Fiber.&lt;/p&gt; 
&lt;h2&gt;⚡️ Quickstart&lt;/h2&gt; 
&lt;p&gt;Getting started with Fiber is easy. Here's a basic example to create a simple web server that responds with "Hello, World 👋!" on the root path. This example demonstrates initializing a new Fiber app, setting up a route, and starting the server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
)

func main() {
    // Initialize a new Fiber app
    app := fiber.New()

    // Define a route for the GET method on the root path '/'
    app.Get("/", func(c fiber.Ctx) error {
        // Send a string response to the client
        return c.SendString("Hello, World 👋!")
    })

    // Start the server on port 3000
    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This simple server is easy to set up and run. It introduces the core concepts of Fiber: app initialization, route definition, and starting the server. Just run this Go program, and visit &lt;code&gt;http://localhost:3000&lt;/code&gt; in your browser to see the message.&lt;/p&gt; 
&lt;h2&gt;Zero Allocation&lt;/h2&gt; 
&lt;p&gt;Fiber is optimized for &lt;strong&gt;high-performance&lt;/strong&gt;, meaning values returned from &lt;strong&gt;fiber.Ctx&lt;/strong&gt; are &lt;strong&gt;not&lt;/strong&gt; immutable by default and &lt;strong&gt;will&lt;/strong&gt; be re-used across requests. As a rule of thumb, you &lt;strong&gt;must&lt;/strong&gt; only use context values within the handler and &lt;strong&gt;must not&lt;/strong&gt; keep any references. Once you return from the handler, any values obtained from the context will be re-used in future requests. Visit our &lt;a href="https://docs.gofiber.io/#zero-allocation"&gt;documentation&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;🤖 Benchmarks&lt;/h2&gt; 
&lt;p&gt;These tests are performed by &lt;a href="https://www.techempower.com/benchmarks/#section=data-r19&amp;amp;hw=ph&amp;amp;test=plaintext"&gt;TechEmpower&lt;/a&gt;. If you want to see all the results, please visit our &lt;a href="https://docs.gofiber.io/extra/benchmarks"&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;p float="left" align="middle"&gt; &lt;img src="https://raw.githubusercontent.com/gofiber/docs/master/static/img/plaintext.png" width="49%" /&gt; &lt;img src="https://raw.githubusercontent.com/gofiber/docs/master/static/img/json.png" width="49%" /&gt; &lt;/p&gt; 
&lt;h2&gt;🎯 Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Robust &lt;a href="https://docs.gofiber.io/guide/routing"&gt;Routing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Serve &lt;a href="https://docs.gofiber.io/api/app#static"&gt;Static Files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Extreme &lt;a href="https://docs.gofiber.io/extra/benchmarks"&gt;Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.gofiber.io/extra/benchmarks"&gt;Low Memory&lt;/a&gt; footprint&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.gofiber.io/api/ctx"&gt;API Endpoints&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.gofiber.io/category/-middleware"&gt;Middleware&lt;/a&gt; &amp;amp; &lt;a href="https://docs.gofiber.io/api/ctx#next"&gt;Next&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/koddr/welcome-to-fiber-an-express-js-styled-fastest-web-framework-written-with-on-golang-497"&gt;Rapid&lt;/a&gt; server-side programming&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofiber/template"&gt;Template Engines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofiber/contrib/tree/main/websocket"&gt;WebSocket Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofiber/contrib/tree/main/socketio"&gt;Socket.io Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofiber/recipes/tree/master/sse"&gt;Server-Sent Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.gofiber.io/api/middleware/limiter"&gt;Rate Limiter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;And much more, &lt;a href="https://docs.gofiber.io/"&gt;explore Fiber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💡 Philosophy&lt;/h2&gt; 
&lt;p&gt;New gophers that make the switch from &lt;a href="https://nodejs.org/en/about/"&gt;Node.js&lt;/a&gt; to &lt;a href="https://go.dev/doc/"&gt;Go&lt;/a&gt; are dealing with a learning curve before they can start building their web applications or microservices. Fiber, as a &lt;strong&gt;web framework&lt;/strong&gt;, was created with the idea of &lt;strong&gt;minimalism&lt;/strong&gt; and follows the &lt;strong&gt;UNIX way&lt;/strong&gt;, so that new gophers can quickly enter the world of Go with a warm and trusted welcome.&lt;/p&gt; 
&lt;p&gt;Fiber is &lt;strong&gt;inspired&lt;/strong&gt; by Express, the most popular web framework on the Internet. We combined the &lt;strong&gt;ease&lt;/strong&gt; of Express and &lt;strong&gt;raw performance&lt;/strong&gt; of Go. If you have ever implemented a web application in Node.js (&lt;em&gt;using Express or similar&lt;/em&gt;), then many methods and principles will seem &lt;strong&gt;very common&lt;/strong&gt; to you.&lt;/p&gt; 
&lt;p&gt;We &lt;strong&gt;listen&lt;/strong&gt; to our users in &lt;a href="https://github.com/gofiber/fiber/issues"&gt;issues&lt;/a&gt;, Discord &lt;a href="https://gofiber.io/discord"&gt;channel&lt;/a&gt; &lt;em&gt;and all over the Internet&lt;/em&gt; to create a &lt;strong&gt;fast&lt;/strong&gt;, &lt;strong&gt;flexible&lt;/strong&gt; and &lt;strong&gt;friendly&lt;/strong&gt; Go web framework for &lt;strong&gt;any&lt;/strong&gt; task, &lt;strong&gt;deadline&lt;/strong&gt; and developer &lt;strong&gt;skill&lt;/strong&gt;! Just like Express does in the JavaScript world.&lt;/p&gt; 
&lt;h2&gt;⚠️ Limitations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Due to Fiber's usage of unsafe, the library may not always be compatible with the latest Go version. Fiber v3 has been tested with Go version 1.24 or higher.&lt;/li&gt; 
 &lt;li&gt;Fiber does not natively expose the &lt;code&gt;net/http&lt;/code&gt; interfaces. When you need to integrate with that ecosystem, use the &lt;a href="https://docs.gofiber.io/next/middleware/adaptor/"&gt;adaptor middleware&lt;/a&gt; to bridge handlers and middlewares between Fiber and &lt;code&gt;net/http&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;net/http compatibility&lt;/h3&gt; 
&lt;p&gt;Fiber can run side by side with the standard library by using the &lt;a href="https://docs.gofiber.io/next/middleware/adaptor/"&gt;adaptor middleware&lt;/a&gt;. It converts handlers and middlewares in both directions and even lets you mount a Fiber app in a &lt;code&gt;net/http&lt;/code&gt; server.&lt;/p&gt; 
&lt;h2&gt;👀 Examples&lt;/h2&gt; 
&lt;p&gt;Listed below are some of the common examples. If you want to see more code examples, please visit our &lt;a href="https://github.com/gofiber/recipes"&gt;Recipes repository&lt;/a&gt; or visit our hosted &lt;a href="https://docs.gofiber.io"&gt;API documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;📖 &lt;a href="https://docs.gofiber.io/#basic-routing"&gt;&lt;strong&gt;Basic Routing&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "fmt"
    "log"

    "github.com/gofiber/fiber/v3"
)

func main() {
    app := fiber.New()

    // GET /api/register
    app.Get("/api/*", func(c fiber.Ctx) error {
        msg := fmt.Sprintf("✋ %s", c.Params("*"))
        return c.SendString(msg) // =&amp;gt; ✋ register
    })

    // GET /flights/LAX-SFO
    app.Get("/flights/:from-:to", func(c fiber.Ctx) error {
        msg := fmt.Sprintf("💸 From: %s, To: %s", c.Params("from"), c.Params("to"))
        return c.SendString(msg) // =&amp;gt; 💸 From: LAX, To: SFO
    })

    // GET /dictionary.txt
    app.Get("/:file.:ext", func(c fiber.Ctx) error {
        msg := fmt.Sprintf("📃 %s.%s", c.Params("file"), c.Params("ext"))
        return c.SendString(msg) // =&amp;gt; 📃 dictionary.txt
    })

    // GET /john/75
    app.Get("/:name/:age/:gender?", func(c fiber.Ctx) error {
        msg := fmt.Sprintf("👴 %s is %s years old", c.Params("name"), c.Params("age"))
        return c.SendString(msg) // =&amp;gt; 👴 john is 75 years old
    })

    // GET /john
    app.Get("/:name", func(c fiber.Ctx) error {
        msg := fmt.Sprintf("Hello, %s 👋!", c.Params("name"))
        return c.SendString(msg) // =&amp;gt; Hello john 👋!
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;📖 &lt;a href="https://docs.gofiber.io/api/app#name"&gt;&lt;strong&gt;Route Naming&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "encoding/json"
    "fmt"
    "log"

    "github.com/gofiber/fiber/v3"
)

func main() {
    app := fiber.New()

    app.Get("/api/*", func(c fiber.Ctx) error {
        msg := fmt.Sprintf("✋ %s", c.Params("*"))
        return c.SendString(msg) // =&amp;gt; ✋ register
    }).Name("api")

    route := app.GetRoute("api")

    data, _ := json.MarshalIndent(route, "", "  ")
    fmt.Println(string(data))
    // Prints:
    // {
    //    "method": "GET",
    //    "name": "api",
    //    "path": "/api/*",
    //    "params": [
    //      "*1"
    //    ]
    // }

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;📖 &lt;a href="https://docs.gofiber.io/api/app#static"&gt;&lt;strong&gt;Serving Static Files&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
    "github.com/gofiber/fiber/v3/middleware/static"
)

func main() {
    app := fiber.New()

    // Serve static files from the "./public" directory
    app.Get("/*", static.New("./public"))
    // =&amp;gt; http://localhost:3000/js/script.js
    // =&amp;gt; http://localhost:3000/css/style.css

    app.Get("/prefix*", static.New("./public"))
    // =&amp;gt; http://localhost:3000/prefix/js/script.js
    // =&amp;gt; http://localhost:3000/prefix/css/style.css

    // Serve a single file for any unmatched routes
    app.Get("*", static.New("./public/index.html"))
    // =&amp;gt; http://localhost:3000/any/path/shows/index.html

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;📖 &lt;a href="https://docs.gofiber.io/api/ctx#next"&gt;&lt;strong&gt;Middleware &amp;amp; Next&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "fmt"
    "log"

    "github.com/gofiber/fiber/v3"
)

func main() {
    app := fiber.New()

    // Middleware that matches any route
    app.Use(func(c fiber.Ctx) error {
        fmt.Println("🥇 First handler")
        return c.Next()
    })

    // Middleware that matches all routes starting with /api
    app.Use("/api", func(c fiber.Ctx) error {
        fmt.Println("🥈 Second handler")
        return c.Next()
    })

    // GET /api/list
    app.Get("/api/list", func(c fiber.Ctx) error {
        fmt.Println("🥉 Last handler")
        return c.SendString("Hello, World 👋!")
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;📚 Show more code examples&lt;/summary&gt; 
 &lt;h3&gt;Views Engines&lt;/h3&gt; 
 &lt;p&gt;📖 &lt;a href="https://docs.gofiber.io/api/fiber#config"&gt;Config&lt;/a&gt; 📖 &lt;a href="https://github.com/gofiber/template"&gt;Engines&lt;/a&gt; 📖 &lt;a href="https://docs.gofiber.io/api/ctx#render"&gt;Render&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Fiber defaults to the &lt;a href="https://pkg.go.dev/html/template/"&gt;html/template&lt;/a&gt; when no view engine is set.&lt;/p&gt; 
 &lt;p&gt;If you want to execute partials or use a different engine like &lt;a href="https://github.com/eknkc/amber"&gt;amber&lt;/a&gt;, &lt;a href="https://github.com/aymerick/raymond"&gt;handlebars&lt;/a&gt;, &lt;a href="https://github.com/cbroglie/mustache"&gt;mustache&lt;/a&gt;, or &lt;a href="https://github.com/Joker/jade"&gt;pug&lt;/a&gt;, etc., check out our &lt;a href="https://github.com/gofiber/template"&gt;Template&lt;/a&gt; package that supports multiple view engines.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
    "github.com/gofiber/template/pug"
)

func main() {
    // Initialize a new Fiber app with Pug template engine
    app := fiber.New(fiber.Config{
        Views: pug.New("./views", ".pug"),
    })

    // Define a route that renders the "home.pug" template
    app.Get("/", func(c fiber.Ctx) error {
        return c.Render("home", fiber.Map{
            "title": "Homepage",
            "year":  1999,
        })
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Grouping Routes into Chains&lt;/h3&gt; 
 &lt;p&gt;📖 &lt;a href="https://docs.gofiber.io/api/app#group"&gt;Group&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
)

func middleware(c fiber.Ctx) error {
    log.Println("Middleware executed")
    return c.Next()
}

func handler(c fiber.Ctx) error {
    return c.SendString("Handler response")
}

func main() {
    app := fiber.New()

    // Root API group with middleware
    api := app.Group("/api", middleware) // /api

    // API v1 routes
    v1 := api.Group("/v1", middleware) // /api/v1
    v1.Get("/list", handler)           // /api/v1/list
    v1.Get("/user", handler)           // /api/v1/user

    // API v2 routes
    v2 := api.Group("/v2", middleware) // /api/v2
    v2.Get("/list", handler)           // /api/v2/list
    v2.Get("/user", handler)           // /api/v2/user

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Middleware Logger&lt;/h3&gt; 
 &lt;p&gt;📖 &lt;a href="https://docs.gofiber.io/api/middleware/logger"&gt;Logger&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
    "github.com/gofiber/fiber/v3/middleware/logger"
)

func main() {
    app := fiber.New()

    // Use Logger middleware
    app.Use(logger.New())

    // Define routes
    app.Get("/", func(c fiber.Ctx) error {
        return c.SendString("Hello, Logger!")
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Cross-Origin Resource Sharing (CORS)&lt;/h3&gt; 
 &lt;p&gt;📖 &lt;a href="https://docs.gofiber.io/api/middleware/cors"&gt;CORS&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
    "github.com/gofiber/fiber/v3/middleware/cors"
)

func main() {
    app := fiber.New()

    // Use CORS middleware with default settings
    app.Use(cors.New())

    // Define routes
    app.Get("/", func(c fiber.Ctx) error {
        return c.SendString("CORS enabled!")
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Check CORS by passing any domain in &lt;code&gt;Origin&lt;/code&gt; header:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;curl -H "Origin: http://example.com" --verbose http://localhost:3000
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Custom 404 Response&lt;/h3&gt; 
 &lt;p&gt;📖 &lt;a href="https://docs.gofiber.io/api/ctx#status"&gt;HTTP Methods&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
)

func main() {
    app := fiber.New()

    // Define routes
    app.Get("/", static.New("./public"))

    app.Get("/demo", func(c fiber.Ctx) error {
        return c.SendString("This is a demo page!")
    })

    app.Post("/register", func(c fiber.Ctx) error {
        return c.SendString("Registration successful!")
    })

    // Middleware to handle 404 Not Found
    app.Use(func(c fiber.Ctx) error {
        return c.SendStatus(fiber.StatusNotFound) // =&amp;gt; 404 "Not Found"
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;JSON Response&lt;/h3&gt; 
 &lt;p&gt;📖 &lt;a href="https://docs.gofiber.io/api/ctx#json"&gt;JSON&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
)

type User struct {
    Name string `json:"name"`
    Age  int    `json:"age"`
}

func main() {
    app := fiber.New()

    // Route that returns a JSON object
    app.Get("/user", func(c fiber.Ctx) error {
        return c.JSON(&amp;amp;User{"John", 20})
        // =&amp;gt; {"name":"John", "age":20}
    })

    // Route that returns a JSON map
    app.Get("/json", func(c fiber.Ctx) error {
        return c.JSON(fiber.Map{
            "success": true,
            "message": "Hi John!",
        })
        // =&amp;gt; {"success":true, "message":"Hi John!"}
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;WebSocket Upgrade&lt;/h3&gt; 
 &lt;p&gt;📖 &lt;a href="https://github.com/gofiber/websocket"&gt;Websocket&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
    "github.com/gofiber/fiber/v3/middleware/websocket"
)

func main() {
    app := fiber.New()

    // WebSocket route
    app.Get("/ws", websocket.New(func(c *websocket.Conn) {
        defer c.Close()
        for {
            // Read message from client
            mt, msg, err := c.ReadMessage()
            if err != nil {
                log.Println("read:", err)
                break
            }
            log.Printf("recv: %s", msg)

            // Write message back to client
            err = c.WriteMessage(mt, msg)
            if err != nil {
                log.Println("write:", err)
                break
            }
        }
    }))

    log.Fatal(app.Listen(":3000"))
    // Connect via WebSocket at ws://localhost:3000/ws
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Server-Sent Events&lt;/h3&gt; 
 &lt;p&gt;📖 &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events"&gt;More Info&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "bufio"
    "fmt"
    "log"
    "time"

    "github.com/gofiber/fiber/v3"
    "github.com/valyala/fasthttp"
)

func main() {
    app := fiber.New()

    // Server-Sent Events route
    app.Get("/sse", func(c fiber.Ctx) error {
        c.Set("Content-Type", "text/event-stream")
        c.Set("Cache-Control", "no-cache")
        c.Set("Connection", "keep-alive")
        c.Set("Transfer-Encoding", "chunked")

        c.Context().SetBodyStreamWriter(func(w *bufio.Writer) {
            var i int
            for {
                i++
                msg := fmt.Sprintf("%d - the time is %v", i, time.Now())
                fmt.Fprintf(w, "data: Message: %s\n\n", msg)
                fmt.Println(msg)

                w.Flush()
                time.Sleep(5 * time.Second)
            }
        })

        return nil
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Recover Middleware&lt;/h3&gt; 
 &lt;p&gt;📖 &lt;a href="https://docs.gofiber.io/api/middleware/recover"&gt;Recover&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
    "github.com/gofiber/fiber/v3/middleware/recover"
)

func main() {
    app := fiber.New()

    // Use Recover middleware to handle panics gracefully
    app.Use(recover.New())

    // Route that intentionally panics
    app.Get("/", func(c fiber.Ctx) error {
        panic("normally this would crash your app")
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Using Trusted Proxy&lt;/h3&gt; 
 &lt;p&gt;📖 &lt;a href="https://docs.gofiber.io/api/fiber#config"&gt;Config&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "log"

    "github.com/gofiber/fiber/v3"
)

func main() {
    app := fiber.New(fiber.Config{
        // Configure trusted proxies - WARNING: Only trust proxies you control
        // Using TrustProxy: true with unrestricted IPs can lead to IP spoofing
        TrustProxy: true,
        TrustProxyConfig: fiber.TrustProxyConfig{
            Proxies: []string{"10.0.0.0/8", "172.16.0.0/12"}, // Example: Internal network ranges only
        },
        ProxyHeader: fiber.HeaderXForwardedFor,
    })

    // Define routes
    app.Get("/", func(c fiber.Ctx) error {
        return c.SendString("Trusted Proxy Configured!")
    })

    log.Fatal(app.Listen(":3000"))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;🧬 Internal Middleware&lt;/h2&gt; 
&lt;p&gt;Here is a list of middleware that are included within the Fiber framework.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Middleware&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/adaptor"&gt;adaptor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Converter for net/http handlers to/from Fiber request handlers.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/basicauth"&gt;basicauth&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Provides HTTP basic authentication. It calls the next handler for valid credentials and 401 Unauthorized for missing or invalid credentials.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/cache"&gt;cache&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Intercept and cache HTTP responses.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/compress"&gt;compress&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Compression middleware for Fiber, with support for &lt;code&gt;deflate&lt;/code&gt;, &lt;code&gt;gzip&lt;/code&gt;, &lt;code&gt;brotli&lt;/code&gt; and &lt;code&gt;zstd&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/cors"&gt;cors&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Enable cross-origin resource sharing (CORS) with various options.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/csrf"&gt;csrf&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Protect from CSRF exploits.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/earlydata"&gt;earlydata&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Adds support for TLS 1.3's early data ("0-RTT") feature.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/encryptcookie"&gt;encryptcookie&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Encrypt middleware which encrypts cookie values.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/envvar"&gt;envvar&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Expose environment variables with providing an optional config.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/etag"&gt;etag&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Allows for caches to be more efficient and save bandwidth, as a web server does not need to resend a full response if the content has not changed.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/expvar"&gt;expvar&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Serves via its HTTP server runtime exposed variables in the JSON format.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/favicon"&gt;favicon&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Ignore favicon from logs or serve from memory if a file path is provided.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/healthcheck"&gt;healthcheck&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Liveness and Readiness probes for Fiber.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/helmet"&gt;helmet&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Helps secure your apps by setting various HTTP headers.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/idempotency"&gt;idempotency&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Allows for fault-tolerant APIs where duplicate requests do not erroneously cause the same action performed multiple times on the server-side.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/keyauth"&gt;keyauth&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Adds support for key based authentication.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/limiter"&gt;limiter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Adds Rate-limiting support to Fiber. Use to limit repeated requests to public APIs and/or endpoints such as password reset.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/logger"&gt;logger&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;HTTP request/response logger.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/pprof"&gt;pprof&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Serves runtime profiling data in pprof format.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/proxy"&gt;proxy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Allows you to proxy requests to multiple servers.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/recover"&gt;recover&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Recovers from panics anywhere in the stack chain and handles the control to the centralized ErrorHandler.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/redirect"&gt;redirect&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Redirect middleware.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/requestid"&gt;requestid&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Adds a request ID to every request.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/rewrite"&gt;rewrite&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Rewrites the URL path based on provided rules. It can be helpful for backward compatibility or just creating cleaner and more descriptive links.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/session"&gt;session&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Session middleware. NOTE: This middleware uses our Storage package.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/skip"&gt;skip&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Skip middleware that skips a wrapped handler if a predicate is true.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/static"&gt;static&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Static middleware for Fiber that serves static files such as &lt;strong&gt;images&lt;/strong&gt;, &lt;strong&gt;CSS&lt;/strong&gt;, and &lt;strong&gt;JavaScript&lt;/strong&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gofiber/fiber/tree/main/middleware/timeout"&gt;timeout&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Adds a max time for a request and forwards to ErrorHandler if it is exceeded.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🧬 External Middleware&lt;/h2&gt; 
&lt;p&gt;List of externally hosted middleware modules and maintained by the &lt;a href="https://github.com/orgs/gofiber/people"&gt;Fiber team&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Middleware&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/gofiber/contrib"&gt;contrib&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Third-party middlewares&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/gofiber/storage"&gt;storage&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Premade storage drivers that implement the Storage interface, designed to be used with various Fiber middlewares.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/gofiber/template"&gt;template&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;This package contains 9 template engines that can be used with Fiber.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🕶️ Awesome List&lt;/h2&gt; 
&lt;p&gt;For more articles, middlewares, examples, or tools, check our &lt;a href="https://github.com/gofiber/awesome-fiber"&gt;awesome list&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;👍 Contribute&lt;/h2&gt; 
&lt;p&gt;If you want to say &lt;strong&gt;Thank You&lt;/strong&gt; and/or support the active development of &lt;code&gt;Fiber&lt;/code&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Add a &lt;a href="https://github.com/gofiber/fiber/stargazers"&gt;GitHub Star&lt;/a&gt; to the project.&lt;/li&gt; 
 &lt;li&gt;Tweet about the project &lt;a href="https://x.com/intent/tweet?text=Fiber%20is%20an%20Express%20inspired%20%23web%20%23framework%20built%20on%20top%20of%20Fasthttp%2C%20the%20fastest%20HTTP%20engine%20for%20%23Go.%20Designed%20to%20ease%20things%20up%20for%20%23fast%20development%20with%20zero%20memory%20allocation%20and%20%23performance%20in%20mind%20%F0%9F%9A%80%20https%3A%2F%2Fgithub.com%2Fgofiber%2Ffiber"&gt;on your 𝕏 (Twitter)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Write a review or tutorial on &lt;a href="https://medium.com/"&gt;Medium&lt;/a&gt;, &lt;a href="https://dev.to/"&gt;Dev.to&lt;/a&gt; or your personal blog.&lt;/li&gt; 
 &lt;li&gt;Support the project by donating a &lt;a href="https://buymeacoff.ee/fenny"&gt;cup of coffee&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;💻 Development&lt;/h2&gt; 
&lt;p&gt;To ensure your contributions are ready for a Pull Request, please use the following &lt;code&gt;Makefile&lt;/code&gt; commands. These tools help maintain code quality and consistency.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;make help&lt;/strong&gt;: Display available commands.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;make audit&lt;/strong&gt;: Conduct quality checks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;make benchmark&lt;/strong&gt;: Benchmark code performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;make coverage&lt;/strong&gt;: Generate test coverage report.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;make format&lt;/strong&gt;: Automatically format code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;make lint&lt;/strong&gt;: Run lint checks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;make test&lt;/strong&gt;: Execute all tests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;make tidy&lt;/strong&gt;: Tidy dependencies.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Run these commands to ensure your code adheres to project standards and best practices.&lt;/p&gt; 
&lt;h2&gt;☕ Supporters&lt;/h2&gt; 
&lt;p&gt;Fiber is an open-source project that runs on donations to pay the bills, e.g., our domain name, GitBook, Netlify, and serverless hosting. If you want to support Fiber, you can ☕ &lt;a href="https://buymeacoff.ee/fenny"&gt;&lt;strong&gt;buy a coffee here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;User&lt;/th&gt; 
   &lt;th&gt;Donation&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/204341?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/destari"&gt;@destari&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 10&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/63164982?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/dembygenesis"&gt;@dembygenesis&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/56607882?s=25" alt="thomasvvugt" style="width: 25px; height: 25px;" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/thomasvvugt"&gt;@thomasvvugt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/27820675?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/hendratommy"&gt;@hendratommy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/1094221?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ekaputra07"&gt;@ekaputra07&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/194590?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jorgefuertes"&gt;@jorgefuertes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/186637?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/candidosales"&gt;@candidosales&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/29659953?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/l0nax"&gt;@l0nax&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/635852?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/bihe"&gt;@bihe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/307334?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/justdave"&gt;@justdave&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/11155743?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/koddr"&gt;@koddr&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/29042462?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/lapolinar"&gt;@lapolinar&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/2978730?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/diegowifi"&gt;@diegowifi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/44171355?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ssimk0"&gt;@ssimk0&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/5638101?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/raymayemir"&gt;@raymayemir&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/619996?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/melkorm"&gt;@melkorm&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/31022056?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/marvinjwendt"&gt;@marvinjwendt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/31921460?s=25" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/toishy"&gt;@toishy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;☕ x 1&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;💻 Code Contributors&lt;/h2&gt; 
&lt;img src="https://opencollective.com/fiber/contributors.svg?width=890&amp;amp;button=false" alt="Code Contributors" style="max-width:100%;" /&gt; 
&lt;h2&gt;⭐️ Stargazers&lt;/h2&gt; 
&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=gofiber/fiber&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
 &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=gofiber/fiber&amp;amp;type=Date" /&gt; 
 &lt;img src="https://api.star-history.com/svg?repos=gofiber/fiber&amp;amp;type=Date" /&gt; 
&lt;/picture&gt; 
&lt;h2&gt;🧾 License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2019-present &lt;a href="https://github.com/fenny"&gt;Fenny&lt;/a&gt; and &lt;a href="https://github.com/gofiber/fiber/graphs/contributors"&gt;Contributors&lt;/a&gt;. &lt;code&gt;Fiber&lt;/code&gt; is free and open-source software licensed under the &lt;a href="https://github.com/gofiber/fiber/raw/main/LICENSE"&gt;MIT License&lt;/a&gt;. Official logo was created by &lt;a href="https://github.com/koddr"&gt;Vic Shóstak&lt;/a&gt; and distributed under &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt;Creative Commons&lt;/a&gt; license (CC BY-SA 4.0 International).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>avelino/awesome-go</title>
      <link>https://github.com/avelino/awesome-go</link>
      <description>&lt;p&gt;A curated list of awesome Go frameworks, libraries and software&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome Go&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://awesome-go.com/"&gt;&lt;img align="right" src="https://github.com/avelino/awesome-go/raw/main/tmpl/assets/logo.png" alt="awesome-go" title="awesome-go" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/avelino/awesome-go/actions/workflows/tests.yaml?query=branch%3Amain"&gt;&lt;img src="https://github.com/avelino/awesome-go/actions/workflows/tests.yaml/badge.svg?branch=main" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true" alt="Awesome" /&gt;&lt;/a&gt; &lt;a href="https://gophers.slack.com/messages/awesome"&gt;&lt;img src="https://img.shields.io/badge/join-us%20on%20slack-gray.svg?longCache=true&amp;amp;logo=slack&amp;amp;colorB=red" alt="Slack Widget" /&gt;&lt;/a&gt; &lt;a href="https://app.netlify.com/sites/awesome-go/deploys"&gt;&lt;img src="https://api.netlify.com/api/v1/badges/83a6dcbe-0da6-433e-b586-f68109286bd5/deploy-status" alt="Netlify Status" /&gt;&lt;/a&gt; &lt;a href="https://www.trackawesomelist.com/avelino/awesome-go/"&gt;&lt;img src="https://www.trackawesomelist.com/badge.svg?sanitize=true" alt="Track Awesome List" /&gt;&lt;/a&gt; &lt;a href="https://github.com/avelino/awesome-go/commits/main"&gt;&lt;img src="https://img.shields.io/github/last-commit/avelino/awesome-go" alt="Last Commit" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We use the &lt;em&gt;&lt;a href="https://github.com/gobridge/about-us/raw/master/README.md"&gt;Golang Bridge&lt;/a&gt;&lt;/em&gt; community Slack for instant communication, follow the &lt;a href="https://invite.slack.golangbridge.org/"&gt;form here to join&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/awesome-go?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-awesome-go" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=291535&amp;amp;theme=light" alt="awesome-go - Curated list awesome Go frameworks, libraries and software | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Sponsorships:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Special thanks to&lt;/em&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;table cellpadding="5"&gt; 
  &lt;tbody align="center"&gt; 
   &lt;tr&gt; 
    &lt;td colspan="2"&gt; &lt;a href="https://bit.ly/awesome-go-workos"&gt; &lt;img src="https://avelino.run/sponsors/workos-logo-white-bg.svg?sanitize=true" width="200" alt="WorkOS" /&gt;&lt;br /&gt; &lt;b&gt;Your app, enterprise-ready.&lt;/b&gt;&lt;br /&gt; &lt;sub&gt;Start selling to enterprise customers with just a few lines of code.&lt;/sub&gt;&lt;br /&gt; &lt;sup&gt;Add Single Sign-On (and more) in minutes instead of months.&lt;/sup&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="2"&gt; &lt;a href="https://bit.ly/awesome-go-digitalocean"&gt; &lt;img src="https://avelino.run/sponsors/do_logo_horizontal_blue-210.png" width="200" alt="Digital Ocean" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;Awesome Go has no monthly fee&lt;/strong&gt;&lt;em&gt;, but we have employees who &lt;strong&gt;work hard&lt;/strong&gt; to keep it running. With money raised, we can repay the effort of each person involved! You can see how we calculate our billing and distribution as it is open to the entire community. Want to be a supporter of the project click &lt;a href="mailto:avelinorun+oss@gmail.com?subject=awesome-go%3A%20project%20support"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A curated list of awesome Go frameworks, libraries, and software. Inspired by &lt;a href="https://github.com/vinta/awesome-python"&gt;awesome-python&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Contributing:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Please take a quick gander at the &lt;a href="https://github.com/avelino/awesome-go/raw/main/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; first. Thanks to all &lt;a href="https://github.com/avelino/awesome-go/graphs/contributors"&gt;contributors&lt;/a&gt;; you rock!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;If you see a package or project here that is no longer maintained or is not a good fit, please submit a pull request to improve this file. Thank you!&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#awesome-go"&gt;Awesome Go&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;Contents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#actor-model"&gt;Actor Model&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#artificial-intelligence"&gt;Artificial Intelligence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#audio-and-music"&gt;Audio and Music&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#authentication-and-authorization"&gt;Authentication and Authorization&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#blockchain"&gt;Blockchain&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#bot-building"&gt;Bot Building&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#build-automation"&gt;Build Automation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#command-line"&gt;Command Line&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#advanced-console-uis"&gt;Advanced Console UIs&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#standard-cli"&gt;Standard CLI&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#continuous-integration"&gt;Continuous Integration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#css-preprocessors"&gt;CSS Preprocessors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#data-integration-frameworks"&gt;Data Integration Frameworks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#data-structures-and-algorithms"&gt;Data Structures and Algorithms&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#bit-packing-and-compression"&gt;Bit-packing and Compression&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#bit-sets"&gt;Bit Sets&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#bloom-and-cuckoo-filters"&gt;Bloom and Cuckoo Filters&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#data-structure-and-algorithm-collections"&gt;Data Structure and Algorithm Collections&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#iterators"&gt;Iterators&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#maps"&gt;Maps&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#miscellaneous-data-structures-and-algorithms"&gt;Miscellaneous Data Structures and Algorithms&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#nullable-types"&gt;Nullable Types&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#queues"&gt;Queues&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#sets"&gt;Sets&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#text-analysis"&gt;Text Analysis&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#trees"&gt;Trees&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#pipes"&gt;Pipes&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#database"&gt;Database&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#caches"&gt;Caches&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#databases-implemented-in-go"&gt;Databases Implemented in Go&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#database-schema-migration"&gt;Database Schema Migration&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#database-tools"&gt;Database Tools&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#sql-query-builders"&gt;SQL Query Builders&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#database-drivers"&gt;Database Drivers&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#interfaces-to-multiple-backends"&gt;Interfaces to Multiple Backends&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#relational-database-drivers"&gt;Relational Database Drivers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#nosql-database-drivers"&gt;NoSQL Database Drivers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#search-and-analytic-databases"&gt;Search and Analytic Databases&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#date-and-time"&gt;Date and Time&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#distributed-systems"&gt;Distributed Systems&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#dynamic-dns"&gt;Dynamic DNS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#email"&gt;Email&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#embeddable-scripting-languages"&gt;Embeddable Scripting Languages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#error-handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#file-handling"&gt;File Handling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#financial"&gt;Financial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#forms"&gt;Forms&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#functional"&gt;Functional&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#game-development"&gt;Game Development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#generators"&gt;Generators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#geographic"&gt;Geographic&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#go-compilers"&gt;Go Compilers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#goroutines"&gt;Goroutines&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#gui"&gt;GUI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#hardware"&gt;Hardware&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#images"&gt;Images&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#iot-internet-of-things"&gt;IoT (Internet of Things)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#job-scheduler"&gt;Job Scheduler&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#json"&gt;JSON&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#logging"&gt;Logging&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#machine-learning"&gt;Machine Learning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#messaging"&gt;Messaging&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#microsoft-office"&gt;Microsoft Office&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#microsoft-excel"&gt;Microsoft Excel&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#microsoft-word"&gt;Microsoft Word&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#miscellaneous"&gt;Miscellaneous&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#dependency-injection"&gt;Dependency Injection&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#project-layout"&gt;Project Layout&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#strings"&gt;Strings&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#uncategorized"&gt;Uncategorized&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#natural-language-processing"&gt;Natural Language Processing&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#language-detection"&gt;Language Detection&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#morphological-analyzers"&gt;Morphological Analyzers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#slugifiers"&gt;Slugifiers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#tokenizers"&gt;Tokenizers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#translation"&gt;Translation&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#transliteration"&gt;Transliteration&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#networking"&gt;Networking&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#http-clients"&gt;HTTP Clients&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#opengl"&gt;OpenGL&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#orm"&gt;ORM&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#package-management"&gt;Package Management&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#performance"&gt;Performance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#query-language"&gt;Query Language&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#reflection"&gt;Reflection&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#resource-embedding"&gt;Resource Embedding&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#science-and-data-analysis"&gt;Science and Data Analysis&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#security"&gt;Security&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#serialization"&gt;Serialization&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#server-applications"&gt;Server Applications&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#stream-processing"&gt;Stream Processing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#template-engines"&gt;Template Engines&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#testing"&gt;Testing&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#testing-frameworks"&gt;Testing Frameworks&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#mock"&gt;Mock&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#fuzzing-and-delta-debuggingreducingshrinking"&gt;Fuzzing and delta-debugging/reducing/shrinking&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#selenium-and-browser-control-tools"&gt;Selenium and browser control tools&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#fail-injection"&gt;Fail injection&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#text-processing"&gt;Text Processing&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#formatters"&gt;Formatters&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#markup-languages"&gt;Markup Languages&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#parsersencodersdecoders"&gt;Parsers/Encoders/Decoders&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#regular-expressions"&gt;Regular Expressions&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#sanitation"&gt;Sanitation&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#scrapers"&gt;Scrapers&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#rss"&gt;RSS&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#utilitymiscellaneous"&gt;Utility/Miscellaneous&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#third-party-apis"&gt;Third-party APIs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#utilities"&gt;Utilities&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#uuid"&gt;UUID&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#validation"&gt;Validation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#version-control"&gt;Version Control&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#video"&gt;Video&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#web-frameworks"&gt;Web Frameworks&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#middlewares"&gt;Middlewares&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#actual-middlewares"&gt;Actual middlewares&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#libraries-for-creating-http-middlewares"&gt;Libraries for creating HTTP middlewares&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#routers"&gt;Routers&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#webassembly"&gt;WebAssembly&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#webhooks-server"&gt;Webhooks Server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#windows"&gt;Windows&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#workflow-frameworks"&gt;Workflow Frameworks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#xml"&gt;XML&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#zero-trust"&gt;Zero Trust&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#code-analysis"&gt;Code Analysis&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#editor-plugins"&gt;Editor Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#go-generate-tools"&gt;Go Generate Tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#go-tools"&gt;Go Tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#software-packages"&gt;Software Packages&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#devops-tools"&gt;DevOps Tools&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#other-software"&gt;Other Software&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#resources"&gt;Resources&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#benchmarks"&gt;Benchmarks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#conferences"&gt;Conferences&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#e-books"&gt;E-Books&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#e-books-for-purchase"&gt;E-books for purchase&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#free-e-books"&gt;Free e-books&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#gophers"&gt;Gophers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#meetups"&gt;Meetups&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#style-guides"&gt;Style Guides&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#social-media"&gt;Social Media&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#twitter"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#reddit"&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#websites"&gt;Websites&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#tutorials"&gt;Tutorials&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#guided-learning"&gt;Guided Learning&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Actor Model&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for building actor-based programs.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ergo-services/ergo"&gt;Ergo&lt;/a&gt; - An actor-based Framework with network transparency for creating event-driven architecture in Golang. Inspired by Erlang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Tochemey/goakt"&gt;Goakt&lt;/a&gt; - Fast and Distributed Actor framework using protocol buffers as message for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anthdm/hollywood"&gt;Hollywood&lt;/a&gt; - Blazingly fast and light-weight Actor engine written in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asynkron/protoactor-go"&gt;ProtoActor&lt;/a&gt; - Proto Actor - Ultra fast distributed actors for Go, C# and Java/Kotlin.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Artificial Intelligence&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for building programs that leverage AI.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philippgille/chromem-go"&gt;chromem-go&lt;/a&gt; - Embeddable vector database for Go with Chroma-like interface and zero third-party dependencies. In-memory with optional persistence.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/tozd/go/fun"&gt;fun&lt;/a&gt; - The simplest but powerful way to use large language models (LLMs) in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tmc/langchaingo"&gt;langchaingo&lt;/a&gt; - LangChainGo is a framework for developing applications powered by language models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mudler/LocalAI"&gt;LocalAI&lt;/a&gt; - Open Source OpenAI alternative, self-host AI models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmorganca/ollama"&gt;Ollama&lt;/a&gt; - Run large language models locally.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/presbrey/ollamafarm"&gt;OllamaFarm&lt;/a&gt; - Manage, load-balance, and failover packs of Ollamas.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Audio and Music&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for manipulating audio.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mewkiz/flac"&gt;flac&lt;/a&gt; - Native Go FLAC encoder/decoder with support for FLAC streams.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Comcast/gaad"&gt;gaad&lt;/a&gt; - Native Go AAC bitstream parser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DylanMeeus/GoAudio"&gt;GoAudio&lt;/a&gt; - Native Go Audio Processing Library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dh1tw/gosamplerate"&gt;gosamplerate&lt;/a&gt; - libsamplerate bindings for go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bogem/id3v2"&gt;id3v2&lt;/a&gt; - ID3 decoding and encoding library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gen2brain/malgo"&gt;malgo&lt;/a&gt; - Mini audio library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tosone/minimp3"&gt;minimp3&lt;/a&gt; - Lightweight MP3 decoder library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hajimehoshi/oto"&gt;Oto&lt;/a&gt; - A low-level library to play sound on multiple platforms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gordonklaus/portaudio"&gt;PortAudio&lt;/a&gt; - Go bindings for the PortAudio audio I/O library.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Authentication and Authorization&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for implementing authentication and authorization.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volatiletech/authboss"&gt;authboss&lt;/a&gt; - Modular authentication system for the web. It tries to remove as much boilerplate and "hard things" as possible so that each time you start a new web project in Go, you can plug it in, configure it, and start building your app without having to build an authentication system each time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/essentialkaos/branca"&gt;branca&lt;/a&gt; - branca token &lt;a href="https://github.com/tuupola/branca-spec"&gt;specification implementation&lt;/a&gt; for Golang 1.15+.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hsluoyz/casbin"&gt;casbin&lt;/a&gt; - Authorization library that supports access control models like ACL, RBAC, and ABAC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mengzhuo/cookiestxt"&gt;cookiestxt&lt;/a&gt; - provides a parser of cookies.txt file format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shaj13/go-guardian"&gt;go-guardian&lt;/a&gt; - Go-Guardian is a golang library that provides a simple, clean, and idiomatic way to create powerful modern API and web authentication that supports LDAP, Basic, Bearer token, and Certificate based authentication.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-jose/go-jose"&gt;go-jose&lt;/a&gt; - Fairly complete implementation of the JOSE working group's JSON Web Token, JSON Web Signatures, and JSON Web Encryption specs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leodip/goiabada"&gt;goiabada&lt;/a&gt; - An open-source authentication and authorization server supporting OAuth2 and OpenID Connect.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dghubble/gologin"&gt;gologin&lt;/a&gt; - chainable handlers for login with OAuth1 and OAuth2 authentication providers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mikespook/gorbac"&gt;gorbac&lt;/a&gt; - provides a lightweight role-based access control (RBAC) implementation in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kwynto/gosession"&gt;gosession&lt;/a&gt; - This is quick session for net/http in GoLang. This package is perhaps the best implementation of the session mechanism, or at least it tries to become one.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/markbates/goth"&gt;goth&lt;/a&gt; - provides a simple, clean, and idiomatic way to use OAuth and OAuth2. Handles multiple providers out of the box.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abraithwaite/jeff"&gt;jeff&lt;/a&gt; - Simple, flexible, secure, and idiomatic web session management with pluggable backends.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pascaldekloe/jwt"&gt;jwt&lt;/a&gt; - Lightweight JSON Web Token (JWT) library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cristalhq/jwt"&gt;jwt&lt;/a&gt; - Safe, simple, and fast JSON Web Tokens for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adam-hanna/jwt-auth"&gt;jwt-auth&lt;/a&gt; - JWT middleware for Golang http servers with many configuration options.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang-jwt/jwt"&gt;jwt-go&lt;/a&gt; - A full featured implementation of JSON Web Tokens (JWT). This library supports the parsing and verification as well as the generation and signing of JWTs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lestrrat-go/jwx"&gt;jwx&lt;/a&gt; - Go module implementing various JWx (JWA/JWE/JWK/JWS/JWT, otherwise known as JOSE) technologies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ory/keto"&gt;keto&lt;/a&gt; - Open Source (Go) implementation of "Zanzibar: Google's Consistent, Global Authorization System". Ships gRPC, REST APIs, newSQL, and an easy and granular permission language. Supports ACL, RBAC, and other access models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tarent/loginsrv"&gt;loginsrv&lt;/a&gt; - JWT login microservice with pluggable backends such as OAuth2 (Github), htpasswd, osiam.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang/oauth2"&gt;oauth2&lt;/a&gt; - Successor of goauth2. Generic OAuth 2.0 package that comes with JWT, Google APIs, Compute Engine, and App Engine support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zitadel/oidc"&gt;oidc&lt;/a&gt; - Easy to use OpenID Connect client and server library written for Go and certified by the OpenID Foundation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openfga/openfga"&gt;openfga&lt;/a&gt; - Implementation of fine-grained authorization based on the "Zanzibar: Google's Consistent, Global Authorization System" paper. Backed by &lt;a href="https://www.cncf.io/"&gt;CNCF&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openshift/osin"&gt;osin&lt;/a&gt; - Golang OAuth2 server library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/grijul/otpgen"&gt;otpgen&lt;/a&gt; - Library to generate TOTP/HOTP codes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jltorresm/otpgo"&gt;otpgo&lt;/a&gt; - Time-Based One-Time Password (TOTP) and HMAC-Based One-Time Password (HOTP) library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/o1egl/paseto"&gt;paseto&lt;/a&gt; - Golang implementation of Platform-Agnostic Security Tokens (PASETO).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyproto/permissions"&gt;permissions&lt;/a&gt; - Library for keeping track of users, login states, and permissions. Uses secure cookies and bcrypt.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SonicRoshan/scope"&gt;scope&lt;/a&gt; - Easily Manage OAuth2 Scopes In Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexedwards/scs"&gt;scs&lt;/a&gt; - Session Manager for HTTP servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chmike/securecookie"&gt;securecookie&lt;/a&gt; - Efficient secure cookie encoding/decoding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/icza/session"&gt;session&lt;/a&gt; - Go session management for web servers (including support for Google App Engine - GAE).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adam-hanna/sessions"&gt;sessions&lt;/a&gt; - Dead simple, highly performant, highly customizable sessions service for go http servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/swithek/sessionup"&gt;sessionup&lt;/a&gt; - Simple, yet effective HTTP session management and identification package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brianvoe/sjwt"&gt;sjwt&lt;/a&gt; - Simple jwt generator and parser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/authzed/spicedb"&gt;spicedb&lt;/a&gt; - A Zanzibar-inspired database that enables fine-grained authorization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vkuznet/x509proxy"&gt;x509proxy&lt;/a&gt; - Library to handle X509 proxy certificates.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Blockchain&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools for building blockchains.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cometbft/cometbft"&gt;cometbft&lt;/a&gt; - A distributed, Byzantine fault-tolerant, deterministic state machine replication engine. It is a fork of Tendermint Core and implements the Tendermint consensus algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cosmos/cosmos-sdk"&gt;cosmos-sdk&lt;/a&gt; - A Framework for Building Public Blockchains in the Cosmos Ecosystem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gnolang/gno"&gt;gno&lt;/a&gt; - A comprehensive smart contract suite built with Golang and Gnolang, a deterministic, purpose-built Go variant for blockchains.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ethereum/go-ethereum"&gt;go-ethereum&lt;/a&gt; - Official Go implementation of the Ethereum protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LimeChain/gosemble"&gt;gosemble&lt;/a&gt; - A Go-based framework for building Polkadot/Substrate-compatible runtimes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChainSafe/gossamer"&gt;gossamer&lt;/a&gt; - A Go implementation of the Polkadot Host.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ipfs/kubo"&gt;kubo&lt;/a&gt; - An IPFS implementation in Go. It provides content-addressable storage which can be used for decentralized storage in DApps. It is based on the IPFS protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lightningnetwork/lnd"&gt;lnd&lt;/a&gt; - A complete implementation of a Lightning Network node.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gagliardetto/solana-go"&gt;solana-go&lt;/a&gt; - Go library to interface with Solana JSON RPC and WebSocket interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tendermint/tendermint"&gt;tendermint&lt;/a&gt; - High-performance middleware for transforming a state machine written in any programming language into a Byzantine Fault Tolerant replicated state machine using the Tendermint consensus and blockchain protocols.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Bot Building&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for building and working with bots.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/diamondburned/arikawa"&gt;arikawa&lt;/a&gt; - A library and framework for the Discord API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-telegram/bot"&gt;bot&lt;/a&gt; - Zero-dependencies Telegram Bot library with additional UI components.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NicoNex/echotron"&gt;echotron&lt;/a&gt; - An elegant and concurrent library for Telegram Bots in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://joe-bot.net"&gt;go-joe&lt;/a&gt; - A general-purpose bot library inspired by Hubot but written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oklahomer/go-sarah"&gt;go-sarah&lt;/a&gt; - Framework to build a bot for desired chat services including LINE, Slack, Gitter, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mr-linch/go-tg"&gt;go-tg&lt;/a&gt; - Generated from official docs Go client library for accessing Telegram Bot API, with batteries for building complex bots included.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gempir/go-twitch-irc"&gt;go-twitch-irc&lt;/a&gt; - Library to write bots for twitch.tv chat&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/onrik/micha"&gt;micha&lt;/a&gt; - Go Library for Telegram bot api.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/innogames/slack-bot"&gt;slack-bot&lt;/a&gt; - Ready to use Slack Bot for lazy developers: Custom commands, Jenkins, Jira, Bitbucket, Github...&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/slack-io/slacker"&gt;slacker&lt;/a&gt; - Easy to use framework to create Slack bots.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tucnak/telebot"&gt;telebot&lt;/a&gt; - Telegram bot framework is written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mymmrac/telego"&gt;telego&lt;/a&gt; - Telegram Bot API library for Golang with full one-to-one API implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-telegram-bot-api/telegram-bot-api"&gt;telegram-bot-api&lt;/a&gt; - Simple and clean Telegram bot client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wabarc/wayback"&gt;wayback&lt;/a&gt; - A bot for Telegram, Mastodon, Slack, and other messaging platforms archives webpages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Build Automation&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools help with build automation.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gopinath-langote/1build"&gt;1build&lt;/a&gt; - Command line tool to frictionlessly manage project-specific commands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cosmtrek/air"&gt;air&lt;/a&gt; - Air - Live reload for Go apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GuilhermeCaruso/anko"&gt;anko&lt;/a&gt; - Simple application watcher for multiple programming languages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maxclaus/gaper"&gt;gaper&lt;/a&gt; - Builds and restarts a Go project when it crashes or some watched file changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://go-gilbert.github.io"&gt;gilbert&lt;/a&gt; - Build system and task runner for Go projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kcmvp/gob"&gt;gob&lt;/a&gt; - &lt;a href="https://docs.gradle.org/"&gt;Gradle&lt;/a&gt;/&lt;a href="https://maven.apache.org/"&gt;Maven&lt;/a&gt; like build tool for Go projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goyek/goyek"&gt;goyek&lt;/a&gt; - Create build pipelines in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/magefile/mage"&gt;mage&lt;/a&gt; - Mage is a make/rake-like build tool using Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tj/mmake"&gt;mmake&lt;/a&gt; - Modern Make.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tockins/realize"&gt;realize&lt;/a&gt; - Go build a system with file watchers and live to reload. Run, build and watch file changes with custom paths.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-task/task"&gt;Task&lt;/a&gt; - simple "Make" alternative.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/taskctl/taskctl"&gt;taskctl&lt;/a&gt; - Concurrent task runner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joerdav/xc"&gt;xc&lt;/a&gt; - Task runner with README.md defined tasks, executable markdown.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Command Line&lt;/h2&gt; 
&lt;h3&gt;Advanced Console UIs&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for building Console Applications and Console User Interfaces.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/guptarohit/asciigraph"&gt;asciigraph&lt;/a&gt; - Go package to make lightweight ASCII line graph ╭┈╯ in command line apps with no other dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logrusorgru/aurora"&gt;aurora&lt;/a&gt; - ANSI terminal colors that support fmt.Printf/Sprintf.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Delta456/box-cli-maker"&gt;box-cli-maker&lt;/a&gt; - Make Highly Customized Boxes for your CLI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Evertras/bubble-table"&gt;bubble-table&lt;/a&gt; - An interactive table component for bubbletea.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/bubbles"&gt;bubbles&lt;/a&gt; - TUI components for bubbletea.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/bubbletea"&gt;bubbletea&lt;/a&gt; - Go framework to build terminal apps, based on The Elm Architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mingrammer/cfmt"&gt;cfmt&lt;/a&gt; - Contextual fmt inspired by bootstrap color classes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/i582/cfmt"&gt;cfmt&lt;/a&gt; - Simple and convenient formatted stylized output fully compatible with fmt library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ttacon/chalk"&gt;chalk&lt;/a&gt; - Intuitive package for prettifying terminal/console output.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alfiankan/crab-config-files-templating"&gt;crab-config-files-templating&lt;/a&gt; - Dynamic configuration file templating tool for kubernetes manifest or general configuration files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wzshiming/ctc"&gt;ctc&lt;/a&gt; - The non-invasive cross-platform terminal color library does not need to modify the Print method.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antonmedv/fx"&gt;fx&lt;/a&gt; - Terminal JSON viewer &amp;amp; processor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/workanator/go-ataman"&gt;go-ataman&lt;/a&gt; - Go library for rendering ANSI colored text templates in terminals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/go-colorable"&gt;go-colorable&lt;/a&gt; - Colorable writer for windows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daviddengcn/go-colortext"&gt;go-colortext&lt;/a&gt; - Go library for color output in terminals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/go-isatty"&gt;go-isatty&lt;/a&gt; - isatty for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abusomani/go-palette"&gt;go-palette&lt;/a&gt; - Go library that provides elegant and convenient style definitions using ANSI colors. Fully compatible &amp;amp; wraps the &lt;a href="https://pkg.go.dev/fmt"&gt;fmt library&lt;/a&gt; for nice terminal layouts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/c-bata/go-prompt"&gt;go-prompt&lt;/a&gt; - Library for building a powerful interactive prompt, inspired by &lt;a href="https://github.com/jonathanslenders/python-prompt-toolkit"&gt;python-prompt-toolkit&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jroimartin/gocui"&gt;gocui&lt;/a&gt; - Minimalist Go library aimed at creating Console User Interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/labstack/gommon/tree/master/color"&gt;gommon/color&lt;/a&gt; - Style terminal text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gookit/color"&gt;gookit/color&lt;/a&gt; - Terminal color rendering tool library, support 16 colors, 256 colors, RGB color rendering output, compatible with Windows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/lipgloss"&gt;lipgloss&lt;/a&gt; - Declaratively define styles for color, format and layout in the terminal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cyucelen/marker"&gt;marker&lt;/a&gt; - Easiest way to match and mark strings for colorful terminal outputs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vbauerster/mpb"&gt;mpb&lt;/a&gt; - Multi progress bar for terminal applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/schollz/progressbar"&gt;progressbar&lt;/a&gt; - Basic thread-safe progress bar that works in every OS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pterm/pterm"&gt;pterm&lt;/a&gt; - A library to beautify console output on every platform with many combinable components.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexeyco/simpletable"&gt;simpletable&lt;/a&gt; - Simple tables in a terminal with Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/briandowns/spinner"&gt;spinner&lt;/a&gt; - Go package to easily provide a terminal spinner with options.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cheynewallace/tabby"&gt;tabby&lt;/a&gt; - A tiny library for super simple Golang tables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomlazar/table"&gt;table&lt;/a&gt; - Small library for terminal color based tables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nsf/termbox-go"&gt;termbox-go&lt;/a&gt; - Termbox is a library for creating cross-platform text-based interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mum4k/termdash"&gt;termdash&lt;/a&gt; - Go terminal dashboard based on &lt;strong&gt;termbox-go&lt;/strong&gt; and inspired by &lt;a href="https://github.com/gizak/termui"&gt;termui&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muesli/termenv"&gt;termenv&lt;/a&gt; - Advanced ANSI style &amp;amp; color support for your terminal applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gizak/termui"&gt;termui&lt;/a&gt; - Go terminal dashboard based on &lt;strong&gt;termbox-go&lt;/strong&gt; and inspired by &lt;a href="https://github.com/yaronn/blessed-contrib"&gt;blessed-contrib&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gosuri/uilive"&gt;uilive&lt;/a&gt; - Library for updating terminal output in real time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gosuri/uiprogress"&gt;uiprogress&lt;/a&gt; - Flexible library to render progress bars in terminal applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gosuri/uitable"&gt;uitable&lt;/a&gt; - Library to improve readability in terminal apps using tabular data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/theckman/yacspin"&gt;yacspin&lt;/a&gt; - Yet Another CLi Spinner package, for working with terminal spinners.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Standard CLI&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for building standard or basic Command Line applications.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cristalhq/acmd"&gt;acmd&lt;/a&gt; - Simple, useful, and opinionated CLI package in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/akamensky/argparse"&gt;argparse&lt;/a&gt; - Command line argument parser inspired by Python's argparse module.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cosiner/argv"&gt;argv&lt;/a&gt; - Go library to split command line string as arguments array using the bash syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rsteube/carapace"&gt;carapace&lt;/a&gt; - Command argument completion generator for spf13/cobra.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rsteube/carapace-bin"&gt;carapace-bin&lt;/a&gt; - Multi-shell multi-command argument completer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rsteube/carapace-spec"&gt;carapace-spec&lt;/a&gt; - Define simple completions using a spec file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tucnak/climax"&gt;climax&lt;/a&gt; - Alternative CLI with "human face", in spirit of Go command.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leaanthony/clir"&gt;clîr&lt;/a&gt; - A Simple and Clear CLI library. Dependency free.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/posener/cmd"&gt;cmd&lt;/a&gt; - Extends the standard &lt;code&gt;flag&lt;/code&gt; package to support sub commands and more in idiomatic way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hedzr/cmdr"&gt;cmdr&lt;/a&gt; - A POSIX/GNU style, getopt-like command-line UI Go library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spf13/cobra"&gt;cobra&lt;/a&gt; - Commander for modern Go CLI interactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rainu/go-command-chain"&gt;command-chain&lt;/a&gt; - A go library for configure and run command chains - such as pipelining in unix shells.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jaffee/commandeer"&gt;commandeer&lt;/a&gt; - Dev-friendly CLI apps: sets up flags, defaults, and usage based on struct fields and tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/posener/complete"&gt;complete&lt;/a&gt; - Write bash completions in Go + Go command bash completion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reeflective/console"&gt;console&lt;/a&gt; Closed-loop application library for Cobra commands, with oh-my-posh prompts, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dnote/dnote"&gt;Dnote&lt;/a&gt; - A simple command line notebook with multi-device sync.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elves/elvish"&gt;elvish&lt;/a&gt; - An expressive programming language and a versatile interactive shell.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codingconcepts/env"&gt;env&lt;/a&gt; - Tag-based environment configuration for structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/integrii/flaggy"&gt;flaggy&lt;/a&gt; - A robust and idiomatic flags package with excellent subcommand support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sgreben/flagvar"&gt;flagvar&lt;/a&gt; - A collection of flag argument types for Go's standard &lt;code&gt;flag&lt;/code&gt; package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jon-codes/getopt"&gt;getopt&lt;/a&gt; - An accurate Go &lt;code&gt;getopt&lt;/code&gt;, validated against the GNU libc implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexflint/go-arg"&gt;go-arg&lt;/a&gt; - Struct-based argument parsing in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jessevdk/go-flags"&gt;go-flags&lt;/a&gt; - go command line option parser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DavidGamba/go-getoptions"&gt;go-getoptions&lt;/a&gt; - Go option parser inspired by the flexibility of Perl’s GetOpt::Long.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nyaosorg/go-readline-ny"&gt;go-readline-ny&lt;/a&gt; - A customizable line-editing library with Emacs keybindings, Unicode support, completion, and syntax highlighting. Used in NYAGOS shell.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/devfacet/gocmd"&gt;gocmd&lt;/a&gt; - Go library for building command line applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/napalu/goopt"&gt;goopt&lt;/a&gt; - A declarative, struct-tag based CLI framework for Go, with a broad feature set such as hierarchical commands/flags, i18n, shell completion, and validation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/cli"&gt;hashicorp/cli&lt;/a&gt; - Go library for implementing command-line interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hidevopsio/hiboot/tree/master/pkg/app/cli"&gt;hiboot cli&lt;/a&gt; - cli application framework with auto configuration and dependency injection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liujianping/job"&gt;job&lt;/a&gt; - JOB, make your short-term command as a long-term job.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alecthomas/kingpin"&gt;kingpin&lt;/a&gt; - Command line and flag parser supporting sub commands (superseded by &lt;code&gt;kong&lt;/code&gt;; see below).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peterh/liner"&gt;liner&lt;/a&gt; - Go readline-like library for command-line interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jxskiss/mcli"&gt;mcli&lt;/a&gt; - A minimal but very powerful cli library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mkideal/cli"&gt;mkideal/cli&lt;/a&gt; - Feature-rich and easy to use command-line package based on golang struct tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jawher/mow.cli"&gt;mow.cli&lt;/a&gt; - Go library for building CLI applications with sophisticated flag and argument parsing and validation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nanovms/ops"&gt;ops&lt;/a&gt; - Unikernel Builder/Orchestrator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spf13/pflag"&gt;pflag&lt;/a&gt; - Drop-in replacement for Go's flag package, implementing POSIX/GNU-style --flags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reeflective/readline"&gt;readline&lt;/a&gt; - Shell library with modern and easy to use UI features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Zaba505/sand"&gt;sand&lt;/a&gt; - Simple API for creating interpreters and so much more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/octago/sflags"&gt;sflags&lt;/a&gt; - Struct based flags generator for flag, urfave/cli, pflag, cobra, kingpin, and other libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antham/strumt"&gt;strumt&lt;/a&gt; - Library to create prompt chain.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/subcmd"&gt;subcmd&lt;/a&gt; - Another approach to parsing and running subcommands. Works alongside the standard &lt;code&gt;flag&lt;/code&gt; package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/teris-io/cli"&gt;teris-io/cli&lt;/a&gt; - Simple and complete API for building command line interfaces in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liujianping/ts"&gt;ts&lt;/a&gt; - Timestamp convert &amp;amp; compare tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ukautz/clif"&gt;ukautz/clif&lt;/a&gt; - Small command line interface framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/urfave/cli"&gt;urfave/cli&lt;/a&gt; - Simple, fast, and fun package for building command line apps in Go (formerly codegangsta/cli).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mszostok/version"&gt;version&lt;/a&gt; - Collects and displays CLI version information in multiple formats along with upgrade notice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dixonwille/wlog"&gt;wlog&lt;/a&gt; - Simple logging interface that supports cross-platform color and concurrency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dixonwille/wmenu"&gt;wmenu&lt;/a&gt; - Easy to use menu structure for cli applications that prompt users to make choices.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for configuration parsing.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cristalhq/aconfig"&gt;aconfig&lt;/a&gt; - Simple, useful and opinionated config loader.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wkhere/bcl"&gt;bcl&lt;/a&gt; - BCL is a configuration language similar to HCL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ilyakaznacheev/cleanenv"&gt;cleanenv&lt;/a&gt; - Minimalistic configuration reader (from files, ENV, and wherever you want).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JeremyLoy/config"&gt;config&lt;/a&gt; - Cloud native application configuration. Bind ENV to structs in only two lines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/num30/config"&gt;config&lt;/a&gt; - configure your app using file, environment variables, or flags in two lines of code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BoRuDar/configuration"&gt;configuration&lt;/a&gt; - Library for initializing configuration structs from env variables, files, flags and 'default' tag.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paked/configure"&gt;configure&lt;/a&gt; - Provides configuration through multiple sources, including JSON, flags and environment variables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sherifabdlnaby/configuro"&gt;configuro&lt;/a&gt; - opinionated configuration loading &amp;amp; validation framework from ENV and Files focused towards 12-Factor compliant applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/greencoda/confiq"&gt;confiq&lt;/a&gt; - Structured data format to config struct decoder library for Go - supporting multiple data formats.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/heetch/confita"&gt;confita&lt;/a&gt; - Load configuration in cascade from multiple backends into a struct.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/the4thamigo-uk/conflate"&gt;conflate&lt;/a&gt; - Library/tool to merge multiple JSON/YAML/TOML files from arbitrary URLs, validation against a JSON schema, and application of default values defined in the schema.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atelpis/enflag"&gt;enflag&lt;/a&gt; - Container-oriented, zero-dependency configuration library that unifies Env variable and Flag parsing. Uses generics for type safety, without reflection or struct tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/caarlos0/env"&gt;env&lt;/a&gt; - Parse environment variables to Go structs (with defaults).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/junk1tm/env"&gt;env&lt;/a&gt; - A lightweight package for loading environment variables into structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/syntaqx/env"&gt;env&lt;/a&gt; - An environment utility package with support for unmarshaling into structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vrischmann/envconfig"&gt;envconfig&lt;/a&gt; - Read your configuration from environment variables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antham/envh"&gt;envh&lt;/a&gt; - Helpers to manage environment variables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuseferi/envyaml"&gt;envyaml&lt;/a&gt; - Yaml with environment variables reader. it helps to have secrets as environment variable but load them configs as structured Yaml.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kkyr/fig"&gt;fig&lt;/a&gt; - Tiny library for reading configuration from a file and from environment variables (with validation &amp;amp; defaults).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sakirsensoy/genv"&gt;genv&lt;/a&gt; - Read environment variables easily with dotenv support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deatil/go-array"&gt;go-array&lt;/a&gt; - A Go package that read or set data from map, slice or json.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PaddleHQ/go-aws-ssm"&gt;go-aws-ssm&lt;/a&gt; - Go package that fetches parameters from AWS System Manager - Parameter Store.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dsbasko/go-cfg"&gt;go-cfg&lt;/a&gt; - The library provides a unified way to read configuration data into a structure from various sources, such as env, flags, and configuration files (.json, .yaml, .toml, .env).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ThomasObenaus/go-conf"&gt;go-conf&lt;/a&gt; - Simple library for application configuration based on annotated structs. It supports reading the configuration from environment variables, config files and command line parameters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/subpop/go-ini"&gt;go-ini&lt;/a&gt; - A Go package that marshals and unmarshals INI-files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ianlopshire/go-ssm-config"&gt;go-ssm-config&lt;/a&gt; - Go utility for loading configuration parameters from AWS SSM (Parameter Store).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ufoscout/go-up"&gt;go-up&lt;/a&gt; - A simple configuration library with recursive placeholders resolution and no magic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jagerente/gocfg"&gt;GoCfg&lt;/a&gt; - Config manager with Struct Tags based contracts, custom value providers, parsers, and documentation generation. Customizable yet simple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joho/godotenv"&gt;godotenv&lt;/a&gt; - Go port of Ruby's dotenv library (Loads environment variables from &lt;code&gt;.env&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ian-kent/gofigure"&gt;gofigure&lt;/a&gt; - Go application configuration made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golobby/config"&gt;GoLobby/Config&lt;/a&gt; - GoLobby Config is a lightweight yet powerful configuration manager for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/One-com/gone/tree/master/jconf"&gt;gone/jconf&lt;/a&gt; - Modular JSON configuration. Keep your config structs along with the code they configure and delegate parsing to submodules without sacrificing full config serialization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/milad-abbasi/gonfig"&gt;gonfig&lt;/a&gt; - Tag-based configuration parser which loads values from different providers into typesafe struct.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gookit/config"&gt;gookit/config&lt;/a&gt; - application config manage(load,get,set). support JSON, YAML, TOML, INI, HCL. multi file load, data override merge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/beatlabs/harvester"&gt;harvester&lt;/a&gt; - Harvester, a easy to use static and dynamic configuration package supporting seeding, env vars and Consul integration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hedzr/store"&gt;hedzr/store&lt;/a&gt; - Extensible, high-performance configuration management library, optimized for hierarchical data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hjson/hjson-go"&gt;hjson&lt;/a&gt; - Human JSON, a configuration file format for humans. Relaxed syntax, fewer mistakes, more comments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gurkankaymak/hocon"&gt;hocon&lt;/a&gt; - Configuration library for working with the HOCON(a human-friendly JSON superset) format, supports features like environment variables, referencing other values, comments and multiple files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/schachmat/ingo"&gt;ingo&lt;/a&gt; - Flags persisted in an ini-like config file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ini/ini"&gt;ini&lt;/a&gt; - Go package to read and write INI files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wlevene/ini"&gt;ini&lt;/a&gt; - INI Parser &amp;amp; Write Library, Unmarshal to Struct, Marshal to Json, Write File, watch file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joshbetz/config"&gt;joshbetz/config&lt;/a&gt; - Small configuration library for Go that parses environment variables, JSON files, and reloads automatically on SIGHUP.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kelseyhightower/envconfig"&gt;kelseyhightower/envconfig&lt;/a&gt; - Go library for managing configuration data from environment variables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knadh/koanf"&gt;koanf&lt;/a&gt; - Light weight, extensible library for reading config in Go applications. Built in support for JSON, TOML, YAML, env, command line.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nil-go/konf"&gt;konf&lt;/a&gt; - The simplest API for reading/watching config from file, env, flag and clouds (e.g. AWS, Azure, GCP).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lalamove/konfig"&gt;konfig&lt;/a&gt; - Composable, observable and performant config handling for Go for the distributed processing era.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alecthomas/kong"&gt;kong&lt;/a&gt; - Command-line parser with support for arbitrarily complex command-line structures and additional sources of configuration such as YAML, JSON, TOML, etc (successor to &lt;code&gt;kingpin&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sasbury/mini"&gt;mini&lt;/a&gt; - Golang package for parsing ini-style configuration files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nasermirzaei89/env"&gt;nasermirzaei89/env&lt;/a&gt; - Simple useful package for read environment variables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muir/nfigure"&gt;nfigure&lt;/a&gt; - Per-library struct-tag based configuration from command lines (Posix &amp;amp; Go-style); environment, JSON, YAML&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goraz/onion"&gt;onion&lt;/a&gt; - Layer based configuration for Go, Supports JSON, TOML, YAML, properties, etcd, env, and encryption using PGP.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Yiling-J/piper"&gt;piper&lt;/a&gt; - Viper wrapper with config inheritance and key generation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bytedance/sonic"&gt;sonic&lt;/a&gt; - A blazingly fast JSON serializing &amp;amp; deserializing library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tucnak/store"&gt;store&lt;/a&gt; - Lightweight configuration manager for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oblq/swap"&gt;swap&lt;/a&gt; - Instantiate/configure structs recursively, based on build environment. (YAML, TOML, JSON and env).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/diegomarangoni/typenv"&gt;typenv&lt;/a&gt; - Minimalistic, zero dependency, typed environment variables library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/omeid/uconfig"&gt;uConfig&lt;/a&gt; - Lightweight, zero-dependency, and extendable configuration management.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spf13/viper"&gt;viper&lt;/a&gt; - Go configuration with fangs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adrg/xdg"&gt;xdg&lt;/a&gt; - Go implementation of the &lt;a href="https://specifications.freedesktop.org/basedir-spec/latest/"&gt;XDG Base Directory Specification&lt;/a&gt; and &lt;a href="https://wiki.archlinux.org/index.php/XDG_user_directories"&gt;XDG user directories&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/romshark/yamagiconf"&gt;yamagiconf&lt;/a&gt; - The "safe subset" of YAML for Go configs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chaindead/zerocfg"&gt;zerocfg&lt;/a&gt; - Zero-effort, concise configuration management that avoids boilerplate and repetitive code, supports multiple sources with priority overrides.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Continuous Integration&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools for help with continuous integration.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bleenco/abstruse"&gt;abstruse&lt;/a&gt; - Abstruse is a distributed CI platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bencher.dev/"&gt;Bencher&lt;/a&gt; - A suite of continuous benchmarking tools designed to catch performance regressions in CI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ovh/cds"&gt;CDS&lt;/a&gt; - Enterprise-Grade CI/CD and DevOps Automation Open Source Platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/opnlabs/dot"&gt;dot&lt;/a&gt; - A minimal, local first continuous integration system that uses Docker to run jobs concurrently in stages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drone/drone"&gt;drone&lt;/a&gt; - Drone is a Continuous Integration platform built on Docker, written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gha-common/go-beautiful-html-coverage"&gt;go-beautiful-html-coverage&lt;/a&gt; - A GitHub Action to track code coverage in your pull requests, with a beautiful HTML preview, for free.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jidicula/go-fuzz-action"&gt;go-fuzz-action&lt;/a&gt; - Use Go 1.18's built-in fuzz testing in GitHub Actions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s0ders/go-semver-release"&gt;go-semver-release&lt;/a&gt; - Automate the semantic versioning of Git repositories.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vladopajic/go-test-coverage"&gt;go-test-coverage&lt;/a&gt; - Tool and GitHub action which reports issues when test coverage is below set threshold.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikogura/gomason"&gt;gomason&lt;/a&gt; - Test, Build, Sign, and Publish your go binaries from a clean workspace.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GoTestTools/gotestfmt"&gt;gotestfmt&lt;/a&gt; - go test output for humans.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/goveralls"&gt;goveralls&lt;/a&gt; - Go integration for Coveralls.io continuous code coverage tracking system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/raviqqe/muffet"&gt;muffet&lt;/a&gt; - Fast website link checker in Go, see &lt;a href="https://github.com/lycheeverse/lychee#features"&gt;alternatives&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/overalls"&gt;overalls&lt;/a&gt; - Multi-Package go project coverprofile for tools like goveralls.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LawrenceWoodman/roveralls"&gt;roveralls&lt;/a&gt; - Recursive coverage testing tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/woodpecker-ci/woodpecker"&gt;woodpecker&lt;/a&gt; - Woodpecker is a community fork of the Drone CI system.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;CSS Preprocessors&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for preprocessing CSS files.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wellington/go-libsass"&gt;go-libsass&lt;/a&gt; - Go wrapper to the 100% Sass compatible libsass project.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Data Integration Frameworks&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Frameworks for performing ELT / ETL&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benthosdev/benthos"&gt;Benthos&lt;/a&gt; - A message streaming bridge between a range of protocols.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://github.com/cloudquery/cloudquery"&gt;CloudQuery&lt;/a&gt; - A high-performance ELT data integration framework with pluggable architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jf-tech/omniparser"&gt;omniparser&lt;/a&gt; - A versatile ETL library that parses text input (CSV/txt/JSON/XML/EDI/X12/EDIFACT/etc) in streaming fashion and transforms data into JSON output using data-driven schema.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures and Algorithms&lt;/h2&gt; 
&lt;h3&gt;Bit-packing and Compression&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iancmcc/bingo"&gt;bingo&lt;/a&gt; - Fast, zero-allocation, lexicographical-order-preserving packing of native types to bytes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zhuangsirui/binpacker"&gt;binpacker&lt;/a&gt; - Binary packer and unpacker helps user build custom binary stream.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yourbasic/bit"&gt;bit&lt;/a&gt; - Golang set data structure with bonus bit-twiddling functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/superwhiskers/crunch"&gt;crunch&lt;/a&gt; - Go package implementing buffers for handling various datatypes easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amallia/go-ef"&gt;go-ef&lt;/a&gt; - A Go implementation of the Elias-Fano encoding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RoaringBitmap/roaring"&gt;roaring&lt;/a&gt; - Go package implementing compressed bitsets.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bit Sets&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kelindar/bitmap"&gt;bitmap&lt;/a&gt; - Dense, zero-allocation, SIMD-enabled bitmap/bitset in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bits-and-blooms/bitset"&gt;bitset&lt;/a&gt; - Go package implementing bitsets.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bloom and Cuckoo Filters&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bits-and-blooms/bloom"&gt;bloom&lt;/a&gt; - Go package implementing Bloom filters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zhenjl/bloom"&gt;bloom&lt;/a&gt; - Bloom filters implemented in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yourbasic/bloom"&gt;bloom&lt;/a&gt; - Golang Bloom filter implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OldPanda/bloomfilter"&gt;bloomfilter&lt;/a&gt; - Yet another Bloomfilter implementation in Go, compatible with Java's Guava library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tylertreat/BoomFilters"&gt;boomfilters&lt;/a&gt; - Probabilistic data structures for processing continuous, unbounded streams.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linvon/cuckoo-filter"&gt;cuckoo-filter&lt;/a&gt; - Cuckoo filter: a comprehensive cuckoo filter, which is configurable and space optimized compared with other implements, and all features mentioned in original paper are available.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seiflotfy/cuckoofilter"&gt;cuckoofilter&lt;/a&gt; - Cuckoo filter: a good alternative to a counting bloom filter implemented in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TheTannerRyan/ring"&gt;ring&lt;/a&gt; - Go implementation of a high performance, thread safe bloom filter.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Data Structure and Algorithm Collections&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shady831213/algorithms"&gt;algorithms&lt;/a&gt; - Algorithms and data structures.CLRS study.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Workiva/go-datastructures"&gt;go-datastructures&lt;/a&gt; - Collection of useful, performant, and thread-safe data structures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emirpasic/gods"&gt;gods&lt;/a&gt; - Go Data Structures. Containers, Sets, Lists, Stacks, Maps, BidiMaps, Trees, HashSet etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liyue201/gostl"&gt;gostl&lt;/a&gt; - Data structure and algorithm library for go, designed to provide functions similar to C++ STL.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Iterators&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaa110/goterator"&gt;goterator&lt;/a&gt; - Iterator implementation to provide map and reduce functionalities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/disksing/iter"&gt;iter&lt;/a&gt; - Go implementation of C++ STL iterators and algorithms.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Maps&lt;/h3&gt; 
&lt;p&gt;See also &lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#database"&gt;Database&lt;/a&gt; for more complex key-value stores, and &lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#trees"&gt;Trees&lt;/a&gt; for additional ordered map implementations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lrita/cmap"&gt;cmap&lt;/a&gt; - a thread-safe concurrent map for go, support using &lt;code&gt;interface{}&lt;/code&gt; as key and auto scale up shards.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/srfrog/dict"&gt;dict&lt;/a&gt; - Python-like dictionaries (dict) for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lucmq/go-shelve"&gt;go-shelve&lt;/a&gt; - A persistent, map-like object for the Go programming language. Supports multiple embedded key-value stores.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goradd/maps"&gt;goradd/maps&lt;/a&gt; - Go 1.18+ generic map interface for maps; safe maps; ordered maps; ordered, safe maps; etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Miscellaneous Data Structures and Algorithms&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/free/concurrent-writer"&gt;concurrent-writer&lt;/a&gt; - Highly concurrent drop-in replacement for &lt;code&gt;bufio.Writer&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seiflotfy/count-min-log"&gt;count-min-log&lt;/a&gt; - Go implementation Count-Min-Log sketch: Approximately counting with approximate counters (Like Count-Min sketch but using less memory).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cocoonspace/fsm"&gt;fsm&lt;/a&gt; - Finite-State Machine package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nwillc/genfuncs"&gt;genfuncs&lt;/a&gt; - Go 1.18+ generics package inspired by Kotlin's Sequence and Map.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/go-generics"&gt;go-generics&lt;/a&gt; - Generic slice, map, set, iterator, and goroutine utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hailocab/go-geoindex"&gt;go-geoindex&lt;/a&gt; - In-memory geo index.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/francesconi/go-rampart"&gt;go-rampart&lt;/a&gt; - Determine how intervals relate to each other.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aurelien-rainone/go-rquad"&gt;go-rquad&lt;/a&gt; - Region quadtrees with efficient point location and neighbour finding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/barweiss/go-tuple"&gt;go-tuple&lt;/a&gt; - Generic tuple implementation for Go 1.18+.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daichi-m/go18ds"&gt;go18ds&lt;/a&gt; - Go Data Structures using Go 1.18 generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xxjwxc/gofal"&gt;gofal&lt;/a&gt; - fractional api for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/esimov/gogu"&gt;gogu&lt;/a&gt; - A comprehensive, reusable and efficient concurrent-safe generics utility functions and data structures library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kniren/gota"&gt;gota&lt;/a&gt; - Implementation of dataframes, series, and data wrangling methods for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emvi/hide"&gt;hide&lt;/a&gt; - ID type with marshalling to/from hash to prevent sending IDs to clients.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axiomhq/hyperloglog"&gt;hyperloglog&lt;/a&gt; - HyperLogLog implementation with Sparse, LogLog-Beta bias correction and TailCut space reduction.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s0rg/quadtree"&gt;quadtree&lt;/a&gt; - Generic, zero-alloc, 100%-test covered quadtree.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twharmon/slices"&gt;slices&lt;/a&gt; - Pure, generic functions for slices.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Nullable Types&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kak-tus/nan"&gt;nan&lt;/a&gt; - Zero allocation Nullable structures in one library with handy conversion functions, marshallers and unmarshallers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emvi/null"&gt;null&lt;/a&gt; - Nullable Go types that can be marshalled/unmarshalled to/from JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gurukami/typ"&gt;typ&lt;/a&gt; - Null Types, Safe primitive type conversion and fetching value from complex structures.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Queues&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edwingeng/deque"&gt;deque&lt;/a&gt; - A highly optimized double-ended queue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gammazero/deque"&gt;deque&lt;/a&gt; - Fast ring-buffer deque (double-ended queue).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vodolaz095/dqueue"&gt;dqueue&lt;/a&gt; - Simple, in memory, zero dependency and battle tested, thread-safe deferred queue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/enriquebris/goconcurrentqueue"&gt;goconcurrentqueue&lt;/a&gt; - Concurrent FIFO queue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hatchet-dev/hatchet"&gt;hatchet&lt;/a&gt; - Distributed, Fault-tolerant task queue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/embano1/memlog"&gt;memlog&lt;/a&gt; - An easy to use, lightweight, thread-safe and append-only in-memory data structure inspired by Apache Kafka.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adrianbrad/queue"&gt;queue&lt;/a&gt; - Multiple thread-safe, generic queue implementations for Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sets&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ihebu/dsu"&gt;dsu&lt;/a&gt; - Disjoint Set data structure implementation in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deckarep/golang-set"&gt;golang-set&lt;/a&gt; - Thread-Safe and Non-Thread-Safe high-performance sets for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zoumo/goset"&gt;goset&lt;/a&gt; - A useful Set collection implementation for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StudioSol/set"&gt;set&lt;/a&gt; - Simple set data structure implementation in Go using LinkedHashMap.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Text Analysis&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blevesearch/bleve"&gt;bleve&lt;/a&gt; - Modern text indexing library for go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/plar/go-adaptive-radix-tree"&gt;go-adaptive-radix-tree&lt;/a&gt; - Go implementation of Adaptive Radix Tree.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hbollon/go-edlib"&gt;go-edlib&lt;/a&gt; - Go string comparison and edit distance algorithms library (Levenshtein, LCS, Hamming, Damerau levenshtein, Jaro-Winkler, etc.) compatible with Unicode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agext/levenshtein"&gt;levenshtein&lt;/a&gt; - Levenshtein distance and similarity metrics with customizable edit costs and Winkler-like bonus for common prefix.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agnivade/levenshtein"&gt;levenshtein&lt;/a&gt; - Implementation to calculate levenshtein distance in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BlackRabbitt/mspm"&gt;mspm&lt;/a&gt; - Multi-String Pattern Matching Algorithm for information retrieval.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MonaxGT/parsefields"&gt;parsefields&lt;/a&gt; - Tools for parse JSON-like logs for collecting unique fields and events.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/ptrie"&gt;ptrie&lt;/a&gt; - An implementation of prefix tree.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/derekparker/trie"&gt;trie&lt;/a&gt; - Trie implementation in Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Trees&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://github.com/bobg/hashsplit"&gt;hashsplit&lt;/a&gt; - Split byte streams into chunks, and arrange chunks into trees, with boundaries determined by content, not position.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/merkle"&gt;merkle&lt;/a&gt; - Space-efficient computation of Merkle root hashes and inclusion proofs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MauriceGit/skiplist"&gt;skiplist&lt;/a&gt; - Very fast Go Skiplist implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gansidui/skiplist"&gt;skiplist&lt;/a&gt; - Skiplist implementation in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/igrmk/treemap"&gt;treemap&lt;/a&gt; - Generic key-sorted map using a red-black tree under the hood.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Pipes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tejzpr/ordered-concurrently"&gt;ordered-concurrently&lt;/a&gt; - Go module that processes work concurrently and returns output in a channel in the order of input.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nazar256/parapipe"&gt;parapipe&lt;/a&gt; - FIFO Pipeline which parallels execution on each stage while maintaining the order of messages and results.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyfather/pipeline"&gt;pipeline&lt;/a&gt; - An implementation of pipelines with fan-in and fan-out.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nxdir-s/pipelines"&gt;pipelines&lt;/a&gt; - Generic pipeline functions for concurrent processing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Database&lt;/h2&gt; 
&lt;h3&gt;Caches&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Data stores with expiring records, in-memory distributed data stores, or in-memory subsets of file-based databases.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/floatdrop/2q"&gt;2q&lt;/a&gt; - 2Q in-memory cache implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iwanbk/bcache"&gt;bcache&lt;/a&gt; - Eventually consistent distributed in-memory cache Go library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/allegro/bigcache"&gt;BigCache&lt;/a&gt; - Efficient key/value cache for gigabytes of data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/akyoto/cache"&gt;cache&lt;/a&gt; - In-memory key:value store with expiration time, 0 dependencies, &amp;lt;100 LoC, 100% coverage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muesli/cache2go"&gt;cache2go&lt;/a&gt; - In-memory key:value cache which supports automatic invalidation based on timeouts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/faabiosr/cachego"&gt;cachego&lt;/a&gt; - Golang Cache component for multiple drivers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oaStuff/clusteredBigCache"&gt;clusteredBigCache&lt;/a&gt; - BigCache with clustering support and individual item expiration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oracle/coherence-go-client"&gt;coherence-go-client&lt;/a&gt; - Full implementation of Oracle Coherence cache API for Go applications using gRPC as network transport.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codingsince1985/couchcache"&gt;couchcache&lt;/a&gt; - RESTful caching micro-service backed by Couchbase server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EchoVault/EchoVault"&gt;EchoVault&lt;/a&gt; - Embeddable Distributed in-memory data store compatible with Redis clients.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VictoriaMetrics/fastcache"&gt;fastcache&lt;/a&gt; - fast thread-safe inmemory cache for big number of entries. Minimizes GC overhead.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bluele/gcache"&gt;GCache&lt;/a&gt; - Cache library with support for expirable Cache, LFU, LRU and ARC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ulovecode/gdcache"&gt;gdcache&lt;/a&gt; - A pure non-intrusive cache library implemented by golang, you can use it to implement your own distributed cache.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viney-shih/go-cache"&gt;go-cache&lt;/a&gt; - A flexible multi-layer Go caching library to deal with in-memory and shared cache by adopting Cache-Aside pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elastic/go-freelru"&gt;go-freelru&lt;/a&gt; A GC-less, fast and generic LRU hashmap library with optional locking, sharding, eviction and expiration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/szyhf/go-gcache"&gt;go-gcache&lt;/a&gt; - The generic version of &lt;code&gt;GCache&lt;/code&gt;, cache support for expirable Cache, LFU, LRU and ARC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OrlovEvgeny/go-mcache"&gt;go-mcache&lt;/a&gt; - Fast in-memory key:value store/cache library. Pointer caches.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eko/gocache"&gt;gocache&lt;/a&gt; - A complete Go cache library with multiple stores (memory, memcache, redis, ...), chainable, loadable, metrics cache and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuseferi/gocache"&gt;gocache&lt;/a&gt; - A data race free Go ache library with high performance and auto pruge functionality&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang/groupcache"&gt;groupcache&lt;/a&gt; - Groupcache is a caching and cache-filling library, intended as a replacement for memcached in many cases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mdaliyan/icache"&gt;icache&lt;/a&gt; - A High Performance, Generic, thread-safe, zero-dependency cache package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/erni27/imcache"&gt;imcache&lt;/a&gt; - A generic in-memory cache Go library. It supports expiration, sliding expiration, max entries limit, eviction callbacks and sharding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mgtv-tech/jetcache-go"&gt;jetcache-go&lt;/a&gt; - Unified Go cache library supporting multi-level caching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/no-src/nscache"&gt;nscache&lt;/a&gt; - A Go caching framework that supports multiple data source drivers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maypok86/otter"&gt;otter&lt;/a&gt; - A high performance lockless cache for Go. Many times faster than Ristretto and friends.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naughtygopher/pocache"&gt;pocache&lt;/a&gt; - Pocache is a minimal cache package which focuses on a preemptive optimistic caching strategy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dgraph-io/ristretto"&gt;ristretto&lt;/a&gt; - A high performance memory-bound Go cache.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viccon/sturdyc"&gt;sturdyc&lt;/a&gt; - A caching library with advanced concurrency features designed to make I/O heavy applications robust and highly performant.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Yiling-J/theine-go"&gt;theine&lt;/a&gt; - High performance, near optimal in-memory cache with proactive TTL expiration and generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zekroTJA/timedmap"&gt;timedmap&lt;/a&gt; - Map with expiring key-value pairs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jellydator/ttlcache"&gt;ttlcache&lt;/a&gt; - An in-memory cache with item expiration and generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cheshir/ttlcache"&gt;ttlcache&lt;/a&gt; - In-memory key value storage with TTL for each record.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Databases Implemented in Go&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dgraph-io/badger"&gt;badger&lt;/a&gt; - Fast key-value store in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/etcd-io/bbolt"&gt;bbolt&lt;/a&gt; - An embedded key/value database for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git.mills.io/prologic/bitcask"&gt;Bitcask&lt;/a&gt; - Bitcask is an embeddable, persistent and fast key-value (KV) database written in pure Go with predictable read/write performance, low latency and high throughput thanks to the bitcask on-disk layout (LSM+WAL).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tidwall/buntdb"&gt;buntdb&lt;/a&gt; - Fast, embeddable, in-memory key/value database for Go with custom indexing and spatial support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ostafen/clover"&gt;clover&lt;/a&gt; - A lightweight document-oriented NoSQL database written in pure Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cockroachdb/cockroach"&gt;cockroach&lt;/a&gt; - Scalable, Geo-Replicated, Transactional Datastore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/claygod/coffer"&gt;Coffer&lt;/a&gt; - Simple ACID key-value database that supports transactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kelindar/column"&gt;column&lt;/a&gt; - High-performance, columnar, embeddable in-memory store with bitmap indexing and transactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CovenantSQL/CovenantSQL"&gt;CovenantSQL&lt;/a&gt; - CovenantSQL is a SQL database on blockchain.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paranoidguy/databunker"&gt;Databunker&lt;/a&gt; - Personally identifiable information (PII) storage service built to comply with GDPR and CCPA.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dgraph-io/dgraph"&gt;dgraph&lt;/a&gt; - Scalable, Distributed, Low Latency, High Throughput Graph Database.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DiceDB/dice"&gt;DiceDB&lt;/a&gt; - An open-source, fast, reactive, in-memory database optimized for modern hardware. Higher throughput and lower median latencies, making it ideal for modern workloads.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peterbourgon/diskv"&gt;diskv&lt;/a&gt; - Home-grown disk-backed key-value store.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dolthub/dolt"&gt;dolt&lt;/a&gt; - Dolt – It's Git for Data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/krotik/eliasdb"&gt;eliasdb&lt;/a&gt; - Dependency-free, transactional graph database with REST API, phrase search and SQL-like query language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hdt3213/godis"&gt;godis&lt;/a&gt; - A Golang implemented high-performance Redis server and cluster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/syndtr/goleveldb"&gt;goleveldb&lt;/a&gt; - Implementation of the &lt;a href="https://github.com/google/leveldb"&gt;LevelDB&lt;/a&gt; key/value database in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jameycribbs/hare"&gt;hare&lt;/a&gt; - A simple database management system that stores each table as a text file of line-delimited JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codenotary/immudb"&gt;immudb&lt;/a&gt; - immudb is a lightweight, high-speed immutable database for systems and applications written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/influxdb/influxdb"&gt;influxdb&lt;/a&gt; - Scalable datastore for metrics, events, and real-time analytics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/siddontang/ledisdb"&gt;ledisdb&lt;/a&gt; - Ledisdb is a high performance NoSQL like Redis based on LevelDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmhodges/levigo"&gt;levigo&lt;/a&gt; - Levigo is a Go wrapper for LevelDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amit-davidson/LibraDB"&gt;libradb&lt;/a&gt; - LibraDB is a simple database with less than 1000 lines of code for learning.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lindb/lindb"&gt;LinDB&lt;/a&gt; - LinDB is a scalable, high performance, high availability distributed time series database.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/flower-corp/lotusdb"&gt;lotusdb&lt;/a&gt; - Fast k/v database compatible with lsm and b+tree.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/milvus-io/milvus"&gt;Milvus&lt;/a&gt; - Milvus is a vector database for embedding management, analytics and search.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/couchbase/moss"&gt;moss&lt;/a&gt; - Moss is a simple LSM key-value storage engine written in 100% Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xujiajun/nutsdb"&gt;nutsdb&lt;/a&gt; - Nutsdb is a simple, fast, embeddable, persistent key/value store written in pure Go. It supports fully serializable transactions and many data structures such as list, set, sorted set.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/objectbox/objectbox-go"&gt;objectbox-go&lt;/a&gt; - High-performance embedded Object Database (NoSQL) with Go API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cockroachdb/pebble"&gt;pebble&lt;/a&gt; - RocksDB/LevelDB inspired key-value database in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fern4lvarez/piladb"&gt;piladb&lt;/a&gt; - Lightweight RESTful database engine based on stack data structures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/akrylysov/pogreb"&gt;pogreb&lt;/a&gt; - Embedded key-value store for read-heavy workloads.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prometheus/prometheus"&gt;prometheus&lt;/a&gt; - Monitoring system and time series database.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/recoilme/pudge"&gt;pudge&lt;/a&gt; - Fast and simple key/value store written using Go's standard library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nalgeon/redka"&gt;redka&lt;/a&gt; - Redis re-implemented with SQLite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/roseduan/rosedb"&gt;rosedb&lt;/a&gt; - An embedded k-v database based on LSM+WAL, supports string, list, hash, set, zset.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xgzlucario/rotom"&gt;rotom&lt;/a&gt; - A tiny Redis server built with Golang, compatible with RESP protocols.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rqlite/rqlite"&gt;rqlite&lt;/a&gt; - The lightweight, distributed, relational database built on SQLite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafaeljesus/tempdb"&gt;tempdb&lt;/a&gt; - Key-value store for temporary items.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pingcap/tidb"&gt;tidb&lt;/a&gt; - TiDB is a distributed SQL database. Inspired by the design of Google F1.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HouzuoGuo/tiedot"&gt;tiedot&lt;/a&gt; - Your NoSQL database powered by Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unit-io/unitdb"&gt;unitdb&lt;/a&gt; - Fast timeseries database for IoT, realtime messaging applications. Access unitdb with pubsub over tcp or websocket using github.com/unit-io/unitd application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrislusf/vasto"&gt;Vasto&lt;/a&gt; - A distributed high-performance key-value store. On Disk. Eventual consistent. HA. Able to grow or shrink without service interruption.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics"&gt;VictoriaMetrics&lt;/a&gt; - fast, resource-effective and scalable open source time series database. May be used as long-term remote storage for Prometheus. Supports PromQL.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database Schema Migration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ariga/atlas"&gt;atlas&lt;/a&gt; - A Database Toolkit. A CLI designed to help companies better work with their data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/khezen/avro"&gt;avro&lt;/a&gt; - Discover SQL schemas and convert them to AVRO schemas. Query SQL records into AVRO bytes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bytebase/bytebase"&gt;bytebase&lt;/a&gt; - Safe database schema change and version control for DevOps teams.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GuiaBolso/darwin"&gt;darwin&lt;/a&gt; - Database schema evolution library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amacneil/dbmate"&gt;dbmate&lt;/a&gt; - A lightweight, framework-agnostic database migration tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RichardKnop/go-fixtures"&gt;go-fixtures&lt;/a&gt; - Django style fixtures for Golang's excellent built-in database/sql library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lawzava/go-pg-migrate"&gt;go-pg-migrate&lt;/a&gt; - CLI-friendly package for go-pg migrations management.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/robinjoseph08/go-pg-migrations"&gt;go-pg-migrations&lt;/a&gt; - A Go package to help write migrations with go-pg/pg.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linkedin/goavro"&gt;goavro&lt;/a&gt; - A Go package that encodes and decodes Avro data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafaelespinoza/godfish"&gt;godfish&lt;/a&gt; - Database migration manager, works with native query language. Support for cassandra, mysql, postgres, sqlite3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pressly/goose"&gt;goose&lt;/a&gt; - Database migration tool. You can manage your database's evolution by creating incremental SQL or Go scripts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kachit/gorm-seeder"&gt;gorm-seeder&lt;/a&gt; - Simple database seeder for Gorm ORM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gormigrate/gormigrate"&gt;gormigrate&lt;/a&gt; - Database schema migration helper for Gorm ORM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muir/libschema"&gt;libschema&lt;/a&gt; - Define your migrations separately in each library. Migrations for open source libraries. MySQL &amp;amp; PostgreSQL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang-migrate/migrate"&gt;migrate&lt;/a&gt; - Database migrations. CLI and Golang library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lopezator/migrator"&gt;migrator&lt;/a&gt; - Dead simple Go database migration library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/larapulse/migrator"&gt;migrator&lt;/a&gt; - MySQL database migrator designed to run migrations to your features and manage database schema update with intuitive go code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adlio/schema"&gt;schema&lt;/a&gt; - Library to embed schema migrations for database/sql-compatible databases inside your Go binaries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skeema/skeema"&gt;skeema&lt;/a&gt; - Pure-SQL schema management system for MySQL, with support for sharding and external online schema change tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gobuffalo/pop/tree/master/soda"&gt;soda&lt;/a&gt; - Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rubenv/sql-migrate"&gt;sql-migrate&lt;/a&gt; - Database migration tool. Allows embedding migrations into the application using go-bindata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sunary/sqlize"&gt;sqlize&lt;/a&gt; - Database migration generator. Allows generate sql migration from model and existing sql by differ them.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Vertamedia/chproxy"&gt;chproxy&lt;/a&gt; - HTTP proxy for ClickHouse database.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikepan/clickhouse-bulk"&gt;clickhouse-bulk&lt;/a&gt; - Collects small inserts and sends big requests to ClickHouse servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kazhuravlev/database-gateway"&gt;database-gateway&lt;/a&gt; - Running SQL in production with ACLs, logs, and shared links.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sj14/dbbench"&gt;dbbench&lt;/a&gt; - Database benchmarking tool with support for several databases and scripts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codingconcepts/dg"&gt;dg&lt;/a&gt; - A fast data generator that produces CSV files from generated relational data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gatewayd-io/gatewayd"&gt;gatewayd&lt;/a&gt; - Cloud-native database gateway and framework for building data-driven applications. Like API gateways, for databases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/siddontang/go-mysql"&gt;go-mysql&lt;/a&gt; - Go toolset to handle MySQL protocol and replication.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bartventer/gorm-multitenancy"&gt;gorm-multitenancy&lt;/a&gt; - Multi-tenancy support for GORM managed databases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://golang.yandex/hasql"&gt;hasql&lt;/a&gt; - Library for accessing multi-host SQL database installations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knocknote/octillery"&gt;octillery&lt;/a&gt; - Go package for sharding databases ( Supports every ORM or raw SQL ).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liweiyi88/onedump"&gt;onedump&lt;/a&gt; - Database backup from different drivers to different destinations with one command and configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cybertec-postgresql/pg_timetable"&gt;pg_timetable&lt;/a&gt; - Advanced scheduling for PostgreSQL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sosedoff/pgweb"&gt;pgweb&lt;/a&gt; - Web-based PostgreSQL database browser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexdigest/prep"&gt;prep&lt;/a&gt; - Use prepared SQL statements without changing your code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prest/prest"&gt;pREST&lt;/a&gt; - Simplify and accelerate development, ⚡ instant, realtime, high-performance on any Postgres application, existing or new.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HDT3213/rdb"&gt;rdb&lt;/a&gt; - Redis RDB file parser for secondary development and memory analysis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andizzle/rwdb"&gt;rwdb&lt;/a&gt; - rwdb provides read replica capability for multiple database servers setup.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/youtube/vitess"&gt;vitess&lt;/a&gt; - vitess provides servers and tools which facilitate scaling of MySQL databases for large scale web services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wesql/wescale"&gt;wescale&lt;/a&gt; - WeScale is a database proxy designed to enhance the scalability, performance, security, and resilience of your applications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;SQL Query Builders&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for building and using SQL.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nullism/bqb"&gt;bqb&lt;/a&gt; - Lightweight and easy to learn query builder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arthurkushman/buildsqlx"&gt;buildsqlx&lt;/a&gt; - Go database query builder library for PostgreSQL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cristalhq/builq"&gt;builq&lt;/a&gt; - Easily build SQL queries in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rocketlaunchr/dbq"&gt;dbq&lt;/a&gt; - Zero boilerplate database operations for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gchaincl/dotsql"&gt;Dotsql&lt;/a&gt; - Go library that helps you keep sql files in one place and use them with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/didi/gendry"&gt;gendry&lt;/a&gt; - Non-invasive SQL builder and powerful data binder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xujiajun/godbal"&gt;godbal&lt;/a&gt; - Database Abstraction Layer (dbal) for go. Support SQL builder and get result easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/doug-martin/goqu"&gt;goqu&lt;/a&gt; - Idiomatic SQL builder and query library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twharmon/gosql"&gt;gosql&lt;/a&gt; - SQL Query builder with better null values support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/motrboat/hotcoal"&gt;Hotcoal&lt;/a&gt; - Secure your handcrafted SQL against injection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/galeone/igor"&gt;igor&lt;/a&gt; - Abstraction layer for PostgreSQL that supports advanced functionality and uses gorm-like syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-jet/jet"&gt;jet&lt;/a&gt; - Framework for writing type-safe SQL queries in Go, with ability to easily convert database query result into desired arbitrary object structure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pupizoid/ormlite"&gt;ormlite&lt;/a&gt; - Lightweight package containing some ORM-like features and helpers for sqlite databases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ozzo/ozzo-dbx"&gt;ozzo-dbx&lt;/a&gt; - Powerful data retrieval methods as well as DB-agnostic query building capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jacobbrewer1/patcher"&gt;patcher&lt;/a&gt; - Powerful SQL Query builder that automatically generates SQL queries from structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HnH/qry"&gt;qry&lt;/a&gt; - Tool that generates constants from files with raw SQL queries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-the-way/sg"&gt;sg&lt;/a&gt; - A SQL Gen for generating standard SQLs(supports: CRUD) written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bokwoon95/go-structured-query"&gt;sq&lt;/a&gt; - Type-safe SQL builder and struct mapper for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kyleconroy/sqlc"&gt;sqlc&lt;/a&gt; - Generate type-safe code from SQL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leporo/sqlf"&gt;sqlf&lt;/a&gt; - Fast SQL query builder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lqs/sqlingo"&gt;sqlingo&lt;/a&gt; - A lightweight DSL to build SQL in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elgris/sqrl"&gt;sqrl&lt;/a&gt; - SQL query builder, fork of Squirrel with improved performance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/qosenergy/squalus"&gt;Squalus&lt;/a&gt; - Thin layer over the Go SQL package that makes it easier to perform queries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Masterminds/squirrel"&gt;Squirrel&lt;/a&gt; - Go library that helps you build SQL queries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knq/xo"&gt;xo&lt;/a&gt; - Generate idiomatic Go code for databases based on existing schema definitions or custom queries supporting PostgreSQL, MySQL, SQLite, Oracle, and Microsoft SQL Server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Database Drivers&lt;/h2&gt; 
&lt;h3&gt;Interfaces to Multiple Backends&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/cayley"&gt;cayley&lt;/a&gt; - Graph database with support for multiple backends.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/dsc"&gt;dsc&lt;/a&gt; - Datastore connectivity for SQL, NoSQL, structured files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fogfish/dynamo"&gt;dynamo&lt;/a&gt; - A simple key-value abstraction to store algebraic and linked-data data types at AWS storage services: AWS DynamoDB and AWS S3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/avito-tech/go-transaction-manager"&gt;go-transaction-manager&lt;/a&gt; - Transaction manager with multiple adapters (sql, sqlx, gorm, mongo, ...) controls transaction boundaries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philippgille/gokv"&gt;gokv&lt;/a&gt; - Simple key-value store abstraction and implementations for Go (Redis, Consul, etcd, bbolt, BadgerDB, LevelDB, Memcached, DynamoDB, S3, PostgreSQL, MongoDB, CockroachDB and many more).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Relational Database Drivers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apache/calcite-avatica-go"&gt;avatica&lt;/a&gt; - Apache Avatica/Phoenix SQL driver for database/sql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/bgc"&gt;bgc&lt;/a&gt; - Datastore Connectivity for BigQuery for go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nakagami/firebirdsql"&gt;firebirdsql&lt;/a&gt; - Firebird RDBMS SQL driver for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/go-adodb"&gt;go-adodb&lt;/a&gt; - Microsoft ActiveX Object DataBase driver for go that uses database/sql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/denisenkom/go-mssqldb"&gt;go-mssqldb&lt;/a&gt; - Microsoft MSSQL driver for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/go-oci8"&gt;go-oci8&lt;/a&gt; - Oracle driver for go that uses database/sql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rqlite/gorqlite"&gt;go-rqlite&lt;/a&gt; - A Go client for rqlite, providing easy-to-use abstractions for working with the rqlite API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-sql-driver/mysql"&gt;go-sql-driver/mysql&lt;/a&gt; - MySQL driver for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/go-sqlite3"&gt;go-sqlite3&lt;/a&gt; - SQLite3 driver for go that uses database/sql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ncruces/go-sqlite3"&gt;go-sqlite3&lt;/a&gt; - This Go module is compatible with the database/sql driver. It allows embedding SQLite into your application, provides direct access to its C API, supports SQLite VFS, and also includes a GORM driver.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/godror/godror"&gt;godror&lt;/a&gt; - Oracle driver for Go, using the ODPI-C driver.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/minus5/gofreetds"&gt;gofreetds&lt;/a&gt; - Microsoft MSSQL driver. Go wrapper over &lt;a href="https://www.freetds.org"&gt;FreeTDS&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VinGarcia/ksql"&gt;KSQL&lt;/a&gt; - A Simple and Powerful Golang SQL Library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx"&gt;pgx&lt;/a&gt; - PostgreSQL driver supporting features beyond those exposed by database/sql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexeyco/pig"&gt;pig&lt;/a&gt; - Simple &lt;a href="https://github.com/jackc/pgx"&gt;pgx&lt;/a&gt; wrapper to execute and &lt;a href="https://github.com/georgysavva/scany"&gt;scan&lt;/a&gt; query results easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lib/pq"&gt;pq&lt;/a&gt; - Pure Go Postgres driver for database/sql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cvilsmeier/sqinn-go"&gt;Sqinn-Go&lt;/a&gt; - SQLite with pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qustavo/sqlhooks"&gt;sqlhooks&lt;/a&gt; - Attach hooks to any database/sql driver.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/modernc.org/sqlite"&gt;sqlite&lt;/a&gt; - Package sqlite is a sql/database driver using a CGo-free port of the C SQLite3 library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/surrealdb/surrealdb.go"&gt;surrealdb.go&lt;/a&gt; - SurrealDB Driver for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ydb-platform/ydb-go-sdk"&gt;ydb-go-sdk&lt;/a&gt; - native and database/sql driver YDB (Yandex Database).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;NoSQL Database Drivers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aerospike/aerospike-client-go"&gt;aerospike-client-go&lt;/a&gt; - Aerospike client in Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/solher/arangolite"&gt;arangolite&lt;/a&gt; - Lightweight golang driver for ArangoDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/asc"&gt;asc&lt;/a&gt; - Datastore Connectivity for Aerospike for go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/couchbase/goforestdb"&gt;forestdb&lt;/a&gt; - Go bindings for ForestDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/couchbase/go-couchbase"&gt;go-couchbase&lt;/a&gt; - Couchbase client in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chenmingyong0423/go-mongox"&gt;go-mongox&lt;/a&gt; - A Go Mongo library based on the official driver, featuring streamlined document operations, generic binding of structs to collections, built-in CRUD, aggregation, automated field updates, struct validation, hooks, and plugin-based programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pilosa/go-pilosa"&gt;go-pilosa&lt;/a&gt; - Go client library for Pilosa.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nitishm/go-rejson"&gt;go-rejson&lt;/a&gt; - Golang client for redislabs' ReJSON module using Redigo golang client. Store and manipulate structs as JSON objects in redis with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/couchbase/gocb"&gt;gocb&lt;/a&gt; - Official Couchbase Go SDK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/btnguyen2k/gocosmos"&gt;gocosmos&lt;/a&gt; - REST client and standard &lt;code&gt;database/sql&lt;/code&gt; driver for Azure Cosmos DB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gocql.github.io"&gt;gocql&lt;/a&gt; - Go language driver for Apache Cassandra.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/piaohao/godis"&gt;godis&lt;/a&gt; - redis client implement by golang, inspired by jedis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/defcronyke/godscache"&gt;godscache&lt;/a&gt; - A wrapper for the Google Cloud Platform Go Datastore package that adds caching using memcached.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bradfitz/gomemcache/"&gt;gomemcache&lt;/a&gt; - memcache client library for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aliexpressru/gomemcached"&gt;gomemcached&lt;/a&gt; - A binary Memcached client for Go with support for sharding using consistent hashing, along with SASL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dancannon/gorethink"&gt;gorethink&lt;/a&gt; - Go language driver for RethinkDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zegl/goriak"&gt;goriak&lt;/a&gt; - Go language driver for Riak KV.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-kivik/kivik"&gt;Kivik&lt;/a&gt; - Kivik provides a common Go and GopherJS client library for CouchDB, PouchDB, and similar databases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamva/mgm"&gt;mgm&lt;/a&gt; - MongoDB model-based ODM for Go (based on official MongoDB driver).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/globalsign/mgo"&gt;mgo&lt;/a&gt; - (unmaintained) MongoDB driver for the Go language that implements a rich and well tested selection of features under a very simple API following standard Go idioms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mongodb/mongo-go-driver"&gt;mongo-go-driver&lt;/a&gt; - Official MongoDB driver for the Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cihangir/neo4j"&gt;neo4j&lt;/a&gt; - Neo4j Rest API Bindings for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmcvetta/neoism"&gt;neoism&lt;/a&gt; - Neo4j client for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qiniu/qmgo"&gt;qmgo&lt;/a&gt; - The MongoDB driver for Go. It‘s based on official MongoDB driver but easier to use like Mgo.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bsm/redeo"&gt;redeo&lt;/a&gt; - Redis-protocol compatible TCP servers/services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gomodule/redigo"&gt;redigo&lt;/a&gt; - Redigo is a Go client for the Redis database.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/redis/go-redis"&gt;redis&lt;/a&gt; - Redis client for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://github.com/rueian/rueidis"&gt;rueidis&lt;/a&gt; - Fast Redis RESP3 client with auto pipelining and server-assisted client side caching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shomali11/xredis"&gt;xredis&lt;/a&gt; - Typesafe, customizable, clean &amp;amp; easy to use Redis client.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Search and Analytic Databases&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ClickHouse/clickhouse-go/"&gt;clickhouse-go&lt;/a&gt; - ClickHouse SQL client for Go with a &lt;code&gt;database/sql&lt;/code&gt; compatibility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sdqri/effdsl"&gt;effdsl&lt;/a&gt; - Elasticsearch query builder for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/olivere/elastic"&gt;elastic&lt;/a&gt; - Elasticsearch client for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cch123/elasticsql"&gt;elasticsql&lt;/a&gt; - Convert sql to elasticsearch dsl in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattbaird/elastigo"&gt;elastigo&lt;/a&gt; - Elasticsearch client library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elastic/go-elasticsearch"&gt;go-elasticsearch&lt;/a&gt; - Official Elasticsearch client for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OwnLocal/goes"&gt;goes&lt;/a&gt; - Library to interact with Elasticsearch.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seiflotfy/skizze"&gt;skizze&lt;/a&gt; - probabilistic data-structures service and storage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sourcegraph/zoekt"&gt;zoekt&lt;/a&gt; - Fast trigram based code search.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Date and Time&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with dates and times.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goschtalt/approx"&gt;approx&lt;/a&gt; - A Duration extension supporting parsing/printing durations in days, weeks and years.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dromara/carbon"&gt;carbon&lt;/a&gt; - A simple, semantic and developer-friendly time package for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uniplaces/carbon"&gt;carbon&lt;/a&gt; - Simple Time extension with a lot of util methods, ported from PHP Carbon library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1set/cronrange"&gt;cronrange&lt;/a&gt; - Parses Cron-style time range expressions, checks if the given time is within any ranges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rickb777/date"&gt;date&lt;/a&gt; - Augments Time for working with dates, date ranges, time spans, periods, and time-of-day.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/araddon/dateparse"&gt;dateparse&lt;/a&gt; - Parse date's without knowing format in advance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hako/durafmt"&gt;durafmt&lt;/a&gt; - Time duration formatting library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wlbr/feiertage"&gt;feiertage&lt;/a&gt; - Set of functions to calculate public holidays in Germany, incl. specialization on the states of Germany (Bundesländer). Things like Easter, Pentecost, Thanksgiving...&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ijt/go-anytime"&gt;go-anytime&lt;/a&gt; - Parse dates/times like "next dec 22nd at 3pm" and ranges like "from today until next thursday" without knowing the format in advance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deatil/go-datebin"&gt;go-datebin&lt;/a&gt; - A simple datetime parse pkg.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaa110/go-persian-calendar"&gt;go-persian-calendar&lt;/a&gt; - The implementation of the Persian (Solar Hijri) Calendar in Go (golang).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xhit/go-str2duration"&gt;go-str2duration&lt;/a&gt; - Convert string to duration. Support time.Duration returned string and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nathan-osman/go-sunrise"&gt;go-sunrise&lt;/a&gt; - Calculate the sunrise and sunset times for a given location.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stoewer/go-week"&gt;go-week&lt;/a&gt; - An efficient package to work with ISO8601 week dates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bykof/gostradamus"&gt;gostradamus&lt;/a&gt; - A Go package for working with dates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/relvacode/iso8601"&gt;iso8601&lt;/a&gt; - Efficiently parse ISO8601 date-times without regex.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GuilhermeCaruso/kair"&gt;kair&lt;/a&gt; - Date and Time - Golang Formatting Library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jinzhu/now"&gt;now&lt;/a&gt; - Now is a time toolkit for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awoodbeck/strftime"&gt;strftime&lt;/a&gt; - C99-compatible strftime formatter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SaidinWoT/timespan"&gt;timespan&lt;/a&gt; - For interacting with intervals of time, defined as a start time and a duration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leekchan/timeutil"&gt;timeutil&lt;/a&gt; - Useful extensions (Timedelta, Strftime, ...) to the golang's time package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osteele/tuesday"&gt;tuesday&lt;/a&gt; - Ruby-compatible Strftime function.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Distributed Systems&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Packages that help with building Distributed Systems.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lesismal/arpc"&gt;arpc&lt;/a&gt; - More effective network communication, support two-way-calling, notify, broadcast.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/z5labs/bedrock"&gt;bedrock&lt;/a&gt; - Provides a minimal, modular and composable foundation for quickly developing services and more use case specific frameworks in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/capillariesio/capillaries"&gt;capillaries&lt;/a&gt; - distributed batch data processing framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/svcavallar/celeriac.v1"&gt;celeriac&lt;/a&gt; - Library for adding support for interacting and monitoring Celery workers, tasks and events in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vadiminshakov/committer"&gt;committer&lt;/a&gt; - A distributed transactions management system (2PC/3PC implementation).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buraksezer/consistent"&gt;consistent&lt;/a&gt; - Consistent hashing with bounded loads.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mbrostami/consistenthash"&gt;consistenthash&lt;/a&gt; - Consistent hashing with configurable replicas.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anacrolix/dht"&gt;dht&lt;/a&gt; - BitTorrent Kademlia DHT implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/digota/digota"&gt;digota&lt;/a&gt; - grpc ecommerce microservice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dotchain/dot/"&gt;dot&lt;/a&gt; - distributed sync using operational transformation/OT.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edwingeng/doublejump"&gt;doublejump&lt;/a&gt; - A revamped Google's jump consistent hash.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lni/dragonboat"&gt;dragonboat&lt;/a&gt; - A feature complete and high performance multi-group Raft library in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dragonflyoss/Dragonfly2"&gt;Dragonfly&lt;/a&gt; - Provide efficient, stable and secure file distribution and image acceleration based on p2p technology to be the best practice and standard solution in cloud native architectures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dgruber/drmaa"&gt;drmaa&lt;/a&gt; - Job submission library for cluster schedulers based on the DRMAA standard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cirello.io/dynamolock"&gt;dynamolock&lt;/a&gt; - DynamoDB-backed distributed locking implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tylfin/dynatomic"&gt;dynatomic&lt;/a&gt; - A library for using DynamoDB as an atomic counter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emitter-io/emitter"&gt;emitter-io&lt;/a&gt; - High performance, distributed, secure and low latency publish-subscribe platform built with MQTT, Websockets and love.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ktr0731/evans"&gt;evans&lt;/a&gt; - Evans: more expressive universal gRPC client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andy2046/failured"&gt;failured&lt;/a&gt; - adaptive accrual failure detector for distributed systems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vectaport/flowgraph"&gt;flowgraph&lt;/a&gt; - flow-based programming package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrislusf/gleam"&gt;gleam&lt;/a&gt; - Fast and scalable distributed map/reduce system written in pure Go and Luajit, combining Go's high concurrency with Luajit's high performance, runs standalone or distributed.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrislusf/glow"&gt;glow&lt;/a&gt; - Easy-to-Use scalable distributed big data processing, Map-Reduce, DAG execution, all in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gmsec/micro"&gt;gmsec&lt;/a&gt; - A Go distributed systems development framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unionj-cloud/go-doudou"&gt;go-doudou&lt;/a&gt; - A gossip protocol and OpenAPI 3.0 spec based decentralized microservice framework. Built-in go-doudou cli focusing on low-code and rapid dev can power up your productivity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-eagle/eagle"&gt;go-eagle&lt;/a&gt; - A Go framework for the API or Microservice with handy scaffolding tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/InVisionApp/go-health"&gt;go-health&lt;/a&gt; - Library for enabling asynchronous dependency health checks in your service.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dgryski/go-jump"&gt;go-jump&lt;/a&gt; - Port of Google's "Jump" Consistent Hash function.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-kit/kit"&gt;go-kit&lt;/a&gt; - Microservice toolkit with support for service discovery, load balancing, pluggable transports, request tracking, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/micro/go-micro"&gt;go-micro&lt;/a&gt; - A distributed systems development framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sanketplus/go-mysql-lock"&gt;go-mysql-lock&lt;/a&gt; - MySQL based distributed lock.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pdupub/go-pdu"&gt;go-pdu&lt;/a&gt; - A decentralized identity-based social network.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AppsFlyer/go-sundheit"&gt;go-sundheit&lt;/a&gt; - A library built to provide support for defining async service health checks for golang services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tal-tech/go-zero"&gt;go-zero&lt;/a&gt; - A web and rpc framework. It's born to ensure the stability of the busy sites with resilient design. Builtin goctl greatly improves the development productivity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/valyala/gorpc"&gt;gorpc&lt;/a&gt; - Simple, fast and scalable RPC library for high load.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/grpc/grpc-go"&gt;grpc-go&lt;/a&gt; - The Go language implementation of gRPC. HTTP/2 based RPC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hprose/hprose-golang"&gt;hprose&lt;/a&gt; - Very newbility RPC Library, support 25+ languages now.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osamingo/jsonrpc"&gt;jsonrpc&lt;/a&gt; - The jsonrpc package helps implement of JSON-RPC 2.0.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ybbus/jsonrpc"&gt;jsonrpc&lt;/a&gt; - JSON-RPC 2.0 HTTP client implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/k8gb-io/k8gb"&gt;K8gb&lt;/a&gt; - A cloud native Kubernetes Global Balancer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudwego/kitex"&gt;Kitex&lt;/a&gt; - A high-performance and strong-extensibility Golang RPC framework that helps developers build microservices. If the performance and extensibility are the main concerns when you develop microservices, Kitex can be a good choice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-kratos/kratos"&gt;Kratos&lt;/a&gt; - A modular-designed and easy-to-use microservices framework in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liftbridge-io/liftbridge"&gt;liftbridge&lt;/a&gt; - Lightweight, fault-tolerant message streams for NATS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/luraproject/lura"&gt;lura&lt;/a&gt; - Ultra performant API Gateway framework with middlewares.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/micro/micro"&gt;micro&lt;/a&gt; - A distributed systems runtime for the cloud and beyond.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mochi-co/mqtt"&gt;mochi mqtt&lt;/a&gt; - Fully spec compliant, embeddable high-performance MQTT v5/v3 broker for IoT, smarthome, and pubsub.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nats-io/nats-server"&gt;NATS&lt;/a&gt; - NATS is a simple, secure, and performant communications system for digital systems, services, and devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alibaba/opentelemetry-go-auto-instrumentation"&gt;opentelemetry-go-auto-instrumentation&lt;/a&gt; - OpenTelemetry Compile-Time Instrumentation for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oagudo/outbox"&gt;outbox&lt;/a&gt; - Lightweight library for the transactional outbox pattern in Go, not tied to any specific relational database or broker.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/italolelis/outboxer"&gt;outboxer&lt;/a&gt; - Outboxer is a go library that implements the outbox pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cirello.io/pglock"&gt;pglock&lt;/a&gt; - PostgreSQL-backed distributed locking implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/pjrpc/pjrpc"&gt;pjrpc&lt;/a&gt; - Golang JSON-RPC Server-Client with Protobuf spec.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/raft"&gt;raft&lt;/a&gt; - Golang implementation of the Raft consensus protocol, by HashiCorp.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/etcd-io/raft"&gt;raft&lt;/a&gt; - Go implementation of the Raft consensus protocol, by CoreOS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cenkalti/rain"&gt;rain&lt;/a&gt; - BitTorrent client and library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bsm/redislock"&gt;redis-lock&lt;/a&gt; - Simplified distributed locking implementation using Redis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://resgate.io/"&gt;resgate&lt;/a&gt; - Realtime API Gateway for building REST, real time, and RPC APIs, where all clients are synchronized seamlessly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber/ringpop-go"&gt;ringpop-go&lt;/a&gt; - Scalable, fault-tolerant application-layer sharding for Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/smallnest/rpcx"&gt;rpcx&lt;/a&gt; - Distributed pluggable RPC service framework like alibaba Dubbo.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jexia/semaphore"&gt;Semaphore&lt;/a&gt; - A straightforward (micro) service orchestrator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ursiform/sleuth"&gt;sleuth&lt;/a&gt; - Library for master-less p2p auto-discovery and RPC between HTTP services (using &lt;a href="https://github.com/zeromq/libzmq"&gt;ZeroMQ&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zhufuyi/sponge"&gt;sponge&lt;/a&gt; - A distributed development framework that integrates automatic code generation, gin and grpc frameworks, base development frameworks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tarmac-project/tarmac"&gt;Tarmac&lt;/a&gt; - Framework for writing functions, microservices, or monoliths with WebAssembly&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/temporalio/sdk-go"&gt;Temporal&lt;/a&gt; - Durable execution system for making code fault-tolerant and simple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anacrolix/torrent"&gt;torrent&lt;/a&gt; - BitTorrent client package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trpc-group/trpc-go"&gt;trpc-go&lt;/a&gt; - The Go language implementation of tRPC, which is a pluggable, high-performance RPC framework.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Dynamic DNS&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools for updating dynamic DNS records.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skibish/ddns"&gt;DDNS&lt;/a&gt; - Personal DDNS client with Digital Ocean Networking DNS as backend.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/alcastle/dyndns"&gt;dyndns&lt;/a&gt; - Background Go process to regularly and automatically check your IP Address and make updates to (one or many) Dynamic DNS records for Google domains whenever your address changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timothyye/godns"&gt;GoDNS&lt;/a&gt; - A dynamic DNS client tool, supports DNSPod &amp;amp; HE.net, written in Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Email&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools that implement email creation and sending.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blitiri.com.ar/p/chasquid"&gt;chasquid&lt;/a&gt; - SMTP server written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aymerick/douceur"&gt;douceur&lt;/a&gt; - CSS inliner for your HTML emails.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jordan-wright/email"&gt;email&lt;/a&gt; - A robust and flexible email library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AfterShip/email-verifier"&gt;email-verifier&lt;/a&gt; - A Go library for email verification without sending any emails.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/toorop/go-dkim"&gt;go-dkim&lt;/a&gt; - DKIM library, to sign &amp;amp; verify email.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dimuska139/go-email-normalizer"&gt;go-email-normalizer&lt;/a&gt; - Golang library for providing a canonical representation of email address.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-email-validator/go-email-validator"&gt;go-email-validator&lt;/a&gt; - Modular email validator for syntax, disposable, smtp, etc... checking.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emersion/go-imap"&gt;go-imap&lt;/a&gt; - IMAP library for clients and servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wneessen/go-mail"&gt;go-mail&lt;/a&gt; - A simple Go library for sending mails in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emersion/go-message"&gt;go-message&lt;/a&gt; - Streaming library for the Internet Message Format and mail messages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vanng822/go-premailer"&gt;go-premailer&lt;/a&gt; - Inline styling for HTML mail in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xhit/go-simple-mail"&gt;go-simple-mail&lt;/a&gt; - Very simple package to send emails with SMTP Keep Alive and two timeouts: Connect and Send.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hectane/hectane"&gt;Hectane&lt;/a&gt; - Lightweight SMTP client providing an HTTP API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matcornic/hermes"&gt;hermes&lt;/a&gt; - Golang package that generates clean, responsive HTML e-mails.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/foxcpp/maddy"&gt;Maddy&lt;/a&gt; - All-in-one (SMTP, IMAP, DKIM, DMARC, MTA-STS, DANE) email server&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mailchain/mailchain"&gt;mailchain&lt;/a&gt; - Send encrypted emails to blockchain addresses written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mailgun/mailgun-go"&gt;mailgun-go&lt;/a&gt; - Go library for sending mail with the Mailgun API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mailhog/MailHog"&gt;MailHog&lt;/a&gt; - Email and SMTP testing with web and API interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axllent/mailpit"&gt;Mailpit&lt;/a&gt; - Email and SMTP testing tool for developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/valord577/mailx"&gt;mailx&lt;/a&gt; - Mailx is a library that makes it easier to send email via SMTP. It is an enhancement of the golang standard library &lt;code&gt;net/smtp&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mjl-/mox"&gt;mox&lt;/a&gt; - Modern full-featured secure mail server for low-maintenance, self-hosted email.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sendgrid/sendgrid-go"&gt;SendGrid&lt;/a&gt; - SendGrid's Go library for sending email.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mailhog/smtp"&gt;smtp&lt;/a&gt; - SMTP server protocol state machine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mocktools/go-smtp-mock"&gt;smtpmock&lt;/a&gt; - Lightweight configurable multithreaded fake SMTP server. Mimic any SMTP behaviour for your test environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/truemail-rb/truemail-go"&gt;truemail-go&lt;/a&gt; - Configurable Golang email validator/verifier. Verify email via Regex, DNS, SMTP and even more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Embeddable Scripting Languages&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Embedding other languages inside your go code.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/anko"&gt;anko&lt;/a&gt; - Scriptable interpreter written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexeyco/binder"&gt;binder&lt;/a&gt; - Go to Lua binding library, based on &lt;a href="https://github.com/yuin/gopher-lua"&gt;gopher-lua&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/cel-go"&gt;cel-go&lt;/a&gt; - Fast, portable, non-Turing complete expression evaluation with gradual typing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/krotik/ecal"&gt;ecal&lt;/a&gt; - A simple embeddable scripting language which supports concurrent event processing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antonmedv/expr"&gt;expr&lt;/a&gt; - Expression evaluation engine for Go: fast, non-Turing complete, dynamic typing, static typing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dunglas/frankenphp"&gt;FrankenPHP&lt;/a&gt; - PHP embedded in Go, with a &lt;code&gt;net/http&lt;/code&gt; handler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gentee/gentee"&gt;gentee&lt;/a&gt; - Embeddable scripting programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jcla1/gisp"&gt;gisp&lt;/a&gt; - Simple LISP in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/olebedev/go-duktape"&gt;go-duktape&lt;/a&gt; - Duktape JavaScript engine bindings for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Shopify/go-lua"&gt;go-lua&lt;/a&gt; - Port of the Lua 5.2 VM to pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deuill/go-php"&gt;go-php&lt;/a&gt; - PHP bindings for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sbinet/go-python"&gt;go-python&lt;/a&gt; - naive go bindings to the CPython C-API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeberg.org/anaseto/goal"&gt;goal&lt;/a&gt; - An embeddable scripting array language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dop251/goja"&gt;goja&lt;/a&gt; - ECMAScript 5.1(+) implementation in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aarzilli/golua"&gt;golua&lt;/a&gt; - Go bindings for Lua C API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuin/gopher-lua"&gt;gopher-lua&lt;/a&gt; - Lua 5.1 VM and compiler written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PaesslerAG/gval"&gt;gval&lt;/a&gt; - A highly customizable expression language written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/metacall/core"&gt;metacall&lt;/a&gt; - Cross-platform Polyglot Runtime which supports NodeJS, JavaScript, TypeScript, Python, Ruby, C#, WebAssembly, Java, Cobol and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/db47h/ngaro"&gt;ngaro&lt;/a&gt; - Embeddable Ngaro VM implementation enabling scripting in Retro.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ichiban/prolog"&gt;prolog&lt;/a&gt; - Embeddable Prolog.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ian-kent/purl"&gt;purl&lt;/a&gt; - Perl 5.18.2 embedded in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/starlark-go"&gt;starlark-go&lt;/a&gt; - Go implementation of Starlark: Python-like language with deterministic evaluation and hermetic execution.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1set/starlet"&gt;starlet&lt;/a&gt; - Go wrapper for &lt;a href="https://github.com/google/starlark-go"&gt;starlark-go&lt;/a&gt; that simplifies script execution, offers data conversion, and useful Starlark libraries and extensions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/d5/tengo"&gt;tengo&lt;/a&gt; - Bytecode compiled script language for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wa-lang/wa"&gt;Wa/凹语言&lt;/a&gt; - The Wa Programming Language embedded in Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Error Handling&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for handling errors.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emperror/emperror"&gt;emperror&lt;/a&gt; - Error handling tools and best practices for Go libraries and applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rotisserie/eris"&gt;eris&lt;/a&gt; - A better way to handle, trace, and log errors in Go. Compatible with the standard error library and github.com/pkg/errors.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/snwfdhmp/errlog"&gt;errlog&lt;/a&gt; - Hackable package that determines responsible source code for an error (and some other fast-debugging features). Pluggable to any logger in-place.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emperror/errors"&gt;errors&lt;/a&gt; - Drop-in replacement for the standard library errors package and github.com/pkg/errors. Provides various error handling primitives.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neuronlabs/errors"&gt;errors&lt;/a&gt; - Simple golang error handling with classification primitives.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PumpkinSeed/errors"&gt;errors&lt;/a&gt; - The most simple error wrapper with awesome performance and minimal memory overhead.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/tozd/go/errors"&gt;errors&lt;/a&gt; - Providing errors with a stack trace and optional structured details. Compatible with github.com/pkg/errors API but does not use it internally.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naughtygopher/errors"&gt;errors&lt;/a&gt; - Drop-in replacement for builtin Go errors. This is a minimal error handling package with custom error types, user friendly messages, Unwrap &amp;amp; Is. With very easy to use and straightforward helper functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cockroachdb/errors"&gt;errors&lt;/a&gt; - Go error library with error portability over the network.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joomcode/errorx"&gt;errorx&lt;/a&gt; - A feature rich error package with stack traces, composition of errors and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rbrahul/exception"&gt;exception&lt;/a&gt; - A simple utility package for exception handling with try-catch in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SonicRoshan/falcon"&gt;Falcon&lt;/a&gt; - A Simple Yet Highly Powerful Package For Error Handling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Southclaws/fault"&gt;Fault&lt;/a&gt; - An ergonomic mechanism for wrapping errors in order to facilitate structured metadata and context for error values.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/go-multierror"&gt;go-multierror&lt;/a&gt; - Go (golang) package for representing a list of errors as a single error.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quantumcycle/metaerr"&gt;metaerr&lt;/a&gt; - A library to create your custom error builders producing structured errors with metadata from different sources and optional stacktraces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber-go/multierr"&gt;multierr&lt;/a&gt; - Package for representing a list of errors as a single error.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/oops"&gt;oops&lt;/a&gt; - Error handling with context, stack trace and source fragments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ztrue/tracerr"&gt;tracerr&lt;/a&gt; - Golang errors with stack trace and source fragments.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;File Handling&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for handling files and file systems.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spf13/afero"&gt;afero&lt;/a&gt; - FileSystem Abstraction System for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/afs"&gt;afs&lt;/a&gt; - Abstract File Storage (mem, scp, zip, tar, cloud: s3, gs) for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xis/baraka"&gt;baraka&lt;/a&gt; - A library to process http file uploads easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codingsince1985/checksum"&gt;checksum&lt;/a&gt; - Compute message digest, like MD5, SHA256, SHA1, CRC or BLAKE2s, for large files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/otiai10/copy"&gt;copy&lt;/a&gt; - Copy directory recursively.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charlievieth/fastwalk"&gt;fastwalk&lt;/a&gt; - Fast parallel directory traversal library (used by &lt;a href="https://github.com/junegunn/fzf"&gt;fzf&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/homedepot/flop"&gt;flop&lt;/a&gt; - File operations library which aims to mirror feature parity with &lt;a href="https://www.gnu.org/software/coreutils/manual/html_node/cp-invocation.html"&gt;GNU cp&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dundee/gdu"&gt;gdu&lt;/a&gt; - Disk usage analyzer with console interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/artonge/go-csv-tag"&gt;go-csv-tag&lt;/a&gt; - Load csv file using tag.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hugocarreira/go-decent-copy"&gt;go-decent-copy&lt;/a&gt; - Copy files for humans.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/barasher/go-exiftool"&gt;go-exiftool&lt;/a&gt; - Go bindings for ExifTool, the well-known library used to extract as much metadata as possible (EXIF, IPTC, ...) from files (pictures, PDF, office, ...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/artonge/go-gtfs"&gt;go-gtfs&lt;/a&gt; - Load gtfs files in go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SebastiaanKlippert/go-wkhtmltopdf"&gt;go-wkhtmltopdf&lt;/a&gt; - A package to convert an HTML template to a PDF file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/no-src/gofs"&gt;gofs&lt;/a&gt; - A cross-platform real-time file synchronization tool out of the box.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adelowo/gulter"&gt;gulter&lt;/a&gt; - A simple HTTP middleware to automatically handle all your file upload needs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1set/gut"&gt;gut/yos&lt;/a&gt; - Simple and reliable package for file operations like copy/move/diff/list on files, directories and symbolic links.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dastoori/higgs"&gt;higgs&lt;/a&gt; - A tiny cross-platform Go library to hide/unhide files and directories.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kdomanski/iso9660"&gt;iso9660&lt;/a&gt; - A package for reading and creating ISO9660 disk images&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rjeczalik/notify"&gt;notify&lt;/a&gt; - File system event notification library with simple API, similar to os/signal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qmuntal/opc"&gt;opc&lt;/a&gt; - Load Open Packaging Conventions (OPC) files for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/parsyl/parquet"&gt;parquet&lt;/a&gt; - Read and write &lt;a href="https://parquet.apache.org"&gt;parquet&lt;/a&gt; files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonchun/pathtype"&gt;pathtype&lt;/a&gt; - Treat paths as their own type instead of using strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pdfcpu/pdfcpu"&gt;pdfcpu&lt;/a&gt; - PDF processor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dixonwille/skywalker"&gt;skywalker&lt;/a&gt; - Package to allow one to concurrently go through a filesystem with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1set/todotxt"&gt;todotxt&lt;/a&gt; - Go library for Gina Trapani's &lt;a href="http://todotxt.org/"&gt;&lt;em&gt;todo.txt&lt;/em&gt;&lt;/a&gt; files, supports parsing and manipulating of task lists in the &lt;a href="https://github.com/todotxt/todo.txt"&gt;&lt;em&gt;todo.txt&lt;/em&gt; format&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/C2FO/vfs"&gt;vfs&lt;/a&gt; - A pluggable, extensible, and opinionated set of filesystem functionality for Go across a number of filesystem types such as os, S3, and GCS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Financial&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Packages for accounting and finance.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leekchan/accounting"&gt;accounting&lt;/a&gt; - money and currency formatting for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moov-io/ach"&gt;ach&lt;/a&gt; - A reader, writer, and validator for Automated Clearing House (ACH) files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/c9s/bbgo"&gt;bbgo&lt;/a&gt; - A crypto trading bot framework written in Go. Including common crypto exchange API, standard indicators, back-testing and many built-in strategies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bojanz/currency"&gt;currency&lt;/a&gt; - Handles currency amounts, provides currency information and formatting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naughtygopher/currency"&gt;currency&lt;/a&gt; - High performant &amp;amp; accurate currency computation package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shopspring/decimal"&gt;decimal&lt;/a&gt; - Arbitrary-precision fixed-point decimal numbers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/govalues/decimal"&gt;decimal&lt;/a&gt; - Immutable decimal numbers with panic-free arithmetic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/fpdecimal"&gt;fpdecimal&lt;/a&gt; - Fast and precise serialization and arithmetic for small fixed-point decimals&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/fpmoney"&gt;fpmoney&lt;/a&gt; - Fast and simple ISO4217 fixed-point decimal money.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alpeb/go-finance"&gt;go-finance&lt;/a&gt; - Library of financial functions for time value of money (annuities), cash flow, interest rate conversions, bonds and depreciation calculations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pieterclaerhout/go-finance"&gt;go-finance&lt;/a&gt; - Module to fetch exchange rates, check VAT numbers via VIES and check IBAN bank account numbers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/m1/go-finnhub"&gt;go-finnhub&lt;/a&gt; - Client for stock market, forex and crypto data from finnhub.io. Access real-time financial market data from 60+ stock exchanges, 10 forex brokers, and 15+ crypto exchanges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rhymond/go-money"&gt;go-money&lt;/a&gt; - Implementation of Fowler's Money pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matm/go-nowpayments"&gt;go-nowpayments&lt;/a&gt; - Library for the crypto NOWPayments API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/formancehq/ledger"&gt;ledger&lt;/a&gt; - A programmable financial ledger that provides a foundation for money-moving applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/govalues/money"&gt;money&lt;/a&gt; - Immutable monetary amounts and exchange rates with panic-free arithmetic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aclindsa/ofxgo"&gt;ofxgo&lt;/a&gt; - Query OFX servers and/or parse the responses (with example command-line client).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/i25959341/orderbook"&gt;orderbook&lt;/a&gt; - Matching Engine for Limit Order Book in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jovandeginste/payme"&gt;payme&lt;/a&gt; - QR code generator (ASCII &amp;amp; PNG) for SEPA payments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BoltApp/sleet"&gt;sleet&lt;/a&gt; - One unified interface for multiple Payment Service Providers (PsP) to process online payment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.pfad.fr/swift/"&gt;swift&lt;/a&gt; - Offline validity check of IBAN (International Bank Account Number) and retrieval of BIC (for some countries).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sdcoffey/techan"&gt;techan&lt;/a&gt; - Technical analysis library with advanced market analysis and trading strategies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/achannarasappa/ticker"&gt;ticker&lt;/a&gt; - Terminal stock watcher and stock position tracker.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/claygod/transaction"&gt;transaction&lt;/a&gt; - Embedded transactional database of accounts, running in multithreaded mode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quagmt/udecimal"&gt;udecimal&lt;/a&gt; - High performance, high precision, zero allocation fixed-point decimal library for financial applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dannyvankooten/vat"&gt;vat&lt;/a&gt; - VAT number validation &amp;amp; EU VAT rates.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Forms&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with forms.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/robfig/bind"&gt;bind&lt;/a&gt; - Bind form data to any Go values.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cinar/checker"&gt;checker&lt;/a&gt; - Checker helps validating user input through rules defined in struct tags or directly through functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leebenson/conform"&gt;conform&lt;/a&gt; - Keeps user input in check. Trims, sanitizes &amp;amp; scrubs data based on struct tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/form"&gt;form&lt;/a&gt; - Decodes url.Values into Go value(s) and Encodes Go value(s) into url.Values. Dual Array and Full map support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/monoculum/formam"&gt;formam&lt;/a&gt; - decode form's values into a struct.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/albrow/forms"&gt;forms&lt;/a&gt; - Framework-agnostic library for parsing and validating form/JSON data which supports multipart forms and files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bdjimmy/gbind"&gt;gbind&lt;/a&gt; - Bind data to any Go value. Can use built-in and custom expression binding capabilities; supports data validation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gorilla/csrf"&gt;gorilla/csrf&lt;/a&gt; - CSRF protection for Go web applications &amp;amp; services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggicci/httpin"&gt;httpin&lt;/a&gt; - Decode an HTTP request into a custom struct, including querystring, forms, HTTP headers, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/justinas/nosurf"&gt;nosurf&lt;/a&gt; - CSRF protection middleware for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sonh/qs"&gt;qs&lt;/a&gt; - Go module for encoding structs into URL query parameters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomwright/queryparam"&gt;queryparam&lt;/a&gt; - Decode &lt;code&gt;url.Values&lt;/code&gt; into usable struct values of standard or custom types.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Functional&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Packages to support functional programming in Go.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/repeale/fp-go"&gt;fp-go&lt;/a&gt; - Collection of Functional Programming helpers powered by Golang 1.18+ generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TeaEntityLab/fpGo"&gt;fpGo&lt;/a&gt; - Monad, Functional Programming features for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seborama/fuego"&gt;fuego&lt;/a&gt; - Functional Experiment in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BooleanCat/go-functional"&gt;go-functional&lt;/a&gt; - Functional programming in Go using generics&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tobyhede/go-underscore"&gt;go-underscore&lt;/a&gt; - Useful collection of helpfully functional Go collection utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rbrahul/gofp"&gt;gofp&lt;/a&gt; - A lodash like powerful utility library for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/mo"&gt;mo&lt;/a&gt; - Monads and popular FP abstractions, based on Go 1.18+ Generics (Option, Result, Either...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rjNemo/underscore"&gt;underscore&lt;/a&gt; - Functional programming helpers for Go 1.18 and beyond.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/phelmkamp/valor"&gt;valor&lt;/a&gt; - Generic option and result types that optionally contain a value.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Game Development&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Awesome game development libraries.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mlange-42/ark"&gt;Ark&lt;/a&gt; - Archetype-based Entity Component System (ECS) for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hajimehoshi/ebiten"&gt;Ebitengine&lt;/a&gt; - dead simple 2D game engine in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygeiss/ecs"&gt;ecs&lt;/a&gt; - Build your own Game-Engine based on the Entity Component System concept in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EngoEngine/engo"&gt;engo&lt;/a&gt; - Engo is an open-source 2D game engine written in Go. It follows the Entity-Component-System paradigm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s0rg/fantasyname"&gt;fantasyname&lt;/a&gt; - Fantasy names generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/g3n/engine"&gt;g3n&lt;/a&gt; - Go 3D Game Engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/beefsack/go-astar"&gt;go-astar&lt;/a&gt; - Go implementation of the A* path finding algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/veandco/go-sdl2"&gt;go-sdl2&lt;/a&gt; - Go bindings for the &lt;a href="https://www.libsdl.org/"&gt;Simple DirectMedia Layer&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ungerik/go3d"&gt;go3d&lt;/a&gt; - Performance oriented 2D/3D math package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xtaci/gonet"&gt;gonet&lt;/a&gt; - Game server skeleton implemented with golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xiaonanln/goworld"&gt;goworld&lt;/a&gt; - Scalable game server engine, featuring space-entity framework and hot-swapping.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s0rg/grid"&gt;grid&lt;/a&gt; - Generic 2D grid with ray-casting, shadow-casting and path finding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/harfang3d/harfang3d"&gt;Harfang3D&lt;/a&gt; - 3D engine for the Go language, works on Windows and Linux (&lt;a href="https://github.com/harfang3d/harfang-go"&gt;Harfang on Go.dev&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/name5566/leaf"&gt;Leaf&lt;/a&gt; - Lightweight game server framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lonng/nano"&gt;nano&lt;/a&gt; - Lightweight, facility, high performance golang based game server framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oakmound/oak"&gt;Oak&lt;/a&gt; - Pure Go game engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/topfreegames/pitaya"&gt;Pitaya&lt;/a&gt; - Scalable game server framework with clustering support and client libraries for iOS, Android, Unity and others through the C SDK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gopxl/pixel"&gt;Pixel&lt;/a&gt; - Hand-crafted 2D game library in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gonutz/prototype"&gt;prototype&lt;/a&gt; - Cross-platform (Windows/Linux/Mac) library for creating desktop games using a minimal API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gen2brain/raylib-go"&gt;raylib-go&lt;/a&gt; - Go bindings for &lt;a href="https://www.raylib.com/"&gt;raylib&lt;/a&gt;, a simple and easy-to-use library to learn videogames programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JoelOtter/termloop"&gt;termloop&lt;/a&gt; - Terminal-based game engine for Go, built on top of Termbox.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kelindar/tile"&gt;tile&lt;/a&gt; - Data-oriented and cache-friendly 2D Grid library (TileMap), includes pathfinding, observers and import/export.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Generators&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools that generate Go code.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reedom/convergen"&gt;convergen&lt;/a&gt; - Feature rich type-to-type copy code generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/switchupcb/copygen"&gt;copygen&lt;/a&gt; - Generate any code based on Go types, including type-to-type converters (copy code) without reflection by default.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/senselogic/GENERIS"&gt;generis&lt;/a&gt; - Code generation tool providing generics, free-form macros, conditional compilation and HTML templating.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abice/go-enum"&gt;go-enum&lt;/a&gt; - Code generation for enums from code comments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/go-enum-encoding"&gt;go-enum-encoding&lt;/a&gt; - Code generation for enum encoding from code comments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ahmetalpbalkan/go-linq"&gt;go-linq&lt;/a&gt; - .NET LINQ-like query methods for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awalterschulze/goderive"&gt;goderive&lt;/a&gt; - Derives functions from input types&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmattheis/goverter"&gt;goverter&lt;/a&gt; - Generate converters by defining an interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexdigest/gowrap"&gt;GoWrap&lt;/a&gt; - Generate decorators for Go interfaces using simple templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rjeczalik/interfaces"&gt;interfaces&lt;/a&gt; - Command line tool for generating interface definitions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dave/jennifer"&gt;jennifer&lt;/a&gt; - Generate arbitrary Go code without templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deepmap/oapi-codegen"&gt;oapi-codegen&lt;/a&gt; - This package contains a set of utilities for generating Go boilerplate code for services based on OpenAPI 3.0 API definitions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xiaoxin01/typeregistry"&gt;typeregistry&lt;/a&gt; - A library to create type dynamically.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Geographic&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Geographic tools and servers&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spatial-go/geoos"&gt;geoos&lt;/a&gt; - A library provides spatial data and geometric algorithms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hishamkaram/geoserver"&gt;geoserver&lt;/a&gt; - geoserver Is a Go Package For Manipulating a GeoServer Instance via the GeoServer REST API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hishamkaram/gismanager"&gt;gismanager&lt;/a&gt; - Publish Your GIS Data(Vector Data) to PostGIS and Geoserver.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/airbusgeo/godal"&gt;godal&lt;/a&gt; - Go wrapper for GDAL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber/h3-go"&gt;H3&lt;/a&gt; - Go bindings for H3, a hierarchical hexagonal geospatial indexing system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmadfox/go-geojson2h3"&gt;H3 GeoJSON&lt;/a&gt; - Conversion utilities between H3 indexes and GeoJSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmadfox/go-h3geo-dist"&gt;H3GeoDist&lt;/a&gt; - Distribution of Uber H3geo cells by virtual nodes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/consbio/mbtileserver"&gt;mbtileserver&lt;/a&gt; - A simple Go-based server for map tiles stored in mbtiles format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paulmach/osm"&gt;osm&lt;/a&gt; - Library for reading, writing and working with OpenStreetMap data and APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maguro/pbf"&gt;pbf&lt;/a&gt; - OpenStreetMap PBF golang encoder/decoder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pantrif/s2-geojson"&gt;S2 geojson&lt;/a&gt; - Convert geojson to s2 cells &amp;amp; demonstrating some S2 geometry features on map.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang/geo"&gt;S2 geometry&lt;/a&gt; - S2 geometry library in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peterstace/simplefeatures"&gt;simplefeatures&lt;/a&gt; - simplesfeatures is a 2D geometry library that provides Go types that model geometries, as well as algorithms that operate on them.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tidwall/tile38"&gt;Tile38&lt;/a&gt; - Geolocation DB with spatial index and realtime geofencing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jorelosorio/web-mercator-projection"&gt;Web-Mercator-Projection&lt;/a&gt; A project to easily use and convert LonLat, Point and Tile to display info, markers, etc, in a map using the Web Mercator Projection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wroge/wgs84"&gt;WGS84&lt;/a&gt; - Library for Coordinate Conversion and Transformation (ETRS89, OSGB36, NAD83, RGF93, Web Mercator, UTM).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Go Compilers&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools for compiling Go to other languages and vice-versa.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yassinebenaid/bunster"&gt;bunster&lt;/a&gt; - Compile shell scripts to Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Konstantin8105/c4go"&gt;c4go&lt;/a&gt; - Transpile C code to Go code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygeiss/esp32-transpiler"&gt;esp32&lt;/a&gt; - Transpile Go into Arduino code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Konstantin8105/f4go"&gt;f4go&lt;/a&gt; - Transpile FORTRAN 77 code to Go code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go2hx/go2hx"&gt;go2hx&lt;/a&gt; - Compiler from Go to Haxe to Javascript/C++/Java/C#.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gopherjs/gopherjs"&gt;gopherjs&lt;/a&gt; - Compiler from Go to JavaScript.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Goroutines&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Tools for managing and working with Goroutines.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/panjf2000/ants"&gt;ants&lt;/a&gt; - A high-performance and low-cost goroutine pool in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/borderstech/artifex"&gt;artifex&lt;/a&gt; - Simple in-memory job queue for Golang using worker-based dispatching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaitoo/async"&gt;async&lt;/a&gt; - An asynchronous task package with async/await style for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reugn/async"&gt;async&lt;/a&gt; - An alternative sync library for Go (Future, Promise, Locks).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/studiosol/async"&gt;async&lt;/a&gt; - A safe way to execute functions asynchronously, recovering them in case of panic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lab210-dev/async-job"&gt;async-job&lt;/a&gt; - AsyncJob is an asynchronous queue job manager with light code, clear and speed.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamilsk/breaker"&gt;breaker&lt;/a&gt; - Flexible mechanism to make execution flow interruptible.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ddelizia/channelify"&gt;channelify&lt;/a&gt; - Transform your function to return channels for easy and powerful parallel processing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sourcegraph/conc"&gt;conc&lt;/a&gt; - &lt;code&gt;conc&lt;/code&gt; is your toolbelt for structured concurrency in go, making common tasks easier and safer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vivek-ng/concurrency-limiter"&gt;concurrency-limiter&lt;/a&gt; - Concurrency limiter with support for timeouts, dynamic priority and context cancellation of goroutines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ITcathyh/conexec"&gt;conexec&lt;/a&gt; - A concurrent toolkit to help execute funcs concurrently in an efficient and safe way. It supports specifying the overall timeout to avoid blocking and uses goroutine pool to improve efficiency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marusama/cyclicbarrier"&gt;cyclicbarrier&lt;/a&gt; - CyclicBarrier for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexdigest/execpool"&gt;execpool&lt;/a&gt; - A pool built around exec.Cmd that spins up a given number of processes in advance and attaches stdin and stdout to them when needed. Very similar to FastCGI or Apache Prefork MPM but works for any command.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carlmjohnson/flowmatic"&gt;flowmatic&lt;/a&gt; - Structured concurrency made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nar10z/go-accumulator"&gt;go-accumulator&lt;/a&gt; - Solution for accumulation of events and their subsequent processing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vladopajic/go-actor"&gt;go-actor&lt;/a&gt; - A tiny library for writing concurrent programs using actor model.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/workanator/go-floc"&gt;go-floc&lt;/a&gt; - Orchestrate goroutines with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamildrazkiewicz/go-flow"&gt;go-flow&lt;/a&gt; - Control goroutines execution order.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikhilsaraf/go-tools"&gt;go-tools/multithreading&lt;/a&gt; - Manage a pool of goroutines using this lightweight library with a simple API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/subchen/go-trylock"&gt;go-trylock&lt;/a&gt; - TryLock support on read-write lock for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pieterclaerhout/go-waitgroup"&gt;go-waitgroup&lt;/a&gt; - Like &lt;code&gt;sync.WaitGroup&lt;/code&gt; with error handling and concurrency control.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zenthangplus/go-workerpool"&gt;go-workerpool&lt;/a&gt; - Inspired from Java Thread Pool, Go WorkerPool aims to control heavy Go Routines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/catmullet/go-workers"&gt;go-workers&lt;/a&gt; - Easily and safely run workers for large data processing pipelines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zenthangplus/goccm"&gt;goccm&lt;/a&gt; - Go Concurrency Manager package limits the number of goroutines that allowed to run concurrently.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/loveleshsharma/gohive"&gt;gohive&lt;/a&gt; - A highly performant and easy to use Goroutine pool for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vardius/gollback"&gt;gollback&lt;/a&gt; - asynchronous simple function utilities, for managing execution of closures and callbacks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hamed-yousefi/gowl"&gt;gowl&lt;/a&gt; - Gowl is a process management and process monitoring tool at once. An infinite worker pool gives you the ability to control the pool and processes and monitor their status.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benmanns/goworker"&gt;goworker&lt;/a&gt; - goworker is a Go-based background worker.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xxjwxc/gowp"&gt;gowp&lt;/a&gt; - gowp is concurrency limiting goroutine pool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sherifabdlnaby/gpool"&gt;gpool&lt;/a&gt; - manages a resizeable pool of context-aware goroutines to bound concurrency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivpusic/grpool"&gt;grpool&lt;/a&gt; - Lightweight Goroutine pool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/duanckham/hands"&gt;hands&lt;/a&gt; - A process controller used to control the execution and return strategies of multiple goroutines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AaronJan/Hunch"&gt;Hunch&lt;/a&gt; - Hunch provides functions like: &lt;code&gt;All&lt;/code&gt;, &lt;code&gt;First&lt;/code&gt;, &lt;code&gt;Retry&lt;/code&gt;, &lt;code&gt;Waterfall&lt;/code&gt; etc., that makes asynchronous flow control more intuitive.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dirkaholic/kyoo"&gt;kyoo&lt;/a&gt; - Provides an unlimited job queue and concurrent worker pools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neilotoole/errgroup"&gt;neilotoole/errgroup&lt;/a&gt; - Drop-in alternative to &lt;code&gt;sync/errgroup&lt;/code&gt;, limited to a pool of N worker goroutines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arunsworld/nursery"&gt;nursery&lt;/a&gt; - Structured concurrency in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/cirello.io/oversight"&gt;oversight&lt;/a&gt; - Oversight is a complete implementation of the Erlang supervision trees.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafaeljesus/parallel-fn"&gt;parallel-fn&lt;/a&gt; - Run functions in parallel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alitto/pond"&gt;pond&lt;/a&gt; - Minimalistic and High-performance goroutine worker pool written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/pool"&gt;pool&lt;/a&gt; - Limited consumer goroutine or unlimited goroutine pool for easier goroutine handling and cancellation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/destel/rill"&gt;rill&lt;/a&gt; - Go toolkit for clean, composable, channel-based concurrency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timandy/routine"&gt;routine&lt;/a&gt; - &lt;code&gt;routine&lt;/code&gt; is a &lt;code&gt;ThreadLocal&lt;/code&gt; for go library. It encapsulates and provides some easy-to-use, non-competitive, high-performance &lt;code&gt;goroutine&lt;/code&gt; context access interfaces, which can help you access coroutine context information more gracefully.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/x-mod/routine"&gt;routine&lt;/a&gt; - go routine control with context, support: Main, Go, Pool and some useful Executors.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamilsk/semaphore"&gt;semaphore&lt;/a&gt; - Semaphore pattern implementation with timeout of lock/unlock operations based on channel and context.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marusama/semaphore"&gt;semaphore&lt;/a&gt; - Fast resizable semaphore implementation based on CAS (faster than channel-based semaphore implementations).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ssgreg/stl"&gt;stl&lt;/a&gt; - Software transactional locks based on Software Transactional Memory (STM) concurrency control mechanism.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shettyh/threadpool"&gt;threadpool&lt;/a&gt; - Golang threadpool implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jeffail/tunny"&gt;tunny&lt;/a&gt; - Goroutine pool for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vardius/worker-pool"&gt;worker-pool&lt;/a&gt; - goworker is a Go simple async worker pool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gammazero/workerpool"&gt;workerpool&lt;/a&gt; - Goroutine pool that limits the concurrency of task execution, not the number of tasks queued.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;GUI&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for building GUI Applications.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Toolkits&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/murlokswarm/app"&gt;app&lt;/a&gt; - Package to create apps with GO, HTML and CSS. Supports: MacOS, Windows in progress.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AllenDang/cimgui-go"&gt;cimgui-go&lt;/a&gt; - Auto generated Go wrapper for &lt;a href="https://github.com/ocornut/imgui"&gt;Dear ImGui&lt;/a&gt; via &lt;a href="https://github.com/cimgui/cimgui"&gt;cimgui&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cogentcore/core"&gt;Cogent Core&lt;/a&gt; - A framework for building 2D and 3D apps that run on macOS, Windows, Linux, iOS, Android, and the web.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/progrium/darwinkit"&gt;DarwinKit&lt;/a&gt; - Build native macOS applications using Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/energye/energy"&gt;energy&lt;/a&gt; - Cross-platform based on LCL(Native System UI Control Library) and CEF(Chromium Embedded Framework) (Windows/ macOS / Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fyne-io/fyne"&gt;fyne&lt;/a&gt; - Cross platform native GUIs designed for Go based on Material Design. Supports: Linux, macOS, Windows, BSD, iOS and Android.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gioui.org"&gt;gio&lt;/a&gt; - Gio is a library for writing cross-platform immediate mode GUI-s in Go. Gio supports all the major platforms: Linux, macOS, Windows, Android, iOS, FreeBSD, OpenBSD and WebAssembly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mattn.github.io/go-gtk/"&gt;go-gtk&lt;/a&gt; - Go bindings for GTK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sciter-sdk/go-sciter"&gt;go-sciter&lt;/a&gt; - Go bindings for Sciter: the Embeddable HTML/CSS/script engine for modern desktop UI development. Cross platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitbucket.org/rj/goey/src/master/"&gt;Goey&lt;/a&gt; - Cross platform UI toolkit aggregator for Windows / Linux / Mac. GTK, Cocoa, Windows API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goradd/html5tag"&gt;goradd/html5tag&lt;/a&gt; - Library for outputting HTML5 tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gotk3/gotk3"&gt;gotk3&lt;/a&gt; - Go bindings for GTK3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dtylman/gowd"&gt;gowd&lt;/a&gt; - Rapid and simple desktop UI development with GO, HTML, CSS and NW.js. Cross platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/therecipe/qt"&gt;qt&lt;/a&gt; - Qt binding for Go (support for Windows / macOS / Linux / Android / iOS / Sailfish OS / Raspberry Pi).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/roblillack/spot"&gt;Spot&lt;/a&gt; - Reactive, cross-platform desktop GUI toolkit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andlabs/ui"&gt;ui&lt;/a&gt; - Platform-native GUI library for Go. Cross platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richardwilkes/unison"&gt;unison&lt;/a&gt; - A unified graphical user experience toolkit for Go desktop applications. macOS, Windows, and Linux are supported.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wails.io"&gt;Wails&lt;/a&gt; - Mac, Windows, Linux desktop apps with HTML UI using built-in OS HTML renderer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lxn/walk"&gt;walk&lt;/a&gt; - Windows application library kit for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zserge/webview"&gt;webview&lt;/a&gt; - Cross-platform webview window with simple two-way JavaScript bindings (Windows / macOS / Linux).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Interaction&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gopherlibs/appindicator"&gt;AppIndicator Go&lt;/a&gt; - Go bindings for libappindicator3 C library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deckarep/gosx-notifier"&gt;gosx-notifier&lt;/a&gt; - OSX Desktop Notifications library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prashantgupta24/activity-tracker"&gt;mac-activity-tracker&lt;/a&gt; - OSX library to notify about any (pluggable) activity on your machine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prashantgupta24/mac-sleep-notifier"&gt;mac-sleep-notifier&lt;/a&gt; - OSX Sleep/Wake notifications in golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-vgo/robotgo"&gt;robotgo&lt;/a&gt; - Go Native cross-platform GUI system automation. Control the mouse, keyboard and other.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getlantern/systray"&gt;systray&lt;/a&gt; - Cross platform Go library to place an icon and menu in the notification area.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shurcooL/trayhost"&gt;trayhost&lt;/a&gt; - Cross-platform Go library to place an icon in the host operating system's taskbar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ncruces/zenity"&gt;zenity&lt;/a&gt; - Cross-platform Go library and CLI to create simple dialogs that interact graphically with the user.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Hardware&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries, tools, and tutorials for interacting with hardware.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arduino/arduino-cli"&gt;arduino-cli&lt;/a&gt; - Official Arduino CLI and library. Can run standalone, or be incorporated into larger Go projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ziutek/emgo"&gt;emgo&lt;/a&gt; - Go-like language for programming embedded systems (e.g. STM32 MCU).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jaypipes/ghw"&gt;ghw&lt;/a&gt; - Golang hardware discovery/inspection library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hypebeast/go-osc"&gt;go-osc&lt;/a&gt; - Open Sound Control (OSC) bindings for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stianeikeland/go-rpio"&gt;go-rpio&lt;/a&gt; - GPIO for Go, doesn't require cgo.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aler9/goroslib"&gt;goroslib&lt;/a&gt; - Robot Operating System (ROS) library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0xcafed00d/joystick"&gt;joystick&lt;/a&gt; - a polled API to read the state of an attached joystick.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zcalusic/sysinfo"&gt;sysinfo&lt;/a&gt; - A pure Go library providing Linux OS / kernel / hardware system information.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Images&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for manipulating images.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anthonynsimon/bild"&gt;bild&lt;/a&gt; - Collection of image processing algorithms in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h2non/bimg"&gt;bimg&lt;/a&gt; - Small package for fast and efficient image processing using libvips.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aofei/cameron"&gt;cameron&lt;/a&gt; - An avatar generator for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tdewolff/canvas"&gt;canvas&lt;/a&gt; - Vector graphics to PDF, SVG or rasterized image.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marekm4/color-extractor"&gt;color-extractor&lt;/a&gt; - Dominant color extractor with no external dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gojek/darkroom"&gt;darkroom&lt;/a&gt; - An image proxy with changeable storage backends and image processing engines with focus on speed and resiliency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lucasepe/draft"&gt;draft&lt;/a&gt; - Generate High Level Microservice Architecture diagrams for GraphViz using simple YAML syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pravj/geopattern"&gt;geopattern&lt;/a&gt; - Create beautiful generative image patterns from a string.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fogleman/gg"&gt;gg&lt;/a&gt; - 2D rendering in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/disintegration/gift"&gt;gift&lt;/a&gt; - Package of image processing filters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qmuntal/gltf"&gt;gltf&lt;/a&gt; - Efficient and robust glTF 2.0 reader, writer and validator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ungerik/go-cairo"&gt;go-cairo&lt;/a&gt; - Go binding for the cairo graphics library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bolknote/go-gd"&gt;go-gd&lt;/a&gt; - Go binding for GD library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/koyachi/go-nude"&gt;go-nude&lt;/a&gt; - Nudity detection with Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yeqown/go-qrcode"&gt;go-qrcode&lt;/a&gt; - Generate QR codes with personalized styles, allowing adjustments to color, block size, shape, and icons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jyotiska/go-webcolors"&gt;go-webcolors&lt;/a&gt; - Port of webcolors library from Python to Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kolesa-team/go-webp"&gt;go-webp&lt;/a&gt; - Library for encode and decode webp pictures, using libwebp.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hybridgroup/gocv"&gt;gocv&lt;/a&gt; - Go package for computer vision using OpenCV 3.3+.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/corona10/goimagehash"&gt;goimagehash&lt;/a&gt; - Go Perceptual image hashing package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/corona10/goimghdr"&gt;goimghdr&lt;/a&gt; - The imghdr module determines the type of image contained in a file for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/o1egl/govatar"&gt;govatar&lt;/a&gt; - Library and CMD tool for generating funny avatars.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davidbyttow/govips"&gt;govips&lt;/a&gt; - A lightning fast image processing and resizing library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sensepost/gowitness"&gt;gowitness&lt;/a&gt; - Screenshoting webpages using go and headless chrome on command line.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shomali11/gridder"&gt;gridder&lt;/a&gt; - A Grid based 2D Graphics library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qeesung/image2ascii"&gt;image2ascii&lt;/a&gt; - Convert image to ASCII.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gographics/imagick"&gt;imagick&lt;/a&gt; - Go binding to ImageMagick's MagickWand C API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h2non/imaginary"&gt;imaginary&lt;/a&gt; - Fast and simple HTTP microservice for image resizing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/disintegration/imaging"&gt;imaging&lt;/a&gt; - Simple Go image processing package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cshum/imagor"&gt;imagor&lt;/a&gt; - Fast, secure image processing server and Go library, using libvips.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hawx/img"&gt;img&lt;/a&gt; - Selection of image manipulation tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fogleman/ln"&gt;ln&lt;/a&gt; - 3D line art rendering in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/noelyahan/mergi"&gt;mergi&lt;/a&gt; - Tool &amp;amp; Go library for image manipulation (Merge, Crop, Resize, Watermark, Animate).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aldor007/mort"&gt;mort&lt;/a&gt; - Storage and image processing server written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/donatj/mpo"&gt;mpo&lt;/a&gt; - Decoder and conversion tool for MPO 3D Photos.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thoas/picfit"&gt;picfit&lt;/a&gt; - An image resizing server written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fogleman/pt"&gt;pt&lt;/a&gt; - Path tracing engine written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bamiaux/rez"&gt;rez&lt;/a&gt; - Image resizing in pure Go and SIMD.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonoton/scout"&gt;scout&lt;/a&gt; - Scout is a standalone open source software solution for DIY video security.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muesli/smartcrop"&gt;smartcrop&lt;/a&gt; - Finds good crops for arbitrary images and crop sizes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/auyer/steganography"&gt;steganography&lt;/a&gt; - Pure Go Library for LSB steganography.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DimitarPetrov/stegify"&gt;stegify&lt;/a&gt; - Go tool for LSB steganography, capable of hiding any file within an image.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ajstarks/svgo"&gt;svgo&lt;/a&gt; - Go Language Library for SVG generation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Pixboost/transformimgs"&gt;transformimgs&lt;/a&gt; - Transformimgs resizes and optimises images for Web using next-generation formats.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mehdipourfar/webp-server"&gt;webp-server&lt;/a&gt; - Simple and minimal image server capable of storing, resizing, converting and caching images.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;IoT (Internet of Things)&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for programming devices of the IoT.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/connectordb/connectordb"&gt;connectordb&lt;/a&gt; - Open-Source Platform for Quantified Self &amp;amp; IoT.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goiot/devices"&gt;devices&lt;/a&gt; - Suite of libraries for IoT devices, experimental for x/exp/io.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lf-edge/ekuiper"&gt;ekuiper&lt;/a&gt; - Lightweight data stream processing engine for IoT edge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xcodersun/eywa"&gt;eywa&lt;/a&gt; - Project Eywa is essentially a connection manager that keeps track of connected devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tibcosoftware/flogo"&gt;flogo&lt;/a&gt; - Project Flogo is an Open Source Framework for IoT Edge Apps &amp;amp; Integration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paypal/gatt"&gt;gatt&lt;/a&gt; - Gatt is a Go package for building Bluetooth Low Energy peripherals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hybridgroup/gobot/"&gt;gobot&lt;/a&gt; - Gobot is a framework for robotics, physical computing, and the Internet of Things.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amimof/huego"&gt;huego&lt;/a&gt; - An extensive Philips Hue client library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vaelen/iot/"&gt;iot&lt;/a&gt; - IoT is a simple framework for implementing a Google IoT Core device.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Mainflux/mainflux"&gt;mainflux&lt;/a&gt; - Industrial IoT Messaging and Device Management Server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://periph.io/"&gt;periph&lt;/a&gt; - Peripherals I/O to interface with low-level board facilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rulego/rulego"&gt;rulego&lt;/a&gt; - RuleGo is a lightweight, high-performance, embedded, orchestrable component-based rule engine for IoT edge.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sensorbee/sensorbee"&gt;sensorbee&lt;/a&gt; - Lightweight stream processing engine for IoT.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Edgenesis/shifu"&gt;shifu&lt;/a&gt; - Kubernetes native IoT development framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/e154/smart-home"&gt;smart-home&lt;/a&gt; - Software package for IoT automation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Job Scheduler&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for scheduling jobs.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deepaksinghvi/cdule"&gt;cdule&lt;/a&gt; - Job scheduler library with database support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bart6114/cheek"&gt;cheek&lt;/a&gt; - A simple crontab like scheduler that aims to offer a KISS approach to job scheduling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/onatm/clockwerk"&gt;clockwerk&lt;/a&gt; - Go package to schedule periodic jobs using a simple, fluent syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/krayzpipes/cronticker"&gt;cronticker&lt;/a&gt; - A ticker implementation to support cron schedules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rk/go-cron"&gt;go-cron&lt;/a&gt; - Simple Cron library for go that can execute closures or functions at varying intervals, from once a second to once a year on a specific date and time. Primarily for web applications and long running daemons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reugn/go-quartz"&gt;go-quartz&lt;/a&gt; - Simple, zero-dependency scheduling library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-co-op/gocron"&gt;gocron&lt;/a&gt; - Easy and fluent Go job scheduling. This is an actively maintained fork of &lt;a href="https://github.com/jasonlvhit/gocron"&gt;jasonlvhit/gocron&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fieldryand/goflow"&gt;goflow&lt;/a&gt; - A simple but powerful DAG scheduler and dashboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/roylee0704/gron"&gt;gron&lt;/a&gt; - Define time-based tasks using a simple Go API and Gron’s scheduler will run them accordingly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adhocore/gronx"&gt;gronx&lt;/a&gt; - Cron expression parser, task runner and daemon consuming crontab like task list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bamzi/jobrunner"&gt;JobRunner&lt;/a&gt; - Smart and featureful cron job scheduler with job queuing and live monitoring built in.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kilgaloon/leprechaun"&gt;leprechaun&lt;/a&gt; - Job scheduler that supports webhooks, crons and classic scheduling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/romshark/sched"&gt;sched&lt;/a&gt; - A job scheduler with the ability to fast-forward time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carlescere/scheduler"&gt;scheduler&lt;/a&gt; - Cronjobs scheduling made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/madflojo/tasks"&gt;tasks&lt;/a&gt; - An easy to use in-process scheduler for recurring tasks in Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;JSON&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with JSON.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spyzhov/ajson"&gt;ajson&lt;/a&gt; - Abstract JSON for golang with JSONPath support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/simonnilsson/ask"&gt;ask&lt;/a&gt; - Easy access to nested values in maps and slices. Works in combination with encoding/json and other packages that "Unmarshal" arbitrary data into Go data-types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cocoonspace/dynjson"&gt;dynjson&lt;/a&gt; - Client-customizable JSON formats for dynamic APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lucassscaravelli/ej"&gt;ej&lt;/a&gt; - Write and read JSON from different sources succinctly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vtopc/epoch"&gt;epoch&lt;/a&gt; - Contains primitives for marshaling/unmarshalling Unix timestamp/epoch to/from build-in time.Time type in JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/valyala/fastjson"&gt;fastjson&lt;/a&gt; - Fast JSON parser and validator for Go. No custom structs, no code generation, no reflection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jeffail/gabs"&gt;gabs&lt;/a&gt; - For parsing, creating and editing unknown or dynamic JSON in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skanehira/gjo"&gt;gjo&lt;/a&gt; - Small utility to create JSON objects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tidwall/gjson"&gt;GJSON&lt;/a&gt; - Get a JSON value with one line of code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ddymko/go-jsonerror"&gt;go-jsonerror&lt;/a&gt; - Go-JsonError is meant to allow us to easily create json response errors that follow the JsonApi spec.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nicklaw5/go-respond"&gt;go-respond&lt;/a&gt; - Go package for handling common HTTP JSON responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/limiu82214/gojmapr"&gt;gojmapr&lt;/a&gt; - Get simple struct from complex json by json path.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elgs/gojq"&gt;gojq&lt;/a&gt; - JSON query in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChimeraCoder/gojson"&gt;gojson&lt;/a&gt; - Automatically generate Go (golang) struct definitions from example JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/htmljson"&gt;htmljson&lt;/a&gt; - Rich rendering of JSON as HTML in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yazgazan/jaydiff"&gt;JayDiff&lt;/a&gt; - JSON diff utility written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wI2L/jettison"&gt;jettison&lt;/a&gt; - Fast and flexible JSON encoder for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/romshark/jscan"&gt;jscan&lt;/a&gt; - High performance zero-allocation JSON iterator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mholt.github.io/json-to-go/"&gt;JSON-to-Go&lt;/a&gt; - Convert JSON to Go struct.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://json-to-proto.github.io/"&gt;JSON-to-Proto&lt;/a&gt; - Convert JSON to Protobuf online.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/m-zajac/json2go"&gt;json2go&lt;/a&gt; - Advanced JSON to Go struct conversion. Provides package that can parse multiple JSON documents and create struct to fit them all.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AmuzaTkts/jsonapi-errors"&gt;jsonapi-errors&lt;/a&gt; - Go bindings based on the JSON API errors reference.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neilotoole/jsoncolor"&gt;jsoncolor&lt;/a&gt; - Drop-in replacement for &lt;code&gt;encoding/json&lt;/code&gt; that outputs colorized JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wI2L/jsondiff"&gt;jsondiff&lt;/a&gt; - JSON diff library for Go based on RFC6902 (JSON Patch).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miolini/jsonf"&gt;jsonf&lt;/a&gt; - Console tool for highlighted formatting and struct query fetching JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ricardolonga/jsongo"&gt;jsongo&lt;/a&gt; - Fluent API to make it easier to create Json objects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RichardKnop/jsonhal"&gt;jsonhal&lt;/a&gt; - Simple Go package to make custom structs marshal into HAL compatible JSON responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abusomani/jsonhandlers"&gt;jsonhandlers&lt;/a&gt; - JSON library to expose simple handlers that lets you easily read and write json from various sources.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sinhashubham95/jsonic"&gt;jsonic&lt;/a&gt; - Utilities to handle and query JSON without defining structs in a type safe manner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Andrew-M-C/go.jsonvalue"&gt;jsonvalue&lt;/a&gt; - A fast and convenient library for unstructured JSON data, replacing &lt;code&gt;encoding/json&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zerosnake0/jzon"&gt;jzon&lt;/a&gt; - JSON library with standard compatible API/behavior.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Qntfy/kazaam"&gt;kazaam&lt;/a&gt; - API for arbitrary transformation of JSON documents.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mickep76/mapslice-json"&gt;mapslice-json&lt;/a&gt; - Go MapSlice for ordered marshal/ unmarshal of maps in JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PerimeterX/marshmallow"&gt;marshmallow&lt;/a&gt; - Performant JSON unmarshalling for flexible use cases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sanbornm/mp"&gt;mp&lt;/a&gt; - Simple cli email parser. It currently takes stdin and outputs JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ohler55/ojg"&gt;OjG&lt;/a&gt; - Optimized JSON for Go is a high performance parser with a variety of additional JSON tools including JSONPath.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dedalqq/omg.jsonparser"&gt;omg.jsonparser&lt;/a&gt; - Simple JSON parser with validation by condition via golang struct fields tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/olvrng/ujson"&gt;ujson&lt;/a&gt; - Fast and minimal JSON parser and transformer that works on unstructured JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miladibra10/vjson"&gt;vjson&lt;/a&gt; - Go package for validating JSON objects with declaring a JSON schema with fluent API.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for generating and working with log files.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amoghe/distillog"&gt;distillog&lt;/a&gt; - distilled levelled logging (think of it as stdlib + log levels).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kpango/glg"&gt;glg&lt;/a&gt; - glg is simple and fast leveled logging library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lajosbencz/glo"&gt;glo&lt;/a&gt; - PHP Monolog inspired logging facility with identical severity levels.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang/glog"&gt;glog&lt;/a&gt; - Leveled execution logs for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/utahta/go-cronowriter"&gt;go-cronowriter&lt;/a&gt; - Simple writer that rotate log files automatically based on current date and time, like cronolog.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pieterclaerhout/go-log"&gt;go-log&lt;/a&gt; - A logging library with stack traces, object dumping and optional timestamps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/subchen/go-log"&gt;go-log&lt;/a&gt; - Simple and configurable Logging in Go, with level, formatters and writers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/siddontang/go-log"&gt;go-log&lt;/a&gt; - Log lib supports level and multi handlers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ian-kent/go-log"&gt;go-log&lt;/a&gt; - Log4j implementation in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apsdehal/go-logger"&gt;go-logger&lt;/a&gt; - Simple logger of Go Programs, with level handlers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/One-com/gone/tree/master/log"&gt;gone/log&lt;/a&gt; - Fast, extendable, full-featured, std-lib source compatible log library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/henvic/httpretty"&gt;httpretty&lt;/a&gt; - Pretty-prints your regular HTTP requests on your terminal for debugging (similar to http.DumpRequest).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ssgreg/journald"&gt;journald&lt;/a&gt; - Go implementation of systemd Journal's native API for logging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/clok/kemba"&gt;kemba&lt;/a&gt; - A tiny debug logging tool inspired by &lt;a href="https://github.com/visionmedia/debug"&gt;debug&lt;/a&gt;, great for CLI tools and applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Lifailon/lazyjournal"&gt;lazyjournal&lt;/a&gt; - A TUI for reading and filtering logs from journalctl, file system, Docker and Podman containers, as well Kubernetes pods.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aerogo/log"&gt;log&lt;/a&gt; - An O(1) logging system that allows you to connect one log to multiple writers (e.g. stdout, a file and a TCP connection).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apex/log"&gt;log&lt;/a&gt; - Structured logging package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/log"&gt;log&lt;/a&gt; - Simple, configurable and scalable Structured Logging for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/teris-io/log"&gt;log&lt;/a&gt; - Structured log interface for Go cleanly separates logging facade from its implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/heartwilltell/log"&gt;log&lt;/a&gt; - Simple leveled logging wrapper around standard log package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/no-src/log"&gt;log&lt;/a&gt; - A simple logging framework out of the box.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/inconshreveable/log15"&gt;log15&lt;/a&gt; - Simple, powerful logging for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ewwwwwqm/logdump"&gt;logdump&lt;/a&gt; - Package for multi-level logging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chzyer/logex"&gt;logex&lt;/a&gt; - Golang log lib, supports tracking and level, wrap by standard log lib.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/azer/logger"&gt;logger&lt;/a&gt; - Minimalistic logging library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mbndr/logo"&gt;logo&lt;/a&gt; - Golang logger to different configurable writers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sirupsen/logrus"&gt;logrus&lt;/a&gt; - Structured logger for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cabify/logrusiowriter"&gt;logrusiowriter&lt;/a&gt; - &lt;code&gt;io.Writer&lt;/code&gt; implementation using &lt;a href="https://github.com/sirupsen/logrus"&gt;logrus&lt;/a&gt; logger.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sebest/logrusly"&gt;logrusly&lt;/a&gt; - &lt;a href="https://github.com/sirupsen/logrus"&gt;logrus&lt;/a&gt; plug-in to send errors to a &lt;a href="https://www.loggly.com/"&gt;Loggly&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logur/logur"&gt;logur&lt;/a&gt; - An opinionated logger interface and collection of logging best practices with adapters and integrations for well-known libraries (&lt;a href="https://github.com/sirupsen/logrus"&gt;logrus&lt;/a&gt;, &lt;a href="https://github.com/go-kit/kit/tree/master/log"&gt;go-kit log&lt;/a&gt;, &lt;a href="https://github.com/uber-go/zap"&gt;zap&lt;/a&gt;, &lt;a href="https://github.com/rs/zerolog"&gt;zerolog&lt;/a&gt;, etc).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/logutils"&gt;logutils&lt;/a&gt; - Utilities for slightly better logging in Go (Golang) extending the standard logger.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mgutz/logxi"&gt;logxi&lt;/a&gt; - 12-factor app logger that is fast and makes you happy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/natefinch/lumberjack"&gt;lumberjack&lt;/a&gt; - Simple rolling logger, implements io.WriteCloser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jbrodriguez/mlog"&gt;mlog&lt;/a&gt; - Simple logging module for go, with 5 levels, an optional rotating logfile feature and stdout/stderr output.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gyozatech/noodlog"&gt;noodlog&lt;/a&gt; - Parametrized JSON logging library which lets you obfuscate sensitive data and marshal any kind of content. No more printed pointers instead of values, nor escape chars for the JSON strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/francoispqt/onelog"&gt;onelog&lt;/a&gt; - Onelog is a dead simple but very efficient JSON logger. It is the fastest JSON logger out there in all scenarios. Also, it is one of the logger with the lowest allocation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ozzo/ozzo-log"&gt;ozzo-log&lt;/a&gt; - High performance logging supporting log severity, categorization, and filtering. Can send filtered log messages to various targets (e.g. console, network, mail).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/phuslu/log"&gt;phuslu/log&lt;/a&gt; - High performance structured logging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/k0kubun/pp"&gt;pp&lt;/a&gt; - Colored pretty printer for Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arthurkiller/rollingWriter"&gt;rollingwriter&lt;/a&gt; - RollingWriter is an auto-rotate &lt;code&gt;io.Writer&lt;/code&gt; implementation with multi policies to provide log file rotation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cihub/seelog"&gt;seelog&lt;/a&gt; - Logging functionality with flexible dispatching, filtering, and formatting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getsentry/sentry-go"&gt;sentry-go&lt;/a&gt; - Sentry SDK for Go. Helps monitor and track errors with real-time alerts and performance monitoring.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/echocat/slf4g"&gt;slf4g&lt;/a&gt; - Simple Logging Facade for Golang: Simple structured logging; but powerful, extendable and customizable, with huge amount of learnings from decades of past logging frameworks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gookit/slog"&gt;slog&lt;/a&gt; - Lightweight, configurable, extensible logger for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/slog-formatter"&gt;slog-formatter&lt;/a&gt; - Common formatters for slog and helpers to build your own.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/slog-multi"&gt;slog-multi&lt;/a&gt; - Chain of slog.Handler (pipeline, fanout...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/greyxor/slogor"&gt;slogor&lt;/a&gt; - A colorful slog handler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davecgh/go-spew"&gt;spew&lt;/a&gt; - Implements a deep pretty printer for Go data structures to aid in debugging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/simukti/sqldb-logger"&gt;sqldb-logger&lt;/a&gt; - A logger for Go SQL database driver without modify existing *sql.DB stdlib usage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexcesaro/log"&gt;stdlog&lt;/a&gt; - Stdlog is an object-oriented library providing leveled logging. It is very useful for cron jobs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/structy/log"&gt;structy/log&lt;/a&gt; - A simple to use log system, minimalist but with features for debugging and differentiation of messages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hpcloud/tail"&gt;tail&lt;/a&gt; - Go package striving to emulate the features of the BSD tail program.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DeRuina/timberjack"&gt;timberjack&lt;/a&gt; - Rolling logger with size-based, time-based, and scheduled clock-based rotation, supporting compression and cleanup.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lmittmann/tint"&gt;tint&lt;/a&gt; - A slog.Handler that writes tinted logs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xfxdev/xlog"&gt;xlog&lt;/a&gt; - Plugin architecture and flexible log system for Go, with level ctrl, multiple log target and custom log format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rs/xlog"&gt;xlog&lt;/a&gt; - Structured logger for &lt;code&gt;net/context&lt;/code&gt; aware HTTP handlers with flexible dispatching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xybor-x/xylog"&gt;xylog&lt;/a&gt; - Leveled and structured logging, dynamic fields, high performance, zone management, simple configuration, and readable syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jfcg/yell"&gt;yell&lt;/a&gt; - Yet another minimalistic logging library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber-go/zap"&gt;zap&lt;/a&gt; - Fast, structured, leveled logging in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuseferi/zax"&gt;zax&lt;/a&gt; - Integrate Context with Zap logger, which leads to more flexibility in Go logging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rs/zerolog"&gt;zerolog&lt;/a&gt; - Zero-allocation JSON logger.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edoger/zkits-logger"&gt;zkits-logger&lt;/a&gt; - A powerful zero-dependency JSON logger.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nkmr-jp/zl"&gt;zl&lt;/a&gt; - High Developer Experience, zap based logger. It offers rich functionality but is easy to configure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Machine Learning&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for Machine Learning.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jbrukh/bayesian"&gt;bayesian&lt;/a&gt; - Naive Bayesian Classification for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mirecl/catboost-cgo"&gt;catboost-cgo&lt;/a&gt; - Fast, scalable, high performance Gradient Boosting on Decision Trees library. Golang using Cgo for blazing fast inference CatBoost Model.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ryanbressler/CloudForest"&gt;CloudForest&lt;/a&gt; - Fast, flexible, multi-threaded ensembles of decision trees for machine learning in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sgrodriguez/ddt"&gt;ddt&lt;/a&gt; - Dynamic decision tree, create trees defining customizable rules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MaxHalford/eaopt"&gt;eaopt&lt;/a&gt; - An evolutionary optimization library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/khezen/evoli"&gt;evoli&lt;/a&gt; - Genetic Algorithm and Particle Swarm Optimization library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Fontinalis/fonet"&gt;fonet&lt;/a&gt; - A Deep Neural Network library written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/e-XpertSolutions/go-cluster"&gt;go-cluster&lt;/a&gt; - Go implementation of the k-modes and k-prototypes clustering algorithms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/patrikeh/go-deep"&gt;go-deep&lt;/a&gt; - A feature-rich neural network library in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/white-pony/go-fann"&gt;go-fann&lt;/a&gt; - Go bindings for Fast Artificial Neural Networks(FANN) library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/go-featureprocessing"&gt;go-featureprocessing&lt;/a&gt; - Fast and convenient feature processing for low latency machine learning in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thoj/go-galib"&gt;go-galib&lt;/a&gt; - Genetic Algorithms library written in Go / golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daviddengcn/go-pr"&gt;go-pr&lt;/a&gt; - Pattern recognition package in Go lang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goml/gobrain"&gt;gobrain&lt;/a&gt; - Neural Networks written in go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/e-dard/godist"&gt;godist&lt;/a&gt; - Various probability distributions, and associated methods.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomcraven/goga"&gt;goga&lt;/a&gt; - Genetic algorithm library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sjwhitworth/golearn"&gt;GoLearn&lt;/a&gt; - General Machine Learning library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/danieldk/golinear"&gt;golinear&lt;/a&gt; - liblinear bindings for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/surenderthakran/gomind"&gt;GoMind&lt;/a&gt; - A simplistic Neural Network Library in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cdipaolo/goml"&gt;goml&lt;/a&gt; - On-line Machine Learning in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gomlx/gomlx"&gt;GoMLX&lt;/a&gt; - An accelerated Machine Learning framework for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dathoangnd/gonet"&gt;gonet&lt;/a&gt; - Neural Network for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/c-bata/goptuna"&gt;Goptuna&lt;/a&gt; - Bayesian optimization framework for black-box functions written in Go. Everything will be optimized.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timkaye11/goRecommend"&gt;goRecommend&lt;/a&gt; - Recommendation Algorithms library written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gorgonia/gorgonia"&gt;gorgonia&lt;/a&gt; - graph-based computational library like Theano for Go that provides primitives for building various machine learning and neural network algorithms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zhenghaoz/gorse"&gt;gorse&lt;/a&gt; - An offline recommender system backend based on collaborative filtering written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asafschers/goscore"&gt;goscore&lt;/a&gt; - Go Scoring API for PMML.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/otiai10/gosseract"&gt;gosseract&lt;/a&gt; - Go package for OCR (Optical Character Recognition), by using Tesseract C++ library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knights-analytics/hugot"&gt;hugot&lt;/a&gt; - Huggingface transformer pipelines for golang with onnxruntime.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/datastream/libsvm"&gt;libsvm&lt;/a&gt; - libsvm golang version derived work based on LIBSVM 3.14.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BayesWitnesses/m2cgen"&gt;m2cgen&lt;/a&gt; - A CLI tool to transpile trained classic ML models into a native Go code with zero dependencies, written in Python with Go language support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/schuyler/neural-go"&gt;neural-go&lt;/a&gt; - Multilayer perceptron network implemented in Go, with training via backpropagation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/otiai10/ocrserver"&gt;ocrserver&lt;/a&gt; - A simple OCR API server, seriously easy to be deployed by Docker and Heroku.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/owulveryck/onnx-go"&gt;onnx-go&lt;/a&gt; - Go Interface to Open Neural Network Exchange (ONNX).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ThePaw/probab"&gt;probab&lt;/a&gt; - Probability distribution functions. Bayesian inference. Written in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/malaschitz/randomForest"&gt;randomforest&lt;/a&gt; - Easy to use Random Forest library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muesli/regommend"&gt;regommend&lt;/a&gt; - Recommendation &amp;amp; collaborative filtering engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eaigner/shield"&gt;shield&lt;/a&gt; - Bayesian text classifier with flexible tokenizers and storage backends for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/galeone/tfgo"&gt;tfgo&lt;/a&gt; - Easy to use Tensorflow bindings: simplifies the usage of the official Tensorflow Go bindings. Define computational graphs in Go, load and execute models trained in Python.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Xamber/Varis"&gt;Varis&lt;/a&gt; - Golang Neural Network.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Messaging&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries that implement messaging systems.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kak-tus/ami"&gt;ami&lt;/a&gt; - Go client to reliable queues based on Redis Cluster Streams.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rabbitmq/amqp091-go"&gt;amqp&lt;/a&gt; - Go RabbitMQ Client Library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sideshow/apns2"&gt;APNs2&lt;/a&gt; - HTTP/2 Apple Push Notification provider for Go - Send push notifications to iOS, tvOS, Safari and OSX apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hibiken/asynq"&gt;Asynq&lt;/a&gt; - A simple, reliable, and efficient distributed task queue for Go built on top of Redis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mikestefanello/backlite"&gt;backlite&lt;/a&gt; - Type-safe, persistent, embedded task queues and background job runner w/ SQLite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Clivern/Beaver"&gt;Beaver&lt;/a&gt; - A real time messaging server to build a scalable in-app notifications, multiplayer games, chat apps in web and mobile apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mustafaturan/bus"&gt;Bus&lt;/a&gt; - Minimalist message bus implementation for internal communication.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/centrifugal/centrifugo"&gt;Centrifugo&lt;/a&gt; - Real-time messaging (Websockets or SockJS) server in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chanify/chanify"&gt;Chanify&lt;/a&gt; - A push notification server send message to your iOS devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jeroenrinzema/commander"&gt;Commander&lt;/a&gt; - A high-level event driven consumer/producer supporting various "dialects" such as Apache Kafka.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/confluentinc/confluent-kafka-go"&gt;Confluent Kafka Golang Client&lt;/a&gt; - confluent-kafka-go is Confluent's Golang client for Apache Kafka and the Confluent Platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/godbus/dbus"&gt;dbus&lt;/a&gt; - Native Go bindings for D-Bus.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/appleboy/drone-line"&gt;drone-line&lt;/a&gt; - Sending &lt;a href="https://at.line.me/en"&gt;Line&lt;/a&gt; notifications using a binary, docker or Drone CI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/olebedev/emitter"&gt;emitter&lt;/a&gt; - Emits events using Go way, with wildcard, predicates, cancellation possibilities and many other good wins.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agoalofalife/event"&gt;event&lt;/a&gt; - Implementation of the pattern observer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asaskevich/EventBus"&gt;EventBus&lt;/a&gt; - The lightweight event bus with async compatibility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osamingo/gaurun-client"&gt;gaurun-client&lt;/a&gt; - Gaurun Client written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/desertbit/glue"&gt;Glue&lt;/a&gt; - Robust Go and Javascript Socket Library (Alternative to Socket.io).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stanipetrosyan/go-eventbus"&gt;go-eventbus&lt;/a&gt; - Simple Event Bus package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mehdihadeli/Go-MediatR"&gt;Go-MediatR&lt;/a&gt; - A library for handling mediator patterns and simplified CQRS patterns within an event-driven architecture, inspired by csharp MediatR library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cheshir/go-mq"&gt;go-mq&lt;/a&gt; - RabbitMQ client with declarative configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TheCreeper/go-notify"&gt;go-notify&lt;/a&gt; - Native implementation of the freedesktop notification spec.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nsqio/go-nsq"&gt;go-nsq&lt;/a&gt; - the official Go package for NSQ.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jirenius/go-res"&gt;go-res&lt;/a&gt; - Package for building REST/real-time services where clients are synchronized seamlessly, using NATS and Resgate.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/googollee/go-socket.io"&gt;go-socket.io&lt;/a&gt; - socket.io library for golang, a realtime application framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maxatome/go-vitotrol"&gt;go-vitotrol&lt;/a&gt; - Client library to Viessmann Vitotrol web service.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Raezil/GoEventBus"&gt;GoEventBus&lt;/a&gt; - A blazing‑fast, in‑memory, lock‑free event bus library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trivago/gollum"&gt;Gollum&lt;/a&gt; - A n:m multiplexer that gathers messages from different sources and broadcasts them to a set of destinations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jcuga/golongpoll"&gt;golongpoll&lt;/a&gt; - HTTP longpoll server library that makes web pub-sub simple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Terry-Mao/gopush-cluster"&gt;gopush-cluster&lt;/a&gt; - gopush-cluster is a go push server cluster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/appleboy/gorush"&gt;gorush&lt;/a&gt; - Push notification server using &lt;a href="https://github.com/sideshow/apns2"&gt;APNs2&lt;/a&gt; and google &lt;a href="https://github.com/google/go-gcm"&gt;GCM&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexsniffin/gosd"&gt;gosd&lt;/a&gt; - A library for scheduling when to dispatch a message to a channel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/smancke/guble"&gt;guble&lt;/a&gt; - Messaging server using push notifications (Google Firebase Cloud Messaging, Apple Push Notification services, SMS) as well as websockets, a REST API, featuring distributed operation and message-persistence.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leozz37/hare"&gt;hare&lt;/a&gt; - A user friendly library for sending messages and listening to TCP sockets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leandro-lugaresi/hub"&gt;hub&lt;/a&gt; - A Message/Event Hub for Go applications, using publish/subscribe pattern with support for alias like rabbitMQ exchanges.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SchwarzIT/hypermatch"&gt;hypermatch&lt;/a&gt; - A very fast and efficient Go library for matching events to a large set of rules&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/socifi/jazz"&gt;jazz&lt;/a&gt; - A simple RabbitMQ abstraction layer for queue administration and publishing and consuming of messages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RichardKnop/machinery"&gt;machinery&lt;/a&gt; - Asynchronous task queue/job queue based on distributed message passing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nanomsg/mangos"&gt;mangos&lt;/a&gt; - Pure go implementation of the Nanomsg ("Scalability Protocols") with transport interoperability.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/olahol/melody"&gt;melody&lt;/a&gt; - Minimalist framework for dealing with websocket sessions, includes broadcasting and automatic ping/pong handling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dunglas/mercure"&gt;Mercure&lt;/a&gt; - Server and library to dispatch server-sent updates using the Mercure protocol (built on top of Server-Sent Events).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vardius/message-bus"&gt;messagebus&lt;/a&gt; - messagebus is a Go simple async message bus, perfect for using as event bus when doing event sourcing, CQRS, DDD.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nats-io/nats.go"&gt;NATS Go Client&lt;/a&gt; - Go client for the NATS messaging system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafaeljesus/nsq-event-bus"&gt;nsq-event-bus&lt;/a&gt; - A tiny wrapper around NSQ topic and channel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dailymotion/oplog"&gt;oplog&lt;/a&gt; - Generic oplog/replication system for REST APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tuxychandru/pubsub"&gt;pubsub&lt;/a&gt; - Simple pubsub package for go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timbray/quamina"&gt;Quamina&lt;/a&gt; - Fast pattern-matching for filtering messages and events.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/furdarius/rabbitroutine"&gt;rabbitroutine&lt;/a&gt; - Lightweight library that handles RabbitMQ auto-reconnect and publishing retries. The library takes into account the need to re-declare entities in RabbitMQ after reconnection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafaeljesus/rabbus"&gt;rabbus&lt;/a&gt; - A tiny wrapper over amqp exchanges and queues.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jandelgado/rabtap"&gt;rabtap&lt;/a&gt; - RabbitMQ swiss army knife cli app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sybrexsys/RapidMQ"&gt;RapidMQ&lt;/a&gt; - RapidMQ is a lightweight and reliable library for managing of the local messages queue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyperonym/ratus"&gt;Ratus&lt;/a&gt; - Ratus is a RESTful asynchronous task queue server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/robinjoseph08/redisqueue"&gt;redisqueue&lt;/a&gt; - redisqueue provides a producer and consumer of a queue that uses Redis streams.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sbabiv/rmqconn"&gt;rmqconn&lt;/a&gt; - RabbitMQ Reconnection. Wrapper over amqp.Connection and amqp.Dial. Allowing to do a reconnection when the connection is broken before forcing the call to the Close () method to be closed.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Shopify/sarama"&gt;sarama&lt;/a&gt; - Go library for Apache Kafka.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uniqush/uniqush-push"&gt;Uniqush-Push&lt;/a&gt; - Redis backed unified push service for server-side notifications to mobile devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ThreeDotsLabs/watermill"&gt;Watermill&lt;/a&gt; - Working efficiently with message streams. Building event driven applications, enabling event sourcing, RPC over messages, sagas. Can use conventional pub/sub implementations like Kafka or RabbitMQ, but also HTTP or MySQL binlog.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pebbe/zmq4"&gt;zmq4&lt;/a&gt; - Go interface to ZeroMQ version 4. Also available for &lt;a href="https://github.com/pebbe/zmq3"&gt;version 3&lt;/a&gt; and &lt;a href="https://github.com/pebbe/zmq2"&gt;version 2&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Microsoft Office&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unidoc/unioffice"&gt;unioffice&lt;/a&gt; - Pure go library for creating and processing Office Word (.docx), Excel (.xlsx) and Powerpoint (.pptx) documents.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Microsoft Excel&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with Microsoft Excel.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xuri/excelize"&gt;excelize&lt;/a&gt; - Golang library for reading and writing Microsoft Excel™ (XLSX) files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-the-way/exl"&gt;exl&lt;/a&gt; - Excel binding to struct written in Go.(Only supports Go1.18+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/szyhf/go-excel"&gt;go-excel&lt;/a&gt; - A simple and light reader to read a relate-db-like excel as a table.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fterrag/goxlsxwriter"&gt;goxlsxwriter&lt;/a&gt; - Golang bindings for libxlsxwriter for writing XLSX (Microsoft Excel) files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tealeg/xlsx"&gt;xlsx&lt;/a&gt; - Library to simplify reading the XML format used by recent version of Microsoft Excel in Go programs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/plandem/xlsx"&gt;xlsx&lt;/a&gt; - Fast and safe way to read/update your existing Microsoft Excel files in Go programs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Microsoft Word&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with Microsoft Word.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gomutex/godocx"&gt;godocx&lt;/a&gt; - Library for reading and writing Microsoft Word (Docx) files.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Miscellaneous&lt;/h2&gt; 
&lt;h3&gt;Dependency Injection&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with dependency injection.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/magic003/alice"&gt;alice&lt;/a&gt; - Additive dependency injection container for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiendc/autowire"&gt;autowire&lt;/a&gt; - Dependency injection using Generics and reflection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://github.com/boot-go/boot"&gt;boot-go&lt;/a&gt; - Component-based development with dependency injection using reflections for Go developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/componego/componego"&gt;componego&lt;/a&gt; - A dependency injection framework based on components, allowing dynamic dependency replacement without duplicating code in tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/cosban/di"&gt;cosban/di&lt;/a&gt; - A code generation based dependency injection wiring tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goava/di"&gt;di&lt;/a&gt; - A dependency injection container for go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber-go/dig"&gt;dig&lt;/a&gt; - A reflection based dependency injection toolkit for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/i-love-flamingo/dingo"&gt;dingo&lt;/a&gt; - A dependency injection toolkit for Go, based on Guice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/do"&gt;do&lt;/a&gt; - A dependency injection framework based on Generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber-go/fx"&gt;fx&lt;/a&gt; - A dependency injection based application framework for Go (built on top of dig).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vardius/gocontainer"&gt;gocontainer&lt;/a&gt; - Simple Dependency Injection Container.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goioc/di"&gt;goioc/di&lt;/a&gt; - Spring-inspired Dependency Injection Container.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golobby/container"&gt;GoLobby/Container&lt;/a&gt; - GoLobby Container is a lightweight yet powerful IoC dependency injection container for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NVIDIA/gontainer"&gt;gontainer&lt;/a&gt; - A dependency injection service container for Go projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gontainer/gontainer"&gt;gontainer/gontainer&lt;/a&gt; - A YAML-based Dependency Injection container for GO. It supports dependencies' scopes, and auto-detection of circular dependencies. Gontainer is concurrent-safe.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HnH/di"&gt;HnH/di&lt;/a&gt; - DI container library that is focused on clean API and flexibility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-kata/kinit"&gt;kinit&lt;/a&gt; - Customizable dependency injection container with the global mode, cascade initialization and panic-safe finalization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-kod/kod"&gt;kod&lt;/a&gt; - A generics based dependency injection framework for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logrange/linker"&gt;linker&lt;/a&gt; - A reflection based dependency injection and inversion of control library with components lifecycle support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muir/nject"&gt;nject&lt;/a&gt; - A type safe, reflective framework for libraries, tests, http endpoints, and service startup.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firasdarwish/ore"&gt;ore&lt;/a&gt; - Lightweight, generic &amp;amp; simple dependency injection (DI) container.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Fs02/wire"&gt;wire&lt;/a&gt; - Strict Runtime Dependency Injection for Golang.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Project Layout&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Unofficial&lt;/strong&gt; set of patterns for structuring projects.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ardanlabs/service"&gt;ardanlabs/service&lt;/a&gt; - A &lt;a href="https://github.com/ardanlabs/service/wiki"&gt;starter kit&lt;/a&gt; for building production grade scalable web service applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lacion/cookiecutter-golang"&gt;cookiecutter-golang&lt;/a&gt; - A Go application boilerplate template for quick starting projects following production best practices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Melkeydev/go-blueprint"&gt;go-blueprint&lt;/a&gt; - Allows users to spin up a quick Go project using a popular framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/octomation/go-module"&gt;go-module&lt;/a&gt; - Template for a typical module written on Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zitryss/go-sample"&gt;go-sample&lt;/a&gt; - A sample layout for Go application projects with the real code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/allaboutapps/go-starter"&gt;go-starter&lt;/a&gt; - An opinionated production-ready RESTful JSON backend template, highly integrated with VSCode DevContainers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Fs02/go-todo-backend"&gt;go-todo-backend&lt;/a&gt; - Go Todo Backend example using modular project layout for product microservice.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naughtygopher/goapp"&gt;goapp&lt;/a&gt; - An opinionated guideline to structure &amp;amp; develop a Go web application/service.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wajox/gobase"&gt;gobase&lt;/a&gt; - A simple skeleton for golang application with basic setup for real golang application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang-standards/project-layout"&gt;golang-standards/project-layout&lt;/a&gt; - Set of common historical and emerging project layout patterns in the Go ecosystem. Note: despite the org-name they do not represent official golang standards, see &lt;a href="https://github.com/golang-standards/project-layout/issues/117"&gt;this issue&lt;/a&gt; for more information. Nonetheless, some may find the layout useful.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang-templates/seed"&gt;golang-templates/seed&lt;/a&gt; - Go application GitHub repository template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shpota/goxygen"&gt;goxygen&lt;/a&gt; - Generate a modern Web project with Go and Angular, React, or Vue in seconds.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/insidieux/inizio"&gt;insidieux/inizio&lt;/a&gt; - Golang project layout generator with plugins.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/raeperd/kickstart.go"&gt;kickstart.go&lt;/a&gt; - Minimalistic single-file Go HTTP server template without third-party dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sagikazarmark/modern-go-application"&gt;modern-go-application&lt;/a&gt; - Go application boilerplate and example applying modern practices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-nunu/nunu"&gt;nunu&lt;/a&gt; - Nunu is a scaffolding tool for building Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mikestefanello/pagoda"&gt;pagoda&lt;/a&gt; - Rapid, easy full-stack web development starter kit built in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/catchplay/scaffold"&gt;scaffold&lt;/a&gt; - Scaffold generates a starter Go project layout. Lets you focus on business logic implemented.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wangyoucao577/go-project-layout"&gt;wangyoucao577/go-project-layout&lt;/a&gt; - Set of practices and discussions on how to structure Go project layout.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Strings&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with strings.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/happy-sdk/happy/tree/main/pkg/strings/bexp"&gt;bexp&lt;/a&gt; - Go implementation of Brace Expansion mechanism to generate arbitrary strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chanced/caps"&gt;caps&lt;/a&gt; - A case conversion library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/tymonx/go-formatter"&gt;go-formatter&lt;/a&gt; - Implements &lt;strong&gt;replacement fields&lt;/strong&gt; surrounded by curly braces &lt;code&gt;{}&lt;/code&gt; format strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gobeam/Stringy"&gt;gobeam/Stringy&lt;/a&gt; - String manipulation library to convert string to camel case, snake case, kebab case / slugify etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charlievieth/strcase"&gt;strcase&lt;/a&gt; - Case-insensitive implementation of the standard library's strings/bytes packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ozgio/strutil"&gt;strutil&lt;/a&gt; - String utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abhimanyu003/sttr"&gt;sttr&lt;/a&gt; - cross-platform, cli app to perform various operations on string.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huandu/xstrings"&gt;xstrings&lt;/a&gt; - Collection of useful string functions ported from other languages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Uncategorized&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;These libraries were placed here because none of the other categories seemed to fit.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mudler/anagent"&gt;anagent&lt;/a&gt; - Minimalistic, pluggable Golang evloop/timer handler with dependency-injection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antchfx/antch"&gt;antch&lt;/a&gt; - A fast, powerful and extensible web crawling &amp;amp; scraping framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mholt/archives"&gt;archives&lt;/a&gt; - a cross-platform, multi-format Go library for working with archives and compression formats with a unified API and as virtual file systems compatible with io/fs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/artyom/autoflags"&gt;autoflags&lt;/a&gt; - Go package to automatically define command line flags from struct fields.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kirillDanshin/avgRating"&gt;avgRating&lt;/a&gt; - Calculate average score and rating based on Wilson Score Equation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dimiro1/banner"&gt;banner&lt;/a&gt; - Add beautiful banners into your Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mojocn/base64Captcha"&gt;base64Captcha&lt;/a&gt; - Base64captch supports digit, number, alphabet, arithmetic, audio and digit-alphabet captcha.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/basexx"&gt;basexx&lt;/a&gt; - Convert to, from, and between digit strings in various number bases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/distatus/battery"&gt;battery&lt;/a&gt; - Cross-platform, normalized battery information library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/icza/bitio"&gt;bitio&lt;/a&gt; - Highly optimized bit-level Reader and Writer for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/digitalcrab/browscap_go"&gt;browscap_go&lt;/a&gt; - GoLang Library for &lt;a href="https://browscap.org/"&gt;Browser Capabilities Project&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/steambap/captcha"&gt;captcha&lt;/a&gt; - Package captcha provides an easy to use, unopinionated API for captcha generation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubeservice-stack/common"&gt;common&lt;/a&gt; - A library for server framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cstockton/go-conv"&gt;conv&lt;/a&gt; - Package conv provides fast and intuitive conversions across Go types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miolini/datacounter"&gt;datacounter&lt;/a&gt; - Go counters for readers/writer/http.ResponseWriter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pioz/faker"&gt;faker&lt;/a&gt; - Random fake data and struct generator for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ffmt/ffmt"&gt;ffmt&lt;/a&gt; - Beautify data display for Humans.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TwinProduction/gatus"&gt;gatus&lt;/a&gt; - Automated service health dashboard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lana/go-commandbus"&gt;go-commandbus&lt;/a&gt; - A slight and pluggable command-bus for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jolestar/go-commons-pool"&gt;go-commons-pool&lt;/a&gt; - Generic object pool for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-openapi"&gt;go-openapi&lt;/a&gt; - Collection of packages to parse and utilize open-api schemas.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eapache/go-resiliency"&gt;go-resiliency&lt;/a&gt; - Resiliency patterns for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gen2brain/go-unarr"&gt;go-unarr&lt;/a&gt; - Decompression library for RAR, TAR, ZIP and 7z archives.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brianvoe/gofakeit"&gt;gofakeit&lt;/a&gt; - Random data generator written in go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antham/gommit"&gt;gommit&lt;/a&gt; - Analyze git commit messages to ensure they follow defined patterns.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shirou/gopsutil"&gt;gopsutil&lt;/a&gt; - Cross-platform library for retrieving process and system utilization(CPU, Memory, Disks, etc).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osamingo/gosh"&gt;gosh&lt;/a&gt; - Provide Go Statistics Handler, Struct, Measure Method.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/haxpax/gosms"&gt;gosms&lt;/a&gt; - Your own local SMS gateway in Go that can be used to send SMS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cabify/gotoprom"&gt;gotoprom&lt;/a&gt; - Type-safe metrics builder wrapper library for the official Prometheus client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pariz/gountries"&gt;gountries&lt;/a&gt; - Package that exposes country and subdivision data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ddddddO/gtree"&gt;gtree&lt;/a&gt; - Provide CLI, Package and Web for tree output and directories creation from Markdown or programmatically.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexliesenfeld/health"&gt;health&lt;/a&gt; - A simple and flexible health check library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dimiro1/health"&gt;health&lt;/a&gt; - Easy to use, extensible health check library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/etherlabsio/healthcheck"&gt;healthcheck&lt;/a&gt; - An opinionated and concurrent health-check HTTP handler for RESTful services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Wing924/hostutils"&gt;hostutils&lt;/a&gt; - A golang library for packing and unpacking FQDNs list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osamingo/indigo"&gt;indigo&lt;/a&gt; - Distributed unique ID generator of using Sonyflake and encoded by Base58.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyperboloide/lk"&gt;lk&lt;/a&gt; - A simple licensing library for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/llir/llvm"&gt;llvm&lt;/a&gt; - Library for interacting with LLVM IR in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pascaldekloe/metrics"&gt;metrics&lt;/a&gt; - Library for metrics instrumentation and Prometheus exposition.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alwindoss/morse"&gt;morse&lt;/a&gt; - Library to convert to and from morse code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lrita/numa"&gt;numa&lt;/a&gt; - NUMA is a utility library, which is written in go. It help us to write some NUMA-AWARED code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neotoolkit/openapi"&gt;openapi&lt;/a&gt; - OpenAPI 3.x parser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyperboloide/pdfgen"&gt;pdfgen&lt;/a&gt; - HTTP service to generate PDF from Json requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mavihq/persian"&gt;persian&lt;/a&gt; - Some utilities for Persian language in go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aofei/sandid"&gt;sandid&lt;/a&gt; - Every grain of sand on earth has its own ID.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Wing924/shellwords"&gt;shellwords&lt;/a&gt; - A Golang library to manipulate strings according to the word parsing rules of the UNIX Bourne shell.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/teris-io/shortid"&gt;shortid&lt;/a&gt; - Distributed generation of super short, unique, non-sequential, URL friendly IDs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containrrr/shoutrrr"&gt;shoutrrr&lt;/a&gt; - Notification library providing easy access to various messaging services like slack, mattermost, gotify and smtp among others.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mingard/sitemap-format"&gt;sitemap-format&lt;/a&gt; - A simple sitemap generator, with a little syntactic sugar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qmuntal/stateless"&gt;stateless&lt;/a&gt; - A fluent library for creating state machines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/stats"&gt;stats&lt;/a&gt; - Monitors Go MemStats + System stats such as Memory, Swap and CPU and sends via UDP anywhere you want for logging etc...&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hackebrot/turtle"&gt;turtle&lt;/a&gt; - Emojis for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pantrif/url-shortener"&gt;url-shortener&lt;/a&gt; - A modern, powerful, and robust URL shortener microservice with mysql support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/azr/generators/tree/master/varhandler"&gt;VarHandler&lt;/a&gt; - Generate boilerplate http input and output handling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chmike/varint"&gt;varint&lt;/a&gt; - A faster varying length integer encoder/decoder than the one provided in the standard library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rkoesters/xdg"&gt;xdg&lt;/a&gt; - FreeDesktop.org (xdg) Specs implemented in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-xkg/xkg"&gt;xkg&lt;/a&gt; - X Keyboard Grabber.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ulikunitz/xz"&gt;xz&lt;/a&gt; - Pure golang package for reading and writing xz-compressed files.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Natural Language Processing&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with human languages.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;See also &lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#text-processing"&gt;Text Processing&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#text-analysis"&gt;Text Analysis&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Language Detection&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/detectlanguage/detectlanguage-go"&gt;detectlanguage&lt;/a&gt; - Language Detection API Go Client. Supports batch requests, short phrase or single word language detection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rylans/getlang"&gt;getlang&lt;/a&gt; - Fast natural language detection package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/endeveit/guesslanguage"&gt;guesslanguage&lt;/a&gt; - Functions to determine the natural language of a unicode text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pemistahl/lingua-go"&gt;lingua-go&lt;/a&gt; - An accurate natural language detection library, suitable for long and short text alike. Supports detecting multiple languages in mixed-language text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abadojack/whatlanggo"&gt;whatlanggo&lt;/a&gt; - Natural language detection package for Go. Supports 84 languages and 24 scripts (writing systems e.g. Latin, Cyrillic, etc).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Morphological Analyzers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agonopol/go-stem"&gt;go-stem&lt;/a&gt; - Implementation of the porter stemming algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/danieldk/go2vec"&gt;go2vec&lt;/a&gt; - Reader and utility functions for word2vec embeddings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rjohnsondev/golibstemmer"&gt;golibstemmer&lt;/a&gt; - Go bindings for the snowball libstemmer library including porter 2.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dinopuguh/gosentiwordnet"&gt;gosentiwordnet&lt;/a&gt; - Sentiment analyzer using sentiwordnet lexicon in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonreiter/govader"&gt;govader&lt;/a&gt; - Go implementation of &lt;a href="https://github.com/cjhutto/vaderSentiment"&gt;VADER Sentiment Analysis&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PIMPfiction/govader_backend"&gt;govader-backend&lt;/a&gt; - Microservice implementation of &lt;a href="https://github.com/jonreiter/govader"&gt;GoVader&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ikawaha/kagome"&gt;kagome&lt;/a&gt; - JP morphological analyzer written in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goodsign/libtextcat"&gt;libtextcat&lt;/a&gt; - Cgo binding for libtextcat C library. Guaranteed compatibility with version 2.2.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Shixzie/nlp"&gt;nlp&lt;/a&gt; - Extract values from strings and fill your structs with nlp.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/james-bowman/nlp"&gt;nlp&lt;/a&gt; - Go Natural Language Processing library supporting LSA (Latent Semantic Analysis).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rookii/paicehusk"&gt;paicehusk&lt;/a&gt; - Golang implementation of the Paice/Husk Stemming Algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/a2800276/porter"&gt;porter&lt;/a&gt; - This is a fairly straightforward port of Martin Porter's C implementation of the Porter stemming algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zhenjl/porter2"&gt;porter2&lt;/a&gt; - Really fast Porter 2 stemmer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/afjoseph/RAKE.Go"&gt;RAKE.go&lt;/a&gt; - Go port of the Rapid Automatic Keyword Extraction Algorithm (RAKE).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goodsign/snowball"&gt;snowball&lt;/a&gt; - Snowball stemmer port (cgo wrapper) for Go. Provides word stem extraction functionality &lt;a href="http://snowball.tartarus.org/"&gt;Snowball native&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nlpodyssey/spago"&gt;spaGO&lt;/a&gt; - Self-contained Machine Learning and Natural Language Processing library in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jorelosorio/spellingcorrector"&gt;spelling-corrector&lt;/a&gt; - A spelling corrector for the Spanish language or create your own.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Slugifiers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozillazg/go-slugify"&gt;go-slugify&lt;/a&gt; - Make pretty slug with multiple languages support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gosimple/slug"&gt;slug&lt;/a&gt; - URL-friendly slugify with multiple languages support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/avelino/slugify"&gt;Slugify&lt;/a&gt; - Go slugify application that handles string.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Tokenizers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yanyiwu/gojieba"&gt;gojieba&lt;/a&gt; - This is a Go implementation of &lt;a href="https://github.com/fxsjy/jieba"&gt;jieba&lt;/a&gt; which a Chinese word splitting algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xujiajun/gotokenizer"&gt;gotokenizer&lt;/a&gt; - A tokenizer based on the dictionary and Bigram language models for Golang. (Now only support chinese segmentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ego/gse"&gt;gse&lt;/a&gt; - Go efficient text segmentation; support english, chinese, japanese and other.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awsong/MMSEGO"&gt;MMSEGO&lt;/a&gt; - This is a GO implementation of &lt;a href="http://technology.chtsai.org/mmseg/"&gt;MMSEG&lt;/a&gt; which a Chinese word splitting algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jdkato/prose"&gt;prose&lt;/a&gt; - Library for text processing that supports tokenization, part-of-speech tagging, named-entity extraction, and more. English only.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blevesearch/segment"&gt;segment&lt;/a&gt; - Go library for performing Unicode Text Segmentation as described in &lt;a href="https://www.unicode.org/reports/tr29/"&gt;Unicode Standard Annex #29&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neurosnap/sentences"&gt;sentences&lt;/a&gt; - Sentence tokenizer: converts text into a list of sentences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osamingo/shamoji"&gt;shamoji&lt;/a&gt; - The shamoji is word filtering package written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dchest/stemmer"&gt;stemmer&lt;/a&gt; - Stemmer packages for Go programming language. Includes English and German stemmers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pebbe/textcat"&gt;textcat&lt;/a&gt; - Go package for n-gram based text categorization, with support for utf-8 and raw text.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Translation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/invopop/ctxi18n/"&gt;ctxi18n&lt;/a&gt; - Context aware i18n with a short and consise API, pluralization, interpolation, and &lt;code&gt;fs.FS&lt;/code&gt; support. YAML locale definitions are based on &lt;a href="https://guides.rubyonrails.org/i18n.html"&gt;Rails i18n&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nicksnyder/go-i18n/"&gt;go-i18n&lt;/a&gt; - Package and an accompanying tool to work with localized text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dveselov/mystem"&gt;go-mystem&lt;/a&gt; - CGo bindings to Yandex.Mystem - russian morphology analyzer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozillazg/go-pinyin"&gt;go-pinyin&lt;/a&gt; - CN Hanzi to Hanyu Pinyin converter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/saleh-rahimzadeh/go-words"&gt;go-words&lt;/a&gt; - A words table and text resource library for Golang projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leonelquinteros/gotext"&gt;gotext&lt;/a&gt; - GNU gettext utilities for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mehanizm/iuliia-go"&gt;iuliia-go&lt;/a&gt; - Transliterate Cyrillic → Latin in every possible way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vorlif/spreak"&gt;spreak&lt;/a&gt; - Flexible translation and humanization library for Go, based on the concepts behind gettext.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/youthlin/t"&gt;t&lt;/a&gt; - Another i18n pkg for golang, which follows GNU gettext style and supports .po/.mo files: &lt;code&gt;t.T (gettext)&lt;/code&gt;, &lt;code&gt;t.N (ngettext)&lt;/code&gt;, etc. And it contains a cmd tool &lt;a href="https://github.com/youthlin/t/raw/main/cmd/xtemplate"&gt;xtemplate&lt;/a&gt;, which can extract messages as a pot file from text/html template.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Transliteration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/endeveit/enca"&gt;enca&lt;/a&gt; - Minimal cgo bindings for &lt;a href="https://cihar.com/software/enca/"&gt;libenca&lt;/a&gt;, which detects character encodings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozillazg/go-unidecode"&gt;go-unidecode&lt;/a&gt; - ASCII transliterations of Unicode text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fiam/gounidecode"&gt;gounidecode&lt;/a&gt; - Unicode transliterator (also known as unidecode) for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexsergivan/transliterator"&gt;transliterator&lt;/a&gt; - Provides one-way string transliteration with supporting of language-specific transliteration rules.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Networking&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with various layers of the network.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mdlayher/arp"&gt;arp&lt;/a&gt; - Package arp implements the ARP protocol, as described in RFC 826.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gaissmai/bart"&gt;bart&lt;/a&gt; - Package bart provides a Balanced-Routing-Table (BART) for very fast IP to CIDR lookups and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stabbycutyou/buffstreams"&gt;buffstreams&lt;/a&gt; - Streaming protocolbuffer data over TCP made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zubairhamed/canopus"&gt;canopus&lt;/a&gt; - CoAP Client/Server implementation (RFC 7252).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yl2chen/cidranger"&gt;cidranger&lt;/a&gt; - Fast IP to CIDR lookup for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudflare/cloudflared"&gt;cloudflared&lt;/a&gt; - Cloudflare Tunnel client (formerly Argo Tunnel).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mdlayher/dhcp6"&gt;dhcp6&lt;/a&gt; - Package dhcp6 implements a DHCPv6 server, as described in RFC 3315.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miekg/dns"&gt;dns&lt;/a&gt; - Go library for working with DNS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mosajjal/dnsmonster"&gt;dnsmonster&lt;/a&gt; - Passive DNS Capture/Monitoring Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DarthPestilane/easytcp"&gt;easytcp&lt;/a&gt; - A light-weight TCP framework written in Go (Golang), built with message router. EasyTCP helps you build a TCP server easily fast and less painful.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/songgao/ether"&gt;ether&lt;/a&gt; - Cross-platform Go package for sending and receiving ethernet frames.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mdlayher/ethernet"&gt;ethernet&lt;/a&gt; - Package ethernet implements marshaling and unmarshalling of IEEE 802.3 Ethernet II frames and IEEE 802.1Q VLAN tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cheng-zhongliang/event"&gt;event&lt;/a&gt; - Simple I/O event notification library written in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/valyala/fasthttp"&gt;fasthttp&lt;/a&gt; - Package fasthttp is a fast HTTP implementation for Go, up to 10 times faster than net/http.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fortio/fortio"&gt;fortio&lt;/a&gt; - Load testing library and command line tool, advanced echo server and web UI. Allows to specify a set query-per-second load and record latency histograms and other useful stats and graph them. Tcp, Http, gRPC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jlaffaye/ftp"&gt;ftp&lt;/a&gt; - Package ftp implements a FTP client as described in &lt;a href="https://tools.ietf.org/html/rfc959"&gt;RFC 959&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fclairamb/ftpserverlib"&gt;ftpserverlib&lt;/a&gt; - Fully featured FTP server library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shoriwe/fullproxy"&gt;fullproxy&lt;/a&gt; - A fully featured scriptable and daemon configurable proxy and pivoting toolkit with SOCKS5, HTTP, raw ports and reverse proxy protocols.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alegrey91/fwdctl"&gt;fwdctl&lt;/a&gt; - A simple and intuitive CLI to manage IPTables forwards in your Linux server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xtaci/gaio"&gt;gaio&lt;/a&gt; - High performance async-io networking for Golang in proactor mode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Allenxuxu/gev"&gt;gev&lt;/a&gt; - gev is a lightweight, fast non-blocking TCP network library based on Reactor mode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jimlambrt/gldap"&gt;gldap&lt;/a&gt; - gldap provides an ldap server implementation and you provide handlers for its ldap operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DrmagicE/gmqtt"&gt;gmqtt&lt;/a&gt; - Gmqtt is a flexible, high-performance MQTT broker library that fully implements the MQTT protocol V3.1.1.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/panjf2000/gnet"&gt;gnet&lt;/a&gt; - &lt;code&gt;gnet&lt;/code&gt; is a high-performance, lightweight, non-blocking, event-driven networking framework written in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fish-tennis/gnet"&gt;gnet&lt;/a&gt; - &lt;code&gt;gnet&lt;/code&gt; is a high-performance networking framework,especially for game servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/gnxi"&gt;gNxI&lt;/a&gt; - A collection of tools for Network Management that use the gNMI and gNOI protocols.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/go-getter"&gt;go-getter&lt;/a&gt; - Go library for downloading files or directories from various sources using a URL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/presbrey/go-multiproxy"&gt;go-multiproxy&lt;/a&gt; - Library for making HTTP requests through a pool of proxies offering fault tolerance, load balancing, automatic retries, cookie management, and more, via http.Get/Post replacement or http.Client RoundTripper drop-in&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joeig/go-powerdns"&gt;go-powerdns&lt;/a&gt; - PowerDNS API bindings for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lampctl/go-sse"&gt;go-sse&lt;/a&gt; - Go client and server implementation of HTML server-sent events.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ccding/go-stun"&gt;go-stun&lt;/a&gt; - Go implementation of the STUN client (RFC 3489 and RFC 5389).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osrg/gobgp"&gt;gobgp&lt;/a&gt; - BGP implemented in the Go Programming Language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/gopacket"&gt;gopacket&lt;/a&gt; - Go library for packet processing with libpcap bindings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/akrennmair/gopcap"&gt;gopcap&lt;/a&gt; - Go wrapper for libpcap.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elazarl/goproxy"&gt;GoProxy&lt;/a&gt; - A library to create a customized HTTP/HTTPS proxy server using Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sunwxg/goshark"&gt;goshark&lt;/a&gt; - Package goshark use tshark to decode IP packet and create data struct to analyse packet.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/soniah/gosnmp"&gt;gosnmp&lt;/a&gt; - Native Go library for performing SNMP actions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gansidui/gotcp"&gt;gotcp&lt;/a&gt; - Go package for quickly writing tcp applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cavaliercoder/grab"&gt;grab&lt;/a&gt; - Go package for managing file downloads.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/koofr/graval"&gt;graval&lt;/a&gt; - Experimental FTP server framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lxzan/gws"&gt;gws&lt;/a&gt; - High-Performance WebSocket Server &amp;amp; Client With AsyncIO Supporting .&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gchaincl/httplab"&gt;HTTPLab&lt;/a&gt; - HTTPLabs let you inspect HTTP requests and forge responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wzshiming/httpproxy"&gt;httpproxy&lt;/a&gt; - HTTP proxy handler and dialer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/c-robinson/iplib"&gt;iplib&lt;/a&gt; - Library for working with IP addresses (net.IP, net.IPNet), inspired by python &lt;a href="https://docs.python.org/3/library/ipaddress.html"&gt;ipaddress&lt;/a&gt; and ruby &lt;a href="https://ruby-doc.org/stdlib-2.5.1/libdoc/ipaddr/rdoc/IPAddr.html"&gt;ipaddr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/udhos/jazigo"&gt;jazigo&lt;/a&gt; - Jazigo is a tool written in Go for retrieving configuration for multiple network devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xtaci/kcp-go"&gt;kcp-go&lt;/a&gt; - KCP - Fast and Reliable ARQ Protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xtaci/kcptun"&gt;kcptun&lt;/a&gt; - Extremely simple &amp;amp; fast udp tunnel based on KCP protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fanux/lhttp"&gt;lhttp&lt;/a&gt; - Powerful websocket framework, build your IM server more easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ian-kent/linkio"&gt;linkio&lt;/a&gt; - Network link speed simulation for Reader/Writer interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kirillDanshin/llb"&gt;llb&lt;/a&gt; - It's a very simple but quick backend for proxy servers. Can be useful for fast redirection to predefined domain with zero memory allocation and fast response.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/mdns"&gt;mdns&lt;/a&gt; - Simple mDNS (Multicast DNS) client/server library in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://eclipse.org/paho/clients/golang/"&gt;mqttPaho&lt;/a&gt; - The Paho Go Client provides an MQTT client library for connection to MQTT brokers via TCP, TLS or WebSockets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/soypat/natiu-mqtt"&gt;natiu-mqtt&lt;/a&gt; - A dead-simple, non-allocating, low level implementation of MQTT well suited for embedded systems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lesismal/nbio"&gt;nbio&lt;/a&gt; - Pure Go 1000k+ connections solution, support tls/http1.x/websocket and basically compatible with net/http, with high-performance and low memory cost, non-blocking, event-driven, easy-to-use.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/x/net"&gt;net&lt;/a&gt; - This repository holds supplementary Go networking libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudwego/netpoll"&gt;netpoll&lt;/a&gt; - A high-performance non-blocking I/O networking framework, which focused on RPC scenarios, developed by ByteDance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/intel-go/nff-go"&gt;NFF-Go&lt;/a&gt; - Framework for rapid development of performant network functions for cloud and bare-metal (former YANFF).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yosebyte/nodepass"&gt;nodepass&lt;/a&gt; - A secure, efficient TCP/UDP tunneling solution that delivers fast, reliable access across network restrictions using pre-established TLS/TCP connections.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/schollz/peerdiscovery"&gt;peerdiscovery&lt;/a&gt; - Pure Go library for cross-platform local peer discovery using UDP multicast.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aybabtme/portproxy"&gt;portproxy&lt;/a&gt; - Simple TCP proxy which adds CORS support to API's which don't support it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jeroenrinzema/psql-wire"&gt;psql-wire&lt;/a&gt; - PostgreSQL server wire protocol. Build your own server and start serving connections..&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/polera/publicip"&gt;publicip&lt;/a&gt; - Package publicip returns your public facing IPv4 address (internet egress).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lucas-clemente/quic-go"&gt;quic-go&lt;/a&gt; - An implementation of the QUIC protocol in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mdlayher/raw"&gt;raw&lt;/a&gt; - Package raw enables reading and writing data at the device driver level for a network interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/semihalev/sdns"&gt;sdns&lt;/a&gt; - A high-performance, recursive DNS resolver server with DNSSEC support, focused on preserving privacy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pkg/sftp"&gt;sftp&lt;/a&gt; - Package sftp implements the SSH File Transfer Protocol as described in &lt;a href="https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt"&gt;https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gliderlabs/ssh"&gt;ssh&lt;/a&gt; - Higher-level API for building SSH servers (wraps crypto/ssh).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eduardonunesp/sslb"&gt;sslb&lt;/a&gt; - It's a Super Simples Load Balancer, just a little project to achieve some kind of performance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-rtc/stun"&gt;stun&lt;/a&gt; - Go implementation of RFC 5389 STUN protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lim-yoona/tcpack"&gt;tcpack&lt;/a&gt; - tcpack is an application protocol based on TCP to Pack and Unpack bytes stream in go program.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/two/tspool"&gt;tspool&lt;/a&gt; - A TCP Library use worker pool to improve performance and protect your server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xjasonlyu/tun2socks"&gt;tun2socks&lt;/a&gt; - A pure go implementation of tun2socks powered by &lt;a href="https://gvisor.dev/"&gt;gVisor&lt;/a&gt; TCP/IP stack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anacrolix/utp"&gt;utp&lt;/a&gt; - Go uTP micro transport protocol implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yahoo/vssh"&gt;vssh&lt;/a&gt; - Go library for building network and server automation over SSH protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/songgao/water"&gt;water&lt;/a&gt; - Simple TUN/TAP library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pions/webrtc"&gt;webrtc&lt;/a&gt; - A pure Go implementation of the WebRTC API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/masterzen/winrm"&gt;winrm&lt;/a&gt; - Go WinRM client to remotely execute commands on Windows machines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xfxdev/xtcp"&gt;xtcp&lt;/a&gt; - TCP Server Framework with simultaneous full duplex communication, graceful shutdown, and custom protocol.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;HTTP Clients&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Libraries for making HTTP requests.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rezmoss/axios4go"&gt;axios4go&lt;/a&gt; - A Go HTTP client library inspired by Axios, providing a simple and intuitive API for making HTTP requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Noooste/azuretls-client"&gt;azuretls-client&lt;/a&gt; - An easy-to-use HTTP client 100% in Go to spoof TLS/JA3 and HTTP2 fingerprint.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/opus-domini/fast-shot"&gt;fast-shot&lt;/a&gt; - Hit your API targets with rapid-fire precision using Go's fastest and simple HTTP Client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h2non/gentleman"&gt;gentleman&lt;/a&gt; - Full-featured plugin-driven HTTP client library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/go-cleanhttp"&gt;go-cleanhttp&lt;/a&gt; - Get easily stdlib HTTP client, which does not share any state with other clients.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bozd4g/go-http-client"&gt;go-http-client&lt;/a&gt; - Make http calls simply and easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/optimus-hft/go-ipmux"&gt;go-ipmux&lt;/a&gt; - A library for Multiplexing HTTP requests based on multiple Source IPs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NdoleStudio/go-otelroundtripper"&gt;go-otelroundtripper&lt;/a&gt; - Go http.RoundTripper that emits open telemetry metrics for HTTP requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wenerme/go-req"&gt;go-req&lt;/a&gt; - Declarative golang HTTP client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/go-retryablehttp"&gt;go-retryablehttp&lt;/a&gt; - Retryable HTTP client in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-zoox/fetch"&gt;go-zoox/fetch&lt;/a&gt; - A Powerful, Lightweight, Easy Http Client, inspired by Web Fetch API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/levigross/grequests"&gt;grequests&lt;/a&gt; - A Go "clone" of the great and famous Requests library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gojektech/heimdall"&gt;heimdall&lt;/a&gt; - An enhanced http client with retry and hystrix capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ybbus/httpretry"&gt;httpretry&lt;/a&gt; - Enriches the default go HTTP client with retry functionality.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sethgrid/pester"&gt;pester&lt;/a&gt; - Go HTTP client calls with retries, backoff, and concurrency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/imroc/req"&gt;req&lt;/a&gt; - Simple Go HTTP client with Black Magic (Less code and More efficiency).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/monaco-io/request"&gt;request&lt;/a&gt; - HTTP client for golang. If you have experience about axios or requests, you will love it. No 3rd dependency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carlmjohnson/requests"&gt;requests&lt;/a&gt; - HTTP requests for Gophers. Uses context.Context and doesn't hide the underlying net/http.Client, making it compatible with standard Go APIs. Also includes testing tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-resty/resty"&gt;resty&lt;/a&gt; - Simple HTTP and REST client for Go inspired by Ruby rest-client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ddo/rq"&gt;rq&lt;/a&gt; - A nicer interface for golang stdlib HTTP client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dghubble/sling"&gt;sling&lt;/a&gt; - Sling is a Go HTTP client library for creating and sending API requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bogdanfinn/tls-client"&gt;tls-client&lt;/a&gt; - net/http.Client like HTTP Client with options to select specific client TLS Fingerprints to use for requests.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;OpenGL&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for using OpenGL in Go.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gl/gl"&gt;gl&lt;/a&gt; - Go bindings for OpenGL (generated via glow).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gl/glfw"&gt;glfw&lt;/a&gt; - Go bindings for GLFW 3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/technohippy/go-glmatrix"&gt;go-glmatrix&lt;/a&gt; - Go port of &lt;a href="https://glmatrix.net/"&gt;glMatrix&lt;/a&gt; library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goxjs/gl"&gt;goxjs/gl&lt;/a&gt; - Go cross-platform OpenGL bindings (OS X, Linux, Windows, browsers, iOS, Android).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goxjs/glfw"&gt;goxjs/glfw&lt;/a&gt; - Go cross-platform glfw library for creating an OpenGL context and receiving events.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gl/mathgl"&gt;mathgl&lt;/a&gt; - Pure Go math package specialized for 3D math, with inspiration from GLM.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;ORM&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries that implement Object-Relational Mapping or datamapping techniques.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stephenafamo/bob"&gt;bob&lt;/a&gt; - SQL query builder and ORM/Factory generator for Go. Successor of SQLBoiler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uptrace/bun"&gt;bun&lt;/a&gt; - SQL-first Golang ORM. Successor of go-pg.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Yiling-J/cacheme-go"&gt;cacheme&lt;/a&gt; - Schema based, typed Redis caching/memoize framework for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/FrancoLiberali/cql"&gt;CQL&lt;/a&gt; - Built on top of GORM, adds compile-time verified queries based on auto-generated code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/facebook/ent"&gt;ent&lt;/a&gt; - An entity framework for Go. Simple, yet powerful ORM for modeling and querying data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/go-dbw"&gt;go-dbw&lt;/a&gt; - A simple package that encapsulates database operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jschoedt/go-firestorm"&gt;go-firestorm&lt;/a&gt; - A simple ORM for Google/Firebase Cloud Firestore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rushteam/gosql"&gt;go-sql&lt;/a&gt; - A easy ORM for mysql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huandu/go-sqlbuilder"&gt;go-sqlbuilder&lt;/a&gt; - A flexible and powerful SQL string builder library plus a zero-config ORM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gosuri/go-store"&gt;go-store&lt;/a&gt; - Simple and fast Redis backed key-value store library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golobby/orm"&gt;golobby/orm&lt;/a&gt; - Simple, fast, type-safe, generic orm for developer happiness.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gorm/gorm"&gt;GORM&lt;/a&gt; - The fantastic ORM library for Golang, aims to be developer friendly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xxjwxc/gormt"&gt;gormt&lt;/a&gt; - Mysql database to golang gorm struct.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gorp/gorp"&gt;gorp&lt;/a&gt; - Go Relational Persistence, ORM-ish library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Fs02/grimoire"&gt;grimoire&lt;/a&gt; - Grimoire is a database access layer and validation for golang. (Support: MySQL, PostgreSQL and SQLite3).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abrahambotros/lore"&gt;lore&lt;/a&gt; - Simple and lightweight pseudo-ORM/pseudo-struct-mapping environment for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marlow/marlow"&gt;marlow&lt;/a&gt; - Generated ORM from project structs for compile time safety assurances.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gobuffalo/pop"&gt;pop/soda&lt;/a&gt; - Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prisma/prisma-client-go"&gt;Prisma&lt;/a&gt; - Prisma Client Go, Typesafe database access for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-reform/reform"&gt;reform&lt;/a&gt; - Better ORM for Go, based on non-empty interfaces and code generation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-rel/rel"&gt;rel&lt;/a&gt; - Modern Database Access Layer for Golang - Testable, Extendable and Crafted Into a Clean and Elegant API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volatiletech/sqlboiler"&gt;SQLBoiler&lt;/a&gt; - ORM generator. Generate a featureful and blazing-fast ORM tailored to your database schema.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/upper/db"&gt;upper.io/db&lt;/a&gt; - Single interface for interacting with different data sources through the use of adapters that wrap mature database drivers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitea.com/xorm/xorm"&gt;XORM&lt;/a&gt; - Simple and powerful ORM for Go. (Support: MySQL, MyMysql, PostgreSQL, Tidb, SQLite3, MsSql and Oracle).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/albrow/zoom"&gt;Zoom&lt;/a&gt; - Blazing-fast datastore and querying engine built on Redis.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Package Management&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Official tooling for dependency and package management&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/cmd/go/#hdr-Modules__module_versions__and_more"&gt;go modules&lt;/a&gt; - Modules are the unit of source code interchange and versioning. The go command has direct support for working with modules, including recording and resolving dependencies on other modules.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Unofficial libraries for package and dependency management.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nao1215/gup"&gt;gup&lt;/a&gt; - Update binaries installed by "go install".&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chaindead/modup"&gt;modup&lt;/a&gt; - Terminal UI for Go dependency updates with outdated module detection and selective upgrading.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/raydac/mvn-golang"&gt;mvn-golang&lt;/a&gt; - plugin that provides way for auto-loading of Golang SDK, dependency management and start build environment in Maven project infrastructure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anchore/syft"&gt;syft&lt;/a&gt; - A CLI tool and Go library for generating a Software Bill of Materials (SBOM) from container images and filesystems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/go-instrument"&gt;go-instrument&lt;/a&gt; - Automatically add spans to all methods and functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jaegertracing/jaeger"&gt;jaeger&lt;/a&gt; - A distributed tracing system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joetifa2003/mm-go"&gt;mm-go&lt;/a&gt; - Generic manual memory management for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pixie-labs/pixie"&gt;pixie&lt;/a&gt; - No instrumentation tracing for Golang applications via eBPF.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pkg/profile"&gt;profile&lt;/a&gt; - Simple profiling support package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arl/statsviz"&gt;statsviz&lt;/a&gt; - Live visualization of your Go application runtime statistics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamilsk/tracer"&gt;tracer&lt;/a&gt; - Simple, lightweight tracing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Query Language&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ccbrown/api-fu"&gt;api-fu&lt;/a&gt; - Comprehensive GraphQL implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomwright/dasel"&gt;dasel&lt;/a&gt; - Query and update data structures using selectors from the command line. Comparable to jq/yq but supports JSON, YAML, TOML and XML with zero runtime dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thedevsaddam/gojsonq"&gt;gojsonq&lt;/a&gt; - A simple Go package to Query over JSON Data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SeldonIO/goven"&gt;goven&lt;/a&gt; - A drop-in query language for any database schema.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/99designs/gqlgen"&gt;gqlgen&lt;/a&gt; - go generate based graphql server library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reaganiwadha/grapher"&gt;grapher&lt;/a&gt; - A GraphQL field builder utilizing Go generics with extra utilities and features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tmc/graphql"&gt;graphql&lt;/a&gt; - graphql parser + utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neelance/graphql-go"&gt;graphql&lt;/a&gt; - GraphQL server with a focus on ease of use.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/graphql-go/graphql"&gt;graphql-go&lt;/a&gt; - Implementation of GraphQL for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Zaba505/gws"&gt;gws&lt;/a&gt; - Apollos' "GraphQL over Websocket" client and server implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AsaiYusuke/jsonpath"&gt;jsonpath&lt;/a&gt; - A query library for retrieving part of JSON based on JSONPath syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elgs/jsonql"&gt;jsonql&lt;/a&gt; - JSON query expression library in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bhmj/jsonslice"&gt;jsonslice&lt;/a&gt; - Jsonpath queries with advanced filters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/mql"&gt;mql&lt;/a&gt; - Model Query Language (mql) is a query language for your database models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/a8m/rql"&gt;rql&lt;/a&gt; - Resource Query Language for REST API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timsolov/rest-query-parser"&gt;rqp&lt;/a&gt; - Query Parser for REST API. Filtering, validations, both &lt;code&gt;AND&lt;/code&gt;, &lt;code&gt;OR&lt;/code&gt; operations are supported directly in the query.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SonicRoshan/straf"&gt;straf&lt;/a&gt; - Easily Convert Golang structs to GraphQL objects.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Reflection&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gotidy/copy"&gt;copy&lt;/a&gt; - Package for fast copying structs of different types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ulule/deepcopier"&gt;Deepcopier&lt;/a&gt; - Simple struct copying for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiendc/go-deepcopy"&gt;go-deepcopy&lt;/a&gt; - Fast deep copy library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lvyahui8/goenum"&gt;goenum&lt;/a&gt; - A common enumeration struct based on generics and reflection that allows you to quickly define enumerations and use a set of useful default methods.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wzshiming/gotype"&gt;gotype&lt;/a&gt; - Golang source code parsing, usage like reflect package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tenntenn/gpath"&gt;gpath&lt;/a&gt; - Library to simplify access struct fields with Go's expression in reflection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rekby/objwalker"&gt;objwalker&lt;/a&gt; - Walk by go objects with reflection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gontainer/reflectpro"&gt;reflectpro&lt;/a&gt; - Callers, copiers, getters and setters for go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muir/reflectutils"&gt;reflectutils&lt;/a&gt; - Helpers for working with reflection: struct tag parsing; recursive walking; fill value from string.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Resource Embedding&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leaanthony/debme"&gt;debme&lt;/a&gt; - Create an &lt;code&gt;embed.FS&lt;/code&gt; from an existing &lt;code&gt;embed.FS&lt;/code&gt; subdirectory.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/embed"&gt;embed&lt;/a&gt; - Package embed provides access to files embedded in the running Go program.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/soypat/rebed"&gt;rebed&lt;/a&gt; - Recreate folder structures and files from Go 1.16's &lt;code&gt;embed.FS&lt;/code&gt; type&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shurcooL/vfsgen"&gt;vfsgen&lt;/a&gt; - Generates a vfsdata.go file that statically implements the given virtual filesystem.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Science and Data Analysis&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for scientific computing and data analyzing.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ndabAP/assocentity"&gt;assocentity&lt;/a&gt; - Package assocentity returns the average distance from words to a given entity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seanhagen/bradleyterry"&gt;bradleyterry&lt;/a&gt; - Provides a Bradley-Terry Model for pairwise comparisons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/calendarheatmap"&gt;calendarheatmap&lt;/a&gt; - Calendar heatmap in plain Go inspired by Github contribution activity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vdobler/chart"&gt;chart&lt;/a&gt; - Simple Chart Plotting library for Go. Supports many graphs types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rocketlaunchr/dataframe-go"&gt;dataframe-go&lt;/a&gt; - Dataframes for machine-learning and statistics (similar to pandas).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/db47h/decimal"&gt;decimal&lt;/a&gt; - Package decimal implements arbitrary-precision decimal floating-point arithmetic.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/soniah/evaler"&gt;evaler&lt;/a&gt; - Simple floating point arithmetic expression evaluator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VividCortex/ewma"&gt;ewma&lt;/a&gt; - Exponentially-weighted moving averages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skelterjohn/geom"&gt;geom&lt;/a&gt; - 2D geometry for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mjibson/go-dsp"&gt;go-dsp&lt;/a&gt; - Digital Signal Processing for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/milosgajdos/go-estimate"&gt;go-estimate&lt;/a&gt; - State estimation and filtering algorithms in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ThePaw/go-gt"&gt;go-gt&lt;/a&gt; - Graph theory algorithms written in "Go" language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-hep/hep"&gt;go-hep&lt;/a&gt; - A set of libraries and tools for performing High Energy Physics analyses with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/soypat/godesim"&gt;godesim&lt;/a&gt; - Extended/multivariable ODE solver framework for event-based simulations with simple API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kzahedi/goent"&gt;goent&lt;/a&gt; - GO Implementation of Entropy Measures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hmdsefi/gograph"&gt;gograph&lt;/a&gt; - A golang generic graph library that provides mathematical graph-theory and algorithms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gonum/gonum"&gt;gonum&lt;/a&gt; - Gonum is a set of numeric libraries for the Go programming language. It contains libraries for matrices, statistics, optimization, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gonum/plot"&gt;gonum/plot&lt;/a&gt; - gonum/plot provides an API for building and drawing plots in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gyuho/goraph"&gt;goraph&lt;/a&gt; - Pure Go graph theory library(data structure, algorithm visualization).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cpmech/gosl"&gt;gosl&lt;/a&gt; - Go scientific library for linear algebra, FFT, geometry, NURBS, numerical methods, probabilities, optimisation, differential equations, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OGFris/GoStats"&gt;GoStats&lt;/a&gt; - GoStats is an Open Source GoLang library for math statistics mostly used in Machine Learning domains, it covers most of the Statistical measures functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yourbasic/graph"&gt;graph&lt;/a&gt; - Library of basic graph algorithms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/jsonl-graph"&gt;jsonl-graph&lt;/a&gt; - Tool to manipulate JSONL graphs with graphviz support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChristopherRabotin/ode"&gt;ode&lt;/a&gt; - Ordinary differential equation (ODE) solver which supports extended states and channel-based iteration stop conditions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paulmach/orb"&gt;orb&lt;/a&gt; - 2D geometry types with clipping, GeoJSON and Mapbox Vector Tile support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alixaxel/pagerank"&gt;pagerank&lt;/a&gt; - Weighted PageRank algorithm implemented in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sgreben/piecewiselinear"&gt;piecewiselinear&lt;/a&gt; - Tiny linear interpolation library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/claygod/PiHex"&gt;PiHex&lt;/a&gt; - Implementation of the "Bailey-Borwein-Plouffe" algorithm for the hexadecimal number Pi.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bebop/poly"&gt;Poly&lt;/a&gt; - A Go package for engineering organisms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/khezen/rootfinding"&gt;rootfinding&lt;/a&gt; - root-finding algorithms library for finding roots of quadratic functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/james-bowman/sparse"&gt;sparse&lt;/a&gt; - Go Sparse matrix formats for linear algebra supporting scientific and machine learning applications, compatible with gonum matrix libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/montanaflynn/stats"&gt;stats&lt;/a&gt; - Statistics package with common functions missing from the Golang standard library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nytlabs/streamtools"&gt;streamtools&lt;/a&gt; - general purpose, graphical tool for dealing with streams of data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DavidBelicza/TextRank"&gt;TextRank&lt;/a&gt; - TextRank implementation in Golang with extendable features (summarization, weighting, phrase extraction) and multithreading (goroutine) support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/keilerkonzept/topk"&gt;topk&lt;/a&gt; - Sliding-window and regular top-K sketches, based on the HeavyKeeper algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tchayen/triangolatte"&gt;triangolatte&lt;/a&gt; - 2D triangulation library. Allows translating lines and polygons (both based on points) to the language of GPUs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries that are used to help make your application more secure.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hlandau/acme"&gt;acmetool&lt;/a&gt; - ACME (Let's Encrypt) client tool with automatic renewal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sr.ht/~jamesponddotco/acopw-go/"&gt;acopw-go&lt;/a&gt; - Small cryptographically secure password generator package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cossacklabs/acra"&gt;acra&lt;/a&gt; - Network encryption proxy to protect database-based applications from data leaks: strong selective encryption, SQL injections prevention, intrusion detection system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/FiloSottile/age"&gt;age&lt;/a&gt; - A simple, modern and secure encryption tool (and Go library) with small explicit keys, no config options, and UNIX-style composability.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andskur/argon2-hashing"&gt;argon2-hashing&lt;/a&gt; - light wrapper around Go's argon2 package that closely mirrors with Go's standard library Bcrypt and simple-scrypt package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/raja/argon2pw"&gt;argon2pw&lt;/a&gt; - Argon2 password hash generation with constant-time password comparison.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/golang.org/x/crypto/acme/autocert"&gt;autocert&lt;/a&gt; - Auto provision Let's Encrypt certificates and start a TLS server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jaredfolkins/badactor"&gt;BadActor&lt;/a&gt; - In-memory, application-driven jailer built in the spirit of fail2ban.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mariocandela/beelzebub"&gt;beelzebub&lt;/a&gt; - A secure low code honeypot framework, leveraging AI for System Virtualization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anatol/booster"&gt;booster&lt;/a&gt; - Fast initramfs generator with full-disk encryption support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ullaakut/cameradar"&gt;Cameradar&lt;/a&gt; - Tool and library to remotely hack RTSP streams from surveillance cameras.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mvmaasakkers/certificates"&gt;certificates&lt;/a&gt; - An opinionated tool for generating tls certificates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/caddyserver/certmagic"&gt;CertMagic&lt;/a&gt; - Mature, robust, and powerful ACME client integration for fully-managed TLS certificate issuance and renewal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/corazawaf/coraza"&gt;Coraza&lt;/a&gt; - Enterprise-ready, modsecurity and OWASP CRS compatible WAF library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang-module/dongle"&gt;dongle&lt;/a&gt; - A simple, semantic and developer-friendly golang package for encoding&amp;amp;decoding and encryption&amp;amp;decryption.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/encid"&gt;encid&lt;/a&gt; - Encode and decode encrypted integer IDs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andreimerlescu/entpassgen"&gt;entpassgen&lt;/a&gt; - Entropy Password Generator with extensive command line arguments to generate random strings securely including digits, passwords, and passwords built using obscure dictionary words mixed with symbols and digits.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prashantgupta24/firewalld-rest"&gt;firewalld-rest&lt;/a&gt; - A rest application to dynamically update firewalld rules on a linux server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/m1/go-generate-password"&gt;go-generate-password&lt;/a&gt; - Password generator that can be used on the cli or as a library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tg123/go-htpasswd"&gt;go-htpasswd&lt;/a&gt; - Apache htpasswd Parser for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lane-c-wagner/go-password-validator"&gt;go-password-validator&lt;/a&gt; - Password validator based on raw cryptographic entropy values.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/number571/go-peer"&gt;go-peer&lt;/a&gt; - A software library for creating secure and anonymous decentralized systems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hillu/go-yara"&gt;go-yara&lt;/a&gt; - Go Bindings for &lt;a href="https://github.com/plusvic/yara"&gt;YARA&lt;/a&gt;, the "pattern matching swiss knife for malware researchers (and everyone else)".&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dwin/goArgonPass"&gt;goArgonPass&lt;/a&gt; - Argon2 password hash and verification designed to be compatible with existing Python and PHP implementations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dwin/goSecretBoxPassword"&gt;goSecretBoxPassword&lt;/a&gt; - A probably paranoid package for securely hashing and encrypting passwords.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/avahidi/interpol"&gt;Interpol&lt;/a&gt; - Rule-based data generator for fuzzing and penetration testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-acme/lego"&gt;lego&lt;/a&gt; - Pure Go ACME client library and CLI tool (for use with Let's Encrypt).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anatol/luks.go"&gt;luks.go&lt;/a&gt; - Pure Golang library to manage LUKS partitions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awnumar/memguard"&gt;memguard&lt;/a&gt; - A pure Go library for handling sensitive values in memory.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adrianosela/multikey"&gt;multikey&lt;/a&gt; - An n-out-of-N keys encryption/decryption framework based on Shamir's Secret Sharing algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinburke/nacl"&gt;nacl&lt;/a&gt; - Go implementation of the NaCL set of API's.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pjebs/optimus-go"&gt;optimus-go&lt;/a&gt; - ID hashing and Obfuscation using Knuth's Algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hlandau/passlib"&gt;passlib&lt;/a&gt; - Futureproof password hashing library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zitadel/passwap"&gt;passwap&lt;/a&gt; - Provides a unified implementation between different password hashing algorithms&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bitfield/qrand"&gt;qrand&lt;/a&gt; - Client for the ANU Quantum Numbers (AQN) API, providing quantum-mechanically secure random data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rsjethani/secret"&gt;secret&lt;/a&gt; - Prevent your secrets from leaking into logs, std* etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unrolled/secure"&gt;secure&lt;/a&gt; - HTTP middleware for Go that facilitates some quick security wins.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xaionaro-go/secureio"&gt;secureio&lt;/a&gt; - An keyexchanging+authenticating+encrypting wrapper and multiplexer for &lt;code&gt;io.ReadWriteCloser&lt;/code&gt; based on XChaCha20-poly1305, ECDH and ED25519.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elithrar/simple-scrypt"&gt;simple-scrypt&lt;/a&gt; - Scrypt package with a simple, obvious API and automatic cost calibration built-in.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ssh-vault/ssh-vault"&gt;ssh-vault&lt;/a&gt; - encrypt/decrypt using ssh keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adrianosela/sslmgr"&gt;sslmgr&lt;/a&gt; - SSL certificates made easy with a high level wrapper around acme/autocert.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kitabisa/teler-waf"&gt;teler-waf&lt;/a&gt; - teler-waf is a Go HTTP middleware that provide teler IDS functionality to protect against web-based attacks and improve the security of Go-based web applications. It is highly configurable and easy to integrate into existing Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cossacklabs/themis"&gt;themis&lt;/a&gt; - high-level cryptographic library for solving typical data security tasks (secure data storage, secure messaging, zero-knowledge proof authentication), available for 14 languages, best fit for multi-platform apps.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Serialization&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools for binary serialization.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glycerine/bambam"&gt;bambam&lt;/a&gt; - generator for Cap'n Proto schemas from go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/32leaves/bel"&gt;bel&lt;/a&gt; - Generate TypeScript interfaces from Go structs/interfaces. Useful for JSON RPC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ghostiam/binstruct"&gt;binstruct&lt;/a&gt; - Golang binary decoder for mapping data into the structure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fxamacker/cbor"&gt;cbor&lt;/a&gt; - Small, safe, and easy CBOR encoding and decoding library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pascaldekloe/colfer"&gt;colfer&lt;/a&gt; - Code generation for the Colfer binary format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jszwec/csvutil"&gt;csvutil&lt;/a&gt; - High Performance, idiomatic CSV record encoding and decoding to native Go structures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/epiclabs-io/elastic"&gt;elastic&lt;/a&gt; - Convert slices, maps or any other unknown value across different types at run-time, no matter what.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huydang284/fixedwidth"&gt;fixedwidth&lt;/a&gt; - Fixed-width text formatting (UTF-8 supported).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/o1egl/fwencoder"&gt;fwencoder&lt;/a&gt; - Fixed width file parser (encoding and decoding library) for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glycerine/go-capnproto"&gt;go-capnproto&lt;/a&gt; - Cap'n Proto library and parser for go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ugorji/go"&gt;go-codec&lt;/a&gt; - High Performance, feature-Rich, idiomatic encode, decode and rpc library for msgpack, cbor and json, with runtime-based OR code-generation support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiendc/go-csvlib"&gt;go-csvlib&lt;/a&gt; - High level and rich functionalities CSV serialization/deserialization library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gogo/protobuf"&gt;gogoprotobuf&lt;/a&gt; - Protocol Buffers for Go with Gadgets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang/protobuf"&gt;goprotobuf&lt;/a&gt; - Go support, in the form of a library and protocol compiler plugin, for Google's protocol buffers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/raszia/gotiny"&gt;gotiny&lt;/a&gt; - Efficient Go serialization library, gotiny is almost as fast as serialization libraries that generate code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/json-iterator/go"&gt;jsoniter&lt;/a&gt; - High-performance 100% compatible drop-in replacement of "encoding/json".&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mitchellh/mapstructure"&gt;mapstructure&lt;/a&gt; - Go library for decoding generic map values into native Go structures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yvasiyarov/php_session_decoder"&gt;php_session_decoder&lt;/a&gt; - GoLang library for working with PHP session format and PHP Serialize/Unserialize functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vimeda/pletter"&gt;pletter&lt;/a&gt; - A standard way to wrap a proto message for message brokers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tuvistavie/structomap"&gt;structomap&lt;/a&gt; - Library to easily and dynamically generate maps from static structures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/recolude/unitpacking"&gt;unitpacking&lt;/a&gt; - Library to pack unit vectors into as fewest bytes as possible.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Server Applications&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyproto/algernon"&gt;algernon&lt;/a&gt; - HTTP/2 web server with built-in support for Lua, Markdown, GCSS and Amber.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/caddyserver/caddy"&gt;Caddy&lt;/a&gt; - Caddy is an alternative, HTTP/2 web server that's easy to configure and use.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.consul.io/"&gt;consul&lt;/a&gt; - Consul is a tool for service discovery, monitoring and configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blind-oracle/cortex-tenant"&gt;cortex-tenant&lt;/a&gt; - Prometheus remote write proxy that adds add Cortex tenant ID header based on metric labels.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cortesi/devd"&gt;devd&lt;/a&gt; - Local webserver for developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Bilibili/discovery"&gt;discovery&lt;/a&gt; - A registry for resilient mid-tier load balancing and failover.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/krotik/dudeldu"&gt;dudeldu&lt;/a&gt; - A simple SHOUTcast server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/megaease/easegress"&gt;Easegress&lt;/a&gt; - A cloud native high availability/performance traffic orchestration system with observability and extensibility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bifroest.engity.org/"&gt;Engity's Bifröst&lt;/a&gt; - Highly customizable SSH server with several ways to authorize a user how to execute its session (local or in containers).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/etcd-io/etcd"&gt;etcd&lt;/a&gt; - Highly-available key value store for shared configuration and service discovery.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ironsmile/euterpe"&gt;Euterpe&lt;/a&gt; - Self-hosted music streaming server with built-in web UI and REST API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getfider/fider"&gt;Fider&lt;/a&gt; - Fider is an open platform to collect and organize customer feedback.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/checkr/flagr"&gt;Flagr&lt;/a&gt; - Flagr is an open-source feature flagging and A/B testing service.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/markphelps/flipt"&gt;flipt&lt;/a&gt; - A self contained feature flag solution written in Go and Vue.js&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thomaspoignant/go-feature-flag"&gt;go-feature-flag&lt;/a&gt; - A simple, complete and lightweight self-hosted feature flag solution 100% Open Source.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fabiocicerchia/go-proxy-cache"&gt;go-proxy-cache&lt;/a&gt; - Simple Reverse Proxy with Caching, written in Go, using Redis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bmf-san/gondola"&gt;gondola&lt;/a&gt; - A YAML based golang reverse proxy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rekby/lets-proxy2"&gt;lets-proxy2&lt;/a&gt; - Reverse proxy for handle https with issue certificates in fly from lets-encrypt.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/minio/minio"&gt;minio&lt;/a&gt; - Minio is a distributed object storage server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sinhashubham95/moxy"&gt;Moxy&lt;/a&gt; - Moxy is a simple mocker and proxy application server, you can create mock endpoints as well as proxy requests in case no mock exists for the endpoint.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blind-oracle/nginx-prometheus"&gt;nginx-prometheus&lt;/a&gt; - Nginx log parser and exporter to Prometheus.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nsq.io/"&gt;nsq&lt;/a&gt; - A realtime distributed messaging platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openrundev/openrun"&gt;OpenRun&lt;/a&gt; - Open-source alternative to Google Cloud Run and AWS App Runner. Easily deploy internal tools across a team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pocketbase/pocketbase"&gt;pocketbase&lt;/a&gt; - PocketBase is a realtime backend in 1 file consisting of embedded database (SQLite) with realtime subscriptions, built-in auth management and much more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/camgraff/protoxy"&gt;protoxy&lt;/a&gt; - A proxy server that converts JSON request bodies to Protocol Buffers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blind-oracle/psql-streamer"&gt;psql-streamer&lt;/a&gt; - Stream database events from PostgreSQL to Kafka.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blind-oracle/riemann-relay"&gt;riemann-relay&lt;/a&gt; - Relay to load-balance Riemann events and/or convert them to Carbon.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spiral/roadrunner"&gt;RoadRunner&lt;/a&gt; - High-performance PHP application server, load-balancer and process manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drakkan/sftpgo"&gt;SFTPGo&lt;/a&gt; - Fully featured and highly configurable SFTP server with optional FTP/S and WebDAV support. It can serve local filesystem and Cloud Storage backends such as S3 and Google Cloud Storage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tricksterproxy/trickster"&gt;Trickster&lt;/a&gt; - HTTP reverse proxy cache and time series accelerator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/baalimago/wd-41"&gt;wd-41&lt;/a&gt; - A (w)eb (d)evelopment server with automatic live-reload on file changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/wish"&gt;Wish&lt;/a&gt; - Make SSH apps, just like that!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Stream Processing&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools for stream processing and reactive programming.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Breeze0806/go-etl"&gt;go-etl&lt;/a&gt; - A lightweight toolkit for data source extraction, transformation, and loading (ETL).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reugn/go-streams"&gt;go-streams&lt;/a&gt; - Go stream processing library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/primetalk/goio"&gt;goio&lt;/a&gt; - An implementation of IO, Stream, Fiber for Golang, inspired by awesome Scala libraries cats and fs2.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/whitaker-io/machine"&gt;machine&lt;/a&gt; - Go library for writing and generating stream workers with built in metrics and traceability.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naughtygopher/nibbler"&gt;nibbler&lt;/a&gt; - A lightweight package for micro batch processing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/youthlin/stream"&gt;stream&lt;/a&gt; - Go Stream, like Java 8 Stream: Filter/Map/FlatMap/Peek/Sorted/ForEach/Reduce...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Template Engines&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools for templating and lexing.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benbjohnson/ego"&gt;ego&lt;/a&gt; - Lightweight templating language that lets you write templates in Go. Templates are translated into Go and compiled.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git.sr.ht/~dvko/extemplate"&gt;extemplate&lt;/a&gt; - Tiny wrapper around html/template to allow for easy file-based template inheritance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/valyala/fasttemplate"&gt;fasttemplate&lt;/a&gt; - Simple and fast template engine. Substitutes template placeholders up to 10x faster than &lt;a href="https://golang.org/pkg/text/template/"&gt;text/template&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gomponents.com"&gt;gomponents&lt;/a&gt; - HTML 5 components in pure Go, that look something like this: &lt;code&gt;func(name string) g.Node { return Div(Class("headline"), g.Textf("Hi %v!", name)) }&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goradd/got"&gt;got&lt;/a&gt; - A Go code generator inspired by Hero and Fasttemplate. Has include files, custom tag definitions, injected Go code, language translation, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/foolin/goview"&gt;goview&lt;/a&gt; - Goview is a lightweight, minimalist and idiomatic template library based on golang html/template for building Go web application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://htmgo.dev"&gt;htmgo&lt;/a&gt; - build simple and scalable systems with go + htmx&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CloudyKit/jet"&gt;jet&lt;/a&gt; - Jet template engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osteele/liquid"&gt;liquid&lt;/a&gt; - Go implementation of Shopify Liquid templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/johnfercher/maroto"&gt;maroto&lt;/a&gt; - A maroto way to create PDFs. Maroto is inspired in Bootstrap and uses gofpdf. Fast and simple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/flosch/pongo2"&gt;pongo2&lt;/a&gt; - Django-like template-engine for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/valyala/quicktemplate"&gt;quicktemplate&lt;/a&gt; - Fast, powerful, yet easy to use template engine. Converts templates into Go code and then compiles it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aymerick/raymond"&gt;raymond&lt;/a&gt; - Complete handlebars implementation in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sipin/gorazor"&gt;Razor&lt;/a&gt; - Razor view engine for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/robfig/soy"&gt;Soy&lt;/a&gt; - Closure templates (aka Soy templates) for Go, following the &lt;a href="https://developers.google.com/closure/templates/"&gt;official spec&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-sprout/sprout"&gt;sprout&lt;/a&gt; - Useful template functions for Go templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lucasepe/tbd"&gt;tbd&lt;/a&gt; - A really simple way to create text templates with placeholders - exposes extra builtin Git repo metadata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/a-h/templ"&gt;templ&lt;/a&gt; - A HTML templating language that has great developer tooling.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for testing codebases and generating test data.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Testing Frameworks&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://apitest.dev"&gt;apitest&lt;/a&gt; - Simple and extensible behavioural testing library for REST based services or HTTP handlers that supports mocking external http calls and rendering of sequence diagrams.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arch-go/arch-go"&gt;arch-go&lt;/a&gt; - Architecture testing tool for Go projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/assert"&gt;assert&lt;/a&gt; - Basic Assertion Library used along side native go testing, with building blocks for custom assertions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h2non/baloo"&gt;baloo&lt;/a&gt; - Expressive and versatile end-to-end HTTP API testing made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carlmjohnson/be"&gt;be&lt;/a&gt; - The minimalist generic test assertion library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fulldump/biff"&gt;biff&lt;/a&gt; - Bifurcation testing framework, BDD compatible.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/percolate/charlatan"&gt;charlatan&lt;/a&gt; - Tool to generate fake interface implementations for tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SimonBaeumer/commander"&gt;commander&lt;/a&gt; - Tool for testing cli applications on windows, linux and osx.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bradleyjkemp/cupaloy"&gt;cupaloy&lt;/a&gt; - Simple snapshot testing addon for your test framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/khaiql/dbcleaner"&gt;dbcleaner&lt;/a&gt; - Clean database for testing purpose, inspired by &lt;code&gt;database_cleaner&lt;/code&gt; in Ruby.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abecodes/dft"&gt;dft&lt;/a&gt; - Lightweight, zero dependency docker containers for testing (or more).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/dsunit"&gt;dsunit&lt;/a&gt; - Datastore testing for SQL, NoSQL, structured files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fergusstrange/embedded-postgres"&gt;embedded-postgres&lt;/a&gt; - Run a real Postgres database locally on Linux, OSX or Windows as part of another Go application or test.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/endly"&gt;endly&lt;/a&gt; - Declarative end to end functional testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PerimeterX/envite"&gt;envite&lt;/a&gt; - Dev and testing environment management framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rekby/fixenv"&gt;fixenv&lt;/a&gt; - Fixture manage engine, inspired by pytest fixtures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/suzuki-shunsuke/flute"&gt;flute&lt;/a&gt; - HTTP client testing framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/verdverm/frisby"&gt;frisby&lt;/a&gt; - REST API testing framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hedhyw/gherkingen"&gt;gherkingen&lt;/a&gt; - BDD boilerplate generator and framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://onsi.github.io/ginkgo/"&gt;ginkgo&lt;/a&gt; - BDD Testing Framework for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orlangure/gnomock"&gt;gnomock&lt;/a&gt; - integration testing with real dependencies (database, cache, even Kubernetes or AWS) running in Docker, without mocks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/msoap/go-carpet"&gt;go-carpet&lt;/a&gt; - Tool for viewing test coverage in terminal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/go-cmp"&gt;go-cmp&lt;/a&gt; - Package for comparing Go values in tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Eun/go-hit"&gt;go-hit&lt;/a&gt; - Hit is an http integration test framework written in golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zimmski/go-mutesting"&gt;go-mutesting&lt;/a&gt; - Mutation testing for Go source code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arikama/go-mysql-test-container"&gt;go-mysql-test-container&lt;/a&gt; - Golang MySQL testcontainer to help with MySQL integration testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://github.com/gkampitakis/go-snaps"&gt;go-snaps&lt;/a&gt; - Jest-like snapshot testing in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maxatome/go-testdeep"&gt;go-testdeep&lt;/a&gt; - Extremely flexible golang deep comparison, extends the go testing package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maargenton/go-testpredicate"&gt;go-testpredicate&lt;/a&gt; - Test predicate style assertions library with extensive diagnostics output.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dnaeon/go-vcr"&gt;go-vcr&lt;/a&gt; - Record and replay your HTTP interactions for fast, deterministic and accurate tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/franela/goblin"&gt;goblin&lt;/a&gt; - Mocha like testing framework of Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qiniu/goc"&gt;goc&lt;/a&gt; - Goc is a comprehensive coverage testing system for The Go Programming Language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://labix.org/gocheck"&gt;gocheck&lt;/a&gt; - More advanced testing framework alternative to gotest.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/smartystreets/goconvey/"&gt;GoConvey&lt;/a&gt; - BDD-style framework with web UI and live reload.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/corbym/gocrest"&gt;gocrest&lt;/a&gt; - Composable hamcrest-like matchers for Go assertions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cucumber/godog"&gt;godog&lt;/a&gt; - Cucumber BDD framework for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/appleboy/gofight"&gt;gofight&lt;/a&gt; - API Handler Testing for Golang Router framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/corbym/gogiven"&gt;gogiven&lt;/a&gt; - YATSPEC-like BDD testing framework for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jfilipczyk/gomatch"&gt;gomatch&lt;/a&gt; - library created for testing JSON against patterns.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://onsi.github.io/gomega/"&gt;gomega&lt;/a&gt; - Rspec like matcher/assertion library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stv0g/gont"&gt;Gont&lt;/a&gt; - Go network testing toolkit for testing building complex network topologies using Linux namespaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stesla/gospecify"&gt;gospecify&lt;/a&gt; - This provides a BDD syntax for testing your Go code. It should be familiar to anybody who has used libraries such as rspec.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pavlo/gosuite"&gt;gosuite&lt;/a&gt; - Brings lightweight test suites with setup/teardown facilities to &lt;code&gt;testing&lt;/code&gt; by leveraging Go1.7's Subtests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ysmood/got"&gt;got&lt;/a&gt; - An enjoyable golang test framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gotestyourself/gotest.tools"&gt;gotest.tools&lt;/a&gt; - A collection of packages to augment the go testing package and support common patterns.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rdrdr/hamcrest"&gt;Hamcrest&lt;/a&gt; - fluent framework for declarative Matcher objects that, when applied to input values, produce self-describing results.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gavv/httpexpect"&gt;httpexpect&lt;/a&gt; - Concise, declarative, and easy to use end-to-end HTTP and REST API testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matryer/is"&gt;is&lt;/a&gt; - Professional lightweight testing mini-framework for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kinbiko/jsonassert"&gt;jsonassert&lt;/a&gt; - Package for verifying that your JSON payloads are serialized correctly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/keploy/keploy"&gt;keploy&lt;/a&gt; - Generate Testcase and Data Mocks from API calls automatically.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dedalqq/omg.testingtools"&gt;omg.testingtools&lt;/a&gt; - The simple library for change a values of private fields for testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yookoala/restit"&gt;restit&lt;/a&gt; - Go micro framework to help writing RESTful API integration test.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jgroeneveld/schema"&gt;schema&lt;/a&gt; - Quick and easy expression matching for JSON schemas used in requests and responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elgohr/stop-and-go"&gt;stop-and-go&lt;/a&gt; - Testing helper for concurrency.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adamluzsi/testcase"&gt;testcase&lt;/a&gt; - Idiomatic testing framework for Behavior Driven Development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/madflojo/testcerts"&gt;testcerts&lt;/a&gt; - Dynamically generate self-signed certificates and certificate authorities within your test functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/testcontainers/testcontainers-go"&gt;testcontainers-go&lt;/a&gt; - A Go package that makes it simple to create and clean up container-based dependencies for automated integration/smoke tests. The clean, easy-to-use API enables developers to programmatically define containers that should be run as part of a test and clean up those resources when the test is done.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-testfixtures/testfixtures"&gt;testfixtures&lt;/a&gt; - A helper for Rails' like test fixtures to test database applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stretchr/testify"&gt;Testify&lt;/a&gt; - Sacred extension to the standard go testing package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zhulongcheng/testsql"&gt;testsql&lt;/a&gt; - Generate test data from SQL files before testing and clear it after finished.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MarvinJWendt/testza"&gt;testza&lt;/a&gt; - Full-featured test framework with nice colorized output.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jgroeneveld/trial"&gt;trial&lt;/a&gt; - Quick and easy extendable assertions without introducing much boilerplate.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vcaesar/tt"&gt;Tt&lt;/a&gt; - Simple and colorful test tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/posener/wstest"&gt;wstest&lt;/a&gt; - Websocket client for unit-testing a websocket http.Handler.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mock&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maxbrunsfeld/counterfeiter"&gt;counterfeiter&lt;/a&gt; - Tool for generating self-contained mock objects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/so_literate/genmock"&gt;genmock&lt;/a&gt; - Go mocking system with code generator for building calls of the interface methods.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elgohr/go-localstack"&gt;go-localstack&lt;/a&gt; - Tool for using localstack in AWS testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DATA-DOG/go-sqlmock"&gt;go-sqlmock&lt;/a&gt; - Mock SQL driver for testing database interactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DATA-DOG/go-txdb"&gt;go-txdb&lt;/a&gt; - Single transaction based database driver mainly for testing purposes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h2non/gock"&gt;gock&lt;/a&gt; - Versatile HTTP mocking made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber-go/mock"&gt;gomock&lt;/a&gt; - Mocking framework for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seborama/govcr"&gt;govcr&lt;/a&gt; - HTTP mock for Golang: record and replay HTTP interactions for offline testing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SpectoLabs/hoverfly"&gt;hoverfly&lt;/a&gt; - HTTP(S) proxy for recording and simulating REST/SOAP APIs with extensible middleware and easy-to-use CLI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jarcoal/httpmock"&gt;httpmock&lt;/a&gt; - Easy mocking of HTTP responses from external resources.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gojuno/minimock"&gt;minimock&lt;/a&gt; - Mock generator for Go interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vektra/mockery"&gt;mockery&lt;/a&gt; - Tool to generate Go interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tv42/mockhttp"&gt;mockhttp&lt;/a&gt; - Mock object for Go http.ResponseWriter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GuilhermeCaruso/mooncake"&gt;mooncake&lt;/a&gt; - A simple way to generate mocks for multiple purposes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matryer/moq"&gt;moq&lt;/a&gt; - Utility that generates a struct from any interface. The struct can be used in test code as a mock of the interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pashagolub/pgxmock"&gt;pgxmock&lt;/a&gt; - A mock library implementing &lt;a href="https://github.com/jackc/pgx/"&gt;pgx - PostgreSQL Driver and Toolkit&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cabify/timex"&gt;timex&lt;/a&gt; - A test-friendly replacement for the native &lt;code&gt;time&lt;/code&gt; package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xhd2015/xgo"&gt;xgo&lt;/a&gt; - A general pureposed function mocking library.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Fuzzing and delta-debugging/reducing/shrinking&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dvyukov/go-fuzz"&gt;go-fuzz&lt;/a&gt; - Randomized testing system.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/gofuzz"&gt;gofuzz&lt;/a&gt; - Library for populating go objects with random values.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zimmski/tavor"&gt;Tavor&lt;/a&gt; - Generic fuzzing and delta-debugging framework.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Selenium and browser control tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mafredri/cdp"&gt;cdp&lt;/a&gt; - Type-safe bindings for the Chrome Debugging Protocol that can be used with browsers or other debug targets that implement it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knq/chromedp"&gt;chromedp&lt;/a&gt; - a way to drive/test Chrome, Safari, Edge, Android Webviews, and other browsers supporting the Chrome Debugging Protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aerokube/ggr"&gt;ggr&lt;/a&gt; - a lightweight server that routes and proxies Selenium WebDriver requests to multiple Selenium hubs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mxschmitt/playwright-go"&gt;playwright-go&lt;/a&gt; - browser automation library to control Chromium, Firefox and WebKit with a single API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-rod/rod"&gt;rod&lt;/a&gt; - A Devtools driver to make web automation and scraping easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aerokube/selenoid"&gt;selenoid&lt;/a&gt; - alternative Selenium hub server that launches browsers within containers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Fail injection&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pingcap/failpoint"&gt;failpoint&lt;/a&gt; - An implementation of &lt;a href="https://www.freebsd.org/cgi/man.cgi?query=fail"&gt;failpoints&lt;/a&gt; for Golang.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Text Processing&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for parsing and manipulating texts.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;See also &lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#natural-language-processing"&gt;Natural Language Processing&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#text-analysis"&gt;Text Analysis&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Formatters&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bojanz/address"&gt;address&lt;/a&gt; - Handles address representation, validation and formatting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Guitarbum722/align"&gt;align&lt;/a&gt; - A general purpose application that aligns text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/labstack/gommon/tree/master/bytes"&gt;bytes&lt;/a&gt; - Formats and parses numeric byte values (10K, 2M, 3G, etc.).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ianlopshire/go-fixedwidth"&gt;go-fixedwidth&lt;/a&gt; - Fixed-width text formatting (encoder/decoder with reflection).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dustin/go-humanize"&gt;go-humanize&lt;/a&gt; - Formatters for time, numbers, and memory size to human readable format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bndr/gotabulate"&gt;gotabulate&lt;/a&gt; - Easily pretty-print your tabular data with Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neilotoole/sq"&gt;sq&lt;/a&gt; - Convert data from SQL databases or document formats like CSV or Excel into formats such as JSON, Excel, CSV, HTML, Markdown, XML, and YAML.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/isbm/textwrap"&gt;textwrap&lt;/a&gt; - Wraps text at end of lines. Implementation of &lt;code&gt;textwrap&lt;/code&gt; module from Python.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Markup Languages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmalcek/bafi"&gt;bafi&lt;/a&gt; - Universal JSON, BSON, YAML, XML translator to ANY format using templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CalebQ42/bbConvert"&gt;bbConvert&lt;/a&gt; - Converts bbCode to HTML that allows you to add support for custom bbCode tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/russross/blackfriday"&gt;blackfriday&lt;/a&gt; - Markdown processor in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drewstinnett/go-output-format"&gt;go-output-format&lt;/a&gt; - Output go structures into multiple formats (YAML/JSON/etc) in your command line app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pelletier/go-toml"&gt;go-toml&lt;/a&gt; - Go library for the TOML format with query support and handy cli tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuin/goldmark"&gt;goldmark&lt;/a&gt; - A Markdown parser written in Go. Easy to extend, standard (CommonMark) compliant, well structured.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andrewstuart/goq"&gt;goq&lt;/a&gt; - Declarative unmarshalling of HTML using struct tags with jQuery syntax (uses GoQuery).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JohannesKaufmann/html-to-markdown"&gt;html-to-markdown&lt;/a&gt; - Convert HTML to Markdown. Even works with entire websites and can be extended through rules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antchfx/htmlquery"&gt;htmlquery&lt;/a&gt; - An XPath query package for HTML, lets you extract data or evaluate from HTML documents by an XPath expression.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/htmlyaml"&gt;htmlyaml&lt;/a&gt; - Rich rendering of YAML as HTML in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/htree"&gt;htree&lt;/a&gt; - Traverse, navigate, filter, and otherwise process trees of &lt;a href="https://pkg.go.dev/golang.org/x/net/html#Node"&gt;html.Node&lt;/a&gt; objects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/clbanning/mxj"&gt;mxj&lt;/a&gt; - Encode / decode XML as JSON or map[string]interface{}; extract values with dot-notation paths and wildcards. Replaces x2j and j2x packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BurntSushi/toml"&gt;toml&lt;/a&gt; - TOML configuration format (encoder/decoder with reflection).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Parsers/Encoders/Decoders&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sbstjn/allot"&gt;allot&lt;/a&gt; - Placeholder and wildcard text parsing for CLI tools and bots.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aerogo/codetree"&gt;codetree&lt;/a&gt; - Parses indented code (python, pixy, scarlet, etc.) and returns a tree structure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mingrammer/commonregex"&gt;commonregex&lt;/a&gt; - A collection of common regular expressions for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ockam-network/did"&gt;did&lt;/a&gt; - DID (Decentralized Identifiers) Parser and Stringer in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hscells/doi"&gt;doi&lt;/a&gt; - Document object identifier (doi) parser in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/editorconfig/editorconfig-core-go"&gt;editorconfig-core-go&lt;/a&gt; - Editorconfig file parser and manipulator for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mickep76/encdec"&gt;encdec&lt;/a&gt; - Package provides a generic interface to encoders and decoders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elliotwutingfeng/go-fasttld"&gt;go-fasttld&lt;/a&gt; - High performance effective top level domains (eTLD) extraction module.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adrianmo/go-nmea"&gt;go-nmea&lt;/a&gt; - NMEA parser library for the Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/go-querystring"&gt;go-querystring&lt;/a&gt; - Go library for encoding structs into URL query parameters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emersion/go-vcard"&gt;go-vcard&lt;/a&gt; - Parse and format vCard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yassinebenaid/godump"&gt;godump&lt;/a&gt; - Pretty print any GO variable with ease, an alternative to Go's &lt;code&gt;fmt.Printf("%#v")&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goforj/godump"&gt;godump (goforj)&lt;/a&gt; - Pretty-print Go structs with Laravel/Symfony-style dumps, full type info, colorized CLI output, cycle detection, and private field access.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmcdole/gofeed"&gt;gofeed&lt;/a&gt; - Parse RSS and Atom feeds in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awalterschulze/gographviz"&gt;gographviz&lt;/a&gt; - Parses the Graphviz DOT language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/polera/gonameparts"&gt;gonameparts&lt;/a&gt; - Parses human names into individual name parts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Wing924/ltsv"&gt;ltsv&lt;/a&gt; - High performance &lt;a href="http://ltsv.org/"&gt;LTSV (Labeled Tab Separated Value)&lt;/a&gt; reader for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/avito-tech/normalize"&gt;normalize&lt;/a&gt; - Sanitize, normalize and compare fuzzy text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nproc/parseargs-go"&gt;parseargs-go&lt;/a&gt; - string argument parser that understands quotes and backslashes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codemodus/parth"&gt;parth&lt;/a&gt; - URL path segmentation parsing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/askeladdk/prattle"&gt;prattle&lt;/a&gt; - Scan and parse LL(1) grammars simply and efficiently.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gortc/sdp"&gt;sdp&lt;/a&gt; - SDP: Session Description Protocol [&lt;a href="https://tools.ietf.org/html/rfc4566"&gt;RFC 4566&lt;/a&gt;].&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mvdan/sh"&gt;sh&lt;/a&gt; - Shell parser and formatter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bzick/tokenizer"&gt;tokenizer&lt;/a&gt; - Parse any string, slice or infinite buffer to any tokens.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygrunwald/vdf"&gt;vdf&lt;/a&gt; - A Lexer and Parser for Valves Data Format (known as vdf) written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/olebedev/when"&gt;when&lt;/a&gt; - Natural EN and RU language date/time parser with pluggable rules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stackerzzq/xj2go"&gt;xj2go&lt;/a&gt; - Convert xml or json to go struct.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Regular Expressions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alixaxel/genex"&gt;genex&lt;/a&gt; - Count and expand Regular Expressions into all matching Strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/IGLOU-EU/go-wildcard"&gt;go-wildcard&lt;/a&gt; - Simple and lightweight wildcard pattern matching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zach-klippenstein/goregen"&gt;goregen&lt;/a&gt; - Library for generating random strings from regular expressions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oriser/regroup"&gt;regroup&lt;/a&gt; - Match regex expression named groups into go struct using struct tags and automatic parsing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hedhyw/rex"&gt;rex&lt;/a&gt; - Regular expressions builder.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sanitation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microcosm-cc/bluemonday"&gt;bluemonday&lt;/a&gt; - HTML Sanitizer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JoshuaDoes/gofuckyourself"&gt;gofuckyourself&lt;/a&gt; - A sanitization-based swear filter for Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Scrapers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asciimoo/colly"&gt;colly&lt;/a&gt; - Fast and Elegant Scraping Framework for Gophers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/slotix/dataflowkit"&gt;dataflowkit&lt;/a&gt; - Web scraping Framework to turn websites into structured data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kkyr/go-recipe"&gt;go-recipe&lt;/a&gt; - A package for scraping recipes from websites.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aafeher/go-sitemap-parser"&gt;go-sitemap-parser&lt;/a&gt; - Go language library for parsing Sitemaps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PuerkitoBio/goquery"&gt;GoQuery&lt;/a&gt; - GoQuery brings a syntax and a set of features similar to jQuery to the Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/foolin/pagser"&gt;pagser&lt;/a&gt; - Pagser is a simple, extensible, configurable parse and deserialize html page to struct based on goquery and struct tags for golang crawler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zoomio/tagify"&gt;Tagify&lt;/a&gt; - Produces a set of tags from given source.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cyucelen/walker"&gt;walker&lt;/a&gt; - Seamlessly fetch paginated data from any source. Simple and high performance API scraping included.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mvdan/xurls"&gt;xurls&lt;/a&gt; - Extract urls from text.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;RSS&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eduncan911/podcast"&gt;podcast&lt;/a&gt; - iTunes Compliant and RSS 2.0 Podcast Generator in Golang&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Utility/Miscellaneous&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/go-runewidth"&gt;go-runewidth&lt;/a&gt; - Functions to get fixed width of the character or string.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trubitsyn/go-zero-width"&gt;go-zero-width&lt;/a&gt; - Zero-width character detection and removal for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codemodus/kace"&gt;kace&lt;/a&gt; - Common case conversions covering common initialisms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/striker2000/petrovich"&gt;petrovich&lt;/a&gt; - Petrovich is the library which inflects Russian names to given grammatical case.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yourbasic/radix"&gt;radix&lt;/a&gt; - Fast string sorting algorithm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Dynom/TySug"&gt;TySug&lt;/a&gt; - Alternative suggestions with respect to keyboard layouts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arunsupe/semantic-grep"&gt;w2vgrep&lt;/a&gt; - A semantic grep tool using word embeddings to find semantically similar matches. For example, searching for "death" will find "dead", "killing", "murder".&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Third-party APIs&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for accessing third party APIs.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mehanizm/airtable"&gt;airtable&lt;/a&gt; - Go client library for the &lt;a href="https://airtable.com/api"&gt;Airtable API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChimeraCoder/anaconda"&gt;anaconda&lt;/a&gt; - Go client library for the Twitter 1.1 API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kachit/appstore-sdk-go"&gt;appstore-sdk-go&lt;/a&gt; - Unofficial Golang SDK for AppStore Connect API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chainifynet/aws-encryption-sdk-go"&gt;aws-encryption-sdk-go&lt;/a&gt; - Unofficial Go SDK implementation of the &lt;a href="https://docs.aws.amazon.com/encryption-sdk/latest/developer-guide/index.html"&gt;AWS Encryption SDK&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws/aws-sdk-go-v2"&gt;aws-sdk-go&lt;/a&gt; - The official AWS SDK for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OTA-Insight/bqwriter"&gt;bqwriter&lt;/a&gt; - High Level Go Library to write data into &lt;a href="https://cloud.google.com/bigquery"&gt;Google BigQuery&lt;/a&gt; at a high throughout.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naegelejd/brewerydb"&gt;brewerydb&lt;/a&gt; - Go library for accessing the BreweryDB API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygrunwald/cachet"&gt;cachet&lt;/a&gt; - Go client library for &lt;a href="https://cachethq.io/"&gt;Cachet (open source status page system)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jszwedko/go-circleci"&gt;circleci&lt;/a&gt; - Go client library for interacting with CircleCI's API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samuelcouch/clarifai"&gt;clarifai&lt;/a&gt; - Go client library for interfacing with the Clarifai API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codeship/codeship-go"&gt;codeship-go&lt;/a&gt; - Go client library for interacting with Codeship's API v2.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coinpaprika/coinpaprika-api-go-client"&gt;coinpaprika-go&lt;/a&gt; - Go client library for interacting with Coinpaprika's API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rinchsan/device-check-go"&gt;device-check-go&lt;/a&gt; - Go client library for interacting with &lt;a href="https://developer.apple.com/documentation/devicecheck"&gt;iOS DeviceCheck API&lt;/a&gt; v1.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bwmarrin/discordgo"&gt;discordgo&lt;/a&gt; - Go bindings for the Discord Chat API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/switchupcb/disgo"&gt;disgo&lt;/a&gt; - Go API Wrapper for the Discord API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kachit/dusupay-sdk-go"&gt;dusupay-sdk-go&lt;/a&gt; - Unofficial Dusupay payment gateway API Client for Go&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/onrik/ethrpc"&gt;ethrpc&lt;/a&gt; - Go bindings for Ethereum JSON RPC API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huandu/facebook"&gt;facebook&lt;/a&gt; - Go Library that supports the Facebook Graph API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kachit/fasapay-sdk-go"&gt;fasapay-sdk-go&lt;/a&gt; - Unofficial Fasapay payment gateway XML API Client for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maddevsio/fcm"&gt;fcm&lt;/a&gt; - Go library for Firebase Cloud Messaging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emiddleton/gads"&gt;gads&lt;/a&gt; - Google Adwords Unofficial API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aorioli/gcm"&gt;gcm&lt;/a&gt; - Go library for Google Cloud Messaging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codingsince1985/geo-golang"&gt;geo-golang&lt;/a&gt; - Go Library to access &lt;a href="https://developers.google.com/maps/documentation/geocoding/intro"&gt;Google Maps&lt;/a&gt;, &lt;a href="https://developer.mapquest.com/documentation/api/geocoding/"&gt;MapQuest&lt;/a&gt;, &lt;a href="https://nominatim.org/release-docs/latest/api/Overview/"&gt;Nominatim&lt;/a&gt;, &lt;a href="https://opencagedata.com/api"&gt;OpenCage&lt;/a&gt;, &lt;a href="https://msdn.microsoft.com/en-us/library/ff701715.aspx"&gt;Bing&lt;/a&gt;, &lt;a href="https://www.mapbox.com/developers/api/geocoding/"&gt;Mapbox&lt;/a&gt;, and &lt;a href="https://wiki.openstreetmap.org/wiki/Nominatim"&gt;OpenStreetMap&lt;/a&gt; geocoding / reverse geocoding APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/go-github"&gt;github&lt;/a&gt; - Go library for accessing the GitHub REST API v3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shurcooL/githubql"&gt;githubql&lt;/a&gt; - Go library for accessing the GitHub GraphQL API v4.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ctreminiom/go-atlassian"&gt;go-atlassian&lt;/a&gt; - Go library for accessing the &lt;a href="https://www.atlassian.com/enterprise/cloud"&gt;Atlassian Cloud&lt;/a&gt; services (Jira, Jira Service Management, Jira Agile, Confluence, Admin Cloud)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/circa10a/go-aws-news"&gt;go-aws-news&lt;/a&gt; - Go application and library to fetch what's new from AWS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axelspringer/go-chronos"&gt;go-chronos&lt;/a&gt; - Go library for interacting with the &lt;a href="https://mesos.github.io/chronos/"&gt;Chronos&lt;/a&gt; Job Scheduler&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygrunwald/go-gerrit"&gt;go-gerrit&lt;/a&gt; - Go client library for &lt;a href="https://www.gerritcodereview.com/"&gt;Gerrit Code Review&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PaulRosset/go-hacknews"&gt;go-hacknews&lt;/a&gt; - Tiny Go client for HackerNews API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abdullahselek/go-here"&gt;go-here&lt;/a&gt; - Go client library around the HERE location based APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wneessen/go-hibp"&gt;go-hibp&lt;/a&gt; - Simple Go binding to the "Have I Been Pwned" APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/koffeinsource/go-imgur"&gt;go-imgur&lt;/a&gt; - Go client library for &lt;a href="https://imgur.com"&gt;imgur&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygrunwald/go-jira"&gt;go-jira&lt;/a&gt; - Go client library for &lt;a href="https://www.atlassian.com/software/jira"&gt;Atlassian JIRA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-lark/lark"&gt;go-lark&lt;/a&gt; - An easy-to-use unofficial SDK for &lt;a href="https://open.feishu.cn/"&gt;Feishu&lt;/a&gt; and &lt;a href="https://open.larksuite.com/"&gt;Lark&lt;/a&gt; Open Platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gambol99/go-marathon"&gt;go-marathon&lt;/a&gt; - Go library for interacting with Mesosphere's Marathon PAAS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nstratos/go-myanimelist"&gt;go-myanimelist&lt;/a&gt; - Go client library for accessing the &lt;a href="https://myanimelist.net/apiconfig/references/api/v2"&gt;MyAnimeList API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sashabaranov/go-openai"&gt;go-openai&lt;/a&gt; - OpenAI ChatGPT, DALL·E, Whisper API library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/manuelbcd/go-openproject"&gt;go-openproject&lt;/a&gt; - Go client library for interacting with &lt;a href="https://docs.openproject.org/api/"&gt;OpenProject&lt;/a&gt; API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rbretecher/go-postman-collection"&gt;go-postman-collection&lt;/a&gt; - Go module to work with &lt;a href="https://learning.getpostman.com/docs/postman/collections/creating-collections/"&gt;Postman Collections&lt;/a&gt; (compatible with Insomnia).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mvrilo/go-redoc"&gt;go-redoc&lt;/a&gt; - Embedded OpenAPI/Swagger documentation ui for Go using &lt;a href="https://redocly.com/"&gt;ReDoc&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chriscross0/go-restcountries"&gt;go-restcountries&lt;/a&gt; - Go library for the &lt;a href="https://countrylayer.com/"&gt;REST Countries API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/k-capehart/go-salesforce"&gt;go-salesforce&lt;/a&gt; - Go client library for interacting with the &lt;a href="https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_list.htm"&gt;Salesforce REST API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/esurdam/go-sophos"&gt;go-sophos&lt;/a&gt; - Go client library for the &lt;a href="https://www.sophos.com/en-us/medialibrary/PDFs/documentation/UTMonAWS/Sophos-UTM-RESTful-API.pdf?la=en"&gt;Sophos UTM REST API&lt;/a&gt; with zero dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/esurdam/go-swagger-ui"&gt;go-swagger-ui&lt;/a&gt; - Go library containing precompiled &lt;a href="https://swagger.io/tools/swagger-ui/"&gt;Swagger UI&lt;/a&gt; for serving swagger json.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/toby3d/telegraph"&gt;go-telegraph&lt;/a&gt; - Telegraph publishing platform API client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygrunwald/go-trending"&gt;go-trending&lt;/a&gt; - Go library for accessing &lt;a href="https://github.com/trending"&gt;trending repositories&lt;/a&gt; and &lt;a href="https://github.com/trending/developers"&gt;developers&lt;/a&gt; at Github.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hbagdi/go-unsplash"&gt;go-unsplash&lt;/a&gt; - Go client library for the &lt;a href="https://unsplash.com"&gt;Unsplash.com&lt;/a&gt; API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nishanths/go-xkcd"&gt;go-xkcd&lt;/a&gt; - Go client for the xkcd API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/adrienK/go-yapla"&gt;go-yapla&lt;/a&gt; - Go client library for the Yapla v2.0 API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/staskobzar/goagi"&gt;goagi&lt;/a&gt; - Go library to build Asterisk PBX agi/fastagi applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/staskobzar/goami2"&gt;goami2&lt;/a&gt; - AMI v2 library for Asterisk PBX.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/FreeLeh/GoFreeDB"&gt;GoFreeDB&lt;/a&gt; - Golang library providing common and simple database abstractions on top of Google Sheets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/groovili/gogtrends"&gt;gogtrends&lt;/a&gt; - Google Trends Unofficial API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cyruzin/golang-tmdb"&gt;golang-tmdb&lt;/a&gt; - Golang wrapper for The Movie Database API v3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mamal72/golyrics"&gt;golyrics&lt;/a&gt; - Golyrics is a Go library to fetch music lyrics data from the Wikia website.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MonaxGT/gomalshare"&gt;gomalshare&lt;/a&gt; - Go library MalShare API &lt;a href="https://www.malshare.com/"&gt;malshare.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/michiwend/gomusicbrainz"&gt;GoMusicBrainz&lt;/a&gt; - Go MusicBrainz WS2 client library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/google-api-go-client"&gt;google&lt;/a&gt; - Auto-generated Google APIs for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chonthu/go-google-analytics"&gt;google-analytics&lt;/a&gt; - Simple wrapper for easy google analytics reporting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GoogleCloudPlatform/gcloud-golang"&gt;google-cloud&lt;/a&gt; - Google Cloud APIs Go Client Library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/utekaravinash/gopaapi5"&gt;gopaapi5&lt;/a&gt; - Go Client Library for &lt;a href="https://webservices.amazon.com/paapi5/documentation/"&gt;Amazon Product Advertising API 5.0&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/navidys/gopensky"&gt;gopensky&lt;/a&gt; - Go client implementation for &lt;a href="https://opensky-network.org/"&gt;OpenSKY Network&lt;/a&gt; live's API (airspace ADS-B and Mode S data).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/koltyakov/gosip"&gt;gosip&lt;/a&gt; - Client library for SharePoint.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jsgilmore/gostorm"&gt;gostorm&lt;/a&gt; - GoStorm is a Go library that implements the communications protocol required to write Storm spouts and Bolts in Go that communicate with the Storm shells.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andybons/hipchat"&gt;hipchat&lt;/a&gt; - This project implements a golang client library for the Hipchat API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daneharrigan/hipchat"&gt;hipchat (xmpp)&lt;/a&gt; - A golang package to communicate with HipChat over XMPP.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Henry-Sarabia/igdb"&gt;igdb&lt;/a&gt; - Go client for the &lt;a href="https://api.igdb.com/"&gt;Internet Game Database API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ip2location/ip2location-io-go"&gt;ip2location-io-go&lt;/a&gt; - Go wrapper for the IP2Location.io API &lt;a href="https://www.ip2location.io/"&gt;IP2Location.io&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/icelain/jokeapi"&gt;jokeapi-go&lt;/a&gt; - Go client for &lt;a href="https://sv443.net/jokeapi/v2/"&gt;JokeAPI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chyroc/lark"&gt;lark&lt;/a&gt; - &lt;a href="https://open.feishu.cn/"&gt;Feishu&lt;/a&gt;/&lt;a href="https://open.larksuite.com/"&gt;Lark&lt;/a&gt; Open API Go SDK, Support ALL Open API and Event Callback.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ansd/lastpass-go"&gt;lastpass-go&lt;/a&gt; - Go client library for the &lt;a href="https://www.lastpass.com/"&gt;LastPass&lt;/a&gt; API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/clevabit/libgoffi"&gt;libgoffi&lt;/a&gt; - Library adapter toolbox for native &lt;a href="https://sourceware.org/libffi/"&gt;libffi&lt;/a&gt; integration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Medium/medium-sdk-go"&gt;Medium&lt;/a&gt; - Golang SDK for Medium's OAuth2 API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygrunwald/megos"&gt;megos&lt;/a&gt; - Client library for accessing an &lt;a href="https://mesos.apache.org/"&gt;Apache Mesos&lt;/a&gt; cluster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/minio/minio-go"&gt;minio-go&lt;/a&gt; - Minio Go Library for Amazon S3 compatible cloud storage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dukex/mixpanel"&gt;mixpanel&lt;/a&gt; - Mixpanel is a library for tracking events and sending Mixpanel profile updates to Mixpanel from your go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jellydator/newsapi-go"&gt;newsapi-go&lt;/a&gt; - Go client for &lt;a href="https://newsapi.org/"&gt;NewsAPI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/otiai10/openaigo"&gt;openaigo&lt;/a&gt; - OpenAI GPT3/GPT3.5 ChatGPT API client library for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mxpv/patreon-go"&gt;patreon-go&lt;/a&gt; - Go library for Patreon API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logpacker/PayPal-Go-SDK"&gt;paypal&lt;/a&gt; - Wrapper for PayPal payment API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/playlyfe/playlyfe-go-sdk"&gt;playlyfe&lt;/a&gt; - The Playlyfe Rest API Go SDK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gregdel/pushover"&gt;pushover&lt;/a&gt; - Go wrapper for the Pushover API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dimuska139/rawg-sdk-go"&gt;rawg-sdk-go&lt;/a&gt; - Go library for the &lt;a href="https://rawg.io/"&gt;RAWG Video Games Database&lt;/a&gt; API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapito/go-shopify"&gt;shopify&lt;/a&gt; - Go Library to make CRUD request to the Shopify API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rhnvrm/simples3"&gt;simples3&lt;/a&gt; - Simple no frills AWS S3 Library using REST with V4 Signing written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/slack-go/slack"&gt;slack&lt;/a&gt; - Slack API in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sergiotapia/smitego"&gt;smite&lt;/a&gt; - Go package to wraps access to the Smite game API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapito/go-spotify"&gt;spotify&lt;/a&gt; - Go Library to access Spotify WEB API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sostronk/go-steam"&gt;steam&lt;/a&gt; - Go Library to interact with Steam game servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stripe/stripe-go"&gt;stripe&lt;/a&gt; - Go client for the Stripe API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zc2638/swag"&gt;swag&lt;/a&gt; - No comments, simple go wrapper to create swagger 2.0 compatible APIs. Support most routing frameworks, such as built-in, gin, chi, mux, echo, httprouter, fasthttp and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dietsche/textbelt"&gt;textbelt&lt;/a&gt; - Go client for the textbelt.com txt messaging API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adlio/trello"&gt;Trello&lt;/a&gt; - Go wrapper for the Trello API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mrbenosborne/tripadvisor-golang"&gt;TripAdvisor&lt;/a&gt; - Go wrapper for the TripAdvisor API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattcunningham/gumblr"&gt;tumblr&lt;/a&gt; - Go wrapper for the Tumblr v2 API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bitfield/uptimerobot"&gt;uptimerobot&lt;/a&gt; - Go wrapper and command-line client for the Uptime Robot v2 API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/verifid/vl-go"&gt;vl-go&lt;/a&gt; - Go client library around the VerifID identity verification layer API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/webhooks"&gt;webhooks&lt;/a&gt; - Webhook receiver for GitHub and Bitbucket.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wit-ai/wit-go"&gt;wit-go&lt;/a&gt; - Go client for wit.ai HTTP API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brunomvsouza/ynab.go"&gt;ynab&lt;/a&gt; - Go wrapper for the YNAB API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gojuno/go-zooz"&gt;zooz&lt;/a&gt; - Go client for the Zooz API.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Utilities&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;General utilities and tools to make your life easier.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/topfreegames/apm"&gt;apm&lt;/a&gt; - Process manager for Golang applications with an HTTP API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/icza/backscanner"&gt;backscanner&lt;/a&gt; - A scanner similar to bufio.Scanner, but it reads and returns lines in reverse order, starting at a given position and going backward.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/itchyny/bed"&gt;bed&lt;/a&gt; - A Vim-like binary editor written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Henry-Sarabia/blank"&gt;blank&lt;/a&gt; - Verify or remove blanks and whitespace from strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sinhashubham95/bleep"&gt;bleep&lt;/a&gt; - Perform any number of actions on any set of OS signals in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tmrts/boilr"&gt;boilr&lt;/a&gt; - Blazingly fast CLI tool for creating projects from boilerplate templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miniscruff/changie"&gt;changie&lt;/a&gt; - Automated changelog tool for preparing releases with lots of customization options.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antham/chyle"&gt;chyle&lt;/a&gt; - Changelog generator using a git repository with multiple configuration possibilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cep21/circuit"&gt;circuit&lt;/a&gt; - An efficient and feature complete Hystrix like Go implementation of the circuit breaker pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rubyist/circuitbreaker"&gt;circuitbreaker&lt;/a&gt; - Circuit Breakers in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang-design/clipboard"&gt;clipboard&lt;/a&gt; - 📋 cross-platform clipboard package in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonboulle/clockwork"&gt;clockwork&lt;/a&gt; - A simple fake clock for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SimonBaeumer/cmd"&gt;cmd&lt;/a&gt; - Library for executing shell commands on osx, windows and linux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/txgruppi/command"&gt;command&lt;/a&gt; - Command pattern for Go with thread safe serial and parallel dispatcher.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Boeing/config-file-validator"&gt;config-file-validator&lt;/a&gt; - Cross Platform tool to validate configuration files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/syntaqx/cookie"&gt;cookie&lt;/a&gt; - Cookie struct parsing and helper package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jutkko/copy-pasta"&gt;copy-pasta&lt;/a&gt; - Universal multi-workstation clipboard that uses S3 like backend for the storage.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/biter777/countries"&gt;countries&lt;/a&gt; - Full implementation of ISO-3166-1, ISO-4217, ITU-T E.164, Unicode CLDR and IANA ccTLD standards.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pioz/countries"&gt;countries&lt;/a&gt; - All you need when you are working with countries in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/create-go-app/cli"&gt;create-go-app&lt;/a&gt; - A powerful CLI for create a new production-ready project with backend (Golang), frontend (JavaScript, TypeScript) &amp;amp; deploy automation (Ansible, Docker) by running one command.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Gituser143/cryptgo"&gt;cryptgo&lt;/a&gt; - Crytpgo is a TUI based application written purely in Go to monitor and observe cryptocurrency prices in real time!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bcicen/ctop"&gt;ctop&lt;/a&gt; - &lt;a href="https://ctop.sh"&gt;Top-like&lt;/a&gt; interface (e.g. htop) for container metrics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/posener/ctxutil"&gt;ctxutil&lt;/a&gt; - A collection of utility functions for contexts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shockerli/cvt"&gt;cvt&lt;/a&gt; - Easy and safe convert any value to another type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikogura/dbt"&gt;dbt&lt;/a&gt; - A framework for running self-updating signed binaries from a central, trusted repository.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vrecan/death"&gt;Death&lt;/a&gt; - Managing go application shutdown with signals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/floatdrop/debounce"&gt;debounce&lt;/a&gt; - A zero-allocation debouncer written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/derekparker/delve"&gt;delve&lt;/a&gt; - Go debugger.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wagoodman/dive"&gt;dive&lt;/a&gt; - A tool for exploring each layer in a Docker image.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kirillDanshin/dlog"&gt;dlog&lt;/a&gt; - Compile-time controlled logger to make your release smaller without removing debug calls.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/megaease/easeprobe"&gt;EaseProbe&lt;/a&gt; - A simple, standalone, and lightWeight tool that can do health/status checking daemon, support HTTP/TCP/SSH/Shell/Client/... probes, and Slack/Discord/Telegram/SMS... notification.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reugn/equalizer"&gt;equalizer&lt;/a&gt; - Quota manager and rate limiter collection for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cristianoliveira/ergo"&gt;ergo&lt;/a&gt; - The management of multiple local services running over different ports made easy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nullne/evaluator"&gt;evaluator&lt;/a&gt; - Evaluate an expression dynamically based on s-expression. It's simple and easy to extend.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/failsafe-go/failsafe-go"&gt;Failsafe-go&lt;/a&gt; - Fault tolerance and resilience patterns for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h2non/filetype"&gt;filetype&lt;/a&gt; - Small package to infer the file type checking the magic numbers signature.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaronsumel/filler"&gt;filler&lt;/a&gt; - small utility to fill structs using "fill" tag.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gookit/filter"&gt;filter&lt;/a&gt; - provide filtering, sanitizing, and conversion of Go data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/junegunn/fzf"&gt;fzf&lt;/a&gt; - Command-line fuzzy finder written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/generate"&gt;generate&lt;/a&gt; - runs go generate recursively on a specified path or environment variable and can filter by regex.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antham/ghokin"&gt;ghokin&lt;/a&gt; - Parallelized formatter with no external dependencies for gherkin (cucumber, behat...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/git-time-metric/gtm"&gt;git-time-metric&lt;/a&gt; - Simple, seamless, lightweight time tracking for Git.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kazhuravlev/git-tools"&gt;git-tools&lt;/a&gt; - Tool to help manage git tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/isacikgoz/gitbatch"&gt;gitbatch&lt;/a&gt; - manage your git repositories in one place.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knbr13/gitcs/"&gt;gitcs&lt;/a&gt; - Git Commits Visualizer, CLI tool to visualize your Git commits on your local machine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sinhashubham95/go-actuator"&gt;go-actuator&lt;/a&gt; - Production ready features for Go based web frameworks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asticode/go-astitodo"&gt;go-astitodo&lt;/a&gt; - Parse TODOs in your GO code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wendigo/go-bind-plugin"&gt;go-bind-plugin&lt;/a&gt; - go:generate tool for wrapping symbols exported by golang plugins (1.8 only).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gabstv/go-bsdiff"&gt;go-bsdiff&lt;/a&gt; - Pure Go bsdiff and bspatch libraries and CLI tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prashantgupta24/go-clip"&gt;go-clip&lt;/a&gt; - A minimalistic clipboard manager for Mac.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Eun/go-convert"&gt;go-convert&lt;/a&gt; - Package go-convert enables you to convert a value into another type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mikekonan/go-countries"&gt;go-countries&lt;/a&gt; - Lightweight lookup over ISO-3166 codes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ungerik/go-dry"&gt;go-dry&lt;/a&gt; - DRY (don't repeat yourself) package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deatil/go-events"&gt;go-events&lt;/a&gt; - A go event and event'subscribe package, like wordpress hook functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thoas/go-funk"&gt;go-funk&lt;/a&gt; - Modern Go utility library which provides helpers (map, find, contains, filter, chunk, reverse, ...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Talento90/go-health"&gt;go-health&lt;/a&gt; - Health package simplifies the way you add health check to your services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozillazg/go-httpheader"&gt;go-httpheader&lt;/a&gt; - Go library for encoding structs into Header fields.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/karl-cardenas-coding/go-lambda-cleanup"&gt;go-lambda-cleanup&lt;/a&gt; - A CLI for removing unused or previous versions of AWS Lambdas.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viney-shih/go-lock"&gt;go-lock&lt;/a&gt; - go-lock is a lock library implementing read-write mutex and read-write trylock without starvation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PhakornKiong/go-pattern-match"&gt;go-pattern-match&lt;/a&gt; - A Pattern matching library inspired by ts-pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chenquan/go-pkg"&gt;go-pkg&lt;/a&gt; - A go toolkit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mvmaasakkers/go-problemdetails"&gt;go-problemdetails&lt;/a&gt; - Go package for working with Problem Details.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/piglig/go-qr"&gt;go-qr&lt;/a&gt; - A native, high-quality and minimalistic QR code generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/beefsack/go-rate"&gt;go-rate&lt;/a&gt; - Timed rate limiter for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ikeikeikeike/go-sitemap-generator"&gt;go-sitemap-generator&lt;/a&gt; - XML Sitemap generator written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sadlil/go-trigger"&gt;go-trigger&lt;/a&gt; - Go-lang global event triggerer, Register Events with an id and trigger the event from anywhere from your project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rajnandan1/go-tripper"&gt;go-tripper&lt;/a&gt; - Tripper is a circuit breaker package for Go that allows you to circuit and control the status of circuits.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mikekonan/go-types"&gt;go-type&lt;/a&gt; - Library providing Go types for store/validation and transfer of ISO-4217, ISO-3166, and other types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carlescere/goback"&gt;goback&lt;/a&gt; - Go simple exponential backoff package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zerosnake0/goctx"&gt;goctx&lt;/a&gt; - Get your context value with high performance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VividCortex/godaemon"&gt;godaemon&lt;/a&gt; - Utility to write daemons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dropbox/godropbox"&gt;godropbox&lt;/a&gt; - Common libraries for writing Go services/applications from Dropbox.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiendc/gofn"&gt;gofn&lt;/a&gt; - High performance utility functions written using Generics for Go 1.18+.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/msempere/golarm"&gt;golarm&lt;/a&gt; - Fire alarms with system events.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mlimaloureiro/golog"&gt;golog&lt;/a&gt; - Easy and lightweight CLI tool to time track your tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bndr/gopencils"&gt;gopencils&lt;/a&gt; - Small and simple package to easily consume REST APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/michiwend/goplaceholder"&gt;goplaceholder&lt;/a&gt; - a small golang lib to generate placeholder images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philipjkim/goreadability"&gt;goreadability&lt;/a&gt; - Webpage summary extractor using Facebook Open Graph and arc90's readability.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goreleaser/goreleaser"&gt;goreleaser&lt;/a&gt; - Deliver Go binaries as fast and easily as possible.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wgliang/goreporter"&gt;goreporter&lt;/a&gt; - Golang tool that does static analysis, unit testing, code review and generate code quality report.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linxGnu/goseaweedfs"&gt;goseaweedfs&lt;/a&gt; - SeaweedFS client library with almost full features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ik5/gostrutils"&gt;gostrutils&lt;/a&gt; - Collections of string manipulation and conversion functions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/subosito/gotenv"&gt;gotenv&lt;/a&gt; - Load environment variables from &lt;code&gt;.env&lt;/code&gt; or any &lt;code&gt;io.Reader&lt;/code&gt; in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maja42/goval"&gt;goval&lt;/a&gt; - Evaluate arbitrary expressions in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skovtunenko/graterm"&gt;graterm&lt;/a&gt; - Provides primitives to perform ordered (sequential/concurrent) GRAceful TERMination (aka shutdown) in Go application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pesos/grofer"&gt;grofer&lt;/a&gt; - A system and resource monitoring tool written in Golang!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novalagung/gubrak"&gt;gubrak&lt;/a&gt; - Golang utility library with syntactic sugar. It's like lodash, but for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miguelpragier/handy"&gt;handy&lt;/a&gt; - Many utilities and helpers like string handlers/formatters and validators.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kazhuravlev/healthcheck"&gt;healthcheck&lt;/a&gt; - A simple yet powerful readiness test for Kubernetes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/guumaster/hostctl"&gt;hostctl&lt;/a&gt; - A CLI tool to manage /etc/hosts with easy commands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/htcat/htcat"&gt;htcat&lt;/a&gt; - Parallel and Pipelined HTTP GET Utility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/github/hub"&gt;hub&lt;/a&gt; - wrap git commands with additional functionality to interact with github from the terminal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/immortal/immortal"&gt;immortal&lt;/a&gt; - *nix cross-platform (OS agnostic) supervisor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NicoNex/jet"&gt;jet&lt;/a&gt; - Just Edit Text: a fast and powerful tool for finding and replacing file content and names using regular expressions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/clevergo/jsend"&gt;jsend&lt;/a&gt; - JSend's implementation written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hedhyw/json-log-viewer"&gt;json-log-viewer&lt;/a&gt; - Interactive viewer for JSON logs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gsamokovarov/jump"&gt;jump&lt;/a&gt; - Jump helps you navigate faster by learning your habits.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kazhuravlev/just"&gt;just&lt;/a&gt; - Just a collection of useful functions for working with generic data structures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wesovilabs/koazee"&gt;koazee&lt;/a&gt; - Library inspired in Lazy evaluation and functional programming that takes the hassle out of working with arrays.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/duke-git/lancet"&gt;lancet&lt;/a&gt; - A comprehensive, efficient, and reusable util function library of go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maxbolgarin/lang"&gt;lang&lt;/a&gt; - Generic one-liners to work with variables, slices and maps without boilerplate code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aplescia-chwy/lets-go"&gt;lets-go&lt;/a&gt; - Go module that provides common utilities for Cloud Native REST API development. Also contains AWS Specific utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mennanov/limiters"&gt;limiters&lt;/a&gt; - Rate limiters for distributed applications in Golang with configurable back-ends and distributed locks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/lo"&gt;lo&lt;/a&gt; - A Lodash like Go library based on Go 1.18+ Generics (map, filter, contains, find...)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kazu/loncha"&gt;loncha&lt;/a&gt; - A high-performance slice Utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jaschaephraim/lrserver"&gt;lrserver&lt;/a&gt; - LiveReload server for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alajmo/mani"&gt;mani&lt;/a&gt; - CLI tool to help you manage multiple repositories.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/minio/mc"&gt;mc&lt;/a&gt; - Minio Client provides minimal tools to work with Amazon S3 compatible cloud storage and filesystems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/imdario/mergo"&gt;mergo&lt;/a&gt; - Helper to merge structs and maps in Golang. Useful for configuration default values, avoiding messy if-statements.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zRedShift/mimemagic"&gt;mimemagic&lt;/a&gt; - Pure Go ultra performant MIME sniffing library/utility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aofei/mimesniffer"&gt;mimesniffer&lt;/a&gt; - A MIME type sniffer for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gabriel-vasile/mimetype"&gt;mimetype&lt;/a&gt; - Package for MIME type detection based on magic numbers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tdewolff/minify"&gt;minify&lt;/a&gt; - Fast minifiers for HTML, CSS, JS, XML, JSON and SVG file formats.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/icza/minquery"&gt;minquery&lt;/a&gt; - MongoDB / mgo.v2 query that supports efficient pagination (cursors to continue listing documents where we left off).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StabbyCutyou/moldova"&gt;moldova&lt;/a&gt; - Utility for generating random data based on an input template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davrodpin/mole"&gt;mole&lt;/a&gt; - cli app to easily create ssh tunnels.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gobeam/mongo-go-pagination"&gt;mongo-go-pagination&lt;/a&gt; - Mongodb Pagination for official mongodb/mongo-go-driver package which supports both normal queries and Aggregation pipelines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linxGnu/mssqlx"&gt;mssqlx&lt;/a&gt; - Database client library, proxy for any master slave, master master structures. Lightweight and auto balancing in mind.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VividCortex/multitick"&gt;multitick&lt;/a&gt; - Multiplexor for aligned tickers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/e-dard/netbug"&gt;netbug&lt;/a&gt; - Easy remote profiling of your services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrispassas/nfdump"&gt;nfdump&lt;/a&gt; - Read nfdump netflow files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pokanop/nostromo"&gt;nostromo&lt;/a&gt; - CLI for building powerful aliases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xta/okrun"&gt;okrun&lt;/a&gt; - go run error steamroller.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/btnguyen2k/olaf"&gt;olaf&lt;/a&gt; - Twitter Snowflake implemented in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adelowo/onecache"&gt;onecache&lt;/a&gt; - Caching library with support for multiple backend stores (Redis, Memcached, filesystem etc).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kazhuravlev/optional"&gt;optional&lt;/a&gt; - Optional struct fields and vars.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maruel/panicparse"&gt;panicparse&lt;/a&gt; - Groups similar goroutines and colorizes stack dump.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexpantyukhin/go-pattern-match"&gt;pattern-match&lt;/a&gt; - Pattern matching library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peco/peco"&gt;peco&lt;/a&gt; - Simplistic interactive filtering tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arthurkushman/pgo"&gt;pgo&lt;/a&gt; - Convenient functions for PHP community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VividCortex/pm"&gt;pm&lt;/a&gt; - Process (i.e. goroutine) manager with an HTTP API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xorcare/pointer"&gt;pointer&lt;/a&gt; - Package pointer contains helper routines for simplifying the creation of optional fields of basic type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gotidy/ptr"&gt;ptr&lt;/a&gt; - Package that provide functions for simplified creation of pointers from constants of basic types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zpatrick/rclient"&gt;rclient&lt;/a&gt; - Readable, flexible, simple-to-use client for REST APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Unrud/remote-touchpad"&gt;remote-touchpad&lt;/a&gt; - Control mouse and keyboard from a smartphone.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ssgreg/repeat"&gt;repeat&lt;/a&gt; - Go implementation of different backoff strategies useful for retrying operations and heartbeating.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozillazg/request"&gt;request&lt;/a&gt; - Go HTTP Requests for Humans™.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivpusic/rerun"&gt;rerun&lt;/a&gt; - Recompiling and rerunning go apps when source changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edermanoel94/rest-go"&gt;rest-go&lt;/a&gt; - A package that provide many helpful methods for working with rest api.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamilsk/retry"&gt;retry&lt;/a&gt; - The most advanced functional mechanism to perform actions repetitively until successful.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/percolate/retry"&gt;retry&lt;/a&gt; - A simple but highly configurable retry package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thedevsaddam/retry"&gt;retry&lt;/a&gt; - Simple and easy retry mechanism package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shafreeck/retry"&gt;retry&lt;/a&gt; - A pretty simple library to ensure your work to be done.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/avast/retry-go"&gt;retry-go&lt;/a&gt; - Simple library for retry mechanism.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafaeljesus/retry-go"&gt;retry-go&lt;/a&gt; - Retrying made simple and easy for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VividCortex/robustly"&gt;robustly&lt;/a&gt; - Runs functions resiliently, catching and restarting panics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ferama/rospo"&gt;rospo&lt;/a&gt; - Simple and reliable ssh tunnels with embedded ssh server in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blockloop/scan"&gt;scan&lt;/a&gt; - Scan golang &lt;code&gt;sql.Rows&lt;/code&gt; directly to structs, slices, or primitive types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wroge/scan"&gt;scan&lt;/a&gt; - Scan sql rows into any type powered by generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/georgysavva/scany"&gt;scany&lt;/a&gt; - Library for scanning data from a database into Go structs and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/syntaqx/serve"&gt;serve&lt;/a&gt; - A static http server anywhere you need.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joshmedeski/sesh"&gt;sesh&lt;/a&gt; - Sesh is a CLI that helps you create and manage tmux sessions quickly and easily using zoxide.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nofeaturesonlybugs/set"&gt;set&lt;/a&gt; - Performant and flexible struct mapping and loose type conversion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ztrue/shutdown"&gt;shutdown&lt;/a&gt; - App shutdown hooks for &lt;code&gt;os.Signal&lt;/code&gt; handling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrispassas/silk"&gt;silk&lt;/a&gt; - Read silk netflow files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/psampaz/slice"&gt;slice&lt;/a&gt; - Type-safe functions for common Go slice operations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Henry-Sarabia/sliceconv"&gt;sliceconv&lt;/a&gt; - Slice conversion between primitive types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leaanthony/slicer"&gt;slicer&lt;/a&gt; - Makes working with slices easier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jfcg/sorty"&gt;sorty&lt;/a&gt; - Fast Concurrent / Parallel Sorting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmoiron/sqlx"&gt;sqlx&lt;/a&gt; - provides a set of extensions on top of the excellent built-in database/sql package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shoobyban/sshman"&gt;sshman&lt;/a&gt; - SSH Manager for authorized_keys files on multiple remote servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/janiltonmaciel/statiks"&gt;statiks&lt;/a&gt; - Fast, zero-configuration, static HTTP filer server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asdine/storm"&gt;Storm&lt;/a&gt; - Simple and powerful toolkit for BoltDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PumpkinSeed/structs"&gt;structs&lt;/a&gt; - Implement simple functions to manipulate structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yudppp/throttle"&gt;throttle&lt;/a&gt; - Throttle is an object that will perform exactly one action per duration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andy2046/tik"&gt;tik&lt;/a&gt; - Simple and easy timing wheel package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cyruzin/tome"&gt;tome&lt;/a&gt; - Tome was designed to paginate simple RESTful APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/viant/toolbox"&gt;toolbox&lt;/a&gt; - Slice, map, multimap, struct, function, data conversion utilities. Service router, macro evaluator, tokenizer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/esemplastic/unis"&gt;UNIS&lt;/a&gt; - Common Architecture™ for String Utilities in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/owenthereal/upterm"&gt;upterm&lt;/a&gt; - A tool for developers to share terminal/tmux sessions securely over the web. It’s perfect for remote pair programming, accessing computers behind NATs/firewalls, remote debugging, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/knq/usql"&gt;usql&lt;/a&gt; - usql is a universal command-line interface for SQL databases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shomali11/util"&gt;util&lt;/a&gt; - Collection of useful utility functions. (strings, concurrency, manipulations, ...).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/watchhttp"&gt;watchhttp&lt;/a&gt; - Run command periodically and expose latest STDOUT or its rich delta as HTTP endpoint.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reugn/wifiqr"&gt;wifiqr&lt;/a&gt; - Wi-Fi QR Code Generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asciimoo/wuzz"&gt;wuzz&lt;/a&gt; - Interactive cli tool for HTTP inspection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/monmohan/xferspdy"&gt;xferspdy&lt;/a&gt; - Xferspdy provides binary diff and patch library in golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peczenyj/xpool"&gt;xpool&lt;/a&gt; - Yet another golang type safe object pool using generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antham/yogo"&gt;yogo&lt;/a&gt; - Check yopmail mails from command line.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;UUID&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for working with UUIDs.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rekby/fastuuid"&gt;fastuuid&lt;/a&gt; - Fast generate UUIDv4 as string or bytes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jakehl/goid"&gt;goid&lt;/a&gt; - Generate and Parse RFC4122 compliant V4 UUIDs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twharmon/gouid"&gt;gouid&lt;/a&gt; - Generate cryptographically secure random string IDs with just one allocation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sdrapkin/guid"&gt;guid&lt;/a&gt; - Fast cryptographically safe Guid generator for Go (~10x faster than &lt;code&gt;uuid&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aidarkhanov/nanoid"&gt;nanoid&lt;/a&gt; - A tiny and efficient Go unique string ID generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muyo/sno"&gt;sno&lt;/a&gt; - Compact, sortable and fast unique IDs with embedded metadata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oklog/ulid"&gt;ulid&lt;/a&gt; - Go implementation of ULID (Universally Unique Lexicographically Sortable Identifier).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/skilstak/code/go/uniq"&gt;uniq&lt;/a&gt; - No hassle safe, fast unique identifiers with commands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agext/uuid"&gt;uuid&lt;/a&gt; - Generate, encode, and decode UUIDs v1 with fast or cryptographic-quality random node identifier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofrs/uuid"&gt;uuid&lt;/a&gt; - Implementation of Universally Unique Identifier (UUID). Supports both creation and parsing of UUIDs. Actively maintained fork of satori uuid.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/uuid"&gt;uuid&lt;/a&gt; - Go package for UUIDs based on RFC 4122 and DCE 1.1: Authentication and Security Services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ashwingopalsamy/uuidcheck"&gt;uuidcheck&lt;/a&gt; - A tiny, dependency-free Go library that validates UUIDs against standard RFC 4122 formatting, converts UUIDv7() into UTC timestamps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edwingeng/wuid"&gt;wuid&lt;/a&gt; - An extremely fast globally unique number generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rs/xid"&gt;xid&lt;/a&gt; - Xid is a globally unique id generator library, ready to be safely used directly in your server code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Validation&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for validation.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/osamingo/checkdigit"&gt;checkdigit&lt;/a&gt; - Provide check digit algorithms (Luhn, Verhoeff, Damm) and calculators (ISBN, EAN, JAN, UPC, etc.).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiendc/go-validator"&gt;go-validator&lt;/a&gt; - Validation library using Generics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/guiferpa/gody"&gt;gody&lt;/a&gt; - &lt;span&gt;🎈&lt;/span&gt; A lightweight struct validator for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twharmon/govalid"&gt;govalid&lt;/a&gt; - Fast, tag-based validation for structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asaskevich/govalidator"&gt;govalidator&lt;/a&gt; - Validators and sanitizers for strings, numerics, slices and structs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thedevsaddam/govalidator"&gt;govalidator&lt;/a&gt; - Validate Golang request data with simple rules. Highly inspired by Laravel's request validation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lyonnee/hvalid"&gt;hvalid&lt;/a&gt; hvalid is a lightweight validation library written in Go language. It provides a custom validator interface and a series of common validation functions to help developers quickly implement data validation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/faceair/jio"&gt;jio&lt;/a&gt; - jio is a json schema validator similar to &lt;a href="https://github.com/hapijs/joi"&gt;joi&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ozzo/ozzo-validation"&gt;ozzo-validation&lt;/a&gt; - Supports validation of various data types (structs, strings, maps, slices, etc.) with configurable and extensible validation rules specified in usual code constructs instead of struct tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gookit/validate"&gt;validate&lt;/a&gt; - Go package for data validation and filtering. support validate Map, Struct, Request(Form, JSON, url.Values, Uploaded Files) data and more features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gobuffalo/validate"&gt;validate&lt;/a&gt; - This package provides a framework for writing validations for Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/validator"&gt;validator&lt;/a&gt; - Go Struct and Field validation, including Cross Field, Cross Struct, Map, Slice and Array diving.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-the-way/validator"&gt;Validator&lt;/a&gt; - A lightweight model validator written in Go.Contains VFs:Min, Max, MinLength, MaxLength, Length, Enum, Regex.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marrow16/valix"&gt;valix&lt;/a&gt; Go package for validating requests&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Oudwins/zog"&gt;Zog&lt;/a&gt; - A &lt;a href="https://github.com/colinhacks/zod"&gt;Zod&lt;/a&gt; inspired schema builder for runtime value parsing and validation. &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Version Control&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for version control.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/gitlab-org/cli"&gt;cli&lt;/a&gt; - An open-source GitLab command line tool bringing GitLab's cool features to your command line.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jfrog/froggit-go"&gt;froggit-go&lt;/a&gt; - Froggit-Go is a Go library, allowing to perform actions on VCS providers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/libgit2/git2go"&gt;git2go&lt;/a&gt; - Go bindings for libgit2.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gabyx/githooks"&gt;githooks&lt;/a&gt; - Per-repo and shared Git hooks with version control and auto update.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-git/go-git"&gt;go-git&lt;/a&gt; - highly extensible Git implementation in pure Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sourcegraph/go-vcs"&gt;go-vcs&lt;/a&gt; - manipulate and inspect VCS repositories in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/src-d/hercules"&gt;hercules&lt;/a&gt; - gaining advanced insights from Git repository history.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/beyang/hgo"&gt;hgo&lt;/a&gt; - Hgo is a collection of Go packages providing read-access to local Mercurial repositories.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Video&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for manipulating video.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/3d0c/gmf"&gt;gmf&lt;/a&gt; - Go bindings for FFmpeg av* libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asticode/go-astiav"&gt;go-astiav&lt;/a&gt; - Better C bindings for ffmpeg in GO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asticode/go-astisub"&gt;go-astisub&lt;/a&gt; - Manipulate subtitles in GO (.srt, .stl, .ttml, .webvtt, .ssa/.ass, teletext, .smi, etc.).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asticode/go-astits"&gt;go-astits&lt;/a&gt; - Parse and demux MPEG Transport Streams (.ts) natively in GO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unki2aut/go-mpd"&gt;go-mpd&lt;/a&gt; - Parser and generator library for MPEG-DASH manifest files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/giorgisio/goav"&gt;goav&lt;/a&gt; - Comprehensive Go bindings for FFmpeg.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aler9/gortsplib"&gt;gortsplib&lt;/a&gt; - Pure Go RTSP server and client library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Eyevinn/hls-m3u8"&gt;hls-m3u8&lt;/a&gt; - Parser and generator for HLS (M3U8) playlists; kept up to date with the spec.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adrg/libvlc-go"&gt;libvlc-go&lt;/a&gt; - Go bindings for libvlc 2.X/3.X/4.X (used by the VLC media player).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Eyevinn/mp4ff"&gt;mp4ff&lt;/a&gt; - Library and tools for working with MP4 files containing video, audio, subtitles, or metadata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/korandiz/v4l"&gt;v4l&lt;/a&gt; - Video capture library for Linux, written in Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Web Frameworks&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Full stack web frameworks.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/savsgio/atreugo"&gt;Atreugo&lt;/a&gt; - High performance and extensible micro web framework with zero memory allocations in hot paths.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/beego/beego"&gt;Beego&lt;/a&gt; - beego is an open-source, high-performance web framework for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://confetti-framework.github.io/docs/"&gt;Confetti Framework&lt;/a&gt; - Confetti is a Go web application framework with an expressive, elegant syntax. Confetti combines the elegance of Laravel and the simplicity of Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abemedia/go-don"&gt;Don&lt;/a&gt; - A highly performant and simple to use API framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/labstack/echo"&gt;Echo&lt;/a&gt; - High performance, minimalist Go web framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fastschema/fastschema"&gt;Fastschema&lt;/a&gt; - A flexible Go web framework and Headless CMS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofiber/fiber"&gt;Fiber&lt;/a&gt; - An Express.js inspired web framework build on Fasthttp.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/i-love-flamingo/flamingo"&gt;Flamingo&lt;/a&gt; - Framework for pluggable web projects. Including a concept for modules and offering features for DI, Configareas, i18n, template engines, graphql, observability, security, events, routing &amp;amp; reverse routing etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/i-love-flamingo/flamingo-commerce"&gt;Flamingo Commerce&lt;/a&gt; - Providing e-commerce features using clean architecture like DDD and ports and adapters, that you can use to build flexible e-commerce applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-fuego/fuego"&gt;Fuego&lt;/a&gt; - The framework for busy Go developers! Web framework generating OpenAPI 3 spec from source code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gin-gonic/gin"&gt;Gin&lt;/a&gt; - Gin is a web framework written in Go! It features a martini-like API with much better performance, up to 40 times faster. If you need performance and good productivity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xxjwxc/ginrpc"&gt;Ginrpc&lt;/a&gt; - Gin parameter automatic binding tool,gin rpc tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goadesign/goa"&gt;Goa&lt;/a&gt; - Goa provides a holistic approach for developing remote APIs and microservices in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gofr-dev/gofr"&gt;GoFr&lt;/a&gt; - Gofr is an opinionated microservice development framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gogf/gf"&gt;GoFrame&lt;/a&gt; - GoFrame is a modular, powerful, high-performance and enterprise-class application development framework of Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twharmon/golamb"&gt;golamb&lt;/a&gt; - Golamb makes it easier to write API endpoints for use with AWS Lambda and API Gateway.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gone-io/gone"&gt;Gone&lt;/a&gt; - A lightweight dependency injection and web framework inspired by Spring.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goravel/goravel"&gt;goravel&lt;/a&gt; - A Laravel-inspired web framework with ORM, authentication, queue, task scheduling, and more built-in features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-goyave/goyave"&gt;Goyave&lt;/a&gt; - Feature-complete REST API framework aimed at clean code and fast development, with powerful built-in functionalities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudwego/hertz"&gt;Hertz&lt;/a&gt; - A high-performance and strong-extensibility Go HTTP framework that helps developers build microservices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hidevopsio/hiboot"&gt;hiboot&lt;/a&gt; - hiboot is a high performance web application framework with auto configuration and dependency injection support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/danielgtaylor/huma/"&gt;Huma&lt;/a&gt; - Framework for modern REST/GraphQL APIs with built-in OpenAPI 3, generated documentation, and a CLI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/indeedeng/iwf"&gt;iWF&lt;/a&gt; - iWF is an all-in-one platform for developing long-running business processes. It offers a convenient abstraction for utilizing databases, ElasticSearch, message queues, durable timers, and more, with a clean, simple, and user-friendly interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jvcoutinho/lit"&gt;Lit&lt;/a&gt; - Highly performant declarative web framework for Golang, aiming for simplicity and quality of life.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/claygod/microservice"&gt;Microservice&lt;/a&gt; - The framework for the creation of microservices, written in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/beatlabs/patron"&gt;patron&lt;/a&gt; - Patron is a microservice framework following best cloud practices with a focus on productivity.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/fruitygo/pnutmux"&gt;Pnutmux&lt;/a&gt; - Pnutmux is a powerful Go web framework that uses regex for matching and handling HTTP requests. It offers features such as CORS handling, structured logging, URL parameters extraction, middlewares, and concurrency limiting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/revel/revel"&gt;Revel&lt;/a&gt; - High-productivity web framework for the Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rookie-ninja/rk-boot"&gt;rk-boot&lt;/a&gt; - A bootstrapper library for building enterprise go microservice with Gin and gRPC quickly and easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/clubpay/ronykit"&gt;Ronykit&lt;/a&gt; - Web framework with pluggable architecture and very performant.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gookit/rux"&gt;rux&lt;/a&gt; - Simple and fast web framework for build golang HTTP applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axzilla/templui"&gt;templui&lt;/a&gt; - Modern UI Components for Go &amp;amp; Templ.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uadmin/uadmin"&gt;uAdmin&lt;/a&gt; - Fully featured web framework for Golang, inspired by Django.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naughtygopher/webgo"&gt;WebGo&lt;/a&gt; - A micro-framework to build web apps with handler chaining, middleware, and context injection. With standard library-compliant HTTP handlers (i.e., &lt;code&gt;http.HandlerFunc&lt;/code&gt;)..&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ankorstore/yokai"&gt;Yokai&lt;/a&gt; - Simple, modular, and observable Go framework for backend applications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Middlewares&lt;/h3&gt; 
&lt;h4&gt;Actual middlewares&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/posener/client-timing"&gt;client-timing&lt;/a&gt; - An HTTP client for Server-Timing header.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rs/cors"&gt;CORS&lt;/a&gt; - Easily add CORS capabilities to your API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/faabiosr/echo-middleware"&gt;echo-middleware&lt;/a&gt; - Middleware for Echo framework with logging and metrics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rs/formjson"&gt;formjson&lt;/a&gt; - Transparently handle JSON input as a standard form POST.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/github/go-fault"&gt;go-fault&lt;/a&gt; - Fault injection middleware for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mitchellh/go-server-timing"&gt;go-server-timing&lt;/a&gt; - Add/parse Server-Timing header.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ulule/limiter"&gt;Limiter&lt;/a&gt; - Dead simple rate limit middleware for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philippgille/ln-paywall"&gt;ln-paywall&lt;/a&gt; - Go middleware for monetizing APIs on a per-request basis with the Lightning Network (Bitcoin).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/mid"&gt;mid&lt;/a&gt; - Miscellaneous HTTP middleware features: idiomatic error return from handlers; receive/respond with JSON data; request tracing; and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rookie-ninja/rk-gin"&gt;rk-gin&lt;/a&gt; - Middleware for Gin framework with logging, metrics, auth, tracing etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rookie-ninja/rk-grpc"&gt;rk-grpc&lt;/a&gt; - Middleware for gRPC with logging, metrics, auth, tracing etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/didip/tollbooth"&gt;Tollbooth&lt;/a&gt; - Rate limit HTTP request handler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sebest/xff"&gt;XFF&lt;/a&gt; - Handle &lt;code&gt;X-Forwarded-For&lt;/code&gt; header and friends.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Libraries for creating HTTP middlewares&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/justinas/alice"&gt;alice&lt;/a&gt; - Painless middleware chaining for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codemodus/catena"&gt;catena&lt;/a&gt; - http.Handler wrapper catenation (same API as "chain").&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codemodus/chain"&gt;chain&lt;/a&gt; - Handler wrapper chaining with scoped data (net/context-based "middleware").&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alioygur/gores"&gt;gores&lt;/a&gt; - Go package that handles HTML, JSON, XML and etc. responses. Useful for RESTful APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carbocation/interpose"&gt;interpose&lt;/a&gt; - Minimalist net/http middleware for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HereMobilityDevelopers/mediary"&gt;mediary&lt;/a&gt; - add interceptors to &lt;code&gt;http.Client&lt;/code&gt; to allow dumping/shaping/tracing/... of requests/responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stephens2424/muxchain"&gt;muxchain&lt;/a&gt; - Lightweight middleware for net/http.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/urfave/negroni"&gt;negroni&lt;/a&gt; - Idiomatic HTTP middleware for Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unrolled/render"&gt;render&lt;/a&gt; - Go package for easily rendering JSON, XML, and HTML template responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thedevsaddam/renderer"&gt;renderer&lt;/a&gt; - Simple, lightweight and faster response (JSON, JSONP, XML, YAML, HTML, File) rendering package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/InVisionApp/rye"&gt;rye&lt;/a&gt; - Tiny Go middleware library (with canned Middlewares) that supports JWT, CORS, Statsd, and Go 1.7 context.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thoas/stats"&gt;stats&lt;/a&gt; - Go middleware that stores various information about your web application.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Routers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gernest/alien"&gt;alien&lt;/a&gt; - Lightweight and fast http router from outer space.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GuilhermeCaruso/bellt"&gt;bellt&lt;/a&gt; - A simple Go HTTP router.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-zoo/bone"&gt;Bone&lt;/a&gt; - Lightning Fast HTTP Multiplexer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/claygod/Bxog"&gt;Bxog&lt;/a&gt; - Simple and fast HTTP router for Go. It works with routes of varying difficulty, length and nesting. And he knows how to create a URL from the received parameters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-chi/chi"&gt;chi&lt;/a&gt; - Small, fast and expressive HTTP router built on net/context.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buaazp/fasthttprouter"&gt;fasthttprouter&lt;/a&gt; - High performance router forked from &lt;code&gt;httprouter&lt;/code&gt;. The first router fit for &lt;code&gt;fasthttp&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/razonyang/fastrouter"&gt;FastRouter&lt;/a&gt; - a fast, flexible HTTP router written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bmf-san/goblin"&gt;goblin&lt;/a&gt; - A golang http router based on trie tree.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gocraft/web"&gt;gocraft/web&lt;/a&gt; - Mux and middleware package in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goji/goji"&gt;Goji&lt;/a&gt; - Goji is a minimalistic and flexible HTTP request multiplexer with support for &lt;code&gt;net/context&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golobby/router"&gt;GoLobby/Router&lt;/a&gt; - GoLobby Router is a lightweight yet powerful HTTP router for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goroute/route"&gt;goroute&lt;/a&gt; - Simple yet powerful HTTP request multiplexer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vardius/gorouter"&gt;GoRouter&lt;/a&gt; - GoRouter is a Server/API micro framework, HTTP request router, multiplexer, mux that provides request router with middleware supporting &lt;code&gt;net/context&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gowww/router"&gt;gowww/router&lt;/a&gt; - Lightning fast HTTP router fully compatible with the net/http.Handler interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/julienschmidt/httprouter"&gt;httprouter&lt;/a&gt; - High performance router. Use this and the standard http handlers to form a very high performance web framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dimfeld/httptreemux"&gt;httptreemux&lt;/a&gt; - High-speed, flexible tree-based HTTP router for Go. Inspiration from httprouter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/lars"&gt;lars&lt;/a&gt; - Is a lightweight, fast and extensible zero allocation HTTP router for Go used to create customizable frameworks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gorilla/mux"&gt;mux&lt;/a&gt; - Powerful URL router and dispatcher for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/muir/nchi"&gt;nchi&lt;/a&gt; - chi-like router built on httprouter with dependency injection based middleware wrappers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ngamux/ngamux"&gt;ngamux&lt;/a&gt; - Simple HTTP router for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ozzo/ozzo-routing"&gt;ozzo-routing&lt;/a&gt; - An extremely fast Go (golang) HTTP router that supports regular expression route matching. Comes with full support for building RESTful APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/pure"&gt;pure&lt;/a&gt; - Is a lightweight HTTP router that sticks to the std "net/http" implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VividCortex/siesta"&gt;Siesta&lt;/a&gt; - Composable framework to write middleware and handlers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/husobee/vestigo"&gt;vestigo&lt;/a&gt; - Performant, stand-alone, HTTP compliant URL Router for go web applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nbari/violetear"&gt;violetear&lt;/a&gt; - Go HTTP router.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rs/xmux"&gt;xmux&lt;/a&gt; - High performance muxer based on &lt;code&gt;httprouter&lt;/code&gt; with &lt;code&gt;net/context&lt;/code&gt; support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xujiajun/gorouter"&gt;xujiajun/gorouter&lt;/a&gt; - A simple and fast HTTP router for Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;WebAssembly&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dennwc/dom"&gt;dom&lt;/a&gt; - DOM library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/extism/go-sdk"&gt;Extism Go SDK&lt;/a&gt; - Universal, cross-language WebAssembly framework for building plug-in systems and polyglot apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/markfarnan/go-canvas"&gt;go-canvas&lt;/a&gt; - Library to use HTML5 Canvas, with all drawing within go code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tinygo-org/tinygo"&gt;tinygo&lt;/a&gt; - Go compiler for small places. Microcontrollers, WebAssembly, and command-line tools. Based on LLVM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/norunners/vert"&gt;vert&lt;/a&gt; - Interop between Go and JS values.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agnivade/wasmbrowsertest"&gt;wasmbrowsertest&lt;/a&gt; - Run Go WASM tests in your browser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gowebapi/webapi"&gt;webapi&lt;/a&gt; - Bindings for DOM and HTML generated from WebIDL.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Webhooks Server&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adnanh/webhook"&gt;webhook&lt;/a&gt; - Tool which allows user to create HTTP endpoints (hooks) that execute commands on the server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/42Atomys/webhooked"&gt;webhooked&lt;/a&gt; - A webhook receiver on steroids: handle, secure, format and store a Webhook payload has never been easier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/webhookx-io/webhookx"&gt;WebhookX&lt;/a&gt; - A webhooks gateway for message receiving, processing, and reliable delivering.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Windows&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gonutz/d3d9"&gt;d3d9&lt;/a&gt; - Go bindings for Direct3D9.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-ole/go-ole"&gt;go-ole&lt;/a&gt; - Win32 OLE implementation for golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MonaxGT/gosddl"&gt;gosddl&lt;/a&gt; - Converter from SDDL-string to user-friendly JSON. SDDL consist of four part: Owner, Primary Group, DACL, SACL.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Workflow Frameworks&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries for creating Workflows.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber-go/cadence-client"&gt;Cadence-client&lt;/a&gt; - A framework for authoring workflows and activities running on top of the Cadence orchestration engine made by Uber.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dagu-go/dagu"&gt;Dagu&lt;/a&gt; - No-code workflow executor. it executes DAGs defined in a simple YAML format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rhosocial/go-dag"&gt;go-dag&lt;/a&gt; - A framework developed in Go that manages the execution of workflows described by directed acyclic graphs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/noneback/go-taskflow"&gt;go-taskflow&lt;/a&gt; - A taskflow-like General-purpose Task-parallel Programming Framework with integrated visualizer and profiler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/luno/workflow"&gt;workflow&lt;/a&gt; - A tech stack agnostic Event Driven Workflow framework.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;XML&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools for manipulating XML.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xml-comp/xml-comp"&gt;XML-Comp&lt;/a&gt; - Simple command line XML comparer that generates diffs of folders, files and tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sbabiv/xml2map"&gt;xml2map&lt;/a&gt; - XML to MAP converter written Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antchfx/xmlquery"&gt;xmlquery&lt;/a&gt; - xmlquery is Golang XPath package for XML query.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shabbyrobe/xmlwriter"&gt;xmlwriter&lt;/a&gt; - Procedural XML generation API based on libxml2's xmlwriter module.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antchfx/xpath"&gt;xpath&lt;/a&gt; - XPath package for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miku/zek"&gt;zek&lt;/a&gt; - Generate a Go struct from XML.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Zero Trust&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Libraries and tools to implement Zero Trust architectures.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sigstore/cosign"&gt;Cosign&lt;/a&gt; - Container Signing, Verification and Storage in an OCI registry.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/in-toto/in-toto-golang"&gt;in-toto&lt;/a&gt; - Go implementation of the in-toto (provides a framework to protect the integrity of the software supply chain) python reference implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openziti/ziti"&gt;OpenZiti&lt;/a&gt; - A full, open source zero trust overlay network. Including numerous SDKs for numerous languages such as &lt;a href="https://github.com/openziti/sdk-golang"&gt;golang&lt;/a&gt; allowing you to embed zero trust principles directly into your applications. The &lt;a href="https://github.com/openziti-test-kitchen"&gt;OpenZiti Test Kitchen&lt;/a&gt; has numerous examples to draw inspiration from including a &lt;a href="https://github.com/openziti-test-kitchen/zssh"&gt;zero trust ssh client - zssh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philips-labs/spiffe-vault"&gt;Spiffe-Vault&lt;/a&gt; - Utilizes Spiffe JWT authentication with Hashicorp Vault for secretless authentication.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spiffe/spire"&gt;Spire&lt;/a&gt; - SPIRE (the SPIFFE Runtime Environment) is a toolchain of APIs for establishing trust between software systems across a wide variety of hosting platforms.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Code Analysis&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Source code analysis tools, also known as Static Application Security Testing (SAST) Tools.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bradleyfalzon/apicompat"&gt;apicompat&lt;/a&gt; - Checks recent changes to a Go project for backwards incompatible changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/asty-org/asty"&gt;asty&lt;/a&gt; - Converts golang AST to JSON and JSON to AST.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/verygoodsoftwarenotvirus/blanket"&gt;blanket&lt;/a&gt; - blanket is a tool that helps you catch functions which don't have direct unit tests in your Go packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Checkmarx/chainjacking"&gt;ChainJacking&lt;/a&gt; - Find which of your Go lang direct GitHub dependencies is susceptible to ChainJacking attack.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amit-davidson/Chronos"&gt;Chronos&lt;/a&gt; - Detects race conditions statically&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mibk/dupl"&gt;dupl&lt;/a&gt; - Tool for code clone detection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kisielk/errcheck"&gt;errcheck&lt;/a&gt; - Errcheck is a program for checking for unchecked errors in Go programs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Crocmagnon/fatcontext"&gt;fatcontext&lt;/a&gt; - Fatcontext detects nested contexts in loops or function literals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qiniu/checkstyle"&gt;go-checkstyle&lt;/a&gt; - checkstyle is a style check tool like java checkstyle. This tool inspired by java checkstyle, golint. The style referred to some points in Go Code Review Comments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/roblaszczak/go-cleanarch"&gt;go-cleanarch&lt;/a&gt; - go-cleanarch was created to validate Clean Architecture rules, like a The Dependency Rule and interaction between packages in your Go projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-critic/go-critic"&gt;go-critic&lt;/a&gt; - source code linter that brings checks that are currently not implemented in other linters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/psampaz/go-mod-outdated"&gt;go-mod-outdated&lt;/a&gt; - An easy way to find outdated dependencies of your Go projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuroyoro/goast-viewer"&gt;goast-viewer&lt;/a&gt; - Web based Golang AST visualizer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/golang.org/x/tools/cmd/goimports"&gt;goimports&lt;/a&gt; - Tool to fix (add, remove) your Go imports automatically.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arxdsilva/golang-ifood-sdk"&gt;golang-ifood-sdk&lt;/a&gt; - iFood API SDK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golangci/golangci-lint"&gt;golangci-lint&lt;/a&gt; – A fast Go linters runner. It runs linters in parallel, uses caching, supports &lt;code&gt;yaml&lt;/code&gt; config, has integrations with all major IDE and has dozens of linters included.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/segmentio/golines"&gt;golines&lt;/a&gt; - Formatter that automatically shortens long lines in Go code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jfeliu007/goplantuml"&gt;GoPlantUML&lt;/a&gt; - Library and CLI that generates text plantump class diagram containing information about structures and interfaces with the relationship among them.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sqs/goreturns"&gt;goreturns&lt;/a&gt; - Adds zero-value return statements to match the func return types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shurcooL/gostatus"&gt;gostatus&lt;/a&gt; - Command line tool, shows the status of repositories that contain Go packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/surullabs/lint"&gt;lint&lt;/a&gt; - Run linters as part of go test.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/z7zmey/php-parser"&gt;php-parser&lt;/a&gt; - A Parser for PHP written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mgechev/revive"&gt;revive&lt;/a&gt; – ~6x faster, stricter, configurable, extensible, and beautiful drop-in replacement for &lt;code&gt;golint&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dominikh/go-tools/tree/master/cmd/staticcheck"&gt;staticcheck&lt;/a&gt; - staticcheck is &lt;code&gt;go vet&lt;/code&gt; on steroids, applying a ton of static analysis checks you might be used to from tools like ReSharper for C#.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Antonboom/testifylint"&gt;testifylint&lt;/a&gt; – A linter that checks usage of &lt;a href="https://github.com/stretchr/testify"&gt;github.com/stretchr/testify&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/augmentable-dev/tickgit"&gt;tickgit&lt;/a&gt; - CLI and go package for surfacing code comment TODOs (in any language) and applying a &lt;code&gt;git blame&lt;/code&gt;to identify the author.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/preslavmihaylov/todocheck"&gt;todocheck&lt;/a&gt; - Static code analyser which links TODO comments in code with issues in your issue tracker.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mdempsky/unconvert"&gt;unconvert&lt;/a&gt; - Remove unnecessary type conversions from Go source.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sashamelentyev/usestdlibvars"&gt;usestdlibvars&lt;/a&gt; - A linter that detect the possibility to use variables/constants from the Go standard library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daveshanley/vacuum"&gt;vacuum&lt;/a&gt; - An ultra-super-fast, lightweight OpenAPI linter and quality checking tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mccoyst/validate"&gt;validate&lt;/a&gt; - Automatically validates struct fields with tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomarrell/wrapcheck"&gt;wrapcheck&lt;/a&gt; - A linter to check that errors from external packages are wrapped.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Editor Plugins&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Plugin for text editors and IDEs.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/josa42/coc-go"&gt;coc-go language server extension for Vim/Neovim&lt;/a&gt; - This plugin adds &lt;a href="https://github.com/golang/tools/raw/master/gopls/README.md"&gt;gopls&lt;/a&gt; features to Vim/Neovim.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/msyrus/vscode-go-doc"&gt;Go Doc&lt;/a&gt; - A Visual Studio Code extension for showing definition in output and generating go doc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://plugins.jetbrains.com/plugin/9568-go"&gt;Go plugin for JetBrains IDEs&lt;/a&gt; - Go plugin for JetBrains IDEs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dominikh/go-mode.el"&gt;go-mode&lt;/a&gt; - Go mode for GNU/Emacs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nsf/gocode"&gt;gocode&lt;/a&gt; - Autocompletion daemon for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/incu6us/goimports-reviser"&gt;goimports-reviser&lt;/a&gt; - Formatting tool for imports.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=MaxMedia.go-prof"&gt;goprofiling&lt;/a&gt; - This extension adds benchmark profiling support for the Go language to VS Code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DisposaBoy/GoSublime"&gt;GoSublime&lt;/a&gt; - Golang plugin collection for the text editor SublimeText 3 providing code completion and other IDE-like features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexdigest/gounit-vim"&gt;gounit-vim&lt;/a&gt; - Vim plugin for generating Go tests based on the function's or method's signature.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rjohnsondev/vim-compiler-go"&gt;vim-compiler-go&lt;/a&gt; - Vim plugin to highlight syntax errors on save.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fatih/vim-go"&gt;vim-go&lt;/a&gt; - Go development plugin for Vim.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang/vscode-go"&gt;vscode-go&lt;/a&gt; - Extension for Visual Studio Code (VS Code) which provides support for the Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eaburns/Watch"&gt;Watch&lt;/a&gt; - Runs a command in an acme win on file changes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Go Generate Tools&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/g4s8/envdoc"&gt;envdoc&lt;/a&gt; - generate documentation for environment variables from Go source files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/usk81/generic"&gt;generic&lt;/a&gt; - flexible data type for Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Parquery/gocontracts"&gt;gocontracts&lt;/a&gt; - brings design-by-contract to Go by synchronizing the code with the documentation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mafulong/godal"&gt;godal&lt;/a&gt; - Generate orm models corresponding to golang by specifying sql ddl file, which can be used by gorm.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bouk/gonerics"&gt;gonerics&lt;/a&gt; - Idiomatic Generics in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cweill/gotests"&gt;gotests&lt;/a&gt; - Generate Go tests from your source code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexdigest/gounit"&gt;gounit&lt;/a&gt; - Generate Go tests using your own templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DylanMeeus/hasgo"&gt;hasgo&lt;/a&gt; - Generate Haskell inspired functions for your slices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kazhuravlev/options-gen"&gt;options-gen&lt;/a&gt; - Functional options described by Dave Cheney's post "Functional options for friendly APIs".&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/opennota/re2dfa"&gt;re2dfa&lt;/a&gt; - Transform regular expressions into finite state machines and output Go source code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anqiansong/sqlgen"&gt;sqlgen&lt;/a&gt; - Generate gorm, xorm, sqlx, bun, sql code from SQL file or DSN.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://xuri.me/toml-to-go"&gt;TOML-to-Go&lt;/a&gt; - Translates TOML into a Go type in the browser instantly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xuri/xgen"&gt;xgen&lt;/a&gt; - XSD (XML Schema Definition) parser and Go/C/Java/Rust/TypeScript code generator.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Go Tools&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/decouple"&gt;decouple&lt;/a&gt; - Find “overspecified” function parameters that could be generalized with interface types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-oas/docs"&gt;docs&lt;/a&gt; - Automatically generate RESTful API documentation for GO projects - aligned with Open API Specification standard.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TrueFurby/go-callvis"&gt;go-callvis&lt;/a&gt; - Visualize call graph of your Go program using dot format.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Zxilly/go-size-analyzer"&gt;go-size-analyzer&lt;/a&gt; - Analyze and visualize the size of dependencies in compiled Golang binaries, providing insight into their impact on the final build.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-swagger/go-swagger"&gt;go-swagger&lt;/a&gt; - Swagger 2.0 implementation for go. Swagger is a simple yet powerful representation of your RESTful API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bartventer.github.io/go-template-playground/"&gt;go-template-playground&lt;/a&gt; - An interactive environment to create and test Go templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tylerwince/godbg"&gt;godbg&lt;/a&gt; - Implementation of Rusts &lt;code&gt;dbg!&lt;/code&gt; macro for quick and easy debugging during development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dustinblackman/gomodrun/"&gt;gomodrun&lt;/a&gt; - Go tool that executes and caches binaries included in go.mod files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gotemplate.io/"&gt;gotemplate.io&lt;/a&gt; - Online tool to preview &lt;code&gt;text/template&lt;/code&gt; templates live.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bitfield/gotestdox"&gt;gotestdox&lt;/a&gt; - Show Go test results as readable sentences.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/psampaz/gothanks"&gt;gothanks&lt;/a&gt; - GoThanks automatically stars your go.mod github dependencies, sending this way some love to their maintainers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ahmedakef/gotutor"&gt;gotutor&lt;/a&gt; - Online Go Debugger &amp;amp; Visualizer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rocketlaunchr/igo"&gt;igo&lt;/a&gt; - An igo to go transpiler (new language features for Go language!)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobg/modver"&gt;modver&lt;/a&gt; - Compare two versions of a Go module to check the version-number change required (major, minor, or patchlevel), according to &lt;a href="https://semver.org/"&gt;semver&lt;/a&gt; rules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iyashjayesh/monigo"&gt;MoniGO&lt;/a&gt; - A performance monitoring library for Go applications. It provides real-time insights into application performance! 🚀&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OctoLinker/browser-extension"&gt;OctoLinker&lt;/a&gt; - Navigate through go files efficiently with the OctoLinker browser extension for GitHub.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kyoh86/richgo"&gt;richgo&lt;/a&gt; - Enrich &lt;code&gt;go test&lt;/code&gt; outputs with text decorations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/becheran/roumon"&gt;roumon&lt;/a&gt; - Monitor current state of all active goroutines via a command line interface.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/galeone/rts"&gt;rts&lt;/a&gt; - RTS: response to struct. Generates Go structs from server responses.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ravsii/textra"&gt;textra&lt;/a&gt; - Extract Go struct field names, types and tags for filtering and exporting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dtgorski/typex"&gt;typex&lt;/a&gt; - Examine Go types and their transitive dependencies, alternatively export results as TypeScript value objects (or types) declaration.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Software Packages&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Software written in Go.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;DevOps Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dnnrly/abbreviate"&gt;abbreviate&lt;/a&gt; - abbreviate is a tool turning long strings in to shorter ones with configurable separators, for example to embed branch names in to deployment stack IDs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ddosify/alaz"&gt;alaz&lt;/a&gt; - Effortless, Low-Overhead, eBPF-based Kubernetes Monitoring.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aptly-dev/aptly"&gt;aptly&lt;/a&gt; - aptly is a Debian repository management tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xuri/aurora"&gt;aurora&lt;/a&gt; - Cross-platform web-based Beanstalkd queue server console.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/soniah/awsenv"&gt;awsenv&lt;/a&gt; - Small binary that loads Amazon (AWS) environment variables for a profile.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/balerter/balerter"&gt;Balerter&lt;/a&gt; - A self-hosted script-based alerting manager.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dave/blast"&gt;Blast&lt;/a&gt; - A simple tool for API load testing and batch jobs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codesenberg/bombardier"&gt;bombardier&lt;/a&gt; - Fast cross-platform HTTP benchmarking tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bosun-monitor/bosun"&gt;bosun&lt;/a&gt; - Time Series Alerting Framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rogerwelin/cassowary"&gt;cassowary&lt;/a&gt; - Modern cross-platform HTTP load-testing tool written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ddosify/ddosify"&gt;Ddosify&lt;/a&gt; - High-performance load testing tool, written in Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s0rg/decompose"&gt;decompose&lt;/a&gt; - tool to generate and process Docker containers connections graphs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/centerorbit/depcharge"&gt;DepCharge&lt;/a&gt; - Helps orchestrating the execution of commands across the many dependencies in larger projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thevxn/dish"&gt;dish&lt;/a&gt; - A lightweight, remotely configurable monitoring service.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; - Open platform for distributed applications for developers and sysadmins.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/x1unix/docker-go-mingw"&gt;docker-go-mingw&lt;/a&gt; - Docker image for building Go binaries for Windows with MinGW toolchain.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ozankasikci/dockerfile-generator"&gt;Dockerfile-Generator&lt;/a&gt; - A go library and an executable that produces valid Dockerfiles using various input channels.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liudng/dogo"&gt;dogo&lt;/a&gt; - Monitoring changes in the source file and automatically compile and run (restart).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/appleboy/drone-jenkins"&gt;drone-jenkins&lt;/a&gt; - Trigger downstream Jenkins jobs using a binary, docker or Drone CI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/appleboy/drone-scp"&gt;drone-scp&lt;/a&gt; - Copy files and artifacts via SSH using a binary, docker or Drone CI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrismckenzie/dropship"&gt;Dropship&lt;/a&gt; - Tool for deploying code via cdn.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/appleboy/easyssh-proxy"&gt;easyssh-proxy&lt;/a&gt; - Golang package for easy remote execution through SSH and SCP downloading via &lt;code&gt;ProxyCommand&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mkchoi212/fac"&gt;fac&lt;/a&gt; - Command-line user interface to fix git merge conflicts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/flannel-io/flannel"&gt;Flannel&lt;/a&gt; - Flannel is a network fabric for containers, designed for Kubernetes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fleetdm/fleet"&gt;Fleet device management&lt;/a&gt; - Lightweight, programmable telemetry for servers and workstations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gaia-pipeline/gaia"&gt;gaia&lt;/a&gt; - Build powerful pipelines in any programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gabrie30/ghorg"&gt;ghorg&lt;/a&gt; - Quickly clone an entire org/users repositories into one directory - Supports GitHub, GitLab, Gitea, and Bitbucket.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gitea/gitea"&gt;Gitea&lt;/a&gt; - Fork of Gogs, entirely community driven.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git.jonasfranz.software/JonasFranzDEV/gitea-github-migrator"&gt;gitea-github-migrator&lt;/a&gt; - Migrate all your GitHub repositories, issues, milestones and labels to your Gitea instance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-furnace/go-furnace"&gt;go-furnace&lt;/a&gt; - Hosting solution written in Go. Deploy your Application with ease on AWS, GCP or DigitalOcean.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mouuff/go-rocket-update"&gt;go-rocket-update&lt;/a&gt; - A simple way to make self updating Go applications - Supports Github and Gitlab.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sanbornm/go-selfupdate"&gt;go-selfupdate&lt;/a&gt; - Enable your Go applications to self update.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cryptojuice/gobrew"&gt;gobrew&lt;/a&gt; - gobrew lets you easily switch between multiple versions of go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevincobain2000/gobrew"&gt;gobrew&lt;/a&gt; - Go version manager. Super simple tool to install and manage Go versions. Install go without root. Gobrew doesn't require shell rehash.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sirnewton01/godbg"&gt;godbg&lt;/a&gt; - Web-based gdb front-end application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gogs.io/"&gt;Gogs&lt;/a&gt; - A Self Hosted Git Service in the Go Programming Language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/inconshreveable/gonative"&gt;gonative&lt;/a&gt; - Tool which creates a build of Go that can cross compile to all platforms while still using the Cgo-enabled versions of the stdlib packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ahmetalpbalkan/govvv"&gt;govvv&lt;/a&gt; - “go build” wrapper to easily add version information into Go binaries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaronsumel/grapes"&gt;grapes&lt;/a&gt; - Lightweight tool designed to distribute commands over ssh with ease.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moovweb/gvm"&gt;GVM&lt;/a&gt; - GVM provides an interface to manage Go versions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rakyll/hey"&gt;Hey&lt;/a&gt; - Hey is a tiny program that sends some load to a web application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dnnrly/httpref"&gt;httpref&lt;/a&gt; - httpref is a handy CLI reference for HTTP methods, status codes, headers, and TCP and UDP ports.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jenkins-zh/jenkins-cli"&gt;jcli&lt;/a&gt; - Jenkins CLI allows you manage your Jenkins as an easy way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/k3d-io/k3d"&gt;k3d&lt;/a&gt; - Little helper to run CNCF's k3s in Docker.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/k3s-io/k3s"&gt;k3s&lt;/a&gt; - Lightweight Kubernetes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/grafana/k6"&gt;k6&lt;/a&gt; - A modern load testing tool, using Go and JavaScript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ajvb/kala"&gt;kala&lt;/a&gt; - Simplistic, modern, and performant job scheduler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cswank/kcli"&gt;kcli&lt;/a&gt; - Command line tool for inspecting kafka topics/partitions/messages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubernetes-sigs/kind"&gt;kind&lt;/a&gt; - Kubernetes IN Docker - local clusters for testing Kubernetes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/ko"&gt;ko&lt;/a&gt; - Command line tool for building and deploying Go applications on Kubernetes&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kool-dev/kool"&gt;kool&lt;/a&gt; - Command line tool for managing Docker environments as an easy way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apecloud/kubeblocks"&gt;kubeblocks&lt;/a&gt; - KubeBlocks is an open-source control plane that runs and manages databases, message queues and other data infrastructure on K8s.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubernetes/kubernetes"&gt;kubernetes&lt;/a&gt; - Container Cluster Manager from Google.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubeshark/kubeshark"&gt;kubeshark&lt;/a&gt; - API traffic analyzer for Kubernetes, inspired by Wireshark, purposely built for Kubernetes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubevela/kubevela"&gt;KubeVela&lt;/a&gt; - Cloud native application delivery.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubenetworks/kubevpn"&gt;KubeVPN&lt;/a&gt; - KubeVPN offers a Cloud-Native Dev Environment that seamlessly connects to your Kubernetes cluster network.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KusionStack/kusion"&gt;KusionStack&lt;/a&gt; - A unified programmable configuration techstack to deliver modern app in 'platform as code' and 'infra as code' approach.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abahmed/kwatch"&gt;kwatch&lt;/a&gt; - Monitor &amp;amp; detect crashes in your Kubernetes(K8s) cluster instantly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivanilves/lstags"&gt;lstags&lt;/a&gt; - Tool and API to sync Docker images across different registries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timdp/lwc"&gt;lwc&lt;/a&gt; - A live-updating version of the UNIX wc command.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xwjdsh/manssh"&gt;manssh&lt;/a&gt; - manssh is a command line tool for managing your ssh alias config easily.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mantil-io/mantil"&gt;Mantil&lt;/a&gt; - Go specific framework for building serverless applications on AWS that enables you to focus on pure Go code while Mantil takes care of the infrastructure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubernetes/minikube"&gt;minikube&lt;/a&gt; - Run Kubernetes locally.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moby/moby"&gt;Moby&lt;/a&gt; - Collaborative project for the container ecosystem to assemble container-based systems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emicklei/mora"&gt;Mora&lt;/a&gt; - REST server for accessing MongoDB documents and meta data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ostrost/ostent"&gt;ostent&lt;/a&gt; - collects and displays system metrics and optionally relays to Graphite and/or InfluxDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mitchellh/packer"&gt;Packer&lt;/a&gt; - Packer is a tool for creating identical machine images for multiple platforms from a single source configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bengadbois/pewpew"&gt;Pewpew&lt;/a&gt; - Flexible HTTP command line stress tester.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pipe-cd/pipecd"&gt;PipeCD&lt;/a&gt; - A GitOps-style continuous delivery platform that provides consistent deployment and operations experience for any applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stefanprodan/podinfo"&gt;podinfo&lt;/a&gt; - Podinfo is a tiny web application made with Go that showcases best practices of running microservices in Kubernetes. Podinfo is used by CNCF projects like Flux and Flagger for end-to-end testing and workshops.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pomerium/pomerium"&gt;Pomerium&lt;/a&gt; - Pomerium is an identity-aware access proxy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alouche/rodent"&gt;Rodent&lt;/a&gt; - Rodent helps you manage Go versions, projects and track dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oxyno-zeta/s3-proxy"&gt;s3-proxy&lt;/a&gt; - S3 Proxy with GET, PUT and DELETE methods and authentication (OpenID Connect and Basic Auth).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rlmcpherson/s3gof3r"&gt;s3gof3r&lt;/a&gt; - Small utility/library optimized for high speed transfer of large objects into and out of Amazon S3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/peak/s5cmd"&gt;s5cmd&lt;/a&gt; - Blazing fast S3 and local filesystem execution tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scaleway/scaleway-cli"&gt;Scaleway-cli&lt;/a&gt; - Manage BareMetal Servers from Command Line (as easily as with Docker).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bitfield/script"&gt;script&lt;/a&gt; - Making it easy to write shell-like scripts in Go for DevOps and system administration tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChristopherRabotin/sg"&gt;sg&lt;/a&gt; - Benchmarks a set of HTTP endpoints (like ab), with possibility to use the response code and data between each call for specific server stress based on its previous response.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TimothyYe/skm"&gt;skm&lt;/a&gt; - SKM is a simple and powerful SSH Keys Manager, it helps you to manage your multiple SSH keys easily!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sanathp/statusok"&gt;StatusOK&lt;/a&gt; - Monitor your Website and REST APIs.Get Notified through Slack, E-mail when your server is down or response time is more than expected.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/taubyte/tau"&gt;tau&lt;/a&gt; - Easily build Cloud Computing Platforms with features like Serverless WebAssembly Functions, Frontend Hosting, CI/CD, Object Storage, K/V Database, and Pub-Sub Messaging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dikhan/terraform-provider-openapi"&gt;terraform-provider-openapi&lt;/a&gt; - Terraform provider plugin that dynamically configures itself at runtime based on an OpenAPI document (formerly known as swagger file) containing the definitions of the APIs exposed.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/datarootsio/tf-profile"&gt;tf-profile&lt;/a&gt; - Profiler for Terraform runs. Generate global stats, resource-level stats or visualizations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yusufcanb/tlm"&gt;tlm&lt;/a&gt; - Local cli copilot, powered by CodeLLaMa&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containous/traefik"&gt;traefik&lt;/a&gt; - Reverse proxy and load balancer with support for multiple backends.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xitonix/trubka"&gt;trubka&lt;/a&gt; - A CLI tool to manage and troubleshoot Apache Kafka clusters with the ability of generically publishing/consuming protocol buffer and plain text events to/from Kafka.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ovh/utask"&gt;uTask&lt;/a&gt; - Automation engine that models and executes business processes declared in yaml.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tsenart/vegeta"&gt;Vegeta&lt;/a&gt; - HTTP load testing tool and library. It's over 9000!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dnnrly/wait-for"&gt;wait-for&lt;/a&gt; - Wait for something to happen (from the command line) before continuing. Easy orchestration of Docker services and other things.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wide.b3log.org/login"&gt;Wide&lt;/a&gt; - Web-based IDE for Teams using Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/masterzen/winrm-cli"&gt;winrm-cli&lt;/a&gt; - Cli tool to remotely execute commands on Windows machines.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Other Software&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://goplay.tools"&gt;Better Go Playground&lt;/a&gt; - Go playground with syntax highlight, code completion and other features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/0xERR0R/blocky"&gt;blocky&lt;/a&gt; - Fast and lightweight DNS proxy as ad-blocker for local network with many features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/crufter/borg"&gt;borg&lt;/a&gt; - Terminal based search engine for bash snippets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tejo/boxed"&gt;boxed&lt;/a&gt; - Dropbox based blog engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chapar-rest/chapar"&gt;Chapar&lt;/a&gt; - Chapar is a a cross-platform Postman alternative built with go, aims to help developers to test their api endpoints. it support http and grpc protocols.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafael-santiago/cherry"&gt;Cherry&lt;/a&gt; - Tiny webchat server in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gocircuit/circuit"&gt;Circuit&lt;/a&gt; - Circuit is a programmable platform-as-a-service (PaaS) and/or Infrastructure-as-a-Service (IaaS), for management, discovery, synchronization and orchestration of services and hosts comprising cloud applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tylertreat/Comcast"&gt;Comcast&lt;/a&gt; - Simulate bad network connections.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kelseyhightower/confd"&gt;confd&lt;/a&gt; - Manage local application configuration files using templates and data from etcd or consul.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s0rg/crawley"&gt;crawley&lt;/a&gt; - Web scraper/crawler for cli.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/schollz/croc"&gt;croc&lt;/a&gt; - Easily and securely send files or folders from one computer to another.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/documize/community"&gt;Documize&lt;/a&gt; - Modern wiki software that integrates data from SaaS tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scryinfo/dp"&gt;dp&lt;/a&gt; - Through SDK for data exchange with blockchain, developers can get easy access to DAPP development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/odeke-em/drive"&gt;drive&lt;/a&gt; - Google Drive client for the commandline.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gilbertchen/duplicacy"&gt;Duplicacy&lt;/a&gt; - A cross-platform network and cloud backup tool based on the idea of lock-free deduplication.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mk-5/fjira"&gt;fjira&lt;/a&gt; - A fuzzy-search based terminal UI application for Attlasian Jira&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moshebe/gebug"&gt;Gebug&lt;/a&gt; - A tool that makes debugging of Dockerized Go applications super easy by enabling Debugger and Hot-Reload features, seamlessly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Antonito/gfile"&gt;gfile&lt;/a&gt; - Securely transfer files between two computers, without any third party, over WebRTC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shurcooL/Go-Package-Store"&gt;Go Package Store&lt;/a&gt; - App that displays updates for the Go packages in your GOPATH.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sioro-Neoku/go-peerflix"&gt;go-peerflix&lt;/a&gt; - Video streaming torrent client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goblin.run"&gt;goblin&lt;/a&gt; - Cloud builder for CLI's written in go lang&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Humpheh/goboy"&gt;GoBoy&lt;/a&gt; - Nintendo Game Boy Color emulator written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goccmack/gocc"&gt;gocc&lt;/a&gt; - Gocc is a compiler kit for Go written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/diankong/GoDocTooltip"&gt;GoDocTooltip&lt;/a&gt; - Chrome extension for Go Doc sites, which shows function description as tooltip at function list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Forceu/gokapi"&gt;Gokapi&lt;/a&gt; - Lightweight server to share files, which expire after a set amount of downloads or days. Similar to Firefox Send, but without public upload.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jetbrains.com/go"&gt;GoLand&lt;/a&gt; - Full featured cross-platform Go IDE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/janpfeifer/gonb"&gt;GoNB&lt;/a&gt; - Interactive Go programming with Jupyter Notebooks (also works in VSCode, Binder and Google's Colab).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buger/gor"&gt;Gor&lt;/a&gt; - Http traffic replication tool, for replaying traffic from production to stage/dev environments in real-time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meloalright/guora"&gt;Guora&lt;/a&gt; - A self-hosted Quora like web application written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dnnrly/hoofli"&gt;hoofli&lt;/a&gt; - Generate PlantUML diagrams from Chrome or Firefox network inspections.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edwingeng/hotswap"&gt;hotswap&lt;/a&gt; - A complete solution to reload your go code without restarting your server, interrupting or blocking any ongoing procedure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/"&gt;hugo&lt;/a&gt; - Fast and Modern Static Website Engine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thestrukture/ide"&gt;ide&lt;/a&gt; - Browser accessible IDE. Designed for Go with Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/assafmo/joincap"&gt;joincap&lt;/a&gt; - Command-line utility for merging multiple pcap files together.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/juicedata/juicefs"&gt;JuiceFS&lt;/a&gt; - Distributed POSIX file system built on top of Redis and AWS S3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jujucharms.com/"&gt;Juju&lt;/a&gt; - Cloud-agnostic service deployment and orchestration - supports EC2, Azure, Openstack, MAAS and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://layli.app"&gt;Layli&lt;/a&gt; - Draw pretty layout diagrams as code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jeffail/leaps"&gt;Leaps&lt;/a&gt; - Pair programming service using Operational Transforms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yunabe/lgo"&gt;lgo&lt;/a&gt; - Interactive Go programming with Jupyter. It supports code completion, code inspection and 100% Go compatibility.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://limetext.github.io"&gt;limetext&lt;/a&gt; - Lime Text is a powerful and elegant text editor primarily developed in Go that aims to be a Free and open-source software successor to Sublime Text.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/visualfc/liteide"&gt;LiteIDE&lt;/a&gt; - LiteIDE is a simple, open source, cross-platform Go IDE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quii/mockingjay-server"&gt;mockingjay&lt;/a&gt; - Fake HTTP servers and consumer driven contracts from one configuration file. You can also make the server randomly misbehave to help do more realistic performance tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mehrdadrad/mylg"&gt;myLG&lt;/a&gt; - Command Line Network Diagnostic tool written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unix4fun/naclpipe"&gt;naclpipe&lt;/a&gt; - Simple NaCL EC25519 based crypto pipe tool written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Code-Hex/Neo-cowsay"&gt;Neo-cowsay&lt;/a&gt; - 🐮 cowsay is reborn. for a New Era.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fogleman/nes"&gt;nes&lt;/a&gt; - Nintendo Entertainment System (NES) emulator written in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gulien/orbit"&gt;Orbit&lt;/a&gt; - A simple tool for running commands and generating files from templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pointlander/peg"&gt;peg&lt;/a&gt; - Peg, Parsing Expression Grammar, is an implementation of a Packrat parser generator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/root-gg/plik"&gt;Plik&lt;/a&gt; - Plik is a temporary file upload system (Wetransfer like) in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SpatiumPortae/portal"&gt;portal&lt;/a&gt; - Portal is a quick and easy command-line file transfer utility from any computer to another.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/restic/restic"&gt;restic&lt;/a&gt; - De-duplicating backup program.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alajmo/sake"&gt;sake&lt;/a&gt; - sake is a command runner for local and remote hosts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/boyter/scc"&gt;scc&lt;/a&gt; - Sloc Cloc and Code, a very fast accurate code counter with complexity calculations and COCOMO estimates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chrislusf/seaweedfs"&gt;Seaweed File System&lt;/a&gt; - Fast, Simple and Scalable Distributed File System with O(1) disk seek.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/msoap/shell2http"&gt;shell2http&lt;/a&gt; - Executing shell commands via http server (for prototyping or remote control).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lucasgomide/snitch"&gt;Snitch&lt;/a&gt; - Simple way to notify your team and many tools when someone has deployed any application via Tsuru.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-sonic/sonic"&gt;sonic&lt;/a&gt; - Sonic is a Go Blogging Platform. Simple and Powerful.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pressly/sup"&gt;Stack Up&lt;/a&gt; - Stack Up, a super simple deployment tool - just Unix - think of it like 'make' for a network of servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marwanhawari/stew"&gt;stew&lt;/a&gt; - An independent package manager for compiled binaries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://syncthing.net/"&gt;syncthing&lt;/a&gt; - Open, decentralized file synchronization tool and protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mehrdadrad/tcpdog"&gt;tcpdog&lt;/a&gt; - eBPF based TCP observability.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DMcP89/tinycare-tui"&gt;tinycare-tui&lt;/a&gt; - Small terminal app that shows git commits from the last 24 hours and week, current weather, some self care advice, a joke, and you current todo list tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shopify/toxiproxy"&gt;toxiproxy&lt;/a&gt; - Proxy to simulate network and system conditions for automated tests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tsuru.io/"&gt;tsuru&lt;/a&gt; - Extensible and open source Platform as a Service software.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lingrino/vaku"&gt;vaku&lt;/a&gt; - CLI &amp;amp; API for folder-based functions in Vault like copy, move, and search.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VerizonDigital/vflow"&gt;vFlow&lt;/a&gt; - High-performance, scalable and reliable IPFIX, sFlow and Netflow collector.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://waveterm.dev"&gt;Wave Terminal&lt;/a&gt; - Wave is an open-source, AI-native terminal built for seamless developer workflows with inline rendering, a modern UI, and persistent sessions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wellington/wellington"&gt;wellington&lt;/a&gt; - Sass project management tool, extends the language with sprite functions (like Compass).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/get-woke/woke"&gt;woke&lt;/a&gt; - Detect non-inclusive language in your source code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ekkinox/yai"&gt;yai&lt;/a&gt; - AI powered terminal assistant.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git.mills.io/prologic/zs"&gt;zs&lt;/a&gt; - an extremely minimal static site generator.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Resources&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Where to discover new Go libraries.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davecheney/autobench"&gt;autobench&lt;/a&gt; - Framework to compare the performance between different Go versions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mrLSD/go-benchmark-app"&gt;go-benchmark-app&lt;/a&gt; - Powerful HTTP-benchmark tool mixed with Аb, Wrk, Siege tools. Gathering statistics and various parameters for benchmarks and comparison results.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tylertreat/go-benchmarks"&gt;go-benchmarks&lt;/a&gt; - Few miscellaneous Go microbenchmarks. Compare some language features to alternative approaches.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/julienschmidt/go-http-routing-benchmark"&gt;go-http-routing-benchmark&lt;/a&gt; - Go HTTP request router benchmark and comparison.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zerosnake0/go-json-benchmark"&gt;go-json-benchmark&lt;/a&gt; - Go JSON benchmark.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolaydubina/go-ml-benchmarks"&gt;go-ml-benchmarks&lt;/a&gt; - benchmarks for machine learning inference in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/smallnest/go-web-framework-benchmark"&gt;go-web-framework-benchmark&lt;/a&gt; - Go web framework benchmark.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alecthomas/go_serialization_benchmarks"&gt;go_serialization_benchmarks&lt;/a&gt; - Benchmarks of Go serialization methods.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PuerkitoBio/gocostmodel"&gt;gocostmodel&lt;/a&gt; - Benchmarks of common basic operations for the Go language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SimonWaldherr/golang-benchmarks"&gt;golang-benchmarks&lt;/a&gt; - a collection of golang benchmarks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tyler-smith/golang-sql-benchmark"&gt;golang-sql-benchmark&lt;/a&gt; - Collection of benchmarks for popular Go database/SQL utilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/feyeleanor/GoSpeed"&gt;gospeed&lt;/a&gt; - Go micro-benchmarks for calculating the speed of language constructs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jimrobinson/kvbench"&gt;kvbench&lt;/a&gt; - Key/Value database benchmark.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atemerev/skynet"&gt;skynet&lt;/a&gt; - Skynet 1M threads microbenchmark.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fawick/speedtest-resize"&gt;speedtest-resize&lt;/a&gt; - Compare various Image resize algorithms for the Go language.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Conferences&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gocon.connpass.com/"&gt;GoCon&lt;/a&gt; - Tokyo, Japan.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.godays.io/"&gt;GoDays&lt;/a&gt; - Berlin, Germany.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://golab.io/"&gt;GoLab&lt;/a&gt; - Florence, Italy.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gopherchina.org"&gt;GopherChina&lt;/a&gt; - Shanghai, China.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gophercon.com/"&gt;GopherCon&lt;/a&gt; - Varied Locations Each Year, USA.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gophercon.com.au/"&gt;GopherCon Australia&lt;/a&gt; - Sydney, Australia.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gopherconbr.org"&gt;GopherCon Brazil&lt;/a&gt; - Florianópolis, Brazil.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gophercon.eu/"&gt;GopherCon Europe&lt;/a&gt; - Berlin, Germany.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gopherconindia.org/"&gt;GopherCon India&lt;/a&gt; - Pune, India.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gophercon.org.il/"&gt;GopherCon Israel&lt;/a&gt; - Tel Aviv, Israel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gophercon-russia.ru"&gt;GopherCon Russia&lt;/a&gt; - Moscow, Russia.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gophercon.sg"&gt;GopherCon Singapore&lt;/a&gt; - Mapletree Business City, Singapore.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gophercon.co.uk/"&gt;GopherCon UK&lt;/a&gt; - London, UK.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gophercon.vn/"&gt;GopherCon Vietnam&lt;/a&gt; - Ho Chi Minh City, Vietnam.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gowestconf.com/"&gt;GoWest Conference&lt;/a&gt; - Lehi, USA.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;E-Books&lt;/h2&gt; 
&lt;h3&gt;E-books for purchase&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.manning.com/books/100-go-mistakes-how-to-avoid-them"&gt;100 Go Mistakes: How to Avoid Them&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nostarch.com/blackhatgo"&gt;Black Hat Go&lt;/a&gt; - Go programming for hackers and pentesters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.manning.com/books/build-an-orchestrator-in-go"&gt;Build an Orchestrator in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.manning.com/books/continuous-delivery-in-go"&gt;Continuous Delivery in Go&lt;/a&gt; - This practical guide to continuous delivery shows you how to rapidly establish an automated pipeline that will improve your testing, code quality, and final product.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.packtpub.com/product/creative-diy-microcontroller-projects-with-tinygo-and-webassembly/9781800560208"&gt;Creative DIY Microcontroller Project With TinyGo and WebAssembly&lt;/a&gt; - An introduction into the TinyGo compiler with projects involving Arduino and WebAssembly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.manning.com/books/effective-go"&gt;Effective Go: Elegant, efficient, and testable code&lt;/a&gt; - Unlock Go’s unique perspective on program design, and start writing simple, maintainable, and testable Go code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitfieldconsulting.com/books/love"&gt;For the Love of Go&lt;/a&gt; - An introductory book for Go beginners.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.manning.com/books/go-in-practice-second-edition"&gt;Go in Practice, Second Edition&lt;/a&gt; - Your practical guide on the ins-and-outs of Go development, covering the standard library and the most important tools from Go’s powerful ecosystem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitfieldconsulting.com/books/generics"&gt;Know Go: Generics&lt;/a&gt; - A guide to understanding and using generics in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lets-go.alexedwards.net"&gt;Lets-Go&lt;/a&gt; - A step-by-step guide to creating fast, secure and maintanable web applications with Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lets-go-further.alexedwards.net"&gt;Lets-Go-Further&lt;/a&gt; - Advanced patterns for building APIs and web applications in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitfieldconsulting.com/books/tests"&gt;The Power of Go: Tests&lt;/a&gt; - A guide to testing in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitfieldconsulting.com/books/tools"&gt;The Power of Go: Tools&lt;/a&gt; - A guide to writing command-line tools in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://compilerbook.com"&gt;Writing A Compiler In Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://interpreterbook.com"&gt;Writing An Interpreter In Go&lt;/a&gt; - Book that introduces dozens of techniques for writing idiomatic, expressive, and efficient Go code that avoids common pitfalls.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Free e-books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://leanpub.com/GoNotebook/read"&gt;A Go Developer's Notebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.golang-book.com/"&gt;An Introduction to Programming in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/volodymyrprokopyuk/go-blockchain"&gt;Build a blockchain from scratch in Go with gRPC&lt;/a&gt; - The foundational and practical guide for effectively learning and progressively building a blockchain from scratch in Go with gRPC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://astaxie.gitbooks.io/build-web-application-with-golang/content/en/"&gt;Build Web Application with Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codegangsta.gitbooks.io/building-web-apps-with-go/content/"&gt;Building Web Apps With Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://go101.org"&gt;Go 101&lt;/a&gt; - A book focusing on Go syntax/semantics and all kinds of details.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chai2010/go-ast-book"&gt;Go AST Book (Chinese)&lt;/a&gt; - A book focusing on Go &lt;code&gt;go/*&lt;/code&gt; packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leanpub.com/gofaster"&gt;Go Faster&lt;/a&gt; - This book seeks to shorten your learning curve and help you become a proficient Go programmer, faster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thedevsir/gosuccinctly"&gt;Go Succinctly&lt;/a&gt; - in Persian.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://threedots.tech/go-with-the-domain/"&gt;Go with the domain&lt;/a&gt; - A book showing how to apply DDD, Clean Architecture, and CQRS by practical refactoring.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dariubs/GoBooks"&gt;GoBooks&lt;/a&gt; - A curated list of Go books.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/books/how-to-code-in-go-ebook"&gt;How To Code in Go eBook&lt;/a&gt; - A 600 page introduction to Go aimed at first time developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.miek.nl/downloads/Go/Learning-Go-latest.pdf"&gt;Learning Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.newmarch.name/golang/"&gt;Network Programming With Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.practical-go-lessons.com/"&gt;Practical Go Lessons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blasrodri.github.io/spaceship-go-gh-pages/"&gt;Spaceship Go A Journey to the Standard Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.gopl.io/"&gt;The Go Programming Language&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/polaris1119/The-Golang-Standard-Library-by-Example"&gt;The Golang Standard Library by Example (Chinese)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/karlseguin/the-little-go-book"&gt;The Little Go Book&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thewhitetulip/web-dev-golang-anti-textbook/"&gt;Web Application with Go the Anti-Textbook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Gophers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MariaLetta/free-gophers-pack"&gt;Free Gophers Pack&lt;/a&gt; - Gopher graphics pack by Maria Letta with illustrations and emotional characters in vector and raster.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/keygx/Go-gopher-Vector"&gt;Go-gopher-Vector&lt;/a&gt; - Go gopher Vector Data [.ai, .svg].&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GolangUA/gopher-logos"&gt;gopher-logos&lt;/a&gt; - adorable gopher logos.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tenntenn/gopher-stickers"&gt;gopher-stickers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shalakhin/gophericons"&gt;gophericons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matryer/gopherize.me"&gt;gopherize.me&lt;/a&gt; - Gopherize yourself.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ashleymcnamara/gophers"&gt;gophers&lt;/a&gt; - Gopher artworks by Ashley McNamara.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/egonelbre/gophers"&gt;gophers&lt;/a&gt; - Free gophers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rogeralsing/gophers"&gt;gophers&lt;/a&gt; - random gopher graphics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sillecelik/go-gopher"&gt;gophers&lt;/a&gt; - Gopher amigurumi toy pattern.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scraly/gophers"&gt;gophers&lt;/a&gt; - Gophers by Aurélie Vache.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Meetups&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Basel-Go-Meetup/"&gt;Basel Go Meetup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Belfast-Gophers/"&gt;Belfast Gophers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-serbia/"&gt;Belgrade Golang Meetup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-users-berlin/"&gt;Berlin Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Brisbane-Golang-Meetup/"&gt;Brisbane Gophers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/berner-go-meetup/"&gt;Bärner Go Meetup - Berne, Switzerland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/goireland/"&gt;Go Ireland - Dublin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golanguagenewyork/"&gt;Go Language NYC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Go-London-User-Group/"&gt;Go London User Group&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Go-Remote-Meetup/"&gt;Go Remote Meetup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/go-toronto/"&gt;Go Toronto&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Go-Users-Group-Atlanta/"&gt;Go User Group Atlanta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/GoBandung/"&gt;GoBandung&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/gobridge/"&gt;GoBridge, San Francisco, CA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/GoCracow/"&gt;GoCracow - Krakow, Poland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/GoJakarta/"&gt;GoJakarta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-amsterdam/"&gt;Golang Amsterdam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Argentina/"&gt;Golang Argentina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Athens-Gophers/"&gt;Golang Athens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/BaltimoreGolang/"&gt;Golang Baltimore, MD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Bangalore/"&gt;Golang Bangalore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/go-belo-horizonte/"&gt;Golang Belo Horizonte - Brazil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/bostongo/"&gt;Golang Boston&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Bulgaria/"&gt;Golang Bulgaria&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Cardiff-Go-Meetup/"&gt;Golang Cardiff, UK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Go-Cph/"&gt;Golang Copenhagen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/GolangCWB/"&gt;Golang Curitiba - Brazil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-DC/"&gt;Golang DC, Arlington, VA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-dorset/"&gt;Golang Dorset, UK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Estonia/"&gt;Golang Estonia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Gurgaon-Go-Meetup/"&gt;Golang Gurgaon, India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Go-User-Group-Hamburg/"&gt;Golang Hamburg - Germany&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Go-Israel/"&gt;Golang Israel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Kathmandu/"&gt;Golang Kathmandu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Peru/"&gt;Golang Lima - Peru&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Lyon/"&gt;Golang Lyon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/fr-FR/Golang-Marseille/"&gt;Golang Marseille&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-mel/"&gt;Golang Melbourne&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-milano/"&gt;Golang Milano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/en-AU/Golang-North-East/"&gt;Golang North East&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Paris/"&gt;Golang Paris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Poland/"&gt;Golang Poland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Pune/"&gt;Golang Pune&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golangroma/"&gt;Golang Roma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-rotterdam/"&gt;Golang Rotterdam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golangsg/"&gt;Golang Singapore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Go-Stockholm/"&gt;Golang Stockholm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-syd/"&gt;Golang Sydney, AU&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golangbr/"&gt;Golang São Paulo - Brazil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-taipei-meetup/"&gt;Golang Taipei&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/thessaloniki-golang-meetup/"&gt;Golang Thessaloniki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang-torino/"&gt;Golang Torino&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kommunity.com/goturkiye"&gt;Golang Turkey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golangvan/"&gt;Golang Vancouver, BC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/viennago/"&gt;Golang Vienna, Austria&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Golang-Moscow/"&gt;Golang Москва&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golangsf"&gt;GoSF - San Francisco, CA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Istanbul-Golang/"&gt;Istanbul Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/GolangNigeria/"&gt;Lagos Gophers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/nairobi-gophers/"&gt;Nairobi Gophers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/golang/"&gt;Seattle Go Programmers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/uagolang/"&gt;Ukrainian Golang User Groups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/utahgophers/"&gt;Utah Go User Group&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/Women-Who-Go/"&gt;Women Who Go - San Francisco, CA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.meetup.com/zurich-gophers/"&gt;Zürich Gophers - Zurich, Switzerland&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Add the group of your city/country here (send &lt;strong&gt;PR&lt;/strong&gt;)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Style Guides&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bahlo/go-styleguide"&gt;bahlo/go-styleguide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cockroachdb/cockroach/raw/master/docs/style.md"&gt;CockroachDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.gitlab.com/ee/development/go_guide/"&gt;GitLab&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://google.github.io/styleguide/go/"&gt;Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyperledger/fabric/raw/release-1.4/docs/source/style-guides/go-style.rst"&gt;Hyperledger&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/boramalper/magnetico/wiki/magnetico-Design-Specification"&gt;Magnetico&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thanos.io/tip/contributing/coding-style-guide.md/"&gt;Thanos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/betrybe/playbook-go/raw/main/README_EN.md"&gt;Trybe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uber-go/guide/raw/master/style.md"&gt;Uber&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Social Media&lt;/h2&gt; 
&lt;h3&gt;Twitter&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/GoDiscussions"&gt;@GoDiscussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/golang"&gt;@golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/golang_news"&gt;@golang_news&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/golangch"&gt;@golangch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/golangweekly"&gt;@golangweekly&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Reddit&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.reddit.com/r/golang/"&gt;r/golang&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Websites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://go.libhunt.com"&gt;Awesome Go @LibHunt&lt;/a&gt; - Your go-to Go Toolbox.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amit-davidson/awesome-golang-workshops"&gt;Awesome Golang Workshops&lt;/a&gt; - A curated list of awesome golang workshops.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lukasz-madon/awesome-remote-job"&gt;Awesome Remote Job&lt;/a&gt; - Curated list of awesome remote jobs. A lot of them are looking for Go hackers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bayandin/awesome-awesomeness"&gt;awesome-awesomeness&lt;/a&gt; - List of other amazingly awesome lists.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xwjdsh/awesome-go-extra"&gt;awesome-go-extra&lt;/a&gt; - Parse awesome-go README file and generate a new README file with repo info.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codewithmukesh.com/categories/golang"&gt;Code with Mukesh&lt;/a&gt; - Software Engineer and Blogs @ codewithmukesh.com.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codingmystery.com"&gt;Coding Mystery&lt;/a&gt; - Solve exciting escape-room-inspired programming challenges using Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.codingame.com/"&gt;CodinGame&lt;/a&gt; - Learn Go by solving interactive tasks using small games as practical examples.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.golang.org"&gt;Go Blog&lt;/a&gt; - The official Go blog.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=nvoIPQYdx9g&amp;amp;list=PLEcwzBXTPUE_YQR7R0BRtHBYJ0LN3Y0i3"&gt;Go Code Club&lt;/a&gt; - A group of Gophers read and discuss a different Go project every week.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hashnode.com/n/go"&gt;Go Community on Hashnode&lt;/a&gt; - Community of Gophers on Hashnode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://forum.golangbridge.org"&gt;Go Forum&lt;/a&gt; - Forum to discuss Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/golang/go/wiki/Projects"&gt;Go Projects&lt;/a&gt; - List of projects on the Go community wiki.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://go-proverbs.github.io/"&gt;Go Proverbs&lt;/a&gt; - Go Proverbs by Rob Pike.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goreportcard.com"&gt;Go Report Card&lt;/a&gt; - A report card for your Go package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://go.dev/"&gt;go.dev&lt;/a&gt; - A hub for Go developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ninedraft/gocryforhelp"&gt;gocryforhelp&lt;/a&gt; - Collection of Go projects that needs help. Good place to start your open-source way in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://golangjob.xyz"&gt;Golang Developer Jobs&lt;/a&gt; - Developer Jobs exclusively for Golang related Roles.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://golangnews.com"&gt;Golang News&lt;/a&gt; - Links and news about Go programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://golangnugget.com"&gt;Golang Nugget&lt;/a&gt; - A weekly roundup of the best Go content, delivered to your inbox every Monday.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discu.eu/weekly/golang/"&gt;Golang Weekly&lt;/a&gt; - Each monday projects, tutorials and articles about Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/golang-nuts"&gt;golang-nuts&lt;/a&gt; - Go mailing list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://plus.google.com/communities/114112804251407510571"&gt;Google Plus Community&lt;/a&gt; - The Google+ community for #golang enthusiasts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://invite.slack.golangbridge.org"&gt;Gopher Community Chat&lt;/a&gt; - Join Our New Slack Community For Gophers (&lt;a href="https://blog.gopheracademy.com/gophers-slack-community/"&gt;Understand how it came&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gophercises.com/"&gt;Gophercises&lt;/a&gt; - Free coding exercises for budding gophers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://m-zajac.github.io/json2go"&gt;json2go&lt;/a&gt; - Advanced JSON to Go struct conversion - online tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/c/justforfunc"&gt;justforfunc&lt;/a&gt; - Youtube channel dedicated to Go programming language tips and tricks, hosted by Francesc Campoy &lt;a href="https://twitter.com/francesc"&gt;@francesc&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.learngoprogramming.com"&gt;Learn Go Programming&lt;/a&gt; - Learn Go concepts with illustrations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://madewithgolang.com/?ref=awesome-go"&gt;Made with Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/"&gt;pkg.go.dev&lt;/a&gt; - Documentation for open source Go packages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://studygolang.com"&gt;studygolang&lt;/a&gt; - The community of studygolang in China.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trending?l=go"&gt;Trending Go repositories on GitHub today&lt;/a&gt; - Good place to find new Go libraries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tutorialedge.net/course/golang/"&gt;TutorialEdge - Golang&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Tutorials&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/"&gt;50 Shades of Go&lt;/a&gt; - Traps, Gotchas, and Common Mistakes for New Golang Devs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterstack.com/community/guides/logging/logging-in-go/"&gt;A Comprehensive Guide to Structured Logging in Go&lt;/a&gt; - Delve deep into the world of structured logging in Go with a specific focus on recently accepted slog proposal which aims to bring high performance structured logging with levels to the standard library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://snipcart.com/blog/golang-ecommerce-ponzu-cms-demo?utm_term=golang-ecommerce-ponzu-cms-demo"&gt;A Guide to Golang E-Commerce&lt;/a&gt; - Building a Golang site for e-commerce (demo included).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tour.golang.org/"&gt;A Tour of Go&lt;/a&gt; - Interactive tour of Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://link.medium.com/O9YQlx89Htb"&gt;Build a Database in 1000 lines of code&lt;/a&gt; - Build a NoSQL Database From Zero in 1000 Lines of Code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/astaxie/build-web-application-with-golang"&gt;Build web application with Golang&lt;/a&gt; - Golang ebook intro how to build a web app with golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://semaphoreci.com/community/tutorials/building-and-testing-a-rest-api-in-go-with-gorilla-mux-and-postgresql"&gt;Building and Testing a REST API in Go with Gorilla Mux and PostgreSQL&lt;/a&gt; - We’ll write an API with the help of the powerful Gorilla Mux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://semaphoreci.com/community/tutorials/building-go-web-applications-and-microservices-using-gin"&gt;Building Go Web Applications and Microservices Using Gin&lt;/a&gt; - Get familiar with Gin and find out how it can help you reduce boilerplate code and build a request handling pipeline.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@rocketlaunchr.cloud/caching-slow-database-queries-1085d308a0c9"&gt;Caching Slow Database Queries&lt;/a&gt; - How to cache slow database queries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@rocketlaunchr.cloud/canceling-mysql-in-go-827ed8f83b30"&gt;Canceling MySQL&lt;/a&gt; - How to cancel MySQL queries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://app.codecrafters.io/tracks/go"&gt;CodeCrafters Golang Track&lt;/a&gt; - Achieve mastery in advanced Go by building your own Redis, Docker, Git, and SQLite. Featuring goroutines, systems programming, file I/O, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shubhamzanwar/design-patterns"&gt;Design Patterns in Go&lt;/a&gt; - Collection of programming design patterns implemented in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9D4yH7e_ea8&amp;amp;list=PLDZujg-VgQlZUy1iCqBbe5faZLMkA3g2x"&gt;Games With Go&lt;/a&gt; - A video series teaching programming and game development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gobyexample.com/"&gt;Go By Example&lt;/a&gt; - Hands-on introduction to Go using annotated example programs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/a8m/go-lang-cheat-sheet"&gt;Go Cheat Sheet&lt;/a&gt; - Go's reference card.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://go-database-sql.org/"&gt;Go database/sql tutorial&lt;/a&gt; - Introduction to database/sql.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/harrytran103/7_days_of_go"&gt;Go in 7 days&lt;/a&gt; - Learn everything about Go in 7 days (from a Nodejs developer).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.javatpoint.com/go-tutorial"&gt;Go Language Tutorial&lt;/a&gt; - Learn Go language Tutorial.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tutorialspoint.com/go/index.htm"&gt;Go Tutorial&lt;/a&gt; - Learn Go programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tutorialedge.net/golang/go-webassembly-tutorial/"&gt;Go WebAssembly Tutorial - Building a Simple Calculator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/evrone/go-clean-template"&gt;go-clean-template&lt;/a&gt; - Clean Architecture template for Golang services.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tmrts/go-patterns"&gt;go-patterns&lt;/a&gt; - Curated list of Go design patterns, recipes and idioms.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miguelmota/golang-for-nodejs-developers"&gt;Golang for Node.js Developers&lt;/a&gt; - Examples of Golang compared to Node.js for learning.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/golang-tutorial-list-free-courses-learn-go-programming-language/"&gt;Golang Tutorial Guide&lt;/a&gt; - A List of Free Courses to Learn the Go Programming Language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SimonWaldherr/golang-examples"&gt;golang-examples&lt;/a&gt; - Many examples to learn Golang.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://golangbot.com/learn-golang-series/"&gt;Golangbot&lt;/a&gt; - Tutorials to get started with programming in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gophercoding.com/"&gt;GopherCoding&lt;/a&gt; - Collection of code snippets and tutorials to help tackle every day issues.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gophersnippets.com/"&gt;GopherSnippets&lt;/a&gt; - Code snippets with tests and testable examples for the Go programming language.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gosamples.dev/"&gt;Gosamples&lt;/a&gt; - Collection of code snippets that let you solve everyday code problems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hasura.io/learn/graphql/backend-stack/languages/go/"&gt;GraphQL with Go&lt;/a&gt; - Learn how to create a Go GraphQL server and client with code generation. Also includes creating REST endpoints.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackr.io/tutorials/learn-golang"&gt;Hackr.io&lt;/a&gt; - Learn Go from the best online golang tutorials submitted &amp;amp; voted by the golang programming community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Haraj-backend/hex-monscape"&gt;Hex Monscape&lt;/a&gt; - Getting started guidelines in writing maintainable code using Hexagonal Architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@rocketlaunchr.cloud/how-to-benchmark-dbq-vs-sqlx-vs-gorm-e814caacecb5"&gt;How to Benchmark: dbq vs sqlx vs GORM&lt;/a&gt; - Learn how to benchmark in Go. As a case-study, we will benchmark dbq, sqlx and GORM.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://semaphoreci.com/community/tutorials/how-to-deploy-a-go-web-application-with-docker"&gt;How To Deploy a Go Web Application with Docker&lt;/a&gt; - Learn how to use Docker for Go development and how to build production Docker images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.permit.io/blog/role-based-access-control-rbac-authorization-in-golang"&gt;How to Implement Role-Based Access Control (RBAC) Authorization in Golang&lt;/a&gt; - A guide to implementing Role-Based Access Control (RBAC) in Golang, including code examples, covering various methods to secure app endpoints with role-based authorization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://semaphoreci.com/community/tutorials/how-to-use-godog-for-behavior-driven-development-in-go"&gt;How to Use Godog for Behavior-driven Development in Go&lt;/a&gt; - Get started with Godog - a Behavior-driven development framework for building and testing Go applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/inancgumus/learngo"&gt;Learn Go with 1000+ Exercises&lt;/a&gt; - Learn Go with thousands of examples, exercises, and quizzes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quii/learn-go-with-tests"&gt;Learn Go with TDD&lt;/a&gt; - Learn Go with test-driven development.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/aurelievache/learning-go-by-examples-introduction-448n"&gt;Learning Go by examples&lt;/a&gt; - Series of articles in order to learn Golang language by concrete applications as example.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLmD8u-IFdreyh6EUfevBcbiuCKzFk0EW_"&gt;Microservices with Go&lt;/a&gt; - Dive deep into building microservices using Go, including gRPC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/packagemain"&gt;package main&lt;/a&gt; - YouTube channel about Programming in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/specializations/google-golang"&gt;Programming with Google Go&lt;/a&gt; - Coursera Specialization to learn about Go from scratch.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterstack.com/community/guides/scaling-go/"&gt;Scaling Go Applications&lt;/a&gt; - Everything about building, deploying and scaling Go applications in production.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@martinolsansky/webassembly-with-golang-is-fun-b243c0e34f02"&gt;The world’s easiest introduction to WebAssembly with Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/aurelievache/series/26234"&gt;Understanding Go in a visual way&lt;/a&gt; - Learn Go visually&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.w3basic.com/golang/"&gt;W3basic Go Tutorials&lt;/a&gt; - W3Basic provides an in-depth tutorial and well-organized content to learn Golang programming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yourbasic.org/golang"&gt;Your basic Go&lt;/a&gt; - Huge collection of tutorials and how to's.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Guided Learning&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/golang"&gt;The Go Developer Roadmap&lt;/a&gt; - A visual roadmap that new Go developers can follow through to help them learn Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RezaSi/go-interview-practice"&gt;The Go Interview Practice&lt;/a&gt; - A GitHub repository offering coding challenges for Go technical interview preparation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tutorialedge.net/paths/golang/"&gt;The Go Learning Path&lt;/a&gt; - A guided learning path containing a mix of free and premium resources.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://labex.io/skilltrees/go"&gt;The Go Skill Tree&lt;/a&gt; - A structured learning path that combines both free and premium resources.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/main/#contents"&gt;⬆ back to top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zitadel/zitadel</title>
      <link>https://github.com/zitadel/zitadel</link>
      <description>&lt;p&gt;ZITADEL - Identity infrastructure, simplified for you.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/zitadel/zitadel/main/docs/static/logos/zitadel-logo-dark@2x.png#gh-light-mode-only" alt="Zitadel Logo" max-height="200px" width="auto" /&gt; &lt;img src="https://raw.githubusercontent.com/zitadel/zitadel/main/docs/static/logos/zitadel-logo-light@2x.png#gh-dark-mode-only" alt="Zitadel Logo" max-height="200px" width="auto" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/zitadel/zitadel/raw/main/LICENSE" alt="License"&gt; &lt;img src="https://badgen.net/github/license/zitadel/zitadel/" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/6662"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/6662/badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/semantic-release/semantic-release" alt="semantic-release"&gt; &lt;img src="https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zitadel/zitadel/actions" alt="ZITADEL Release"&gt; &lt;img alt="GitHub Workflow Status (with event)" src="https://img.shields.io/github/actions/workflow/status/zitadel/zitadel/build.yml?event=pull_request" /&gt;&lt;/a&gt; &lt;a href="https://zitadel.com/docs/support/software-release-cycles-support" alt="Release"&gt; &lt;img src="https://badgen.net/github/release/zitadel/zitadel/stable" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/zitadel/zitadel" alt="Go Report Card"&gt; &lt;img src="https://goreportcard.com/badge/github.com/zitadel/zitadel" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/zitadel/zitadel" alt="Code Coverage"&gt; &lt;img src="https://codecov.io/gh/zitadel/zitadel/branch/main/graph/badge.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zitadel/zitadel/graphs/contributors" alt="Release"&gt; &lt;img alt="GitHub contributors" src="https://img.shields.io/github/contributors/zitadel/zitadel" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/YgjEuJzZ3x" alt="Discord Chat"&gt; &lt;img src="https://badgen.net/discord/online-members/YgjEuJzZ3x" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://openid.net/certification/#OPs" alt="OpenID Connect Certified"&gt; &lt;img src="https://raw.githubusercontent.com/zitadel/zitadel/main/docs/static/logos/oidc-cert.png" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Are you searching for a user management tool that is quickly set up like Auth0 and open source like Keycloak?&lt;/p&gt; 
&lt;p&gt;Do you have a project that requires multi-tenant user management with self-service for your customers?&lt;/p&gt; 
&lt;p&gt;Look no further — ZITADEL is the identity infrastructure, simplified for you.&lt;/p&gt; 
&lt;p&gt;We provide you with a wide range of out-of-the-box features to accelerate your project, including:&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; Multi-tenancy with team management&lt;br /&gt; &lt;span&gt;✅&lt;/span&gt; Secure login&lt;br /&gt; &lt;span&gt;✅&lt;/span&gt; Self-service&lt;br /&gt; &lt;span&gt;✅&lt;/span&gt; OpenID Connect&lt;br /&gt; &lt;span&gt;✅&lt;/span&gt; OAuth2.x&lt;br /&gt; &lt;span&gt;✅&lt;/span&gt; SAML2&lt;br /&gt; &lt;span&gt;✅&lt;/span&gt; LDAP&lt;br /&gt; &lt;span&gt;✅&lt;/span&gt; Passkeys / FIDO2&lt;br /&gt; &lt;span&gt;✅&lt;/span&gt; OTP&lt;br /&gt; &lt;span&gt;✅&lt;/span&gt; SCIM 2.0 Server and an unlimited audit trail is there for you, ready to use.&lt;/p&gt; 
&lt;p&gt;With ZITADEL, you are assured of a robust and customizable turnkey solution for all your authentication and authorization needs.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://zitadel.com"&gt;🏡 Website&lt;/a&gt; &lt;a href="https://zitadel.com/chat"&gt;💬 Chat&lt;/a&gt; &lt;a href="https://zitadel.com/docs/"&gt;📋 Docs&lt;/a&gt; &lt;a href="https://zitadel.com/blog"&gt;🧑‍💻 Blog&lt;/a&gt; &lt;a href="https://zitadel.com/contact/"&gt;📞 Contact&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;👉 &lt;a href="https://zitadel.com/docs/guides/start/quickstart"&gt;Quick Start Guide&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Deploy ZITADEL (Self-Hosted)&lt;/h3&gt; 
&lt;p&gt;Deploying ZITADEL locally takes less than 3 minutes. Go ahead and give it a try!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/self-hosting/deploy/linux"&gt;Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/self-hosting/deploy/macos"&gt;MacOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/self-hosting/deploy/compose"&gt;Docker compose&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/self-hosting/deploy/kubernetes"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See all guides &lt;a href="https://zitadel.com/docs/self-hosting/deploy/overview"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you are interested to get professional support for your self-hosted ZITADEL &lt;a href="https://zitadel.com/contact"&gt;please reach out to us&lt;/a&gt;!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Setup ZITADEL Cloud (SaaS)&lt;/h3&gt; 
&lt;p&gt;If you want to experience a hands-free ZITADEL, you should use &lt;a href="https://zitadel.com"&gt;ZITADEL Cloud&lt;/a&gt;. Available data regions are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🇺🇸 United States&lt;/li&gt; 
 &lt;li&gt;🇪🇺 European Union&lt;/li&gt; 
 &lt;li&gt;🇦🇺 Australia&lt;/li&gt; 
 &lt;li&gt;🇨🇭 Switzerland&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;ZITADEL Cloud comes with a free tier, providing you with all the same features as the open-source version. Learn more about the &lt;a href="https://zitadel.com/pricing"&gt;pay-as-you-go pricing&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Adopters&lt;/h2&gt; 
&lt;p&gt;We are grateful to the organizations and individuals who are using ZITADEL. If you are using ZITADEL, please consider adding your name to our &lt;a href="https://raw.githubusercontent.com/zitadel/zitadel/main/ADOPTERS.md"&gt;Adopters list&lt;/a&gt; by submitting a pull request.&lt;/p&gt; 
&lt;h3&gt;Example applications&lt;/h3&gt; 
&lt;p&gt;Clone one of our &lt;a href="https://zitadel.com/docs/sdk-examples/introduction"&gt;example applications&lt;/a&gt; or deploy them directly to Vercel.&lt;/p&gt; 
&lt;h3&gt;SDKs&lt;/h3&gt; 
&lt;p&gt;Use our &lt;a href="https://zitadel.com/docs/sdk-examples/introduction"&gt;SDKs&lt;/a&gt; for your favorite language and framework.&lt;/p&gt; 
&lt;h2&gt;Why choose ZITADEL&lt;/h2&gt; 
&lt;p&gt;We built ZITADEL with a complex multi-tenancy architecture in mind and provide the best solution to handle &lt;a href="https://zitadel.com/docs/guides/solution-scenarios/b2b"&gt;B2B customers and partners&lt;/a&gt;. Yet it offers everything you need for a customer identity (&lt;a href="https://zitadel.com/docs/guides/solution-scenarios/b2c"&gt;CIAM&lt;/a&gt;) use case.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/apis/introduction"&gt;API-first approach&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/solution-scenarios/b2b"&gt;Multi-tenancy&lt;/a&gt; authentication and access management&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/concepts/features/audit-trail"&gt;Strong audit trail&lt;/a&gt; thanks to &lt;a href="https://zitadel.com/docs/concepts/eventstore/overview"&gt;event sourcing&lt;/a&gt; as storage pattern&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/apis/actions/introduction"&gt;Actions&lt;/a&gt; to react on events with custom code and extended ZITADEL for you needs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/manage/customize/branding"&gt;Branding&lt;/a&gt; for a uniform user experience across multiple organizations&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/concepts/features/selfservice"&gt;Self-service&lt;/a&gt; for end-users, business customers, and administrators&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.postgresql.org/"&gt;Postgres&lt;/a&gt; database as reliable and widespread storage option&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Authentication&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Single Sign On (SSO)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/concepts/features/passkeys"&gt;Passkeys support (FIDO2 / WebAuthN)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Username / Password&lt;/li&gt; 
 &lt;li&gt;Multifactor authentication with OTP, U2F, Email OTP, SMS OTP&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/integrate/identity-providers/ldap"&gt;LDAP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/integrate/identity-providers/introduction"&gt;External enterprise identity providers and social logins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/solution-scenarios/device-authorization"&gt;Device authorization&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openid.net/certification/#OPs"&gt;OpenID Connect certified&lt;/a&gt; =&amp;gt; &lt;a href="https://zitadel.com/docs/apis/openidoauth/endpoints"&gt;OIDC Endpoints&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html"&gt;SAML 2.0&lt;/a&gt; =&amp;gt; &lt;a href="https://zitadel.com/docs/apis/saml/endpoints"&gt;SAML Endpoints&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/integrate/login-ui/username-password"&gt;Custom sessions&lt;/a&gt; if you need to go beyond OIDC or SAML&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/integrate/service-users/authenticate-service-users"&gt;Machine-to-machine&lt;/a&gt; with JWT profile, Personal Access Tokens (PAT), and Client Credentials&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/integrate/token-exchange"&gt;Token exchange and impersonation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/integrate/login/hosted-login#hosted-login-version-2-beta"&gt;Beta: Hosted Login V2&lt;/a&gt; our new login version 2.0&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Multi-Tenancy&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/integrate/identity-brokering"&gt;Identity Brokering&lt;/a&gt; with templates for popular identity providers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/solution-scenarios/onboarding"&gt;Customizable onboaring&lt;/a&gt; for B2B and their users&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/manage/console/projects"&gt;Delegate role management to third-parties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/solution-scenarios/domain-discovery"&gt;Domain discovery&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Integration&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/apis/introduction"&gt;GRPC and REST APIs&lt;/a&gt; for every functionality and resource&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/apis/actions/introduction"&gt;Actions&lt;/a&gt; to call any API, send webhooks, adjust workflows, or customize tokens&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/integrate/retrieve-user-roles"&gt;Role Based Access Control (RBAC)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/apis/scim2"&gt;SCIM 2.0 Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/sdk-examples/introduction"&gt;Examples and SDKs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/integrate/external-audit-log"&gt;Audit Log and SOC/SIEM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/integrate/onboarding"&gt;User registration and onboarding&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/integrate/login/login-users"&gt;Hosted and custom login user interface&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Self-Service&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/concepts/features/selfservice#registration"&gt;Self-registration&lt;/a&gt; including verification&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/concepts/features/selfservice"&gt;Self-service&lt;/a&gt; for end-users, business customers, and administrators&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/guides/manage/console/overview"&gt;Administration UI (Console)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Deployment&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/self-hosting/manage/database#postgres"&gt;Postgres&lt;/a&gt; (version &amp;gt;= 14)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/concepts/architecture/solution#zero-downtime-updates"&gt;Zero Downtime Updates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zitadel.com/docs/self-hosting/manage/production"&gt;High scalability&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Track upcoming features on our &lt;a href="https://zitadel.com/roadmap"&gt;roadmap&lt;/a&gt; and follow our &lt;a href="https://zitadel.com/changelog"&gt;changelog&lt;/a&gt; for recent updates.&lt;/p&gt; 
&lt;h2&gt;How To Contribute&lt;/h2&gt; 
&lt;p&gt;Find details about how you can contribute in our &lt;a href="https://raw.githubusercontent.com/zitadel/zitadel/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;. Join our &lt;a href="https://zitadel.com/chat"&gt;Discord Chat&lt;/a&gt; to get help.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/zitadel/zitadel/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=zitadel/zitadel" /&gt; &lt;/a&gt; 
&lt;p&gt;Made with &lt;a href="https://contrib.rocks/preview?repo=zitadel/zitadel"&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Showcase&lt;/h2&gt; 
&lt;h3&gt;Quick Start Guide&lt;/h3&gt; 
&lt;p&gt;Secure a React Application using OpenID Connect Authorization Code with PKCE&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=5THbQljoPKg" title="Quick Start Guide"&gt;&lt;img src="https://user-images.githubusercontent.com/1366906/223662449-f17b734d-405c-4945-a8a1-200440c459e5.gif" alt="Quick Start Guide" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Login with Passkeys&lt;/h3&gt; 
&lt;p&gt;Use our login widget to allow easy and secure access to your applications and enjoy all the benefits of Passkeys (FIDO 2 / WebAuthN):&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=cZjHQYurSjw&amp;amp;list=PLTDa7jTlOyRLdABgD2zL0LGM7rx5GZ1IR&amp;amp;index=2" title="Passkeys"&gt;&lt;img src="https://user-images.githubusercontent.com/1366906/223664178-4132faef-4832-4014-b9ab-90c2a8d15436.gif" alt="Passkeys" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Admin Console&lt;/h3&gt; 
&lt;p&gt;Use &lt;a href="https://zitadel.com/docs/guides/manage/console/overview"&gt;Console&lt;/a&gt; or our &lt;a href="https://zitadel.com/docs/apis/introduction"&gt;APIs&lt;/a&gt; to setup organizations, projects and applications.&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=RPpHktAcCtk" title="Console Showcase"&gt;&lt;img src="https://user-images.githubusercontent.com/1366906/223663344-67038d5f-4415-4285-ab20-9a4d397e2138.gif" alt="Console Showcase" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Login V2&lt;/h3&gt; 
&lt;p&gt;Check out our new Login V2 version in our &lt;a href="https://github.com/zitadel/typescript"&gt;typescript repository&lt;/a&gt; or in our &lt;a href="https://zitadel.com/docs/guides/integrate/login/hosted-login#hosted-login-version-2-beta"&gt;documentation&lt;/a&gt; &lt;img src="https://github.com/user-attachments/assets/cb5c5212-128b-4dc9-b11d-cabfd3f73e26" alt="New Login Showcase" /&gt;&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;You can find our security policy &lt;a href="https://raw.githubusercontent.com/zitadel/zitadel/main/SECURITY.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://zitadel.com/docs/support/technical_advisory"&gt;Technical Advisories&lt;/a&gt; are published regarding major issues with the ZITADEL platform that could potentially impact security or stability in production environments.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/zitadel/zitadel/main/LICENSE"&gt;here&lt;/a&gt; are our exact licensing terms.&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See our &lt;a href="https://raw.githubusercontent.com/zitadel/zitadel/main/LICENSE"&gt;license&lt;/a&gt; for detailed information governing permissions and limitations on use.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>akuity/kargo</title>
      <link>https://github.com/akuity/kargo</link>
      <description>&lt;p&gt;Application lifecycle orchestration&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/akuity/kargo/main/ui/public/kargo-logo-white.png#gh-dark-mode-only" alt="Kargo by Akuity, creators of Argo" /&gt; &lt;img src="https://raw.githubusercontent.com/akuity/kargo/main/kargo-logo.png#gh-light-mode-only" alt="Kargo by Akuity, creators of Argo" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/akuity/kargo/actions/workflows/ci.yaml/badge.svg?sanitize=true" alt="CI" /&gt; &lt;a href="https://codecov.io/gh/akuity/kargo"&gt;&lt;img src="https://codecov.io/gh/akuity/kargo/branch/main/graph/badge.svg?token=FGUq4netA6" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://app.netlify.com/sites/docs-kargo-io/deploys"&gt;&lt;img src="https://api.netlify.com/api/v1/badges/71b4c2e1-5e8b-4927-ad1f-b475bae59e90/deploy-status" alt="Netlify Status" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/akuity/kargo/main/CODE_OF_CONDUCT.md"&gt;&lt;img src="https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg?sanitize=true" alt="Contributor Covenant" /&gt;&lt;/a&gt; &lt;a href="https://akuity.community"&gt;&lt;img src="https://img.shields.io/discord/1138942074998235187?logo=discord&amp;amp;logoColor=ffffff&amp;amp;label=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Kargo builds upon &lt;a href="https://opengitops.dev/"&gt;GitOps&lt;/a&gt; principles to manage and automate the promotion of software artifacts through the many stages of their lifecycle.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/akuity/kargo/main/docs/static/img/kargo-ui.png" alt="Kargo Dashboard" /&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Read about Kargo in our &lt;a href="https://docs.kargo.io"&gt;docs&lt;/a&gt;, get hands-on right away with our &lt;a href="https://docs.kargo.io/quickstart"&gt;Quickstart&lt;/a&gt; tutorial, or watch the &lt;em&gt;Multi-Stage Deployment Pipelines the GitOps Way&lt;/em&gt; talk presented by Jesse Suen &amp;amp; Kent Rancourt of &lt;a href="https://akuity.io/"&gt;Akuity&lt;/a&gt; at GitOpsCon EU 2024:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/0B_JODxyK0w"&gt;&lt;img src="https://img.youtube.com/vi/0B_JODxyK0w/0.jpg" alt="Multi-Stage Deployment Pipelines the GitOps Way - Kargo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support &amp;amp; Feedback&lt;/h2&gt; 
&lt;p&gt;To report a bug or request a feature, please open an &lt;a href="https://github.com/akuity/kargo/issues"&gt;issue&lt;/a&gt;. For general questions, please start a &lt;a href="https://github.com/akuity/kargo/discussions"&gt;discussion&lt;/a&gt; instead.&lt;/p&gt; 
&lt;p&gt;Please also feel free to join fellow users in discusions in our &lt;a href="https://akuity.community"&gt;Discord Community&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;If you are interested in enterprise-scale Kargo hosted, managed, and professionally supported by Akuity, inquire at &lt;a href="https://akuity.io/kargo-enterprise"&gt;https://akuity.io/kargo-enterprise&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The Kargo project accepts contributions via GitHub pull requests. If you wish to implement a bug fix or new feature, please engage our maintainers by opening an &lt;a href="https://github.com/akuity/kargo/issues"&gt;issue&lt;/a&gt; first.&lt;/p&gt; 
&lt;p&gt;Visit our &lt;a href="https://docs.kargo.io/contributor-guide/"&gt;Kargo Contributor Guide&lt;/a&gt; for more info on how to start hacking on Kargo quickly and easily.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;Participation in the Kargo project is governed by the &lt;a href="https://docs.kargo.io/contributor-guide/code-of-conduct/"&gt;Contributor Covenant Code of Conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>