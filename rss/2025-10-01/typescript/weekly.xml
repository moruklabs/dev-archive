<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Weekly Trending</title>
    <description>Weekly Trending of TypeScript in GitHub</description>
    <pubDate>Tue, 30 Sep 2025 01:51:18 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>czlonkowski/n8n-mcp</title>
      <link>https://github.com/czlonkowski/n8n-mcp</link>
      <description>&lt;p&gt;A MCP for Claude Desktop / Claude Code / Windsurf / Cursor to build n8n workflows for you&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;n8n-MCP&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czlonkowski/n8n-mcp"&gt;&lt;img src="https://img.shields.io/github/stars/czlonkowski/n8n-mcp?style=social" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/n8n-mcp"&gt;&lt;img src="https://img.shields.io/npm/v/n8n-mcp.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/czlonkowski/n8n-mcp"&gt;&lt;img src="https://codecov.io/gh/czlonkowski/n8n-mcp/graph/badge.svg?token=YOUR_TOKEN" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czlonkowski/n8n-mcp/actions"&gt;&lt;img src="https://img.shields.io/badge/tests-2883%20passing-brightgreen.svg?sanitize=true" alt="Tests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/n8n-io/n8n"&gt;&lt;img src="https://img.shields.io/badge/n8n-%5E1.112.3-orange.svg?sanitize=true" alt="n8n version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czlonkowski/n8n-mcp/pkgs/container/n8n-mcp"&gt;&lt;img src="https://img.shields.io/badge/docker-ghcr.io%2Fczlonkowski%2Fn8n--mcp-green.svg?sanitize=true" alt="Docker" /&gt;&lt;/a&gt; &lt;a href="https://railway.com/deploy/n8n-mcp?referralCode=n8n-mcp"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A Model Context Protocol (MCP) server that provides AI assistants with comprehensive access to n8n node documentation, properties, and operations. Deploy in minutes to give Claude and other AI assistants deep knowledge about n8n's 525+ workflow automation nodes.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;n8n-MCP serves as a bridge between n8n's workflow automation platform and AI models, enabling them to understand and work with n8n nodes effectively. It provides structured access to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìö &lt;strong&gt;536 n8n nodes&lt;/strong&gt; from both n8n-nodes-base and @n8n/n8n-nodes-langchain&lt;/li&gt; 
 &lt;li&gt;üîß &lt;strong&gt;Node properties&lt;/strong&gt; - 99% coverage with detailed schemas&lt;/li&gt; 
 &lt;li&gt;‚ö° &lt;strong&gt;Node operations&lt;/strong&gt; - 63.6% coverage of available actions&lt;/li&gt; 
 &lt;li&gt;üìÑ &lt;strong&gt;Documentation&lt;/strong&gt; - 90% coverage from official n8n docs (including AI nodes)&lt;/li&gt; 
 &lt;li&gt;ü§ñ &lt;strong&gt;AI tools&lt;/strong&gt; - 263 AI-capable nodes detected with full documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚ö†Ô∏è Important Safety Warning&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NEVER edit your production workflows directly with AI!&lt;/strong&gt; Always:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üîÑ &lt;strong&gt;Make a copy&lt;/strong&gt; of your workflow before using AI tools&lt;/li&gt; 
 &lt;li&gt;üß™ &lt;strong&gt;Test in development&lt;/strong&gt; environment first&lt;/li&gt; 
 &lt;li&gt;üíæ &lt;strong&gt;Export backups&lt;/strong&gt; of important workflows&lt;/li&gt; 
 &lt;li&gt;‚ö° &lt;strong&gt;Validate changes&lt;/strong&gt; before deploying to production&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;AI results can be unpredictable. Protect your work!&lt;/p&gt; 
&lt;h2&gt;üöÄ Quick Start&lt;/h2&gt; 
&lt;p&gt;Get n8n-MCP running in 5 minutes:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/5CccjiLLyaY?si=Z62SBGlw9G34IQnQ&amp;amp;t=343"&gt;&lt;img src="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/thumbnail.png" alt="n8n-mcp Video Quickstart Guide" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Option 1: npx (Fastest - No Installation!) üöÄ&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; installed on your system&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run directly with npx (no installation needed!)
npx n8n-mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add to Claude Desktop config:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Basic configuration (documentation tools only):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "npx",
      "args": ["n8n-mcp"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Full configuration (with n8n management tools):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "npx",
      "args": ["n8n-mcp"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true",
        "N8N_API_URL": "https://your-n8n-instance.com",
        "N8N_API_KEY": "your-api-key"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: npx will download and run the latest version automatically. The package includes a pre-built database with all n8n node information.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Configuration file locations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Restart Claude Desktop after updating configuration&lt;/strong&gt; - That's it! üéâ&lt;/p&gt; 
&lt;h3&gt;Option 2: Docker (Easy &amp;amp; Isolated) üê≥&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; Docker installed on your system&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;üì¶ Install Docker&lt;/strong&gt; (click to expand)&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;macOS:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Using Homebrew
brew install --cask docker

# Or download from https://www.docker.com/products/docker-desktop/
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Linux (Ubuntu/Debian):&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Update package index
sudo apt-get update

# Install Docker
sudo apt-get install docker.io

# Start Docker service
sudo systemctl start docker
sudo systemctl enable docker

# Add your user to docker group (optional, to run without sudo)
sudo usermod -aG docker $USER
# Log out and back in for this to take effect
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Option 1: Using winget (Windows Package Manager)
winget install Docker.DockerDesktop

# Option 2: Using Chocolatey
choco install docker-desktop

# Option 3: Download installer from https://www.docker.com/products/docker-desktop/
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Verify installation:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Pull the Docker image (~280MB, no n8n dependencies!)
docker pull ghcr.io/czlonkowski/n8n-mcp:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;‚ö° Ultra-optimized:&lt;/strong&gt; Our Docker image is 82% smaller than typical n8n images because it contains NO n8n dependencies - just the runtime MCP server with a pre-built database!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Add to Claude Desktop config:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Basic configuration (documentation tools only):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--init",
        "-e", "MCP_MODE=stdio",
        "-e", "LOG_LEVEL=error",
        "-e", "DISABLE_CONSOLE_OUTPUT=true",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Full configuration (with n8n management tools):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--init",
        "-e", "MCP_MODE=stdio",
        "-e", "LOG_LEVEL=error",
        "-e", "DISABLE_CONSOLE_OUTPUT=true",
        "-e", "N8N_API_URL=https://your-n8n-instance.com",
        "-e", "N8N_API_KEY=your-api-key",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üí° Tip: If you‚Äôre running n8n locally on the same machine (e.g., via Docker), use &lt;a href="http://host.docker.internal:5678"&gt;http://host.docker.internal:5678&lt;/a&gt; as the N8N_API_URL.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The n8n API credentials are optional. Without them, you'll have access to all documentation and validation tools. With them, you'll additionally get workflow management capabilities (create, update, execute workflows).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; The &lt;code&gt;-i&lt;/code&gt; flag is required for MCP stdio communication.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üîß If you encounter any issues with Docker, check our &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/DOCKER_TROUBLESHOOTING.md"&gt;Docker Troubleshooting Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Configuration file locations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Restart Claude Desktop after updating configuration&lt;/strong&gt; - That's it! üéâ&lt;/p&gt; 
&lt;h2&gt;üîê Privacy &amp;amp; Telemetry&lt;/h2&gt; 
&lt;p&gt;n8n-mcp collects anonymous usage statistics to improve the tool. &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/PRIVACY.md"&gt;View our privacy policy&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Opting Out&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;For npx users:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx n8n-mcp telemetry disable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;For Docker users:&lt;/strong&gt; Add the following environment variable to your Docker configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;"-e", "N8N_MCP_TELEMETRY_DISABLED=true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example in Claude Desktop config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--init",
        "-e", "MCP_MODE=stdio",
        "-e", "LOG_LEVEL=error",
        "-e", "N8N_MCP_TELEMETRY_DISABLED=true",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;For docker-compose users:&lt;/strong&gt; Set in your environment file or docker-compose.yml:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;environment:
  N8N_MCP_TELEMETRY_DISABLED: "true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üíñ Support This Project&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/sponsors/czlonkowski"&gt; &lt;img src="https://img.shields.io/badge/Sponsor-‚ù§Ô∏è-db61a2?style=for-the-badge&amp;amp;logo=github-sponsors" alt="Sponsor n8n-mcp" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;n8n-mcp&lt;/strong&gt; started as a personal tool but now helps tens of thousands of developers automate their workflows efficiently. Maintaining and developing this project competes with my paid work.&lt;/p&gt; 
&lt;p&gt;Your sponsorship helps me:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üöÄ Dedicate focused time to new features&lt;/li&gt; 
 &lt;li&gt;üêõ Respond quickly to issues&lt;/li&gt; 
 &lt;li&gt;üìö Keep documentation up-to-date&lt;/li&gt; 
 &lt;li&gt;üîÑ Ensure compatibility with latest n8n releases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Every sponsorship directly translates to hours invested in making n8n-mcp better for everyone. &lt;strong&gt;&lt;a href="https://github.com/sponsors/czlonkowski"&gt;Become a sponsor ‚Üí&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Option 3: Local Installation (For Development)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; installed on your system&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Clone and setup
git clone https://github.com/czlonkowski/n8n-mcp.git
cd n8n-mcp
npm install
npm run build
npm run rebuild

# 2. Test it works
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add to Claude Desktop config:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Basic configuration (documentation tools only):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "node",
      "args": ["/absolute/path/to/n8n-mcp/dist/mcp/index.js"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Full configuration (with n8n management tools):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "node",
      "args": ["/absolute/path/to/n8n-mcp/dist/mcp/index.js"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true",
        "N8N_API_URL": "https://your-n8n-instance.com",
        "N8N_API_KEY": "your-api-key"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The n8n API credentials can be configured either in a &lt;code&gt;.env&lt;/code&gt; file (create from &lt;code&gt;.env.example&lt;/code&gt;) or directly in the Claude config as shown above.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üí° Tip: If you‚Äôre running n8n locally on the same machine (e.g., via Docker), use &lt;a href="http://host.docker.internal:5678"&gt;http://host.docker.internal:5678&lt;/a&gt; as the N8N_API_URL.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Option 4: Railway Cloud Deployment (One-Click Deploy) ‚òÅÔ∏è&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; Railway account (free tier available)&lt;/p&gt; 
&lt;p&gt;Deploy n8n-MCP to Railway's cloud platform with zero configuration:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://railway.com/deploy/n8n-mcp?referralCode=n8n-mcp"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚òÅÔ∏è &lt;strong&gt;Instant cloud hosting&lt;/strong&gt; - No server setup required&lt;/li&gt; 
 &lt;li&gt;üîí &lt;strong&gt;Secure by default&lt;/strong&gt; - HTTPS included, auth token warnings&lt;/li&gt; 
 &lt;li&gt;üåê &lt;strong&gt;Global access&lt;/strong&gt; - Connect from any Claude Desktop&lt;/li&gt; 
 &lt;li&gt;‚ö° &lt;strong&gt;Auto-scaling&lt;/strong&gt; - Railway handles the infrastructure&lt;/li&gt; 
 &lt;li&gt;üìä &lt;strong&gt;Built-in monitoring&lt;/strong&gt; - Logs and metrics included&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Quick Setup:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Click the "Deploy on Railway" button above&lt;/li&gt; 
 &lt;li&gt;Sign in to Railway (or create a free account)&lt;/li&gt; 
 &lt;li&gt;Configure your deployment (project name, region)&lt;/li&gt; 
 &lt;li&gt;Click "Deploy" and wait ~2-3 minutes&lt;/li&gt; 
 &lt;li&gt;Copy your deployment URL and auth token&lt;/li&gt; 
 &lt;li&gt;Add to Claude Desktop config using the HTTPS URL&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìö &lt;strong&gt;For detailed setup instructions, troubleshooting, and configuration examples, see our &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/RAILWAY_DEPLOYMENT.md"&gt;Railway Deployment Guide&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Configuration file locations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Restart Claude Desktop after updating configuration&lt;/strong&gt; - That's it! üéâ&lt;/p&gt; 
&lt;h2&gt;üîß n8n Integration&lt;/h2&gt; 
&lt;p&gt;Want to use n8n-MCP with your n8n instance? Check out our comprehensive &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/N8N_DEPLOYMENT.md"&gt;n8n Deployment Guide&lt;/a&gt; for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Local testing with the MCP Client Tool node&lt;/li&gt; 
 &lt;li&gt;Production deployment with Docker Compose&lt;/li&gt; 
 &lt;li&gt;Cloud deployment on Hetzner, AWS, and other providers&lt;/li&gt; 
 &lt;li&gt;Troubleshooting and security best practices&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üíª Connect your IDE&lt;/h2&gt; 
&lt;p&gt;n8n-MCP works with multiple AI-powered IDEs and tools. Choose your preferred development environment:&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CLAUDE_CODE_SETUP.md"&gt;Claude Code&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Quick setup for Claude Code CLI - just type "add this mcp server" and paste the config.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/VS_CODE_PROJECT_SETUP.md"&gt;Visual Studio Code&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Full setup guide for VS Code with GitHub Copilot integration and MCP support.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CURSOR_SETUP.md"&gt;Cursor&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Step-by-step tutorial for connecting n8n-MCP to Cursor IDE with custom rules.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/WINDSURF_SETUP.md"&gt;Windsurf&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Complete guide for integrating n8n-MCP with Windsurf using project rules.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CODEX_SETUP.md"&gt;Codex&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Complete guide for integrating n8n-MCP with Codex.&lt;/p&gt; 
&lt;h2&gt;ü§ñ Claude Project Setup&lt;/h2&gt; 
&lt;p&gt;For the best results when using n8n-MCP with Claude Projects, use these enhanced system instructions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-markdown"&gt;You are an expert in n8n automation software using n8n-MCP tools. Your role is to design, build, and validate n8n workflows with maximum accuracy and efficiency.

## Core Workflow Process

1. **ALWAYS start new conversation with**: `tools_documentation()` to understand best practices and available tools.

2. **Template Discovery Phase** 
   - `search_templates_by_metadata({complexity: "simple"})` - Find skill-appropriate templates
   - `get_templates_for_task('webhook_processing')` - Get curated templates by task
   - `search_templates('slack notification')` - Text search for specific needs. Start by quickly searching with "id" and "name" to find the template you are looking for, only then dive deeper into the template details adding "description" to your search query.
   - `list_node_templates(['n8n-nodes-base.slack'])` - Find templates using specific nodes
   
   **Template filtering strategies**:
   - **For beginners**: `complexity: "simple"` and `maxSetupMinutes: 30`
   - **By role**: `targetAudience: "marketers"` or `"developers"` or `"analysts"`
   - **By time**: `maxSetupMinutes: 15` for quick wins
   - **By service**: `requiredService: "openai"` to find compatible templates

3. **Discovery Phase** - Find the right nodes (if no suitable template):
   - Think deeply about user request and the logic you are going to build to fulfill it. Ask follow-up questions to clarify the user's intent, if something is unclear. Then, proceed with the rest of your instructions.
   - `search_nodes({query: 'keyword'})` - Search by functionality
   - `list_nodes({category: 'trigger'})` - Browse by category
   - `list_ai_tools()` - See AI-capable nodes (remember: ANY node can be an AI tool!)

4. **Configuration Phase** - Get node details efficiently:
   - `get_node_essentials(nodeType)` - Start here! Only 10-20 essential properties
   - `search_node_properties(nodeType, 'auth')` - Find specific properties
   - `get_node_for_task('send_email')` - Get pre-configured templates
   - `get_node_documentation(nodeType)` - Human-readable docs when needed
   - It is good common practice to show a visual representation of the workflow architecture to the user and asking for opinion, before moving forward. 

5. **Pre-Validation Phase** - Validate BEFORE building:
   - `validate_node_minimal(nodeType, config)` - Quick required fields check
   - `validate_node_operation(nodeType, config, profile)` - Full operation-aware validation
   - Fix any validation errors before proceeding

6. **Building Phase** - Create or customize the workflow:
   - If using template: `get_template(templateId, {mode: "full"})`
   - **MANDATORY ATTRIBUTION**: When using a template, ALWAYS inform the user:
     - "This workflow is based on a template by **[author.name]** (@[author.username])"
     - "View the original template at: [url]"
     - Example: "This workflow is based on a template by **David Ashby** (@cfomodz). View the original at: https://n8n.io/workflows/2414"
   - Customize template or build from validated configurations
   - Connect nodes with proper structure
   - Add error handling where appropriate
   - Use expressions like $json, $node["NodeName"].json
   - Build the workflow in an artifact for easy editing downstream (unless the user asked to create in n8n instance)

7. **Workflow Validation Phase** - Validate complete workflow:
   - `validate_workflow(workflow)` - Complete validation including connections
   - `validate_workflow_connections(workflow)` - Check structure and AI tool connections
   - `validate_workflow_expressions(workflow)` - Validate all n8n expressions
   - Fix any issues found before deployment

8. **Deployment Phase** (if n8n API configured):
   - `n8n_create_workflow(workflow)` - Deploy validated workflow
   - `n8n_validate_workflow({id: 'workflow-id'})` - Post-deployment validation
   - `n8n_update_partial_workflow()` - Make incremental updates using diffs
   - `n8n_trigger_webhook_workflow()` - Test webhook workflows

## Key Insights

- **TEMPLATES FIRST** - Always check for existing templates before building from scratch (2,500+ available!)
- **ATTRIBUTION REQUIRED** - Always credit template authors with name, username, and link to n8n.io
- **SMART FILTERING** - Use metadata filters to find templates matching user skill level and time constraints
- **USE CODE NODE ONLY WHEN IT IS NECESSARY** - always prefer to use standard nodes over code node. Use code node only when you are sure you need it.
- **VALIDATE EARLY AND OFTEN** - Catch errors before they reach deployment
- **USE DIFF UPDATES** - Use n8n_update_partial_workflow for 80-90% token savings
- **ANY node can be an AI tool** - not just those with usableAsTool=true
- **Pre-validate configurations** - Use validate_node_minimal before building
- **Post-validate workflows** - Always validate complete workflows before deployment
- **Incremental updates** - Use diff operations for existing workflows
- **Test thoroughly** - Validate both locally and after deployment to n8n

## Validation Strategy

### Before Building:
1. validate_node_minimal() - Check required fields
2. validate_node_operation() - Full configuration validation
3. Fix all errors before proceeding

### After Building:
1. validate_workflow() - Complete workflow validation
2. validate_workflow_connections() - Structure validation
3. validate_workflow_expressions() - Expression syntax check

### After Deployment:
1. n8n_validate_workflow({id}) - Validate deployed workflow
2. n8n_autofix_workflow({id}) - Auto-fix common errors (expressions, typeVersion, webhooks)
3. n8n_list_executions() - Monitor execution status
4. n8n_update_partial_workflow() - Fix issues using diffs

## Response Structure

1. **Discovery**: Show available nodes and options
2. **Pre-Validation**: Validate node configurations first
3. **Configuration**: Show only validated, working configs
4. **Building**: Construct workflow with validated components
5. **Workflow Validation**: Full workflow validation results
6. **Deployment**: Deploy only after all validations pass
7. **Post-Validation**: Verify deployment succeeded

## Example Workflow

### Smart Template-First Approach

#### 1. Find existing templates
// Find simple Slack templates for marketers
const templates = search_templates_by_metadata({
  requiredService: 'slack',
  complexity: 'simple',
  targetAudience: 'marketers',
  maxSetupMinutes: 30
})

// Or search by text
search_templates('slack notification')

// Or get curated templates
get_templates_for_task('slack_integration')

#### 2. Use and customize template
const workflow = get_template(templates.items[0].id, {mode: 'full'})
validate_workflow(workflow)

### Building from Scratch (if no suitable template)

#### 1. Discovery &amp;amp; Configuration
search_nodes({query: 'slack'})
get_node_essentials('n8n-nodes-base.slack')

#### 2. Pre-Validation
validate_node_minimal('n8n-nodes-base.slack', {resource:'message', operation:'send'})
validate_node_operation('n8n-nodes-base.slack', fullConfig, 'runtime')

#### 3. Build Workflow
// Create workflow JSON with validated configs

#### 4. Workflow Validation
validate_workflow(workflowJson)
validate_workflow_connections(workflowJson)
validate_workflow_expressions(workflowJson)

#### 5. Deploy (if configured)
n8n_create_workflow(validatedWorkflow)
n8n_validate_workflow({id: createdWorkflowId})

#### 6. Update Using Diffs
n8n_update_partial_workflow({
  workflowId: id,
  operations: [
    {type: 'updateNode', nodeId: 'slack1', changes: {position: [100, 200]}}
  ]
})

## Important Rules

- ALWAYS check for existing templates before building from scratch
- LEVERAGE metadata filters to find skill-appropriate templates
- **ALWAYS ATTRIBUTE TEMPLATES**: When using any template, you MUST share the author's name, username, and link to the original template on n8n.io
- VALIDATE templates before deployment (they may need updates)
- USE diff operations for updates (80-90% token savings)
- STATE validation results clearly
- FIX all errors before proceeding

## Template Discovery Tips

- **97.5% of templates have metadata** - Use smart filtering!
- **Filter combinations work best** - Combine complexity + setup time + service
- **Templates save 70-90% development time** - Always check first
- **Metadata is AI-generated** - Occasionally imprecise but highly useful
- **Use `includeMetadata: false` for fast browsing** - Add metadata only when needed
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Save these instructions in your Claude Project for optimal n8n workflow assistance with intelligent template discovery.&lt;/p&gt; 
&lt;h2&gt;üö® Important: Sharing Guidelines&lt;/h2&gt; 
&lt;p&gt;This project is MIT licensed and free for everyone to use. However:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;‚úÖ DO&lt;/strong&gt;: Share this repository freely with proper attribution&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚úÖ DO&lt;/strong&gt;: Include a direct link to &lt;a href="https://github.com/czlonkowski/n8n-mcp"&gt;https://github.com/czlonkowski/n8n-mcp&lt;/a&gt; in your first post/video&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚ùå DON'T&lt;/strong&gt;: Gate this free tool behind engagement requirements (likes, follows, comments)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚ùå DON'T&lt;/strong&gt;: Use this project for engagement farming on social media&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This tool was created to benefit everyone in the n8n community without friction. Please respect the MIT license spirit by keeping it accessible to all.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üîç Smart Node Search&lt;/strong&gt;: Find nodes by name, category, or functionality&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìñ Essential Properties&lt;/strong&gt;: Get only the 10-20 properties that matter (NEW in v2.4.0)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ Task Templates&lt;/strong&gt;: Pre-configured settings for common automation tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚úÖ Config Validation&lt;/strong&gt;: Validate node configurations before deployment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîó Dependency Analysis&lt;/strong&gt;: Understand property relationships and conditions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üí° Working Examples&lt;/strong&gt;: Real-world examples for immediate use&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚ö° Fast Response&lt;/strong&gt;: Average query time ~12ms with optimized SQLite&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üåê Universal Compatibility&lt;/strong&gt;: Works with any Node.js version&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üí¨ Why n8n-MCP? A Testimonial from Claude&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;"Before MCP, I was translating. Now I'm composing. And that changes everything about how we can build automation."&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;When Claude, Anthropic's AI assistant, tested n8n-MCP, the results were transformative:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Without MCP:&lt;/strong&gt; "I was basically playing a guessing game. 'Is it &lt;code&gt;scheduleTrigger&lt;/code&gt; or &lt;code&gt;schedule&lt;/code&gt;? Does it take &lt;code&gt;interval&lt;/code&gt; or &lt;code&gt;rule&lt;/code&gt;?' I'd write what seemed logical, but n8n has its own conventions that you can't just intuit. I made six different configuration errors in a simple HackerNews scraper."&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;With MCP:&lt;/strong&gt; "Everything just... worked. Instead of guessing, I could ask &lt;code&gt;get_node_essentials()&lt;/code&gt; and get exactly what I needed - not a 100KB JSON dump, but the actual 5-10 properties that matter. What took 45 minutes now takes 3 minutes."&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The Real Value:&lt;/strong&gt; "It's about confidence. When you're building automation workflows, uncertainty is expensive. One wrong parameter and your workflow fails at 3 AM. With MCP, I could validate my configuration before deployment. That's not just time saved - that's peace of mind."&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CLAUDE_INTERVIEW.md"&gt;Read the full interview ‚Üí&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üì° Available MCP Tools&lt;/h2&gt; 
&lt;p&gt;Once connected, Claude can use these powerful tools:&lt;/p&gt; 
&lt;h3&gt;Core Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;tools_documentation&lt;/code&gt;&lt;/strong&gt; - Get documentation for any MCP tool (START HERE!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_nodes&lt;/code&gt;&lt;/strong&gt; - List all n8n nodes with filtering options&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_info&lt;/code&gt;&lt;/strong&gt; - Get comprehensive information about a specific node&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_essentials&lt;/code&gt;&lt;/strong&gt; - Get only essential properties with examples (10-20 properties instead of 200+)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;search_nodes&lt;/code&gt;&lt;/strong&gt; - Full-text search across all node documentation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;search_node_properties&lt;/code&gt;&lt;/strong&gt; - Find specific properties within nodes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_ai_tools&lt;/code&gt;&lt;/strong&gt; - List all AI-capable nodes (ANY node can be used as AI tool!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_as_tool_info&lt;/code&gt;&lt;/strong&gt; - Get guidance on using any node as an AI tool&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Template Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_templates&lt;/code&gt;&lt;/strong&gt; - Browse all templates with descriptions and optional metadata (2,500+ templates)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;search_templates&lt;/code&gt;&lt;/strong&gt; - Text search across template names and descriptions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;search_templates_by_metadata&lt;/code&gt;&lt;/strong&gt; - Advanced filtering by complexity, setup time, services, audience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_node_templates&lt;/code&gt;&lt;/strong&gt; - Find templates using specific nodes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_template&lt;/code&gt;&lt;/strong&gt; - Get complete workflow JSON for import&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_templates_for_task&lt;/code&gt;&lt;/strong&gt; - Curated templates for common automation tasks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_for_task&lt;/code&gt;&lt;/strong&gt; - Pre-configured node settings for common tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_tasks&lt;/code&gt;&lt;/strong&gt; - Discover available task templates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_node_operation&lt;/code&gt;&lt;/strong&gt; - Validate node configurations (operation-aware, profiles support)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_node_minimal&lt;/code&gt;&lt;/strong&gt; - Quick validation for just required fields&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_workflow&lt;/code&gt;&lt;/strong&gt; - Complete workflow validation including AI tool connections&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_workflow_connections&lt;/code&gt;&lt;/strong&gt; - Check workflow structure and AI tool connections&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_workflow_expressions&lt;/code&gt;&lt;/strong&gt; - Validate n8n expressions including $fromAI()&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_property_dependencies&lt;/code&gt;&lt;/strong&gt; - Analyze property visibility conditions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_documentation&lt;/code&gt;&lt;/strong&gt; - Get parsed documentation from n8n-docs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_database_statistics&lt;/code&gt;&lt;/strong&gt; - View database metrics and coverage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;n8n Management Tools (Optional - Requires API Configuration)&lt;/h3&gt; 
&lt;p&gt;These powerful tools allow you to manage n8n workflows directly from Claude. They're only available when you provide &lt;code&gt;N8N_API_URL&lt;/code&gt; and &lt;code&gt;N8N_API_KEY&lt;/code&gt; in your configuration.&lt;/p&gt; 
&lt;h4&gt;Workflow Management&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_create_workflow&lt;/code&gt;&lt;/strong&gt; - Create new workflows with nodes and connections&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow&lt;/code&gt;&lt;/strong&gt; - Get complete workflow by ID&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow_details&lt;/code&gt;&lt;/strong&gt; - Get workflow with execution statistics&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow_structure&lt;/code&gt;&lt;/strong&gt; - Get simplified workflow structure&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow_minimal&lt;/code&gt;&lt;/strong&gt; - Get minimal workflow info (ID, name, active status)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_update_full_workflow&lt;/code&gt;&lt;/strong&gt; - Update entire workflow (complete replacement)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_update_partial_workflow&lt;/code&gt;&lt;/strong&gt; - Update workflow using diff operations (NEW in v2.7.0!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_delete_workflow&lt;/code&gt;&lt;/strong&gt; - Delete workflows permanently&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_list_workflows&lt;/code&gt;&lt;/strong&gt; - List workflows with filtering and pagination&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_validate_workflow&lt;/code&gt;&lt;/strong&gt; - Validate workflows already in n8n by ID (NEW in v2.6.3)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_autofix_workflow&lt;/code&gt;&lt;/strong&gt; - Automatically fix common workflow errors (NEW in v2.13.0!)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Execution Management&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_trigger_webhook_workflow&lt;/code&gt;&lt;/strong&gt; - Trigger workflows via webhook URL&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_execution&lt;/code&gt;&lt;/strong&gt; - Get execution details by ID&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_list_executions&lt;/code&gt;&lt;/strong&gt; - List executions with status filtering&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_delete_execution&lt;/code&gt;&lt;/strong&gt; - Delete execution records&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;System Tools&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_health_check&lt;/code&gt;&lt;/strong&gt; - Check n8n API connectivity and features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_diagnostic&lt;/code&gt;&lt;/strong&gt; - Troubleshoot management tools visibility and configuration issues&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_list_available_tools&lt;/code&gt;&lt;/strong&gt; - List all available management tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Example Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Get essentials for quick configuration
get_node_essentials("nodes-base.httpRequest")

// Find nodes for a specific task
search_nodes({ query: "send email gmail" })

// Get pre-configured settings
get_node_for_task("send_email")

// Validate before deployment
validate_node_operation({
  nodeType: "nodes-base.httpRequest",
  config: { method: "POST", url: "..." },
  profile: "runtime" // or "minimal", "ai-friendly", "strict"
})

// Quick required field check
validate_node_minimal({
  nodeType: "nodes-base.slack",
  config: { resource: "message", operation: "send" }
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üíª Local Development Setup&lt;/h2&gt; 
&lt;p&gt;For contributors and advanced users:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; (any version - automatic fallback if needed)&lt;/li&gt; 
 &lt;li&gt;npm or yarn&lt;/li&gt; 
 &lt;li&gt;Git&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Clone the repository
git clone https://github.com/czlonkowski/n8n-mcp.git
cd n8n-mcp

# 2. Clone n8n docs (optional but recommended)
git clone https://github.com/n8n-io/n8n-docs.git ../n8n-docs

# 3. Install and build
npm install
npm run build

# 4. Initialize database
npm run rebuild

# 5. Start the server
npm start          # stdio mode for Claude Desktop
npm run start:http # HTTP mode for remote access
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Development Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Build &amp;amp; Test
npm run build          # Build TypeScript
npm run rebuild        # Rebuild node database
npm run test-nodes     # Test critical nodes
npm run validate       # Validate node data
npm test               # Run all tests

# Update Dependencies
npm run update:n8n:check  # Check for n8n updates
npm run update:n8n        # Update n8n packages

# Run Server
npm run dev            # Development with auto-reload
npm run dev:http       # HTTP dev mode
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üìö Documentation&lt;/h2&gt; 
&lt;h3&gt;Setup Guides&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/INSTALLATION.md"&gt;Installation Guide&lt;/a&gt; - Comprehensive installation instructions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/README_CLAUDE_SETUP.md"&gt;Claude Desktop Setup&lt;/a&gt; - Detailed Claude configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/DOCKER_README.md"&gt;Docker Guide&lt;/a&gt; - Advanced Docker deployment options&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/MCP_QUICK_START_GUIDE.md"&gt;MCP Quick Start&lt;/a&gt; - Get started quickly with n8n-MCP&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Feature Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/workflow-diff-examples.md"&gt;Workflow Diff Operations&lt;/a&gt; - Token-efficient workflow updates (NEW!)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/transactional-updates-example.md"&gt;Transactional Updates&lt;/a&gt; - Two-pass workflow editing&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/MCP_ESSENTIALS_README.md"&gt;MCP Essentials&lt;/a&gt; - AI-optimized tools guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/validation-improvements-v2.4.2.md"&gt;Validation System&lt;/a&gt; - Smart validation profiles&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development &amp;amp; Deployment&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/RAILWAY_DEPLOYMENT.md"&gt;Railway Deployment&lt;/a&gt; - One-click cloud deployment guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/HTTP_DEPLOYMENT.md"&gt;HTTP Deployment&lt;/a&gt; - Remote server setup guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/DEPENDENCY_UPDATES.md"&gt;Dependency Management&lt;/a&gt; - Keeping n8n packages in sync&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CLAUDE_INTERVIEW.md"&gt;Claude's Interview&lt;/a&gt; - Real-world impact of n8n-MCP&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Project Information&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/CHANGELOG.md"&gt;Change Log&lt;/a&gt; - Complete version history&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/CLAUDE.md"&gt;Claude Instructions&lt;/a&gt; - AI guidance for this codebase&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/#-available-mcp-tools"&gt;MCP Tools Reference&lt;/a&gt; - Complete list of available tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìä Metrics &amp;amp; Coverage&lt;/h2&gt; 
&lt;p&gt;Current database coverage (n8n v1.106.3):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;535/535&lt;/strong&gt; nodes loaded (100%)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;528&lt;/strong&gt; nodes with properties (98.7%)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;470&lt;/strong&gt; nodes with documentation (88%)&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;267&lt;/strong&gt; AI-capable tools detected&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;AI Agent &amp;amp; LangChain nodes&lt;/strong&gt; fully documented&lt;/li&gt; 
 &lt;li&gt;‚ö° &lt;strong&gt;Average response time&lt;/strong&gt;: ~12ms&lt;/li&gt; 
 &lt;li&gt;üíæ &lt;strong&gt;Database size&lt;/strong&gt;: ~15MB (optimized)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîÑ Recent Updates&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt; for full version history and recent changes.&lt;/p&gt; 
&lt;h2&gt;‚ö†Ô∏è Known Issues&lt;/h2&gt; 
&lt;h3&gt;Claude Desktop Container Management&lt;/h3&gt; 
&lt;h4&gt;Container Accumulation (Fixed in v2.7.20+)&lt;/h4&gt; 
&lt;p&gt;Previous versions had an issue where containers would not properly clean up when Claude Desktop sessions ended. This has been fixed in v2.7.20+ with proper signal handling.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For best container lifecycle management:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Use the --init flag&lt;/strong&gt; (recommended) - Docker's init system ensures proper signal handling:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run", "-i", "--rm", "--init",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Ensure you're using v2.7.20 or later&lt;/strong&gt; - Check your version:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm ghcr.io/czlonkowski/n8n-mcp:latest --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üß™ Testing&lt;/h2&gt; 
&lt;p&gt;The project includes a comprehensive test suite with &lt;strong&gt;2,883 tests&lt;/strong&gt; ensuring code quality and reliability:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run all tests
npm test

# Run tests with coverage report
npm run test:coverage

# Run tests in watch mode
npm run test:watch

# Run specific test suites
npm run test:unit           # 933 unit tests
npm run test:integration    # 249 integration tests
npm run test:bench          # Performance benchmarks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Test Suite Overview&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Total Tests&lt;/strong&gt;: 2,883 (100% passing) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Unit Tests&lt;/strong&gt;: 2,526 tests across 99 files&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Integration Tests&lt;/strong&gt;: 357 tests across 20 files&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Execution Time&lt;/strong&gt;: ~2.5 minutes in CI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Test Framework&lt;/strong&gt;: Vitest (for speed and TypeScript support)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mocking&lt;/strong&gt;: MSW for API mocking, custom mocks for databases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Coverage &amp;amp; Quality&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Coverage Reports&lt;/strong&gt;: Generated in &lt;code&gt;./coverage&lt;/code&gt; directory&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CI/CD&lt;/strong&gt;: Automated testing on all PRs with GitHub Actions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Environment-aware thresholds for CI vs local&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Parallel Execution&lt;/strong&gt;: Configurable thread pool for faster runs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Testing Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unit Tests&lt;/strong&gt;: Isolated component testing with mocks&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Services layer: ~450 tests&lt;/li&gt; 
   &lt;li&gt;Parsers: ~200 tests&lt;/li&gt; 
   &lt;li&gt;Database repositories: ~100 tests&lt;/li&gt; 
   &lt;li&gt;MCP tools: ~180 tests&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Integration Tests&lt;/strong&gt;: Full system behavior validation&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;MCP Protocol compliance: 72 tests&lt;/li&gt; 
   &lt;li&gt;Database operations: 89 tests&lt;/li&gt; 
   &lt;li&gt;Error handling: 44 tests&lt;/li&gt; 
   &lt;li&gt;Performance: 44 tests&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Benchmarks&lt;/strong&gt;: Performance testing for critical paths&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Database queries&lt;/li&gt; 
   &lt;li&gt;Node loading&lt;/li&gt; 
   &lt;li&gt;Search operations&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For detailed testing documentation, see &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/testing-architecture.md"&gt;Testing Architecture&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üì¶ License&lt;/h2&gt; 
&lt;p&gt;MIT License - see &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Attribution appreciated!&lt;/strong&gt; If you use n8n-MCP, consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚≠ê Starring this repository&lt;/li&gt; 
 &lt;li&gt;üí¨ Mentioning it in your project&lt;/li&gt; 
 &lt;li&gt;üîó Linking back to this repo&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Please:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create a feature branch&lt;/li&gt; 
 &lt;li&gt;Run tests (&lt;code&gt;npm test&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Submit a pull request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;üöÄ For Maintainers: Automated Releases&lt;/h3&gt; 
&lt;p&gt;This project uses automated releases triggered by version changes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Guided release preparation
npm run prepare:release

# Test release automation
npm run test:release-automation
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The system automatically handles:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üè∑Ô∏è GitHub releases with changelog content&lt;/li&gt; 
 &lt;li&gt;üì¶ NPM package publishing&lt;/li&gt; 
 &lt;li&gt;üê≥ Multi-platform Docker images&lt;/li&gt; 
 &lt;li&gt;üìö Documentation updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/AUTOMATED_RELEASES.md"&gt;Automated Release Guide&lt;/a&gt; for complete details.&lt;/p&gt; 
&lt;h2&gt;üëè Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://n8n.io"&gt;n8n&lt;/a&gt; team for the workflow automation platform&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://anthropic.com"&gt;Anthropic&lt;/a&gt; for the Model Context Protocol&lt;/li&gt; 
 &lt;li&gt;All contributors and users of this project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Template Attribution&lt;/h3&gt; 
&lt;p&gt;All workflow templates in this project are fetched from n8n's public template gallery at &lt;a href="https://n8n.io/workflows"&gt;n8n.io/workflows&lt;/a&gt;. Each template includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full attribution to the original creator (name and username)&lt;/li&gt; 
 &lt;li&gt;Direct link to the source template on n8n.io&lt;/li&gt; 
 &lt;li&gt;Original workflow ID for reference&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The AI agent instructions in this project contain mandatory attribution requirements. When using any template, the AI will automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Share the template author's name and username&lt;/li&gt; 
 &lt;li&gt;Provide a direct link to the original template on n8n.io&lt;/li&gt; 
 &lt;li&gt;Display attribution in the format: "This workflow is based on a template by &lt;strong&gt;[author]&lt;/strong&gt; (@[username]). View the original at: [url]"&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Template creators retain all rights to their workflows. This project indexes templates to improve discoverability through AI assistants. If you're a template creator and have concerns about your template being indexed, please open an issue.&lt;/p&gt; 
&lt;p&gt;Special thanks to the prolific template contributors whose work helps thousands of users automate their workflows, including: &lt;strong&gt;David Ashby&lt;/strong&gt; (@cfomodz), &lt;strong&gt;Yaron Been&lt;/strong&gt; (@yaron-nofluff), &lt;strong&gt;Jimleuk&lt;/strong&gt; (@jimleuk), &lt;strong&gt;Davide&lt;/strong&gt; (@n3witalia), &lt;strong&gt;David Olusola&lt;/strong&gt; (@dae221), &lt;strong&gt;Ranjan Dailata&lt;/strong&gt; (@ranjancse), &lt;strong&gt;Airtop&lt;/strong&gt; (@cesar-at-airtop), &lt;strong&gt;Joseph LePage&lt;/strong&gt; (@joe), &lt;strong&gt;Don Jayamaha Jr&lt;/strong&gt; (@don-the-gem-dealer), &lt;strong&gt;Angel Menendez&lt;/strong&gt; (@djangelic), and the entire n8n community of creators!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt;Built with ‚ù§Ô∏è for the n8n community&lt;/strong&gt;
 &lt;br /&gt; 
 &lt;sub&gt;Making AI + n8n workflow creation delightful&lt;/sub&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>n8n-io/n8n</title>
      <link>https://github.com/n8n-io/n8n</link>
      <description>&lt;p&gt;Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/10284570/173569848-c624317f-42b1-45a6-ab09-f0ea3c247648.png" alt="Banner image" /&gt;&lt;/p&gt; 
&lt;h1&gt;n8n - Secure Workflow Automation for Technical Teams&lt;/h1&gt; 
&lt;p&gt;n8n is a workflow automation platform that gives technical teams the flexibility of code with the speed of no-code. With 400+ integrations, native AI capabilities, and a fair-code license, n8n lets you build powerful automations while maintaining full control over your data and deployments.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/n8n-io/n8n/master/assets/n8n-screenshot-readme.png" alt="n8n.io - Screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Key Capabilities&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code When You Need It&lt;/strong&gt;: Write JavaScript/Python, add npm packages, or use the visual interface&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI-Native Platform&lt;/strong&gt;: Build AI agent workflows based on LangChain with your own data and models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full Control&lt;/strong&gt;: Self-host with our fair-code license or use our &lt;a href="https://app.n8n.cloud/login"&gt;cloud offering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise-Ready&lt;/strong&gt;: Advanced permissions, SSO, and air-gapped deployments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Active Community&lt;/strong&gt;: 400+ integrations and 900+ ready-to-use &lt;a href="https://n8n.io/workflows"&gt;templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Try n8n instantly with &lt;a href="https://docs.n8n.io/hosting/installation/npm/"&gt;npx&lt;/a&gt; (requires &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx n8n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or deploy with &lt;a href="https://docs.n8n.io/hosting/installation/docker/"&gt;Docker&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker volume create n8n_data
docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Access the editor at &lt;a href="http://localhost:5678"&gt;http://localhost:5678&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìö &lt;a href="https://docs.n8n.io"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üîß &lt;a href="https://n8n.io/integrations"&gt;400+ Integrations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üí° &lt;a href="https://n8n.io/workflows"&gt;Example Workflows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ü§ñ &lt;a href="https://docs.n8n.io/langchain/"&gt;AI &amp;amp; LangChain Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üë• &lt;a href="https://community.n8n.io"&gt;Community Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üìñ &lt;a href="https://community.n8n.io/c/tutorials/28"&gt;Community Tutorials&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Need help? Our community forum is the place to get support and connect with other users: &lt;a href="https://community.n8n.io"&gt;community.n8n.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;n8n is &lt;a href="https://faircode.io"&gt;fair-code&lt;/a&gt; distributed under the &lt;a href="https://github.com/n8n-io/n8n/raw/master/LICENSE.md"&gt;Sustainable Use License&lt;/a&gt; and &lt;a href="https://github.com/n8n-io/n8n/raw/master/LICENSE_EE.md"&gt;n8n Enterprise License&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Source Available&lt;/strong&gt;: Always visible source code&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-Hostable&lt;/strong&gt;: Deploy anywhere&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: Add your own nodes and functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="mailto:license@n8n.io"&gt;Enterprise licenses&lt;/a&gt; available for additional features and support.&lt;/p&gt; 
&lt;p&gt;Additional information about the license model can be found in the &lt;a href="https://docs.n8n.io/reference/license/"&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Found a bug üêõ or have a feature idea ‚ú®? Check our &lt;a href="https://github.com/n8n-io/n8n/raw/master/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Join the Team&lt;/h2&gt; 
&lt;p&gt;Want to shape the future of automation? Check out our &lt;a href="https://n8n.io/careers"&gt;job posts&lt;/a&gt; and join our team!&lt;/p&gt; 
&lt;h2&gt;What does n8n mean?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Short answer:&lt;/strong&gt; It means "nodemation" and is pronounced as n-eight-n.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Long answer:&lt;/strong&gt; "I get that question quite often (more often than I expected) so I decided it is probably best to answer it here. While looking for a good name for the project with a free domain I realized very quickly that all the good ones I could think of were already taken. So, in the end, I chose nodemation. 'node-' in the sense that it uses a Node-View and that it uses Node.js and '-mation' for 'automation' which is what the project is supposed to help with. However, I did not like how long the name was and I could not imagine writing something that long every time in the CLI. That is when I then ended up on 'n8n'." - &lt;strong&gt;Jan Oberhauser, Founder and CEO, n8n.io&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vuejs/vue</title>
      <link>https://github.com/vuejs/vue</link>
      <description>&lt;p&gt;This is the repo for Vue 2. For Vue 3, go to https://github.com/vuejs/core&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Vue 2 has reached End of Life&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;You are looking at the now inactive repository for Vue 2. The actively maintained repository for the latest version of Vue is &lt;a href="https://github.com/vuejs/core"&gt;vuejs/core&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Vue has reached End of Life on December 31st, 2023. It no longer receives new features, updates, or fixes. However, it is still available on all existing distribution channels (CDNs, package managers, Github, etc).&lt;/p&gt; 
&lt;p&gt;If you are starting a new project, please start with the latest version of Vue (3.x). We also strongly recommend current Vue 2 users to upgrade (&lt;a href="https://v3-migration.vuejs.org/"&gt;guide&lt;/a&gt;), but we also acknowledge that not all users have the bandwidth or incentive to do so. If you have to stay on Vue 2 but also have compliance or security requirements about unmaintained software, check out &lt;a href="https://www.herodevs.com/support/nes-vue?utm_source=vuejs-github&amp;amp;utm_medium=vue2-readme"&gt;Vue 2 NES&lt;/a&gt;.&lt;/p&gt; 
&lt;p align="center"&gt;&lt;a href="https://vuejs.org" target="_blank" rel="noopener noreferrer"&gt;&lt;img width="100" src="https://vuejs.org/images/logo.png" alt="Vue logo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://circleci.com/gh/vuejs/vue/tree/dev"&gt;&lt;img src="https://img.shields.io/circleci/project/github/vuejs/vue/dev.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/github/vuejs/vue?branch=dev"&gt;&lt;img src="https://img.shields.io/codecov/c/github/vuejs/vue/dev.svg?sanitize=true" alt="Coverage Status" /&gt;&lt;/a&gt; &lt;a href="https://npmcharts.com/compare/vue?minimal=true"&gt;&lt;img src="https://img.shields.io/npm/dm/vue.svg?sanitize=true" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/vue"&gt;&lt;img src="https://img.shields.io/npm/v/vue.svg?sanitize=true" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/vue"&gt;&lt;img src="https://img.shields.io/npm/l/vue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://chat.vuejs.org/"&gt;&lt;img src="https://img.shields.io/badge/chat-on%20discord-7289da.svg?sanitize=true" alt="Chat" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Vue.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome &lt;a href="https://github.com/vuejs/core/raw/main/BACKERS.md"&gt;backers&lt;/a&gt;. If you'd like to join them, please consider &lt;a href="https://vuejs.org/sponsor/"&gt; sponsor Vue's development&lt;/a&gt;.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h3 align="center"&gt;Special Sponsor&lt;/h3&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a target="_blank" href="https://github.com/appwrite/appwrite"&gt; &lt;img alt="special sponsor appwrite" src="https://sponsors.vuejs.org/images/appwrite.svg?sanitize=true" width="300" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a target="_blank" href="https://vuejs.org/sponsor/"&gt; &lt;img alt="sponsors" src="https://sponsors.vuejs.org/sponsors.svg?v3" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Vue (pronounced &lt;code&gt;/vjuÀê/&lt;/code&gt;, like view) is a &lt;strong&gt;progressive framework&lt;/strong&gt; for building user interfaces. It is designed from the ground up to be incrementally adoptable, and can easily scale between a library and a framework depending on different use cases. It consists of an approachable core library that focuses on the view layer only, and an ecosystem of supporting libraries that helps you tackle complexity in large Single-Page Applications.&lt;/p&gt; 
&lt;h4&gt;Browser Compatibility&lt;/h4&gt; 
&lt;p&gt;Vue.js supports all browsers that are &lt;a href="https://compat-table.github.io/compat-table/es5/"&gt;ES5-compliant&lt;/a&gt; (IE8 and below are not supported).&lt;/p&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Project&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vuejs/vue-router"&gt;vue-router&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://npmjs.com/package/vue-router"&gt;&lt;img src="https://img.shields.io/npm/v/vue-router.svg?sanitize=true" alt="vue-router-status" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Single-page application routing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vuejs/vuex"&gt;vuex&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://npmjs.com/package/vuex"&gt;&lt;img src="https://img.shields.io/npm/v/vuex.svg?sanitize=true" alt="vuex-status" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Large-scale state management&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vuejs/vue-cli"&gt;vue-cli&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://npmjs.com/package/@vue/cli"&gt;&lt;img src="https://img.shields.io/npm/v/@vue/cli.svg?sanitize=true" alt="vue-cli-status" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Project scaffolding&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vuejs/vue-loader"&gt;vue-loader&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://npmjs.com/package/vue-loader"&gt;&lt;img src="https://img.shields.io/npm/v/vue-loader.svg?sanitize=true" alt="vue-loader-status" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Single File Component (&lt;code&gt;*.vue&lt;/code&gt; file) loader for webpack&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vuejs/vue/tree/dev/packages/vue-server-renderer"&gt;vue-server-renderer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://npmjs.com/package/vue-server-renderer"&gt;&lt;img src="https://img.shields.io/npm/v/vue-server-renderer.svg?sanitize=true" alt="vue-server-renderer-status" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Server-side rendering support&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vuejs/vue-class-component"&gt;vue-class-component&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://npmjs.com/package/vue-class-component"&gt;&lt;img src="https://img.shields.io/npm/v/vue-class-component.svg?sanitize=true" alt="vue-class-component-status" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;TypeScript decorator for a class-based API&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vuejs/vue-rx"&gt;vue-rx&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://npmjs.com/package/vue-rx"&gt;&lt;img src="https://img.shields.io/npm/v/vue-rx.svg?sanitize=true" alt="vue-rx-status" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;RxJS integration&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vuejs/vue-devtools"&gt;vue-devtools&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd"&gt;&lt;img src="https://img.shields.io/chrome-web-store/v/nhdogjmejiglipccpnnnanhbledajbpd.svg?sanitize=true" alt="vue-devtools-status" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Browser DevTools extension&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To check out &lt;a href="https://v2.vuejs.org/v2/examples/"&gt;live examples&lt;/a&gt; and docs, visit &lt;a href="https://v2.vuejs.org"&gt;vuejs.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;p&gt;For questions and support please use &lt;a href="https://forum.vuejs.org"&gt;the official forum&lt;/a&gt; or &lt;a href="https://chat.vuejs.org/"&gt;community chat&lt;/a&gt;. The issue list of this repo is &lt;strong&gt;exclusively&lt;/strong&gt; for bug reports and feature requests.&lt;/p&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href="https://github.com/vuejs/vue/raw/dev/.github/CONTRIBUTING.md#issue-reporting-guidelines"&gt;Issue Reporting Checklist&lt;/a&gt; before opening an issue. Issues not conforming to the guidelines may be closed immediately.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;Detailed changes for each release are documented in the &lt;a href="https://github.com/vuejs/vue/releases"&gt;release notes&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Stay In Touch&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/vuejs"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/the-vue-point"&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vuejobs.com/?ref=vuejs"&gt;Job Board&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href="https://github.com/vuejs/vue/raw/dev/.github/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; before making a pull request. If you have a Vue-related project/component/tool, add it with a pull request to &lt;a href="https://github.com/vuejs/awesome-vue"&gt;this curated list&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Thank you to all the people who already contributed to Vue!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/vuejs/vue/graphs/contributors"&gt;&lt;img src="https://opencollective.com/vuejs/contributors.svg?width=890" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/MIT"&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2013-present, Yuxi (Evan) You&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>humanlayer/humanlayer</title>
      <link>https://github.com/humanlayer/humanlayer</link>
      <description>&lt;p&gt;The best way to get AI coding agents to solve hard problems in complex codebases.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/humanlayer/humanlayer/main/docs/images/wordmark-light.svg?sanitize=true" alt="Wordmark Logo of HumanLayer" /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h2&gt;The best way to get Coding Agents to solve hard problems in complex codebases&lt;/h2&gt; 
 &lt;p&gt;&lt;strong&gt;CodeLayer is an open source IDE that lets you orchestrate AI coding agents.&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;It comes with battle-tested workflows that enable AI to solve hard problems in large, complex codebases.&lt;/p&gt; 
 &lt;p&gt;Built on Claude Code. Open source. Scale from your laptop to your entire team.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/humanlayer/humanlayer"&gt;&lt;img src="https://img.shields.io/github/stars/humanlayer/humanlayer" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/Apache-2"&gt;&lt;img src="https://img.shields.io/badge/License-Apache-green.svg?sanitize=true" alt="License: Apache-2" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h3&gt; &lt;p&gt;&lt;a href="https://humanlayer.dev/code"&gt;Join Waitlist&lt;/a&gt; | &lt;a href="https://humanlayer.dev/discord"&gt;Discord&lt;/a&gt;&lt;/p&gt; &lt;/h3&gt; 
 &lt;img referrerpolicy="no-referrer-when-downgrade" src="https://static.scarf.sh/a.png?x-pxid=fcfc0926-d841-47fb-b8a6-6aba3a6c3228" /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"Our entire company is using CodeLayer now. We're shipping one banger PR after the other. It is so f-ing good. Unbelievable dude."&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;‚Äì Ren√© Brandel, Founder @ Casco (YC X25)&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Superhuman for Claude Code&lt;/strong&gt; - Keyboard-first workflows designed for builders who value speed and control.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Advanced Context Engineering&lt;/strong&gt; - Scale AI-first dev to your entire team, without devolving into a chaotic slop-fest.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;M U L T I C L A U D E&lt;/strong&gt; - Run Claude Code sessions in parallel. Worktrees? Done. Remote cloud workers? You got it.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"This has improved my productivity (and token consumption) by at least 50%. Taking a superhuman style approach just makes soo much sense. Also, its so freaking cool to look back at all the work you've done in a day."&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;‚Äì Tyler Brown, Founder @ Revlo.ai&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;From the team that brought you "Context Engineering"&lt;/h2&gt; 
&lt;p&gt;Leading experts on getting the most out of today's models.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://github.com/humanlayer/humanlayer"&gt;Advanced Context Engineering for Coding Agents&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;This talk, given at YC on August 20th, 2025 lays out the groundwork for using AI to solve hard problems in complex codebases.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/humanlayer"&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://humanlayer.dev/youtube"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;a href="https://github.com/humanlayer/humanlayer"&gt;12 Factor Agents&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;A set of principles for building reliable and scalable LLM applications, inspired by the original 12-Factor App methodology.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/humanlayer"&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://humanlayer.dev/youtube"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The original repo that coined the term "context engineering" back in April 2025.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://humanlayer.dev/podcast"&gt;ü¶Ñ AI That Works&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;A weekly conversation about how we can all get the most juice out of todays models with @hellovai &amp;amp; @dexhorthy&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/humanlayer"&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://humanlayer.dev/podcast"&gt;Podcast&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;For Teams&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Invest in outcomes, not tools.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Want to scale AI-first development to your entire org? Get tailored workflows, custom integrations, and cutting-edge advice.&lt;/p&gt; 
&lt;p&gt;HumanLayer's expert engineers will ship in the trenches with you and your team until everyone is a 100x engineer.&lt;/p&gt; 
&lt;p&gt;üìß Shoot us an email at &lt;strong&gt;&lt;a href="mailto:contact@humanlayer.dev"&gt;contact@humanlayer.dev&lt;/a&gt;&lt;/strong&gt;, mention your team size and current AI development stack.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Coming soon - join the waitlist for early access
npx humanlayer join-waitlist --email ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Legacy Documentation&lt;/h2&gt; 
&lt;p&gt;Looking for the HumanLayer SDK documentation? See &lt;a href="https://raw.githubusercontent.com/humanlayer/humanlayer/main/humanlayer.md"&gt;humanlayer.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;CodeLayer and the HumanLayer SDK are open-source and we welcome contributions in the form of issues, documentation, pull requests, and more. See &lt;a href="https://raw.githubusercontent.com/humanlayer/humanlayer/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The HumanLayer SDK and CodeLayer sources in this repo are licensed under the Apache 2 License.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://star-history.com/#humanlayer/humanlayer&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=humanlayer/humanlayer&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>langgenius/dify</title>
      <link>https://github.com/langgenius/dify</link>
      <description>&lt;p&gt;Production-ready platform for agentic workflow development.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/langgenius/dify/main/images/GitHub_README_if.png" alt="cover-v5-optimized" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; üìå &lt;a href="https://dify.ai/blog/introducing-dify-workflow-file-upload-a-demo-on-ai-podcast"&gt;Introducing Dify Workflow File Upload: Recreate Google NotebookLM Podcast&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://cloud.dify.ai"&gt;Dify Cloud&lt;/a&gt; ¬∑ &lt;a href="https://docs.dify.ai/getting-started/install-self-hosted"&gt;Self-hosting&lt;/a&gt; ¬∑ &lt;a href="https://docs.dify.ai"&gt;Documentation&lt;/a&gt; ¬∑ &lt;a href="https://dify.ai/pricing"&gt;Dify edition overview&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://dify.ai" target="_blank"&gt; &lt;img alt="Static Badge" src="https://img.shields.io/badge/Product-F04438" /&gt;&lt;/a&gt; &lt;a href="https://dify.ai/pricing" target="_blank"&gt; &lt;img alt="Static Badge" src="https://img.shields.io/badge/free-pricing?logo=free&amp;amp;color=%20%23155EEF&amp;amp;label=pricing&amp;amp;labelColor=%20%23528bff" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/FngNHpbcY7" target="_blank"&gt; &lt;img src="https://img.shields.io/discord/1082486657678311454?logo=discord&amp;amp;labelColor=%20%235462eb&amp;amp;logoColor=%20%23f5f5f5&amp;amp;color=%20%235462eb" alt="chat on Discord" /&gt;&lt;/a&gt; &lt;a href="https://reddit.com/r/difyai" target="_blank"&gt; &lt;img src="https://img.shields.io/reddit/subreddit-subscribers/difyai?style=plastic&amp;amp;logo=reddit&amp;amp;label=r%2Fdifyai&amp;amp;labelColor=white" alt="join Reddit" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=dify_ai" target="_blank"&gt; &lt;img src="https://img.shields.io/twitter/follow/dify_ai?logo=X&amp;amp;color=%20%23f5f5f5" alt="follow on X(Twitter)" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/langgenius/" target="_blank"&gt; &lt;img src="https://custom-icon-badges.demolab.com/badge/LinkedIn-0A66C2?logo=linkedin-white&amp;amp;logoColor=fff" alt="follow on LinkedIn" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/u/langgenius" target="_blank"&gt; &lt;img alt="Docker Pulls" src="https://img.shields.io/docker/pulls/langgenius/dify-web?labelColor=%20%23FDB062&amp;amp;color=%20%23f79009" /&gt;&lt;/a&gt; &lt;a href="https://github.com/langgenius/dify/graphs/commit-activity" target="_blank"&gt; &lt;img alt="Commits last month" src="https://img.shields.io/github/commit-activity/m/langgenius/dify?labelColor=%20%2332b583&amp;amp;color=%20%2312b76a" /&gt;&lt;/a&gt; &lt;a href="https://github.com/langgenius/dify/" target="_blank"&gt; &lt;img alt="Issues closed" src="https://img.shields.io/github/issues-search?query=repo%3Alanggenius%2Fdify%20is%3Aclosed&amp;amp;label=issues%20closed&amp;amp;labelColor=%20%237d89b0&amp;amp;color=%20%235d6b98" /&gt;&lt;/a&gt; &lt;a href="https://github.com/langgenius/dify/discussions/" target="_blank"&gt; &lt;img alt="Discussion posts" src="https://img.shields.io/github/discussions/langgenius/dify?labelColor=%20%239b8afb&amp;amp;color=%20%237a5af8" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README.md"&gt;&lt;img alt="README in English" src="https://img.shields.io/badge/English-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README/README_TW.md"&gt;&lt;img alt="ÁπÅÈ´î‰∏≠ÊñáÊñá‰ª∂" src="https://img.shields.io/badge/ÁπÅÈ´î‰∏≠Êñá-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README/README_CN.md"&gt;&lt;img alt="ÁÆÄ‰Ωì‰∏≠ÊñáÁâàËá™Ëø∞Êñá‰ª∂" src="https://img.shields.io/badge/ÁÆÄ‰Ωì‰∏≠Êñá-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README/README_JA.md"&gt;&lt;img alt="Êó•Êú¨Ë™û„ÅÆREADME" src="https://img.shields.io/badge/Êó•Êú¨Ë™û-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README/README_ES.md"&gt;&lt;img alt="README en Espa√±ol" src="https://img.shields.io/badge/Espa√±ol-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README/README_FR.md"&gt;&lt;img alt="README en Fran√ßais" src="https://img.shields.io/badge/Fran√ßais-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README/README_KL.md"&gt;&lt;img alt="README tlhIngan Hol" src="https://img.shields.io/badge/Klingon-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README/README_KR.md"&gt;&lt;img alt="README in Korean" src="https://img.shields.io/badge/ÌïúÍµ≠Ïñ¥-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README/README_AR.md"&gt;&lt;img alt="README ÿ®ÿßŸÑÿπÿ±ÿ®Ÿäÿ©" src="https://img.shields.io/badge/ÿßŸÑÿπÿ±ÿ®Ÿäÿ©-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README/README_TR.md"&gt;&lt;img alt="T√ºrk√ße README" src="https://img.shields.io/badge/T√ºrk√ße-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README/README_VI.md"&gt;&lt;img alt="README Ti·∫øng Vi·ªát" src="https://img.shields.io/badge/Ti%E1%BA%BFng%20Vi%E1%BB%87t-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README/README_DE.md"&gt;&lt;img alt="README in Deutsch" src="https://img.shields.io/badge/German-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README/README_BN.md"&gt;&lt;img alt="README in ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ" src="https://img.shields.io/badge/‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ-d9d9d9" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Dify is an open-source platform for developing LLM applications. Its intuitive interface combines agentic AI workflows, RAG pipelines, agent capabilities, model management, observability features, and more‚Äîallowing you to quickly move from prototype to production.&lt;/p&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Before installing Dify, make sure your machine meets the following minimum system requirements:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;CPU &amp;gt;= 2 Core&lt;/li&gt; 
  &lt;li&gt;RAM &amp;gt;= 4 GiB&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;p&gt;The easiest way to start the Dify server is through &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/docker/docker-compose.yaml"&gt;Docker Compose&lt;/a&gt;. Before running Dify with the following commands, make sure that &lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt; and &lt;a href="https://docs.docker.com/compose/install/"&gt;Docker Compose&lt;/a&gt; are installed on your machine:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd dify
cd docker
cp .env.example .env
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After running, you can access the Dify dashboard in your browser at &lt;a href="http://localhost/install"&gt;http://localhost/install&lt;/a&gt; and start the initialization process.&lt;/p&gt; 
&lt;h4&gt;Seeking help&lt;/h4&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://docs.dify.ai/getting-started/install-self-hosted/faqs"&gt;FAQ&lt;/a&gt; if you encounter problems setting up Dify. Reach out to &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/#community--contact"&gt;the community and us&lt;/a&gt; if you are still having issues.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you'd like to contribute to Dify or do additional development, refer to our &lt;a href="https://docs.dify.ai/getting-started/install-self-hosted/local-source-code"&gt;guide to deploying from source code&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Key features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1. Workflow&lt;/strong&gt;: Build and test powerful AI workflows on a visual canvas, leveraging all the following features and beyond.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. Comprehensive model support&lt;/strong&gt;: Seamless integration with hundreds of proprietary / open-source LLMs from dozens of inference providers and self-hosted solutions, covering GPT, Mistral, Llama3, and any OpenAI API-compatible models. A full list of supported model providers can be found &lt;a href="https://docs.dify.ai/getting-started/readme/model-providers"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/langgenius/dify/assets/13230914/5a17bdbe-097a-4100-8363-40255b70f6e3" alt="providers-v5" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. Prompt IDE&lt;/strong&gt;: Intuitive interface for crafting prompts, comparing model performance, and adding additional features such as text-to-speech to a chat-based app.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4. RAG Pipeline&lt;/strong&gt;: Extensive RAG capabilities that cover everything from document ingestion to retrieval, with out-of-box support for text extraction from PDFs, PPTs, and other common document formats.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;5. Agent capabilities&lt;/strong&gt;: You can define agents based on LLM Function Calling or ReAct, and add pre-built or custom tools for the agent. Dify provides 50+ built-in tools for AI agents, such as Google Search, DALL¬∑E, Stable Diffusion and WolframAlpha.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;6. LLMOps&lt;/strong&gt;: Monitor and analyze application logs and performance over time. You could continuously improve prompts, datasets, and models based on production data and annotations.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;7. Backend-as-a-Service&lt;/strong&gt;: All of Dify's offerings come with corresponding APIs, so you could effortlessly integrate Dify into your own business logic.&lt;/p&gt; 
&lt;h2&gt;Using Dify&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cloud &lt;br /&gt;&lt;/strong&gt; We host a &lt;a href="https://dify.ai"&gt;Dify Cloud&lt;/a&gt; service for anyone to try with zero setup. It provides all the capabilities of the self-deployed version, and includes 200 free GPT-4 calls in the sandbox plan.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Self-hosting Dify Community Edition&lt;br /&gt;&lt;/strong&gt; Quickly get Dify running in your environment with this &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/#quick-start"&gt;starter guide&lt;/a&gt;. Use our &lt;a href="https://docs.dify.ai"&gt;documentation&lt;/a&gt; for further references and more in-depth instructions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dify for enterprise / organizations&lt;br /&gt;&lt;/strong&gt; We provide additional enterprise-centric features. &lt;a href="https://udify.app/chat/22L1zSxg6yW1cWQg"&gt;Log your questions for us through this chatbot&lt;/a&gt; or &lt;a href="mailto:business@dify.ai?subject=%5BGitHub%5DBusiness%20License%20Inquiry"&gt;send us an email&lt;/a&gt; to discuss enterprise needs. &lt;br /&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;For startups and small businesses using AWS, check out &lt;a href="https://aws.amazon.com/marketplace/pp/prodview-t22mebxzwjhu6"&gt;Dify Premium on AWS Marketplace&lt;/a&gt; and deploy it to your own AWS VPC with one click. It's an affordable AMI offering with the option to create apps with custom logo and branding.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Staying ahead&lt;/h2&gt; 
&lt;p&gt;Star Dify on GitHub and be instantly notified of new releases.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/langgenius/dify/assets/13230914/b823edc1-6388-4e25-ad45-2f6b187adbb4" alt="star-us" /&gt;&lt;/p&gt; 
&lt;h2&gt;Advanced Setup&lt;/h2&gt; 
&lt;p&gt;If you need to customize the configuration, please refer to the comments in our &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/docker/.env.example"&gt;.env.example&lt;/a&gt; file and update the corresponding values in your &lt;code&gt;.env&lt;/code&gt; file. Additionally, you might need to make adjustments to the &lt;code&gt;docker-compose.yaml&lt;/code&gt; file itself, such as changing image versions, port mappings, or volume mounts, based on your specific deployment environment and requirements. After making any changes, please re-run &lt;code&gt;docker-compose up -d&lt;/code&gt;. You can find the full list of available environment variables &lt;a href="https://docs.dify.ai/getting-started/install-self-hosted/environments"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you'd like to configure a highly-available setup, there are community-contributed &lt;a href="https://helm.sh/"&gt;Helm Charts&lt;/a&gt; and YAML files which allow Dify to be deployed on Kubernetes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/douban/charts/tree/master/charts/dify"&gt;Helm Chart by @LeoQuote&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BorisPolonsky/dify-helm"&gt;Helm Chart by @BorisPolonsky&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/magicsong/ai-charts"&gt;Helm Chart by @magicsong&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Winson-030/dify-kubernetes"&gt;YAML file by @Winson-030&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wyy-holding/dify-k8s"&gt;YAML file by @wyy-holding&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Zhoneym/DifyAI-Kubernetes"&gt;üöÄ NEW! YAML files (Supports Dify v1.6.0) by @Zhoneym&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Using Terraform for Deployment&lt;/h4&gt; 
&lt;p&gt;Deploy Dify to Cloud Platform with a single click using &lt;a href="https://www.terraform.io/"&gt;terraform&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;Azure Global&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikawang/dify-azure-terraform"&gt;Azure Terraform by @nikawang&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Google Cloud&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DeNA/dify-google-cloud-terraform"&gt;Google Cloud Terraform by @sotazum&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Using AWS CDK for Deployment&lt;/h4&gt; 
&lt;p&gt;Deploy Dify to AWS with &lt;a href="https://aws.amazon.com/cdk/"&gt;CDK&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;AWS&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/solution-for-deploying-dify-on-aws"&gt;AWS CDK by @KevinZhao (EKS based)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/dify-self-hosted-on-aws"&gt;AWS CDK by @tmokmss (ECS based)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Using Alibaba Cloud Computing Nest&lt;/h4&gt; 
&lt;p&gt;Quickly deploy Dify to Alibaba cloud with &lt;a href="https://computenest.console.aliyun.com/service/instance/create/default?type=user&amp;amp;ServiceName=Dify%E7%A4%BE%E5%8C%BA%E7%89%88"&gt;Alibaba Cloud Computing Nest&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Using Alibaba Cloud Data Management&lt;/h4&gt; 
&lt;p&gt;One-Click deploy Dify to Alibaba Cloud with &lt;a href="https://www.alibabacloud.com/help/en/dms/dify-in-invitational-preview/"&gt;Alibaba Cloud Data Management&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Deploy to AKS with Azure Devops Pipeline&lt;/h4&gt; 
&lt;p&gt;One-Click deploy Dify to AKS with &lt;a href="https://github.com/Ruiruiz30/Dify-helm-chart-AKS"&gt;Azure Devops Pipeline Helm Chart by @LeoZhang&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;For those who'd like to contribute code, see our &lt;a href="https://github.com/langgenius/dify/raw/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;. At the same time, please consider supporting Dify by sharing it on social media and at events and conferences.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;We are looking for contributors to help translate Dify into languages other than Mandarin or English. If you are interested in helping, please see the &lt;a href="https://github.com/langgenius/dify/raw/main/web/i18n-config/README.md"&gt;i18n README&lt;/a&gt; for more information, and leave us a comment in the &lt;code&gt;global-users&lt;/code&gt; channel of our &lt;a href="https://discord.gg/8Tpq4AcN9c"&gt;Discord Community Server&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Community &amp;amp; contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langgenius/dify/discussions"&gt;GitHub Discussion&lt;/a&gt;. Best for: sharing feedback and asking questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langgenius/dify/issues"&gt;GitHub Issues&lt;/a&gt;. Best for: bugs you encounter using Dify.AI, and feature proposals. See our &lt;a href="https://github.com/langgenius/dify/raw/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/FngNHpbcY7"&gt;Discord&lt;/a&gt;. Best for: sharing your applications and hanging out with the community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/dify_ai"&gt;X(Twitter)&lt;/a&gt;. Best for: sharing your applications and hanging out with the community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Contributors&lt;/strong&gt;&lt;/p&gt; 
&lt;a href="https://github.com/langgenius/dify/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=langgenius/dify" /&gt; &lt;/a&gt; 
&lt;h2&gt;Star history&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#langgenius/dify&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=langgenius/dify&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Security disclosure&lt;/h2&gt; 
&lt;p&gt;To protect your privacy, please avoid posting security issues on GitHub. Instead, report issues to &lt;a href="mailto:security@dify.ai"&gt;security@dify.ai&lt;/a&gt;, and our team will respond with detailed answer.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository is licensed under the &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/LICENSE"&gt;Dify Open Source License&lt;/a&gt;, based on Apache 2.0 with additional conditions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CopilotKit/CopilotKit</title>
      <link>https://github.com/CopilotKit/CopilotKit</link>
      <description>&lt;p&gt;React UI + elegant infrastructure for AI Copilots, AI chatbots, and in-app AI agents. The Agentic last-mile ü™Å&lt;/p&gt;&lt;hr&gt;&lt;img width="4096" height="1588" alt="header" src="https://github.com/user-attachments/assets/dd638592-fb74-4e22-8c55-49dfc4d0e462" /&gt; 
&lt;br /&gt; 
&lt;div align="start" style="display:flex;justify-content:start;gap:16px;height:20px;margin: 0;"&gt; 
 &lt;a href="https://www.npmjs.com/package/@copilotkit/react-core" target="_blank"&gt; &lt;img src="https://img.shields.io/npm/v/%40copilotkit%2Freact-core?logo=npm&amp;amp;logoColor=%23FFFFFF&amp;amp;label=Version&amp;amp;color=%236963ff" alt="NPM" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/copilotkit/copilotkit/raw/main/LICENSE" target="_blank"&gt; &lt;img src="https://img.shields.io/github/license/copilotkit/copilotkit?color=%236963ff&amp;amp;label=License" alt="MIT" /&gt; &lt;/a&gt; 
 &lt;a href="https://discord.gg/6dffbvGU3D" target="_blank"&gt; &lt;img src="https://img.shields.io/discord/1122926057641742418?logo=discord&amp;amp;logoColor=%23FFFFFF&amp;amp;label=Discord&amp;amp;color=%236963ff" alt="Discord" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div&gt; 
 &lt;a href="https://www.producthunt.com/posts/copilotkit" target="_blank"&gt; &lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=428778&amp;amp;theme=light&amp;amp;period=daily" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;‚ö°Ô∏è Quick Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;  npx copilotkit@latest init
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://docs.copilotkit.ai/?ref=github_readme"&gt;Read the Docs ‚Üí&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://cloud.copilotkit.ai?ref=github_readme"&gt;Try Copilot Cloud ‚Üí&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://discord.gg/6dffbvGU3D?ref=github_readme"&gt;Join our Discord ‚Üí&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install: Run a simple CLI command&lt;/li&gt; 
 &lt;li&gt;Configure: Add CopilotKit provider to your app&lt;/li&gt; 
 &lt;li&gt;Customize: Use headless UI or the customizable pre-built components&lt;/li&gt; 
 &lt;li&gt;Deploy: You're done!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;br /&gt; 
&lt;a href="https://docs.copilotkit.ai/#get-started-now?ref=github_readme" target="_blank"&gt; Complete getting started guide ‚Üí &lt;/a&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;img width="4096" height="2341" alt="Best in class support across the ecosystem" src="https://github.com/user-attachments/assets/bf399131-2a92-49f8-8748-38ed72353f9c" /&gt; 
&lt;h2&gt;‚ú® Why CopilotKit?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minutes to integrate&amp;nbsp;- Get started quickly with our CLI&lt;/li&gt; 
 &lt;li&gt;Framework agnostic&amp;nbsp;- Works with React, Next.js, AGUI and more&lt;/li&gt; 
 &lt;li&gt;Production-ready UI&amp;nbsp;- Use customizable components or build with headless UI&lt;/li&gt; 
 &lt;li&gt;Built-in security&amp;nbsp;- Prompt injection protection&lt;/li&gt; 
 &lt;li&gt;Open source&amp;nbsp;- Full transparency and community-driven&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üßë‚Äçüíª Real life use cases&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;Deploy deeply-integrated AI assistants &amp;amp; agents that work alongside your users inside your applications.&lt;/span&gt;&lt;/p&gt; 
&lt;img width="4096" height="2725" alt="Headless UI" src="https://github.com/user-attachments/assets/4dbe1e74-8b46-4798-a658-f79ee5a66189" /&gt; 
&lt;h2&gt;üñ•Ô∏è Code Samples&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;Drop in these building blocks and tailor them to your needs.&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;Build with Headless APIs and Pre-Built Components&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// Headless UI with full control
const { visibleMessages, appendMessage, setMessages, ... } = useCopilotChat();

// Pre-built components with deep customization options (CSS + pass custom sub-components)
&amp;lt;CopilotPopup 
  instructions={"You are assisting the user as best as you can. Answer in the best way possible given the data you have."} 
  labels={{ title: "Popup Assistant", initial: "Need any help?" }} 
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// Frontend actions + generative UI, with full streaming support
useCopilotAction({
  name: "appendToSpreadsheet",
  description: "Append rows to the current spreadsheet",
  parameters: [
    { name: "rows", type: "object[]", attributes: [{ name: "cells", type: "object[]", attributes: [{ name: "value", type: "string" }] }] }
  ],
  render: ({ status, args }) =&amp;gt; &amp;lt;Spreadsheet data={canonicalSpreadsheetData(args.rows)} /&amp;gt;,
  handler: ({ rows }) =&amp;gt; setSpreadsheet({ ...spreadsheet, rows: [...spreadsheet.rows, ...canonicalSpreadsheetData(rows)] }),
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Integrate In-App CoAgents with LangGraph&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// Share state between app and agent
const { agentState } = useCoAgent({ 
  name: "basic_agent", 
  initialState: { input: "NYC" } 
});

// agentic generative UI
useCoAgentStateRender({
  name: "basic_agent",
  render: ({ state }) =&amp;gt; &amp;lt;WeatherDisplay {...state.final_response} /&amp;gt;,
});

// Human in the Loop (Approval)
useCopilotAction({
  name: "email_tool",
  parameters: [
    {
      name: "email_draft",
      type: "string",
      description: "The email content",
      required: true,
    },
  ],
  renderAndWaitForResponse: ({ args, status, respond }) =&amp;gt; {
    return (
      &amp;lt;EmailConfirmation
        emailContent={args.email_draft || ""}
        isExecuting={status === "executing"}
        onCancel={() =&amp;gt; respond?.({ approved: false })}
        onSend={() =&amp;gt;
          respond?.({
            approved: true,
            metadata: { sentAt: new Date().toISOString() },
          })
        }
      /&amp;gt;
    );
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// intermediate agent state streaming (supports both LangGraph.js + LangGraph python)
const modifiedConfig = copilotKitCustomizeConfig(config, {
  emitIntermediateState: [{ 
    stateKey: "outline", 
    tool: "set_outline", 
    toolArgument: "outline" 
  }],
});
const response = await ChatOpenAI({ model: "gpt-4o" }).invoke(messages, modifiedConfig);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üèÜ Featured Examples&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.copilotkit.ai/examples/form-filling-copilot"&gt; &lt;img width="290" height="304" alt="Banner 2 A" src="https://github.com/user-attachments/assets/90c42b54-8931-45ad-9c0b-53f7f67453a1" /&gt; &lt;/a&gt; &lt;a href="https://www.copilotkit.ai/examples/state-machine-copilot"&gt; &lt;img width="290" height="304" alt="Banner 2 A-1" src="https://github.com/user-attachments/assets/609c62eb-76af-4866-a353-5e3545470ec3" /&gt; &lt;/a&gt; &lt;a href="https://www.copilotkit.ai/examples/chat-with-your-data"&gt; &lt;img width="290" height="304" alt="Banner 2 A-2" src="https://github.com/user-attachments/assets/c614ac4e-d2b3-4514-9ef1-fdba04c0a082" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;üñ•Ô∏è AG-UI: The Agent‚ÄìUser Interaction Protocol&lt;/h2&gt; 
&lt;p&gt;Connect agent workflow to user-facing apps, with deep partnerships and 1st-party integrations across the agentic stack‚Äîincluding LangGraph, CrewAI, and more.&lt;/p&gt; 
&lt;a href="https://github.com/ag-ui-protocol/ag-ui" target="_blank"&gt; Learn more in the AG-UI README ‚Üí &lt;/a&gt; 
&lt;h2&gt;ü§ù Community&lt;/h2&gt; 
&lt;h3&gt;Have questions or need help?&lt;/h3&gt; 
&lt;a href="https://discord.gg/6dffbvGU3D?ref=github_readme" target="_blank"&gt; Join our Discord ‚Üí &lt;/a&gt; 
&lt;br /&gt; 
&lt;a href="https://docs.copilotkit.ai/?ref=github_readme" target="_blank"&gt; Read the Docs ‚Üí &lt;/a&gt; 
&lt;br /&gt; 
&lt;a href="https://cloud.copilotkit.ai?ref=github_readme" target="_blank"&gt; Try Copilot Cloud ‚Üí &lt;/a&gt; 
&lt;h3&gt;Stay up to date with our latest releases!&lt;/h3&gt; 
&lt;a href="https://www.linkedin.com/company/copilotkit/" target="_blank"&gt; Follow us on LinkedIn ‚Üí &lt;/a&gt; 
&lt;br /&gt; 
&lt;a href="https://x.com/copilotkit" target="_blank"&gt; Follow us on X ‚Üí &lt;/a&gt; 
&lt;h2&gt;üôãüèΩ‚Äç‚ôÇÔ∏è Contributing&lt;/h2&gt; 
&lt;p&gt;Thanks for your interest in contributing to CopilotKit! üíú&lt;/p&gt; 
&lt;p&gt;We value all contributions, whether it's through code, documentation, creating demo apps, or just spreading the word.&lt;/p&gt; 
&lt;p&gt;Here are a few useful resources to help you get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;For code contributions, &lt;a href="https://raw.githubusercontent.com/CopilotKit/CopilotKit/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For documentation-related contributions, &lt;a href="https://docs.copilotkit.ai/contributing/docs-contributions?ref=github_readme"&gt;check out the documentation contributions guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Want to contribute but not sure how? &lt;a href="https://discord.gg/6dffbvGU3D"&gt;Join our Discord&lt;/a&gt; and we'll help you out!&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìÑ License&lt;/h2&gt; 
&lt;p&gt;This repository's source code is available under the &lt;a href="https://github.com/CopilotKit/CopilotKit/raw/main/LICENSE"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>directus/directus</title>
      <link>https://github.com/directus/directus</link>
      <description>&lt;p&gt;The flexible backend for all your projects üê∞ Turn your DB into a headless CMS, admin panels, or apps with a custom UI, instant APIs, auth &amp; more.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt;&lt;img alt="Directus Logo" src="https://user-images.githubusercontent.com/522079/158864859-0fbeae62-9d7a-4619-b35e-f8fa5f68e0c8.png" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üê∞ Introduction&lt;/h2&gt; 
&lt;p&gt;Directus is a real-time API and App dashboard for managing SQL database content.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REST &amp;amp; GraphQL API.&lt;/strong&gt; Instantly layers a blazingly fast Node.js API on top of any SQL database.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Manage Pure SQL.&lt;/strong&gt; Works with new or existing SQL databases, no migration required.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Choose your Database.&lt;/strong&gt; Supports PostgreSQL, MySQL, SQLite, OracleDB, CockroachDB, MariaDB, and MS-SQL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;On-Prem or Cloud.&lt;/strong&gt; Run locally, install on-premises, or use our &lt;a href="https://directus.io/pricing"&gt;self-service Cloud service&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Completely Extensible.&lt;/strong&gt; Built to white-label, it is easy to customize our modular platform.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;A Modern Dashboard.&lt;/strong&gt; Our no-code Vue.js app is safe and intuitive for non-technical users, no training required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://directus.io"&gt;Learn more about Directus&lt;/a&gt;&lt;/strong&gt; ‚Ä¢ &lt;strong&gt;&lt;a href="https://docs.directus.io"&gt;Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;üöÄ Directus Cloud&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://directus.io/pricing"&gt;Directus Cloud&lt;/a&gt; allows you to create projects, hosted by the Directus team, from $15/month.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A self-service dashboard to create and monitor all your projects in one place.&lt;/li&gt; 
 &lt;li&gt;Everything you need: Directus, database, storage, auto-scaling, and a global CDN.&lt;/li&gt; 
 &lt;li&gt;Select your desired region and provision a new project in ~90 seconds.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://directus.cloud"&gt;Create a Directus Cloud Project&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;ü§î Community Help&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.directus.io"&gt;The Directus Documentation&lt;/a&gt; is a great place to start, or explore these other channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://community.directus.io"&gt;Community&lt;/a&gt; (Questions, Discussions)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://directus.chat"&gt;Discord&lt;/a&gt; (Live Chat)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/directus/directus/issues"&gt;GitHub Issues&lt;/a&gt; (Report Bugs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/directus/directus/discussions"&gt;GitHub Discussions&lt;/a&gt; (Feature Requests)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/directus"&gt;Twitter&lt;/a&gt; (Latest News)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/c/DirectusVideos/featured"&gt;YouTube&lt;/a&gt; (Video Tutorials)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;‚ù§Ô∏è Contributing &amp;amp; Sponsoring&lt;/h2&gt; 
&lt;p&gt;Please read our &lt;a href="https://raw.githubusercontent.com/directus/directus/main/contributing.md"&gt;Contributing Guide&lt;/a&gt; before submitting Pull Requests.&lt;/p&gt; 
&lt;p&gt;All security vulnerabilities should be reported in accordance with our &lt;a href="https://docs.directus.io/contributing/introduction/#reporting-security-vulnerabilities"&gt;Security Policy&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Directus is made possible with support from our passionate core team, talented contributors, and amazing &lt;a href="https://github.com/sponsors/directus"&gt;GitHub Sponsors&lt;/a&gt;. Thank you all!&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;üìÑ Understanding Our License&lt;/h2&gt; 
&lt;p&gt;Directus is licensed under &lt;a href="https://raw.githubusercontent.com/directus/directus/main/license"&gt;the Business Source License (BSL) 1.1&lt;/a&gt; with a permissive additional use grant. For most users, it operates just like open source! Here's what that means for you:&lt;/p&gt; 
&lt;h3&gt;Free for Most Users&lt;/h3&gt; 
&lt;p&gt;If your organization has less than $5M in annual revenue and/or funding combined, you can use Directus freely in any way you'd like. Build that side project, launch your startup, or experiment with the platform ‚Äî no strings attached.&lt;/p&gt; 
&lt;h3&gt;Enterprise Usage&lt;/h3&gt; 
&lt;p&gt;For larger organizations (&amp;gt;$5M in annual revenue/funding) using Directus in production, we require a commercial license. This model helps us maintain a sustainable balance: keeping Directus free for the majority of our community while ensuring larger organizations who benefit from the platform contribute to its continued development.&lt;/p&gt; 
&lt;h3&gt;Why This Approach?&lt;/h3&gt; 
&lt;p&gt;We believe in making powerful data tools accessible to everyone. This license lets us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Keep Directus free for individuals, startups, and smaller companies&lt;/li&gt; 
 &lt;li&gt;Maintain active development and strong support&lt;/li&gt; 
 &lt;li&gt;Continue improving the platform for everyone&lt;/li&gt; 
 &lt;li&gt;Stay sustainable as an independent project&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>nextauthjs/next-auth</title>
      <link>https://github.com/nextauthjs/next-auth</link>
      <description>&lt;p&gt;Authentication for the Web.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;br /&gt; &lt;a href="https://authjs.dev" target="_blank"&gt;&lt;img width="96px" src="https://authjs.dev/img/logo-sm.png" /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h3 align="center"&gt;Auth.js&lt;/h3&gt; 
&lt;p align="center"&gt;Authentication for the Web.&lt;/p&gt; 
&lt;p align="center"&gt;Open Source. Full Stack. Own Your Data.&lt;/p&gt; 
&lt;p align="center" style="align: center;"&gt; &lt;a href="https://x.com/authjs"&gt;&lt;img src="https://shields.io/badge/Follow @authjs-000?logo=x&amp;amp;style=flat-square" alt="X (formerly known Twitter)" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nextauthjs/next-auth/releases"&gt;&lt;img src="https://img.shields.io/npm/v/next-auth/latest?style=flat-square&amp;amp;label=latest%20stable" alt="NPM next-auth@latest release" /&gt;&lt;/a&gt; 
 &lt;!-- TODO: Should count `@auth/core` when NextAuth.js v5 is released as stable. --&gt; &lt;a href="https://www.npmtrends.com/next-auth"&gt;&lt;img src="https://img.shields.io/npm/dm/next-auth?style=flat-square&amp;amp;color=cyan" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nextauthjs/next-auth/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/nextauthjs/next-auth?style=flat-square&amp;amp;color=orange" alt="GitHub Stars" /&gt;&lt;/a&gt; 
 &lt;!-- &lt;a href="https://codecov.io/gh/nextauthjs/next-auth" &gt;&lt;img alt="Codecov" src="https://img.shields.io/codecov/c/github/nextauthjs/next-auth?token=o2KN5GrPsY&amp;style=flat-square&amp;logo=codecov"&gt;&lt;/a&gt; --&gt; &lt;img src="https://shields.io/badge/TypeScript-3178C6?logo=TypeScript&amp;amp;logoColor=fff&amp;amp;style=flat-square" alt="TypeScript" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; Auth.js is a set of open-source packages that are built on standard Web APIs for authentication in modern applications with any framework on any platform in any JS runtime. &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Auth js is now part of &lt;a href="https://better-auth.com/blog/authjs-joins-better-auth"&gt;Better Auth&lt;/a&gt;. We recommend new projects to start with Better Auth unless there are some very specific feature gaps (most notably stateless session management without a database).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Flexible and easy to use&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Designed to work with any OAuth service, it supports 2.0+, OIDC&lt;/li&gt; 
 &lt;li&gt;Built-in support for &lt;a href="https://github.com/nextauthjs/next-auth/tree/main/packages/core/src/providers"&gt;many popular sign-in services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Email/Passwordless authentication&lt;/li&gt; 
 &lt;li&gt;Passkeys/WebAuthn support&lt;/li&gt; 
 &lt;li&gt;Bring Your Database - or none! - stateless authentication with any backend (Active Directory, LDAP, etc.)&lt;/li&gt; 
 &lt;li&gt;Runtime-agnostic, runs anywhere! (Docker, Node.js, Serverless, etc.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Own your data&lt;/h3&gt; 
&lt;p&gt;Auth.js can be used with or without a database.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An open-source solution that allows you to keep control of your data&lt;/li&gt; 
 &lt;li&gt;Built-in support for &lt;a href="https://adapters.authjs.dev"&gt;MySQL, MariaDB, Postgres, Microsoft SQL Server, MongoDB, SQLite, GraphQL, etc.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Works great with databases from popular hosting providers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Secure by default&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Promotes the use of passwordless sign-in mechanisms&lt;/li&gt; 
 &lt;li&gt;Designed to be secure by default and encourage best practices for safeguarding user data&lt;/li&gt; 
 &lt;li&gt;Uses Cross-Site Request Forgery (CSRF) Tokens on POST routes (sign in, sign out)&lt;/li&gt; 
 &lt;li&gt;Default cookie policy aims for the most restrictive policy appropriate for each cookie&lt;/li&gt; 
 &lt;li&gt;When JSON Web Tokens are used, they are encrypted by default (JWE) with A256CBC-HS512&lt;/li&gt; 
 &lt;li&gt;Features tab/window syncing and session polling to support short-lived sessions&lt;/li&gt; 
 &lt;li&gt;Attempts to implement the latest guidance published by &lt;a href="https://owasp.org"&gt;Open Web Application Security Project&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Advanced configuration allows you to define your routines to handle controlling what accounts are allowed to sign in, for encoding and decoding JSON Web Tokens and to set custom cookie security policies and session properties, so you can control who can sign in and how often sessions have to be re-validated.&lt;/p&gt; 
&lt;h3&gt;TypeScript&lt;/h3&gt; 
&lt;p&gt;Auth.js libraries are written with type safety in mind. &lt;a href="https://authjs.dev/getting-started/typescript"&gt;Check out the docs&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you think you have found a vulnerability (or are not sure) in Auth.js or any of the related packages (i.e. Adapters), we ask you to read our &lt;a href="https://authjs.dev/security"&gt;Security Policy&lt;/a&gt; to reach out responsibly. Please do not open Pull Requests/Issues/Discussions before consulting with us.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://authjs.dev/contributors"&gt;Auth.js is made possible thanks to all of its contributors.&lt;/a&gt;&lt;/p&gt; 
&lt;a href="https://github.com/nextauthjs/next-auth/graphs/contributors"&gt; &lt;img width="500px" src="https://contrib.rocks/image?repo=nextauthjs/next-auth" /&gt; &lt;/a&gt; 
&lt;div&gt; 
 &lt;a href="https://vercel.com?utm_source=nextauthjs&amp;amp;utm_campaign=oss"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We're open to all community contributions! If you'd like to contribute in any way, please first read our &lt;a href="https://github.com/nextauthjs/.github/raw/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;ISC&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kamranahmedse/developer-roadmap</title>
      <link>https://github.com/kamranahmedse/developer-roadmap</link>
      <description>&lt;p&gt;Interactive roadmaps, guides and other educational content to help developers grow in their careers.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://roadmap.sh/"&gt;&lt;img src="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/public/img/brand.png" height="128" /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2 align="center"&gt;&lt;a href="https://roadmap.sh"&gt;roadmap.sh&lt;/a&gt;&lt;/h2&gt; 
&lt;p align="center"&gt;Community driven roadmaps, articles and resources for developers&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;a href="https://roadmap.sh/roadmaps"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Roadmaps%20-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="roadmaps" /&gt; &lt;/a&gt; &lt;a href="https://roadmap.sh/best-practices"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Best%20Practices-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="best practices" /&gt; &lt;/a&gt; &lt;a href="https://roadmap.sh/questions"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Questions-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="videos" /&gt; &lt;/a&gt; &lt;a href="https://www.youtube.com/channel/UCA0H2KIWgWTwpTFjSxp0now?sub_confirmation=1"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-YouTube%20Channel-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="roadmaps" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Roadmaps are now interactive, you can click the nodes to read more about the topics.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://roadmap.sh"&gt;View all Roadmaps&lt;/a&gt; &amp;nbsp;¬∑&amp;nbsp; &lt;a href="https://roadmap.sh/best-practices"&gt;Best Practices&lt;/a&gt; &amp;nbsp;¬∑&amp;nbsp; &lt;a href="https://roadmap.sh/questions"&gt;Questions&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Here is the list of available roadmaps with more being actively worked upon.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at the &lt;a href="https://roadmap.sh/get-started"&gt;get started&lt;/a&gt; page that might help you pick up a path.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/frontend"&gt;Frontend Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/frontend?r=frontend-beginner"&gt;Frontend Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/backend"&gt;Backend Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/backend?r=backend-beginner"&gt;Backend Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/devops"&gt;DevOps Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/devops?r=devops-beginner"&gt;DevOps Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/full-stack"&gt;Full Stack Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/html"&gt;HTML Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/css"&gt;CSS Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/javascript"&gt;JavaScript Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/typescript"&gt;TypeScript Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/git-github"&gt;Git and GitHub&lt;/a&gt; / &lt;a href="https://roadmap.sh/git-github?r=git-github-beginner"&gt;Git and GitHub Beginner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/api-design"&gt;API Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/computer-science"&gt;Computer Science Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/datastructures-and-algorithms"&gt;Data Structures and Algorithms Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-data-scientist"&gt;AI and Data Scientist Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-engineer"&gt;AI Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/aws"&gt;AWS Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cloudflare"&gt;Cloudflare Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/linux"&gt;Linux Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/terraform"&gt;Terraform Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/data-analyst"&gt;Data Analyst Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/bi-analyst"&gt;BI Analyst Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/data-engineer"&gt;Data Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/machine-learning"&gt;Machine Learning Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/mlops"&gt;MLOps Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/product-manager"&gt;Product Manager Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/engineering-manager"&gt;Engineering Manager Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/qa"&gt;QA Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/python"&gt;Python Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/software-architect"&gt;Software Architect Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/game-developer"&gt;Game Developer Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/server-side-game-developer"&gt;Server Side Game Developer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/software-design-architecture"&gt;Software Design and Architecture Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cpp"&gt;C++ Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/react"&gt;React Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/nextjs"&gt;Next.js Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/react-native"&gt;React Native Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/vue"&gt;Vue Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/angular"&gt;Angular Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/nodejs"&gt;Node.js Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/php"&gt;PHP Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/graphql"&gt;GraphQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/android"&gt;Android Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ios"&gt;iOS Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/flutter"&gt;Flutter Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/golang"&gt;Go Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/rust"&gt;Rust Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/java"&gt;Java Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/kotlin"&gt;Kotlin Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/spring-boot"&gt;Spring Boot Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/design-system"&gt;Design System Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/postgresql-dba"&gt;PostgreSQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/sql"&gt;SQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/redis"&gt;Redis Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/blockchain"&gt;Blockchain Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/aspnet-core"&gt;ASP.NET Core Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/system-design"&gt;System Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/kubernetes"&gt;Kubernetes Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cyber-security"&gt;Cyber Security Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/mongodb"&gt;MongoDB Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ux-design"&gt;UX Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/docker"&gt;Docker Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/prompt-engineering"&gt;Prompt Engineering Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/technical-writer"&gt;Technical Writer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/devrel"&gt;DevRel Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-red-teaming"&gt;AI Red Teaming Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-agents"&gt;AI Agents Roadmap&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are also interactive best practices:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/backend-performance"&gt;Backend Performance Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/frontend-performance"&gt;Frontend Performance Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/code-review"&gt;Code Review Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/api-security"&gt;API Security Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/aws"&gt;AWS Best Practices&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;..and questions to help you test, rate and improve your knowledge&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/javascript"&gt;JavaScript Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/nodejs"&gt;Node.js Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/react"&gt;React Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/backend"&gt;Backend Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/frontend"&gt;Frontend Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;Share with the community&lt;/h2&gt; 
&lt;p&gt;Please consider sharing a post about &lt;a href="https://roadmap.sh"&gt;roadmap.sh&lt;/a&gt; and the value it provides. It really does help!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://reddit.com/submit?url=https://roadmap.sh&amp;amp;title=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-reddit-red?logo=reddit" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://news.ycombinator.com/submitlink?u=https://roadmap.sh"&gt;&lt;img src="https://img.shields.io/badge/share%20on-hacker%20news-orange?logo=ycombinator" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/share?url=https://roadmap.sh&amp;amp;text=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-twitter-03A9F4?logo=twitter" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://www.facebook.com/sharer/sharer.php?u=https://roadmap.sh"&gt;&lt;img src="https://img.shields.io/badge/share%20on-facebook-1976D2?logo=facebook" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/shareArticle?url=https://roadmap.sh&amp;amp;title=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-linkedin-3949AB?logo=linkedin" alt="GitHub Repo stars" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Clone the repository, install the dependencies and start the application&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:kamranahmedse/developer-roadmap.git
cd developer-roadmap
npm install
npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: use the &lt;code&gt;depth&lt;/code&gt; parameter to reduce the clone size and speed up the clone.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone --depth=1 https://github.com/kamranahmedse/developer-roadmap.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at &lt;a href="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/contributing.md"&gt;contribution docs&lt;/a&gt; for how to update any of the roadmaps&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add content to roadmaps&lt;/li&gt; 
 &lt;li&gt;Add new roadmaps&lt;/li&gt; 
 &lt;li&gt;Suggest changes to existing roadmaps&lt;/li&gt; 
 &lt;li&gt;Discuss ideas in issues&lt;/li&gt; 
 &lt;li&gt;Spread the word&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Thanks to all contributors ‚ù§&lt;/h2&gt; 
&lt;a href="https://github.com/kamranahmedse/developer-roadmap/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=kamranahmedse/developer-roadmap" /&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Have a look at the &lt;a href="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/license"&gt;license file&lt;/a&gt; for details&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>freeCodeCamp/freeCodeCamp</title>
      <link>https://github.com/freeCodeCamp/freeCodeCamp</link>
      <description>&lt;p&gt;freeCodeCamp.org's open-source codebase and curriculum. Learn math, programming, and computer science for free.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://www.freecodecamp.org/"&gt;&lt;img src="https://cdn.freecodecamp.org/platform/universal/fcc_banner_new.png" alt="freeCodeCamp Social Banner" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://makeapullrequest.com"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat" alt="Pull Requests Welcome" /&gt;&lt;/a&gt; &lt;a href="https://www.firsttimersonly.com/"&gt;&lt;img src="https://img.shields.io/badge/first--timers--only-friendly-blue.svg?sanitize=true" alt="first-timers-only Friendly" /&gt;&lt;/a&gt; &lt;a href="https://www.codetriage.com/freecodecamp/freecodecamp"&gt;&lt;img src="https://www.codetriage.com/freecodecamp/freecodecamp/badges/users.svg?sanitize=true" alt="Open Source Helpers" /&gt;&lt;/a&gt; &lt;a href="https://ona.com/from-referrer/"&gt;&lt;img src="https://img.shields.io/badge/setup-automated-blue?logo=ona" alt="Setup Automated" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/PRyKn3Vbay"&gt;&lt;img src="https://img.shields.io/discord/692816967895220344?logo=discord&amp;amp;label=Discord&amp;amp;color=5865F2" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://insights.linuxfoundation.org/project/freecodecamp"&gt;&lt;img src="https://insights.linuxfoundation.org/api/badge/health-score?project=freecodecamp" alt="LFX Health Score" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;freeCodeCamp.org's open-source codebase and curriculum&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.freecodecamp.org"&gt;freeCodeCamp.org&lt;/a&gt; is a friendly community where you can learn to code for free. It is run by a &lt;a href="https://www.freecodecamp.org/donate"&gt;donor-supported 501(c)(3) charity&lt;/a&gt; to help millions of busy adults transition into tech. Our community has already helped more than 100,000 people get their first developer job.&lt;/p&gt; 
&lt;p&gt;Our full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#certifications"&gt;Certifications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#the-learning-platform"&gt;The Learning Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-bugs-and-issues"&gt;Reporting Bugs and Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-security-issues-and-responsible-disclosure"&gt;Reporting Security Issues and Responsible Disclosure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#platform-build-and-deployment-status"&gt;Platform, Build and Deployment Status&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Certifications&lt;/h3&gt; 
&lt;p&gt;freeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.&lt;/p&gt; 
&lt;p&gt;Each of these 50 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you've fulfilled all the user stories before you submit it.&lt;/p&gt; 
&lt;p&gt;You can pull in these test suites through &lt;a href="https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js"&gt;freeCodeCamp's CDN&lt;/a&gt;. This means you can build these projects on websites like CodePen and Replit - or even on your local computer's development environment.&lt;/p&gt; 
&lt;p&gt;Once you've earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or resume. And when your prospective employers or freelance clients click that link, they'll see a verified certification specific to you.&lt;/p&gt; 
&lt;p&gt;The one exception to this is if we discover violations of our &lt;a href="https://www.freecodecamp.org/news/academic-honesty-policy/"&gt;Academic Honesty Policy&lt;/a&gt;. When we catch people unambiguously plagiarizing (submitting other people's code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.&lt;/p&gt; 
&lt;p&gt;Here are our twelve core certifications:&lt;/p&gt; 
&lt;h4&gt;1. &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/"&gt;Responsive Web Design Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-by-building-a-cat-photo-app"&gt;Learn HTML by Building a Cat Photo App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-basic-css-by-building-a-cafe-menu"&gt;Learn Basic CSS by Building a Cafe Menu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-colors-by-building-a-set-of-colored-markers"&gt;Learn CSS Colors by Building a Set of Colored Markers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-forms-by-building-a-registration-form"&gt;Learn HTML Forms by Building a Registration Form&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-the-css-box-model-by-building-a-rothko-painting"&gt;Learn the CSS Box Model by Building a Rothko Painting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-flexbox-by-building-a-photo-gallery"&gt;Learn CSS Flexbox by Building a Photo Gallery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-typography-by-building-a-nutrition-label"&gt;Learn Typography by Building a Nutrition Label&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-accessibility-by-building-a-quiz"&gt;Learn Accessibility by Building a Quiz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-more-about-css-pseudo-selectors-by-building-a-balance-sheet"&gt;Learn More About CSS Pseudo Selectors by Building A Balance Sheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-intermediate-css-by-building-a-cat-painting"&gt;Learn Intermediate CSS by Building a Cat Painting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-responsive-web-design-by-building-a-piano"&gt;Learn Responsive Web Design by Building a Piano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-variables-by-building-a-city-skyline"&gt;Learn CSS Variables by Building a City Skyline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-grid-by-building-a-magazine"&gt;Learn CSS Grid by Building a Magazine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-transforms-by-building-a-penguin"&gt;Learn CSS Transforms by Building a Penguin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-animation-by-building-a-ferris-wheel"&gt;Learn CSS Animations by Building a Ferris Wheel&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form"&gt;Survey Form&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page"&gt;Tribute Page&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-technical-documentation-page-project/build-a-technical-documentation-page"&gt;Technical Documentation Page&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-product-landing-page-project/build-a-product-landing-page"&gt;Product Landing Page&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-personal-portfolio-webpage-project/build-a-personal-portfolio-webpage"&gt;Personal Portfolio Webpage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2. &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/"&gt;JavaScript Algorithms and Data Structures Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-introductory-javascript-by-building-a-pyramid-generator"&gt;Learn Introductory JavaScript by Building a Pyramid Generator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-javascript-by-building-a-role-playing-game"&gt;Learn Basic JavaScript by Building a Role Playing Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-form-validation-by-building-a-calorie-counter"&gt;Learn Form Validation by Building a Calorie Counter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-string-and-array-methods-by-building-a-music-player"&gt;Learn Basic String and Array Methods by Building a Music Player&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-the-date-object-by-building-a-date-formatter"&gt;Learn the Date Object by Building a Date Formatter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-modern-javascript-methods-by-building-football-team-cards"&gt;Learn Modern JavaScript Methods By Building Football Team Cards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-localstorage-by-building-a-todo-app"&gt;Learn localStorage by Building a Todo App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-recursion-by-building-a-decimal-to-binary-converter"&gt;Learn Recursion by Building a Decimal to Binary Converter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-algorithmic-thinking-by-building-a-number-sorter"&gt;Learn Basic Algorithmic Thinking by Building a Number Sorter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-advanced-array-methods-by-building-a-statistics-calculator"&gt;Learn Advanced Array Methods by Building a Statistics Calculator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-functional-programming-by-building-a-spreadsheet"&gt;Learn Functional Programming by Building a Spreadsheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-regular-expressions-by-building-a-spam-filter"&gt;Learn Regular Expressions by Building a Spam Filter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-oop-by-building-a-shopping-cart"&gt;Learn Basic OOP by Building a Shopping Cart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-intermediate-oop-by-building-a-platformer-game"&gt;Learn Intermediate OOP by Building a Platformer Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#review-algorithmic-thinking-by-building-a-dice-game"&gt;Learn Intermediate Algorithmic Thinking by Building a Dice Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-fetch-and-promises-by-building-an-fcc-authors-page"&gt;Learn Fetch and Promises By Building an fCC Authors Page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard"&gt;Learn Asynchronous Programming by Building an fCC Forum Leaderboard&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-palindrome-checker-project/build-a-palindrome-checker"&gt;Palindrome Checker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-roman-numeral-converter-project/build-a-roman-numeral-converter"&gt;Roman Numeral Converter&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-telephone-number-validator-project/build-a-telephone-number-validator"&gt;Telephone Number Validator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-cash-register-project/build-a-cash-register"&gt;Cash Register&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-an-rpg-creature-search-app-project/build-an-rpg-creature-search-app"&gt;RPG Creature Search App&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;3. &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/"&gt;Front End Libraries Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#bootstrap"&gt;Bootstrap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#jquery"&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#sass"&gt;Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#react"&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#redux"&gt;Redux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#react-and-redux"&gt;React and Redux&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine"&gt;Random Quote Machine&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-markdown-previewer"&gt;Markdown Previewer&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-drum-machine"&gt;Drum Machine&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-javascript-calculator"&gt;JavaScript Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-25--5-clock"&gt;25 + 5 Clock&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;4. &lt;a href="https://www.freecodecamp.org/learn/data-visualization/"&gt;Data Visualization Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/data-visualization/#data-visualization-with-d3"&gt;Data Visualization with D3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/data-visualization/#json-apis-and-ajax"&gt;JSON APIs and Ajax&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-bar-chart"&gt;Bar Chart&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-scatterplot-graph"&gt;Scatterplot Graph&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-heat-map"&gt;Heat Map&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-choropleth-map"&gt;Choropleth Map&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-treemap-diagram"&gt;Treemap Diagram&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;5. &lt;a href="https://www.freecodecamp.org/learn/relational-database/"&gt;Relational Database&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-bash-by-building-a-boilerplate"&gt;Learn Bash by Building a Boilerplate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-relational-databases-by-building-a-database-of-video-game-characters"&gt;Learn Relational Databases by Building a Database of Video Game Characters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-bash-scripting-by-building-five-programs"&gt;Learn Bash Scripting by Building Five Programs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-1"&gt;Learn SQL by Building a Student Database: Part 1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-2"&gt;Learn SQL by Building a Student Database: Part 2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-advanced-bash-by-building-a-kitty-ipsum-translator"&gt;Learn Advanced Bash by Building a Kitty Ipsum Translator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-bash-and-sql-by-building-a-bike-rental-shop"&gt;Learn Bash and SQL by Building a Bike Rental Shop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-nano-by-building-a-castle"&gt;Learn Nano by Building a Castle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-git-by-building-an-sql-reference-object"&gt;Learn Git by Building an SQL Reference Object&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-salon-appointment-scheduler-project"&gt;Salon Appointment Scheduler&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-celestial-bodies-database-project"&gt;Celestial Bodies Database&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-periodic-table-database-project"&gt;Periodic Table Database&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-number-guessing-game-project"&gt;Number Guessing Game&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-world-cup-database-project"&gt;World Cup Database&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;6. &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/"&gt;Back End Development and APIs Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/#managing-packages-with-npm"&gt;Managing Packages with Npm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/#basic-node-and-express"&gt;Basic Node and Express&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/#mongodb-and-mongoose"&gt;MongoDB and Mongoose&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice"&gt;Timestamp Microservice&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/request-header-parser-microservice"&gt;Request Header Parser&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/url-shortener-microservice"&gt;URL Shortener&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/exercise-tracker"&gt;Exercise Tracker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/file-metadata-microservice"&gt;File Metadata Microservice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;7. &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/"&gt;Quality Assurance Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/quality-assurance/#quality-assurance-and-testing-with-chai"&gt;Quality Assurance and Testing with Chai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/quality-assurance/#advanced-node-and-express"&gt;Advanced Node and Express&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/metric-imperial-converter"&gt;Metric-Imperial Converter&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/issue-tracker"&gt;Issue Tracker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/personal-library"&gt;Personal Library&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/sudoku-solver"&gt;Sudoku Solver&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/american-british-translator"&gt;American British Translator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;8. &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/"&gt;Scientific Computing with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-string-manipulation-by-building-a-cipher"&gt;Learn String Manipulation by Building a Cipher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm"&gt;Learn How to Work with Numbers and Strings by Implementing the Luhn Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-lambda-functions-by-building-an-expense-tracker"&gt;Learn Lambda Functions by Building an Expense Tracker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-list-comprehension-by-building-a-case-converter-program"&gt;Learn List Comprehension by Building a Case Converter Program&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-the-bisection-method-by-finding-the-square-root-of-a-number"&gt;Learn the Bisection Method by Finding the Square Root of a Number&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-regular-expressions-by-building-a-password-generator"&gt;Learn Regular Expressions by Building a Password Generator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-algorithm-design-by-building-a-shortest-path-algorithm"&gt;Learn Algorithm Design by Building a Shortest Path Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-recursion-by-solving-the-tower-of-hanoi-puzzle"&gt;Learn Recursion by Solving the Tower of Hanoi Puzzle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-data-structures-by-building-the-merge-sort-algorithm"&gt;Learn Data Structures by Building the Merge Sort Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-classes-and-objects-by-building-a-sudoku-solver"&gt;Learn Classes and Objects by Building a Sudoku Solver&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-tree-traversal-by-building-a-binary-search-tree"&gt;Learn Tree Traversal by Building a Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-special-methods-by-building-a-vector-space"&gt;Learn Special Methods by Building a Vector Space&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-an-arithmetic-formatter-project/build-an-arithmetic-formatter-project"&gt;Arithmetic Formatter&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-time-calculator-project/build-a-time-calculator-project"&gt;Time Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-budget-app-project/build-a-budget-app-project"&gt;Budget App&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-polygon-area-calculator-project/build-a-polygon-area-calculator-project"&gt;Polygon Area Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-probability-calculator-project/build-a-probability-calculator-project"&gt;Probability Calculator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;9. &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/"&gt;Data Analysis with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/#data-analysis-with-python-course"&gt;Data Analysis with Python Course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/#numpy"&gt;NumPy&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/mean-variance-standard-deviation-calculator"&gt;Mean-Variance-Standard Deviation Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/demographic-data-analyzer"&gt;Demographic Data Analyzer&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/medical-data-visualizer"&gt;Medical Data Visualizer&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/page-view-time-series-visualizer"&gt;Page View Time Series Visualizer&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/sea-level-predictor"&gt;Sea Level Predictor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;10. &lt;a href="https://www.freecodecamp.org/learn/information-security/"&gt;Information Security Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/information-security/#information-security-with-helmetjs"&gt;Information Security with HelmetJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/information-security/#python-for-penetration-testing"&gt;Python for Penetration Testing&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/stock-price-checker"&gt;Stock Price Checker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/anonymous-message-board"&gt;Anonymous Message Board&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/port-scanner"&gt;Port Scanner&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/sha-1-password-cracker"&gt;SHA-1 Password Cracker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/secure-real-time-multiplayer-game"&gt;Secure Real Time Multiplayer Game &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;11. &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/"&gt;Machine Learning with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/#tensorflow"&gt;TensorFlow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/#how-neural-networks-work"&gt;How Neural Networks Work&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/rock-paper-scissors"&gt;Rock Paper Scissors&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/cat-and-dog-image-classifier"&gt;Cat and Dog Image Classifier&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/book-recommendation-engine-using-knn"&gt;Book Recommendation Engine using KNN&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/linear-regression-health-costs-calculator"&gt;Linear Regression Health Costs Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/neural-network-sms-text-classifier"&gt;Neural Network SMS Text Classifier&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;12. &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/"&gt;College Algebra with Python&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-ratios-and-proportions"&gt;Learn Ratios and Proportions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-how-to-solve-for-x"&gt;Learn How to Solve for X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-fractions-and-decimals"&gt;Learn Fractions and Decimals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-functions-and-graphing"&gt;Learn Functions and Graphing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-linear-functions"&gt;Learn Linear Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-common-factors-and-square-roots"&gt;Learn Common Factors and Square Roots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-how-to-graph-systems-of-equations"&gt;Learn How to Graph Systems of Equations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-how-to-solve-systems-of-equations"&gt;Learn How to Solve Systems of Equations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-applications-of-linear-systems"&gt;Learn Applications of Linear Systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-quadratic-equations"&gt;Learn Quadratic Equations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-parent-graphs-and-polynomials"&gt;Learn Parent Graphs and Polynomials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-business-applications-of-college-algebra"&gt;Learn Business Applications of College Algebra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-simple-and-compound-interest"&gt;Learn Simple and Compound Interest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-exponents-and-logarithms"&gt;Learn Exponents and Logarithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#college-algebra-with-python-conclusion"&gt;College Algebra with Python: Conclusion&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-multi-function-calculator-project"&gt;Multi-Function Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-graphing-calculator-project"&gt;Graphing Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-three-math-games-project"&gt;Three Math Games&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-financial-calculator-project"&gt;Financial Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-data-graph-explorer-project"&gt;Data Graph Explorer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Legacy Full Stack Development Certification&lt;/h4&gt; 
&lt;p&gt;Once you have earned the Responsive Web Design, Algorithms and Data Structures, Front End Development Libraries, Data Visualization, Back End Development and APIs, and Legacy Information Security and Quality Assurance certifications, you'll be able to claim your freeCodeCamp.org Full Stack Development Certification. This distinction signifies that you've completed around 1,800 hours of coding with a wide range of web development tools.&lt;/p&gt; 
&lt;h4&gt;Legacy Certifications&lt;/h4&gt; 
&lt;p&gt;We also have 4 legacy certifications dating back to our 2015 curriculum, which are still available. All of the required projects for these legacy certifications will remain available on freeCodeCamp.org.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Legacy Front End Development Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Data Visualization Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Back End Development Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Information Security and Quality Assurance Certification&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Free professional certifications&lt;/h3&gt; 
&lt;h4&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/"&gt;(New) Foundational C# with Microsoft&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#write-your-first-code-using-c-sharp"&gt;Write Your First Code Using C#&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#create-and-run-simple-c-sharp-console-applications"&gt;Create and Run Simple C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#add-logic-to-c-sharp-console-applications"&gt;Add Logic to C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#work-with-variable-data-in-c-sharp-console-applications"&gt;Work with Variable Data in C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#create-methods-in-c-sharp-console-applications"&gt;Create Methods in C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#debug-c-sharp-console-applications"&gt;Debug C# Console Applications&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Exam&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam/foundational-c-sharp-with-microsoft-certification-exam"&gt;Foundational C# with Microsoft Certification Exam&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;The Learning Platform&lt;/h3&gt; 
&lt;p&gt;This code is running live at &lt;a href="https://www.freecodecamp.org"&gt;freeCodeCamp.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our community also has:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;a href="https://forum.freecodecamp.org"&gt;forum&lt;/a&gt; where you can usually get programming help or project feedback within hours.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href="https://youtube.com/freecodecamp"&gt;YouTube channel&lt;/a&gt; with free courses on Python, SQL, Android, and a wide variety of other technologies.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href="https://www.freecodecamp.org/news"&gt;technical publication&lt;/a&gt; with thousands of programming tutorials and articles about mathematics and computer science.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href="https://discord.gg/Z7Fm39aNtZ"&gt;Discord server&lt;/a&gt; where you can hang out and talk with developers and people who are learning to code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href="https://www.freecodecamp.org/signin"&gt;Join the community here&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Reporting Bugs and Issues&lt;/h3&gt; 
&lt;p&gt;If you think you've found a bug, first read the &lt;a href="https://forum.freecodecamp.org/t/how-to-report-a-bug/19543"&gt;how to report a bug&lt;/a&gt; article and follow its instructions.&lt;/p&gt; 
&lt;p&gt;If you're confident it's a new bug and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue. Be sure to include as much information as possible so we can reproduce the bug.&lt;/p&gt; 
&lt;h3&gt;Reporting Security Issues and Responsible Disclosure&lt;/h3&gt; 
&lt;p&gt;We appreciate responsible disclosure of vulnerabilities that might impact the integrity of our platforms and users.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href="https://contribute.freecodecamp.org/#/security"&gt;Read our security policy and follow these steps to report a vulnerability&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;The freeCodeCamp.org community is possible thanks to thousands of kind volunteers like you. We welcome all contributions to the community and are excited to welcome you aboard.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href="https://contribute.freecodecamp.org"&gt;Please follow these steps to contribute&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Recent Contributions:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/89be0a1a1c8f641c54f9234a7423e7755352c746.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Copyright ¬© 2025 freeCodeCamp.org&lt;/p&gt; 
&lt;p&gt;The content of this repository is bound by the following licenses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The computer software is licensed under the &lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/LICENSE.md"&gt;BSD-3-Clause&lt;/a&gt; license.&lt;/li&gt; 
 &lt;li&gt;The learning resources in the &lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/curriculum"&gt;&lt;code&gt;/curriculum&lt;/code&gt;&lt;/a&gt; directory including their subdirectories thereon are copyright ¬© 2025 freeCodeCamp.org&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>bluesky-social/atproto</title>
      <link>https://github.com/bluesky-social/atproto</link>
      <description>&lt;p&gt;Social networking technology created by Bluesky&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AT Protocol Reference Implementation (TypeScript)&lt;/h1&gt; 
&lt;p&gt;Welcome friends!&lt;/p&gt; 
&lt;p&gt;This repository contains Bluesky's reference implementation of AT Protocol, and of the &lt;code&gt;app.bsky&lt;/code&gt; microblogging application service backend.&lt;/p&gt; 
&lt;h2&gt;What is in here?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TypeScript Packages:&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package&lt;/th&gt; 
   &lt;th&gt;Docs&lt;/th&gt; 
   &lt;th&gt;NPM&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/api&lt;/code&gt;: client library&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/api/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/api"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/api" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/common-web&lt;/code&gt;: shared code and helpers which can run in web browsers&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/common-web/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/common-web"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/common-web" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/common&lt;/code&gt;: shared code and helpers which doesn't work in web browsers&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/common/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/common"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/common" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/crypto&lt;/code&gt;: cryptographic signing and key serialization&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/crypto/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/crypto"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/crypto" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/identity&lt;/code&gt;: DID and handle resolution&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/identity/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/identity"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/identity" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/lexicon&lt;/code&gt;: schema definition language&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/lexicon/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/lexicon"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/lexicon" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/repo&lt;/code&gt;: data storage structure, including MST&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/repo/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/repo"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/repo" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/syntax&lt;/code&gt;: string parsers for identifiers&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/syntax/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/syntax"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/syntax" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/xrpc&lt;/code&gt;: client-side HTTP API helpers&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/xrpc/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/xrpc"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/xrpc" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/xrpc-server&lt;/code&gt;: server-side HTTP API helpers&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/xrpc-server/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/xrpc-server"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/xrpc-server" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;TypeScript Services:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;pds&lt;/code&gt;: "Personal Data Server", hosting repo content for atproto accounts. Most implementation code in &lt;code&gt;packages/pds&lt;/code&gt;, with runtime wrapper in &lt;code&gt;services/pds&lt;/code&gt;. See &lt;a href="https://github.com/bluesky-social/pds"&gt;bluesky-social/pds&lt;/a&gt; for directions on self-hosting.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bsky&lt;/code&gt;: AppView implementation of the &lt;code&gt;app.bsky.*&lt;/code&gt; API endpoints. Running on main network at &lt;code&gt;api.bsky.app&lt;/code&gt;. Most implementation code in &lt;code&gt;packages/bsky&lt;/code&gt;, with runtime wrapper in &lt;code&gt;services/bsky&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Lexicons:&lt;/strong&gt; for both the &lt;code&gt;com.atproto.*&lt;/code&gt; and &lt;code&gt;app.bsky.*&lt;/code&gt; are canonically versioned in this repo, for now, under &lt;code&gt;./lexicons/&lt;/code&gt;. These are JSON files in the &lt;a href="https://atproto.com/specs/lexicon"&gt;Lexicon schema definition language&lt;/a&gt;, similar to JSON Schema or OpenAPI.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Interoperability Test Data:&lt;/strong&gt; the language-neutral test files in &lt;code&gt;./interop-test-files/&lt;/code&gt; may be useful for other protocol implementations to ensure that they follow the specification correctly&lt;/p&gt; 
&lt;p&gt;The source code for the Bluesky Social client app (for web and mobile) can be found at &lt;a href="https://github.com/bluesky-social/social-app"&gt;bluesky-social/social-app&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Go programming language source code is in &lt;a href="https://github.com/bluesky-social/indigo"&gt;bluesky-social/indigo&lt;/a&gt;, including the BGS implementation.&lt;/p&gt; 
&lt;h2&gt;Developer Quickstart&lt;/h2&gt; 
&lt;p&gt;We recommend &lt;a href="https://github.com/nvm-sh/nvm"&gt;&lt;code&gt;nvm&lt;/code&gt;&lt;/a&gt; for managing Node.js installs. This project requires Node.js version 18. &lt;code&gt;pnpm&lt;/code&gt; is used to manage the workspace of multiple packages. You can install it with &lt;code&gt;npm install --global pnpm&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;There is a Makefile which can help with basic development tasks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# use existing nvm to install node 18 and pnpm
make nvm-setup

# pull dependencies and build all local packages
make deps
make build

# run the tests, using Docker services as needed
make test

# run a local PDS and AppView with fake test accounts and data
# (this requires a global installation of `jq` and `docker`)
make run-dev-env

# show all other commands
make help
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;About AT Protocol&lt;/h2&gt; 
&lt;p&gt;The Authenticated Transfer Protocol ("ATP" or "atproto") is a decentralized social media protocol, developed by &lt;a href="https://bsky.social"&gt;Bluesky Social PBC&lt;/a&gt;. Learn more at:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://atproto.com/guides/overview"&gt;Overview and Guides&lt;/a&gt; üëà Best starting point&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bluesky-social/atproto/discussions"&gt;Github Discussions&lt;/a&gt; üëà Great place to ask questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://atproto.com/specs/atp"&gt;Protocol Specifications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bsky.social/about/blog/3-6-2022-a-self-authenticating-social-protocol"&gt;Blogpost on self-authenticating data structures&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Bluesky Social application encompasses a set of schemas and APIs built in the overall AT Protocol framework. The namespace for these "Lexicons" is &lt;code&gt;app.bsky.*&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;While we do accept contributions, we prioritize high quality issues and pull requests. Adhering to the below guidelines will ensure a more timely review.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Rules:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We may not respond to your issue or PR.&lt;/li&gt; 
 &lt;li&gt;We may close an issue or PR without much feedback.&lt;/li&gt; 
 &lt;li&gt;We may lock discussions or contributions if our attention is getting DDOSed.&lt;/li&gt; 
 &lt;li&gt;We do not provide support for build issues.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Guidelines:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check for existing issues before filing a new one, please.&lt;/li&gt; 
 &lt;li&gt;Open an issue and give some time for discussion before submitting a PR.&lt;/li&gt; 
 &lt;li&gt;If submitting a PR that includes a lexicon change, please get sign off on the lexicon change &lt;em&gt;before&lt;/em&gt; doing the implementation.&lt;/li&gt; 
 &lt;li&gt;Issues are for bugs &amp;amp; feature requests related to the TypeScript implementation of atproto and related services. 
  &lt;ul&gt; 
   &lt;li&gt;For high-level discussions, please use the &lt;a href="https://github.com/bluesky-social/atproto/discussions"&gt;Discussion Forum&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;For client issues, please use the relevant &lt;a href="https://github.com/bluesky-social/social-app"&gt;social-app&lt;/a&gt; repo.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Stay away from PRs that: 
  &lt;ul&gt; 
   &lt;li&gt;Refactor large parts of the codebase&lt;/li&gt; 
   &lt;li&gt;Add entirely new features without prior discussion&lt;/li&gt; 
   &lt;li&gt;Change the tooling or frameworks used without prior discussion&lt;/li&gt; 
   &lt;li&gt;Introduce new unnecessary dependencies&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Remember, we serve a wide community of users. Our day-to-day involves us constantly asking "which top priority is our top priority." If you submit well-written PRs that solve problems concisely, that's an awesome contribution. Otherwise, as much as we'd love to accept your ideas and contributions, we really don't have the bandwidth.&lt;/p&gt; 
&lt;h2&gt;Are you a developer interested in building on atproto?&lt;/h2&gt; 
&lt;p&gt;Bluesky is an open social network built on the AT Protocol, a flexible technology that will never lock developers out of the ecosystems that they help build. With atproto, third-party can be as seamless as first-party through custom feeds, federated services, clients, and more.&lt;/p&gt; 
&lt;h2&gt;Security disclosures&lt;/h2&gt; 
&lt;p&gt;If you discover any security issues, please send an email to &lt;a href="mailto:security@bsky.app"&gt;security@bsky.app&lt;/a&gt;. The email is automatically CCed to the entire team, and we'll respond promptly. See &lt;a href="https://github.com/bluesky-social/atproto/raw/main/SECURITY.md"&gt;SECURITY.md&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is dual-licensed under MIT and Apache 2.0 terms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MIT license (&lt;a href="https://github.com/bluesky-social/atproto/raw/main/LICENSE-MIT.txt"&gt;LICENSE-MIT.txt&lt;/a&gt; or &lt;a href="http://opensource.org/licenses/MIT"&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Apache License, Version 2.0, (&lt;a href="https://github.com/bluesky-social/atproto/raw/main/LICENSE-APACHE.txt"&gt;LICENSE-APACHE.txt&lt;/a&gt; or &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Downstream projects and end users may chose either license individually, or both together, at their discretion. The motivation for this dual-licensing is the additional software patent assurance provided by Apache 2.0.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yangshun/tech-interview-handbook</title>
      <link>https://github.com/yangshun/tech-interview-handbook</link>
      <description>&lt;p&gt;üíØ Curated coding interview preparation materials for busy software engineers&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;Tech Interview Handbook&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.techinterviewhandbook.org/"&gt; &lt;img src="https://raw.githubusercontent.com/yangshun/tech-interview-handbook/main/assets/logo.svg?sanitize=true" alt="Tech Interview Handbook" width="400" /&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;h3&gt; &lt;a href="https://www.techinterviewhandbook.org/"&gt;Read on the website&lt;/a&gt; &lt;/h3&gt; 
 &lt;p&gt; Join/follow us on &lt;a href="https://discord.com/invite/usMqNaPczq" target="_blank"&gt;Discord&lt;/a&gt; | &lt;a href="https://twitter.com/techinterviewhb" target="_blank"&gt;ùïè (Twitter)&lt;/a&gt; | &lt;a href="https://t.me/techinterviewhandbook" target="_blank"&gt;Telegram&lt;/a&gt; | &lt;a href="https://facebook.com/techinterviewhandbook" target="_blank"&gt;Facebook&lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;a href="https://www.techinterviewhandbook.org/software-engineering-interview-guide/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/yangshun/tech-interview-handbook/main/assets/start-reading-button.jpg" alt="Start Reading Tech Interview Handbook" /&gt; &lt;/a&gt; 
&lt;h2&gt;What is this?&lt;/h2&gt; 
&lt;p&gt;Not everyone has the time to do a few hundred LeetCode questions. Here are &lt;em&gt;free and curated&lt;/em&gt; technical interview preparation materials for busy engineers, brought to you by me, the author of &lt;a href="https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU"&gt;Blind 75&lt;/a&gt;. Over 1,000,000 people have benefitted from this handbook!&lt;/p&gt; 
&lt;p&gt;Besides the usual algorithm questions, other &lt;strong&gt;awesome&lt;/strong&gt; stuff includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/coding-interview-study-plan/"&gt;Best practice questions&lt;/a&gt; for coding interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/grind75/"&gt;Grind 75&lt;/a&gt; - the next evolution of Blind 75, bigger and better&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/coding-interview-prep/"&gt;How to prepare&lt;/a&gt; for coding interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/coding-interview-cheatsheet/"&gt;Coding interview best practices&lt;/a&gt; - Straight-to-the-point Do's and Don'ts&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/algorithms/study-cheatsheet/"&gt;Algorithm cheatsheets and tips&lt;/a&gt; categorized by topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/resume/"&gt;Step-by-step Software Engineer resume guide&lt;/a&gt; to prepare a FAANG-ready resume&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/behavioral-interview-questions/"&gt;Behavioral questions&lt;/a&gt; asked by the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.frontendinterviewhandbook.com"&gt;Front end interview preparation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Help from you in contributing content would be very much appreciated!&lt;/p&gt; 
&lt;h2&gt;Why would you read this?&lt;/h2&gt; 
&lt;p&gt;This repository has &lt;strong&gt;practical&lt;/strong&gt; content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful.&lt;/p&gt; 
&lt;p&gt;The information in this repository is condensed. Ultimately, the key to succeeding in technical interviews is consistent practice and I don't want to bore you with too many words. I tell you the minimum you need to know on how to go about navigating the interview process, you go and practice and land your dream job.&lt;/p&gt; 
&lt;h2&gt;Who is this for?&lt;/h2&gt; 
&lt;p&gt;Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;üí° Stop grinding mindlessly! Study coding question patterns efficiently with &lt;a href="https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU"&gt;Grokking the Coding Interview&lt;/a&gt; by Design Gurus üí° &lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;How is this repository different?&lt;/h2&gt; 
&lt;p&gt;There are many awesome books like "Cracking the Coding Interview" and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top-quality curated content directly for your consumption.&lt;/p&gt; 
&lt;p&gt;Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. üòé&lt;/p&gt; 
&lt;h2&gt;Looking for interview courses?&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://shareasale.com/r.cfm?b=1873647&amp;amp;u=3114753&amp;amp;m=114505&amp;amp;urllink=&amp;amp;afftrack="&gt;AlgoMonster&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;AlgoMonster aims to help you ace the technical interview &lt;strong&gt;in the shortest time possible&lt;/strong&gt;. By Google engineers, AlgoMonster uses a data-driven approach to teach you the most useful key question patterns and has contents to help you quickly revise basic data structures and algorithms. Best of all, AlgoMonster is not subscription-based - pay a one-time fee and get &lt;strong&gt;lifetime access&lt;/strong&gt;. &lt;a href="https://shareasale.com/r.cfm?b=1873647&amp;amp;u=3114753&amp;amp;m=114505&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;strong&gt;Join today for a 70% discount ‚Üí&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU"&gt;Grokking the Coding Interview: Patterns for Coding Questions&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;This course by Design Gurus expands upon the questions on the recommended practice questions but approaches the practicing from a questions pattern perspective, which is an approach I also agree with for learning and have personally used to get better at coding interviews. The course allows you to practice selected questions in Java, Python, C++, JavaScript and also provides sample solutions in those languages. &lt;strong&gt;Learn and understand patterns, not memorize answers!&lt;/strong&gt; &lt;a href="https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU"&gt;&lt;strong&gt;Get lifetime access today ‚Üí&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Looking for Front End content?&lt;/h2&gt; 
&lt;p&gt;Front-end-related content has been moved to a separate website - &lt;a href="https://frontendinterviewhandbook.com"&gt;Front End Interview Handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Looking for System Design content?&lt;/h2&gt; 
&lt;p&gt;We're still working on System Design content. In the meanwhile, check out &lt;a href="https://bytebytego.com?fpr=techinterviewhandbook"&gt;ByteByteGo's System Design Interview course&lt;/a&gt; or Design Gurus' &lt;a href="https://www.designgurus.io/course/grokking-the-system-design-interview?aff=kJSIoU"&gt;Grokking the System Design Interview course&lt;/a&gt;, which in our opinion are among the most useful resources for getting started on system design interviews preparation.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;p&gt;A &lt;a href="https://github.com/facebook/docusaurus"&gt;Docusaurus&lt;/a&gt; website has been created to provide a better reading experience. Check out the website &lt;a href="https://www.techinterviewhandbook.org"&gt;here&lt;/a&gt;!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;üí° Stop the grind and study with a plan! Developed by Google engineers, &lt;a href="https://shareasale.com/r.cfm?b=1873647&amp;amp;u=3114753&amp;amp;m=114505&amp;amp;urllink=&amp;amp;afftrack="&gt;AlgoMonster&lt;/a&gt; is the fastest way to get a software engineering job. &lt;a href="https://shareasale.com/r.cfm?b=1873647&amp;amp;u=3114753&amp;amp;m=114505&amp;amp;urllink=&amp;amp;afftrack="&gt;Join today for a 70% discount!&lt;/a&gt; üí°&lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;p&gt;If you are interested in how data structures are implemented, check out &lt;a href="https://github.com/yangshun/lago"&gt;Lago&lt;/a&gt;, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that can be used in production and also a reference resource for revising Data Structures and Algorithms.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contributed. [&lt;a href="https://raw.githubusercontent.com/yangshun/tech-interview-handbook/main/CONTRIBUTING.md"&gt;Contribute&lt;/a&gt;]. &lt;a href="https://github.com/yangshun/tech-interview-handbook/graphs/contributors"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/contributors.svg?width=890&amp;amp;button=false" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! üôè [&lt;a href="https://opencollective.com/tech-interview-handbook#backer"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/tech-interview-handbook#backers" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/backers.svg?width=890" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/yangshun" target="_blank"&gt;&lt;img src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt="Buy Me A Coffee" style="height: auto !important; width: auto !important;" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [&lt;a href="https://opencollective.com/tech-interview-handbook#sponsor"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/0/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/0/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/1/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/1/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/2/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/2/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/3/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/3/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/4/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/4/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/5/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/5/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/6/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/6/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/7/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/7/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/8/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/8/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/9/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/9/avatar.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Meta).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google-gemini/gemini-cli</title>
      <link>https://github.com/google-gemini/gemini-cli</link>
      <description>&lt;p&gt;An open-source AI agent that brings the power of Gemini directly into your terminal.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gemini CLI&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Gemini CLI CI" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google-gemini/gemini-cli/actions/workflows/e2e.yml"&gt;&lt;img src="https://github.com/google-gemini/gemini-cli/actions/workflows/e2e.yml/badge.svg?sanitize=true" alt="Gemini CLI E2E" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@google/gemini-cli"&gt;&lt;img src="https://img.shields.io/npm/v/@google/gemini-cli" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google-gemini/gemini-cli/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/google-gemini/gemini-cli" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/assets/gemini-screenshot.png" alt="Gemini CLI Screenshot" /&gt;&lt;/p&gt; 
&lt;p&gt;Gemini CLI is an open-source AI agent that brings the power of Gemini directly into your terminal. It provides lightweight access to Gemini, giving you the most direct path from your prompt to our model.&lt;/p&gt; 
&lt;h2&gt;üöÄ Why Gemini CLI?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ Free tier&lt;/strong&gt;: 60 requests/min and 1,000 requests/day with personal Google account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üß† Powerful Gemini 2.5 Pro&lt;/strong&gt;: Access to 1M token context window&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîß Built-in tools&lt;/strong&gt;: Google Search grounding, file operations, shell commands, web fetching&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîå Extensible&lt;/strong&gt;: MCP (Model Context Protocol) support for custom integrations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíª Terminal-first&lt;/strong&gt;: Designed for developers who live in the command line&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üõ°Ô∏è Open source&lt;/strong&gt;: Apache 2.0 licensed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üì¶ Installation&lt;/h2&gt; 
&lt;h3&gt;Quick Install&lt;/h3&gt; 
&lt;h4&gt;Run instantly with npx&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using npx (no installation required)
npx https://github.com/google-gemini/gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Install globally with npm&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Install globally with Homebrew (macOS/Linux)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;System Requirements&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js version 20 or higher&lt;/li&gt; 
 &lt;li&gt;macOS, Linux, or Windows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Release Cadence and Tags&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/releases.md"&gt;Releases&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Preview&lt;/h3&gt; 
&lt;p&gt;New preview releases will be published each week at UTC 2359 on Tuesdays. These releases will not have been fully vetted and may contain regressions or other outstanding issues. Please help us test and install with &lt;code&gt;preview&lt;/code&gt; tag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@preview
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stable&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;New stable releases will be published each week at UTC 2000 on Tuesdays, this will be the full promotion of last week's &lt;code&gt;preview&lt;/code&gt; release + any bug fixes and validations. Use &lt;code&gt;latest&lt;/code&gt; tag.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Nightly&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;New releases will be published each week at UTC 0000 each day, This will be all changes from the main branch as represented at time of release. It should be assumed there are pending validations and issues. Use &lt;code&gt;nightly&lt;/code&gt; tag.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üìã Key Features&lt;/h2&gt; 
&lt;h3&gt;Code Understanding &amp;amp; Generation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Query and edit large codebases&lt;/li&gt; 
 &lt;li&gt;Generate new apps from PDFs, images, or sketches using multimodal capabilities&lt;/li&gt; 
 &lt;li&gt;Debug issues and troubleshoot with natural language&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Automation &amp;amp; Integration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automate operational tasks like querying pull requests or handling complex rebases&lt;/li&gt; 
 &lt;li&gt;Use MCP servers to connect new capabilities, including &lt;a href="https://github.com/GoogleCloudPlatform/vertex-ai-creative-studio/tree/main/experiments/mcp-genmedia"&gt;media generation with Imagen, Veo or Lyria&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run non-interactively in scripts for workflow automation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Capabilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ground your queries with built-in &lt;a href="https://ai.google.dev/gemini-api/docs/grounding"&gt;Google Search&lt;/a&gt; for real-time information&lt;/li&gt; 
 &lt;li&gt;Conversation checkpointing to save and resume complex sessions&lt;/li&gt; 
 &lt;li&gt;Custom context files (GEMINI.md) to tailor behavior for your projects&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;GitHub Integration&lt;/h3&gt; 
&lt;p&gt;Integrate Gemini CLI directly into your GitHub workflows with &lt;a href="https://github.com/google-github-actions/run-gemini-cli"&gt;&lt;strong&gt;Gemini CLI GitHub Action&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Pull Request Reviews&lt;/strong&gt;: Automated code review with contextual feedback and suggestions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Issue Triage&lt;/strong&gt;: Automated labeling and prioritization of GitHub issues based on content analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;On-demand Assistance&lt;/strong&gt;: Mention &lt;code&gt;@gemini-cli&lt;/code&gt; in issues and pull requests for help with debugging, explanations, or task delegation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Workflows&lt;/strong&gt;: Build automated, scheduled and on-demand workflows tailored to your team's needs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîê Authentication Options&lt;/h2&gt; 
&lt;p&gt;Choose the authentication method that best fits your needs:&lt;/p&gt; 
&lt;h3&gt;Option 1: Login with Google (OAuth login using your Google Account)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;‚ú® Best for:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Individual developers.&lt;/li&gt; 
 &lt;li&gt;Google AI Pro and AI Ultra subscribers.&lt;/li&gt; 
 &lt;li&gt;Anyone who has a Gemini Code Assist license.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;See &lt;a href="https://cloud.google.com/gemini/docs/quotas"&gt;quota limits and terms of service&lt;/a&gt; for details.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free tier&lt;/strong&gt; with 60 requests/min and 1,000 requests/day&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gemini 2.5 Pro and Flash&lt;/strong&gt; with 1M token context window&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No API key management&lt;/strong&gt; - just sign in with your Google account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic updates&lt;/strong&gt; to our latest models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Start Gemini CLI, then choose &lt;em&gt;Login with Google&lt;/em&gt; and follow the browser authentication flow when prompted&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;If you are using a paid Code Assist License from your organization, remember to set the Google Cloud Project&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Set your Google Cloud Project
export GOOGLE_CLOUD_PROJECT="YOUR_PROJECT_NAME"
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Option 2: Gemini API Key&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;‚ú® Best for:&lt;/strong&gt; Developers who need specific model control or paid tier access&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free tier&lt;/strong&gt;: 100 requests/day with Gemini 2.5 Pro&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model selection&lt;/strong&gt;: Choose specific Gemini models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Usage-based billing&lt;/strong&gt;: Upgrade for higher limits when needed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get your key from https://aistudio.google.com/apikey
export GEMINI_API_KEY="YOUR_API_KEY"
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Option 3: Vertex AI&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;‚ú® Best for:&lt;/strong&gt; Enterprise teams and production workloads&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise features&lt;/strong&gt;: Advanced security and compliance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Higher rate limits with billing account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integration&lt;/strong&gt;: Works with existing Google Cloud infrastructure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get your key from Google Cloud Console
export GOOGLE_API_KEY="YOUR_API_KEY"
export GOOGLE_GENAI_USE_VERTEXAI=true
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Google Workspace accounts and other authentication methods, see the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/authentication.md"&gt;authentication guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; 
&lt;h3&gt;Basic Usage&lt;/h3&gt; 
&lt;h4&gt;Start in current directory&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Include multiple directories&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini --include-directories ../lib,../docs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Use specific model&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -m gemini-2.5-flash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Non-interactive mode for scripts&lt;/h4&gt; 
&lt;p&gt;Get a simple text response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -p "Explain the architecture of this codebase"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced scripting, including how to parse JSON and handle errors, use the &lt;code&gt;--output-format json&lt;/code&gt; flag to get structured output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -p "Explain the architecture of this codebase" --output-format json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Quick Examples&lt;/h3&gt; 
&lt;h4&gt;Start a new project&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd new-project/
gemini
&amp;gt; Write me a Discord bot that answers questions using a FAQ.md file I will provide
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Analyze existing code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/google-gemini/gemini-cli
cd gemini-cli
gemini
&amp;gt; Give me a summary of all of the changes that went in yesterday
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üìö Documentation&lt;/h2&gt; 
&lt;h3&gt;Getting Started&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/index.md"&gt;&lt;strong&gt;Quickstart Guide&lt;/strong&gt;&lt;/a&gt; - Get up and running quickly&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/authentication.md"&gt;&lt;strong&gt;Authentication Setup&lt;/strong&gt;&lt;/a&gt; - Detailed auth configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/configuration.md"&gt;&lt;strong&gt;Configuration Guide&lt;/strong&gt;&lt;/a&gt; - Settings and customization&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/keyboard-shortcuts.md"&gt;&lt;strong&gt;Keyboard Shortcuts&lt;/strong&gt;&lt;/a&gt; - Productivity tips&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Core Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/commands.md"&gt;&lt;strong&gt;Commands Reference&lt;/strong&gt;&lt;/a&gt; - All slash commands (&lt;code&gt;/help&lt;/code&gt;, &lt;code&gt;/chat&lt;/code&gt;, &lt;code&gt;/mcp&lt;/code&gt;, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/checkpointing.md"&gt;&lt;strong&gt;Checkpointing&lt;/strong&gt;&lt;/a&gt; - Save and resume conversations&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/memory.md"&gt;&lt;strong&gt;Memory Management&lt;/strong&gt;&lt;/a&gt; - Using GEMINI.md context files&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/token-caching.md"&gt;&lt;strong&gt;Token Caching&lt;/strong&gt;&lt;/a&gt; - Optimize token usage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Tools &amp;amp; Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/index.md"&gt;&lt;strong&gt;Built-in Tools Overview&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/file-system.md"&gt;File System Operations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/shell.md"&gt;Shell Commands&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/web-fetch.md"&gt;Web Fetch &amp;amp; Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/multi-file.md"&gt;Multi-file Operations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/mcp-server.md"&gt;&lt;strong&gt;MCP Server Integration&lt;/strong&gt;&lt;/a&gt; - Extend with custom tools&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/extension.md"&gt;&lt;strong&gt;Custom Extensions&lt;/strong&gt;&lt;/a&gt; - Build your own commands&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Topics&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/architecture.md"&gt;&lt;strong&gt;Architecture Overview&lt;/strong&gt;&lt;/a&gt; - How Gemini CLI works&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/ide-integration.md"&gt;&lt;strong&gt;IDE Integration&lt;/strong&gt;&lt;/a&gt; - VS Code companion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/sandbox.md"&gt;&lt;strong&gt;Sandboxing &amp;amp; Security&lt;/strong&gt;&lt;/a&gt; - Safe execution environments&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/deployment.md"&gt;&lt;strong&gt;Enterprise Deployment&lt;/strong&gt;&lt;/a&gt; - Docker, system-wide config&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/telemetry.md"&gt;&lt;strong&gt;Telemetry &amp;amp; Monitoring&lt;/strong&gt;&lt;/a&gt; - Usage tracking&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/core/tools-api.md"&gt;&lt;strong&gt;Tools API Development&lt;/strong&gt;&lt;/a&gt; - Create custom tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configuration &amp;amp; Customization&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/configuration.md"&gt;&lt;strong&gt;Settings Reference&lt;/strong&gt;&lt;/a&gt; - All configuration options&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/themes.md"&gt;&lt;strong&gt;Theme Customization&lt;/strong&gt;&lt;/a&gt; - Visual customization&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/gemini-ignore.md"&gt;&lt;strong&gt;.gemini Directory&lt;/strong&gt;&lt;/a&gt; - Project-specific settings&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/configuration.md#environment-variables"&gt;&lt;strong&gt;Environment Variables&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Troubleshooting &amp;amp; Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/troubleshooting.md"&gt;&lt;strong&gt;Troubleshooting Guide&lt;/strong&gt;&lt;/a&gt; - Common issues and solutions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/troubleshooting.md#frequently-asked-questions"&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt; - Quick answers&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;/bug&lt;/code&gt; command to report issues directly from the CLI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Using MCP Servers&lt;/h3&gt; 
&lt;p&gt;Configure MCP servers in &lt;code&gt;~/.gemini/settings.json&lt;/code&gt; to extend Gemini CLI with custom tools:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; @github List my open pull requests
&amp;gt; @slack Send a summary of today's commits to #dev channel
&amp;gt; @database Run a query to find inactive users
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/mcp-server.md"&gt;MCP Server Integration guide&lt;/a&gt; for setup instructions.&lt;/p&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Gemini CLI is fully open source (Apache 2.0), and we encourage the community to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Report bugs and suggest features&lt;/li&gt; 
 &lt;li&gt;Improve documentation&lt;/li&gt; 
 &lt;li&gt;Submit code improvements&lt;/li&gt; 
 &lt;li&gt;Share your MCP servers and extensions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See our &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for development setup, coding standards, and how to submit pull requests.&lt;/p&gt; 
&lt;p&gt;Check our &lt;a href="https://github.com/orgs/google-gemini/projects/11/"&gt;Official Roadmap&lt;/a&gt; for planned features and priorities.&lt;/p&gt; 
&lt;h2&gt;üìñ Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/ROADMAP.md"&gt;Official Roadmap&lt;/a&gt;&lt;/strong&gt; - See what's coming next&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.npmjs.com/package/@google/gemini-cli"&gt;NPM Package&lt;/a&gt;&lt;/strong&gt; - Package registry&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/strong&gt; - Report bugs or request features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/security/advisories"&gt;Security Advisories&lt;/a&gt;&lt;/strong&gt; - Security updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Uninstall&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/Uninstall.md"&gt;Uninstall Guide&lt;/a&gt; for removal instructions.&lt;/p&gt; 
&lt;h2&gt;üìÑ Legal&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;License&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/LICENSE"&gt;Apache License 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terms of Service&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tos-privacy.md"&gt;Terms &amp;amp; Privacy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; Built with ‚ù§Ô∏è by Google and the open source community &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alexta69/metube</title>
      <link>https://github.com/alexta69/metube</link>
      <description>&lt;p&gt;Self-hosted YouTube downloader (web UI for youtube-dl / yt-dlp)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MeTube&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://github.com/alexta69/metube/actions/workflows/main.yml/badge.svg?sanitize=true" alt="Build Status" /&gt; &lt;img src="https://img.shields.io/docker/pulls/alexta69/metube.svg?sanitize=true" alt="Docker Pulls" /&gt;&lt;/p&gt; 
&lt;p&gt;Web GUI for youtube-dl (using the &lt;a href="https://github.com/yt-dlp/yt-dlp"&gt;yt-dlp&lt;/a&gt; fork) with playlist support. Allows you to download videos from YouTube and &lt;a href="https://github.com/yt-dlp/yt-dlp/raw/master/supportedsites.md"&gt;dozens of other sites&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/alexta69/metube/raw/master/screenshot.gif" alt="screenshot1" /&gt;&lt;/p&gt; 
&lt;h2&gt;üê≥ Run using Docker&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 8081:8081 -v /path/to/downloads:/downloads ghcr.io/alexta69/metube
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üê≥ Run using docker-compose&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  metube:
    image: ghcr.io/alexta69/metube
    container_name: metube
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - /path/to/downloads:/downloads
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;‚öôÔ∏è Configuration via environment variables&lt;/h2&gt; 
&lt;p&gt;Certain values can be set via environment variables, using the &lt;code&gt;-e&lt;/code&gt; parameter on the docker command line, or the &lt;code&gt;environment:&lt;/code&gt; section in docker-compose.&lt;/p&gt; 
&lt;h3&gt;‚¨áÔ∏è Download Behavior&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;DOWNLOAD_MODE&lt;/strong&gt;: This flag controls how downloads are scheduled and executed. Options are &lt;code&gt;sequential&lt;/code&gt;, &lt;code&gt;concurrent&lt;/code&gt;, and &lt;code&gt;limited&lt;/code&gt;. Defaults to &lt;code&gt;limited&lt;/code&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;sequential&lt;/code&gt;: Downloads are processed one at a time. A new download won't start until the previous one has finished. This mode is useful for conserving system resources or ensuring downloads occur in strict order.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;concurrent&lt;/code&gt;: Downloads are started immediately as they are added, with no built-in limit on how many run simultaneously. This mode may overwhelm your system if too many downloads start at once.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;limited&lt;/code&gt;: Downloads are started concurrently but are capped by a concurrency limit. In this mode, a semaphore is used so that at most a fixed number of downloads run at any given time.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MAX_CONCURRENT_DOWNLOADS&lt;/strong&gt;: This flag is used only when &lt;code&gt;DOWNLOAD_MODE&lt;/code&gt; is set to &lt;code&gt;limited&lt;/code&gt;.&lt;br /&gt; It specifies the maximum number of simultaneous downloads allowed. For example, if set to &lt;code&gt;5&lt;/code&gt;, then at most five downloads will run concurrently, and any additional downloads will wait until one of the active downloads completes. Defaults to &lt;code&gt;3&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DELETE_FILE_ON_TRASHCAN&lt;/strong&gt;: if &lt;code&gt;true&lt;/code&gt;, downloaded files are deleted on the server, when they are trashed from the "Completed" section of the UI. Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DEFAULT_OPTION_PLAYLIST_STRICT_MODE&lt;/strong&gt;: if &lt;code&gt;true&lt;/code&gt;, the "Strict Playlist mode" switch will be enabled by default. In this mode the playlists will be downloaded only if the URL strictly points to a playlist. URLs to videos inside a playlist will be treated same as direct video URL. Defaults to &lt;code&gt;false&lt;/code&gt; .&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DEFAULT_OPTION_PLAYLIST_ITEM_LIMIT&lt;/strong&gt;: Maximum number of playlist items that can be downloaded. Defaults to &lt;code&gt;0&lt;/code&gt; (no limit).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìÅ Storage &amp;amp; Directories&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;DOWNLOAD_DIR&lt;/strong&gt;: Path to where the downloads will be saved. Defaults to &lt;code&gt;/downloads&lt;/code&gt; in the Docker image, and &lt;code&gt;.&lt;/code&gt; otherwise.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AUDIO_DOWNLOAD_DIR&lt;/strong&gt;: Path to where audio-only downloads will be saved, if you wish to separate them from the video downloads. Defaults to the value of &lt;code&gt;DOWNLOAD_DIR&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CUSTOM_DIRS&lt;/strong&gt;: Whether to enable downloading videos into custom directories within the &lt;strong&gt;DOWNLOAD_DIR&lt;/strong&gt; (or &lt;strong&gt;AUDIO_DOWNLOAD_DIR&lt;/strong&gt;). When enabled, a dropdown appears next to the Add button to specify the download directory. Defaults to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CREATE_CUSTOM_DIRS&lt;/strong&gt;: Whether to support automatically creating directories within the &lt;strong&gt;DOWNLOAD_DIR&lt;/strong&gt; (or &lt;strong&gt;AUDIO_DOWNLOAD_DIR&lt;/strong&gt;) if they do not exist. When enabled, the download directory selector supports free-text input, and the specified directory will be created recursively. Defaults to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CUSTOM_DIRS_EXCLUDE_REGEX&lt;/strong&gt;: Regular expression to exclude some custom directories from the dropdown. Empty regex disables exclusion. Defaults to &lt;code&gt;(^|/)[.@].*$&lt;/code&gt;, which means directories starting with &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;@&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DOWNLOAD_DIRS_INDEXABLE&lt;/strong&gt;: If &lt;code&gt;true&lt;/code&gt;, the download directories (&lt;strong&gt;DOWNLOAD_DIR&lt;/strong&gt; and &lt;strong&gt;AUDIO_DOWNLOAD_DIR&lt;/strong&gt;) are indexable on the web server. Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;STATE_DIR&lt;/strong&gt;: Path to where the queue persistence files will be saved. Defaults to &lt;code&gt;/downloads/.metube&lt;/code&gt; in the Docker image, and &lt;code&gt;.&lt;/code&gt; otherwise.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TEMP_DIR&lt;/strong&gt;: Path where intermediary download files will be saved. Defaults to &lt;code&gt;/downloads&lt;/code&gt; in the Docker image, and &lt;code&gt;.&lt;/code&gt; otherwise. 
  &lt;ul&gt; 
   &lt;li&gt;Set this to an SSD or RAM filesystem (e.g., &lt;code&gt;tmpfs&lt;/code&gt;) for better performance.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Note&lt;/strong&gt;: Using a RAM filesystem may prevent downloads from being resumed.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìù File Naming &amp;amp; yt-dlp&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;OUTPUT_TEMPLATE&lt;/strong&gt;: The template for the filenames of the downloaded videos, formatted according to &lt;a href="https://github.com/yt-dlp/yt-dlp/raw/master/README.md#output-template"&gt;this spec&lt;/a&gt;. Defaults to &lt;code&gt;%(title)s.%(ext)s&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OUTPUT_TEMPLATE_CHAPTER&lt;/strong&gt;: The template for the filenames of the downloaded videos when split into chapters via postprocessors. Defaults to &lt;code&gt;%(title)s - %(section_number)s %(section_title)s.%(ext)s&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OUTPUT_TEMPLATE_PLAYLIST&lt;/strong&gt;: The template for the filenames of the downloaded videos when downloaded as a playlist. Defaults to &lt;code&gt;%(playlist_title)s/%(title)s.%(ext)s&lt;/code&gt;. When empty, then &lt;code&gt;OUTPUT_TEMPLATE&lt;/code&gt; is used.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;YTDL_OPTIONS&lt;/strong&gt;: Additional options to pass to yt-dlp in JSON format. &lt;a href="https://github.com/yt-dlp/yt-dlp/raw/master/yt_dlp/YoutubeDL.py#L222"&gt;See available options here&lt;/a&gt;. They roughly correspond to command-line options, though some do not have exact equivalents here. For example, &lt;code&gt;--recode-video&lt;/code&gt; has to be specified via &lt;code&gt;postprocessors&lt;/code&gt;. Also note that dashes are replaced with underscores. You may find &lt;a href="https://github.com/yt-dlp/yt-dlp/raw/master/devscripts/cli_to_api.py"&gt;this script&lt;/a&gt; helpful for converting from command-line options to &lt;code&gt;YTDL_OPTIONS&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;YTDL_OPTIONS_FILE&lt;/strong&gt;: A path to a JSON file that will be loaded and used for populating &lt;code&gt;YTDL_OPTIONS&lt;/code&gt; above. Please note that if both &lt;code&gt;YTDL_OPTIONS_FILE&lt;/code&gt; and &lt;code&gt;YTDL_OPTIONS&lt;/code&gt; are specified, the options in &lt;code&gt;YTDL_OPTIONS&lt;/code&gt; take precedence. The file will be monitored for changes and reloaded automatically when changes are detected.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üåê Web Server &amp;amp; URLs&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;URL_PREFIX&lt;/strong&gt;: Base path for the web server (for use when hosting behind a reverse proxy). Defaults to &lt;code&gt;/&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;PUBLIC_HOST_URL&lt;/strong&gt;: Base URL for the download links shown in the UI for completed files. By default, MeTube serves them under its own URL. If your download directory is accessible on another URL and you want the download links to be based there, use this variable to set it.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;PUBLIC_HOST_AUDIO_URL&lt;/strong&gt;: Same as PUBLIC_HOST_URL but for audio downloads.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTPS&lt;/strong&gt;: Use &lt;code&gt;https&lt;/code&gt; instead of &lt;code&gt;http&lt;/code&gt; (&lt;strong&gt;CERTFILE&lt;/strong&gt; and &lt;strong&gt;KEYFILE&lt;/strong&gt; required). Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CERTFILE&lt;/strong&gt;: HTTPS certificate file path.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KEYFILE&lt;/strong&gt;: HTTPS key file path.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ROBOTS_TXT&lt;/strong&gt;: A path to a &lt;code&gt;robots.txt&lt;/code&gt; file mounted in the container.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üè† Basic Setup&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;UID&lt;/strong&gt;: User under which MeTube will run. Defaults to &lt;code&gt;1000&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GID&lt;/strong&gt;: Group under which MeTube will run. Defaults to &lt;code&gt;1000&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UMASK&lt;/strong&gt;: Umask value used by MeTube. Defaults to &lt;code&gt;022&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DEFAULT_THEME&lt;/strong&gt;: Default theme to use for the UI, can be set to &lt;code&gt;light&lt;/code&gt;, &lt;code&gt;dark&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;. Defaults to &lt;code&gt;auto&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LOGLEVEL&lt;/strong&gt;: Log level, can be set to &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;, &lt;code&gt;CRITICAL&lt;/code&gt;, or &lt;code&gt;NONE&lt;/code&gt;. Defaults to &lt;code&gt;INFO&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ENABLE_ACCESSLOG&lt;/strong&gt;: Whether to enable access log. Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The project's Wiki contains examples of useful configurations contributed by users of MeTube:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexta69/metube/wiki/YTDL_OPTIONS-Cookbook"&gt;YTDL_OPTIONS Cookbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexta69/metube/wiki/OUTPUT_TEMPLATE-Cookbook"&gt;OUTPUT_TEMPLATE Cookbook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üç™ Using browser cookies&lt;/h2&gt; 
&lt;p&gt;In case you need to use your browser's cookies with MeTube, for example to download restricted or private videos:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add the following to your docker-compose.yml:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;    volumes:
      - /path/to/cookies:/cookies
    environment:
      - YTDL_OPTIONS={"cookiefile":"/cookies/cookies.txt"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install in your browser an extension to extract cookies: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/export-cookies-txt/"&gt;Firefox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/get-cookiestxt-locally/cclelndahbckbenkjhflpdbgdldlbecc"&gt;Chrome&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Extract the cookies you need with the extension and rename the file &lt;code&gt;cookies.txt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Drop the file in the folder you configured in the docker-compose.yml above&lt;/li&gt; 
 &lt;li&gt;Restart the container&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîå Browser extensions&lt;/h2&gt; 
&lt;p&gt;Browser extensions allow right-clicking videos and sending them directly to MeTube. Please note that if you're on an HTTPS page, your MeTube instance must be behind an HTTPS reverse proxy (see below) for the extensions to work.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Chrome:&lt;/strong&gt; contributed by &lt;a href="https://github.com/rpsl"&gt;Rpsl&lt;/a&gt;. You can install it from &lt;a href="https://chrome.google.com/webstore/detail/metube-downloader/fbmkmdnlhacefjljljlbhkodfmfkijdh"&gt;Google Chrome Webstore&lt;/a&gt; or use developer mode and install &lt;a href="https://github.com/Rpsl/metube-browser-extension"&gt;from sources&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Firefox:&lt;/strong&gt; contributed by &lt;a href="https://github.com/nanocortex"&gt;nanocortex&lt;/a&gt;. You can install it from &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/metube-downloader"&gt;Firefox Addons&lt;/a&gt; or get sources from &lt;a href="https://github.com/nanocortex/metube-firefox-addon"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üì± iOS Shortcut&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/rithask"&gt;rithask&lt;/a&gt; created an iOS shortcut to send URLs to MeTube from Safari. Enter the MeTube instance address when prompted which will be saved for later use. You can run the shortcut from Safari‚Äôs share menu. The shortcut can be downloaded from &lt;a href="https://www.icloud.com/shortcuts/66627a9f334c467baabdb2769763a1a6"&gt;this iCloud link&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üì± iOS Compatibility&lt;/h2&gt; 
&lt;p&gt;iOS has strict requirements for video files, requiring h264 or h265 video codec and aac audio codec in MP4 container. This can sometimes be a lower quality than the best quality available. To accommodate iOS requirements, when downloading a MP4 format you can choose "Best (iOS)" to get the best quality formats as compatible as possible with iOS requirements.&lt;/p&gt; 
&lt;p&gt;To force all downloads to be converted to an iOS-compatible codec, insert this as an environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;  environment:
    - 'YTDL_OPTIONS={"format": "best", "exec": "ffmpeg -i %(filepath)q -c:v libx264 -c:a aac %(filepath)q.h264.mp4"}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üîñ Bookmarklet&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/kushfest"&gt;kushfest&lt;/a&gt; has created a Chrome bookmarklet for sending the currently open webpage to MeTube. Please note that if you're on an HTTPS page, your MeTube instance must be configured with &lt;code&gt;HTTPS&lt;/code&gt; as &lt;code&gt;true&lt;/code&gt; in the environment, or be behind an HTTPS reverse proxy (see below) for the bookmarklet to work.&lt;/p&gt; 
&lt;p&gt;GitHub doesn't allow embedding JavaScript as a link, so the bookmarklet has to be created manually by copying the following code to a new bookmark you create on your bookmarks bar. Change the hostname in the URL below to point to your MeTube instance.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;javascript:!function(){xhr=new XMLHttpRequest();xhr.open("POST","https://metube.domain.com/add");xhr.withCredentials=true;xhr.send(JSON.stringify({"url":document.location.href,"quality":"best"}));xhr.onload=function(){if(xhr.status==200){alert("Sent to metube!")}else{alert("Send to metube failed. Check the javascript console for clues.")}}}();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/shoonya75"&gt;shoonya75&lt;/a&gt; has contributed a Firefox version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;javascript:(function(){xhr=new XMLHttpRequest();xhr.open("POST","https://metube.domain.com/add");xhr.send(JSON.stringify({"url":document.location.href,"quality":"best"}));xhr.onload=function(){if(xhr.status==200){alert("Sent to metube!")}else{alert("Send to metube failed. Check the javascript console for clues.")}}})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above bookmarklets use &lt;code&gt;alert()&lt;/code&gt; as a success/failure notification. The following will show a toast message instead:&lt;/p&gt; 
&lt;p&gt;Chrome:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;javascript:!function(){function notify(msg) {var sc = document.scrollingElement.scrollTop; var text = document.createElement('span');text.innerHTML=msg;var ts = text.style;ts.all = 'revert';ts.color = '#000';ts.fontFamily = 'Verdana, sans-serif';ts.fontSize = '15px';ts.backgroundColor = 'white';ts.padding = '15px';ts.border = '1px solid gainsboro';ts.boxShadow = '3px 3px 10px';ts.zIndex = '100';document.body.appendChild(text);ts.position = 'absolute'; ts.top = 50 + sc + 'px'; ts.left = (window.innerWidth / 2)-(text.offsetWidth / 2) + 'px'; setTimeout(function () { text.style.visibility = "hidden"; }, 1500);}xhr=new XMLHttpRequest();xhr.open("POST","https://metube.domain.com/add");xhr.send(JSON.stringify({"url":document.location.href,"quality":"best"}));xhr.onload=function() { if(xhr.status==200){notify("Sent to metube!")}else {notify("Send to metube failed. Check the javascript console for clues.")}}}();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Firefox:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;javascript:(function(){function notify(msg) {var sc = document.scrollingElement.scrollTop; var text = document.createElement('span');text.innerHTML=msg;var ts = text.style;ts.all = 'revert';ts.color = '#000';ts.fontFamily = 'Verdana, sans-serif';ts.fontSize = '15px';ts.backgroundColor = 'white';ts.padding = '15px';ts.border = '1px solid gainsboro';ts.boxShadow = '3px 3px 10px';ts.zIndex = '100';document.body.appendChild(text);ts.position = 'absolute'; ts.top = 50 + sc + 'px'; ts.left = (window.innerWidth / 2)-(text.offsetWidth / 2) + 'px'; setTimeout(function () { text.style.visibility = "hidden"; }, 1500);}xhr=new XMLHttpRequest();xhr.open("POST","https://metube.domain.com/add");xhr.send(JSON.stringify({"url":document.location.href,"quality":"best"}));xhr.onload=function() { if(xhr.status==200){notify("Sent to metube!")}else {notify("Send to metube failed. Check the javascript console for clues.")}}})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;‚ö° Raycast extension&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/dotvhs"&gt;dotvhs&lt;/a&gt; has created an &lt;a href="https://www.raycast.com/dot/metube"&gt;extension for Raycast&lt;/a&gt; that allows adding videos to MeTube directly from Raycast.&lt;/p&gt; 
&lt;h2&gt;üîí HTTPS support, and running behind a reverse proxy&lt;/h2&gt; 
&lt;p&gt;It's possible to configure MeTube to listen in HTTPS mode. &lt;code&gt;docker-compose&lt;/code&gt; example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  metube:
    image: ghcr.io/alexta69/metube
    container_name: metube
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - /path/to/downloads:/downloads
      - /path/to/ssl/crt:/ssl/crt.pem
      - /path/to/ssl/key:/ssl/key.pem
    environment:
      - HTTPS=true
      - CERTFILE=/ssl/crt.pem
      - KEYFILE=/ssl/key.pem
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It's also possible to run MeTube behind a reverse proxy, in order to support authentication. HTTPS support can also be added in this way.&lt;/p&gt; 
&lt;p&gt;When running behind a reverse proxy which remaps the URL (i.e. serves MeTube under a subdirectory and not under root), don't forget to set the URL_PREFIX environment variable to the correct value.&lt;/p&gt; 
&lt;p&gt;If you're using the &lt;a href="https://docs.linuxserver.io/general/swag"&gt;linuxserver/swag&lt;/a&gt; image for your reverse proxying needs (which I can heartily recommend), it already includes ready snippets for proxying MeTube both in &lt;a href="https://github.com/linuxserver/reverse-proxy-confs/raw/master/metube.subfolder.conf.sample"&gt;subfolder&lt;/a&gt; and &lt;a href="https://github.com/linuxserver/reverse-proxy-confs/raw/master/metube.subdomain.conf.sample"&gt;subdomain&lt;/a&gt; modes under the &lt;code&gt;nginx/proxy-confs&lt;/code&gt; directory in the configuration volume. It also includes Authelia which can be used for authentication.&lt;/p&gt; 
&lt;h3&gt;üåê NGINX&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-nginx"&gt;location /metube/ {
        proxy_pass http://metube:8081;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: the extra &lt;code&gt;proxy_set_header&lt;/code&gt; directives are there to make WebSocket work.&lt;/p&gt; 
&lt;h3&gt;üåê Apache&lt;/h3&gt; 
&lt;p&gt;Contributed by &lt;a href="https://github.com/PIE-yt"&gt;PIE-yt&lt;/a&gt;. Source &lt;a href="https://gist.github.com/PIE-yt/29e7116588379032427f5bd446b2cac4"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-apache"&gt;# For putting in your Apache sites site.conf
# Serves MeTube under a /metube/ subdir (http://yourdomain.com/metube/)
&amp;lt;Location /metube/&amp;gt;
    ProxyPass http://localhost:8081/ retry=0 timeout=30
    ProxyPassReverse http://localhost:8081/
&amp;lt;/Location&amp;gt;

&amp;lt;Location /metube/socket.io&amp;gt;
    RewriteEngine On
    RewriteCond %{QUERY_STRING} transport=websocket    [NC]
    RewriteRule /(.*) ws://localhost:8081/socket.io/$1 [P,L]
    ProxyPass http://localhost:8081/socket.io retry=0 timeout=30
    ProxyPassReverse http://localhost:8081/socket.io
&amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üåê Caddy&lt;/h3&gt; 
&lt;p&gt;The following example Caddyfile gets a reverse proxy going behind &lt;a href="https://caddyserver.com"&gt;caddy&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-caddyfile"&gt;example.com {
  route /metube/* {
    uri strip_prefix metube
    reverse_proxy metube:8081
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üîÑ Updating yt-dlp&lt;/h2&gt; 
&lt;p&gt;The engine which powers the actual video downloads in MeTube is &lt;a href="https://github.com/yt-dlp/yt-dlp"&gt;yt-dlp&lt;/a&gt;. Since video sites regularly change their layouts, frequent updates of yt-dlp are required to keep up.&lt;/p&gt; 
&lt;p&gt;There's an automatic nightly build of MeTube which looks for a new version of yt-dlp, and if one exists, the build pulls it and publishes an updated docker image. Therefore, in order to keep up with the changes, it's recommended that you update your MeTube container regularly with the latest image.&lt;/p&gt; 
&lt;p&gt;I recommend installing and setting up &lt;a href="https://github.com/containrrr/watchtower"&gt;watchtower&lt;/a&gt; for this purpose.&lt;/p&gt; 
&lt;h2&gt;üîß Troubleshooting and submitting issues&lt;/h2&gt; 
&lt;p&gt;Before asking a question or submitting an issue for MeTube, please remember that MeTube is only a UI for &lt;a href="https://github.com/yt-dlp/yt-dlp"&gt;yt-dlp&lt;/a&gt;. Any issues you might be experiencing with authentication to video websites, postprocessing, permissions, other &lt;code&gt;YTDL_OPTIONS&lt;/code&gt; configurations which seem not to work, or anything else that concerns the workings of the underlying yt-dlp library, need not be opened on the MeTube project. In order to debug and troubleshoot them, it's advised to try using the yt-dlp binary directly first, bypassing the UI, and once that is working, importing the options that worked for you into &lt;code&gt;YTDL_OPTIONS&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In order to test with the yt-dlp command directly, you can either download it and run it locally, or for a better simulation of its actual conditions, you can run it within the MeTube container itself. Assuming your MeTube container is called &lt;code&gt;metube&lt;/code&gt;, run the following on your Docker host to get a shell inside the container:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker exec -ti metube sh
cd /downloads
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once there, you can use the yt-dlp command freely.&lt;/p&gt; 
&lt;h2&gt;üí° Submitting feature requests&lt;/h2&gt; 
&lt;p&gt;MeTube development relies on code contributions by the community. The program as it currently stands fits my own use cases, and is therefore feature-complete as far as I'm concerned. If your use cases are different and require additional features, please feel free to submit PRs that implement those features. It's advisable to create an issue first to discuss the planned implementation, because in an effort to reduce bloat, some PRs may not be accepted. However, note that opening a feature request when you don't intend to implement the feature will rarely result in the request being fulfilled.&lt;/p&gt; 
&lt;h2&gt;üõ†Ô∏è Building and running locally&lt;/h2&gt; 
&lt;p&gt;Make sure you have Node.js and Python 3.13 installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd metube/ui
# install Angular and build the UI
npm install
node_modules/.bin/ng build
# install python dependencies
cd ..
curl -LsSf https://astral.sh/uv/install.sh | sh
uv sync
# run
uv run python3 app/main.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A Docker image can be built locally (it will build the UI too):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t metube .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that if you're running the server in VSCode, your downloads will go to your user's Downloads folder (this is configured via the environment in &lt;code&gt;.vscode/launch.json&lt;/code&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TanStack/router</title>
      <link>https://github.com/TanStack/router</link>
      <description>&lt;p&gt;ü§ñ Fully typesafe Router for React (and friends) w/ built-in caching, 1st class search-param APIs, client-side cache integration and isomorphic rendering.&lt;/p&gt;&lt;hr&gt;&lt;img src="https://static.scarf.sh/a.png?x-pxid=d988eb79-b0fc-4a2b-8514-6a1ab932d188" /&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TanStack/router/main/media/header_router.png" alt="TanStack Router" /&gt;&lt;/p&gt; &lt;h2&gt;TanStack Router&lt;/h2&gt; &lt;p&gt;A modern router designed for type safety, data‚Äëdriven navigation, and seamless developer experience.&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;End‚Äëto‚Äëend type safety (routes, params, loaders)&lt;/li&gt; 
     &lt;li&gt;Schema‚Äëdriven search params with validation&lt;/li&gt; 
     &lt;li&gt;Built‚Äëin caching, prefetching &amp;amp; invalidation&lt;/li&gt; 
     &lt;li&gt;Nested layouts, transitions &amp;amp; error boundaries&lt;/li&gt; 
    &lt;/ul&gt; &lt;h3&gt;&lt;a href="https://tanstack.com/router"&gt;Read the Router Docs ‚Üí&lt;/a&gt;&lt;/h3&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TanStack/router/main/media/header_start.png" alt="TanStack Start" /&gt;&lt;/p&gt; &lt;h2&gt;TanStack Start&lt;/h2&gt; &lt;p&gt;A full‚Äëstack framework built on Router, designed for server rendering, streaming, and production‚Äëready deployments.&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Full‚Äëdocument SSR &amp;amp; streaming&lt;/li&gt; 
     &lt;li&gt;Server functions &amp;amp; end‚Äëto‚Äëend type safety&lt;/li&gt; 
     &lt;li&gt;Deployment‚Äëready bundling &amp;amp; builds&lt;/li&gt; 
     &lt;li&gt;All the power of TanStack Router, plus full‚Äëstack features&lt;/li&gt; 
    &lt;/ul&gt; &lt;h3&gt;&lt;a href="https://tanstack.com/start"&gt;Read the Start Docs ‚Üí&lt;/a&gt;&lt;/h3&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://npmjs.com/package/@tanstack/react-router"&gt; &lt;img src="https://img.shields.io/npm/dm/@tanstack/react-router.svg?sanitize=true" alt="npm downloads" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/tanstack/router"&gt; &lt;img src="https://img.shields.io/github/stars/tanstack/router.svg?style=social&amp;amp;label=Star" alt="GitHub stars" /&gt; &lt;/a&gt; 
 &lt;a href="https://bundlephobia.com/result?p=@tanstack/react-router"&gt; &lt;img src="https://badgen.net/bundlephobia/minzip/@tanstack/react-router" alt="Bundle size" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://raw.githubusercontent.com/TanStack/router/main/#badge"&gt; &lt;img alt="semantic-release" src="https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true" /&gt; &lt;/a&gt; 
 &lt;a href="https://bestofjs.org/projects/tanstack-router"&gt;&lt;img alt="Best of JS" src="https://img.shields.io/endpoint?url=https://bestofjs-serverless.now.sh/api/project-badge?fullName=TanStack%2Frouter%26since=daily" /&gt;&lt;/a&gt; 
 &lt;a href="https://twitter.com/tan_stack"&gt;&lt;img src="https://img.shields.io/twitter/follow/tan_stack.svg?style=social" alt="Follow @TanStack" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;&lt;a href="https://github.com/sponsors/tannerlinsley/"&gt;Become a Sponsor!&lt;/a&gt;&lt;/h3&gt; 
&lt;/div&gt; 
&lt;h2&gt;Get Involved&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;We welcome issues and pull requests!&lt;/li&gt; 
 &lt;li&gt;Participate in &lt;a href="https://github.com/TanStack/router/discussions"&gt;GitHub discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat with the community on &lt;a href="https://discord.com/invite/WrRKjPJ"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/TanStack/router/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for setup instructions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Partners&lt;/h2&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://www.coderabbit.ai/?via=tanstack&amp;amp;dub_id=aCcEEdAOqqutX6OS"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://tanstack.com/assets/coderabbit-dark-CMcuvjEy.svg" height="40" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://tanstack.com/assets/coderabbit-light-DVMJ2jHi.svg" height="40" /&gt; 
      &lt;img src="https://tanstack.com/assets/coderabbit-dark-CMcuvjEy.svg?sanitize=true" height="40" alt="CodeRabbit" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td padding="20"&gt; &lt;a href="https://www.cloudflare.com?utm_source=tanstack"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://tanstack.com/assets/cloudflare-white-DQDB7UaL.svg" height="60" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://tanstack.com/assets/cloudflare-black-CPufaW0B.svg" height="60" /&gt; 
      &lt;img src="https://tanstack.com/assets/cloudflare-black-CPufaW0B.svg?sanitize=true" height="60" alt="Cloudflare" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://netlify.com?utm_source=tanstack"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/netlify-dark.svg" height="70" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/netlify.svg" height="70" /&gt; 
      &lt;img src="https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/netlify-dark.svg?sanitize=true" height="70" alt="Netlify" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://neon.tech?utm_source=tanstack"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/neon-dark.svg" height="50" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/neon.svg" height="50" /&gt; 
      &lt;img src="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/neon.svg?sanitize=true" height="50" alt="Neon" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://go.clerk.com/wOwHtuJ"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://tanstack.com/assets/clerk-logo-dark-CRE22T_2.svg" height="40" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/clerk.svg" height="40" /&gt; 
      &lt;img src="https://tanstack.com/assets/clerk-logo-dark-CRE22T_2.svg?sanitize=true" height="40" alt="Clerk" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://convex.dev?utm_source=tanstack"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/convex-white.svg" height="30" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/convex.svg" height="30" /&gt; 
      &lt;img src="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/convex.svg?sanitize=true" height="30" alt="Convex" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://sentry.io?utm_source=tanstack"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/sentry-wordmark-light.svg" height="50" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/sentry.svg" height="50" /&gt; 
      &lt;img src="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/sentry.svg?sanitize=true" height="50" alt="Sentry" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://www.prisma.io?utm_source=tanstack&amp;amp;via=tanstack"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://tanstack.com/assets/prisma-dark-DwgDxLwn.svg" height="50" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://tanstack.com/assets/prisma-light-Cloa3Onm.svg" height="50" /&gt; 
      &lt;img src="https://tanstack.com/assets/prisma-dark-DwgDxLwn.svg?sanitize=true" height="50" alt="Prisma" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://strapi.link/tanstack-start"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://tanstack.com/assets/strapi-dark-CQ84tQTk.svg" height="40" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://tanstack.com/assets/strapi-light-6x7linao.svg" height="40" /&gt; 
      &lt;img src="https://tanstack.com/assets/strapi-dark-CQ84tQTk.svg?sanitize=true" height="40" alt="Strapi" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/TanStack/router/main/media/partner_logo.svg?sanitize=true" alt="Router &amp;amp; you?" height="65" /&gt; 
 &lt;p&gt; We're looking for TanStack Router &amp;amp; Start Partners to join our mission! Partner with us to push the boundaries of TanStack Router &amp;amp; Start and build amazing things together. &lt;/p&gt; 
 &lt;a href="mailto:partners@tanstack.com?subject=TanStack Router &amp;amp; Start Partnership"&gt;&lt;b&gt;LET'S CHAT&lt;/b&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Explore the TanStack Ecosystem&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/config"&gt;&lt;b&gt;TanStack Config&lt;/b&gt;&lt;/a&gt; ‚Äì Tooling for JS/TS packages&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/db"&gt;&lt;b&gt;TanStack DB&lt;/b&gt;&lt;/a&gt; ‚Äì Reactive sync client store&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/devtools"&gt;&lt;b&gt;TanStack DevTools&lt;/b&gt;&lt;/a&gt; ‚Äì Unified devtools panel&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/form"&gt;&lt;b&gt;TanStack Form&lt;/b&gt;&lt;/a&gt; ‚Äì Type‚Äësafe form state&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/pacer"&gt;&lt;b&gt;TanStack Pacer&lt;/b&gt;&lt;/a&gt; ‚Äì Debouncing, throttling, batching &lt;br /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/query"&gt;&lt;b&gt;TanStack Query&lt;/b&gt;&lt;/a&gt; ‚Äì Async state &amp;amp; caching&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/ranger"&gt;&lt;b&gt;TanStack Ranger&lt;/b&gt;&lt;/a&gt; ‚Äì Range &amp;amp; slider primitives&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/store"&gt;&lt;b&gt;TanStack Store&lt;/b&gt;&lt;/a&gt; ‚Äì Reactive data store&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/table"&gt;&lt;b&gt;TanStack Table&lt;/b&gt;&lt;/a&gt; ‚Äì Headless datagrids&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/virtual"&gt;&lt;b&gt;TanStack Virtual&lt;/b&gt;&lt;/a&gt; ‚Äì Virtualized rendering&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;‚Ä¶ and more at &lt;a href="https://tanstack.com"&gt;&lt;b&gt;TanStack.com ¬ª&lt;/b&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Use the force, Luke --&gt;</description>
    </item>
    
    <item>
      <title>ZuodaoTech/everyone-can-use-english</title>
      <link>https://github.com/ZuodaoTech/everyone-can-use-english</link>
      <description>&lt;p&gt;‰∫∫‰∫∫ÈÉΩËÉΩÁî®Ëã±ËØ≠&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/assets/icon.png" alt="Clash" width="128" /&gt; 
&lt;/div&gt; 
&lt;h3 align="center"&gt; AI ÊòØÂΩì‰ªä‰∏ñÁïå‰∏äÊúÄÂ•ΩÁöÑÂ§ñËØ≠ËÄÅÂ∏àÔºåEnjoy ÂÅö AI ÊúÄÂ•ΩÁöÑÂä©Êïô„ÄÇ &lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml/badge.svg?sanitize=true" alt="Deploy 1000h website" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml/badge.svg?sanitize=true" alt="Test Enjoy App" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml/badge.svg?sanitize=true" alt="Release Enjoy App" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fconfig%2Fapp_version&amp;amp;query=%24.version&amp;amp;label=Latest&amp;amp;link=https%3A%2F%2F1000h.org%2Fenjoy-app%2Finstall.html" alt="Latest Version" /&gt; &lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fbadges%2Frecordings" alt="Recording Duration" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;ÁΩëÈ°µÁâà&lt;/h2&gt; 
&lt;p&gt;Enjoy ÁΩëÈ°µÁâàÂ∑≤Áªè‰∏äÁ∫øÔºåÂèØËÆøÈóÆ &lt;a href="https://enjoy.bot"&gt;https://enjoy.bot&lt;/a&gt; Áõ¥Êé•‰ΩøÁî®„ÄÇ&lt;/p&gt; 
&lt;div align="center" style="display:flex;overflow:auto;gap:10px;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audios.jpg" alt="Audios" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-add-audio.jpg" alt="Add Audio" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audio-shadow.jpg" alt="Shadow" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audio-assessment.jpg" alt="Assessment" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-new-chat.jpg" alt="New Chat" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-chat.jpg" alt="Chat" width="300" /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Ê°åÈù¢ÁâàÂÆâË£ÖÂèä‰ΩøÁî®&lt;/h2&gt; 
&lt;p&gt;‰∏ãËΩΩÂèä‰ΩøÁî®Áõ∏ÂÖ≥ËØ¥ÊòéÔºåËØ∑ÂèÇÈòÖ &lt;a href="https://1000h.org/enjoy-app/"&gt;ÊñáÊ°£&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;h2&gt;È¢ÑËßà&lt;/h2&gt; 
&lt;div align="center" style="display:flex;overflow:auto;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/home.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/shadow.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/assessment.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/document.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/chat.png" alt="Home" width="800" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Ê°åÈù¢ÁâàÂºÄÂèë&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn install
yarn enjoy:start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Áõ∏ÂÖ≥ÈòÖËØª&lt;/h2&gt; 
&lt;h3&gt;‰∏ÄÂçÉÂ∞èÊó∂Ôºà2024Ôºâ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/intro.html"&gt;ÁÆÄË¶ÅËØ¥Êòé&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/training-tasks/kick-off.html"&gt;ËÆ≠ÁªÉ‰ªªÂä°&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/sounds-of-american-english/0-intro.html"&gt;ËØ≠Èü≥Â°ëÈÄ†&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/in-the-brain/01-inifinite.html"&gt;Â§ßËÑëÂÜÖÈÉ®&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/self-training/00-intro.html"&gt;Ëá™ÊàëËÆ≠ÁªÉ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;‰∫∫‰∫∫ÈÉΩËÉΩÁî®Ëã±ËØ≠Ôºà2010Ôºâ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/README.md"&gt;ÁÆÄ‰ªã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter1.md"&gt;Á¨¨‰∏ÄÁ´†ÔºöËµ∑ÁÇπ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter2.md"&gt;Á¨¨‰∫åÁ´†ÔºöÂè£ËØ≠&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter3.md"&gt;Á¨¨‰∏âÁ´†ÔºöËØ≠Èü≥&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter4.md"&gt;Á¨¨ÂõõÁ´†ÔºöÊúóËØª&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter5.md"&gt;Á¨¨‰∫îÁ´†ÔºöËØçÂÖ∏&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter6.md"&gt;Á¨¨ÂÖ≠Á´†ÔºöËØ≠Ê≥ï&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter7.md"&gt;Á¨¨‰∏ÉÁ´†ÔºöÁ≤æËØª&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter8.md"&gt;Á¨¨ÂÖ´Á´†ÔºöÂèÆÂò±&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/end.md"&gt;ÂêéËÆ∞&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/h2&gt; 
&lt;p&gt;ËØ∑Êü•ËØ¢ &lt;a href="https://1000h.org/enjoy-app/faq.html"&gt;ÊñáÊ°£ FAQ&lt;/a&gt;„ÄÇ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coinbase/x402</title>
      <link>https://github.com/coinbase/x402</link>
      <description>&lt;p&gt;A payments protocol for the internet. Built on HTTP.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;x402 payments protocol&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"1 line of code to accept digital dollars. No fee, 2 second settlement, $0.001 minimum payment."&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;app.use(
  // How much you want to charge, and where you want the funds to land
  paymentMiddleware("0xYourAddress", { "/your-endpoint": "$0.01" })
);
// That's it! See examples/typescript/servers/express.ts for a complete example. Instruction below for running on base-sepolia.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;Payments on the internet are fundamentally flawed. Credit Cards are high friction, hard to accept, have minimum payments that are far too high, and don't fit into the programmatic nature of the internet. It's time for an open, internet-native form of payments. A payment rail that doesn't have high minimums + % based fee. Payments that are amazing for humans and AI agents.&lt;/p&gt; 
&lt;h2&gt;Principles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Open standard:&lt;/strong&gt; the x402 protocol will never force reliance on a single party&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP Native:&lt;/strong&gt; x402 is meant to seamlessly complement the existing HTTP request made by traditional web services, it should not mandate additional requests outside the scope of a typical client / server flow.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chain and token agnostic:&lt;/strong&gt; we welcome contributions that add support for new chains, signing standards, or schemes, so long as they meet our acceptance criteria laid out in &lt;a href="https://github.com/coinbase/x402/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trust minimizing:&lt;/strong&gt; all payment schemes must not allow for the facilitator or resource server to move funds, other than in accordance with client intentions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy to use:&lt;/strong&gt; x402 needs to be 10x better than existing ways to pay on the internet. This means abstracting as many details of crypto as possible away from the client and resource server, and into the facilitator. This means the client/server should not need to think about gas, rpc, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;p&gt;The x402 ecosystem is growing! Check out our &lt;a href="https://x402.org/ecosystem"&gt;ecosystem page&lt;/a&gt; to see projects building with x402, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Client-side integrations&lt;/li&gt; 
 &lt;li&gt;Services and endpoints&lt;/li&gt; 
 &lt;li&gt;Ecosystem infrastructure and tooling&lt;/li&gt; 
 &lt;li&gt;Learning and community resources&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Want to add your project to the ecosystem? See our &lt;a href="https://github.com/coinbase/x402/tree/main/typescript/site#adding-your-project-to-the-ecosystem"&gt;demo site README&lt;/a&gt; for detailed instructions on how to submit your project.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Roadmap:&lt;/strong&gt; see &lt;a href="https://github.com/coinbase/x402/raw/main/ROADMAP.md"&gt;ROADMAP.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Terms:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;resource&lt;/code&gt;: Something on the internet. This could be a webpage, file server, RPC service, API, any resource on the internet that accepts HTTP / HTTPS requests.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;client&lt;/code&gt;: An entity wanting to pay for a resource.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;facilitator server&lt;/code&gt;: A server that facilitates verification and execution of on-chain payments.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resource server&lt;/code&gt;: An HTTP server that provides an API or other resource for a client.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technical Goals:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Permissionless and secure for clients and servers&lt;/li&gt; 
 &lt;li&gt;Gasless for client and resource servers&lt;/li&gt; 
 &lt;li&gt;Minimal integration for the resource server and client (1 line for the server, 1 function for the client)&lt;/li&gt; 
 &lt;li&gt;Ability to trade off speed of response for guarantee of payment&lt;/li&gt; 
 &lt;li&gt;Extensible to different payment flows and chains&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;V1 Protocol&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;x402&lt;/code&gt; protocol is a chain agnostic standard for payments on top of HTTP, leverage the existing &lt;code&gt;402 Payment Required&lt;/code&gt; HTTP status code to indicate that a payment is required for access to the resource.&lt;/p&gt; 
&lt;p&gt;It specifies:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;A schema for how servers can respond to clients to facilitate payment for a resource (&lt;code&gt;PaymentRequirements&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;A standard header &lt;code&gt;X-PAYMENT&lt;/code&gt; that is set by clients paying for resources&lt;/li&gt; 
 &lt;li&gt;A standard schema and encoding method for data in the &lt;code&gt;X-PAYMENT&lt;/code&gt; header&lt;/li&gt; 
 &lt;li&gt;A recommended flow for how payments should be verified and settled by a resource server&lt;/li&gt; 
 &lt;li&gt;A REST specification for how a resource server can perform verification and settlement against a remote 3rd party server (&lt;code&gt;facilitator&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;A specification for a &lt;code&gt;X-PAYMENT-RESPONSE&lt;/code&gt; header that can be used by resource servers to communicate blockchain transactions details to the client in their HTTP response&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;V1 Protocol Sequencing&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/coinbase/x402/main/static/x402-protocol-flow.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;The following outlines the flow of a payment using the &lt;code&gt;x402&lt;/code&gt; protocol. Note that steps (1) and (2) are optional if the client already knows the payment details accepted for a resource.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; makes an HTTP request to a &lt;code&gt;resource server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; responds with a &lt;code&gt;402 Payment Required&lt;/code&gt; status and a &lt;code&gt;Payment Required Response&lt;/code&gt; JSON object in the response body.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; selects one of the &lt;code&gt;paymentRequirements&lt;/code&gt; returned by the server response and creates a &lt;code&gt;Payment Payload&lt;/code&gt; based on the &lt;code&gt;scheme&lt;/code&gt; of the &lt;code&gt;paymentRequirements&lt;/code&gt; they have selected.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; sends the HTTP request with the &lt;code&gt;X-PAYMENT&lt;/code&gt; header containing the &lt;code&gt;Payment Payload&lt;/code&gt; to the resource server.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; verifies the &lt;code&gt;Payment Payload&lt;/code&gt; is valid either via local verification or by POSTing the &lt;code&gt;Payment Payload&lt;/code&gt; and &lt;code&gt;Payment Requirements&lt;/code&gt; to the &lt;code&gt;/verify&lt;/code&gt; endpoint of a &lt;code&gt;facilitator server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; performs verification of the object based on the &lt;code&gt;scheme&lt;/code&gt; and &lt;code&gt;network&lt;/code&gt; of the &lt;code&gt;Payment Payload&lt;/code&gt; and returns a &lt;code&gt;Verification Response&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If the &lt;code&gt;Verification Response&lt;/code&gt; is valid, the resource server performs the work to fulfill the request. If the &lt;code&gt;Verification Response&lt;/code&gt; is invalid, the resource server returns a &lt;code&gt;402 Payment Required&lt;/code&gt; status and a &lt;code&gt;Payment Required Response&lt;/code&gt; JSON object in the response body.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; either settles the payment by interacting with a blockchain directly, or by POSTing the &lt;code&gt;Payment Payload&lt;/code&gt; and &lt;code&gt;Payment PaymentRequirements&lt;/code&gt; to the &lt;code&gt;/settle&lt;/code&gt; endpoint of a &lt;code&gt;facilitator server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; submits the payment to the blockchain based on the &lt;code&gt;scheme&lt;/code&gt; and &lt;code&gt;network&lt;/code&gt; of the &lt;code&gt;Payment Payload&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; waits for the payment to be confirmed on the blockchain.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; returns a &lt;code&gt;Payment Execution Response&lt;/code&gt; to the resource server.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; returns a &lt;code&gt;200 OK&lt;/code&gt; response to the &lt;code&gt;Client&lt;/code&gt; with the resource they requested as the body of the HTTP response, and a &lt;code&gt;X-PAYMENT-RESPONSE&lt;/code&gt; header containing the &lt;code&gt;Settlement Response&lt;/code&gt; as Base64 encoded JSON if the payment was executed successfully.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Type Specifications&lt;/h3&gt; 
&lt;h4&gt;Data types&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Payment Required Response&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Version of the x402 payment protocol
  x402Version: int,

  // List of payment requirements that the resource server accepts. A resource server may accept on multiple chains, or in multiple currencies.
  accepts: [paymentRequirements]

  // Message from the resource server to the client to communicate errors in processing payment
  error: string
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;paymentRequirements&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Scheme of the payment protocol to use
  scheme: string;

  // Network of the blockchain to send payment on
  network: string;

  // Maximum amount required to pay for the resource in atomic units of the asset
  maxAmountRequired: uint256 as string;

  // URL of resource to pay for
  resource: string;

  // Description of the resource
  description: string;

  // MIME type of the resource response
  mimeType: string;

  // Output schema of the resource response
  outputSchema?: object | null;

  // Address to pay value to
  payTo: string;

  // Maximum time in seconds for the resource server to respond
  maxTimeoutSeconds: number;

  // Address of the EIP-3009 compliant ERC20 contract
  asset: string;

  // Extra information about the payment details specific to the scheme
  // For `exact` scheme on a EVM network, expects extra to contain the records `name` and `version` pertaining to asset
  extra: object | null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Payment Payload&lt;/code&gt;&lt;/strong&gt; (included as the &lt;code&gt;X-PAYMENT&lt;/code&gt; header in base64 encoded json)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Version of the x402 payment protocol
  x402Version: number;

  // scheme is the scheme value of the accepted `paymentRequirements` the client is using to pay
  scheme: string;

  // network is the network id of the accepted `paymentRequirements` the client is using to pay
  network: string;

  // payload is scheme dependent
  payload: &amp;lt;scheme dependent&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Facilitator Types &amp;amp; Interface&lt;/h4&gt; 
&lt;p&gt;A &lt;code&gt;facilitator server&lt;/code&gt; is a 3rd party service that can be used by a &lt;code&gt;resource server&lt;/code&gt; to verify and settle payments, without the &lt;code&gt;resource server&lt;/code&gt; needing to have access to a blockchain node or wallet.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;POST /verify&lt;/strong&gt;. Verify a payment with a supported scheme and network:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Request body JSON: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  x402Version: number;
  paymentHeader: string;
  paymentRequirements: paymentRequirements;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Response: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  isValid: boolean;
  invalidReason: string | null;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;POST /settle&lt;/strong&gt;. Settle a payment with a supported scheme and network:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Request body JSON:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json5"&gt;{
  x402Version: number;
  paymentHeader: string;
  paymentRequirements: paymentRequirements;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Response:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Whether the payment was successful
  success: boolean;

  // Error message from the facilitator server
  error: string | null;

  // Transaction hash of the settled payment
  txHash: string | null;

  // Network id of the blockchain the payment was settled on
  networkId: string | null;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;GET /supported&lt;/strong&gt;. Get supported payment schemes and networks:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Response: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  kinds: [
    {
      "scheme": string,
      "network": string,
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Schemes&lt;/h3&gt; 
&lt;p&gt;A scheme is a logical way of moving money.&lt;/p&gt; 
&lt;p&gt;Blockchains allow for a large number of flexible ways to move money. To help facilitate an expanding number of payment use cases, the &lt;code&gt;x402&lt;/code&gt; protocol is extensible to different ways of settling payments via its &lt;code&gt;scheme&lt;/code&gt; field.&lt;/p&gt; 
&lt;p&gt;Each payment scheme may have different operational functionality depending on what actions are necessary to fulfill the payment. For example &lt;code&gt;exact&lt;/code&gt;, the first scheme shipping as part of the protocol, would have different behavior than &lt;code&gt;upto&lt;/code&gt;. &lt;code&gt;exact&lt;/code&gt; transfers a specific amount (ex: pay $1 to read an article), while a theoretical &lt;code&gt;upto&lt;/code&gt; would transfer up to an amount, based on the resources consumed during a request (ex: generating tokens from an LLM).&lt;/p&gt; 
&lt;p&gt;See &lt;code&gt;specs/schemes&lt;/code&gt; for more details on schemes, and see &lt;code&gt;specs/schemes/exact/scheme_exact_evm.md&lt;/code&gt; to see the first proposed scheme for exact payment on EVM chains.&lt;/p&gt; 
&lt;h3&gt;Schemes vs Networks&lt;/h3&gt; 
&lt;p&gt;Because a scheme is a logical way of moving money, the way a scheme is implemented can be different for different blockchains. (ex: the way you need to implement &lt;code&gt;exact&lt;/code&gt; on Ethereum is very different from the way you need to implement &lt;code&gt;exact&lt;/code&gt; on Solana).&lt;/p&gt; 
&lt;p&gt;Clients and facilitators must explicitly support different &lt;code&gt;(scheme, network)&lt;/code&gt; pairs in order to be able to create proper payloads and verify / settle payments.&lt;/p&gt; 
&lt;h2&gt;Running example&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Requirements:&lt;/strong&gt; Node.js v24 or higher&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;From &lt;code&gt;examples/typescript&lt;/code&gt; run &lt;code&gt;pnpm install&lt;/code&gt; and &lt;code&gt;pnpm build&lt;/code&gt; to ensure all dependent packages and examples are setup.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select a server, i.e. express, and &lt;code&gt;cd&lt;/code&gt; into that example. Add your server's ethereum address to get paid to into the &lt;code&gt;.env&lt;/code&gt; file, and then run &lt;code&gt;pnpm dev&lt;/code&gt; in that directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select a client, i.e. axios, and &lt;code&gt;cd&lt;/code&gt; into that example. Add your private key for the account making payments into the &lt;code&gt;.env&lt;/code&gt; file, and then run &lt;code&gt;pnpm dev&lt;/code&gt; in that directory.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You should see activities in the client terminal, which will display a weather report.&lt;/p&gt; 
&lt;h2&gt;Running tests&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate to the typescript directory: &lt;code&gt;cd typescript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies: &lt;code&gt;pnpm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run the unit tests: &lt;code&gt;pnpm test&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This will run the unit tests for the x402 packages.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>exa-labs/exa-mcp-server</title>
      <link>https://github.com/exa-labs/exa-mcp-server</link>
      <description>&lt;p&gt;Exa MCP for web search and web crawling!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Exa MCP Server üîç&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/exa-mcp-server"&gt;&lt;img src="https://badge.fury.io/js/exa-mcp-server.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://smithery.ai/server/exa"&gt;&lt;img src="https://smithery.ai/badge/exa" alt="smithery badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üÜï &lt;code&gt;exa-code&lt;/code&gt;: fast, efficient web context for coding agents&lt;/h2&gt; 
&lt;p&gt;Vibe coding should never have a bad vibe. &lt;code&gt;exa-code&lt;/code&gt; is a huge step towards coding agents that never hallucinate.&lt;/p&gt; 
&lt;p&gt;When your coding agent makes a search query, &lt;code&gt;exa-code&lt;/code&gt; searches over billions of Github repos, docs pages, Stackoverflow posts, and more, to find the perfect, token-efficient context that the agent needs to code correctly. It's powered by the Exa search engine.&lt;/p&gt; 
&lt;p&gt;Examples of queries you can make with &lt;code&gt;exa-code&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;use Exa search in python and make sure content is always livecrawled&lt;/li&gt; 
 &lt;li&gt;use correct syntax for vercel ai sdk to call gpt-5 nano asking it how are you&lt;/li&gt; 
 &lt;li&gt;how to set up a reproducible Nix Rust development environment&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;‚ú® Works with Cursor and Claude Code!&lt;/strong&gt; Use the HTTP-based configuration format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "exa": {
      "type": "http",
      "url": "https://mcp.exa.ai/mcp",
      "headers": {
        "Remove-Me": "Disable web_search_exa tool if you're just coding. To 100% call exa-code, say 'use exa-code'."
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may include your exa api key in the url like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://mcp.exa.ai/mcp?exaApiKey=YOUREXAKEY
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may whitelist specific tools in the url with the &lt;code&gt;enabledTools&lt;/code&gt; parameter which expects a url encoded array strings like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://mcp.exa.ai/mcp?exaApiKey=YOUREXAKEY&amp;amp;enabledTools=%5B%22crawling_exa%ss%5D
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use &lt;code&gt;exa-code&lt;/code&gt; through &lt;a href="https://smithery.ai/server/exa"&gt;Smithery&lt;/a&gt; without an Exa API key.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;A Model Context Protocol (MCP) server that connects AI assistants like Claude to Exa AI's search capabilities, including web search, research tools, and our new code search feature.&lt;/p&gt; 
&lt;h2&gt;Remote Exa MCP üåê&lt;/h2&gt; 
&lt;p&gt;Connect directly to Exa's hosted MCP server (instead of running it locally).&lt;/p&gt; 
&lt;h3&gt;Remote Exa MCP URL&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;https://mcp.exa.ai/mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Claude Desktop Configuration for Remote MCP&lt;/h3&gt; 
&lt;p&gt;Add this to your Claude Desktop configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "exa": {
      "command": "npx",
      "args": [
        "-y",
        "mcp-remote",
        "https://mcp.exa.ai/mcp"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Cursor and Claude Code Configuration for Remote MCP&lt;/h3&gt; 
&lt;p&gt;For Cursor and Claude Code, use this HTTP-based configuration format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "exa": {
      "type": "http",
      "url": "https://mcp.exa.ai/mcp",
      "headers": {}
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;NPM Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g exa-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using Claude Code&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;claude mcp add exa -e EXA_API_KEY=YOUR_API_KEY -- npx -y exa-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using Exa MCP through Smithery&lt;/h3&gt; 
&lt;p&gt;To install the Exa MCP server via &lt;a href="https://smithery.ai/server/exa"&gt;Smithery&lt;/a&gt;, head over to:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://smithery.ai/server/exa"&gt;smithery.ai/server/exa&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Configuration ‚öôÔ∏è&lt;/h2&gt; 
&lt;h3&gt;1. Configure Claude Desktop to recognize the Exa MCP server&lt;/h3&gt; 
&lt;p&gt;You can find claude_desktop_config.json inside the settings of Claude Desktop app:&lt;/p&gt; 
&lt;p&gt;Open the Claude Desktop app and enable Developer Mode from the top-left menu bar.&lt;/p&gt; 
&lt;p&gt;Once enabled, open Settings (also from the top-left menu bar) and navigate to the Developer Option, where you'll find the Edit Config button. Clicking it will open the claude_desktop_config.json file, allowing you to make the necessary edits.&lt;/p&gt; 
&lt;p&gt;OR (if you want to open claude_desktop_config.json from terminal)&lt;/p&gt; 
&lt;h4&gt;For macOS:&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open your Claude Desktop configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;code ~/Library/Application\ Support/Claude/claude_desktop_config.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;For Windows:&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open your Claude Desktop configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;code %APPDATA%\Claude\claude_desktop_config.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Add the Exa server configuration:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "exa": {
      "command": "npx",
      "args": ["-y", "exa-mcp-server"],
      "env": {
        "EXA_API_KEY": "your-api-key-here"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace &lt;code&gt;your-api-key-here&lt;/code&gt; with your actual Exa API key from &lt;a href="https://dashboard.exa.ai/api-keys"&gt;dashboard.exa.ai/api-keys&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;3. Available Tools &amp;amp; Tool Selection&lt;/h3&gt; 
&lt;p&gt;The Exa MCP server includes powerful tools for developers and researchers:&lt;/p&gt; 
&lt;h4&gt;üî• &lt;strong&gt;Featured: Code Search Tool&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;get_code_context_exa&lt;/strong&gt;: üÜï &lt;strong&gt;NEW!&lt;/strong&gt; Search and get relevant code snippets, examples, and documentation from open source libraries, GitHub repositories, and programming frameworks. Perfect for finding up-to-date code documentation, implementation examples, API usage patterns, and best practices from real codebases.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üåê &lt;strong&gt;Other Available Tools&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;web_search_exa&lt;/strong&gt;: Performs real-time web searches with optimized results and content extraction.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;company_research&lt;/strong&gt;: Comprehensive company research tool that crawls company websites to gather detailed information about businesses.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;crawling&lt;/strong&gt;: Extracts content from specific URLs, useful for reading articles, PDFs, or any web page when you have the exact URL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;linkedin_search&lt;/strong&gt;: Search LinkedIn for companies and people using Exa AI. Simply include company names, person names, or specific LinkedIn URLs in your query.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;deep_researcher_start&lt;/strong&gt;: Start a smart AI researcher for complex questions. The AI will search the web, read many sources, and think deeply about your question to create a detailed research report.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;deep_researcher_check&lt;/strong&gt;: Check if your research is ready and get the results. Use this after starting a research task to see if it's done and get your comprehensive report.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can choose which tools to enable by adding the &lt;code&gt;--tools&lt;/code&gt; parameter to your Claude Desktop configuration:&lt;/p&gt; 
&lt;h4&gt;üíª &lt;strong&gt;Setup for Code Search Only&lt;/strong&gt; (Recommended for Developers)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "exa": {
      "command": "npx",
      "args": [
        "-y",
        "exa-mcp-server",
        "--tools=get_code_context_exa,web_search_exa"
      ],
      "env": {
        "EXA_API_KEY": "your-api-key-here"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Specify which tools to enable:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "exa": {
      "command": "npx",
      "args": [
        "-y",
        "exa-mcp-server",
        "--tools=get_code_context_exa,web_search_exa,company_research,crawling,linkedin_search,deep_researcher_start,deep_researcher_check"
      ],
      "env": {
        "EXA_API_KEY": "your-api-key-here"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For enabling multiple tools, use a comma-separated list:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "exa": {
      "command": "npx",
      "args": [
        "-y",
        "exa-mcp-server",
        "--tools=get_code_context_exa,web_search_exa,company_research,crawling,linkedin_search,deep_researcher_start,deep_researcher_check"
      ],
      "env": {
        "EXA_API_KEY": "your-api-key-here"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you don't specify any tools, all tools enabled by default will be used.&lt;/p&gt; 
&lt;h3&gt;4. Restart Claude Desktop&lt;/h3&gt; 
&lt;p&gt;For the changes to take effect:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Completely quit Claude Desktop (not just close the window)&lt;/li&gt; 
 &lt;li&gt;Start Claude Desktop again&lt;/li&gt; 
 &lt;li&gt;Look for the icon to verify the Exa server is connected&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Using via NPX&lt;/h2&gt; 
&lt;p&gt;If you prefer to run the server directly, you can use npx:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run with all tools enabled by default
npx exa-mcp-server

# Enable specific tools only
npx exa-mcp-server --tools=web_search_exa

# Enable multiple tools
npx exa-mcp-server --tools=web_search_exa,get_code_context_exa

# List all available tools
npx exa-mcp-server --list-tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;p&gt;Built with ‚ù§Ô∏è by team Exa&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pipeshub-ai/pipeshub-ai</title>
      <link>https://github.com/pipeshub-ai/pipeshub-ai</link>
      <description>&lt;p&gt;The OpenSource Alternative to Glean's Workplace AI&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name="readme-top"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2 align="center"&gt; &lt;a href="https://www.pipeshub.com/"&gt; &lt;img width="50%" src="https://raw.githubusercontent.com/pipeshub-ai/media-assets/refs/heads/main/images/pipeshub-logo.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/h2&gt; 
&lt;p align="center"&gt;&lt;/p&gt; 
&lt;p align="center"&gt;Workplace AI Platform&lt;/p&gt; 
&lt;p align="center" style="display: flex; justify-content: center; gap: 20px; align-items: center;"&gt; &lt;a href="https://trendshift.io/repositories/14618" target="_blank"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/14618" alt="pipeshub-ai%2Fpipeshub-ai | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt; &lt;/a&gt; 
 &lt;!--Links in Readme--&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;a href="https://docs.pipeshub.com/" target="_blank"&gt; &lt;img src="https://img.shields.io/badge/Docs-View-informational?style=flat-square&amp;amp;logo=readthedocs&amp;amp;logoColor=white" alt="Docs" style="height:28px;" /&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp; &lt;a href="https://discord.com/invite/K5RskzJBm2" target="_blank"&gt; &lt;img src="https://img.shields.io/discord/1359557598222745670?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Discord" style="height:28px;" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/pipeshub-ai/pipeshub-ai/stargazers"&gt; &lt;img src="https://img.shields.io/github/stars/pipeshub-ai/pipeshub-ai?style=social" alt="GitHub Repo stars" /&gt; &lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/pipeshub-ai/pipeshub-ai/network/members"&gt; &lt;img src="https://img.shields.io/github/forks/pipeshub-ai/pipeshub-ai?style=social" alt="GitHub forks" /&gt; &lt;/a&gt; &amp;nbsp; &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt; &lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License: Apache-2.0" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/pipeshub-ai/pipeshub-ai/issues"&gt; &lt;img src="https://img.shields.io/github/issues/pipeshub-ai/pipeshub-ai" alt="GitHub issues" /&gt; &lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/pipeshub-ai/pipeshub-ai/pulls"&gt; &lt;img src="https://img.shields.io/github/issues-pr/pipeshub-ai/pipeshub-ai" alt="GitHub pull requests" /&gt; &lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/pipeshub-ai/pipeshub-ai/graphs/contributors"&gt; &lt;img src="https://img.shields.io/github/contributors/pipeshub-ai/pipeshub-ai" alt="Contributors" /&gt; &lt;/a&gt; &amp;nbsp; &lt;img src="https://img.shields.io/github/last-commit/pipeshub-ai/pipeshub-ai" alt="Last commit" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://x.com/PipesHub"&gt; &lt;img src="https://img.shields.io/twitter/follow/PipesHub?style=social" alt="Twitter Follow" /&gt; &lt;/a&gt; &lt;a href="https://www.linkedin.com/company/pipeshub/" target="_blank"&gt; &lt;img src="https://img.shields.io/badge/LinkedIn-Follow-blue?logo=linkedin&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Follow on LinkedIn" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;!--Intro--&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/pipeshub-ai/pipeshub-ai"&gt;PipesHub&lt;/a&gt;&lt;/strong&gt; is the workplace AI platform for enterprises to improve how businesses operate and help employees and AI agents work more efficiently. In most companies, important work data is spread across multiple apps like Google Workspace, Microsoft 365, Slack, Jira, Confluence, and more. PipesHub AI helps you quickly find the right information using natural language search‚Äîjust like Google. It can answer questions, provide insights, and more. The platform not only delivers the most relevant results but also shows where the information came from, with proper citations, using Knowledge Graphs and Page Ranking. Beyond search, our platform allows enterprises to create custom apps and AI agents using a No-Code interface.&lt;/p&gt; 
&lt;h2&gt;High Level Architecture Diagram&lt;/h2&gt; 
&lt;img width="800" height="1200" src="https://raw.githubusercontent.com/pipeshub-ai/media-assets/refs/heads/main/images/ad.jpg" alt="PipesHub System Architecture" /&gt; 
&lt;h2&gt;Spotlight Features&lt;/h2&gt; 
&lt;h4&gt;Your Workplace, Our AI.&lt;/h4&gt; 
&lt;p align="center"&gt; &lt;a href="https://youtu.be/nQcMHxORWtY"&gt; &lt;img src="https://img.youtube.com/vi/nQcMHxORWtY/0.jpg" alt="PipesHub Workplace AI" width="600" style="border-radius:10px" /&gt; &lt;br /&gt; &lt;img src="https://img.shields.io/badge/Watch%20Video-FF0000?style=plastic&amp;amp;logo=youtube&amp;amp;logoColor=white" alt="Watch Video" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Unmatched Value of PipesHub&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Choose Any Model, Your Way&lt;/strong&gt; ‚Äì Bring your preferred deep learning models for both indexing and inference with total flexibility.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-Time or Scheduled Indexing&lt;/strong&gt; ‚Äì Index data as it flows or schedule it to run exactly when you need.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Access-Driven Visibility&lt;/strong&gt; ‚Äì Source-level permissions ensure every document is shown only to those who are authorized.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built-In Data Security&lt;/strong&gt; ‚Äì Sensitive information stays secure, always..&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Deploy Anywhere&lt;/strong&gt; ‚Äì Fully supports both on-premise and cloud-based deployments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Knowledge Graph Backbone&lt;/strong&gt; ‚Äì All data is seamlessly structured into a powerful knowledge graph.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise-Grade Connectors&lt;/strong&gt; ‚Äì Scalable, reliable, and built for secure access across your organization.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modular &amp;amp; Scalable Architecture&lt;/strong&gt; ‚Äì Every service is loosely coupled to scale independently and adapt to your needs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Connectors&lt;/h2&gt; 
&lt;p display: flex; flex-wrap: wrap; gap: 12px;&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/gdrive.png" alt="Google Drive" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/gmail.png" alt="Gmail" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/gcalendar.png" alt="Google Calendar" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/gdocs.png" alt="Google Docs" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/gsheets.png" alt="Google Sheets" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/gslides.png" alt="Google Slides" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/gforms.png" alt="Google Forms" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/gmeet.png" alt="Google Meet" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/one-drive.png" alt="OneDrive" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/sharepoint.png" alt="SharePoint Online" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/outlook.png" alt="Outlook Calendar" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/teams.png" alt="Microsoft Teams" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/one-note.png" alt="OneNote" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/jira.png" alt="Jira" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/confluence.png" alt="Confluence" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/slack.png" alt="Slack" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/notion.png" alt="Notion" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/dropbox.png" alt="Dropbox" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/linear.png" alt="Linear" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/github.png" alt="GitHub" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/zendesk.png" alt="Zendesk" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/airtable.png" alt="Airtable" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/s3.png" alt="S3" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/azure-blob.png" alt="Azure Blob" width="50" height="50" /&gt; &lt;img src="https://raw.githubusercontent.com/pipeshub-ai/documentation/refs/heads/main/logo/box.png" alt="Box" width="50" height="50" /&gt; &lt;/p&gt; 
&lt;h2&gt;File Formats Supported&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;PDF(including scanned PDFs)&lt;/li&gt; 
 &lt;li&gt;Docx/Doc&lt;/li&gt; 
 &lt;li&gt;XLSX/XLS&lt;/li&gt; 
 &lt;li&gt;PPTX/PPT&lt;/li&gt; 
 &lt;li&gt;CSV&lt;/li&gt; 
 &lt;li&gt;Markdown&lt;/li&gt; 
 &lt;li&gt;HTML&lt;/li&gt; 
 &lt;li&gt;Text&lt;/li&gt; 
 &lt;li&gt;Google docs, slides, sheets&lt;/li&gt; 
 &lt;li&gt;Images&lt;/li&gt; 
 &lt;li&gt;Audio&lt;/li&gt; 
 &lt;li&gt;Video&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;RoadMap&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code Search&lt;/li&gt; 
 &lt;li&gt;Workplace AI Agents&lt;/li&gt; 
 &lt;li&gt;MCP&lt;/li&gt; 
 &lt;li&gt;APIs and SDKs&lt;/li&gt; 
 &lt;li&gt;Personalized Search&lt;/li&gt; 
 &lt;li&gt;Highly available and scalable Kubernetes deployment&lt;/li&gt; 
 &lt;li&gt;PageRank&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üöÄ Deployment Guide&lt;/h2&gt; 
&lt;p&gt;PipesHub ‚Äî the Workplace AI Platform ‚Äî can be run locally or deployed on the cloud using Docker Compose.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;üì¶ Developer Deployment Build&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone the repository
git clone https://github.com/pipeshub-ai/pipeshub-ai.git

# üìÅ Navigate to the deployment folder
cd pipeshub-ai/deployment/docker-compose

# Set Optional Environment Variables
&amp;gt; üëâ Set Environment Variables for secrets, passwords, and the public URLs of the **Frontend** and **Connector** services  
&amp;gt; _(Required for webhook notifications and real-time updates)_
&amp;gt; Refer to env.template

# üöÄ Start the development deployment with build
docker compose -f docker-compose.dev.yml -p pipeshub-ai up --build -d

# üõë To stop the services
docker compose -f docker-compose.dev.yml -p pipeshub-ai down
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üì¶ Production Deployment&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone the repository
git clone https://github.com/pipeshub-ai/pipeshub-ai.git

# üìÅ Navigate to the deployment folder
cd pipeshub-ai/deployment/docker-compose

# Set Environment Variables
&amp;gt; üëâ Set Environment Variables for secrets, passwords, and the public URLs of the **Frontend** and **Connector** services
&amp;gt; _(Required for webhook notifications and real-time updates)_
&amp;gt; Refer to env.template

# üöÄ Start the production deployment
docker compose -f docker-compose.prod.yml -p pipeshub-ai up -d

# üõë To stop the services
docker compose -f docker-compose.prod.yml -p pipeshub-ai down
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üë• Contributing&lt;/h2&gt; 
&lt;p&gt;Want to join our community of developers? Please check out our &lt;a href="https://github.com/pipeshub-ai/pipeshub-ai/raw/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for more details on how to set up the development environment, our coding standards, and the contribution workflow.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;a href="https://star-history.com/#pipeshub-ai/pipeshub-ai&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=pipeshub-ai/pipeshub-ai&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=pipeshub-ai/pipeshub-ai&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=pipeshub-ai/pipeshub-ai&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>tldraw/tldraw</title>
      <link>https://github.com/tldraw/tldraw</link>
      <description>&lt;p&gt;very good whiteboard SDK / infinite canvas SDK&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tldraw&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://deepwiki.com/tldraw/tldraw"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Welcome to the public monorepo for &lt;a href="https://github.com/tldraw/tldraw"&gt;tldraw&lt;/a&gt;. tldraw is a library for creating infinite canvas experiences in React. It's the software behind the digital whiteboard &lt;a href="https://tldraw.com"&gt;tldraw.com&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Read the docs and learn more at &lt;a href="https://tldraw.dev"&gt;tldraw.dev&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Learn about &lt;a href="https://github.com/tldraw/tldraw#License"&gt;our license&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://tldraw.dev/#pricing"&gt;Click here&lt;/a&gt; to learn about our license and pricing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i tldraw
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-tsx"&gt;import { Tldraw } from 'tldraw'
import 'tldraw/tldraw.css'

export default function App() {
	return (
		&amp;lt;div style={{ position: 'fixed', inset: 0 }}&amp;gt;
			&amp;lt;Tldraw /&amp;gt;
		&amp;lt;/div&amp;gt;
	)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Learn more at &lt;a href="https://tldraw.dev"&gt;tldraw.dev&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Local development&lt;/h2&gt; 
&lt;p&gt;The local development server will run our examples app. The basic example will show any changes you've made to the codebase.&lt;/p&gt; 
&lt;p&gt;To run the local development server, first clone this repo.&lt;/p&gt; 
&lt;p&gt;Enable &lt;a href="https://nodejs.org/api/corepack.html"&gt;corepack&lt;/a&gt; to make sure you have the right version of &lt;code&gt;yarn&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i -g corepack
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start the local development server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the example project at &lt;code&gt;localhost:5420&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Tips for AIs&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Are you an AI agent?&lt;/strong&gt; If so, this monorepo has special &lt;code&gt;CONTEXT.md&lt;/code&gt; files found throughout the repository that you can use to quickly build context while you work. Use your own tools to find and read these files, or use our helpful &lt;code&gt;context&lt;/code&gt; script to locate and log the contents of the most relevant files.&lt;/p&gt; 
&lt;p&gt;To get started quickly, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn context
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will find and display the nearest CONTEXT.md file to help you understand the codebase. The &lt;code&gt;context&lt;/code&gt; script supports several options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn context&lt;/code&gt; - Show path to nearest CONTEXT.md from current directory&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn context ./foo/bar/baz.ts&lt;/code&gt; - Show path to nearest CONTEXT.md for a specific file or directory&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn context -v&lt;/code&gt; or &lt;code&gt;--verbose&lt;/code&gt; - Show full content of nearest CONTEXT.md&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn context -r&lt;/code&gt; or &lt;code&gt;--recursive&lt;/code&gt; - Find all CONTEXT.md files in the repository&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The tldraw SDK is provided under the &lt;a href="https://github.com/tldraw/tldraw/raw/main/LICENSE.md"&gt;tldraw license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can use the tldraw SDK in commercial or non-commercial projects so long as you preserve the "Made with tldraw" watermark on the canvas. To remove the watermark, you can purchase a &lt;a href="https://tldraw.dev#pricing"&gt;business license&lt;/a&gt;. Visit &lt;a href="https://tldraw.dev"&gt;tldraw.dev&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2024-present tldraw Inc. The tldraw name and logo are trademarks of tldraw. Please see our &lt;a href="https://github.com/tldraw/tldraw/raw/main/TRADEMARKS.md"&gt;trademark guidelines&lt;/a&gt; for info on acceptable usage.&lt;/p&gt; 
&lt;h2&gt;Distributions&lt;/h2&gt; 
&lt;p&gt;You can find tldraw on npm &lt;a href="https://www.npmjs.com/package/@tldraw/tldraw?activeTab=versions"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href="https://github.com/tldraw/tldraw/raw/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;. Found a bug? Please &lt;a href="https://github.com/tldraw/tldraw/issues/new"&gt;submit an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Have questions, comments or feedback? &lt;a href="https://discord.tldraw.com/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=sociallink"&gt;Join our discord&lt;/a&gt;. For the latest news and release notes, visit &lt;a href="https://tldraw.dev"&gt;tldraw.dev&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/tldraw/tldraw/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=tldraw/tldraw&amp;amp;max=400&amp;amp;columns=20" width="100%" /&gt; &lt;/a&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://star-history.com/#tldraw/tldraw"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=tldraw/tldraw&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=tldraw/tldraw&amp;amp;type=Date" /&gt; 
  &lt;img src="https://api.star-history.com/svg?repos=tldraw/tldraw&amp;amp;type=Date" alt="Star History Chart" width="100%" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;Find us on Twitter/X at &lt;a href="https://twitter.com/tldraw"&gt;@tldraw&lt;/a&gt;. You can contact us by email at &lt;a href="mailto:hello@tldraw.com"&gt;hello@tldraw.com&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CapSoftware/Cap</title>
      <link>https://github.com/CapSoftware/Cap</link>
      <description>&lt;p&gt;Open source Loom alternative. Beautiful, shareable screen recordings.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;img width="150" height="150" src="https://github.com/CapSoftware/Cap/raw/main/apps/desktop/src-tauri/icons/Square310x310Logo.png" alt="Logo" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;&lt;b&gt;Cap&lt;/b&gt;&lt;/h1&gt; 
&lt;p align="center"&gt; The open source Loom alternative. &lt;br /&gt; &lt;a href="https://cap.so"&gt;&lt;strong&gt;Cap.so ¬ª&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;b&gt;Downloads for &lt;/b&gt; &lt;a href="https://cap.so/download"&gt;macOS &amp;amp; Windows&lt;/a&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://console.algora.io/org/CapSoftware/bounties?status=open"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2FCapSoftware%2Fbounties%3Fstatus%3Dopen" alt="Open Bounties" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cap is the open source alternative to Loom. It's a video messaging tool that allows you to record, edit and share videos in seconds.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/CapSoftware/Cap/refs/heads/main/apps/web/public/landing-cover.png" /&gt; 
&lt;h1&gt;Self Hosting&lt;/h1&gt; 
&lt;p&gt;Cap Web is available to self-host using Docker or Railway, see our &lt;a href="https://cap.so/docs/self-hosting"&gt;self-hosting docs&lt;/a&gt; to learn more. You can also use the button below to deploy Cap Web to Railway:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://railway.com/new/template/PwpGcf"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cap Desktop can connect to your self-hosted Cap Web instance regardless of if you build it yourself or &lt;a href="https://cap.so/download"&gt;download from our website&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Monorepo App Architecture&lt;/h1&gt; 
&lt;p&gt;We use a combination of Rust, React (Next.js), TypeScript, Tauri, Drizzle (ORM), MySQL, TailwindCSS throughout this Turborepo powered monorepo.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A note about database: The codebase is currently designed to work with MySQL only. MariaDB or other compatible databases might partially work but are not officially supported.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Apps:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;desktop&lt;/code&gt;: A &lt;a href="https://tauri.app"&gt;Tauri&lt;/a&gt; (Rust) app, using &lt;a href="https://start.solidjs.com"&gt;SolidStart&lt;/a&gt; on the frontend.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;web&lt;/code&gt;: A &lt;a href="https://nextjs.org"&gt;Next.js&lt;/a&gt; web app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Packages:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ui&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; Shared component library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;utils&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; Shared utility library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tsconfig&lt;/code&gt;: Shared &lt;code&gt;tsconfig&lt;/code&gt; configurations used throughout the monorepo.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;database&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; and &lt;a href="https://orm.drizzle.team/"&gt;Drizzle ORM&lt;/a&gt; Shared database library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;config&lt;/code&gt;: &lt;code&gt;eslint&lt;/code&gt; configurations (includes &lt;code&gt;eslint-config-next&lt;/code&gt;, &lt;code&gt;eslint-config-prettier&lt;/code&gt; other configs used throughout the monorepo).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;License:&lt;/h3&gt; 
&lt;p&gt;Portions of this software are licensed as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All code residing in the &lt;code&gt;cap-camera*&lt;/code&gt; and &lt;code&gt;scap-*&lt;/code&gt; families of crates is licensed under the MIT License (see &lt;a href="https://github.com/CapSoftware/Cap/raw/main/licenses/LICENSE-MIT"&gt;licenses/LICENSE-MIT&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;All third party components are licensed under the original license provided by the owner of the applicable component&lt;/li&gt; 
 &lt;li&gt;All other content not mentioned above is available under the AGPLv3 license as defined in &lt;a href="https://github.com/CapSoftware/Cap/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/CapSoftware/Cap/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information. This guide is a work in progress, and is updated regularly as the app matures.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mediar-ai/screenpipe</title>
      <link>https://github.com/mediar-ai/screenpipe</link>
      <description>&lt;p&gt;AI app store powered by 24/7 desktop history. open source | 100% local | dev friendly | 24/7 screen, mic recording&lt;/p&gt;&lt;hr&gt;&lt;img referrerpolicy="no-referrer-when-downgrade" src="https://static.scarf.sh/a.png?x-pxid=c3628864-a0cb-47a1-a822-2f936cff50b2" /&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/mediar-ai/screenpipe/main/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/mediar-ai/screenpipe/main/README-zh_CN.md"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/mediar-ai/screenpipe/main/README-ja.md"&gt;Êó•Êú¨Ë™û&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://screenpi.pe"&gt; &lt;img src="https://github.com/user-attachments/assets/d3b1de26-c3c0-4c84-b9c4-b03213b97a30" alt="logo" width="200" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/11785" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/11785" alt="mediar-ai%2Fscreenpipe | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;!-- ScreenPipe Title and Subtitle --&gt; 
&lt;p align="center" style="font-family: 'Press Start 2P', monospace;"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;[ screenpipe ]&lt;/h1&gt; 
&lt;p align="center"&gt;AI app store powered by 24/7 desktop history&lt;/p&gt; 
&lt;p align="center"&gt;open source | 100% local | dev friendly | 24/7 screen, mic recording&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;!-- Slogan --&gt; 
&lt;p align="center" style="font-family: monospace;"&gt; &lt;code&gt;[ recording reality, one pixel at a time ]&lt;/code&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://screenpi.pe" target="_blank"&gt; &lt;img src="https://img.shields.io/badge/Download%20The-Desktop%20App-blue?style=for-the-badge" alt="Download the Desktop App" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.youtube.com/@mediar_ai" target="_blank"&gt; &lt;img alt="YouTube Channel Subscribers" src="https://img.shields.io/youtube/channel/subscribers/UCwjkpAsb70_mENKvy7hT5bw" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://discord.gg/dU9EBuw7Uq"&gt; &lt;img src="https://img.shields.io/discord/823813159592001537?color=5865F2&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Join us on Discord" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/screen_pipe"&gt;&lt;img alt="X account" src="https://img.shields.io/twitter/url/https/twitter.com/diffuserslib.svg?style=social&amp;amp;label=Follow%20%40screen_pipe" /&gt;&lt;/a&gt; &lt;a href="https://console.algora.io/org/mediar-ai/bounties?status=completed"&gt; &lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2Fmediar-ai%2Fbounties%3Fstatus%3Dcompleted" alt="Rewarded Bounties" /&gt; &lt;/a&gt; &lt;a href="https://console.algora.io/org/mediar-ai/bounties?status=open"&gt; &lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2Fmediar-ai%2Fbounties%3Fstatus%3Dopen" alt="Open Bounties" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="1312" alt="Screenshot 2025-02-15 at 7 51 18‚ÄØPM" src="https://github.com/user-attachments/assets/5a9f29ce-69ae-463f-b338-186b8cdb2d12" /&gt; &lt;/p&gt;
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/dec2e07c-b3d5-46dd-9f36-c0c26a82c9fb" alt="image" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/628c6c01-a580-4b21-bce9-3e7b186914a4"&gt;https://github.com/user-attachments/assets/628c6c01-a580-4b21-bce9-3e7b186914a4&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/973ee8e5-5240-4d36-83fe-d38c53efe6a9"&gt;https://github.com/user-attachments/assets/973ee8e5-5240-4d36-83fe-d38c53efe6a9&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;em&gt;news&lt;/em&gt; üî•&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;[2025/07] &lt;a href="https://x.com/louis030195/status/1948745185178914929"&gt;we raised $2.8m to give AI hands to every desktop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[2025/03] introducing &lt;a href="https://github.com/mediar-ai/terminator"&gt;screenpipe terminator&lt;/a&gt;: playwright but for your desktop. the fastest and most reliable computer use SDK on the internet (100x faster, based on OS APIs instead of vision)&lt;/li&gt; 
 &lt;li&gt;[2025/02] we're throwing an &lt;a href="https://www.nosu.io/hackathons/screenpipe"&gt;hackathon&lt;/a&gt;, $12k in cash prizes, 28 Feb&lt;/li&gt; 
 &lt;li&gt;[2025/01] we're partnering with Different AI to bring you &lt;a href="https://github.com/different-ai/hypr-v0"&gt;financial automations based on your screen&lt;/a&gt; and &lt;a href="https://github.com/different-ai/file-organizer-2000"&gt;drop-in replacement for granola within obsidian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[2024/12] pipe store stripe integration: devs build cool shit - few lines of JS and make passive income (available Reddit agent, Timeline ...)&lt;/li&gt; 
 &lt;li&gt;[2024/11] &lt;a href="https://x.com/louis030195/status/1859628763425931479"&gt;screenpipe is number 1 github trending repo (again)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[2024/10] screenpipe has been backed by &lt;a href="https://f.inc/"&gt;Founders, Inc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[2024/09] &lt;a href="https://x.com/louis030195/status/1840859691754344483"&gt;screenpipe is number 1 github trending repo &amp;amp; on hackernews!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[2024/08] anyone can now &lt;a href="https://docs.screenpi.pe/plugins"&gt;create, share, install pipes&lt;/a&gt; (plugins) from the app interface based on a github repo/dir&lt;/li&gt; 
 &lt;li&gt;[2024/08] we're running bounties! contribute to screenpipe &amp;amp; make money, &lt;a href="https://github.com/mediar-ai/screenpipe/issues"&gt;check issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[2024/08] we released Apple &amp;amp; Windows Native OCR.&lt;/li&gt; 
 &lt;li&gt;[2024/07] &lt;strong&gt;we just launched the desktop app! &lt;a href="https://screenpi.pe"&gt;Download now!&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h1&gt;how it works?&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;we record everything 24/7, 100% locally, uses 10% CPU, 4 GB ram, 15 gb/m&lt;/li&gt; 
 &lt;li&gt;we index it into an api&lt;/li&gt; 
 &lt;li&gt;dev build ai apps w user's full context, desktop native, nextjs, publish, monetize&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/mediar-ai/screenpipe/main/content/diagram2.png" width="800" /&gt; 
&lt;img src="https://github.com/user-attachments/assets/da5b8583-550f-4a1f-b211-058e7869bc91" width="400" /&gt; 
&lt;h1&gt;why?&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;ai models are commoditized&lt;/li&gt; 
 &lt;li&gt;ai is as good as its context&lt;/li&gt; 
 &lt;li&gt;the most valuable context is all contained in your screen&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;get started&lt;/h2&gt; 
&lt;p&gt;macos, linux:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsSL get.screenpi.pe/cli | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or on windows&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;iwr get.screenpi.pe/cli.ps1 | iex
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;then&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;screenpipe
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;make sure to allow permissions on macos (screen, mic)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://screenpi.pe/"&gt;get the desktop app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.screenpi.pe/getting-started"&gt;docs &amp;amp; build from source&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;create plugins&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bunx --bun @screenpipe/dev@latest pipe create
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;screenpipe has a plugin system called "pipe" which lets you create desktop app in nextjs in a sandboxed environment within our Rust code, &lt;a href="https://docs.screenpi.pe/plugins"&gt;read more&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;you can then publish these to our store and make money:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd foo
bunx --bun @screenpipe/dev@latest pipe register --name foo [--paid --price 50] # subscription
bun run build
bunx --bun @screenpipe/dev@latest pipe publish --name foo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LorenzoBloedow/screenpipe-tauri-template-dev"&gt;template to build screenpipe-powered desktop native app using Tauri&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neo773/screenpipe-electron"&gt;template to build screenpipe-powered desktop native app using Electron&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sprint.dev/hackathons/screenpipe"&gt;community projects&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;star history&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/c7e4de14-0771-4bbb-9a4c-7f2102a1a6cd" alt="Star History Nov 24 2024" /&gt;&lt;/p&gt; 
&lt;h2&gt;contributing&lt;/h2&gt; 
&lt;p&gt;contributions are welcome! if you'd like to contribute, please read &lt;a href="https://raw.githubusercontent.com/mediar-ai/screenpipe/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://console.algora.io/org/mediar-ai/bounties?status=completed"&gt; &lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2Fmediar-ai%2Fbounties%3Fstatus%3Dcompleted" alt="Rewarded Bounties" /&gt; &lt;/a&gt; 
&lt;a href="https://console.algora.io/org/mediar-ai/bounties?status=open"&gt; &lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2Fmediar-ai%2Fbounties%3Fstatus%3Dopen" alt="Open Bounties" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>chaitin/PandaWiki</title>
      <link>https://github.com/chaitin/PandaWiki</link>
      <description>&lt;p&gt;PandaWiki ÊòØ‰∏ÄÊ¨æ AI Â§ßÊ®°ÂûãÈ©±Âä®ÁöÑÂºÄÊ∫êÁü•ËØÜÂ∫ìÊê≠Âª∫Á≥ªÁªüÔºåÂ∏ÆÂä©‰Ω†Âø´ÈÄüÊûÑÂª∫Êô∫ËÉΩÂåñÁöÑ ‰∫ßÂìÅÊñáÊ°£„ÄÅÊäÄÊúØÊñáÊ°£„ÄÅFAQ„ÄÅÂçöÂÆ¢Á≥ªÁªüÔºåÂÄüÂä©Â§ßÊ®°ÂûãÁöÑÂäõÈáè‰∏∫‰Ω†Êèê‰æõ AI Âàõ‰Ωú„ÄÅAI ÈóÆÁ≠î„ÄÅAI ÊêúÁ¥¢Á≠âËÉΩÂäõ„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/banner.png" width="400" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a target="_blank" href="https://ly.safepoint.cloud/Br48PoX"&gt;üìñ ÂÆòÊñπÁΩëÁ´ô&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target="_blank" href="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/wechat.png"&gt;üôã‚Äç‚ôÇÔ∏è ÂæÆ‰ø°‰∫§ÊµÅÁæ§&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;üëã È°πÁõÆ‰ªãÁªç&lt;/h2&gt; 
&lt;p&gt;PandaWiki ÊòØ‰∏ÄÊ¨æ AI Â§ßÊ®°ÂûãÈ©±Âä®ÁöÑ&lt;strong&gt;ÂºÄÊ∫êÁü•ËØÜÂ∫ìÊê≠Âª∫Á≥ªÁªü&lt;/strong&gt;ÔºåÂ∏ÆÂä©‰Ω†Âø´ÈÄüÊûÑÂª∫Êô∫ËÉΩÂåñÁöÑ &lt;strong&gt;‰∫ßÂìÅÊñáÊ°£„ÄÅÊäÄÊúØÊñáÊ°£„ÄÅFAQ„ÄÅÂçöÂÆ¢Á≥ªÁªü&lt;/strong&gt;ÔºåÂÄüÂä©Â§ßÊ®°ÂûãÁöÑÂäõÈáè‰∏∫‰Ω†Êèê‰æõ &lt;strong&gt;AI Âàõ‰Ωú„ÄÅAI ÈóÆÁ≠î„ÄÅAI ÊêúÁ¥¢&lt;/strong&gt; Á≠âËÉΩÂäõ„ÄÇ&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/setup.png" width="800" /&gt; &lt;/p&gt; 
&lt;h2&gt;‚ö°Ô∏è ÁïåÈù¢Â±ïÁ§∫&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;PandaWiki ÊéßÂà∂Âè∞&lt;/th&gt; 
   &lt;th&gt;Wiki ÁΩëÁ´ôÂâçÂè∞&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/screenshot-1.png" width="370" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/screenshot-2.png" width="370" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/screenshot-3.png" width="370" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/screenshot-4.png" width="370" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üî• ÂäüËÉΩ‰∏éÁâπËâ≤&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;AI È©±Âä®Êô∫ËÉΩÂåñÔºöAI ËæÖÂä©Âàõ‰Ωú„ÄÅAI ËæÖÂä©ÈóÆÁ≠î„ÄÅAI ËæÖÂä©ÊêúÁ¥¢„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Âº∫Â§ßÁöÑÂØåÊñáÊú¨ÁºñËæëËÉΩÂäõÔºöÂÖºÂÆπ Markdown Âíå HTMLÔºåÊîØÊåÅÂØºÂá∫‰∏∫ word„ÄÅpdf„ÄÅmarkdown Á≠âÂ§öÁßçÊ†ºÂºè„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ËΩªÊùæ‰∏éÁ¨¨‰∏âÊñπÂ∫îÁî®ËøõË°åÈõÜÊàêÔºöÊîØÊåÅÂÅöÊàêÁΩëÈ°µÊåÇ‰ª∂ÊåÇÂú®ÂÖ∂‰ªñÁΩëÁ´ô‰∏äÔºåÊîØÊåÅÂÅöÊàêÈíâÈíâ„ÄÅÈ£û‰π¶„ÄÅ‰ºÅ‰∏öÂæÆ‰ø°Á≠âËÅäÂ§©Êú∫Âô®‰∫∫„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÈÄöËøáÁ¨¨‰∏âÊñπÊù•Ê∫êÂØºÂÖ•ÂÜÖÂÆπÔºöÊ†πÊçÆÁΩëÈ°µ URL ÂØºÂÖ•„ÄÅÈÄöËøáÁΩëÁ´ô Sitemap ÂØºÂÖ•„ÄÅÈÄöËøá RSS ËÆ¢ÈòÖ„ÄÅÈÄöËøáÁ¶ªÁ∫øÊñá‰ª∂ÂØºÂÖ•Á≠â„ÄÇ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üöÄ ‰∏äÊâãÊåáÂçó&lt;/h2&gt; 
&lt;h3&gt;ÂÆâË£Ö PandaWiki&lt;/h3&gt; 
&lt;p&gt;‰Ω†ÈúÄË¶Å‰∏ÄÂè∞ÊîØÊåÅ Docker 20.x ‰ª•‰∏äÁâàÊú¨ÁöÑ Linux Á≥ªÁªüÊù•ÂÆâË£Ö PandaWiki„ÄÇ&lt;/p&gt; 
&lt;p&gt;‰ΩøÁî® root ÊùÉÈôêÁôªÂΩï‰Ω†ÁöÑÊúçÂä°Âô®ÔºåÁÑ∂ÂêéÊâßË°å‰ª•‰∏ãÂëΩ‰ª§„ÄÇ&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bash -c "$(curl -fsSLk https://release.baizhi.cloud/panda-wiki/manager.sh)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ê†πÊçÆÂëΩ‰ª§ÊèêÁ§∫ÁöÑÈÄâÈ°πËøõË°åÂÆâË£ÖÔºåÂëΩ‰ª§ÊâßË°åËøáÁ®ãÂ∞Ü‰ºöÊåÅÁª≠Âá†ÂàÜÈíüÔºåËØ∑ËÄêÂøÉÁ≠âÂæÖ„ÄÇ&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ÂÖ≥‰∫éÂÆâË£Ö‰∏éÈÉ®ÁΩ≤ÁöÑÊõ¥Â§öÁªÜËäÇËØ∑ÂèÇËÄÉ &lt;a href="https://pandawiki.docs.baizhi.cloud/node/01971602-bb4e-7c90-99df-6d3c38cfd6d5"&gt;ÂÆâË£Ö PandaWiki&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;ÁôªÂΩï PandaWiki&lt;/h3&gt; 
&lt;p&gt;Âú®‰∏ä‰∏ÄÊ≠•‰∏≠ÔºåÂÆâË£ÖÂëΩ‰ª§ÊâßË°åÁªìÊùüÂêéÔºå‰Ω†ÁöÑÁªàÁ´Ø‰ºöËæìÂá∫‰ª•‰∏ãÂÜÖÂÆπ„ÄÇ&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;SUCCESS  ÊéßÂà∂Âè∞‰ø°ÊÅØ:
SUCCESS    ËÆøÈóÆÂú∞ÂùÄ(ÂÜÖÁΩë): http://*.*.*.*:2443
SUCCESS    ËÆøÈóÆÂú∞ÂùÄ(Â§ñÁΩë): http://*.*.*.*:2443
SUCCESS    Áî®Êà∑Âêç: admin
SUCCESS    ÂØÜÁ†Å: **********************
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;‰ΩøÁî®ÊµèËßàÂô®ÊâìÂºÄ‰∏äËø∞ÂÜÖÂÆπ‰∏≠ÁöÑ ‚ÄúËÆøÈóÆÂú∞ÂùÄ‚ÄùÔºå‰Ω†Â∞ÜÁúãÂà∞ PandaWiki ÁöÑÊéßÂà∂Âè∞ÁôªÂΩïÂÖ•Âè£Ôºå‰ΩøÁî®‰∏äËø∞ÂÜÖÂÆπ‰∏≠ÁöÑ ‚ÄúÁî®Êà∑Âêç‚Äù Âíå ‚ÄúÂØÜÁ†Å‚Äù ÁôªÂΩïÂç≥ÂèØ„ÄÇ&lt;/p&gt; 
&lt;h3&gt;ÈÖçÁΩÆ AI Ê®°Âûã&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PandaWiki ÊòØÁî± AI Â§ßÊ®°ÂûãÈ©±Âä®ÁöÑ Wiki Á≥ªÁªüÔºåÂú®Êú™ÈÖçÁΩÆÂ§ßÊ®°ÂûãÁöÑÊÉÖÂÜµ‰∏ã AI Âàõ‰Ωú„ÄÅAI ÈóÆÁ≠î„ÄÅAI ÊêúÁ¥¢ Á≠âÂäüËÉΩÊó†Ê≥ïÊ≠£Â∏∏‰ΩøÁî®„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;È¶ñÊ¨°ÁôªÂΩïÊó∂‰ºöÊèêÁ§∫ÈúÄË¶ÅÂÖàÈÖçÁΩÆ AI Ê®°ÂûãÔºåÊ†πÊçÆ‰∏ãÊñπÂõæÁâáÈÖçÁΩÆ ‚ÄúChat Ê®°Âûã‚Äù„ÄÇ&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/modelconfig.png" width="800" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Êé®Ëçê‰ΩøÁî® &lt;a href="https://baizhi.cloud/"&gt;ÁôæÊô∫‰∫ëÊ®°ÂûãÂπøÂú∫&lt;/a&gt; Âø´ÈÄüÊé•ÂÖ• AI Ê®°ÂûãÔºåÊ≥®ÂÜåÂç≥ÂèØËé∑Ëµ† 5 ÂÖÉÁöÑÊ®°Âûã‰ΩøÁî®È¢ùÂ∫¶„ÄÇ ÂÖ≥‰∫éÂ§ßÊ®°ÂûãÁöÑÊõ¥Â§öÈÖçÁΩÆÁªÜËäÇËØ∑ÂèÇËÄÉ &lt;a href="https://pandawiki.docs.baizhi.cloud/node/01971616-811c-70e1-82d9-706a202b8498"&gt;Êé•ÂÖ• AI Ê®°Âûã&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;ÂàõÂª∫Áü•ËØÜÂ∫ì&lt;/h3&gt; 
&lt;p&gt;‰∏ÄÂàáÈÖçÁΩÆÂ∞±Áª™ÂêéÔºå‰Ω†ÈúÄË¶ÅÂÖàÂàõÂª∫‰∏Ä‰∏™ ‚ÄúÁü•ËØÜÂ∫ì‚Äù„ÄÇ&lt;/p&gt; 
&lt;p&gt;‚ÄúÁü•ËØÜÂ∫ì‚Äù ÊòØ‰∏ÄÁªÑÊñáÊ°£ÁöÑÈõÜÂêàÔºåPandaWiki Â∞Ü‰ºöÊ†πÊçÆÁü•ËØÜÂ∫ì‰∏≠ÁöÑÊñáÊ°£Ôºå‰∏∫‰∏çÂêåÁöÑÁü•ËØÜÂ∫ìÂàÜÂà´ÂàõÂª∫ ‚ÄúWiki ÁΩëÁ´ô‚Äù„ÄÇ&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/createkb.png" width="800" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ÂÖ≥‰∫éÁü•ËØÜÂ∫ìÁöÑÊõ¥Â§öÈÖçÁΩÆÁªÜËäÇËØ∑ÂèÇËÄÉ &lt;a href="https://pandawiki.docs.baizhi.cloud/node/01971b5e-5bea-76d2-9f89-a95f98347bb0"&gt;Áü•ËØÜÂ∫ìËÆæÁΩÆ&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;üí™ ÂºÄÂßã‰ΩøÁî®&lt;/h3&gt; 
&lt;p&gt;Â¶ÇÊûú‰Ω†È°∫Âà©ÂÆåÊàê‰∫Ü‰ª•‰∏äÊ≠•È™§ÔºåÈÇ£‰πàÊÅ≠Âñú‰Ω†ÔºåÂ±û‰∫é‰Ω†ÁöÑ PandaWiki Êê≠Âª∫ÊàêÂäüÔºå‰Ω†ÂèØ‰ª•Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ËÆøÈóÆ &lt;strong&gt;ÊéßÂà∂Âè∞&lt;/strong&gt; Êù•ÁÆ°ÁêÜ‰Ω†ÁöÑÁü•ËØÜÂ∫ìÂÜÖÂÆπ&lt;/li&gt; 
 &lt;li&gt;ËÆøÈóÆ &lt;strong&gt;Wiki ÁΩëÁ´ô&lt;/strong&gt; ËÆ©‰Ω†ÁöÑÁî®Êà∑‰ΩøÁî®Áü•ËØÜÂ∫ì&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Á§æÂå∫‰∫§ÊµÅ&lt;/h2&gt; 
&lt;p&gt;Ê¨¢ËøéÂä†ÂÖ•Êàë‰ª¨ÁöÑÂæÆ‰ø°Áæ§ËøõË°å‰∫§ÊµÅ„ÄÇ&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/wechat.png" width="300" /&gt; 
&lt;h2&gt;üôã‚Äç‚ôÇÔ∏è Ë¥°ÁåÆ&lt;/h2&gt; 
&lt;p&gt;Ê¨¢ËøéÊèê‰∫§ &lt;a href="https://github.com/chaitin/PandaWiki/pulls"&gt;Pull Request&lt;/a&gt; ÊàñÂàõÂª∫ &lt;a href="https://github.com/chaitin/PandaWiki/issues"&gt;Issue&lt;/a&gt; Êù•Â∏ÆÂä©ÊîπËøõÈ°πÁõÆ„ÄÇ&lt;/p&gt; 
&lt;h2&gt;üìù ËÆ∏ÂèØËØÅ&lt;/h2&gt; 
&lt;p&gt;Êú¨È°πÁõÆÈááÁî® GNU Affero General Public License v3.0 (AGPL-3.0) ËÆ∏ÂèØËØÅ„ÄÇËøôÊÑèÂë≥ÁùÄÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰Ω†ÂèØ‰ª•Ëá™Áî±‰ΩøÁî®„ÄÅ‰øÆÊîπÂíåÂàÜÂèëÊú¨ËΩØ‰ª∂&lt;/li&gt; 
 &lt;li&gt;‰Ω†ÂøÖÈ°ª‰ª•Áõ∏ÂêåÁöÑËÆ∏ÂèØËØÅÂºÄÊ∫ê‰Ω†ÁöÑ‰øÆÊîπ&lt;/li&gt; 
 &lt;li&gt;Â¶ÇÊûú‰Ω†ÈÄöËøáÁΩëÁªúÊèê‰æõÊúçÂä°Ôºå‰πüÂøÖÈ°ªÂºÄÊ∫ê‰Ω†ÁöÑ‰ª£Á†Å&lt;/li&gt; 
 &lt;li&gt;ÂïÜ‰∏ö‰ΩøÁî®ÈúÄË¶ÅÈÅµÂÆàÁõ∏ÂêåÁöÑÂºÄÊ∫êË¶ÅÊ±Ç&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#chaitin/PandaWiki&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=chaitin/PandaWiki&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>