<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Weekly Trending</title>
    <description>Weekly Trending of TypeScript in GitHub</description>
    <pubDate>Wed, 17 Sep 2025 02:46:25 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>ZuodaoTech/everyone-can-use-english</title>
      <link>https://github.com/ZuodaoTech/everyone-can-use-english</link>
      <description>&lt;p&gt;人人都能用英语&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/assets/icon.png" alt="Clash" width="128" /&gt; 
&lt;/div&gt; 
&lt;h3 align="center"&gt; AI 是当今世界上最好的外语老师，Enjoy 做 AI 最好的助教。 &lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml/badge.svg?sanitize=true" alt="Deploy 1000h website" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml/badge.svg?sanitize=true" alt="Test Enjoy App" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml/badge.svg?sanitize=true" alt="Release Enjoy App" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fconfig%2Fapp_version&amp;amp;query=%24.version&amp;amp;label=Latest&amp;amp;link=https%3A%2F%2F1000h.org%2Fenjoy-app%2Finstall.html" alt="Latest Version" /&gt; &lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fbadges%2Frecordings" alt="Recording Duration" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;网页版&lt;/h2&gt; 
&lt;p&gt;Enjoy 网页版已经上线，可访问 &lt;a href="https://enjoy.bot"&gt;https://enjoy.bot&lt;/a&gt; 直接使用。&lt;/p&gt; 
&lt;div align="center" style="display:flex;overflow:auto;gap:10px;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audios.jpg" alt="Audios" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-add-audio.jpg" alt="Add Audio" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audio-shadow.jpg" alt="Shadow" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audio-assessment.jpg" alt="Assessment" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-new-chat.jpg" alt="New Chat" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-chat.jpg" alt="Chat" width="300" /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;桌面版安装及使用&lt;/h2&gt; 
&lt;p&gt;下载及使用相关说明，请参阅 &lt;a href="https://1000h.org/enjoy-app/"&gt;文档&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;预览&lt;/h2&gt; 
&lt;div align="center" style="display:flex;overflow:auto;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/home.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/shadow.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/assessment.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/document.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/chat.png" alt="Home" width="800" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;桌面版开发&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn install
yarn enjoy:start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;相关阅读&lt;/h2&gt; 
&lt;h3&gt;一千小时（2024）&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/intro.html"&gt;简要说明&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/training-tasks/kick-off.html"&gt;训练任务&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/sounds-of-american-english/0-intro.html"&gt;语音塑造&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/in-the-brain/01-inifinite.html"&gt;大脑内部&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/self-training/00-intro.html"&gt;自我训练&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;人人都能用英语（2010）&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/README.md"&gt;简介&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter1.md"&gt;第一章：起点&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter2.md"&gt;第二章：口语&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter3.md"&gt;第三章：语音&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter4.md"&gt;第四章：朗读&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter5.md"&gt;第五章：词典&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter6.md"&gt;第六章：语法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter7.md"&gt;第七章：精读&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter8.md"&gt;第八章：叮嘱&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/end.md"&gt;后记&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;常见问题&lt;/h2&gt; 
&lt;p&gt;请查询 &lt;a href="https://1000h.org/enjoy-app/faq.html"&gt;文档 FAQ&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>recharts/recharts</title>
      <link>https://github.com/recharts/recharts</link>
      <description>&lt;p&gt;Redefined chart library built with React and D3&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Recharts&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://recharts.org/en-US/storybook"&gt;&lt;img src="https://raw.githubusercontent.com/storybooks/brand/master/badge/badge-storybook.svg?sanitize=true" alt="storybook" /&gt;&lt;/a&gt; &lt;a href="https://github.com/recharts/recharts/actions"&gt;&lt;img src="https://github.com/recharts/recharts/workflows/Node.js%20CI/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/recharts/recharts"&gt;&lt;img src="https://codecov.io/gh/recharts/recharts/graph/badge.svg?token=Bn6L2hrl8T" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="http://badge.fury.io/js/recharts"&gt;&lt;img src="https://badge.fury.io/js/recharts.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/recharts"&gt;&lt;img src="https://img.shields.io/npm/dm/recharts.svg?style=flat-square" alt="npm downloads" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/recharts/recharts/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?style=flat" alt="MIT License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Recharts is a &lt;strong&gt;Redefined&lt;/strong&gt; chart library built with &lt;a href="https://facebook.github.io/react/"&gt;React&lt;/a&gt; and &lt;a href="http://d3js.org"&gt;D3&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The main purpose of this library is to help you to write charts in React applications without any pain. Main principles of Recharts are:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Simply&lt;/strong&gt; deploy with React components.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Native&lt;/strong&gt; SVG support, lightweight with minimal dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative&lt;/strong&gt; components.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Documentation at &lt;a href="https://recharts.org"&gt;recharts.org&lt;/a&gt; and our &lt;a href="https://recharts.org/en-US/storybook"&gt;storybook&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Also see &lt;a href="https://github.com/recharts/recharts/wiki"&gt;the wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All development is done on the &lt;code&gt;main&lt;/code&gt; branch. The current latest release and storybook documentation reflects what is on the &lt;code&gt;release&lt;/code&gt; branch.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;LineChart width={400} height={400} data={data}&amp;gt;
  &amp;lt;XAxis dataKey="name" /&amp;gt;
  &amp;lt;Tooltip /&amp;gt;
  &amp;lt;CartesianGrid stroke="#f5f5f5" /&amp;gt;
  &amp;lt;Line type="monotone" dataKey="uv" stroke="#ff7300" /&amp;gt;
  &amp;lt;Line type="monotone" dataKey="pv" stroke="#387908" /&amp;gt;
&amp;lt;/LineChart&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All the components of Recharts are clearly separated. The LineChart is composed of x axis, tooltip, grid, and line items, and each of them is an independent React Component. The clear separation and composition of components is one of the principle Recharts follows.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;npm&lt;/h3&gt; 
&lt;p&gt;NPM is the easiest and fastest way to get started using Recharts. It is also the recommended installation method when building single-page applications (SPAs). It pairs nicely with a CommonJS module bundler such as Webpack.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# latest stable
$ npm install recharts react-is
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;react-is&lt;/code&gt; needs to match the version of your installed &lt;code&gt;react&lt;/code&gt; package.&lt;/p&gt; 
&lt;h3&gt;umd&lt;/h3&gt; 
&lt;p&gt;The UMD build is also available on unpkg.com:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script src="https://unpkg.com/react/umd/react.production.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src="https://unpkg.com/react-dom/umd/react-dom.production.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src="https://unpkg.com/react-is/umd/react-is.production.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src="https://unpkg.com/recharts/umd/Recharts.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can find the library on &lt;code&gt;window.Recharts&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Recharts is open source. If you want to contribute to the project, please read the &lt;a href="https://raw.githubusercontent.com/recharts/recharts/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; to understand how to contribute to the project and &lt;a href="https://raw.githubusercontent.com/recharts/recharts/main/DEVELOPING.md"&gt;DEVELOPING.md&lt;/a&gt; to set up your development environment.&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.chromatic.com/"&gt;&lt;img src="https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png" width="153" height="30" alt="Chromatic" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;a href="https://www.chromatic.com/"&gt;Chromatic&lt;/a&gt; for providing the visual testing platform that helps us review UI changes and catch visual regressions.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://jb.gg/OpenSourceSupport"&gt;&lt;img src="https://resources.jetbrains.com/storage/products/company/brand/logos/jetbrains.svg?sanitize=true" alt="JetBrains logo." /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to JetBrains for providing OSS development license for their IDEs.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="http://opensource.org/licenses/MIT"&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2015-2024 Recharts Group.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kamranahmedse/developer-roadmap</title>
      <link>https://github.com/kamranahmedse/developer-roadmap</link>
      <description>&lt;p&gt;Interactive roadmaps, guides and other educational content to help developers grow in their careers.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://roadmap.sh/"&gt;&lt;img src="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/public/img/brand.png" height="128" /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2 align="center"&gt;&lt;a href="https://roadmap.sh"&gt;roadmap.sh&lt;/a&gt;&lt;/h2&gt; 
&lt;p align="center"&gt;Community driven roadmaps, articles and resources for developers&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;a href="https://roadmap.sh/roadmaps"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Roadmaps%20-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="roadmaps" /&gt; &lt;/a&gt; &lt;a href="https://roadmap.sh/best-practices"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Best%20Practices-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="best practices" /&gt; &lt;/a&gt; &lt;a href="https://roadmap.sh/questions"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Questions-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="videos" /&gt; &lt;/a&gt; &lt;a href="https://www.youtube.com/channel/UCA0H2KIWgWTwpTFjSxp0now?sub_confirmation=1"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-YouTube%20Channel-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="roadmaps" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Roadmaps are now interactive, you can click the nodes to read more about the topics.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://roadmap.sh"&gt;View all Roadmaps&lt;/a&gt; &amp;nbsp;·&amp;nbsp; &lt;a href="https://roadmap.sh/best-practices"&gt;Best Practices&lt;/a&gt; &amp;nbsp;·&amp;nbsp; &lt;a href="https://roadmap.sh/questions"&gt;Questions&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Here is the list of available roadmaps with more being actively worked upon.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at the &lt;a href="https://roadmap.sh/get-started"&gt;get started&lt;/a&gt; page that might help you pick up a path.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/frontend"&gt;Frontend Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/frontend?r=frontend-beginner"&gt;Frontend Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/backend"&gt;Backend Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/backend?r=backend-beginner"&gt;Backend Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/devops"&gt;DevOps Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/devops?r=devops-beginner"&gt;DevOps Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/full-stack"&gt;Full Stack Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/git-github"&gt;Git and GitHub&lt;/a&gt; / &lt;a href="https://roadmap.sh/git-github?r=git-github-beginner"&gt;Git and GitHub Beginner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/api-design"&gt;API Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/computer-science"&gt;Computer Science Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/datastructures-and-algorithms"&gt;Data Structures and Algorithms Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-data-scientist"&gt;AI and Data Scientist Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-engineer"&gt;AI Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/aws"&gt;AWS Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cloudflare"&gt;Cloudflare Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/linux"&gt;Linux Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/terraform"&gt;Terraform Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/data-analyst"&gt;Data Analyst Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/bi-analyst"&gt;BI Analyst Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/data-engineer"&gt;Data Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/machine-learning"&gt;Machine Learning Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/mlops"&gt;MLOps Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/product-manager"&gt;Product Manager Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/engineering-manager"&gt;Engineering Manager Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/qa"&gt;QA Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/python"&gt;Python Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/software-architect"&gt;Software Architect Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/game-developer"&gt;Game Developer Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/server-side-game-developer"&gt;Server Side Game Developer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/software-design-architecture"&gt;Software Design and Architecture Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/javascript"&gt;JavaScript Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/typescript"&gt;TypeScript Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cpp"&gt;C++ Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/react"&gt;React Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/nextjs"&gt;Next.js Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/react-native"&gt;React Native Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/vue"&gt;Vue Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/angular"&gt;Angular Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/nodejs"&gt;Node.js Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/php"&gt;PHP Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/graphql"&gt;GraphQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/android"&gt;Android Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ios"&gt;iOS Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/flutter"&gt;Flutter Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/golang"&gt;Go Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/rust"&gt;Rust Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/java"&gt;Java Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/kotlin"&gt;Kotlin Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/spring-boot"&gt;Spring Boot Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/design-system"&gt;Design System Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/postgresql-dba"&gt;PostgreSQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/sql"&gt;SQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/redis"&gt;Redis Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/blockchain"&gt;Blockchain Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/aspnet-core"&gt;ASP.NET Core Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/system-design"&gt;System Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/kubernetes"&gt;Kubernetes Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cyber-security"&gt;Cyber Security Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/mongodb"&gt;MongoDB Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ux-design"&gt;UX Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/docker"&gt;Docker Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/prompt-engineering"&gt;Prompt Engineering Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/technical-writer"&gt;Technical Writer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/devrel"&gt;DevRel Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-red-teaming"&gt;AI Red Teaming Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-agents"&gt;AI Agents Roadmap&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are also interactive best practices:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/backend-performance"&gt;Backend Performance Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/frontend-performance"&gt;Frontend Performance Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/code-review"&gt;Code Review Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/api-security"&gt;API Security Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/aws"&gt;AWS Best Practices&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;..and questions to help you test, rate and improve your knowledge&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/javascript"&gt;JavaScript Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/nodejs"&gt;Node.js Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/react"&gt;React Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/backend"&gt;Backend Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/frontend"&gt;Frontend Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;Share with the community&lt;/h2&gt; 
&lt;p&gt;Please consider sharing a post about &lt;a href="https://roadmap.sh"&gt;roadmap.sh&lt;/a&gt; and the value it provides. It really does help!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://reddit.com/submit?url=https://roadmap.sh&amp;amp;title=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-reddit-red?logo=reddit" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://news.ycombinator.com/submitlink?u=https://roadmap.sh"&gt;&lt;img src="https://img.shields.io/badge/share%20on-hacker%20news-orange?logo=ycombinator" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/share?url=https://roadmap.sh&amp;amp;text=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-twitter-03A9F4?logo=twitter" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://www.facebook.com/sharer/sharer.php?u=https://roadmap.sh"&gt;&lt;img src="https://img.shields.io/badge/share%20on-facebook-1976D2?logo=facebook" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/shareArticle?url=https://roadmap.sh&amp;amp;title=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-linkedin-3949AB?logo=linkedin" alt="GitHub Repo stars" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Clone the repository, install the dependencies and start the application&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:kamranahmedse/developer-roadmap.git
cd developer-roadmap
npm install
npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: use the &lt;code&gt;depth&lt;/code&gt; parameter to reduce the clone size and speed up the clone.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone --depth=1 https://github.com/kamranahmedse/developer-roadmap.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at &lt;a href="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/contributing.md"&gt;contribution docs&lt;/a&gt; for how to update any of the roadmaps&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add content to roadmaps&lt;/li&gt; 
 &lt;li&gt;Add new roadmaps&lt;/li&gt; 
 &lt;li&gt;Suggest changes to existing roadmaps&lt;/li&gt; 
 &lt;li&gt;Discuss ideas in issues&lt;/li&gt; 
 &lt;li&gt;Spread the word&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Thanks to all contributors ❤&lt;/h2&gt; 
&lt;a href="https://github.com/kamranahmedse/developer-roadmap/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=kamranahmedse/developer-roadmap" /&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Have a look at the &lt;a href="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/license"&gt;license file&lt;/a&gt; for details&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JOYCEQL/magic-resume</title>
      <link>https://github.com/JOYCEQL/magic-resume</link>
      <description>&lt;p&gt;free online AI resume editor&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;✨ Magic Resume ✨&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/Next.js-14.0-black" alt="Next.js" /&gt; &lt;img src="https://img.shields.io/badge/Framer_Motion-10.0-purple" alt="Framer Motion" /&gt;&lt;/p&gt; 
 &lt;p&gt;简体中文 | &lt;a href="https://raw.githubusercontent.com/JOYCEQL/magic-resume/main/README.en-US.md"&gt;English&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Magic Resume 是一个现代化的在线简历编辑器，让创建专业简历变得简单有趣。基于 Next.js 和 Motion 构建，支持实时预览和自定义主题。&lt;/p&gt; 
&lt;h2&gt;📸 项目截图&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/d59f7582-799c-468d-becf-59ee6453acfd" alt="782shots_so" /&gt;&lt;/p&gt; 
&lt;h2&gt;✨ 特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 基于 Next.js 14+ 构建&lt;/li&gt; 
 &lt;li&gt;💫 流畅的动画效果 (Motion)&lt;/li&gt; 
 &lt;li&gt;🎨 自定义主题支持&lt;/li&gt; 
 &lt;li&gt;🌙 深色模式&lt;/li&gt; 
 &lt;li&gt;📤 导出为 PDF&lt;/li&gt; 
 &lt;li&gt;🔄 实时预览&lt;/li&gt; 
 &lt;li&gt;💾 自动保存&lt;/li&gt; 
 &lt;li&gt;🔒 硬盘级存储&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🛠️ 技术栈&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Next.js 14+&lt;/li&gt; 
 &lt;li&gt;TypeScript&lt;/li&gt; 
 &lt;li&gt;Motion&lt;/li&gt; 
 &lt;li&gt;Tiptap&lt;/li&gt; 
 &lt;li&gt;Tailwind CSS&lt;/li&gt; 
 &lt;li&gt;Zustand&lt;/li&gt; 
 &lt;li&gt;Shadcn/ui&lt;/li&gt; 
 &lt;li&gt;Lucide Icons&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 快速开始&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;克隆项目&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:JOYCEQL/magic-resume.git
cd magic-resume
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;安装依赖&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;启动开发服务器&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;打开浏览器访问 &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;📦 构建打包&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;⚡ Vercel 部署&lt;/h2&gt; 
&lt;p&gt;你可以一键部署自己的 Magic Resume 实例：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2FJOYCEQL%2Fmagic-resume"&gt;&lt;img src="https://vercel.com/button" alt="使用 Vercel 部署" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🐳 Docker 部署&lt;/h2&gt; 
&lt;h3&gt;Docker Compose&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;确保你已经安装了 Docker 和 Docker Compose&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在项目根目录运行：&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;这将会：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;自动构建应用镜像&lt;/li&gt; 
 &lt;li&gt;在后台启动容器&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Docker Hub&lt;/h3&gt; 
&lt;p&gt;最新版本的 Magic Resume 已经发布在 Docker Hub：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/siyueqingchen/magic-resume/"&gt;Docker Hub&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull siyueqingchen/magic-resume:main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📝 开源协议&lt;/h2&gt; 
&lt;p&gt;本项目采用 Apache 2.0 协议，但有一些自定义的部分 - 查看 &lt;a href="https://raw.githubusercontent.com/JOYCEQL/magic-resume/main/LICENSE"&gt;LICENSE&lt;/a&gt; 了解详情&lt;/p&gt; 
&lt;h2&gt;🗺️ 路线图&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; AI 辅助编写&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 多语言支持&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 支持更多简历模板&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 更多格式导出&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 自定义模型&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 智能一页&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 导入 PDF, Markdown 等&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 在线简历托管&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📞 联系方式&lt;/h2&gt; 
&lt;p&gt;可以通过以下方式关注最新动态:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;作者：SiYue&lt;/li&gt; 
 &lt;li&gt;X: @GuangzhouY81070&lt;/li&gt; 
 &lt;li&gt;Discord: 欢迎加入群组 &lt;a href="https://discord.gg/9mWgZrW3VN"&gt;https://discord.gg/9mWgZrW3VN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;用户群：加微信 qingchensiyue&lt;/li&gt; 
 &lt;li&gt;邮箱：&lt;a href="mailto:18806723365@163.com"&gt;18806723365@163.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;项目主页：&lt;a href="https://github.com/JOYCEQL/magic-resume"&gt;https://github.com/JOYCEQL/magic-resume&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🌟 支持项目&lt;/h2&gt; 
&lt;p&gt;项目接口成本现正在持续上升中，如果对你有所帮助，可以赞赏作者，支持开源～&lt;/p&gt; 
&lt;img src="https://github.com/JOYCEQL/picx-images-hosting/raw/master/pintu-fulicat.com-1741081632544.26lmg2uc2m.webp" width="320" alt="图片描述" /&gt;</description>
    </item>
    
    <item>
      <title>Vanilagy/mediabunny</title>
      <link>https://github.com/Vanilagy/mediabunny</link>
      <description>&lt;p&gt;Pure TypeScript media toolkit for reading, writing, and converting video and audio files, directly in the browser.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mediabunny - JavaScript media toolkit&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/mediabunny"&gt;&lt;img src="https://img.shields.io/npm/v/mediabunny" alt="" /&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/package/mediabunny"&gt;&lt;img src="https://img.shields.io/bundlephobia/minzip/mediabunny" alt="" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/mediabunny"&gt;&lt;img src="https://img.shields.io/npm/dm/mediabunny" alt="" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/hmpkyYuS4U"&gt;&lt;img src="https://img.shields.io/discord/1390044844285497344?logo=discord&amp;amp;label=Discord" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/docs/public/mediabunny-logo.svg?sanitize=true" width="180" height="180" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Mediabunny is a JavaScript library for reading, writing, and converting media files (like MP4, WebM, MP3), directly in the browser. It aims to be a complete toolkit for high-performance media operations on the web. It's written from scratch in pure TypeScript, has zero dependencies, is very performant, and is extremely tree-shakable, meaning you only include what you use. You can think of it a bit like &lt;a href="https://ffmpeg.org/"&gt;FFmpeg&lt;/a&gt;, but built from the ground up for the web.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://mediabunny.dev"&gt;Documentation&lt;/a&gt; | &lt;a href="https://mediabunny.dev/examples"&gt;Examples&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/#sponsoring"&gt;Sponsoring&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/#license"&gt;License&lt;/a&gt; | &lt;a href="https://discord.gg/hmpkyYuS4U"&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Gold sponsors&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://remotion.dev/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/docs/public/sponsors/remotion.png" width="60" height="60" alt="Remotion" /&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
 &lt;a href="https://www.gling.ai/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/docs/public/sponsors/gling.svg?sanitize=true" width="60" height="60" alt="Gling AI" /&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
 &lt;a href="https://diffusion.studio/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/docs/public/sponsors/diffusionstudio.png" width="60" height="60" alt="Diffusion Studio" /&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
 &lt;a href="https://kino.ai/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/docs/public/sponsors/kino.jpg" width="60" height="60" alt="Kino" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h3&gt;Bronze sponsors&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.reactvideoeditor.com/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/docs/public/sponsors/rve.svg?sanitize=true" width="40" height="40" alt="React Video Editor" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/Vanilagy"&gt;Sponsor Mediabunny's development&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Core features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Wide format support&lt;/strong&gt;: Read and write MP4, MOV, WebM, MKV, WAVE, MP3, Ogg, ADTS&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built-in encoding &amp;amp; decoding&lt;/strong&gt;: Supports 25+ video, audio, and subtitle codecs, hardware-accelerated using the WebCodecs API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;High precision&lt;/strong&gt;: Fine-grained, microsecond-accurate reading and writing operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Conversion API&lt;/strong&gt;: Easy-to-use API with features such as transmuxing, transcoding, resizing, rotation, cropping, resampling, trimming, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Streaming I/O&lt;/strong&gt;: Handle reading &amp;amp; writing files of any size with memory-efficient streaming&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tree-shakable&lt;/strong&gt;: Only bundle what you use (as small as 5 kB gzipped)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zero dependencies&lt;/strong&gt;: Implemented in highly performant TypeScript&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cross-platform&lt;/strong&gt;: Works in browsers and Node.js&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://mediabunny.dev/guide/introduction#features"&gt;See full feature list&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;Install it via npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install mediabunny
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, include it directly with a script tag using one of the &lt;a href="https://github.com/Vanilagy/mediabunny/releases"&gt;builds&lt;/a&gt;. Doing so exposes a global &lt;code&gt;Mediabunny&lt;/code&gt; object.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script src="mediabunny.cjs"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Requires any JavaScript environment that can run ECMAScript 2021 or later. Mediabunny is expected to be run in modern browsers. For types, TypeScript 5.7 or later is required.&lt;/p&gt; 
&lt;h3&gt;Read file metadata&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { Input, ALL_FORMATS, BlobSource } from 'mediabunny';

const input = new Input({
    source: new BlobSource(file), // Reading from disk
    formats: ALL_FORMATS,
});

const duration = await input.computeDuration(); // in seconds
const videoTrack = await input.getPrimaryVideoTrack();
const audioTrack = await input.getPrimaryAudioTrack();
const { displayWidth, displayHeight, rotation } = videoTrack;
const { sampleRate, numberOfChannels } = audioTrack;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Create new media files&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { Output, Mp4OutputFormat, BufferTarget, CanvasSource, QUALITY_HIGH } from 'mediabunny';

const output = new Output({
    format: new Mp4OutputFormat(),
    target: new BufferTarget(), // Writing to memory
});

// Add a video track backed by a canvas element
const videoSource = new CanvasSource(canvas, {
    codec: 'avc',
    bitrate: QUALITY_HIGH,
});
output.addVideoTrack(videoSource);

await output.start();
// Add frames...
await output.finalize();

const buffer = output.target.buffer; // Final MP4 file
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Convert files&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { Input, Output, Conversion, ALL_FORMATS, BlobSource, WebMOutputFormat } from 'mediabunny';

const input = new Input({
    source: new BlobSource(file),
    formats: ALL_FORMATS,
});

const output = new Output({
    format: new WebMOutputFormat(), // Convert to WebM
    target: new BufferTarget(),
});

const conversion = await Conversion.init({ input, output });
await conversion.execute();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://mediabunny.dev/guide/quick-start"&gt;See more code snippets&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit the &lt;a href="https://mediabunny.dev/guide/introduction"&gt;Docs&lt;/a&gt; for comprehensive guides, examples and API documentation.&lt;/p&gt; 
&lt;h2&gt;Sponsoring&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://mediabunny.dev/#sponsors"&gt;See all sponsors&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Mediabunny is an open-source project released under the &lt;a href="https://choosealicense.com/licenses/mpl-2.0/" target="_blank"&gt;MPL-2.0&lt;/a&gt; and is therefore free to use for any purpose, including closed-source commercial use. A permissive license is essential for a foundational library like this to truly thrive. That said, this project requires an immense amount of work and care to maintain and expand. This is made possible by the generous financial backing of the sponsors of this project.&lt;/p&gt; 
&lt;p&gt;If you have derived considerable value from this project, please consider &lt;a href="https://github.com/sponsors/Vanilagy"&gt;sponsoring it&lt;/a&gt; or providing a one-time donation. Thank you! 🩷&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://choosealicense.com/licenses/mpl-2.0/"&gt;Mozilla Public License 2.0&lt;/a&gt;. This is a very permissive weak copyleft license, not much different from the MIT License, allowing you to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use Mediabunny for any purpose, commercial or non-commercial, without royalties&lt;/li&gt; 
 &lt;li&gt;Use Mediabunny in open- and closed-source projects&lt;/li&gt; 
 &lt;li&gt;Freely distribute projects built with Mediabunny&lt;/li&gt; 
 &lt;li&gt;Inspect and modify Mediabunny's source code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;However, you have the following obligation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you modify Mediabunny's licensed source code (e.g. in a fork) and then distribute it, you must publicly publish your modifications under the Mozilla Public License 2.0.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This ensures that library usage remains permissive for everybody, while any improvements to Mediabunny remain in the open, benefiting everyone.&lt;/p&gt; 
&lt;p&gt;You are not allowed to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Remove the license and copyright headers from any Mediabunny source file&lt;/li&gt; 
 &lt;li&gt;Claim the "Mediabunny" trademark&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And finally, Mediabunny - like any other library - comes with no warranty of any kind and is not liable for any direct or indirect damages.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This is not legal advice. Refer to the full text of the &lt;a href="https://choosealicense.com/licenses/mpl-2.0/"&gt;Mozilla Public License 2.0&lt;/a&gt; for the binding license agreement.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Implementation &amp;amp; development&lt;/h2&gt; 
&lt;p&gt;Mediabunny is implemented from scratch in pure TypeScript with zero dependencies. At its core, the library is a collection of multiplexers and demultiplexers (one for every container format), which are then connected together via abstractions around the WebCodecs API. The logic is heavily pipelined and lazy, keeping performance high and memory usage low. If this stuff interests you, refer to the &lt;a href="https://mediabunny.dev/guide/introduction#technical-overview"&gt;Technical overview&lt;/a&gt; for more.&lt;/p&gt; 
&lt;p&gt;For development, clone this repository and install it using a modern version of Node.js and npm. The build system uses TypeScript, esbuild, API Extractor, Vite, and VitePress.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install # Install dependencies
npm run watch # Build bundles on watch mode

npm run build # Production build with type definitions

npm run check # Type checking
npm run lint # ESLint

npm run docs:generate # Generates API docs
npm run docs:dev # Start docs development server
npm run dev # Start examples development server

npm run docs:build # Build docs and examples
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>cloudflare/agents</title>
      <link>https://github.com/cloudflare/agents</link>
      <description>&lt;p&gt;Build and deploy AI Agents on Cloudflare&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🧠 Cloudflare Agents&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudflare/agents/main/assets/npm-install-agents.svg?sanitize=true" alt="npm install agents" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;This project is in active development. Join us in shaping the future of intelligent agents.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Welcome to a new paradigm in AI development. Cloudflare Agents provides the foundation for building intelligent, stateful agents that persist, think, and evolve at the edge of the network.&lt;/p&gt; 
&lt;p&gt;Read the announcement on the Cloudflare blog: &lt;a href="https://blog.cloudflare.com/build-ai-agents-on-cloudflare/"&gt;Making Cloudflare the best platform for building AI Agents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Vision&lt;/h2&gt; 
&lt;p&gt;We're creating a framework where AI agents can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Maintain persistent state and memory&lt;/li&gt; 
 &lt;li&gt;Engage in real-time communication&lt;/li&gt; 
 &lt;li&gt;Process and learn from interactions&lt;/li&gt; 
 &lt;li&gt;Operate autonomously at global scale&lt;/li&gt; 
 &lt;li&gt;Hibernate when idle, awaken when needed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Status&lt;/h2&gt; 
&lt;p&gt;This project is actively evolving. Current focus areas:&lt;/p&gt; 
&lt;h3&gt;Ready for Use&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Core agent framework with state management&lt;/li&gt; 
 &lt;li&gt;Real-time WebSocket communication&lt;/li&gt; 
 &lt;li&gt;HTTP endpoints and routing&lt;/li&gt; 
 &lt;li&gt;React integration hooks&lt;/li&gt; 
 &lt;li&gt;Basic AI chat capabilities&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;In Development&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Advanced memory systems&lt;/li&gt; 
 &lt;li&gt;WebRTC for audio/video&lt;/li&gt; 
 &lt;li&gt;Email integration&lt;/li&gt; 
 &lt;li&gt;Evaluation framework&lt;/li&gt; 
 &lt;li&gt;Enhanced observability&lt;/li&gt; 
 &lt;li&gt;Self-hosting guide&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm create cloudflare@latest -- --template cloudflare/agents-starter
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or add to existing project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;
npm install agents
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For comprehensive documentation and guides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cloudflare/agents/main/packages/agents/README.md"&gt;Core Framework&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cloudflare/agents/main/guides/anthropic-patterns/README.md"&gt;The Anthropic Patterns for building effective agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cloudflare/agents/main/guides/human-in-the-loop/README.md"&gt;Human in the Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cloudflare/agents/main/examples/playground/README.md"&gt;Playground&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Whether it's:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;New examples&lt;/li&gt; 
 &lt;li&gt;Documentation improvements&lt;/li&gt; 
 &lt;li&gt;Bug fixes&lt;/li&gt; 
 &lt;li&gt;Feature suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License - Build something meaningful.&lt;/p&gt; 
&lt;hr /&gt;</description>
    </item>
    
    <item>
      <title>chatboxai/chatbox</title>
      <link>https://github.com/chatboxai/chatbox</link>
      <description>&lt;p&gt;User-friendly Desktop Client App for AI Models/LLMs (GPT, Claude, Gemini, Ollama...)&lt;/p&gt;&lt;hr&gt;&lt;p align="right"&gt; &lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/README-CN.md"&gt;简体中文&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;This is the repository for the Chatbox Community Edition, open-sourced under the GPLv3 license.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/chatboxai/chatbox/issues/2266"&gt;Chatbox is going open-source Again!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We regularly sync code from the pro repo to this repo, and vice versa.&lt;/p&gt; 
&lt;h3&gt;Download for Desktop&lt;/h3&gt; 
&lt;table style="width: 100%"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="25%" align="center"&gt; &lt;b&gt;Windows&lt;/b&gt; &lt;/td&gt; 
   &lt;td width="25%" align="center" colspan="2"&gt; &lt;b&gt;MacOS&lt;/b&gt; &lt;/td&gt; 
   &lt;td width="25%" align="center"&gt; &lt;b&gt;Linux&lt;/b&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr style="text-align: center"&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-windows"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/windows.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;Setup.exe&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-mac-intel"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/mac.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;Intel&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-mac-aarch"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/mac.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b style="white-space: nowrap;"&gt;Apple Silicon&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-linux"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/linux.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;AppImage&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Download for iOS/Android&lt;/h3&gt; 
&lt;a href="https://apps.apple.com/app/chatbox-ai/id6471368056" style="margin-right: 4px"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/app_store.webp" style="height:38px;" /&gt; &lt;/a&gt; 
&lt;a href="https://play.google.com/store/apps/details?id=xyz.chatboxapp.chatbox" style="margin-right: 4px"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/google_play.png" style="height:38px;" /&gt; &lt;/a&gt; 
&lt;a href="https://chatboxai.app/install?download=android_apk" style="margin-right: 4px; display: inline-flex; justify-content: center"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/android.png" style="height:28px; display: inline-block" /&gt; .APK &lt;/a&gt; 
&lt;p&gt;For more information: &lt;a href="https://chatboxai.app/"&gt;chatboxai.app&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1 align="center"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/icon.png" width="30" /&gt; &lt;span&gt; Chatbox &lt;span style="font-size:8px; font-weight: normal;"&gt;(Community Edition)&lt;/span&gt; &lt;/span&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;em&gt;Your Ultimate AI Copilot on the Desktop. &lt;br /&gt;Chatbox is a desktop client for ChatGPT, Claude and other LLMs, available on Windows, Mac, Linux&lt;/em&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="macOS" src="https://img.shields.io/badge/-macOS-black?style=flat-square&amp;amp;logo=apple&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="Windows" src="https://img.shields.io/badge/-Windows-blue?style=flat-square&amp;amp;logo=windows&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="Linux" src="https://img.shields.io/badge/-Linux-yellow?style=flat-square&amp;amp;logo=linux&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="Downloads" src="https://img.shields.io/github/downloads/chatboxai/chatbox/total.svg?style=flat" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/chatbox?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-chatbox" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=429547&amp;amp;theme=light" alt="Chatbox - Better UI &amp;amp; Desktop App for ChatGPT, Claude and other LLMs. | Product Hunt" style="width: 150px; height: 30px;" width="100" height="40" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_light.png"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_light.png" width="400" /&gt; &lt;/a&gt; 
&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_dark.png"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_dark.png" width="400" /&gt; &lt;/a&gt; 
&lt;!-- &lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;img src="./dec/../doc/demo_mobile_1.png" alt="App Screenshot" style="box-shadow: 2px 2px 10px rgba(0,0,0,0.1); border: 1px solid #ddd; border-radius: 8px; height: 300px" /&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;img src="./dec/../doc/demo_mobile_2.png" alt="App Screenshot" style="box-shadow: 2px 2px 10px rgba(0,0,0,0.1); border: 1px solid #ddd; border-radius: 8px; height: 300px" /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt; --&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Local Data Storage&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;💾&lt;/span&gt; Your data remains on your device, ensuring it never gets lost and maintains your privacy.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;No-Deployment Installation Packages&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;📦&lt;/span&gt; Get started quickly with downloadable installation packages. No complex setup necessary!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Support for Multiple LLM Providers&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;⚙&lt;/span&gt; Seamlessly integrate with a variety of cutting-edge language models:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;OpenAI (ChatGPT)&lt;/li&gt; 
   &lt;li&gt;Azure OpenAI&lt;/li&gt; 
   &lt;li&gt;Claude&lt;/li&gt; 
   &lt;li&gt;Google Gemini Pro&lt;/li&gt; 
   &lt;li&gt;Ollama (enable access to local models like llama2, Mistral, Mixtral, codellama, vicuna, yi, and solar)&lt;/li&gt; 
   &lt;li&gt;ChatGLM-6B&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Image Generation with Dall-E-3&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🎨&lt;/span&gt; Create the images of your imagination with Dall-E-3.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enhanced Prompting&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;💬&lt;/span&gt; Advanced prompting features to refine and focus your queries for better responses.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Keyboard Shortcuts&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;⌨&lt;/span&gt; Stay productive with shortcuts that speed up your workflow.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Markdown, Latex &amp;amp; Code Highlighting&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;📜&lt;/span&gt; Generate messages with the full power of Markdown and Latex formatting, coupled with syntax highlighting for various programming languages, enhancing readability and presentation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Prompt Library &amp;amp; Message Quoting&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;📚&lt;/span&gt; Save and organize prompts for reuse, and quote messages for context in discussions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Streaming Reply&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;▶&lt;/span&gt; Provide rapid responses to your interactions with immediate, progressive replies.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ergonomic UI &amp;amp; Dark Theme&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🌑&lt;/span&gt; A user-friendly interface with a night mode option for reduced eye strain during extended use.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Team Collaboration&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;👥&lt;/span&gt; Collaborate with ease and share OpenAI API resources among your team. &lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/team-sharing/README.md"&gt;Learn More&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cross-Platform Availability&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;💻&lt;/span&gt; Chatbox is ready for Windows, Mac, Linux users.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Access Anywhere with the Web Version&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🌐&lt;/span&gt; Use the web application on any device with a browser, anywhere.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;iOS &amp;amp; Android&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;☎&lt;/span&gt; Use the mobile applications that will bring this power to your fingertips on the go.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multilingual Support&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🌎&lt;/span&gt; Catering to a global audience by offering support in multiple languages:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;English&lt;/li&gt; 
   &lt;li&gt;简体中文 (Simplified Chinese)&lt;/li&gt; 
   &lt;li&gt;繁體中文 (Traditional Chinese)&lt;/li&gt; 
   &lt;li&gt;日本語 (Japanese)&lt;/li&gt; 
   &lt;li&gt;한국어 (Korean)&lt;/li&gt; 
   &lt;li&gt;Français (French)&lt;/li&gt; 
   &lt;li&gt;Deutsch (German)&lt;/li&gt; 
   &lt;li&gt;Русский (Russian)&lt;/li&gt; 
   &lt;li&gt;Español (Spanish)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;And More...&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;✨&lt;/span&gt; Constantly enhancing the experience with new features!&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/FAQ.md"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why I made Chatbox?&lt;/h2&gt; 
&lt;p&gt;I developed Chatbox initially because I was debugging some prompts and found myself in need of a simple and easy-to-use prompt and API debugging tool. I thought there might be more people who needed such a tool, so I open-sourced it.&lt;/p&gt; 
&lt;p&gt;At first, I didn't know that it would be so popular. I listened to the feedback from the open-source community and continued to develop and improve it. Now, it has become a very useful AI desktop application. There are many users who love Chatbox, and they not only use it for developing and debugging prompts, but also for daily chatting, and even to do some more interesting things like using well-designed prompts to make AI play various professional roles to assist them in everyday work...&lt;/p&gt; 
&lt;h2&gt;How to Contribute&lt;/h2&gt; 
&lt;p&gt;Any form of contribution is welcome, including but not limited to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Submitting issues&lt;/li&gt; 
 &lt;li&gt;Submitting pull requests&lt;/li&gt; 
 &lt;li&gt;Submitting feature requests&lt;/li&gt; 
 &lt;li&gt;Submitting bug reports&lt;/li&gt; 
 &lt;li&gt;Submitting documentation revisions&lt;/li&gt; 
 &lt;li&gt;Submitting translations&lt;/li&gt; 
 &lt;li&gt;Submitting any other forms of contribution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js (v20.x – v22.x)&lt;/li&gt; 
 &lt;li&gt;npm (required – pnpm is not supported)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build Instructions&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository from Github&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/chatboxai/chatbox.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Install the required dependencies&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Start the application (in development mode)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Build the application, package the installer for current platform&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run package
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Build the application, package the installer for all platforms&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run package:all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#chatboxai/chatbox&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=chatboxai/chatbox&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://x.com/ChatboxAI_HQ"&gt;Twitter&lt;/a&gt; | &lt;a href="mailto:hi@chatboxai.com"&gt;Email&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/examples</title>
      <link>https://github.com/vercel/examples</link>
      <description>&lt;p&gt;Enjoy our curated collection of examples and solutions. Use these patterns to build your own robust and scalable applications.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://vercel.com"&gt; &lt;img src="https://assets.vercel.com/image/upload/v1588805858/repositories/vercel/logo.png" height="96" /&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h3 align="center"&gt;&lt;a href="https://vercel.com"&gt;Vercel Examples&lt;/a&gt;&lt;/h3&gt;
&lt;a href="https://vercel.com"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vercel/examples/main/solutions"&gt;Solutions&lt;/a&gt; – Demos, reference architecture, and best practices&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vercel/examples/main/starter"&gt;Starter&lt;/a&gt; – Functional applications which can act as a starting point&lt;/li&gt; 
 &lt;li&gt;And more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Vercel Templates&lt;/h2&gt; 
&lt;p&gt;Multiple examples are being featured in &lt;a href="https://vercel.com/templates"&gt;Vercel's Templates&lt;/a&gt;, visit that page for more advanced filtering options.&lt;/p&gt; 
&lt;h3&gt;For Vercelians&lt;/h3&gt; 
&lt;p&gt;Examples that have front matter metadata will create a new Draft template in &lt;a href="https://app.contentful.com"&gt;Contentful&lt;/a&gt;, for more steps on how to publish a template, read &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/internal/publishing-templates.md"&gt;Publishing Templates&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Adding a new example&lt;/h2&gt; 
&lt;p&gt;To quickly start contributing with a new example, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm i
pnpm new-example
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the script above isn't used, make sure the example complies with the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It must have a &lt;code&gt;.gitignore&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/.gitignore"&gt;plop-templates/example/.gitignore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;It must have a &lt;code&gt;package.json&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/package.json"&gt;plop-templates/example/package.json&lt;/a&gt; (usage of Next.js is optional). The license should be &lt;code&gt;MIT&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;It must have a &lt;code&gt;README.md&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/README.md"&gt;plop-templates/example/README.md&lt;/a&gt;. The example has to be able to include a demo URL (the Vercel team will deploy it!) and if it requires environment variables, it must have a &lt;code&gt;.env.example&lt;/code&gt; file and instructions on how to set them up. Take &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/edge-middleware/bot-protection-datadome/README.md"&gt;bot-protection-datadome&lt;/a&gt; as an example. 
  &lt;ul&gt; 
   &lt;li&gt;To customize the Vercel Deploy Button take a look at the &lt;a href="https://vercel.com/docs/deploy-button"&gt;docs&lt;/a&gt;, useful if the deployment has required environment variables.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;If using Next.js, it must have a &lt;code&gt;.eslintrc.json&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/.eslintrc.json"&gt;plop-templates/example/.eslintrc.json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;All Next.js examples should be using the same styling and layout provided by &lt;code&gt;@vercel/examples-ui&lt;/code&gt;, its usage can be seen in the &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example"&gt;plop template&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Adding a template&lt;/h3&gt; 
&lt;p&gt;If you would like the example to be featured in &lt;a href="https://vercel.com/templates"&gt;vercel.com/templates&lt;/a&gt; then also add the front matter metadata to the top of the readme, like in &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/edge-middleware/bot-protection-datadome/README.md"&gt;bot-protection-datadome&lt;/a&gt;. To know all the possible values for each metadata take a look at &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/internal/fields.json"&gt;&lt;code&gt;internal/fields.json&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to add related templates to your template, copy the &lt;code&gt;slug&lt;/code&gt; from the other template into the &lt;code&gt;relatedTemplates&lt;/code&gt; field, for example for &lt;a href="https://vercel.com/templates/next.js/monorepo-turborepo"&gt;vercel.com/templates/next.js/monorepo-turborepo&lt;/a&gt; the slug is &lt;code&gt;monorepo-turborepo&lt;/code&gt;, as written in &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/solutions/monorepo/README.md"&gt;solutions/monorepo/README.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;The pre-commit hook&lt;/h3&gt; 
&lt;p&gt;We use &lt;a href="https://typicode.github.io/husky/#/"&gt;Husky&lt;/a&gt; to manage the pre-commit &lt;a href="https://git-scm.com/docs/githooks"&gt;Git hook&lt;/a&gt; in this repo. Husky configures hooks automatically during install, so you don't need to do anything special to get them working, but if it fails to install, you can run the following command to install it manually:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm run prepare
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Code changes automatically go through Prettier and ESLint when you make a commit, &lt;strong&gt;please do not skip these steps&lt;/strong&gt; unless they're broken and in that case let us known by creating an issue.&lt;/p&gt; 
&lt;h2&gt;Read the Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://vercel.com/docs"&gt;Vercel Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nextjs.org/docs"&gt;Next.js Docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have any questions or suggestions about the docs, feel free to &lt;a href="https://github.com/vercel/examples/discussions"&gt;open a discussion&lt;/a&gt;, or &lt;a href="https://github.com/vercel/examples/pulls"&gt;submit a PR&lt;/a&gt; with your suggestions!&lt;/p&gt; 
&lt;h2&gt;Provide Feedback&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vercel/examples/discussions"&gt;Start a Discussion&lt;/a&gt; with a question, piece of feedback, or idea you want to share with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vercel/examples/issues"&gt;Open an Issue&lt;/a&gt; if you believe you've encountered a bug that you want to flag for the team.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>immich-app/immich</title>
      <link>https://github.com/immich-app/immich</link>
      <description>&lt;p&gt;High performance self-hosted photo and video management solution.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;br /&gt; &lt;a href="https://opensource.org/license/agpl-v3"&gt;&lt;img src="https://img.shields.io/badge/License-AGPL_v3-blue.svg?color=3F51B5&amp;amp;style=for-the-badge&amp;amp;label=License&amp;amp;logoColor=000000&amp;amp;labelColor=ececec" alt="License: AGPLv3" /&gt;&lt;/a&gt; &lt;a href="https://discord.immich.app"&gt; &lt;img src="https://img.shields.io/discord/979116623879368755.svg?label=Discord&amp;amp;logo=Discord&amp;amp;style=for-the-badge&amp;amp;logoColor=000000&amp;amp;labelColor=ececec" alt="Discord" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/immich-app/immich/main/design/immich-logo-stacked-light.svg?sanitize=true" width="300" title="Login With Custom URL" /&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;High performance self-hosted photo and video management solution&lt;/h3&gt; 
&lt;br /&gt; 
&lt;a href="https://immich.app"&gt; &lt;img src="https://raw.githubusercontent.com/immich-app/immich/main/design/immich-screenshots.png" title="Main Screenshot" /&gt; &lt;/a&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ca_ES.md"&gt;Català&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_es_ES.md"&gt;Español&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_fr_FR.md"&gt;Français&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_it_IT.md"&gt;Italiano&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ja_JP.md"&gt;日本語&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ko_KR.md"&gt;한국어&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_de_DE.md"&gt;Deutsch&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_nl_NL.md"&gt;Nederlands&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_tr_TR.md"&gt;Türkçe&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_zh_CN.md"&gt;中文&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_uk_UA.md"&gt;Українська&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ru_RU.md"&gt;Русский&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_pt_BR.md"&gt;Português Brasileiro&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_sv_SE.md"&gt;Svenska&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ar_JO.md"&gt;العربية&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_vi_VN.md"&gt;Tiếng Việt&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_th_TH.md"&gt;ภาษาไทย&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚠️ The project is under &lt;strong&gt;very active&lt;/strong&gt; development.&lt;/li&gt; 
 &lt;li&gt;⚠️ Expect bugs and breaking changes.&lt;/li&gt; 
 &lt;li&gt;⚠️ &lt;strong&gt;Do not use the app as the only way to store your photos and videos.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;⚠️ Always follow &lt;a href="https://www.backblaze.com/blog/the-3-2-1-backup-strategy/"&gt;3-2-1&lt;/a&gt; backup plan for your precious photos and videos!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You can find the main documentation, including installation guides, at &lt;a href="https://immich.app/"&gt;https://immich.app/&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/overview/introduction"&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/install/requirements"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/developer/translations"&gt;Translations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/overview/support-the-project"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Access the demo &lt;a href="https://demo.immich.app"&gt;here&lt;/a&gt;. For the mobile app, you can use &lt;code&gt;https://demo.immich.app&lt;/code&gt; for the &lt;code&gt;Server Endpoint URL&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Login credentials&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Email&lt;/th&gt; 
   &lt;th&gt;Password&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="mailto:demo@immich.app"&gt;demo@immich.app&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;demo&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Features&lt;/th&gt; 
   &lt;th&gt;Mobile&lt;/th&gt; 
   &lt;th&gt;Web&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Upload and view videos and photos&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Auto backup when the app is opened&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Prevent duplication of assets&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Selective album(s) for backup&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Download photos and videos to local device&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Multi-user support&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Album and Shared albums&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Scrubbable/draggable scrollbar&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Support raw formats&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Metadata view (EXIF, map)&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Search by metadata, objects, faces, and CLIP&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Administrative functions (user management)&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Background backup&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Virtual scroll&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;OAuth support&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;API Keys&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;LivePhoto/MotionPhoto backup and playback&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Support 360 degree image display&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;User-defined storage structure&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Public Sharing&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Archive and Favorites&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Global Map&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Partner Sharing&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Facial recognition and clustering&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Memories (x years ago)&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Offline support&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Read-only gallery&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Stacked Photos&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Tags&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Folder View&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;Read more about translations &lt;a href="https://immich.app/docs/developer/translations"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/immich/"&gt; &lt;img src="https://hosted.weblate.org/widget/immich/immich/multi-auto.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;h2&gt;Repository activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/9e86d9dc3ddd137161f2f6d2e758d7863b1789cb.svg?sanitize=true" alt="Activities" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;Star history&lt;/h2&gt; 
&lt;a href="https://star-history.com/#immich-app/immich&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=immich-app/immich&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=immich-app/immich&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=immich-app/immich&amp;amp;type=Date" width="100%" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/alextran1502/immich/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=immich-app/immich" width="100%" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>AIDC-AI/ComfyUI-Copilot</title>
      <link>https://github.com/AIDC-AI/ComfyUI-Copilot</link>
      <description>&lt;p&gt;An AI-powered custom node for ComfyUI designed to enhance workflow automation and provide intelligent assistance&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/README_CN.md"&gt;中文&lt;/a&gt; ｜ English&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;🎯 ComfyUI-Copilot: Your Intelligent Assistant for ComfyUI&lt;/h1&gt; 
 &lt;!-- Enhancing Image Generation Development with Smart Assistance --&gt; 
 &lt;h4 align="center"&gt; 
  &lt;div align="center"&gt; 
   &lt;img src="https://img.shields.io/badge/Version-1.0.0-blue.svg?sanitize=true" alt="版本" /&gt; 
   &lt;img src="https://img.shields.io/github/stars/AIDC-AI/ComfyUI-Copilot?color=yellow" alt="星标" /&gt; 
   &lt;a href="https://discord.gg/7H9dMCvuMp"&gt; &lt;img src="https://img.shields.io/badge/Discord-%20%235462eb?logo=discord&amp;amp;logoColor=%20%23f5f5f5" alt="Discord" /&gt; &lt;/a&gt; 
   &lt;a href="https://github.com/AIDC-AI/ComfyUI-Copilot/raw/main/assets/qrcode.png"&gt; &lt;img src="https://img.shields.io/badge/WeChat-brightgreen?logo=wechat&amp;amp;logoColor=white" alt="WeChat" /&gt; &lt;/a&gt; 
   &lt;a href="https://x.com/Pixelle_AI" target="_blank" rel="noopener"&gt; &lt;img src="https://img.shields.io/twitter/follow/Pixelle_AI?style=social" alt="Follow on X" /&gt; &lt;/a&gt; 
   &lt;a href="https://aclanthology.org/2025.acl-demo.61.pdf"&gt; &lt;img src="https://img.shields.io/badge/Paper-ACL2025-B31B1B?logo=arXiv&amp;amp;logoColor=white" alt="Paper" /&gt; &lt;/a&gt; 
   &lt;img src="https://img.shields.io/badge/python-3.10%2B-purple.svg?sanitize=true" alt="Python" /&gt; 
   &lt;img src="https://img.shields.io/badge/License-MIT-green.svg?sanitize=true" alt="许可证" /&gt; 
  &lt;/div&gt;&lt;/h4&gt; 
 &lt;p&gt;👾 &lt;em&gt;&lt;strong&gt;Alibaba International Digital Commerce&lt;/strong&gt;&lt;/em&gt; 👾&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/4b5806b8-dd34-4219-ac9f-6896115c5600"&gt;https://github.com/user-attachments/assets/4b5806b8-dd34-4219-ac9f-6896115c5600&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🌟 Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;ComfyUI-Copilot&lt;/strong&gt; is an AIGC intelligent assistant built on ComfyUI that provides comprehensive support for tedious workflow building, ComfyUI-related questions, parameter optimization and iteration processes! It streamlines the debugging and deployment of AI algorithms, making creative workflows more efficient and effortless.&lt;/p&gt; 
&lt;h3&gt;🎉 &lt;strong&gt;Major Update on 2025.08.14：Evolving into a Workflow Development Coworker&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;The newly released &lt;strong&gt;ComfyUI-Copilot v2.0&lt;/strong&gt; evolves from a "helper tool" into a "development partner"—not just assisting with workflow development, but capable of autonomously completing development tasks. We now cover the entire workflow lifecycle, including generation, debugging, rewriting, and parameter tuning, aiming to deliver a significantly enhanced creative experience. Key new features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🔧 &lt;strong&gt;One-Click Debug:&lt;/strong&gt;：Automatically detects errors in your workflow, precisely identifies issues, and provides repair suggestions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔄 &lt;strong&gt;Workflow Rewriting&lt;/strong&gt;：Optimizes the current workflow based on your description, such as adjusting parameters, adding nodes, and improving logic.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🚀 &lt;strong&gt;Enhanced Workflow Generation&lt;/strong&gt;：Understands your requirements more accurately and generates tailored workflows, lowering the barrier to entry for beginners.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🧠 &lt;strong&gt;Upgraded Agent Architecture&lt;/strong&gt;：Now aware of your local ComfyUI environment, Copilot delivers optimized, personalized solutions.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;✨ &lt;strong&gt;Try the brand-new ComfyUI-Copilot v2.0 now and embark on an efficient creative journey!&lt;/strong&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/Framework-v3.png" /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔥 Core Features (V2.0.0)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Generate First Version Workflow&lt;/strong&gt;: Based on your text description, we provide workflows that meet your needs, returning 3 high-quality workflows from our library and 1 AI-generated workflow. You can import them into ComfyUI with one click to start generating images.&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Simply type in the input box: I want a workflow for xxx.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="assets/工作流生成.gif" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol start="2"&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Workflow Debug&lt;/strong&gt;: Automatically analyze errors in workflows, help you fix parameter errors and workflow connection errors, and provide optimization suggestions.&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Among the 4 workflows returned above, when you select one and click Accept, it will be imported into the ComfyUI canvas. At this time, you can click the Debug button to start debugging.&lt;/li&gt; 
   &lt;li&gt;There is a Debug button in the upper right corner of the input box. Click it to directly debug the workflow on the current canvas.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/debug.gif" /&gt; - If a missing model is identified, it will automatically prompt you to download the model. 
&lt;div align="center"&gt; 
 &lt;img src="assets/Debug模型下载.jpg" width="50%" /&gt; 
&lt;/div&gt; - You can also directly click the Model Download button below, enter the model keyword, and select the required model from the recommended models. 
&lt;img src="assets/模型下载.jpg" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol start="3"&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Unsatisfied with Previous Workflow Results?&lt;/strong&gt;: Tell us what you're not satisfied with, and let us help you modify the workflow, add nodes, modify parameters, and optimize workflow structure.&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Type in the input box: Help me add xxx to the current canvas.&lt;/li&gt; 
   &lt;li&gt;Note: If the model is new after May 2025, such as wan2.2, it may cause the LLM to fail to understand and the process to interrupt. You can try adding expert experience to help the LLM better generate workflows.&lt;/li&gt; 
   &lt;li&gt;The workflow rewrite is difficult, and it carries a lot of context, so you need to control the context length, otherwise it is easy to interrupt. It is recommended to often click the Clear Context button in the upper right corner to control the conversation length.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="assets/改写.gif" /&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/expert_add.jpg" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol start="4"&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Parameter Tuning Too Painful?&lt;/strong&gt;: We provide parameter tuning tools. You can set parameter ranges, and the system will automatically batch execute different parameter combinations and generate visual comparison results to help you quickly find the optimal parameter configuration.&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Switch to the GenLab tab and follow the guidance. Note that the workflow must be able to run normally at this time to batch generate and evaluate parameters.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/Genlab.gif" /&gt; 
&lt;p&gt;Want ComfyUI-Copilot to assist you in workflow development?&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol start="5"&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Node Recommendations&lt;/strong&gt;: Based on your description, recommend nodes you might need and provide recommendation reasons.&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Type in the input box: I want a node for xxx.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="assets/节点推荐.gif" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol start="6"&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Node Query System&lt;/strong&gt;: Select a node on the canvas, click the node query button to explore the node in depth, view its description, parameter definitions, usage tips, and downstream workflow recommendations.&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Type in the input box: What's the usage, input and output of node xxx.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="assets/节点信息查询.gif" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol start="7"&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Model Recommendations&lt;/strong&gt;: Based on your text requirements, Copilot helps you find base models and 'lora'.&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Type in the input box: I want a Lora that generates xxx images.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="assets/模型推荐.gif" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol start="8"&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Downstream Node Recommendations&lt;/strong&gt;: After you select a node on the canvas, based on the existing nodes on your canvas, recommend downstream subgraphs you might need.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="assets/下游节点推荐.gif" /&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Repository Overview&lt;/strong&gt;: Visit the &lt;a href="https://github.com/AIDC-AI/ComfyUI-Copilot"&gt;GitHub Repository&lt;/a&gt; to access the complete codebase.&lt;/p&gt; 
&lt;h4&gt;Installation&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Firstly, use git to install ComfyUI-Copilot in the ComfyUI custom_nodes directory:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ComfyUI/custom_nodes
git clone git@github.com:AIDC-AI/ComfyUI-Copilot.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ComfyUI/custom_nodes
git clone https://github.com/AIDC-AI/ComfyUI-Copilot
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Secondely, in the ComfyUI custom_nodes directory, find the ComfyUI-Copilot directory and install ComfyUI-Copilot dependencies&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ComfyUI/custom_nodes/ComfyUI-Copilot
pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are a Windows user:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python_embeded\python.exe -m pip install -r ComfyUI\custom_nodes\ComfyUI-Copilot\requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Using ComfyUI Manager&lt;/strong&gt;: Open ComfyUI Manager, click on Custom Nodes Manager, search for ComfyUI-Copilot, and click the install button, remember to update the ComfyUI-Copilot to the latest version. 
  &lt;ul&gt; 
   &lt;li&gt;The Manager requires permissions. To prevent errors during execution, it's recommended to run ComfyUI with "sudo python main.py".&lt;/li&gt; 
   &lt;li&gt;If you encounter an error during the update, try to delete the folder or click uninstall and then reinstall.&lt;/li&gt; 
   &lt;li&gt;If an error occurs during execution, it's recommended to use the bottom panel button in the upper right corner to trigger the Manager to install ComfyUI-Copilot. An error log will appear below. Take a screenshot and post it to your git issue.&lt;/li&gt; 
   &lt;li&gt;Using the Manager installation method is prone to bugs, so it's recommended to use the git installation method above.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/comfyui_manager.png" /&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/comfyui_manager_install.png" /&gt; 
&lt;h4&gt;&lt;strong&gt;Activation&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;After running the ComfyUI project, find the Copilot activation button on the left side of the panel to launch its service. &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/start.jpg" /&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;API Key Generation&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;Click the * button, enter your email address in the popup window, and the API Key will be automatically sent to your email address later. After receiving the API Key, paste it into the input box, click the save button, and you can activate Copilot. &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/keygen.png" /&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Note&lt;/strong&gt;：&lt;/h4&gt; 
&lt;p&gt;This project is continuously updated. Please update to the latest code to get new features. You can use git pull to get the latest code, or click "Update" in the ComfyUI Manager plugin.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🤝 Contributions&lt;/h2&gt; 
&lt;p&gt;We welcome any form of contribution! Feel free to make issues, pull requests, or suggest new features.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📞 Contact Us&lt;/h2&gt; 
&lt;p&gt;For any queries or suggestions, please feel free to contact: &lt;a href="mailto:ComfyUI-Copilot@service.alibaba.com"&gt;ComfyUI-Copilot@service.alibaba.com&lt;/a&gt;.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/qrcode.png" width="20%" /&gt; 
 &lt;p&gt;WeChat&lt;/p&gt; 
 &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/discordqrcode.png" width="20%" /&gt; 
 &lt;p&gt;Discord&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;📚 License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href="https://opensource.org/licenses/MIT"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#AIDC-AI/ComfyUI-Copilot&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=AIDC-AI/ComfyUI-Copilot&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>firebase/genkit</title>
      <link>https://github.com/firebase/genkit</link>
      <description>&lt;p&gt;Open-source framework for building AI-powered apps in JavaScript, Go, and Python, built and used in production by Google&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/firebase/genkit/main/docs/resources/genkit-logo-dark.png#gh-dark-mode-only" alt="Genkit logo" title="Genkit" /&gt; &lt;img src="https://raw.githubusercontent.com/firebase/genkit/main/docs/resources/genkit-logo.png#gh-light-mode-only" alt="Genkit logo" title="Genkit" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://genkit.dev"&gt;Genkit&lt;/a&gt; is an open-source framework for building full-stack AI-powered applications, built and used in production by Google's Firebase. It provides SDKs for multiple programming languages with varying levels of stability:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;JavaScript/TypeScript&lt;/strong&gt;: Production-ready with full feature support&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Go&lt;/strong&gt;: Production-ready with full feature support&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Python (Alpha)&lt;/strong&gt;: Early development with core functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It offers a unified interface for integrating AI models from providers like &lt;a href="https://genkit.dev/docs/plugins/google-genai"&gt;Google&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/plugins/openai"&gt;OpenAI&lt;/a&gt;, &lt;a href="https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-anthropic"&gt;Anthropic&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/plugins/ollama/"&gt;Ollama&lt;/a&gt;, and more. Rapidly build and deploy production-ready chatbots, automations, and recommendation systems using streamlined APIs for multimodal content, structured outputs, tool calling, and agentic workflows.&lt;/p&gt; 
&lt;p&gt;Get started with just a few lines of code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { genkit } from 'genkit';
import { googleAI } from '@genkit-ai/google-genai';

const ai = genkit({ plugins: [googleAI()] });

const { text } = await ai.generate({
    model: googleAI.model('gemini-2.5-flash'),
    prompt: 'Why is Firebase awesome?'
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Explore &amp;amp; build with Genkit&lt;/h2&gt; 
&lt;p&gt;Play with AI sample apps, with visualizations of the Genkit code that powers them, at no cost to you.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://examples.genkit.dev"&gt;Explore Genkit by Example&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Key capabilities&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Broad AI model support&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Use a unified interface to integrate with hundreds of models from providers like &lt;a href="https://genkit.dev/docs/plugins/google-genai"&gt;Google&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/plugins/openai"&gt; OpenAI&lt;/a&gt;, &lt;a href="https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-anthropic"&gt; Anthropic&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/plugins/ollama"&gt;Ollama&lt;/a&gt;, and more. Explore, compare, and use the best models for your needs.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Simplified AI development&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Use streamlined APIs to build AI features with &lt;a href="https://genkit.dev/docs/models#structured-output"&gt; structured output&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/tool-calling"&gt;agentic tool calling&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/rag"&gt;context-aware generation&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/models#multimodal"&gt;multi-modal input/output&lt;/a&gt;, and more. Genkit handles the complexity of AI development, so you can build and iterate faster.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Web and mobile ready&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Integrate seamlessly with frameworks and platforms including Next.js, React, Angular, iOS, Android, using purpose-built &lt;a href="https://genkit.dev/docs/firebase"&gt;client SDKs&lt;/a&gt; and helpers.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Cross-language support&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Build with the language that best fits your project. Genkit provides SDKs for JavaScript/TypeScript, Go, and Python (Alpha) with consistent APIs and capabilities across all supported languages.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Deploy anywhere&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Deploy AI logic to any environment that supports your chosen programming language, such as &lt;a href="https://genkit.dev/docs/firebase"&gt;Cloud Functions for Firebase&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/cloud-run"&gt;Google Cloud Run&lt;/a&gt;, or &lt;a href="https://genkit.dev/docs/deploy-node"&gt;third-party platforms&lt;/a&gt;, with or without Google services.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Developer tools&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Accelerate AI development with a purpose-built, local &lt;a href="https://genkit.dev/docs/devtools"&gt;CLI and Developer UI&lt;/a&gt;. Test prompts and flows against individual inputs or datasets, compare outputs from different models, debug with detailed execution traces, and use immediate visual feedback to iterate rapidly on prompts.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Production monitoring&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Ship AI features with confidence using comprehensive production monitoring. Track model performance, and request volumes, latency, and error rates in a &lt;a href="https://genkit.dev/docs/observability/getting-started"&gt; purpose-built dashboard&lt;/a&gt;. Identify issues quickly with detailed observability metrics, and ensure your AI features meet quality and performance targets in real-world usage.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;How does it work?&lt;/h2&gt; 
&lt;p&gt;Genkit simplifies AI integration with an open-source SDK and unified APIs that work across various model providers and programming languages. It abstracts away complexity so you can focus on delivering great user experiences.&lt;/p&gt; 
&lt;p&gt;Some key features offered by Genkit include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/models"&gt;Text and image generation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/models#structured-output"&gt;Type-safe, structured data generation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/tool-calling"&gt;Tool calling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/dotprompt"&gt;Prompt templating&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/chat"&gt;Persisted chat interfaces&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/flows"&gt;AI workflows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/rag"&gt;AI-powered data retrieval (RAG)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Genkit is designed for server-side deployment in multiple language environments, and also provides seamless client-side integration through dedicated helpers and &lt;a href="https://genkit.dev/docs/firebase"&gt;client SDKs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Implementation path&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Choose your language and model provider&lt;/td&gt; 
   &lt;td&gt;Select the Genkit SDK for your preferred language (JavaScript/TypeScript, Go, or Python (Alpha)). Choose a model provider like &lt;a href="https://genkit.dev/docs/plugins/google-genai"&gt;Google Gemini&lt;/a&gt; or Anthropic, and get an API key. Some providers, like &lt;a href="https://genkit.dev/docs/plugins/vertex-ai"&gt;Vertex AI&lt;/a&gt;, may rely on a different means of authentication.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Install the SDK and initialize&lt;/td&gt; 
   &lt;td&gt;Install the Genkit SDK, model-provider package of your choice, and the Genkit CLI. Import the Genkit and provider packages and initialize Genkit with the provider API key.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;span&gt;3&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Write and test AI features&lt;/td&gt; 
   &lt;td&gt;Use the Genkit SDK to build AI features for your use case, from basic text generation to complex multi-step workflows and agents. Use the CLI and Developer UI to help you rapidly test and iterate.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Deploy and monitor&lt;/td&gt; 
   &lt;td&gt;Deploy your AI features to Firebase, Google Cloud Run, or any environment that supports your chosen programming language. Integrate them into your app, and monitor them in production in the Firebase console.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/get-started"&gt;JavaScript/TypeScript quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/go/docs/get-started-go"&gt;Go quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/python/docs/get-started/"&gt;Python quickstart&lt;/a&gt; (Alpha)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development tools&lt;/h2&gt; 
&lt;p&gt;Genkit provides a CLI and a local UI to streamline your AI development workflow.&lt;/p&gt; 
&lt;h3&gt;CLI&lt;/h3&gt; 
&lt;p&gt;The Genkit CLI includes commands for running and evaluating your Genkit functions (flows) and collecting telemetry and logs.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Install:&lt;/strong&gt; &lt;code&gt;npm install -g genkit-cli&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Run a command, wrapped with telemetry, a interactive developer UI, etc:&lt;/strong&gt; &lt;code&gt;genkit start -- &amp;lt;command to run your code&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Developer UI&lt;/h3&gt; 
&lt;p&gt;The Genkit developer UI is a local interface for testing, debugging, and iterating on your AI application.&lt;/p&gt; 
&lt;p&gt;Key features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Run:&lt;/strong&gt; Execute and experiment with Genkit flows, prompts, queries, and more in dedicated playgrounds.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Inspect:&lt;/strong&gt; Analyze detailed traces of past executions, including step-by-step breakdowns of complex flows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evaluate:&lt;/strong&gt; Review the results of evaluations run against your flows, including performance metrics and links to relevant traces.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/firebase/genkit/main/docs/resources/readme-ui-traces-screenshot.png" width="700" alt="Screenshot of Genkit Developer UI showing traces" /&gt; 
&lt;h2&gt;Try Genkit in Firebase Studio&lt;/h2&gt; 
&lt;p&gt;Want to skip the local setup? Click below to try out Genkit using &lt;a href="https://firebase.studio"&gt;Firebase Studio&lt;/a&gt;, Google's AI-assisted workspace for full-stack app development in the cloud.&lt;/p&gt; 
&lt;a href="https://studio.firebase.google.com/new/genkit"&gt; &lt;img height="32" alt="Open in Firebase Studio" src="https://cdn.firebasestudio.dev/btn/open_bright_32.svg?sanitize=true" /&gt; &lt;/a&gt; 
&lt;h2&gt;Connect with us&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/qXt5zzQKpc"&gt;&lt;strong&gt;Join us on Discord&lt;/strong&gt;&lt;/a&gt; – Get help, share ideas, and chat with other developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firebase/genkit/issues"&gt;&lt;strong&gt;Contribute on GitHub&lt;/strong&gt;&lt;/a&gt; – Report bugs, suggest features, or explore the source code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/genkit-ai/"&gt;&lt;strong&gt;Contribute to Documentation and Samples&lt;/strong&gt;&lt;/a&gt; – Report issues in Genkit's &lt;a href="https://github.com/genkit-ai/docsite"&gt;documentation&lt;/a&gt;, or contribute to the &lt;a href="https://github.com/genkit-ai/samples"&gt;samples&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions to Genkit are welcome and highly appreciated! See our &lt;a href="https://raw.githubusercontent.com/firebase/genkit/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;Genkit is built by &lt;a href="https://firebase.google.com/"&gt;Firebase&lt;/a&gt; with contributions from the &lt;a href="https://github.com/firebase/genkit/graphs/contributors"&gt;Open Source Community&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ItzCrazyKns/Perplexica</title>
      <link>https://github.com/ItzCrazyKns/Perplexica</link>
      <description>&lt;p&gt;Perplexica is an AI-powered search engine. It is an Open source alternative to Perplexity AI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🚀 Perplexica - An AI-powered search engine 🔎 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;div align="center" markdown="1"&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.warp.dev/perplexica"&gt; &lt;img alt="Warp sponsorship" width="400" src="https://github.com/user-attachments/assets/775dd593-9b5f-40f1-bf48-479faff4c27b" /&gt; &lt;/a&gt; 
 &lt;h3&gt;&lt;a href="https://www.warp.dev/perplexica"&gt;Warp, the AI Devtool that lives in your terminal&lt;/a&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;a href="https://www.warp.dev/perplexica"&gt;Available for MacOS, Linux, &amp;amp; Windows&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/26aArMy8tT"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/26aArMy8tT?style=flat" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/.assets/perplexica-screenshot.png?" alt="preview" /&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents 
 &lt;!-- omit in toc --&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#preview"&gt;Preview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#installation"&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#getting-started-with-docker-recommended"&gt;Getting Started with Docker (Recommended)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#non-docker-installation"&gt;Non-Docker Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#ollama-connection-errors"&gt;Ollama Connection Errors&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#using-as-a-search-engine"&gt;Using as a Search Engine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#using-perplexicas-api"&gt;Using Perplexica's API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#expose-perplexica-to-network"&gt;Expose Perplexica to a network&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#one-click-deployment"&gt;One-Click Deployment&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#upcoming-features"&gt;Upcoming Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#support-us"&gt;Support Us&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#donations"&gt;Donations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#contribution"&gt;Contribution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#help-and-support"&gt;Help and Support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Perplexica is an open-source AI-powered searching tool or an AI-powered search engine that goes deep into the internet to find answers. Inspired by Perplexity AI, it's an open-source option that not just searches the web but understands your questions. It uses advanced machine learning algorithms like similarity searching and embeddings to refine results and provides clear answers with sources cited.&lt;/p&gt; 
&lt;p&gt;Using SearxNG to stay current and fully open source, Perplexica ensures you always get the most up-to-date information without compromising your privacy.&lt;/p&gt; 
&lt;p&gt;Want to know more about its architecture and how it works? You can read it &lt;a href="https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/architecture/README.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/.assets/perplexica-preview.gif" alt="video-preview" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Local LLMs&lt;/strong&gt;: You can utilize local LLMs such as Qwen, DeepSeek, Llama, and Mistral.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Two Main Modes:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Copilot Mode:&lt;/strong&gt; (In development) Boosts search by generating different queries to find more relevant internet sources. Like normal search instead of just using the context by SearxNG, it visits the top matches and tries to find relevant sources to the user's query directly from the page.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Normal Mode:&lt;/strong&gt; Processes your query and performs a web search.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Focus Modes:&lt;/strong&gt; Special modes to better answer specific types of questions. Perplexica currently has 6 focus modes: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;All Mode:&lt;/strong&gt; Searches the entire web to find the best results.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Writing Assistant Mode:&lt;/strong&gt; Helpful for writing tasks that do not require searching the web.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Academic Search Mode:&lt;/strong&gt; Finds articles and papers, ideal for academic research.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;YouTube Search Mode:&lt;/strong&gt; Finds YouTube videos based on the search query.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Wolfram Alpha Search Mode:&lt;/strong&gt; Answers queries that need calculations or data analysis using Wolfram Alpha.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Reddit Search Mode:&lt;/strong&gt; Searches Reddit for discussions and opinions related to the query.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Current Information:&lt;/strong&gt; Some search tools might give you outdated info because they use data from crawling bots and convert them into embeddings and store them in a index. Unlike them, Perplexica uses SearxNG, a metasearch engine to get the results and rerank and get the most relevant source out of it, ensuring you always get the latest information without the overhead of daily data updates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API&lt;/strong&gt;: Integrate Perplexica into your existing applications and make use of its capibilities.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It has many more features like image and video search. Some of the planned features are mentioned in &lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#upcoming-features"&gt;upcoming features&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;There are mainly 2 ways of installing Perplexica - With Docker, Without Docker. Using Docker is highly recommended.&lt;/p&gt; 
&lt;h3&gt;Getting Started with Docker (Recommended)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Ensure Docker is installed and running on your system.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the Perplexica repository:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/ItzCrazyKns/Perplexica.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After cloning, navigate to the directory containing the project files.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Rename the &lt;code&gt;sample.config.toml&lt;/code&gt; file to &lt;code&gt;config.toml&lt;/code&gt;. For Docker setups, you need only fill in the following fields:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;OPENAI&lt;/code&gt;: Your OpenAI API key. &lt;strong&gt;You only need to fill this if you wish to use OpenAI's models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;CUSTOM_OPENAI&lt;/code&gt;: Your OpenAI-API-compliant local server URL, model name, and API key. You should run your local server with host set to &lt;code&gt;0.0.0.0&lt;/code&gt;, take note of which port number it is running on, and then use that port number to set &lt;code&gt;API_URL = http://host.docker.internal:PORT_NUMBER&lt;/code&gt;. You must specify the model name, such as &lt;code&gt;MODEL_NAME = "unsloth/DeepSeek-R1-0528-Qwen3-8B-GGUF:Q4_K_XL"&lt;/code&gt;. Finally, set &lt;code&gt;API_KEY&lt;/code&gt; to the appropriate value. If you have not defined an API key, just put anything you want in-between the quotation marks: &lt;code&gt;API_KEY = "whatever-you-want-but-not-blank"&lt;/code&gt; &lt;strong&gt;You only need to configure these settings if you want to use a local OpenAI-compliant server, such as Llama.cpp's &lt;a href="https://github.com/ggml-org/llama.cpp/raw/master/tools/server/README.md"&gt;&lt;code&gt;llama-server&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;OLLAMA&lt;/code&gt;: Your Ollama API URL. You should enter it as &lt;code&gt;http://host.docker.internal:PORT_NUMBER&lt;/code&gt;. If you installed Ollama on port 11434, use &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;. For other ports, adjust accordingly. &lt;strong&gt;You need to fill this if you wish to use Ollama's models instead of OpenAI's&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;GROQ&lt;/code&gt;: Your Groq API key. &lt;strong&gt;You only need to fill this if you wish to use Groq's hosted models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;ANTHROPIC&lt;/code&gt;: Your Anthropic API key. &lt;strong&gt;You only need to fill this if you wish to use Anthropic models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;Gemini&lt;/code&gt;: Your Gemini API key. &lt;strong&gt;You only need to fill this if you wish to use Google's models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;DEEPSEEK&lt;/code&gt;: Your Deepseek API key. &lt;strong&gt;Only needed if you want Deepseek models.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;AIMLAPI&lt;/code&gt;: Your AI/ML API key. &lt;strong&gt;Only needed if you want to use AI/ML API models and embeddings.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can change these after starting Perplexica from the settings dialog.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;SIMILARITY_MEASURE&lt;/code&gt;: The similarity measure to use (This is filled by default; you can leave it as is if you are unsure about it.)&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ensure you are in the directory containing the &lt;code&gt;docker-compose.yaml&lt;/code&gt; file and execute:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Wait a few minutes for the setup to complete. You can access Perplexica at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in your web browser.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: After the containers are built, you can start Perplexica directly from Docker without having to open a terminal.&lt;/p&gt; 
&lt;h3&gt;Non-Docker Installation&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install SearXNG and allow &lt;code&gt;JSON&lt;/code&gt; format in the SearXNG settings.&lt;/li&gt; 
 &lt;li&gt;Clone the repository and rename the &lt;code&gt;sample.config.toml&lt;/code&gt; file to &lt;code&gt;config.toml&lt;/code&gt; in the root directory. Ensure you complete all required fields in this file.&lt;/li&gt; 
 &lt;li&gt;After populating the configuration run &lt;code&gt;npm i&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Install the dependencies and then execute &lt;code&gt;npm run build&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Finally, start the app by running &lt;code&gt;npm run start&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Using Docker is recommended as it simplifies the setup process, especially for managing environment variables and dependencies.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/installation"&gt;installation documentation&lt;/a&gt; for more information like updating, etc.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;h4&gt;Local OpenAI-API-Compliant Servers&lt;/h4&gt; 
&lt;p&gt;If Perplexica tells you that you haven't configured any chat model providers, ensure that:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Your server is running on &lt;code&gt;0.0.0.0&lt;/code&gt; (not &lt;code&gt;127.0.0.1&lt;/code&gt;) and on the same port you put in the API URL.&lt;/li&gt; 
 &lt;li&gt;You have specified the correct model name loaded by your local LLM server.&lt;/li&gt; 
 &lt;li&gt;You have specified the correct API key, or if one is not defined, you have put &lt;em&gt;something&lt;/em&gt; in the API key field and not left it empty.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Ollama Connection Errors&lt;/h4&gt; 
&lt;p&gt;If you're encountering an Ollama connection error, it is likely due to the backend being unable to connect to Ollama's API. To fix this issue you can:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Check your Ollama API URL:&lt;/strong&gt; Ensure that the API URL is correctly set in the settings menu.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Update API URL Based on OS:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Windows:&lt;/strong&gt; Use &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Mac:&lt;/strong&gt; Use &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Linux:&lt;/strong&gt; Use &lt;code&gt;http://&amp;lt;private_ip_of_host&amp;gt;:11434&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;Adjust the port number if you're using a different one.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux Users - Expose Ollama to Network:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Inside &lt;code&gt;/etc/systemd/system/ollama.service&lt;/code&gt;, you need to add &lt;code&gt;Environment="OLLAMA_HOST=0.0.0.0:11434"&lt;/code&gt;. (Change the port number if you are using a different one.) Then reload the systemd manager configuration with &lt;code&gt;systemctl daemon-reload&lt;/code&gt;, and restart Ollama by &lt;code&gt;systemctl restart ollama&lt;/code&gt;. For more information see &lt;a href="https://github.com/ollama/ollama/raw/main/docs/faq.md#setting-environment-variables-on-linux"&gt;Ollama docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Ensure that the port (default is 11434) is not blocked by your firewall.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Using as a Search Engine&lt;/h2&gt; 
&lt;p&gt;If you wish to use Perplexica as an alternative to traditional search engines like Google or Bing, or if you want to add a shortcut for quick access from your browser's search bar, follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open your browser's settings.&lt;/li&gt; 
 &lt;li&gt;Navigate to the 'Search Engines' section.&lt;/li&gt; 
 &lt;li&gt;Add a new site search with the following URL: &lt;code&gt;http://localhost:3000/?q=%s&lt;/code&gt;. Replace &lt;code&gt;localhost&lt;/code&gt; with your IP address or domain name, and &lt;code&gt;3000&lt;/code&gt; with the port number if Perplexica is not hosted locally.&lt;/li&gt; 
 &lt;li&gt;Click the add button. Now, you can use Perplexica directly from your browser's search bar.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Using Perplexica's API&lt;/h2&gt; 
&lt;p&gt;Perplexica also provides an API for developers looking to integrate its powerful search engine into their own applications. You can run searches, use multiple models and get answers to your queries.&lt;/p&gt; 
&lt;p&gt;For more details, check out the full documentation &lt;a href="https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/API/SEARCH.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Expose Perplexica to network&lt;/h2&gt; 
&lt;p&gt;Perplexica runs on Next.js and handles all API requests. It works right away on the same network and stays accessible even with port forwarding.&lt;/p&gt; 
&lt;h2&gt;One-Click Deployment&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://usw.sealos.io/?openapp=system-template%3FtemplateName%3Dperplexica"&gt;&lt;img src="https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg?sanitize=true" alt="Deploy to Sealos" /&gt;&lt;/a&gt; &lt;a href="https://repocloud.io/details/?app_id=267"&gt;&lt;img src="https://d16t0pc4846x52.cloudfront.net/deploylobe.svg?sanitize=true" alt="Deploy to RepoCloud" /&gt;&lt;/a&gt; &lt;a href="https://template.run.claw.cloud/?referralCode=U11MRQ8U9RM4&amp;amp;openapp=system-fastdeploy%3FtemplateName%3Dperplexica"&gt;&lt;img src="https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg?sanitize=true" alt="Run on ClawCloud" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Upcoming Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Add settings page&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Adding support for local LLMs&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; History Saving features&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Introducing various Focus Modes&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Adding API support&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Adding Discover&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Finalizing Copilot Mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support Us&lt;/h2&gt; 
&lt;p&gt;If you find Perplexica useful, consider giving us a star on GitHub. This helps more people discover Perplexica and supports the development of new features. Your support is greatly appreciated.&lt;/p&gt; 
&lt;h3&gt;Donations&lt;/h3&gt; 
&lt;p&gt;We also accept donations to help sustain our project. If you would like to contribute, you can use the following options to donate. Thank you for your support!&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Ethereum&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Address: &lt;code&gt;0xB025a84b2F269570Eb8D4b05DEdaA41D8525B6DD&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Perplexica is built on the idea that AI and large language models should be easy for everyone to use. If you find bugs or have ideas, please share them in via GitHub Issues. For more information on contributing to Perplexica you can read the &lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file to learn more about Perplexica and how you can contribute to it.&lt;/p&gt; 
&lt;h2&gt;Help and Support&lt;/h2&gt; 
&lt;p&gt;If you have any questions or feedback, please feel free to reach out to us. You can create an issue on GitHub or join our Discord server. There, you can connect with other users, share your experiences and reviews, and receive more personalized help. &lt;a href="https://discord.gg/EFwsmQDgAu"&gt;Click here&lt;/a&gt; to join the Discord server. To discuss matters outside of regular support, feel free to contact me on Discord at &lt;code&gt;itzcrazykns&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Thank you for exploring Perplexica, the AI-powered search engine designed to enhance your search experience. We are constantly working to improve Perplexica and expand its capabilities. We value your feedback and contributions which help us make Perplexica even better. Don't forget to check back for updates and new features!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>n8n-io/n8n</title>
      <link>https://github.com/n8n-io/n8n</link>
      <description>&lt;p&gt;Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/10284570/173569848-c624317f-42b1-45a6-ab09-f0ea3c247648.png" alt="Banner image" /&gt;&lt;/p&gt; 
&lt;h1&gt;n8n - Secure Workflow Automation for Technical Teams&lt;/h1&gt; 
&lt;p&gt;n8n is a workflow automation platform that gives technical teams the flexibility of code with the speed of no-code. With 400+ integrations, native AI capabilities, and a fair-code license, n8n lets you build powerful automations while maintaining full control over your data and deployments.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/n8n-io/n8n/master/assets/n8n-screenshot-readme.png" alt="n8n.io - Screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Key Capabilities&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code When You Need It&lt;/strong&gt;: Write JavaScript/Python, add npm packages, or use the visual interface&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI-Native Platform&lt;/strong&gt;: Build AI agent workflows based on LangChain with your own data and models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full Control&lt;/strong&gt;: Self-host with our fair-code license or use our &lt;a href="https://app.n8n.cloud/login"&gt;cloud offering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise-Ready&lt;/strong&gt;: Advanced permissions, SSO, and air-gapped deployments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Active Community&lt;/strong&gt;: 400+ integrations and 900+ ready-to-use &lt;a href="https://n8n.io/workflows"&gt;templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Try n8n instantly with &lt;a href="https://docs.n8n.io/hosting/installation/npm/"&gt;npx&lt;/a&gt; (requires &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx n8n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or deploy with &lt;a href="https://docs.n8n.io/hosting/installation/docker/"&gt;Docker&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker volume create n8n_data
docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Access the editor at &lt;a href="http://localhost:5678"&gt;http://localhost:5678&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📚 &lt;a href="https://docs.n8n.io"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;a href="https://n8n.io/integrations"&gt;400+ Integrations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💡 &lt;a href="https://n8n.io/workflows"&gt;Example Workflows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;a href="https://docs.n8n.io/langchain/"&gt;AI &amp;amp; LangChain Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👥 &lt;a href="https://community.n8n.io"&gt;Community Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📖 &lt;a href="https://community.n8n.io/c/tutorials/28"&gt;Community Tutorials&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Need help? Our community forum is the place to get support and connect with other users: &lt;a href="https://community.n8n.io"&gt;community.n8n.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;n8n is &lt;a href="https://faircode.io"&gt;fair-code&lt;/a&gt; distributed under the &lt;a href="https://github.com/n8n-io/n8n/raw/master/LICENSE.md"&gt;Sustainable Use License&lt;/a&gt; and &lt;a href="https://github.com/n8n-io/n8n/raw/master/LICENSE_EE.md"&gt;n8n Enterprise License&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Source Available&lt;/strong&gt;: Always visible source code&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-Hostable&lt;/strong&gt;: Deploy anywhere&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: Add your own nodes and functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="mailto:license@n8n.io"&gt;Enterprise licenses&lt;/a&gt; available for additional features and support.&lt;/p&gt; 
&lt;p&gt;Additional information about the license model can be found in the &lt;a href="https://docs.n8n.io/reference/license/"&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Found a bug 🐛 or have a feature idea ✨? Check our &lt;a href="https://github.com/n8n-io/n8n/raw/master/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Join the Team&lt;/h2&gt; 
&lt;p&gt;Want to shape the future of automation? Check out our &lt;a href="https://n8n.io/careers"&gt;job posts&lt;/a&gt; and join our team!&lt;/p&gt; 
&lt;h2&gt;What does n8n mean?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Short answer:&lt;/strong&gt; It means "nodemation" and is pronounced as n-eight-n.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Long answer:&lt;/strong&gt; "I get that question quite often (more often than I expected) so I decided it is probably best to answer it here. While looking for a good name for the project with a free domain I realized very quickly that all the good ones I could think of were already taken. So, in the end, I chose nodemation. 'node-' in the sense that it uses a Node-View and that it uses Node.js and '-mation' for 'automation' which is what the project is supposed to help with. However, I did not like how long the name was and I could not imagine writing something that long every time in the CLI. That is when I then ended up on 'n8n'." - &lt;strong&gt;Jan Oberhauser, Founder and CEO, n8n.io&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>heroui-inc/heroui</title>
      <link>https://github.com/heroui-inc/heroui</link>
      <description>&lt;p&gt;🚀 Beautiful, fast and modern React UI library. (Previously NextUI)&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://heroui.com"&gt; &lt;img width="20%" src="https://raw.githubusercontent.com/heroui-inc/heroui/main/apps/docs/public/isotipo.png" alt="heorui" /&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a href="https://heroui.com"&gt;HeroUI&lt;/a&gt;&lt;/h1&gt;
&lt;a href="https://heroui.com"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/heroui-inc/heroui/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/npm/l/@heroui/react?style=flat" alt="License" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/jrgarciadev/nextui"&gt; &lt;img src="https://codecov.io/gh/jrgarciadev/nextui/branch/main/graph/badge.svg?token=QJF2QKR5N4" alt="codecov badge" /&gt; &lt;/a&gt; 
 &lt;!-- &lt;a href="https://github.com/heroui-inc/heroui/actions/workflows/main.yaml"&gt;
    &lt;img src="https://github.com/heroui-inc/heroui/actions/workflows/main.yaml/badge.svg" alt="CI/CD heroui"&gt;
  &lt;/a&gt; --&gt; &lt;a href="https://www.npmjs.com/package/@heroui/react"&gt; &lt;img src="https://img.shields.io/npm/dm/@heroui/react.svg?style=flat-round" alt="npm downloads" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a aria-label="heroui learn" href="https://heroui.com/learn"&gt;&lt;/a&gt;&lt;a href="https://heroui.com/guide"&gt;https://heroui.com/guide&lt;/a&gt; to get started with HeroUI.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://heroui.com/docs"&gt;https://heroui.com/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Storybook&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://storybook.heroui.com/"&gt;https://storybook.heroui.com&lt;/a&gt; to view the storybook for all components.&lt;/p&gt; 
&lt;h2&gt;Canary Release&lt;/h2&gt; 
&lt;p&gt;Canary versions are available after every merge into &lt;code&gt;canary&lt;/code&gt; branch. You can install the packages with the tag &lt;code&gt;canary&lt;/code&gt; in npm to use the latest changes before the next production release.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://canary.heroui.com/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://canary-sb.heroui.com"&gt;Storybook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;We're excited to see the community adopt HeroUI, raise issues, and provide feedback. Whether it's a feature request, bug report, or a project to showcase, please get involved!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/9b6yyZKmH4"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/hero_ui"&gt;X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/heroui-inc/heroui/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are always welcome!&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/heroui-inc/heroui/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for ways to get started.&lt;/p&gt; 
&lt;p&gt;Please adhere to this project's &lt;a href="https://github.com/heroui-inc/heroui/raw/main/CODE_OF_CONDUCT.md"&gt;CODE_OF_CONDUCT&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://choosealicense.com/licenses/mit/"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>11cafe/jaaz</title>
      <link>https://github.com/11cafe/jaaz</link>
      <description>&lt;p&gt;The world's first open-source multimodal creative assistant This is a substitute for Canva and Manus that prioritizes privacy and is usable locally.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;a href="https://jaaz.app" target="_blank"&gt; Jaaz.app&lt;/a&gt; &lt;p align="center"&gt;Open source Canva AI alternative&lt;/p&gt; &lt;p align="center"&gt; &lt;a href="https://jaaz.app"&gt; &lt;img src="https://github.com/user-attachments/assets/e0cffb94-8c6f-4867-800a-c144aceb6d54" alt="Jaaz Logo" /&gt; &lt;/a&gt; &lt;/p&gt; &lt;/h1&gt; 
&lt;p align="center"&gt;The world's first open-source multimodal canvas creative agent&lt;/p&gt; 
&lt;p align="center"&gt;This is a substitute for Canva and Manus that prioritizes privacy and is usable locally.&lt;/p&gt; 
&lt;p&gt; &lt;b&gt;📣 [New!] Enterprise Cloud “Full” Edition&lt;/b&gt; — Private/on-prem deployment &amp;amp; commercial licensing (Docker image or full source). Includes all jaaz.app online features. &lt;b&gt;30% OFF&lt;/b&gt; through &lt;b&gt;Sep 15, 2025&lt;/b&gt;. &lt;a href="mailto:info@jaaz.app"&gt;Contact us →&lt;/a&gt; info@jaaz.app &lt;br /&gt; &lt;br /&gt; &lt;b&gt;📣 [New!] 企业云端完整版&lt;/b&gt; — 支持&lt;span&gt;私有化部署&lt;/span&gt;与&lt;span&gt;商业授权&lt;/span&gt;（Docker 镜像或源码交付），包含 jaaz.app 全量线上功能。限时 &lt;b&gt;30% OFF&lt;/b&gt;，截止 &lt;b&gt;2025-09-15&lt;/b&gt;。 &lt;a href="mailto:info@jaaz.app"&gt;了解/洽谈 →&lt;/a&gt; info@jaaz.app &lt;/p&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/11cafe/jaaz/raw/main/README_zh.md"&gt;中文版&lt;/a&gt;| &lt;a href="https://mxnpt25l6k.feishu.cn/docx/LvcTdlVbFoRAZWxnhBYcqVydnpc"&gt;新手指南&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://discord.gg/dS7kuT66wc"&gt; &lt;img src="https://img.shields.io/badge/Discord-5865F2?logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="Discord" /&gt; &lt;/a&gt; &lt;a href="https://github.com/11cafe/jaaz/stargazers"&gt; &lt;img src="https://img.shields.io/github/stars/11cafe/jaaz?style=for-the-badge&amp;amp;logo=github" alt="GitHub Stars" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; Magic Canva! &lt;/p&gt;
&lt;p&gt;"Build" your ideas like playing with LEGO—paint directly, point with arrows, and the AI instantly understands and generates results. &lt;img width="900" alt="Screenshot 2025-06-02 at 3 03 49 PM" src="https://github.com/user-attachments/assets/543b170c-14f7-4a73-96bd-909662138592" /&gt; &lt;img width="900" alt="Screenshot 2025-06-02 at 3 03 49 PM" src="https://github.com/user-attachments/assets/7dd9af32-cc60-4145-9b30-7db96d8fa09a" /&gt;&lt;/p&gt; 
&lt;p&gt;Magic video!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/b7abf987-c65d-49b1-8178-82770873c583"&gt;https://github.com/user-attachments/assets/b7abf987-c65d-49b1-8178-82770873c583&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create Viral Shorts with a Single Sentence 
 &lt;video src="https://github.com/user-attachments/assets/1c15e792-098a-4557-b310-d9c223f73442" controls width="100%"&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;h2&gt;✨ Getting started &amp;amp; staying tuned with us.&lt;/h2&gt; 
&lt;p&gt;Star us, and you will receive all release notifications from GitHub without any delay! &lt;img width="900" alt="Screenshot 2025-06-02 at 3 03 49 PM" src="https://github.com/user-attachments/assets/1c9a3661-80a4-4fba-a30f-f469898b0aec" /&gt;&lt;/p&gt; 
&lt;h2&gt;✨ Key Features&lt;/h2&gt; 
&lt;p&gt;🎬 One-Prompt Image &amp;amp; Video Generation Turn one prompt into complete images or videos in seconds.&lt;/p&gt; 
&lt;p&gt;-Supports GPT-4o, Midjourney, VEO3, Kling,veo3,seedance etc.&lt;/p&gt; 
&lt;p&gt;-Auto-optimized prompts &amp;amp; multi-turn refinement&lt;/p&gt; 
&lt;p&gt;🧙 Magic Canvas&amp;amp;Magic Video Prompt-free creation — build like Lego.&lt;/p&gt; 
&lt;p&gt;-Simple sketching and free combination — AI instantly understands and generates.&lt;/p&gt; 
&lt;p&gt;-AI understands and generates instantly&lt;/p&gt; 
&lt;p&gt;-No prompt writing needed&lt;/p&gt; 
&lt;p&gt;-Describe steps simply on the video, and AI will generate following them.&lt;/p&gt; 
&lt;p&gt;🖼️ Infinite Canvas &amp;amp; Visual Storyboarding Plan scenes with an unlimited canvas&lt;/p&gt; 
&lt;p&gt;-Link layouts, manage media visually&lt;/p&gt; 
&lt;p&gt;-Real-time collaboration supported&lt;/p&gt; 
&lt;p&gt;🤖 Smart AI Agent System -Chat to insert objects, transfer styles, control logic&lt;/p&gt; 
&lt;p&gt;-Works with local (ComfyUI) &amp;amp; cloud models&lt;/p&gt; 
&lt;p&gt;-Maintains multi-character coherence&lt;/p&gt; 
&lt;p&gt;⚙️ Flexible Deployment &amp;amp; Local Assets -Fully offline or hybrid setup (Ollama + APIs)&lt;/p&gt; 
&lt;p&gt;-Built-in library for media &amp;amp; prompts&lt;/p&gt; 
&lt;p&gt;-Cross-platform: Windows &amp;amp; macOS&lt;/p&gt; 
&lt;p&gt;🔐 Privacy &amp;amp; Security -Local-first, no data leaves your device&lt;/p&gt; 
&lt;p&gt;-Open-source, no tracking&lt;/p&gt; 
&lt;p&gt;-Safe for commercial use — you own your data&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Download here: &lt;a href="https://jaaz.app/"&gt;https://jaaz.app/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Click the "Log In" button at the top right of the homepage to access API models. With a low-cost plan, you can seamlessly use a variety of powerful APIs.&lt;/p&gt; 
&lt;img width="400" alt="Screenshot 2025-06-02 at 3 08 51 PM" src="https://github.com/user-attachments/assets/0055557d-c247-4801-ac3f-01ed4fa775ae" /&gt; 
&lt;p&gt;Start chatting with agent to generate stories or storyboards!&lt;/p&gt; 
&lt;h2&gt;Cases&lt;/h2&gt; 
&lt;img width="889" height="1103" alt="Frame 122" src="https://github.com/user-attachments/assets/90503110-0f5c-4297-bbfe-6d35e3f54d4c" /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prompt: Help me place this character in six different scenes, all in front of landmark buildings from around the world. The lighting is harmonious. He takes photos from all over the world, realistic, with warm light, high picture quality, and a picture ratio of 9:16&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/4e2634b3-9068-47cd-a18f-ddde8f218d25" alt="814c563b08f6ef44de0c2c31f0fdd00b-min" /&gt;&lt;/p&gt; 
&lt;img width="1000" alt="Screenshot 2025-06-02 at 3 51 56 AM" src="https://github.com/user-attachments/assets/5d8efe74-99b0-41bc-aa3e-6f7b92b69c36" /&gt; 
&lt;img width="900" alt="Screenshot 2025-06-02 at 3 51 56 AM" src="https://github.com/user-attachments/assets/186982a9-5e4e-4ac1-a42c-c840092fd616" /&gt; 
&lt;img width="900" alt="Screenshot 2025-06-02 at 3 03 49 PM" src="https://github.com/user-attachments/assets/b8508efd-def8-40ed-8ab5-62ed3c26de67" /&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/2065cabd-af32-43b6-bc01-59a935d9a287" alt="image26" /&gt;&lt;/p&gt; 
&lt;h2&gt;Team and Enterprise Support:&lt;/h2&gt; 
&lt;p&gt;Support for multi-user private deployment of enterprise teams, ensuring privacy and security.&lt;/p&gt; 
&lt;p&gt;Please contact via email: &lt;a href="mailto:aifoxdw@gmail.com"&gt;aifoxdw@gmail.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;WeChat: aifox1 &lt;img width="500" alt="Screenshot 2025-06-02 at 3 51 56 AM" src="https://github.com/user-attachments/assets/d5c54eda-120b-4fc2-a571-68fcab440868" /&gt;&lt;/p&gt; 
&lt;h2&gt;Manual Install (For Linux or local builds)&lt;/h2&gt; 
&lt;p&gt;🟠 &lt;strong&gt;Need Python version &amp;gt;=3.12&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;First git clone this repo:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;git clone https://github.com/11cafe/localart&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;cd react&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm install --force&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npx vite build&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;cd ../server&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;python main.py&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;🟠 &lt;strong&gt;Need Python version &amp;gt;=3.12&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;VSCode/Cursor Install Extensions：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Black Formatter by ms-python (ms-python.black-formatter)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;cd react&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm install --force &amp;amp;&amp;amp; npm run dev&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;cd server&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;python main.py&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sindresorhus/type-fest</title>
      <link>https://github.com/sindresorhus/type-fest</link>
      <description>&lt;p&gt;A collection of essential TypeScript types&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;img src="https://raw.githubusercontent.com/sindresorhus/type-fest/main/media/logo.svg?sanitize=true" alt="type-fest" height="300" /&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;b&gt;A collection of essential TypeScript types&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
 &lt;div align="center"&gt; 
  &lt;p&gt; &lt;/p&gt;
  &lt;p&gt; &lt;sup&gt; &lt;a href="https://github.com/sponsors/sindresorhus"&gt;Sindre Sorhus' open source work is supported by the community&lt;/a&gt; &lt;/sup&gt; &lt;/p&gt; 
  &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
  &lt;br /&gt; 
  &lt;br /&gt; 
  &lt;a href="https://nitric.io/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=sindresorhus&amp;amp;utm_source=github"&gt; 
   &lt;div&gt; 
    &lt;img width="230" src="https://sindresorhus.com/assets/thanks/nitric-logo.svg?sanitize=true" alt="nitric logo" /&gt; 
   &lt;/div&gt; &lt;b&gt;Effortless backends with infrastructure from code&lt;/b&gt; 
   &lt;div&gt; 
    &lt;sup&gt;An open-source framework that supports any programming language, cloud provider, or deployment automation tool.&lt;/sup&gt; 
   &lt;/div&gt; &lt;/a&gt; 
  &lt;p&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://giphy.com/gifs/illustration-rainbow-unicorn-26AHG5KGFxSkUWw1i"&gt;&lt;img src="https://img.shields.io/badge/unicorn-approved-ff69b4.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/type-fest?activeTab=dependents"&gt;&lt;img src="https://badgen.net/npm/dependents/type-fest" alt="npm dependents" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/type-fest"&gt;&lt;img src="https://badgen.net/npm/dt/type-fest" alt="npm downloads" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Many of the types here should have been built-in. You can help by suggesting some of them to the &lt;a href="https://github.com/Microsoft/TypeScript/raw/main/CONTRIBUTING.md"&gt;TypeScript project&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Either add this package as a dependency or copy-paste the needed types. No credit required. 👌&lt;/p&gt; 
&lt;p&gt;PR welcome for additional commonly needed types and docs improvements. Read the &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/.github/contributing.md"&gt;contributing guidelines&lt;/a&gt; first.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Help wanted with reviewing &lt;a href="https://github.com/sindresorhus/type-fest/issues"&gt;proposals&lt;/a&gt; and &lt;a href="https://github.com/sindresorhus/type-fest/pulls"&gt;pull requests&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install type-fest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Requires TypeScript &amp;gt;=5.9, &lt;a href="https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c"&gt;ESM&lt;/a&gt;, and &lt;a href="https://www.typescriptlang.org/tsconfig#strict"&gt;&lt;code&gt;{strict: true}&lt;/code&gt;&lt;/a&gt; in your tsconfig.&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This readme shows the current development version. For docs about the latest version, see the &lt;a href="https://www.npmjs.com/package/type-fest"&gt;npm page&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import type {Except} from 'type-fest';

type Foo = {
	unicorn: string;
	rainbow: boolean;
};

type FooWithoutRainbow = Except&amp;lt;Foo, 'rainbow'&amp;gt;;
//=&amp;gt; {unicorn: string}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;p&gt;Click the type names for complete docs.&lt;/p&gt; 
&lt;h3&gt;Basic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/primitive.d.ts"&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; - Matches any &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Primitive"&gt;primitive value&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/basic.d.ts"&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; - Matches a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes"&gt;&lt;code&gt;class&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/basic.d.ts"&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; - Matches a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes"&gt;&lt;code&gt;class&lt;/code&gt; constructor&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/basic.d.ts"&gt;&lt;code&gt;AbstractClass&lt;/code&gt;&lt;/a&gt; - Matches an &lt;a href="https://www.typescriptlang.org/docs/handbook/2/classes.html#abstract-classes-and-members"&gt;&lt;code&gt;abstract class&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/basic.d.ts"&gt;&lt;code&gt;AbstractConstructor&lt;/code&gt;&lt;/a&gt; - Matches an &lt;a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-2.html#abstract-construct-signatures"&gt;&lt;code&gt;abstract class&lt;/code&gt;&lt;/a&gt; constructor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/typed-array.d.ts"&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; - Matches any &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray"&gt;typed array&lt;/a&gt;, like &lt;code&gt;Uint8Array&lt;/code&gt; or &lt;code&gt;Float64Array&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/globals/observable-like.d.ts"&gt;&lt;code&gt;ObservableLike&lt;/code&gt;&lt;/a&gt; - Matches a value that is like an &lt;a href="https://github.com/tc39/proposal-observable"&gt;Observable&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/characters.d.ts"&gt;&lt;code&gt;LowercaseLetter&lt;/code&gt;&lt;/a&gt; - Matches any lowercase letter in the basic Latin alphabet (a-z).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/characters.d.ts"&gt;&lt;code&gt;UppercaseLetter&lt;/code&gt;&lt;/a&gt; - Matches any uppercase letter in the basic Latin alphabet (A-Z).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/characters.d.ts"&gt;&lt;code&gt;DigitCharacter&lt;/code&gt;&lt;/a&gt; - Matches any digit as a string ('0'-'9').&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/characters.d.ts"&gt;&lt;code&gt;Alphanumeric&lt;/code&gt;&lt;/a&gt; - Matches any lowercase letter (a-z), uppercase letter (A-Z), or digit ('0'-'9') in the basic Latin alphabet.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Utilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/empty-object.d.ts"&gt;&lt;code&gt;EmptyObject&lt;/code&gt;&lt;/a&gt; - Represents a strictly empty plain object, the &lt;code&gt;{}&lt;/code&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/non-empty-object.d.ts"&gt;&lt;code&gt;NonEmptyObject&lt;/code&gt;&lt;/a&gt; - Represents an object with at least 1 non-optional key.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/unknown-record.d.ts"&gt;&lt;code&gt;UnknownRecord&lt;/code&gt;&lt;/a&gt; - Represents an object with &lt;code&gt;unknown&lt;/code&gt; value. You probably want this instead of &lt;code&gt;{}&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/unknown-array.d.ts"&gt;&lt;code&gt;UnknownArray&lt;/code&gt;&lt;/a&gt; - Represents an array with &lt;code&gt;unknown&lt;/code&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/unknown-map.d.ts"&gt;&lt;code&gt;UnknownMap&lt;/code&gt;&lt;/a&gt; - Represents a map with &lt;code&gt;unknown&lt;/code&gt; key and value.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/unknown-set.d.ts"&gt;&lt;code&gt;UnknownSet&lt;/code&gt;&lt;/a&gt; - Represents a set with &lt;code&gt;unknown&lt;/code&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/except.d.ts"&gt;&lt;code&gt;Except&lt;/code&gt;&lt;/a&gt; - Create a type from an object type without certain keys. This is a stricter version of &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"&gt;&lt;code&gt;Omit&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/writable.d.ts"&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; - Create a type that strips &lt;code&gt;readonly&lt;/code&gt; from the given type. Inverse of &lt;code&gt;Readonly&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/writable-deep.d.ts"&gt;&lt;code&gt;WritableDeep&lt;/code&gt;&lt;/a&gt; - Create a deeply mutable version of an &lt;code&gt;object&lt;/code&gt;/&lt;code&gt;ReadonlyMap&lt;/code&gt;/&lt;code&gt;ReadonlySet&lt;/code&gt;/&lt;code&gt;ReadonlyArray&lt;/code&gt; type. The inverse of &lt;code&gt;ReadonlyDeep&amp;lt;T&amp;gt;&lt;/code&gt;. Use &lt;code&gt;Writable&amp;lt;T&amp;gt;&lt;/code&gt; if you only need one level deep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/merge.d.ts"&gt;&lt;code&gt;Merge&lt;/code&gt;&lt;/a&gt; - Merge two types into a new type. Keys of the second type overrides keys of the first type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/merge-deep.d.ts"&gt;&lt;code&gt;MergeDeep&lt;/code&gt;&lt;/a&gt; - Merge two objects or two arrays/tuples recursively into a new type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/merge-exclusive.d.ts"&gt;&lt;code&gt;MergeExclusive&lt;/code&gt;&lt;/a&gt; - Create a type that has mutually exclusive keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/override-properties.d.ts"&gt;&lt;code&gt;OverrideProperties&lt;/code&gt;&lt;/a&gt; - Override only existing properties of the given type. Similar to &lt;code&gt;Merge&lt;/code&gt;, but enforces that the original type has the properties you want to override.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/require-at-least-one.d.ts"&gt;&lt;code&gt;RequireAtLeastOne&lt;/code&gt;&lt;/a&gt; - Create a type that requires at least one of the given keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/require-exactly-one.d.ts"&gt;&lt;code&gt;RequireExactlyOne&lt;/code&gt;&lt;/a&gt; - Create a type that requires exactly a single key of the given keys and disallows more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/require-all-or-none.d.ts"&gt;&lt;code&gt;RequireAllOrNone&lt;/code&gt;&lt;/a&gt; - Create a type that requires all of the given keys or none of the given keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/require-one-or-none.d.ts"&gt;&lt;code&gt;RequireOneOrNone&lt;/code&gt;&lt;/a&gt; - Create a type that requires exactly a single key of the given keys and disallows more, or none of the given keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/single-key-object.d.ts"&gt;&lt;code&gt;SingleKeyObject&lt;/code&gt;&lt;/a&gt; - Create a type that only accepts an object with a single key.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/required-deep.d.ts"&gt;&lt;code&gt;RequiredDeep&lt;/code&gt;&lt;/a&gt; - Create a deeply required version of another type. Use &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#requiredtype"&gt;&lt;code&gt;Required&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; if you only need one level deep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/pick-deep.d.ts"&gt;&lt;code&gt;PickDeep&lt;/code&gt;&lt;/a&gt; - Pick properties from a deeply-nested object. Use &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"&gt;&lt;code&gt;Pick&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; if you only need one level deep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/omit-deep.d.ts"&gt;&lt;code&gt;OmitDeep&lt;/code&gt;&lt;/a&gt; - Omit properties from a deeply-nested object. Use &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"&gt;&lt;code&gt;Omit&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; if you only need one level deep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/omit-index-signature.d.ts"&gt;&lt;code&gt;OmitIndexSignature&lt;/code&gt;&lt;/a&gt; - Omit any index signatures from the given object type, leaving only explicitly defined properties.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/pick-index-signature.d.ts"&gt;&lt;code&gt;PickIndexSignature&lt;/code&gt;&lt;/a&gt; - Pick only index signatures from the given object type, leaving out all explicitly defined properties.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/partial-deep.d.ts"&gt;&lt;code&gt;PartialDeep&lt;/code&gt;&lt;/a&gt; - Create a deeply optional version of another type. Use &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"&gt;&lt;code&gt;Partial&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; if you only need one level deep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/partial-on-undefined-deep.d.ts"&gt;&lt;code&gt;PartialOnUndefinedDeep&lt;/code&gt;&lt;/a&gt; - Create a deep version of another type where all keys accepting &lt;code&gt;undefined&lt;/code&gt; type are set to optional.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/undefined-on-partial-deep.d.ts"&gt;&lt;code&gt;UndefinedOnPartialDeep&lt;/code&gt;&lt;/a&gt; - Create a deep version of another type where all optional keys are set to also accept &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/readonly-deep.d.ts"&gt;&lt;code&gt;ReadonlyDeep&lt;/code&gt;&lt;/a&gt; - Create a deeply immutable version of an &lt;code&gt;object&lt;/code&gt;/&lt;code&gt;Map&lt;/code&gt;/&lt;code&gt;Set&lt;/code&gt;/&lt;code&gt;Array&lt;/code&gt; type. Use &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#readonlytype"&gt;&lt;code&gt;Readonly&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; if you only need one level deep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/literal-union.d.ts"&gt;&lt;code&gt;LiteralUnion&lt;/code&gt;&lt;/a&gt; - Create a union type by combining primitive types and literal types without sacrificing auto-completion in IDEs for the literal type part of the union. Workaround for &lt;a href="https://github.com/Microsoft/TypeScript/issues/29729"&gt;Microsoft/TypeScript#29729&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tagged.d.ts"&gt;&lt;code&gt;Tagged&lt;/code&gt;&lt;/a&gt; - Create a &lt;a href="https://medium.com/@KevinBGreene/surviving-the-typescript-ecosystem-branding-and-type-tagging-6cf6e516523d"&gt;tagged type&lt;/a&gt; that can support &lt;a href="https://github.com/sindresorhus/type-fest/issues/665"&gt;multiple tags&lt;/a&gt; and &lt;a href="https://medium.com/@ethanresnick/advanced-typescript-tagged-types-improved-with-type-level-metadata-5072fc125fcf"&gt;per-tag metadata&lt;/a&gt;. (This replaces the previous &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tagged.d.ts"&gt;&lt;code&gt;Opaque&lt;/code&gt;&lt;/a&gt; type, which is now deprecated.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tagged.d.ts"&gt;&lt;code&gt;UnwrapTagged&lt;/code&gt;&lt;/a&gt; - Get the untagged portion of a tagged type created with &lt;code&gt;Tagged&lt;/code&gt;. (This replaces the previous &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tagged.d.ts"&gt;&lt;code&gt;UnwrapOpaque&lt;/code&gt;&lt;/a&gt; type, which is now deprecated.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/invariant-of.d.ts"&gt;&lt;code&gt;InvariantOf&lt;/code&gt;&lt;/a&gt; - Create an &lt;a href="https://basarat.gitbook.io/typescript/type-system/type-compatibility#footnote-invariance"&gt;invariant type&lt;/a&gt;, which is a type that does not accept supertypes and subtypes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-optional.d.ts"&gt;&lt;code&gt;SetOptional&lt;/code&gt;&lt;/a&gt; - Create a type that makes the given keys optional.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-readonly.d.ts"&gt;&lt;code&gt;SetReadonly&lt;/code&gt;&lt;/a&gt; - Create a type that makes the given keys readonly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-required.d.ts"&gt;&lt;code&gt;SetRequired&lt;/code&gt;&lt;/a&gt; - Create a type that makes the given keys required.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-required-deep.d.ts"&gt;&lt;code&gt;SetRequiredDeep&lt;/code&gt;&lt;/a&gt; - Like &lt;code&gt;SetRequired&lt;/code&gt; except it selects the keys deeply.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-non-nullable.d.ts"&gt;&lt;code&gt;SetNonNullable&lt;/code&gt;&lt;/a&gt; - Create a type that makes the given keys non-nullable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-non-nullable-deep.d.ts"&gt;&lt;code&gt;SetNonNullableDeep&lt;/code&gt;&lt;/a&gt; - Create a type that makes the specified keys non-nullable (removes &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;), supports deeply nested key paths, and leaves all other keys unchanged.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/value-of.d.ts"&gt;&lt;code&gt;ValueOf&lt;/code&gt;&lt;/a&gt; - Create a union of the given object's values, and optionally specify which keys to get the values from.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/conditional-keys.d.ts"&gt;&lt;code&gt;ConditionalKeys&lt;/code&gt;&lt;/a&gt; - Extract keys from a shape where values extend the given &lt;code&gt;Condition&lt;/code&gt; type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/conditional-pick.d.ts"&gt;&lt;code&gt;ConditionalPick&lt;/code&gt;&lt;/a&gt; - Like &lt;code&gt;Pick&lt;/code&gt; except it selects properties from a shape where the values extend the given &lt;code&gt;Condition&lt;/code&gt; type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/conditional-pick-deep.d.ts"&gt;&lt;code&gt;ConditionalPickDeep&lt;/code&gt;&lt;/a&gt; - Like &lt;code&gt;ConditionalPick&lt;/code&gt; except that it selects the properties deeply.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/conditional-except.d.ts"&gt;&lt;code&gt;ConditionalExcept&lt;/code&gt;&lt;/a&gt; - Like &lt;code&gt;Omit&lt;/code&gt; except it removes properties from a shape where the values extend the given &lt;code&gt;Condition&lt;/code&gt; type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/union-to-intersection.d.ts"&gt;&lt;code&gt;UnionToIntersection&lt;/code&gt;&lt;/a&gt; - Convert a union type to an intersection type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/literal-to-primitive.d.ts"&gt;&lt;code&gt;LiteralToPrimitive&lt;/code&gt;&lt;/a&gt; - Convert a &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types"&gt;literal type&lt;/a&gt; to the &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/primitive.d.ts"&gt;primitive type&lt;/a&gt; it belongs to.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/literal-to-primitive-deep.d.ts"&gt;&lt;code&gt;LiteralToPrimitiveDeep&lt;/code&gt;&lt;/a&gt; - Like &lt;code&gt;LiteralToPrimitive&lt;/code&gt; except it converts literal types inside an object or array deeply.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/stringified.d.ts"&gt;&lt;code&gt;Stringified&lt;/code&gt;&lt;/a&gt; - Create a type with the keys of the given type changed to &lt;code&gt;string&lt;/code&gt; type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/iterable-element.d.ts"&gt;&lt;code&gt;IterableElement&lt;/code&gt;&lt;/a&gt; - Get the element type of an &lt;code&gt;Iterable&lt;/code&gt;/&lt;code&gt;AsyncIterable&lt;/code&gt;. For example, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;Map&lt;/code&gt;, generator, stream, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/entry.d.ts"&gt;&lt;code&gt;Entry&lt;/code&gt;&lt;/a&gt; - Create a type that represents the type of an entry of a collection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/entries.d.ts"&gt;&lt;code&gt;Entries&lt;/code&gt;&lt;/a&gt; - Create a type that represents the type of the entries of a collection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-return-type.d.ts"&gt;&lt;code&gt;SetReturnType&lt;/code&gt;&lt;/a&gt; - Create a function type with a return type of your choice and the same parameters as the given function type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-parameter-type.d.ts"&gt;&lt;code&gt;SetParameterType&lt;/code&gt;&lt;/a&gt; - Create a function that replaces some parameters with the given parameters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/simplify.d.ts"&gt;&lt;code&gt;Simplify&lt;/code&gt;&lt;/a&gt; - Useful to flatten the type output to improve type hints shown in editors. And also to transform an interface into a type to aide with assignability.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/simplify-deep.d.ts"&gt;&lt;code&gt;SimplifyDeep&lt;/code&gt;&lt;/a&gt; - Deeply simplifies an object type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/get.d.ts"&gt;&lt;code&gt;Get&lt;/code&gt;&lt;/a&gt; - Get a deeply-nested property from an object using a key path, like &lt;a href="https://lodash.com/docs/latest#get"&gt;Lodash's &lt;code&gt;.get()&lt;/code&gt;&lt;/a&gt; function.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/key-as-string.d.ts"&gt;&lt;code&gt;KeyAsString&lt;/code&gt;&lt;/a&gt; - Get keys of the given type as strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/schema.d.ts"&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; - Create a deep version of another object type where property values are recursively replaced into a given value type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/exact.d.ts"&gt;&lt;code&gt;Exact&lt;/code&gt;&lt;/a&gt; - Create a type that does not allow extra properties.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/keys-of-union.d.ts"&gt;&lt;code&gt;KeysOfUnion&lt;/code&gt;&lt;/a&gt; - Create a union of all keys from a given type, even those exclusive to specific union members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/optional-keys-of.d.ts"&gt;&lt;code&gt;OptionalKeysOf&lt;/code&gt;&lt;/a&gt; - Extract all optional keys from the given type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/has-optional-keys.d.ts"&gt;&lt;code&gt;HasOptionalKeys&lt;/code&gt;&lt;/a&gt; - Create a &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; type depending on whether the given type has any optional fields.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/required-keys-of.d.ts"&gt;&lt;code&gt;RequiredKeysOf&lt;/code&gt;&lt;/a&gt; - Extract all required keys from the given type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/has-required-keys.d.ts"&gt;&lt;code&gt;HasRequiredKeys&lt;/code&gt;&lt;/a&gt; - Create a &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; type depending on whether the given type has any required fields.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/readonly-keys-of.d.ts"&gt;&lt;code&gt;ReadonlyKeysOf&lt;/code&gt;&lt;/a&gt; - Extract all readonly keys from the given type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/has-readonly-keys.d.ts"&gt;&lt;code&gt;HasReadonlyKeys&lt;/code&gt;&lt;/a&gt; - Create a &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; type depending on whether the given type has any readonly fields.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/writable-keys-of.d.ts"&gt;&lt;code&gt;WritableKeysOf&lt;/code&gt;&lt;/a&gt; - Extract all writable (non-readonly) keys from the given type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/has-writable-keys.d.ts"&gt;&lt;code&gt;HasWritableKeys&lt;/code&gt;&lt;/a&gt; - Create a &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; type depending on whether the given type has any writable fields.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/spread.d.ts"&gt;&lt;code&gt;Spread&lt;/code&gt;&lt;/a&gt; - Mimic the type inferred by TypeScript when merging two objects or two arrays/tuples using the spread syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-equal.d.ts"&gt;&lt;code&gt;IsEqual&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the two given types are equal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tagged-union.d.ts"&gt;&lt;code&gt;TaggedUnion&lt;/code&gt;&lt;/a&gt; - Create a union of types that share a common discriminant property.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/int-range.d.ts"&gt;&lt;code&gt;IntRange&lt;/code&gt;&lt;/a&gt; - Generate a union of numbers (includes the start and excludes the end).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/int-closed-range.d.ts"&gt;&lt;code&gt;IntClosedRange&lt;/code&gt;&lt;/a&gt; - Generate a union of numbers (includes the start and the end).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/array-indices.d.ts"&gt;&lt;code&gt;ArrayIndices&lt;/code&gt;&lt;/a&gt; - Provides valid indices for a constant array or tuple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/array-values.d.ts"&gt;&lt;code&gt;ArrayValues&lt;/code&gt;&lt;/a&gt; - Provides all values for a constant array or tuple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/array-splice.d.ts"&gt;&lt;code&gt;ArraySplice&lt;/code&gt;&lt;/a&gt; - Creates a new array type by adding or removing elements at a specified index range in the original array.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/array-tail.d.ts"&gt;&lt;code&gt;ArrayTail&lt;/code&gt;&lt;/a&gt; - Extracts the type of an array or tuple minus the first element.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-field-type.d.ts"&gt;&lt;code&gt;SetFieldType&lt;/code&gt;&lt;/a&gt; - Create a type that changes the type of the given keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/paths.d.ts"&gt;&lt;code&gt;Paths&lt;/code&gt;&lt;/a&gt; - Generate a union of all possible paths to properties in the given object.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/shared-union-fields.d.ts"&gt;&lt;code&gt;SharedUnionFields&lt;/code&gt;&lt;/a&gt; - Create a type with shared fields from a union of object types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/shared-union-fields-deep.d.ts"&gt;&lt;code&gt;SharedUnionFieldsDeep&lt;/code&gt;&lt;/a&gt; - Create a type with shared fields from a union of object types, deeply traversing nested structures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/all-union-fields.d.ts"&gt;&lt;code&gt;AllUnionFields&lt;/code&gt;&lt;/a&gt; - Create a type with all fields from a union of object types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/distributed-omit.d.ts"&gt;&lt;code&gt;DistributedOmit&lt;/code&gt;&lt;/a&gt; - Omits keys from a type, distributing the operation over a union.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/distributed-pick.d.ts"&gt;&lt;code&gt;DistributedPick&lt;/code&gt;&lt;/a&gt; - Picks keys from a type, distributing the operation over a union.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/and.d.ts"&gt;&lt;code&gt;And&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether two given types are both true.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/or.d.ts"&gt;&lt;code&gt;Or&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether either of two given types are true.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/all-extend.d.ts"&gt;&lt;code&gt;AllExtend&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether every element in an array type extends another type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/non-empty-tuple.d.ts"&gt;&lt;code&gt;NonEmptyTuple&lt;/code&gt;&lt;/a&gt; - Matches any non-empty tuple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/non-empty-string.d.ts"&gt;&lt;code&gt;NonEmptyString&lt;/code&gt;&lt;/a&gt; - Matches any non-empty string.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/find-global-type.d.ts"&gt;&lt;code&gt;FindGlobalType&lt;/code&gt;&lt;/a&gt; - Tries to find the type of a global with the given name.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/find-global-type.d.ts"&gt;&lt;code&gt;FindGlobalInstanceType&lt;/code&gt;&lt;/a&gt; - Tries to find one or more types from their globally-defined constructors.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/conditional-simplify.d.ts"&gt;&lt;code&gt;ConditionalSimplify&lt;/code&gt;&lt;/a&gt; - Simplifies a type while including and/or excluding certain types from being simplified.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/conditional-simplify-deep.d.ts"&gt;&lt;code&gt;ConditionalSimplifyDeep&lt;/code&gt;&lt;/a&gt; - Recursively simplifies a type while including and/or excluding certain types from being simplified.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Type Guard&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/if.d.ts"&gt;&lt;code&gt;If&lt;/code&gt;&lt;/a&gt; - An if-else-like type that resolves depending on whether the given &lt;code&gt;boolean&lt;/code&gt; type is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-literal.d.ts"&gt;&lt;code&gt;IsLiteral&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is a &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types"&gt;literal type&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-literal.d.ts"&gt;&lt;code&gt;IsStringLiteral&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is a &lt;code&gt;string&lt;/code&gt; &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types"&gt;literal type&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-literal.d.ts"&gt;&lt;code&gt;IsNumericLiteral&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is a &lt;code&gt;number&lt;/code&gt; or &lt;code&gt;bigint&lt;/code&gt; &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types"&gt;literal type&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-literal.d.ts"&gt;&lt;code&gt;IsBooleanLiteral&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is a &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types"&gt;literal type&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-literal.d.ts"&gt;&lt;code&gt;IsSymbolLiteral&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is a &lt;code&gt;symbol&lt;/code&gt; &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types"&gt;literal type&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-any.d.ts"&gt;&lt;code&gt;IsAny&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is &lt;code&gt;any&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-never.d.ts"&gt;&lt;code&gt;IsNever&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is &lt;code&gt;never&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-unknown.d.ts"&gt;&lt;code&gt;IsUnknown&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is &lt;code&gt;unknown&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/empty-object.d.ts"&gt;&lt;code&gt;IsEmptyObject&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the type is strictly equal to an empty plain object, the &lt;code&gt;{}&lt;/code&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-null.d.ts"&gt;&lt;code&gt;IsNull&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-undefined.d.ts"&gt;&lt;code&gt;IsUndefined&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-tuple.d.ts"&gt;&lt;code&gt;IsTuple&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given array is a tuple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-union.d.ts"&gt;&lt;code&gt;IsUnion&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is a union.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-lowercase.d.ts"&gt;&lt;code&gt;IsLowercase&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given string literal is lowercase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-uppercase.d.ts"&gt;&lt;code&gt;IsUppercase&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given string literal is uppercase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-optional.d.ts"&gt;&lt;code&gt;IsOptional&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type includes &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-nullable.d.ts"&gt;&lt;code&gt;IsNullable&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type includes &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-optional-key-of.d.ts"&gt;&lt;code&gt;IsOptionalKeyOf&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given key is an optional key of type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-required-key-of.d.ts"&gt;&lt;code&gt;IsRequiredKeyOf&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given key is a required key of type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-readonly-key-of.d.ts"&gt;&lt;code&gt;IsReadonlyKeyOf&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given key is a readonly key of type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-writable-key-of.d.ts"&gt;&lt;code&gt;IsWritableKeyOf&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given key is a writable key of type.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;JSON&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/jsonify.d.ts"&gt;&lt;code&gt;Jsonify&lt;/code&gt;&lt;/a&gt; - Transform a type to one that is assignable to the &lt;code&gt;JsonValue&lt;/code&gt; type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/jsonifiable.d.ts"&gt;&lt;code&gt;Jsonifiable&lt;/code&gt;&lt;/a&gt; - Matches a value that can be losslessly converted to JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/json-value.d.ts"&gt;&lt;code&gt;JsonPrimitive&lt;/code&gt;&lt;/a&gt; - Matches a JSON primitive.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/json-value.d.ts"&gt;&lt;code&gt;JsonObject&lt;/code&gt;&lt;/a&gt; - Matches a JSON object.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/json-value.d.ts"&gt;&lt;code&gt;JsonArray&lt;/code&gt;&lt;/a&gt; - Matches a JSON array.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/json-value.d.ts"&gt;&lt;code&gt;JsonValue&lt;/code&gt;&lt;/a&gt; - Matches any valid JSON value.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Structured clone&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/structured-cloneable.d.ts"&gt;&lt;code&gt;StructuredCloneable&lt;/code&gt;&lt;/a&gt; - Matches a value that can be losslessly cloned using &lt;code&gt;structuredClone&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Async&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/promisable.d.ts"&gt;&lt;code&gt;Promisable&lt;/code&gt;&lt;/a&gt; - Create a type that represents either the value or the value wrapped in &lt;code&gt;PromiseLike&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/async-return-type.d.ts"&gt;&lt;code&gt;AsyncReturnType&lt;/code&gt;&lt;/a&gt; - Unwrap the return type of a function that returns a &lt;code&gt;Promise&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/asyncify.d.ts"&gt;&lt;code&gt;Asyncify&lt;/code&gt;&lt;/a&gt; - Create an async version of the given function type.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;String&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/trim.d.ts"&gt;&lt;code&gt;Trim&lt;/code&gt;&lt;/a&gt; - Remove leading and trailing spaces from a string.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/split.d.ts"&gt;&lt;code&gt;Split&lt;/code&gt;&lt;/a&gt; - Represents an array of strings split using a given character or character set.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/words.d.ts"&gt;&lt;code&gt;Words&lt;/code&gt;&lt;/a&gt; - Represents an array of strings split using a heuristic for detecting words.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/replace.d.ts"&gt;&lt;code&gt;Replace&lt;/code&gt;&lt;/a&gt; - Represents a string with some or all matches replaced by a replacement.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/string-slice.d.ts"&gt;&lt;code&gt;StringSlice&lt;/code&gt;&lt;/a&gt; - Returns a string slice of a given range, just like &lt;code&gt;String#slice()&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/string-repeat.d.ts"&gt;&lt;code&gt;StringRepeat&lt;/code&gt;&lt;/a&gt; - Returns a new string which contains the specified number of copies of a given string, just like &lt;code&gt;String#repeat()&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/remove-prefix.d.ts"&gt;&lt;code&gt;RemovePrefix&lt;/code&gt;&lt;/a&gt; - Removes the specified prefix from the start of a string.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Array&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/arrayable.d.ts"&gt;&lt;code&gt;Arrayable&lt;/code&gt;&lt;/a&gt; - Create a type that represents either the value or an array of the value.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/includes.d.ts"&gt;&lt;code&gt;Includes&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given array includes the given item.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/join.d.ts"&gt;&lt;code&gt;Join&lt;/code&gt;&lt;/a&gt; - Join an array of strings and/or numbers using the given string as a delimiter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/array-slice.d.ts"&gt;&lt;code&gt;ArraySlice&lt;/code&gt;&lt;/a&gt; - Returns an array slice of a given range, just like &lt;code&gt;Array#slice()&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/last-array-element.d.ts"&gt;&lt;code&gt;LastArrayElement&lt;/code&gt;&lt;/a&gt; - Extracts the type of the last element of an array.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/fixed-length-array.d.ts"&gt;&lt;code&gt;FixedLengthArray&lt;/code&gt;&lt;/a&gt; - Create a type that represents an array of the given type and length.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/multidimensional-array.d.ts"&gt;&lt;code&gt;MultidimensionalArray&lt;/code&gt;&lt;/a&gt; - Create a type that represents a multidimensional array of the given type and dimensions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/multidimensional-readonly-array.d.ts"&gt;&lt;code&gt;MultidimensionalReadonlyArray&lt;/code&gt;&lt;/a&gt; - Create a type that represents a multidimensional readonly array of the given type and dimensions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/readonly-tuple.d.ts"&gt;&lt;code&gt;ReadonlyTuple&lt;/code&gt;&lt;/a&gt; - Create a type that represents a read-only tuple of the given type and length.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tuple-to-union.d.ts"&gt;&lt;code&gt;TupleToUnion&lt;/code&gt;&lt;/a&gt; - Convert a tuple/array into a union type of its elements.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/union-to-tuple.d.ts"&gt;&lt;code&gt;UnionToTuple&lt;/code&gt;&lt;/a&gt; - Convert a union type into an unordered tuple type of its elements.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tuple-to-object.d.ts"&gt;&lt;code&gt;TupleToObject&lt;/code&gt;&lt;/a&gt; - Transforms a tuple into an object, mapping each tuple index to its corresponding type as a key-value pair.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Numeric&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;PositiveInfinity&lt;/code&gt;&lt;/a&gt; - Matches the hidden &lt;code&gt;Infinity&lt;/code&gt; type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;NegativeInfinity&lt;/code&gt;&lt;/a&gt; - Matches the hidden &lt;code&gt;-Infinity&lt;/code&gt; type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;Finite&lt;/code&gt;&lt;/a&gt; - A finite &lt;code&gt;number&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; - A &lt;code&gt;number&lt;/code&gt; that is an integer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; - A &lt;code&gt;number&lt;/code&gt; that is not an integer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;NegativeFloat&lt;/code&gt;&lt;/a&gt; - A negative (&lt;code&gt;-∞ &amp;lt; x &amp;lt; 0&lt;/code&gt;) &lt;code&gt;number&lt;/code&gt; that is not an integer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;Negative&lt;/code&gt;&lt;/a&gt; - A negative &lt;code&gt;number&lt;/code&gt;/&lt;code&gt;bigint&lt;/code&gt; (&lt;code&gt;-∞ &amp;lt; x &amp;lt; 0&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;NonNegative&lt;/code&gt;&lt;/a&gt; - A non-negative &lt;code&gt;number&lt;/code&gt;/&lt;code&gt;bigint&lt;/code&gt; (&lt;code&gt;0 &amp;lt;= x &amp;lt; ∞&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;NegativeInteger&lt;/code&gt;&lt;/a&gt; - A negative (&lt;code&gt;-∞ &amp;lt; x &amp;lt; 0&lt;/code&gt;) &lt;code&gt;number&lt;/code&gt; that is an integer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;NonNegativeInteger&lt;/code&gt;&lt;/a&gt; - A non-negative (&lt;code&gt;0 &amp;lt;= x &amp;lt; ∞&lt;/code&gt;) &lt;code&gt;number&lt;/code&gt; that is an integer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;IsNegative&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given number is a negative number.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-float.d.ts"&gt;&lt;code&gt;IsFloat&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given number is a float, like &lt;code&gt;1.5&lt;/code&gt; or &lt;code&gt;-1.5&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-integer.d.ts"&gt;&lt;code&gt;IsInteger&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given number is a integer, like &lt;code&gt;-5&lt;/code&gt;, &lt;code&gt;1.0&lt;/code&gt; or &lt;code&gt;100&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/greater-than.d.ts"&gt;&lt;code&gt;GreaterThan&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether a given number is greater than another number.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/greater-than-or-equal.d.ts"&gt;&lt;code&gt;GreaterThanOrEqual&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether a given number is greater than or equal to another number.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/less-than.d.ts"&gt;&lt;code&gt;LessThan&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether a given number is less than another number.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/less-than-or-equal.d.ts"&gt;&lt;code&gt;LessThanOrEqual&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether a given number is less than or equal to another number.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/sum.d.ts"&gt;&lt;code&gt;Sum&lt;/code&gt;&lt;/a&gt; - Returns the sum of two numbers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/subtract.d.ts"&gt;&lt;code&gt;Subtract&lt;/code&gt;&lt;/a&gt; - Returns the difference between two numbers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Change case&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/camel-case.d.ts"&gt;&lt;code&gt;CamelCase&lt;/code&gt;&lt;/a&gt; - Convert a string literal to camel-case (&lt;code&gt;fooBar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/camel-cased-properties.d.ts"&gt;&lt;code&gt;CamelCasedProperties&lt;/code&gt;&lt;/a&gt; - Convert object properties to camel-case (&lt;code&gt;fooBar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/camel-cased-properties-deep.d.ts"&gt;&lt;code&gt;CamelCasedPropertiesDeep&lt;/code&gt;&lt;/a&gt; - Convert object properties to camel-case recursively (&lt;code&gt;fooBar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/kebab-case.d.ts"&gt;&lt;code&gt;KebabCase&lt;/code&gt;&lt;/a&gt; - Convert a string literal to kebab-case (&lt;code&gt;foo-bar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/kebab-cased-properties.d.ts"&gt;&lt;code&gt;KebabCasedProperties&lt;/code&gt;&lt;/a&gt; - Convert a object properties to kebab-case recursively (&lt;code&gt;foo-bar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/kebab-cased-properties-deep.d.ts"&gt;&lt;code&gt;KebabCasedPropertiesDeep&lt;/code&gt;&lt;/a&gt; - Convert object properties to kebab-case (&lt;code&gt;foo-bar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/pascal-case.d.ts"&gt;&lt;code&gt;PascalCase&lt;/code&gt;&lt;/a&gt; - Converts a string literal to pascal-case (&lt;code&gt;FooBar&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/pascal-cased-properties.d.ts"&gt;&lt;code&gt;PascalCasedProperties&lt;/code&gt;&lt;/a&gt; - Converts object properties to pascal-case (&lt;code&gt;FooBar&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/pascal-cased-properties-deep.d.ts"&gt;&lt;code&gt;PascalCasedPropertiesDeep&lt;/code&gt;&lt;/a&gt; - Converts object properties to pascal-case (&lt;code&gt;FooBar&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/snake-case.d.ts"&gt;&lt;code&gt;SnakeCase&lt;/code&gt;&lt;/a&gt; - Convert a string literal to snake-case (&lt;code&gt;foo_bar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/snake-cased-properties.d.ts"&gt;&lt;code&gt;SnakeCasedProperties&lt;/code&gt;&lt;/a&gt; - Convert object properties to snake-case (&lt;code&gt;foo_bar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/snake-cased-properties-deep.d.ts"&gt;&lt;code&gt;SnakeCasedPropertiesDeep&lt;/code&gt;&lt;/a&gt; - Convert object properties to snake-case recursively (&lt;code&gt;foo_bar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/screaming-snake-case.d.ts"&gt;&lt;code&gt;ScreamingSnakeCase&lt;/code&gt;&lt;/a&gt; - Convert a string literal to screaming-snake-case (&lt;code&gt;FOO_BAR&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/delimiter-case.d.ts"&gt;&lt;code&gt;DelimiterCase&lt;/code&gt;&lt;/a&gt; - Convert a string literal to a custom string delimiter casing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/delimiter-cased-properties.d.ts"&gt;&lt;code&gt;DelimiterCasedProperties&lt;/code&gt;&lt;/a&gt; - Convert object properties to a custom string delimiter casing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/delimiter-cased-properties-deep.d.ts"&gt;&lt;code&gt;DelimiterCasedPropertiesDeep&lt;/code&gt;&lt;/a&gt; - Convert object properties to a custom string delimiter casing recursively.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Miscellaneous&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/global-this.d.ts"&gt;&lt;code&gt;GlobalThis&lt;/code&gt;&lt;/a&gt; - Declare locally scoped properties on &lt;code&gt;globalThis&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/package-json.d.ts"&gt;&lt;code&gt;PackageJson&lt;/code&gt;&lt;/a&gt; - Type for &lt;a href="https://docs.npmjs.com/creating-a-package-json-file"&gt;npm's &lt;code&gt;package.json&lt;/code&gt; file&lt;/a&gt;. It also includes support for &lt;a href="https://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html"&gt;TypeScript Declaration Files&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tsconfig-json.d.ts"&gt;&lt;code&gt;TsConfigJson&lt;/code&gt;&lt;/a&gt; - Type for &lt;a href="https://www.typescriptlang.org/docs/handbook/tsconfig-json.html"&gt;TypeScript's &lt;code&gt;tsconfig.json&lt;/code&gt; file&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Improved built-in&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/extends-strict.d.ts"&gt;&lt;code&gt;ExtendsStrict&lt;/code&gt;&lt;/a&gt; - A stricter, non-distributive version of &lt;code&gt;extends&lt;/code&gt; for checking whether one type is assignable to another.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/extract-strict.d.ts"&gt;&lt;code&gt;ExtractStrict&lt;/code&gt;&lt;/a&gt; - A stricter version of &lt;code&gt;Extract&amp;lt;T, U&amp;gt;&lt;/code&gt; that ensures every member of &lt;code&gt;U&lt;/code&gt; can successfully extract something from &lt;code&gt;T&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/exclude-strict.d.ts"&gt;&lt;code&gt;ExcludeStrict&lt;/code&gt;&lt;/a&gt; - A stricter version of &lt;code&gt;Exclude&amp;lt;T, U&amp;gt;&lt;/code&gt; that ensures every member of &lt;code&gt;U&lt;/code&gt; can successfully exclude something from &lt;code&gt;T&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Declined types&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;If we decline a type addition, we will make sure to document the better solution here.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/pull/7"&gt;&lt;code&gt;Diff&lt;/code&gt; and &lt;code&gt;Spread&lt;/code&gt;&lt;/a&gt; - The pull request author didn't provide any real-world use-cases and the PR went stale. If you think this type is useful, provide some real-world use-cases and we might reconsider.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/issues/33"&gt;&lt;code&gt;Dictionary&lt;/code&gt;&lt;/a&gt; - You only save a few characters (&lt;code&gt;Dictionary&amp;lt;number&amp;gt;&lt;/code&gt; vs &lt;code&gt;Record&amp;lt;string, number&amp;gt;&lt;/code&gt;) from &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"&gt;&lt;code&gt;Record&lt;/code&gt;&lt;/a&gt;, which is more flexible and well-known. Also, you shouldn't use an object as a dictionary. We have &lt;code&gt;Map&lt;/code&gt; in JavaScript now.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/pull/4"&gt;&lt;code&gt;ExtractProperties&lt;/code&gt; and &lt;code&gt;ExtractMethods&lt;/code&gt;&lt;/a&gt; - The types violate the single responsibility principle. Instead, refine your types into more granular type hierarchies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/pull/262"&gt;&lt;code&gt;Url2Json&lt;/code&gt;&lt;/a&gt; - Inferring search parameters from a URL string is a cute idea, but not very useful in practice, since search parameters are usually dynamic and defined separately.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/pull/318"&gt;&lt;code&gt;Nullish&lt;/code&gt;&lt;/a&gt; - The type only saves a couple of characters, not everyone knows what "nullish" means, and I'm also trying to &lt;a href="https://github.com/sindresorhus/meta/discussions/7"&gt;get away from &lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/pull/303"&gt;&lt;code&gt;TitleCase&lt;/code&gt;&lt;/a&gt; - It's not solving a common need and is a better fit for a separate package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/pull/247"&gt;&lt;code&gt;ExtendOr&lt;/code&gt; and &lt;code&gt;ExtendAnd&lt;/code&gt;&lt;/a&gt; - The benefits don't outweigh having to learn what they mean.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/issues/371"&gt;&lt;code&gt;PackageJsonExtras&lt;/code&gt;&lt;/a&gt; - There are too many possible configurations that can be put into &lt;code&gt;package.json&lt;/code&gt;. If you would like to extend &lt;code&gt;PackageJson&lt;/code&gt; to support an additional configuration in your project, please see the &lt;em&gt;Extending existing types&lt;/em&gt; section below.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Alternative type names&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;If you know one of our types by a different name, add it here for discovery.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Prettify&lt;/code&gt;- See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/simplify.d.ts"&gt;&lt;code&gt;Simplify&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Expand&lt;/code&gt;- See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/simplify.d.ts"&gt;&lt;code&gt;Simplify&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PartialBy&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-optional.d.ts"&gt;&lt;code&gt;SetOptional&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;RecordDeep&lt;/code&gt;- See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/schema.d.ts"&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Mutable&lt;/code&gt;- See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/writable.d.ts"&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;RequireOnlyOne&lt;/code&gt;, &lt;code&gt;OneOf&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/require-exactly-one.d.ts"&gt;&lt;code&gt;RequireExactlyOne&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AtMostOne&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/require-one-or-none.d.ts"&gt;&lt;code&gt;RequireOneOrNone&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AllKeys&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/keys-of-union.d.ts"&gt;&lt;code&gt;KeysOfUnion&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Branded&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tagged.d.ts"&gt;&lt;code&gt;Tagged&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Opaque&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tagged.d.ts"&gt;&lt;code&gt;Tagged&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SetElement&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/iterable-element.d.ts"&gt;&lt;code&gt;IterableElement&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SetEntry&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/iterable-element.d.ts"&gt;&lt;code&gt;IterableElement&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SetValues&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/iterable-element.d.ts"&gt;&lt;code&gt;IterableElement&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PickByTypes&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/conditional-pick.d.ts"&gt;&lt;code&gt;ConditionalPick&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;HomomorphicOmit&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/except.d.ts"&gt;&lt;code&gt;Except&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;IfAny&lt;/code&gt;, &lt;code&gt;IfNever&lt;/code&gt;, &lt;code&gt;If*&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/if.d.ts"&gt;&lt;code&gt;If&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MaybePromise&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/promisable.d.ts"&gt;&lt;code&gt;Promisable&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tips&lt;/h2&gt; 
&lt;h3&gt;Extending existing types&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/package-json.d.ts"&gt;&lt;code&gt;PackageJson&lt;/code&gt;&lt;/a&gt; - There are a lot of tools that place extra configurations inside the &lt;code&gt;package.json&lt;/code&gt; file. You can extend &lt;code&gt;PackageJson&lt;/code&gt; to support these additional configurations.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBDAnmApnA3gBQIYGMDW2A5igFIDOEAdnNuXAEJ0o4HFmVUC+cAZlBBBwA5ElQBaXinIxhAbgCwAKFCRYCZGnQAZYFRgooPfoJHSANntmKlysWlaESFanAC8jZo-YuaAMgwLKwBhal5gIgB+AC44XX1DADpQqnCiLhsgA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; import type {PackageJson as BasePackageJson} from 'type-fest';
 import type {Linter} from 'eslint';

 type PackageJson = BasePackageJson &amp;amp; {eslintConfig?: Linter.Config};
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Related&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/g-plane/typed-query-selector"&gt;typed-query-selector&lt;/a&gt; - Enhances &lt;code&gt;document.querySelector&lt;/code&gt; and &lt;code&gt;document.querySelectorAll&lt;/code&gt; with a template literal type that matches element types returned from an HTML element query selector.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eslint/eslint/raw/main/lib/types/index.d.ts"&gt;&lt;code&gt;Linter.Config&lt;/code&gt;&lt;/a&gt; - Definitions for the &lt;a href="https://eslint.org/docs/user-guide/configuring/language-options"&gt;ESLint configuration schema&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Built-in types&lt;/h3&gt; 
&lt;p&gt;There are many advanced types most users don't know about.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"&gt;&lt;code&gt;Awaited&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Extract the type of a value that a &lt;code&gt;Promise&lt;/code&gt; resolves to.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://www.typescriptlang.org/play/?#code/JYOwLgpgTgZghgYwgAgKoGdrIN4FgBQyyAkMACYBcyIArgLYBG0A3AUcSHHRFemFKADmrQiTiCe1ekygiiAXwJtkCADZx06NJigBBAA7AAytABuwJDmXENATxAJkMCGAQALDNAAUNHQElKKUZoAEoqAAUoAHs6YEwAHk8oAD4rUWJiAHpM5AAxF3dkMDcUXywyODA4J2i6IpLkCqqGDQgAOmssnIAVBsQwGjhVZGA6fVUIbnBK4CiQZFjBNzBkVSiogGtV4A2UYriKTuyVOb5kKAh0fVOUAF5kOAB3OGAV51c3LwAiTLhDTLKUEyABJsICAvIQnISF0TiAzk1qvcLlcbm0AFboOZeKFHHIXAZQeaI6EZAk0Ik4EaBACMABpqFxJF8AFJRNzzAAiUQgXwZ4kkAGYAAzIeSkxSiSXKMC2fQofIfCBkJLIe66Z6vZXxABKLgpIG6cogiR0BmMZgsEAA2l93u4kl8ALrJZIiZR2BxOGgOMCzeZuOAgMgTJKcypwLx-C1QcxIKhJc0mWNWhngwK0YJQEJpdj8Wy5mEIU4rQFURXuZWq+5PF4raPJuPte0eHQ+fxkXHpWG6GCQKBOApuITIQGNCMM2xRGgqIPIeWwKJQOqmOACadafr+rToGiFDSj-RNEfFUo6EbgaDwJB0vGz9wnhqImpRb2Es8QBlLhZwDYjuBkGQrz+kMyC6OEfjnBAACONCXGAm5aCAEDKsqHTpPIs4fMgXjQNE2aFhkxx4d+gbBqoQjWJKChKKIxbwqWZqGI2VpqtQECPNo0BJpaSA4tCZEhhAYYRu23HMbxn7IDSUJAA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt;interface User {
	id: number;
	name: string;
	age: number;
}

class UserApiService {
	async fetchUser(userId: number): Promise&amp;lt;User&amp;gt; {
		// Fetch the user data from the database.
		// The actual implementation might look like this:
		// const response = await fetch('/api/user/${userId}');
		// const data = response.json();
		// return data;
		return {
			id: 1,
			name: 'John Doe',
			age: 30
		};
	}
}

type FetchedUser = Awaited&amp;lt;ReturnType&amp;lt;UserApiService['fetchUser']&amp;gt;&amp;gt;;

async function handleUserData(apiService: UserApiService, userId: number) {
	try {
		const user: FetchedUser = await apiService.fetchUser(userId);
		// After fetching user data, you can perform various actions such as updating the user interface,
		// caching the data for future use, or making additional API requests as needed.
	} catch (error) {
		// Error handling
	}
}

const userApiService = new UserApiService();
handleUserData(userApiService, 1);
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt;&lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"&gt;&lt;code&gt;Partial&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Make all properties in &lt;code&gt;T&lt;/code&gt; optional.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://www.typescriptlang.org/play/#code/JYOwLgpgTgZghgYwgAgHIHsAmEDC6QzADmyA3gLABQyycADnanALYQBcyAzmFKEQNxUaddFDAcQAV2YAjaIMoBfKlQQAbOJ05osEAIIMAQpOBrsUMkOR1eANziRkCfISKSoD4Pg4ZseAsTIALyW1DS0DEysHADkvvoMMQA0VsKi4sgAzAAMuVaKClY2wPaOknSYDrguADwA0sgQAB6QIJjaANYQAJ7oMDp+LsQAfAAUXd0cdUnI9mo+uv6uANp1ALoAlKHhyGAAFsCcAHTOAW4eYF4gyxNrwbNwago0ypRWp66jH8QcAApwYmAjxq8SWIy2FDCNDA3ToKFBQyIdR69wmfQG1TOhShyBgomQX3w3GQE2Q6IA8jIAFYQBBgI4TTiEs5bTQYsFInrLTbbHZOIlgZDlSqQABqj0kKBC3yINx6a2xfOQwH6o2FVXFaklwSCIUkbQghBAEEwENSfNOlykEGefNe5uhB2O6sgS3GPRmLogmslG1tLxUOKgEDA7hAuydtteryAA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; interface NodeConfig {
 		appName: string;
 		port: number;
 }

 class NodeAppBuilder {
 		private configuration: NodeConfig = {
 				appName: 'NodeApp',
 				port: 3000
 		};

 		private updateConfig&amp;lt;Key extends keyof NodeConfig&amp;gt;(key: Key, value: NodeConfig[Key]) {
 				this.configuration[key] = value;
 		}

 		config(config: Partial&amp;lt;NodeConfig&amp;gt;) {
 				type NodeConfigKey = keyof NodeConfig;

 				for (const key of Object.keys(config) as NodeConfigKey[]) {
 						const updateValue = config[key];

 						if (updateValue === undefined) {
 								continue;
 						}

 						this.updateConfig(key, updateValue);
 				}

 				return this;
 		}
 }

 // `Partial&amp;lt;NodeConfig&amp;gt;`` allows us to provide only a part of the
 // NodeConfig interface.
 new NodeAppBuilder().config({appName: 'ToDoApp'});
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#requiredtype"&gt;&lt;code&gt;Required&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Make all properties in &lt;code&gt;T&lt;/code&gt; required.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/AQ4SwOwFwUwJwGYEMDGNgGED21VQGJZwC2wA3gFCjXAzFJgA2A-AFzADOUckA5gNxUaIYjA4ckvGG07c+g6gF8KQkAgCuEFFDA5O6gEbEwUbLm2ESwABQIixACJIoSdgCUYAR3Vg4MACYAPGYuFvYAfACU5Ko0APRxwADKMBD+wFAAFuh2Vv7OSBlYGdmc8ABu8LHKsRyGxqY4oQT21pTCIHQMjOwA5DAAHgACxAAOjDAAdChYxL0ANLHUouKSMH0AEmAAhJhY6ozpAJ77GTCMjMCiV0ToSAb7UJPPC9WRgrEJwAAqR6MwSRQPFGUFocDgRHYxnEfGAowh-zgUCOwF6KwkUl6tXqJhCeEsxDaS1AXSYfUGI3GUxmc0WSneQA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; interface ContactForm {
 		email?: string;
 		message?: string;
 }

 function submitContactForm(formData: Required&amp;lt;ContactForm&amp;gt;) {
 		// Send the form data to the server.
 }

 submitContactForm({
 		email: 'ex@mple.com',
 		message: 'Hi! Could you tell me more about…',
 });

 // TypeScript error: missing property 'message'
 submitContactForm({
 		email: 'ex@mple.com',
 });
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#readonlytype"&gt;&lt;code&gt;Readonly&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Make all properties in &lt;code&gt;T&lt;/code&gt; readonly.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/AQ4UwOwVwW2AZA9gc3mAbmANsA3gKFCOAHkAzMgGkOJABEwAjKZa2kAUQCcvEu32AMQCGAF2FYBIAL4BufDRABLCKLBcywgMZgEKZOoDCiCGSXI8i4hGEwwALmABnUVxXJ57YFgzZHSVF8sT1BpBSItLGEnJz1kAy5LLy0TM2RHACUwYQATEywATwAeAITjU3MAPnkrCJMXLigtUT4AClxgGztKbyDgaX99I1TzAEokr1BRAAslJwA6FIqLAF48TtswHp9MHDla9hJGACswZvmyLjAwAC8wVpm5xZHkUZDaMKIwqyWXYCW0oN4sNlsA1h0ug5gAByACyBQAggAHJHQ7ZBIFoXbzBjMCz7OoQP5YIaJNYQMAAdziCVaALGNSIAHomcAACoFJFgADKWjcSNEwG4vC4ji0wggEEQguiTnMEGALWAV1yAFp8gVgEjeFyuKICvMrCTgVxnst5jtsGC4ljsPNhXxGaAWcAAOq6YRXYDCRg+RWIcA5JSC+kWdCepQ+v3RYCU3RInzRMCGwlpC19NYBW1Ye08R1AA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; enum LogLevel {
 		Off,
 		Debug,
 		Error,
 		Fatal
 };

 interface LoggerConfig {
 		name: string;
 		level: LogLevel;
 }

 class Logger {
 		config: Readonly&amp;lt;LoggerConfig&amp;gt;;

 		constructor({name, level}: LoggerConfig) {
 				this.config = {name, level};
 				Object.freeze(this.config);
 		}
 }

 const config: LoggerConfig = {
 	name: 'MyApp',
 	level: LogLevel.Debug
 };

 const logger = new Logger(config);

 // TypeScript Error: cannot assign to read-only property.
 logger.config.level = LogLevel.Error;

 // We are able to edit config variable as we please.
 config.level = LogLevel.Error;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"&gt;&lt;code&gt;Pick&amp;lt;T, K&amp;gt;&lt;/code&gt;&lt;/a&gt; - From &lt;code&gt;T&lt;/code&gt;, pick a set of properties whose keys are in the union &lt;code&gt;K&lt;/code&gt;.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/AQ4SwOwFwUwJwGYEMDGNgEE5TCgNugN4BQoZwOUBAXMAM5RyQDmA3KeSFABYCuAtgCMISMHloMmENh04oA9tBjQJjFuzIBfYrOAB6PcADCcGElh1gEGAHcKATwAO6ebyjB5CTNlwFwSxFR0BX5HeToYABNgBDh5fm8cfBg6AHIKG3ldA2BHOOcfFNpUygJ0pAhokr4hETFUgDpswywkggAFUwA3MFtgAF5gQgowKhhVKTYKGuFRcXo1aVZgbTIoJ3RW3xhOmB6+wfbcAGsAHi3kgBpgEtGy4AAfG54BWfqAPnZm4AAlZUj4MAkMA8GAGB4vEgfMlLLw6CwPBA8PYRmMgZVgAC6CgmI4cIommQELwICh8RBgKZKvALh1ur0bHQABR5PYMui0Wk7em2ADaAF0AJS0AASABUALIAGQAogR+Mp3CROCAFBBwVC2ikBpj5CgBIqGjizLA5TAFdAmalImAuqlBRoVQh5HBgEy1eDWfs7J5cjzGYKhroVfpDEhHM4MV6GRR5NN0JrtnRg6BVirTFBeHAKYmYY6QNpdB73LmCJZBlSAXAubtvczeSmQMNSuMbmKNgBlHFgPEUNwusBIPAAQlS1xetTmxT0SDoESgdD0C4aACtHMwxytLrohawgA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; interface Article {
 		title: string;
 		thumbnail: string;
 		content: string;
 }

 // Creates new type out of the `Article` interface composed
 // from the Articles' two properties: `title` and `thumbnail`.
 // `ArticlePreview = {title: string; thumbnail: string}`
 type ArticlePreview = Pick&amp;lt;Article, 'title' | 'thumbnail'&amp;gt;;

 // Render a list of articles using only title and description.
 function renderArticlePreviews(previews: ArticlePreview[]): HTMLElement {
 		const articles = document.createElement('div');

 		for (const preview of previews) {
 				// Append preview to the articles.
 		}

 		return articles;
 }

 const articles = renderArticlePreviews([
 		{
 			title: 'TypeScript tutorial!',
 			thumbnail: '/assets/ts.jpg'
 		}
 ]);
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"&gt;&lt;code&gt;Record&amp;lt;K, T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Construct a type with a set of properties &lt;code&gt;K&lt;/code&gt; of type &lt;code&gt;T&lt;/code&gt;.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/AQ4ejYAUHsGcCWAXBMB2dgwGbAKYC2ADgDYwCeeemCaWArgE7ADGMxAhmuQHQBQoYEnJE8wALKEARnkaxEKdMAC8wAOS0kstGuAAfdQBM8ANzxlRjXQbVaWACwC0JPB0NqA3HwGgIwAJJoWozYHCxixnAsjAhStADmwESMMJYo1Fi4HMCIaPEu+MRklHj8gpqyoeHAAKJFFFTAAN4+giDYCIxwSAByHAR4AFw5SDF5Xm2gJBzdfQPD3WPxE5PAlBxdAPLYNQAelgh4aOHDaPQEMowrIAC+3oJ+AMKMrlrAXFhSAFZ4LEhC9g4-0BmA4JBISXgiCkBQABpILrJ5MhUGhYcATGD6Bk4Hh-jNgABrPDkOBlXyQAAq9ngYmJpOAAHcEOCRjAXqwYODfoo6DhakUSph+Uh7GI4P0xER4Cj0OSQGwMP8tP1hgAlX7swwAHgRl2RvIANALSA08ABtAC6AD4VM1Wm0Kow0MMrYaHYJjGYLLJXZb3at1HYnC43Go-QHQDcvA6-JsmEJXARgCDgMYWAhjIYhDAU+YiMAAFIwex0ZmilMITCGF79TLAGRsAgJYAAZRwSEZGzEABFTOZUrJ5Yn+jwnWgeER6HB7AAKJrADpdXqS4ZqYultTG6azVfqHswPBbtauLY7fayQ7HIbAAAMwBuAEoYw9IBq2Ixs9h2eFMOQYPQObALQKJgggABeYhghCIpikkKRpOQRIknAsZUiIeCttECBEP8NSMCkjDDAARMGziuIYxHwYOjDCMBmDNnAuTxA6irdCOBB1Lh5Dqpqn66tISIykawBnOCtqqC0gbjqc9DgpGkxegOliyfJDrRkAA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; // Positions of employees in our company.
 type MemberPosition = 'intern' | 'developer' | 'tech-lead';

 // Interface describing properties of a single employee.
 interface Employee {
 		firstName: string;
 		lastName: string;
 		yearsOfExperience: number;
 }

 // Create an object that has all possible `MemberPosition` values set as keys.
 // Those keys will store a collection of Employees of the same position.
 const team: Record&amp;lt;MemberPosition, Employee[]&amp;gt; = {
 		intern: [],
 		developer: [],
 		'tech-lead': [],
 };

 // Our team has decided to help John with his dream of becoming Software Developer.
 team.intern.push({
 	firstName: 'John',
 	lastName: 'Doe',
 	yearsOfExperience: 0
 });

 // `Record` forces you to initialize all of the property keys.
 // TypeScript Error: "tech-lead" property is missing
 const teamEmpty: Record&amp;lt;MemberPosition, null&amp;gt; = {
 		intern: null,
 		developer: null,
 };
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#excludetype-excludedunion"&gt;&lt;code&gt;Exclude&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;/a&gt; - Exclude from &lt;code&gt;T&lt;/code&gt; those types that are assignable to &lt;code&gt;U&lt;/code&gt;.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/JYOwLgpgTgZghgYwgAgMrQG7QMIHsQzADmyA3gFDLIAOuUYAXMiAK4A2byAPsgM5hRQJHqwC2AI2gBucgF9y5MAE9qKAEoQAjiwj8AEnBAATNtGQBeZAAooWphu26wAGmS3e93bRC8IASgsAPmRDJRlyAHoI5ABRAA8ENhYjFFYOZGVVZBgoXFFkAAM0zh5+QRBhZhYJaAKAOkjogEkQZAQ4X2QAdwALCFbaemRgXmQtFjhOMFwq9K6ULuB0lk6U+HYwZAxJnQaYFhAEMGB8ZCIIMAAFOjAANR2IK0HGWISklIAedCgsKDwCYgAbQA5M9gQBdVzFQJ+JhiSRQMiUYYwayZCC4VHPCzmSzAspCYEBWxgFhQAZwKC+FpgJ43VwARgADH4ZFQSWSBjcZPJyPtDsdTvxKWBvr8rD1DCZoJ5HPopaYoK4EPhCEQmGKcKriLCtrhgEYkVQVT5Nr4fmZLLZtMBbFZgT0wGBqES6ghbHBIJqoBKFdBWQpjfh+DQbhY2tqiHVsbjLMVkAB+ZAAZiZaeQTHOVxu9ySjxNaujNwDVHNvzqbBGkBAdPoAfkQA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; interface ServerConfig {
 	port: null | string | number;
 }

 type RequestHandler = (request: Request, response: Response) =&amp;gt; void;

 // Exclude `null` type from `null | string | number`.
 // In case the port is equal to `null`, we will use default value.
 function getPortValue(port: Exclude&amp;lt;ServerConfig['port'], null&amp;gt;): number {
 	if (typeof port === 'string') {
 		return parseInt(port, 10);
 	}

 	return port;
 }

 function startServer(handler: RequestHandler, config: ServerConfig): void {
 	const server = require('http').createServer(handler);

 	const port = config.port === null ? 3000 : getPortValue(config.port);
 	server.listen(port);
 }
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#extracttype-union"&gt;&lt;code&gt;Extract&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;/a&gt; - Extract from &lt;code&gt;T&lt;/code&gt; those types that are assignable to &lt;code&gt;U&lt;/code&gt;.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/CYUwxgNghgTiAEAzArgOzAFwJYHtXzSwEdkQBJYACgEoAueVZAWwCMQYBuAKDDwGcM8MgBF4AXngBlAJ6scESgHIRi6ty5ZUGdoihgEABXZ888AN5d48ANoiAuvUat23K6ihMQ9ATE0BzV3goPy8GZjZOLgBfLi4Aejj4AEEICBwAdz54MAALKFQQ+BxEeAAHY1NgKAwoIKy0grr4DByEUpgccpgMaXgAaxBerCzi+B9-ZulygDouFHRsU1z8kKMYE1RhaqgAHkt4AHkWACt4EAAPbVRgLLWNgBp9gGlBs8uQa6yAUUuYPQwdgNpKM7nh7mMML4CgA+R5WABqUAgpDeVxuhxO1he0jsXGh8EoOBO9COx3BQPo2PBADckaR6IjkSA6PBqTgsMBzPsicdrEC7OJWXSQNwYvFEgAVTS9JLXODpeDpKBZFg4GCoWa8VACIJykAKiQWKy2YQOAioYikCg0OEMDyhRSy4DyxS24KhAAMjyi6gS8AAwjh5OD0iBFHAkJoEOksC1mnkMJq8gUQKDNttKPlnfrwYp3J5XfBHXqoKpfYkAOI4ansTxaeDADmoRSCCBYAbxhC6TDx6rwYHIRX5bScjA4bLJwoDmDwDkfbA9JMrVMVdM1TN69LgkTgwgkchUahqIA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; declare function uniqueId(): number;

 const ID = Symbol('ID');

 interface Person {
 	[ID]: number;
 	name: string;
 	age: number;
 }

 // Allows changing the person data as long as the property key is of string type.
 function changePersonData&amp;lt;
 	Obj extends Person,
 	Key extends Extract&amp;lt;keyof Person, string&amp;gt;,
 	Value extends Obj[Key]
 &amp;gt; (obj: Obj, key: Key, value: Value): void {
 	obj[key] = value;
 }

 // Tiny Andrew was born.
 const andrew = {
 	[ID]: uniqueId(),
 	name: 'Andrew',
 	age: 0,
 };

 // Cool, we're fine with that.
 changePersonData(andrew, 'name', 'Pony');

 // Government didn't like the fact that you wanted to change your identity.
 changePersonData(andrew, ID, uniqueId());
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#nonnullabletype"&gt;&lt;code&gt;NonNullable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Exclude &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; from &lt;code&gt;T&lt;/code&gt;.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; Works with 
   &lt;a href="https://www.typescriptlang.org/tsconfig#strictNullChecks"&gt;&lt;code&gt;strictNullChecks&lt;/code&gt;&lt;/a&gt; set to 
   &lt;code&gt;true&lt;/code&gt;. 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/C4TwDgpgBACg9gJ2AOQK4FsBGEFQLxQDOwCAlgHYDmUAPlORtrnQwDasDcAUFwPQBU-WAEMkUOADMowqAGNWwwoSgATCBIqlgpOOSjAAFsOBRSy1IQgr9cKJlSlW1mZYQA3HFH68u8xcoBlHA8EACEHJ08Aby4oKDBUTFZSWXjEFEYcAEIALihkXTR2YSSIAB54JDQsHAA+blj4xOTUsHSACkMzPKD3HHDHNQQAGjSkPMqMmoQASh7g-oihqBi4uNIpdraxPAI2VhmVxrX9AzMAOm2ppnwoAA4ABifuE4BfKAhWSyOTuK7CS7pao3AhXF5rV48E4ICDAVAIPT-cGQyG+XTEIgLMJLTx7CAAdygvRCA0iCHaMwarhJOIQjUBSHaACJHk8mYdeLwxtdcVAAOSsh58+lXdr7Dlcq7A3n3J4PEUdADMcspUE53OluAIUGVTx46oAKuAIAFZGQwCYAKIIBCILjUxaDHAMnla+iodjcIA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; type PortNumber = string | number | null;

 /** Part of a class definition that is used to build a server */
 class ServerBuilder {
 		portNumber!: NonNullable&amp;lt;PortNumber&amp;gt;;

 		port(this: ServerBuilder, port: PortNumber): ServerBuilder {
 				if (port == null) {
 						this.portNumber = 8000;
 				} else {
 						this.portNumber = port;
 				}

 				return this;
 		}
 }

 const serverBuilder = new ServerBuilder();

 serverBuilder
 		.port('8000')   // portNumber = '8000'
 		.port(null)     // portNumber =  8000
 		.port(3000);    // portNumber =  3000

 // TypeScript error
 serverBuilder.portNumber = null;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#parameterstype"&gt;&lt;code&gt;Parameters&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Obtain the parameters of a function type in a tuple.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/GYVwdgxgLglg9mABAZwBYmMANgUwBQxgAOIUAXIgIZgCeA2gLoCUFAbnDACaIDeAUIkQB6IYgCypSlBxUATrMo1ECsJzgBbLEoipqAc0J7EMKMgDkiHLnU4wp46pwAPHMgB0fAL58+oSLARECEosLAA5ABUYG2QAHgAxJGdpVWREPDdMylk9ZApqemZEAF4APipacrw-CApEgBogkKwAYThwckQwEHUAIxxZJl4BYVEImiIZKF0oZRwiWVdbeygJmThgOYgcGFYcbhqApCJsyhtpWXcR1cnEePBoeDAABVPzgbTixFeFd8uEsClADcIxGiygIFkSEOT3SmTc2VydQeRx+ZxwF2QQ34gkEwDgsnSuFmMBKiAADEDjIhYk1Qm0OlSYABqZnYka4xA1DJZHJYkGc7yCbyeRA+CAIZCzNAYbA4CIAdxg2zJwVCkWirjwMswuEaACYmCCgA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; function shuffle(input: any[]): void {
 	// Mutate array randomly changing its' elements indexes.
 }

 function callNTimes&amp;lt;Fn extends (...arguments_: any[]) =&amp;gt; any&amp;gt; (func: Fn, callCount: number) {
 	// Type that represents the type of the received function parameters.
 	type FunctionParameters = Parameters&amp;lt;Fn&amp;gt;;

 	return function (...arguments_: FunctionParameters) {
 		for (let i = 0; i &amp;lt; callCount; i++) {
 			func(...arguments_);
 		}
 	}
 }

 const shuffleTwice = callNTimes(shuffle, 2);
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#constructorparameterstype"&gt;&lt;code&gt;ConstructorParameters&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Obtain the parameters of a constructor function type in a tuple.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/MYGwhgzhAECCBOAXAlqApgWQPYBM0mgG8AoaaFRENALmgkXmQDsBzAblOmCycTV4D8teo1YdO3JiICuwRFngAKClWENmLAJRFOZRAAtkEAHQq00ALzlklNBzIBfYk+KhIMAJJTEYJsDQAwmDA+mgAPAAq0GgAHnxMODCKTGgA7tCKxllg8CwQtL4AngDaALraFgB80EWa1SRkAA6MAG5gfNAB4FABPDJyCrQR9tDNyG0dwMGhtBhgjWEiGgA00F70vv4RhY3hEZXVVinpc42KmuJkkv3y8Bly8EPaDWTkhiZd7r3e8LK3llwGCMXGQWGhEOsfH5zJlsrl8p0+gw-goAAo5MAAW3BaHgEEilU0tEhmzQ212BJ0ry4SOg+kg+gBBiMximIGA0nAfAQLGk2N4EAAEgzYcYcnkLsRdDTvNEYkYUKwSdCme9WdM0MYwYhFPSIPpJdTkAAzDKxBUaZX+aAAQgsVmkCTQxuYaBw2ng4Ok8CYcotSu8pMur09iG9vuObxZnx6SN+AyUWTF8MN0CcZE4Ywm5jZHK5aB5fP4iCFIqT4oRRTKRLo6lYVNeAHpG50wOzOe1zHr9NLQ+HoABybsD4HOKXXRA1JCoKhBELmI5pNaB6Fz0KKBAodDYPAgSUTmqYsAALx4m5nC6nW9nGq14KtaEUA9gR9PvuNCjQ9BgACNvcwNBtAcLiAA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; class ArticleModel {
 	title: string;
 	content?: string;

 	constructor(title: string) {
 		this.title = title;
 	}
 }

 class InstanceCache&amp;lt;T extends (new (...arguments_: any[]) =&amp;gt; any)&amp;gt; {
 	private ClassConstructor: T;
 	private cache: Map&amp;lt;string, InstanceType&amp;lt;T&amp;gt;&amp;gt; = new Map();

 	constructor (ctr: T) {
 		this.ClassConstructor = ctr;
 	}

 	getInstance (...arguments_: ConstructorParameters&amp;lt;T&amp;gt;): InstanceType&amp;lt;T&amp;gt; {
 		const hash = this.calculateArgumentsHash(...arguments_);

 		const existingInstance = this.cache.get(hash);
 		if (existingInstance !== undefined) {
 			return existingInstance;
 		}

 		return new this.ClassConstructor(...arguments_);
 	}

 	private calculateArgumentsHash(...arguments_: any[]): string {
 		// Calculate hash.
 		return 'hash';
 	}
 }

 const articleCache = new InstanceCache(ArticleModel);
 const amazonArticle = articleCache.getInstance('Amazon forests burning!');
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#returntypetype"&gt;&lt;code&gt;ReturnType&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Obtain the return type of a function type.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/MYGwhgzhAECSAmICmBlJAnAbgS2E6A3gFDTTwD2AcuQC4AW2AdgOYAUAlAFzSbnbyEAvkWFFQkGJSQB3GMVI1sNZNwg10TZgG4S0YOUY0kh1es07d+xmvQBXYDXLpWi5UlMaWAGj0GjJ6BtNdkJdBQYIADpXZGgAXmgYpB1ScOwoq38aeN9DYxoU6GFRKzVoJjUwRjwAYXJbPPRuAFkwAAcAHgAxBodsAx9GWwBbACMMAD4cxhloVraOCyYjdAAzMDxoOut1e0d0UNIZ6WhWSPOwdGYIbiqATwBtAF0uaHudUQB6ACpv6ABpJBINqJdAbADW0Do5BOw3u5R2VTwMHIq2gAANtjZ0bkbHsnFCwJh8ONjHp0EgwEZ4JFoN9PkRVr1FAZoMwkDRYIjqkgOrosepoEgAB7+eAwAV2BxOLy6ACCVxgIrFEoMeOl6AACpcwMMORgIB1JRMiBNWKVdhruJKfOdIpdrtwFddXlzKjyACp3Nq842HaDIbL6BrZBIVGhIpB1EMYSLsmjmtWW-YhAA+qegAAYLKQLQj3ZsEsdccmnGcLor2Dn8xGedHGpEIBzEzspfsfMHDNAANTQACMVaIljV5GQkRA5DYmIpVKQAgAJARO9le33BDXIyi0YuLW2nJFGLqkOvxFB0YPdBSaLZ0IwNzyPkO8-xkGgsLh8Al427a3hWAhXwwHA8EHT5PmgAB1bAQBAANJ24adKWpft72RaBUTgRBUCAj89HAM8xCTaBjggABRQx0DuHJv25P9dCkWRZVIAAiBjoFImpmjlFBgA0NpsjadByDacgIDAEAIAAQmYpjoGYgAZSBsmGPw6DtZiiFA8CoJguDmAQmoZ2QvtUKQLdoAYmBTwgdEiCAA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; /** Provides every element of the iterable `iter` into the `callback` function and stores the results in an array. */
 function mapIter&amp;lt;
 		Elem,
 		Func extends (elem: Elem) =&amp;gt; any,
 		Ret extends ReturnType&amp;lt;Func&amp;gt;
 &amp;gt;(iter: Iterable&amp;lt;Elem&amp;gt;, callback: Func): Ret[] {
 		const mapped: Ret[] = [];

 		for (const elem of iter) {
 				mapped.push(callback(elem));
 		}

 		return mapped;
 }

 const setObject: Set&amp;lt;string&amp;gt; = new Set();
 const mapObject: Map&amp;lt;number, string&amp;gt; = new Map();

 mapIter(setObject, (value: string) =&amp;gt; value.indexOf('Foo')); // number[]

 mapIter(mapObject, ([key, value]: [number, string]) =&amp;gt; {
 		return key % 2 === 0 ? value : 'Odd';
 }); // string[]
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#instancetypetype"&gt;&lt;code&gt;InstanceType&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Obtain the instance type of a constructor function type.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/MYGwhgzhAECSAmICmBlJAnAbgS2E6A3gFDTTwD2AcuQC4AW2AdgOYAUAlAFzSbnbyEAvkWFFQkGJSQB3GMVI1sNZNwg10TZgG4S0YOUY0kh1es07d+xmvQBXYDXLpWi5UlMaWAGj0GjJ6BtNdkJdBQYIADpXZGgAXmgYpB1ScOwoq38aeN9DYxoU6GFRKzVoJjUwRjwAYXJbPPRuAFkwAAcAHgAxBodsAx9GWwBbACMMAD4cxhloVraOCyYjdAAzMDxoOut1e0d0UNIZ6WhWSPOwdGYIbiqATwBtAF0uaHudUQB6ACpv6ABpJBINqJdAbADW0Do5BOw3u5R2VTwMHIq2gAANtjZ0bkbHsnFCwJh8ONjHp0EgwEZ4JFoN9PkRVr1FAZoMwkDRYIjqkgOrosepoEgAB7+eAwAV2BxOLy6ACCVxgIrFEoMeOl6AACpcwMMORgIB1JRMiBNWKVdhruJKfOdIpdrtwFddXlzKjyACp3Nq842HaDIbL6BrZBIVGhIpB1EMYSLsmjmtWW-YhAA+qegAAYLKQLQj3ZsEsdccmnGcLor2Dn8xGedHGpEIBzEzspfsfMHDNAANTQACMVaIljV5GQkRA5DYmIpVKQAgAJARO9le33BDXIyi0YuLW2nJFGLqkOvxFB0YPdBSaLZ0IwNzyPkO8-xkGgsLh8Al427a3hWAhXwwHA8EHT5PmgAB1bAQBAANJ24adKWpft72RaBUTgRBUCAj89HAM8xCTaBjggABRQx0DuHJv25P9dCkWRZVIAAiBjoFImpmjlFBgA0NpsjadByDacgIDAEAIAAQmYpjoGYgAZSBsmGPw6DtZiiFA8CoJguDmAQmoZ2QvtUKQLdoAYmBTwgdEiCAA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; class IdleService {
 		doNothing (): void {}
 }

 class News {
 		title: string;
 		content: string;

 		constructor(title: string, content: string) {
 				this.title = title;
 				this.content = content;
 		}
 }

 const instanceCounter: Map&amp;lt;Function, number&amp;gt; = new Map();

 interface Constructor {
 		new(...arguments_: any[]): any;
 }

 // Keep track how many instances of `Constr` constructor have been created.
 function getInstance&amp;lt;
 		Constr extends Constructor,
 		Arguments extends ConstructorParameters&amp;lt;Constr&amp;gt;
 &amp;gt;(constructor: Constr, ...arguments_: Arguments): InstanceType&amp;lt;Constr&amp;gt; {
 		let count = instanceCounter.get(constructor) || 0;

 		const instance = new constructor(...arguments_);

 		instanceCounter.set(constructor, count + 1);

 		console.log(`Created ${count + 1} instances of ${Constr.name} class`);

 		return instance;
 }


 const idleService = getInstance(IdleService);
 // Will log: `Created 1 instances of IdleService class`
 const newsEntry = getInstance(News, 'New ECMAScript proposals!', 'Last month...');
 // Will log: `Created 1 instances of News class`
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"&gt;&lt;code&gt;Omit&amp;lt;T, K&amp;gt;&lt;/code&gt;&lt;/a&gt; - Constructs a type by picking all properties from T and then removing K.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/JYOwLgpgTgZghgYwgAgIImAWzgG2QbwChlks4BzCAVShwC5kBnMKUcgbmKYAcIFgIjBs1YgOXMpSFMWbANoBdTiW5woFddwAW0kfKWEAvoUIB6U8gDCUCHEiNkICAHdkYAJ69kz4GC3JcPG4oAHteKDABBxCYNAxsPFBIWEQUCAAPJG4wZABySUFcgJAAEzMLXNV1ck0dIuCw6EjBADpy5AB1FAQ4EGQAV0YUP2AHDy8wEOQbUugmBLwtEIA3OcmQnEjuZBgQqE7gAGtgZAhwKHdkHFGwNvGUdDIcAGUliIBJEF3kAF5kAHlML4ADyPBIAGjyBUYRQAPnkqho4NoYQA+TiEGD9EAISIhPozErQMG4AASK2gn2+AApek9pCSXm8wFSQooAJQMUkAFQAsgAZACiOAgmDOOSIJAQ+OYyGl4DgoDmf2QJRCCH6YvALQQNjsEGFovF1NyJWAy1y7OUyHMyE+yRAuFImG4Iq1YDswHxbRINjA-SgfXlHqVUE4xiAA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; interface Animal {
 		imageUrl: string;
 		species: string;
 		images: string[];
 		paragraphs: string[];
 }

 // Creates new type with all properties of the `Animal` interface
 // except 'images' and 'paragraphs' properties. We can use this
 // type to render small hover tooltip for a wiki entry list.
 type AnimalShortInfo = Omit&amp;lt;Animal, 'images' | 'paragraphs'&amp;gt;;

 function renderAnimalHoverInfo (animals: AnimalShortInfo[]): HTMLElement {
 		const container = document.createElement('div');
 		// Internal implementation.
 		return container;
 }
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#uppercasestringtype"&gt;&lt;code&gt;Uppercase&amp;lt;S extends string&amp;gt;&lt;/code&gt;&lt;/a&gt; - Transforms every character in a string into uppercase.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; type T = Uppercase&amp;lt;'hello'&amp;gt;;  // 'HELLO'

 type T2 = Uppercase&amp;lt;'foo' | 'bar'&amp;gt;;  // 'FOO' | 'BAR'

 type T3&amp;lt;S extends string&amp;gt; = Uppercase&amp;lt;`aB${S}`&amp;gt;;
 type T4 = T3&amp;lt;'xYz'&amp;gt;;  // 'ABXYZ'

 type T5 = Uppercase&amp;lt;string&amp;gt;;  // string
 type T6 = Uppercase&amp;lt;any&amp;gt;;  // any
 type T7 = Uppercase&amp;lt;never&amp;gt;;  // never
 type T8 = Uppercase&amp;lt;42&amp;gt;;  // Error, type 'number' does not satisfy the constraint 'string'
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#lowercasestringtype"&gt;&lt;code&gt;Lowercase&amp;lt;S extends string&amp;gt;&lt;/code&gt;&lt;/a&gt; - Transforms every character in a string into lowercase.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; type T = Lowercase&amp;lt;'HELLO'&amp;gt;;  // 'hello'

 type T2 = Lowercase&amp;lt;'FOO' | 'BAR'&amp;gt;;  // 'foo' | 'bar'

 type T3&amp;lt;S extends string&amp;gt; = Lowercase&amp;lt;`aB${S}`&amp;gt;;
 type T4 = T3&amp;lt;'xYz'&amp;gt;;  // 'abxyz'

 type T5 = Lowercase&amp;lt;string&amp;gt;;  // string
 type T6 = Lowercase&amp;lt;any&amp;gt;;  // any
 type T7 = Lowercase&amp;lt;never&amp;gt;;  // never
 type T8 = Lowercase&amp;lt;42&amp;gt;;  // Error, type 'number' does not satisfy the constraint 'string'
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#capitalizestringtype"&gt;&lt;code&gt;Capitalize&amp;lt;S extends string&amp;gt;&lt;/code&gt;&lt;/a&gt; - Transforms the first character in a string into uppercase.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; type T = Capitalize&amp;lt;'hello'&amp;gt;;  // 'Hello'

 type T2 = Capitalize&amp;lt;'foo' | 'bar'&amp;gt;;  // 'Foo' | 'Bar'

 type T3&amp;lt;S extends string&amp;gt; = Capitalize&amp;lt;`aB${S}`&amp;gt;;
 type T4 = T3&amp;lt;'xYz'&amp;gt;;  // 'ABxYz'

 type T5 = Capitalize&amp;lt;string&amp;gt;;  // string
 type T6 = Capitalize&amp;lt;any&amp;gt;;  // any
 type T7 = Capitalize&amp;lt;never&amp;gt;;  // never
 type T8 = Capitalize&amp;lt;42&amp;gt;;  // Error, type 'number' does not satisfy the constraint 'string'
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#uncapitalizestringtype"&gt;&lt;code&gt;Uncapitalize&amp;lt;S extends string&amp;gt;&lt;/code&gt;&lt;/a&gt; - Transforms the first character in a string into lowercase.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; type T = Uncapitalize&amp;lt;'Hello'&amp;gt;;  // 'hello'

 type T2 = Uncapitalize&amp;lt;'Foo' | 'Bar'&amp;gt;;  // 'foo' | 'bar'

 type T3&amp;lt;S extends string&amp;gt; = Uncapitalize&amp;lt;`AB${S}`&amp;gt;;
 type T4 = T3&amp;lt;'xYz'&amp;gt;;  // 'aBxYz'

 type T5 = Uncapitalize&amp;lt;string&amp;gt;;  // string
 type T6 = Uncapitalize&amp;lt;any&amp;gt;;  // any
 type T7 = Uncapitalize&amp;lt;never&amp;gt;;  // never
 type T8 = Uncapitalize&amp;lt;42&amp;gt;;  // Error, type 'number' does not satisfy the constraint 'string'
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can find some examples in the &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html"&gt;TypeScript docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus"&gt;Sindre Sorhus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Emiyaaaaa"&gt;Haozheng Li&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/som-sm"&gt;Som Shekhar Mukherjee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CvX"&gt;Jarek Radosz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BendingBender"&gt;Dimitri Benin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/voxpelli"&gt;Pelle Wessman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skarab42"&gt;Sébastien Mischler&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/license-mit"&gt;MIT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/license-cc0"&gt;CC0-1.0&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;SPDX-License-Identifier: (MIT OR CC0-1.0)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>supabase/supabase</title>
      <link>https://github.com/supabase/supabase</link>
      <description>&lt;p&gt;The Postgres development platform. Supabase gives you a dedicated Postgres database to build your web, mobile, and AI applications.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://user-images.githubusercontent.com/8291514/213727234-cda046d6-28c6-491a-b284-b86c5cede25d.png#gh-light-mode-only" /&gt; &lt;img src="https://user-images.githubusercontent.com/8291514/213727225-56186826-bee8-43b5-9b15-86e839d89393.png#gh-dark-mode-only" /&gt; &lt;/p&gt; 
&lt;h1&gt;Supabase&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://supabase.com"&gt;Supabase&lt;/a&gt; is the Postgres development platform. We're building the features of Firebase using enterprise-grade open source tools.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Hosted Postgres Database. &lt;a href="https://supabase.com/docs/guides/database"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Authentication and Authorization. &lt;a href="https://supabase.com/docs/guides/auth"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Auto-generated APIs. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; REST. &lt;a href="https://supabase.com/docs/guides/api"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; GraphQL. &lt;a href="https://supabase.com/docs/guides/graphql"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Realtime subscriptions. &lt;a href="https://supabase.com/docs/guides/realtime"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Functions. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Database Functions. &lt;a href="https://supabase.com/docs/guides/database/functions"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Edge Functions &lt;a href="https://supabase.com/docs/guides/functions"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; File Storage. &lt;a href="https://supabase.com/docs/guides/storage"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; AI + Vector/Embeddings Toolkit. &lt;a href="https://supabase.com/docs/guides/ai"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Dashboard&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/master/apps/www/public/images/github/supabase-dashboard.png" alt="Supabase Dashboard" /&gt;&lt;/p&gt; 
&lt;p&gt;Watch "releases" of this repo to get notified of major updates.&lt;/p&gt; 
&lt;p&gt;&lt;kbd&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/d5f7f413ab356dc1a92075cb3cee4e40a957d5b1/web/static/watch-repo.gif" alt="Watch this repo" /&gt;&lt;/kbd&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For full documentation, visit &lt;a href="https://supabase.com/docs"&gt;supabase.com/docs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To see how to Contribute, visit &lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/DEVELOPERS.md"&gt;Getting Started&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community &amp;amp; Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/supabase/discussions"&gt;Community Forum&lt;/a&gt;. Best for: help with building, discussion about database best practices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/supabase/issues"&gt;GitHub Issues&lt;/a&gt;. Best for: bugs and errors you encounter using Supabase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://supabase.com/docs/support#business-support"&gt;Email Support&lt;/a&gt;. Best for: problems with your database or infrastructure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.supabase.com"&gt;Discord&lt;/a&gt;. Best for: sharing your applications and hanging out with the community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;p&gt;Supabase is a combination of open source tools. We’re building the features of Firebase using enterprise-grade, open source products. If the tools and communities exist, with an MIT, Apache 2, or equivalent open license, we will use and support that tool. If the tool doesn't exist, we build and open source it ourselves. Supabase is not a 1-to-1 mapping of Firebase. Our aim is to give developers a Firebase-like developer experience using open source tools.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Supabase is a &lt;a href="https://supabase.com/dashboard"&gt;hosted platform&lt;/a&gt;. You can sign up and start using Supabase without installing anything. You can also &lt;a href="https://supabase.com/docs/guides/hosting/overview"&gt;self-host&lt;/a&gt; and &lt;a href="https://supabase.com/docs/guides/local-development"&gt;develop locally&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/master/apps/docs/public/img/supabase-architecture.svg?sanitize=true" alt="Architecture" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.postgresql.org/"&gt;Postgres&lt;/a&gt; is an object-relational database system with over 30 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/realtime"&gt;Realtime&lt;/a&gt; is an Elixir server that allows you to listen to PostgreSQL inserts, updates, and deletes using websockets. Realtime polls Postgres' built-in replication functionality for database changes, converts changes to JSON, then broadcasts the JSON over websockets to authorized clients.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://postgrest.org/"&gt;PostgREST&lt;/a&gt; is a web server that turns your PostgreSQL database directly into a RESTful API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/gotrue"&gt;GoTrue&lt;/a&gt; is a JWT-based authentication API that simplifies user sign-ups, logins, and session management in your applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/storage-api"&gt;Storage&lt;/a&gt; a RESTful API for managing files in S3, with Postgres handling permissions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://github.com/supabase/pg_graphql/"&gt;pg_graphql&lt;/a&gt; a PostgreSQL extension that exposes a GraphQL API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/postgres-meta"&gt;postgres-meta&lt;/a&gt; is a RESTful API for managing your Postgres, allowing you to fetch tables, add roles, and run queries, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kong/kong"&gt;Kong&lt;/a&gt; is a cloud-native API gateway.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Client libraries&lt;/h4&gt; 
&lt;p&gt;Our approach for client libraries is modular. Each sub-library is a standalone implementation for a single external system. This is one of the ways we support existing tools.&lt;/p&gt; 
&lt;table style="table-layout:fixed; white-space: nowrap;"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Client&lt;/th&gt; 
   &lt;th colspan="5"&gt;Feature-Clients (bundled in Supabase client)&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;!-- notranslate --&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Supabase&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://github.com/postgrest/postgrest" target="_blank" rel="noopener noreferrer"&gt;PostgREST&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://github.com/supabase/gotrue" target="_blank" rel="noopener noreferrer"&gt;GoTrue&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://github.com/supabase/realtime" target="_blank" rel="noopener noreferrer"&gt;Realtime&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://github.com/supabase/storage-api" target="_blank" rel="noopener noreferrer"&gt;Storage&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;Functions&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;!-- TEMPLATE FOR NEW ROW --&gt; 
  &lt;!-- START ROW
  &lt;tr&gt;
    &lt;td&gt;lang&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-lang" target="_blank" rel="noopener noreferrer"&gt;supabase-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-lang" target="_blank" rel="noopener noreferrer"&gt;postgrest-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-lang" target="_blank" rel="noopener noreferrer"&gt;gotrue-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/realtime-lang" target="_blank" rel="noopener noreferrer"&gt;realtime-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-lang" target="_blank" rel="noopener noreferrer"&gt;storage-lang&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  END ROW --&gt; 
  &lt;!-- /notranslate --&gt; 
  &lt;tr&gt;
   &lt;th colspan="7"&gt;⚡️ Official ⚡️&lt;/th&gt; 
   &lt;!-- notranslate --&gt; 
  &lt;/tr&gt;
  &lt;tr&gt; 
   &lt;td&gt;JavaScript (TypeScript)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-js" target="_blank" rel="noopener noreferrer"&gt;supabase-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/postgrest-js" target="_blank" rel="noopener noreferrer"&gt;postgrest-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/gotrue-js" target="_blank" rel="noopener noreferrer"&gt;gotrue-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/realtime-js" target="_blank" rel="noopener noreferrer"&gt;realtime-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/storage-js" target="_blank" rel="noopener noreferrer"&gt;storage-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/functions-js" target="_blank" rel="noopener noreferrer"&gt;functions-js&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Flutter&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-flutter" target="_blank" rel="noopener noreferrer"&gt;supabase-flutter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/postgrest-dart" target="_blank" rel="noopener noreferrer"&gt;postgrest-dart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/gotrue-dart" target="_blank" rel="noopener noreferrer"&gt;gotrue-dart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/realtime-dart" target="_blank" rel="noopener noreferrer"&gt;realtime-dart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/storage-dart" target="_blank" rel="noopener noreferrer"&gt;storage-dart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/functions-dart" target="_blank" rel="noopener noreferrer"&gt;functions-dart&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Swift&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift" target="_blank" rel="noopener noreferrer"&gt;supabase-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/PostgREST" target="_blank" rel="noopener noreferrer"&gt;postgrest-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/Auth" target="_blank" rel="noopener noreferrer"&gt;auth-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/Realtime" target="_blank" rel="noopener noreferrer"&gt;realtime-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/Storage" target="_blank" rel="noopener noreferrer"&gt;storage-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/Functions" target="_blank" rel="noopener noreferrer"&gt;functions-swift&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-py" target="_blank" rel="noopener noreferrer"&gt;supabase-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/postgrest-py" target="_blank" rel="noopener noreferrer"&gt;postgrest-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/gotrue-py" target="_blank" rel="noopener noreferrer"&gt;gotrue-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/realtime-py" target="_blank" rel="noopener noreferrer"&gt;realtime-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/storage-py" target="_blank" rel="noopener noreferrer"&gt;storage-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/functions-py" target="_blank" rel="noopener noreferrer"&gt;functions-py&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- /notranslate --&gt; 
  &lt;tr&gt;
   &lt;th colspan="7"&gt;💚 Community 💚&lt;/th&gt; 
   &lt;!-- notranslate --&gt; 
  &lt;/tr&gt;
  &lt;tr&gt; 
   &lt;td&gt;C#&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-csharp" target="_blank" rel="noopener noreferrer"&gt;supabase-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-csharp" target="_blank" rel="noopener noreferrer"&gt;postgrest-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-csharp" target="_blank" rel="noopener noreferrer"&gt;gotrue-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/realtime-csharp" target="_blank" rel="noopener noreferrer"&gt;realtime-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-csharp" target="_blank" rel="noopener noreferrer"&gt;storage-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/functions-csharp" target="_blank" rel="noopener noreferrer"&gt;functions-csharp&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-go" target="_blank" rel="noopener noreferrer"&gt;postgrest-go&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-go" target="_blank" rel="noopener noreferrer"&gt;gotrue-go&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-go" target="_blank" rel="noopener noreferrer"&gt;storage-go&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/functions-go" target="_blank" rel="noopener noreferrer"&gt;functions-go&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Java&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-java" target="_blank" rel="noopener noreferrer"&gt;gotrue-java&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-java" target="_blank" rel="noopener noreferrer"&gt;storage-java&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kotlin&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt" target="_blank" rel="noopener noreferrer"&gt;supabase-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Postgrest" target="_blank" rel="noopener noreferrer"&gt;postgrest-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Auth" target="_blank" rel="noopener noreferrer"&gt;auth-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Realtime" target="_blank" rel="noopener noreferrer"&gt;realtime-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Storage" target="_blank" rel="noopener noreferrer"&gt;storage-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Functions" target="_blank" rel="noopener noreferrer"&gt;functions-kt&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ruby&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-rb" target="_blank" rel="noopener noreferrer"&gt;supabase-rb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-rb" target="_blank" rel="noopener noreferrer"&gt;postgrest-rb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rust&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-rs" target="_blank" rel="noopener noreferrer"&gt;postgrest-rs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Godot Engine (GDScript)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/godot-engine.supabase" target="_blank" rel="noopener noreferrer"&gt;supabase-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-gdscript" target="_blank" rel="noopener noreferrer"&gt;postgrest-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-gdscript" target="_blank" rel="noopener noreferrer"&gt;gotrue-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/realtime-gdscript" target="_blank" rel="noopener noreferrer"&gt;realtime-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-gdscript" target="_blank" rel="noopener noreferrer"&gt;storage-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/functions-gdscript" target="_blank" rel="noopener noreferrer"&gt;functions-gdscript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- /notranslate --&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- Remove this list if you're translating to another language, it's hard to keep updated across multiple files--&gt; 
&lt;!-- Keep only the link to the list of translation files--&gt; 
&lt;h2&gt;Badges&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/master/apps/www/public/badge-made-with-supabase.svg?sanitize=true" alt="Made with Supabase" /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Made with Supabase](https://supabase.com/badge-made-with-supabase.svg)](https://supabase.com)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://supabase.com"&amp;gt;
  &amp;lt;img
    width="168"
    height="30"
    src="https://supabase.com/badge-made-with-supabase.svg"
    alt="Made with Supabase"
  /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/master/apps/www/public/badge-made-with-supabase-dark.svg?sanitize=true" alt="Made with Supabase (dark)" /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Made with Supabase](https://supabase.com/badge-made-with-supabase-dark.svg)](https://supabase.com)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://supabase.com"&amp;gt;
  &amp;lt;img
    width="168"
    height="30"
    src="https://supabase.com/badge-made-with-supabase-dark.svg"
    alt="Made with Supabase"
  /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ar.md"&gt;Arabic | العربية&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sq.md"&gt;Albanian / Shqip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.bn.md"&gt;Bangla / বাংলা&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.bg.md"&gt;Bulgarian / Български&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ca.md"&gt;Catalan / Català&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.hr.md"&gt;Croatian / Hrvatski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.cs.md"&gt;Czech / čeština&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.da.md"&gt;Danish / Dansk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.nl.md"&gt;Dutch / Nederlands&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/supabase"&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.et.md"&gt;Estonian / eesti keel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.fi.md"&gt;Finnish / Suomalainen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.fr.md"&gt;French / Français&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.de.md"&gt;German / Deutsch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.el.md"&gt;Greek / Ελληνικά&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.gu.md"&gt;Gujarati / ગુજરાતી&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.he.md"&gt;Hebrew / עברית&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.hi.md"&gt;Hindi / हिंदी&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.hu.md"&gt;Hungarian / Magyar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ne.md"&gt;Nepali / नेपाली&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.id.md"&gt;Indonesian / Bahasa Indonesia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.it.md"&gt;Italiano / Italian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.jp.md"&gt;Japanese / 日本語&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ko.md"&gt;Korean / 한국어&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.lt.md"&gt;Lithuanian / lietuvių&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.lv.md"&gt;Latvian / latviski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ms.md"&gt;Malay / Bahasa Malaysia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.nb.md"&gt;Norwegian (Bokmål) / Norsk (Bokmål)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.fa.md"&gt;Persian / فارسی&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.pl.md"&gt;Polish / Polski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.pt.md"&gt;Portuguese / Português&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.pt-br.md"&gt;Portuguese (Brazilian) / Português Brasileiro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ro.md"&gt;Romanian / Română&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ru.md"&gt;Russian / Pусский&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sr.md"&gt;Serbian / Srpski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.si.md"&gt;Sinhala / සිංහල&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sk.md"&gt;Slovak / slovenský&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sl.md"&gt;Slovenian / Slovenščina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.es.md"&gt;Spanish / Español&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.zh-cn.md"&gt;Simplified Chinese / 简体中文&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sv.md"&gt;Swedish / Svenska&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.th.md"&gt;Thai / ไทย&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.zh-tw.md"&gt;Traditional Chinese / 繁體中文&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.tr.md"&gt;Turkish / Türkçe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.uk.md"&gt;Ukrainian / Українська&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.vi-vn.md"&gt;Vietnamese / Tiếng Việt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/languages.md"&gt;List of translations&lt;/a&gt; 
  &lt;!-- Keep only this --&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ruvnet/claude-flow</title>
      <link>https://github.com/ruvnet/claude-flow</link>
      <description>&lt;p&gt;🌊 The leading agent orchestration platform for Claude. Deploy intelligent multi-agent swarms, coordinate autonomous workflows, and build conversational AI systems. Features enterprise-grade architecture, distributed swarm intelligence, RAG integration, and native Claude Code support via MCP protocol. Ranked #1 in agent-based frameworks.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🌊 Claude-Flow v2.0.0 Alpha: AI Orchestration Platform&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/github/stars/ruvnet/claude-flow?style=for-the-badge&amp;amp;logo=github&amp;amp;color=gold" alt="🌟 Star on GitHub" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow"&gt;&lt;img src="https://img.shields.io/npm/dt/claude-flow?style=for-the-badge&amp;amp;logo=npm&amp;amp;color=blue&amp;amp;label=Downloads" alt="📈 Downloads" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow"&gt;&lt;img src="https://img.shields.io/npm/v/claude-flow?style=for-the-badge&amp;amp;logo=npm&amp;amp;color=green&amp;amp;label=v2.0.0" alt="📦 Latest Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Claude%20Code-Optimized-green?style=for-the-badge&amp;amp;logo=anthropic" alt="⚡ Claude Code" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/dfxmpwkG2D"&gt;&lt;img src="https://img.shields.io/badge/Agentics-Foundation-crimson?style=for-the-badge&amp;amp;logo=openai" alt="🏛️ Agentics Foundation" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Hive--Mind-AI%20Coordination-purple?style=for-the-badge&amp;amp;logo=swarm" alt="🐝 Hive-Mind" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Neural-87%20MCP%20Tools-blue?style=for-the-badge&amp;amp;logo=pytorch" alt="🧠 Neural" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow?style=for-the-badge&amp;amp;logo=opensourceinitiative" alt="🛡️ MIT License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🌟 &lt;strong&gt;Overview&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Claude-Flow v2 Alpha&lt;/strong&gt; is an enterprise-grade AI orchestration platform that reimagines how developers build with AI. By combining &lt;strong&gt;hive-mind swarm intelligence&lt;/strong&gt;, &lt;strong&gt;neural pattern recognition&lt;/strong&gt;, and &lt;strong&gt;87 advanced MCP tools&lt;/strong&gt;, Claude-Flow enables unprecedented AI-powered development workflows.&lt;/p&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Key Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🐝 Hive-Mind Intelligence&lt;/strong&gt;: Queen-led AI coordination with specialized worker agents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🧠 Neural Networks&lt;/strong&gt;: 27+ cognitive models with WASM SIMD acceleration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔧 87 MCP Tools&lt;/strong&gt;: Comprehensive toolkit for swarm orchestration, memory, and automation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 Dynamic Agent Architecture (DAA)&lt;/strong&gt;: Self-organizing agents with fault tolerance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💾 SQLite Memory System&lt;/strong&gt;: Persistent &lt;code&gt;.swarm/memory.db&lt;/code&gt; with 12 specialized tables&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🪝 Advanced Hooks System&lt;/strong&gt;: Automated workflows with pre/post operation hooks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 GitHub Integration&lt;/strong&gt;: 6 specialized modes for repository management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 Flow Nexus Cloud Platform&lt;/strong&gt;: E2B sandboxes, AI swarms, challenges, and marketplace integration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🔥 &lt;strong&gt;Revolutionary AI Coordination&lt;/strong&gt;: Build faster, smarter, and more efficiently with AI-powered development orchestration&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🌐 &lt;strong&gt;Flow Nexus Cloud Platform&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NEW&lt;/strong&gt;: Claude-Flow v2.0.0 now includes &lt;strong&gt;Flow Nexus integration&lt;/strong&gt; - a cloud-powered AI development platform featuring:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;E2B Sandboxes&lt;/strong&gt;: Secure isolated environments for Node.js, Python, React, Next.js&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Swarms&lt;/strong&gt;: Deploy multi-agent systems in cloud infrastructure&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural Training&lt;/strong&gt;: Distributed machine learning with custom model deployment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Challenges &amp;amp; Marketplace&lt;/strong&gt;: Coding challenges with rUv credit rewards and template marketplace&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workflow Automation&lt;/strong&gt;: Event-driven automation with message queue processing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 &lt;strong&gt;Complete documentation&lt;/strong&gt;: Visit &lt;a href="https://flow-nexus.ruv.io"&gt;flow-nexus.ruv.io&lt;/a&gt; for comprehensive guides, tutorials, and API reference. Also see issue # &lt;a href="https://github.com/ruvnet/claude-flow/issues/732"&gt;https://github.com/ruvnet/claude-flow/issues/732&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;⚡ &lt;strong&gt;Try v2.0.0 Alpha in 4 Commands&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;📋 &lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js 18+&lt;/strong&gt; (LTS recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;npm 9+&lt;/strong&gt; or equivalent package manager&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows users&lt;/strong&gt;: See &lt;a href="https://github.com/ruvnet/claude-code-flow/raw/main/docs/windows-installation.md"&gt;Windows Installation Guide&lt;/a&gt; for special instructions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;⚠️ &lt;strong&gt;IMPORTANT&lt;/strong&gt;: Claude Code must be installed first:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Install Claude Code globally
npm install -g @anthropic-ai/claude-code

# 2. (Optional) Skip permissions check for faster setup
# Only use if you understand the security implications
claude --dangerously-skip-permissions
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;💡 &lt;strong&gt;Windows Note&lt;/strong&gt;: If you encounter SQLite errors, Claude Flow will automatically use in-memory storage. For persistent storage options, see our &lt;a href="https://github.com/ruvnet/claude-code-flow/raw/main/docs/windows-installation.md"&gt;Windows guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Instant Alpha Testing&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Initialize Claude Flow with enhanced MCP setup (auto-configures permissions!)
npx claude-flow@alpha init --force

# 2. Explore all revolutionary capabilities  
npx claude-flow@alpha --help

# 3a. Quick AI coordination (recommended for most tasks)
npx claude-flow@alpha swarm "build me a REST API" --claude

# 3b. OR launch the full hive-mind system (for complex projects)
npx claude-flow@alpha hive-mind wizard
npx claude-flow@alpha hive-mind spawn "build enterprise system" --claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🚀 &lt;strong&gt;Quick Start with Flow Nexus&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Initialize Flow Nexus only (minimal setup)
npx claude-flow init --flow-nexus

# 2. Register and login (use MCP tools in Claude Code)
mcp__flow-nexus__user_register({ email: "your@email.com", password: "secure" })
mcp__flow-nexus__user_login({ email: "your@email.com", password: "secure" })

# 3. Deploy your first cloud swarm
mcp__flow-nexus__swarm_init({ topology: "mesh", maxAgents: 5 })
mcp__flow-nexus__sandbox_create({ template: "node", name: "api-dev" })
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🤔 &lt;strong&gt;Swarm vs Hive-Mind: Which to Use?&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;swarm&lt;/code&gt; Command&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;hive-mind&lt;/code&gt; Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Best For&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Quick tasks, single objectives&lt;/td&gt; 
   &lt;td&gt;Complex projects, persistent sessions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Setup&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Instant - no configuration needed&lt;/td&gt; 
   &lt;td&gt;Interactive wizard setup&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Session&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Temporary coordination&lt;/td&gt; 
   &lt;td&gt;Persistent with resume capability&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Memory&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Task-scoped&lt;/td&gt; 
   &lt;td&gt;Project-wide with SQLite storage&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Agents&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Auto-spawned for task&lt;/td&gt; 
   &lt;td&gt;Manual control with specializations&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Use When&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;"Build X", "Fix Y", "Analyze Z"&lt;/td&gt; 
   &lt;td&gt;Multi-feature projects, team coordination&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Quick Rule:&lt;/strong&gt; Start with &lt;code&gt;swarm&lt;/code&gt; for most tasks. Use &lt;code&gt;hive-mind&lt;/code&gt; when you need persistent sessions or complex multi-agent coordination.&lt;/p&gt; 
&lt;h2&gt;🎯 &lt;strong&gt;Typical Workflows - Your "Happy Path" Guide&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;New to Claude-Flow? Start Here!&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Confused about &lt;code&gt;.hive-mind&lt;/code&gt; and &lt;code&gt;.swarm&lt;/code&gt; directories? Not sure when to create new hives? Here are the most common workflow patterns:&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;🚀 Pattern 1: Single Feature Development&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Initialize once per feature/task
npx claude-flow@alpha init --force
npx claude-flow@alpha hive-mind spawn "Implement user authentication" --claude

# Continue working on SAME feature (reuse existing hive)
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha memory query "authentication" --recent
npx claude-flow@alpha swarm "Add password reset functionality" --continue-session
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;🏗️ Pattern 2: Multi-Feature Project&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Project-level initialization (once per project)
npx claude-flow@alpha init --force --project-name "my-app"

# Feature 1: Authentication (new hive)
npx claude-flow@alpha hive-mind spawn "auth-system" --namespace auth --claude

# Feature 2: User management (separate hive)  
npx claude-flow@alpha hive-mind spawn "user-management" --namespace users --claude

# Resume Feature 1 later (use session ID from spawn output)
npx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;🔍 Pattern 3: Research &amp;amp; Analysis&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start research session
npx claude-flow@alpha hive-mind spawn "Research microservices patterns" --agents researcher,analyst --claude

# Continue research in SAME session
npx claude-flow@alpha memory stats  # See what's been learned
npx claude-flow@alpha swarm "Deep dive into API gateway patterns" --continue-session
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🤔 When Should I Create a New Hive?&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Situation&lt;/th&gt; 
   &lt;th&gt;Action&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Same objective/feature&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Continue existing hive&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind resume &amp;lt;session-id&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;New feature in same project&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Create new hive with namespace&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind spawn "new-feature" --namespace feature-name&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Completely different project&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;New directory + init&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;mkdir new-project &amp;amp;&amp;amp; cd new-project &amp;amp;&amp;amp; npx claude-flow@alpha init&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Experimenting/testing&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Temporary hive&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind spawn "experiment" --temp&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;strong&gt;📁 Understanding "Empty" Directories&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Don't panic if directories seem empty!&lt;/strong&gt; Claude-Flow uses SQLite databases that may not show files in directory listings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Check what's actually stored (even if directories look empty)
npx claude-flow@alpha memory stats        # See memory data
npx claude-flow@alpha memory list         # List all namespaces  
npx claude-flow@alpha hive-mind status    # See active hives

# Your project structure after initialization:
# .hive-mind/     &amp;lt;- Contains config.json + SQLite session data
# .swarm/         &amp;lt;- Contains memory.db (SQLite database)
# memory/         &amp;lt;- Agent-specific memories (created when agents spawn)
# coordination/   &amp;lt;- Active workflow files (created during tasks)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🔄 Continuing Previous Work&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# See what you were working on
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha memory query --recent --limit 5

# List all sessions to find the one you want
npx claude-flow@alpha hive-mind sessions

# Resume specific session by ID
npx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🪝 &lt;strong&gt;Advanced Hooks System&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Automated Workflow Enhancement&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Claude-Flow v2.0.0 introduces a powerful hooks system that automates coordination and enhances every operation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Hooks automatically trigger on operations
npx claude-flow@alpha init --force  # Auto-configures MCP servers &amp;amp; hooks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Available Hooks&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;Pre-Operation Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-task&lt;/code&gt;&lt;/strong&gt;: Auto-assigns agents based on task complexity&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-search&lt;/code&gt;&lt;/strong&gt;: Caches searches for improved performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-edit&lt;/code&gt;&lt;/strong&gt;: Validates files and prepares resources&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-command&lt;/code&gt;&lt;/strong&gt;: Security validation before execution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Post-Operation Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-edit&lt;/code&gt;&lt;/strong&gt;: Auto-formats code using language-specific tools&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-task&lt;/code&gt;&lt;/strong&gt;: Trains neural patterns from successful operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-command&lt;/code&gt;&lt;/strong&gt;: Updates memory with operation context&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;notification&lt;/code&gt;&lt;/strong&gt;: Real-time progress updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Session Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-start&lt;/code&gt;&lt;/strong&gt;: Restores previous context automatically&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-end&lt;/code&gt;&lt;/strong&gt;: Generates summaries and persists state&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-restore&lt;/code&gt;&lt;/strong&gt;: Loads memory from previous sessions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Hook Configuration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;// .claude/settings.json (auto-configured)
{
  "hooks": {
    "preEditHook": {
      "command": "npx",
      "args": ["claude-flow", "hooks", "pre-edit", "--file", "${file}", "--auto-assign-agents", "true"],
      "alwaysRun": false
    },
    "postEditHook": {
      "command": "npx", 
      "args": ["claude-flow", "hooks", "post-edit", "--file", "${file}", "--format", "true"],
      "alwaysRun": true
    },
    "sessionEndHook": {
      "command": "npx",
      "args": ["claude-flow", "hooks", "session-end", "--generate-summary", "true"],
      "alwaysRun": true
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Using Hooks in Claude Code&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Hooks integrate seamlessly with Claude Code's workflow:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic Triggering&lt;/strong&gt;: Hooks fire automatically during Claude Code operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Context Awareness&lt;/strong&gt;: Each hook receives relevant context (file paths, commands, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Non-Blocking&lt;/strong&gt;: Hooks run asynchronously to maintain performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable&lt;/strong&gt;: Enable/disable specific hooks as needed&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;strong&gt;Hook Examples&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Manual hook execution
npx claude-flow hooks pre-task --description "Build REST API" --auto-spawn-agents

# Post-edit with formatting
npx claude-flow hooks post-edit --file "src/api.js" --format --train-neural

# Session management
npx claude-flow hooks session-end --generate-summary --persist-state
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Fixing Hook Variable Interpolation&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;If you're experiencing issues with &lt;code&gt;${file}&lt;/code&gt; or &lt;code&gt;${command}&lt;/code&gt; variables not working in your hooks (common with Claude Code 1.0.51+), use the &lt;code&gt;fix-hook-variables&lt;/code&gt; command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Fix all found settings.json files
npx claude-flow@alpha fix-hook-variables

# Fix specific file
npx claude-flow@alpha fix-hook-variables .claude/settings.json

# Create test configuration
npx claude-flow@alpha fix-hook-variables --test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command automatically transforms legacy variable syntax to working environment variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;${file}&lt;/code&gt; → &lt;code&gt;$CLAUDE_EDITED_FILE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;${command}&lt;/code&gt; → &lt;code&gt;$CLAUDE_COMMAND&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;${tool}&lt;/code&gt; → &lt;code&gt;$CLAUDE_TOOL&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🐝 &lt;strong&gt;Revolutionary Hive-Mind Intelligence&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Queen-Led AI Coordination&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Claude-Flow v2.0.0 introduces groundbreaking hive-mind architecture where a &lt;strong&gt;Queen AI&lt;/strong&gt; coordinates specialized worker agents in perfect harmony.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Deploy intelligent swarm coordination
npx claude-flow@alpha swarm "Build a full-stack application" --strategy development

# Launch hive-mind with specific specializations
npx claude-flow@alpha hive-mind spawn "Create microservices architecture" --agents 8 --claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🤖 Intelligent Agent Types&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;👑 Queen Agent&lt;/strong&gt;: Master coordinator and decision maker&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🏗️ Architect Agents&lt;/strong&gt;: System design and technical architecture&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💻 Coder Agents&lt;/strong&gt;: Implementation and development&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🧪 Tester Agents&lt;/strong&gt;: Quality assurance and validation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 Analyst Agents&lt;/strong&gt;: Data analysis and insights&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔍 Researcher Agents&lt;/strong&gt;: Information gathering and analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛡️ Security Agents&lt;/strong&gt;: Security auditing and compliance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 DevOps Agents&lt;/strong&gt;: Deployment and infrastructure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⚡ &lt;strong&gt;87 Advanced MCP Tools&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🧠 Neural &amp;amp; Cognitive Tools&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Neural pattern recognition and training
npx claude-flow@alpha neural train --pattern coordination --epochs 50
npx claude-flow@alpha neural predict --model cognitive-analysis
npx claude-flow@alpha cognitive analyze --behavior "development workflow"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;💾 SQLite Memory Systems&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Cross-session memory management with SQLite persistence
npx claude-flow@alpha memory store "project-context" "Full-stack app requirements"
npx claude-flow@alpha memory query "authentication" --namespace sparc
npx claude-flow@alpha memory stats  # Shows 12 specialized tables
npx claude-flow@alpha memory export backup.json --namespace default
npx claude-flow@alpha memory import project-memory.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🪟 &lt;strong&gt;Windows Users&lt;/strong&gt;: SQLite will automatically fallback to in-memory storage if native modules fail. All features work normally, but data won't persist between sessions. See &lt;a href="https://github.com/ruvnet/claude-code-flow/raw/main/docs/windows-installation.md"&gt;Windows guide&lt;/a&gt; for persistent storage options.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;strong&gt;🔄 Workflow Orchestration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Advanced workflow automation
npx claude-flow@alpha workflow create --name "CI/CD Pipeline" --parallel
npx claude-flow@alpha batch process --items "test,build,deploy" --concurrent
npx claude-flow@alpha pipeline create --config advanced-deployment.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🧠 &lt;strong&gt;Neural Network Capabilities&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Cognitive Computing Engine&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Powered by 27+ neural models optimized with WASM SIMD acceleration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Train coordination patterns
npx claude-flow@alpha neural train --pattern coordination --data "workflow.json"

# Real-time predictions
npx claude-flow@alpha neural predict --model task-optimizer --input "current-state.json"

# Analyze cognitive behavior
npx claude-flow@alpha cognitive analyze --behavior "development-patterns"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Neural Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Pattern Recognition&lt;/strong&gt;: Learns from successful operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Adaptive Learning&lt;/strong&gt;: Improves performance over time&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Transfer Learning&lt;/strong&gt;: Apply knowledge across domains&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Compression&lt;/strong&gt;: Efficient storage and execution&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ensemble Models&lt;/strong&gt;: Combine multiple neural networks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Explainable AI&lt;/strong&gt;: Understand decision-making process&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔧 &lt;strong&gt;DAA MCP Endpoints&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Dynamic Agent Architecture&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Complete programmatic control over agent lifecycle and coordination:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Create specialized agents
npx claude-flow@alpha daa agent-create --type "specialized-researcher" \
  --capabilities "[\"deep-analysis\", \"pattern-recognition\"]" \
  --resources "{\"memory\": 2048, \"compute\": \"high\"}"

# Match capabilities to tasks
npx claude-flow@alpha daa capability-match \
  --task-requirements "[\"security-analysis\", \"performance-optimization\"]"

# Manage agent lifecycle
npx claude-flow@alpha daa lifecycle-manage --agentId "agent-123" --action "scale-up"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;DAA Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Resource Allocation&lt;/strong&gt;: Dynamic CPU/memory management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Inter-Agent Communication&lt;/strong&gt;: Message passing and coordination&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Consensus Mechanisms&lt;/strong&gt;: Democratic decision making&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fault Tolerance&lt;/strong&gt;: Self-healing with automatic recovery&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Optimization&lt;/strong&gt;: Real-time bottleneck resolution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;MCP Tool Categories&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;🐝 Swarm Orchestration&lt;/strong&gt; (15 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;swarm_init&lt;/code&gt;, &lt;code&gt;agent_spawn&lt;/code&gt;, &lt;code&gt;task_orchestrate&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;swarm_monitor&lt;/code&gt;, &lt;code&gt;topology_optimize&lt;/code&gt;, &lt;code&gt;load_balance&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;coordination_sync&lt;/code&gt;, &lt;code&gt;swarm_scale&lt;/code&gt;, &lt;code&gt;swarm_destroy&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;🧠 Neural &amp;amp; Cognitive&lt;/strong&gt; (12 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;neural_train&lt;/code&gt;, &lt;code&gt;neural_predict&lt;/code&gt;, &lt;code&gt;pattern_recognize&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cognitive_analyze&lt;/code&gt;, &lt;code&gt;learning_adapt&lt;/code&gt;, &lt;code&gt;neural_compress&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ensemble_create&lt;/code&gt;, &lt;code&gt;transfer_learn&lt;/code&gt;, &lt;code&gt;neural_explain&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;💾 Memory Management&lt;/strong&gt; (10 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;memory_usage&lt;/code&gt;, &lt;code&gt;memory_search&lt;/code&gt;, &lt;code&gt;memory_persist&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;memory_namespace&lt;/code&gt;, &lt;code&gt;memory_backup&lt;/code&gt;, &lt;code&gt;memory_restore&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;memory_compress&lt;/code&gt;, &lt;code&gt;memory_sync&lt;/code&gt;, &lt;code&gt;memory_analytics&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SQLite Backend&lt;/strong&gt;: Persistent &lt;code&gt;.swarm/memory.db&lt;/code&gt; with 12 specialized tables&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;📊 Performance &amp;amp; Monitoring&lt;/strong&gt; (10 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;performance_report&lt;/code&gt;, &lt;code&gt;bottleneck_analyze&lt;/code&gt;, &lt;code&gt;token_usage&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;benchmark_run&lt;/code&gt;, &lt;code&gt;metrics_collect&lt;/code&gt;, &lt;code&gt;trend_analysis&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;health_check&lt;/code&gt;, &lt;code&gt;diagnostic_run&lt;/code&gt;, &lt;code&gt;usage_stats&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;🔄 Workflow Automation&lt;/strong&gt; (10 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;workflow_create&lt;/code&gt;, &lt;code&gt;workflow_execute&lt;/code&gt;, &lt;code&gt;workflow_export&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;automation_setup&lt;/code&gt;, &lt;code&gt;pipeline_create&lt;/code&gt;, &lt;code&gt;scheduler_manage&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;trigger_setup&lt;/code&gt;, &lt;code&gt;batch_process&lt;/code&gt;, &lt;code&gt;parallel_execute&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;📦 GitHub Integration&lt;/strong&gt; (6 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;github_repo_analyze&lt;/code&gt;, &lt;code&gt;github_pr_manage&lt;/code&gt;, &lt;code&gt;github_issue_track&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;github_release_coord&lt;/code&gt;, &lt;code&gt;github_workflow_auto&lt;/code&gt;, &lt;code&gt;github_code_review&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;🤖 Dynamic Agents&lt;/strong&gt; (6 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;daa_agent_create&lt;/code&gt;, &lt;code&gt;daa_capability_match&lt;/code&gt;, &lt;code&gt;daa_resource_alloc&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;daa_lifecycle_manage&lt;/code&gt;, &lt;code&gt;daa_communication&lt;/code&gt;, &lt;code&gt;daa_consensus&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;🛡️ System &amp;amp; Security&lt;/strong&gt; (8 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;security_scan&lt;/code&gt;, &lt;code&gt;backup_create&lt;/code&gt;, &lt;code&gt;restore_system&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;config_manage&lt;/code&gt;, &lt;code&gt;features_detect&lt;/code&gt;, &lt;code&gt;log_analysis&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;📊 GitHub Integration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# GitHub workflow orchestration and coordination
npx claude-flow@alpha github gh-coordinator analyze --analysis-type security
npx claude-flow@alpha github pr-manager review --multi-reviewer --ai-powered
npx claude-flow@alpha github release-manager coord --version 2.0.0 --auto-changelog
npx claude-flow@alpha github repo-architect optimize --structure-analysis
npx claude-flow@alpha github issue-tracker manage --project-coordination
npx claude-flow@alpha github sync-coordinator align --multi-package
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛡️ &lt;strong&gt;Seamless Claude Code Integration&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Auto-MCP Server Setup&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;v2.0.0 Alpha automatically configures MCP servers for seamless Claude Code integration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Automatic MCP integration (happens during init)
✅ claude-flow MCP server configured
✅ ruv-swarm MCP server configured  
✅ 87 tools available in Claude Code
✅ --dangerously-skip-permissions set as default
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Enhanced SPARC Workflows&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Advanced SPARC development with neural enhancement
npx claude-flow@alpha sparc mode --type "neural-tdd" --auto-learn
npx claude-flow@alpha sparc workflow --phases "all" --ai-guided --memory-enhanced
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🧠 &lt;strong&gt;Cognitive Computing Features&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🎯 Neural Pattern Recognition&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;27+ Cognitive Models&lt;/strong&gt;: Adaptive learning from successful operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pattern Analysis&lt;/strong&gt;: Real-time behavior analysis and optimization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Decision Tracking&lt;/strong&gt;: Complete audit trail of AI decisions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Learning&lt;/strong&gt;: Continuous improvement from past executions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;🔄 Self-Healing Systems&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Automatic error recovery and optimization
npx claude-flow@alpha health check --components all --auto-heal
npx claude-flow@alpha fault tolerance --strategy retry-with-learning
npx claude-flow@alpha bottleneck analyze --auto-optimize
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;💾 Advanced Memory Architecture&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SQLite Persistence&lt;/strong&gt;: Robust &lt;code&gt;.swarm/memory.db&lt;/code&gt; storage with 12 specialized tables&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cross-Session Persistence&lt;/strong&gt;: Remember context across Claude Code sessions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Namespace Management&lt;/strong&gt;: Organized memory with hierarchical access&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced Schema&lt;/strong&gt;: Agent interactions, training data, performance metrics, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory Compression&lt;/strong&gt;: Efficient storage of large coordination contexts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Distributed Sync&lt;/strong&gt;: Share memory across multiple AI instances&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📊 &lt;strong&gt;Performance Metrics&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🏆 Industry-Leading Results&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;✅ 84.8% SWE-Bench Solve Rate&lt;/strong&gt;: Superior problem-solving through hive-mind coordination&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ 32.3% Token Reduction&lt;/strong&gt;: Efficient task breakdown reduces costs significantly&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ 2.8-4.4x Speed Improvement&lt;/strong&gt;: Parallel coordination maximizes throughput&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ 87 MCP Tools&lt;/strong&gt;: Most comprehensive AI tool suite available&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ Zero-Config Setup&lt;/strong&gt;: Automatic MCP integration with Claude Code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;🚀 Available Capabilities&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Check memory system performance
npx claude-flow@alpha memory stats
npx claude-flow@alpha memory list

# Test GitHub coordination modes
npx claude-flow@alpha github gh-coordinator --help
npx claude-flow@alpha github pr-manager --help

# Workflow orchestration
npx claude-flow@alpha workflow create --name "Development Pipeline" --parallel
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎮 &lt;strong&gt;Advanced Usage Examples&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🏗️ Full-Stack Development&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Deploy complete development swarm
npx claude-flow@alpha hive-mind spawn "Build e-commerce platform with React, Node.js, and PostgreSQL" \
  --agents 10 \
  --strategy parallel \
  --memory-namespace ecommerce

# Monitor progress in real-time
npx claude-flow@alpha swarm monitor --dashboard --real-time
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🔬 Research &amp;amp; Analysis&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Deploy research swarm with neural enhancement
npx claude-flow@alpha swarm "Research AI safety in autonomous systems" \
  --strategy research \
  --neural-patterns enabled \
  --memory-compression high

# Analyze results with cognitive computing
npx claude-flow@alpha cognitive analyze --target research-results
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🛡️ Security &amp;amp; Compliance&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Automated security analysis with AI coordination
npx claude-flow@alpha github gh-coordinator analyze --analysis-type security --target ./src
npx claude-flow@alpha github repo-architect optimize --security-focused --compliance SOC2
npx claude-flow@alpha hive-mind spawn "security audit and compliance review" --claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🏗️ &lt;strong&gt;Alpha Architecture Overview&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🐝 Hive-Mind Coordination Layer&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;┌─────────────────────────────────────────────────────────┐
│                    👑 Queen Agent                       │
│              (Master Coordinator)                      │
├─────────────────────────────────────────────────────────┤
│  🏗️ Architect │ 💻 Coder │ 🧪 Tester │ 🔍 Research │ 🛡️ Security │
│      Agent    │   Agent  │   Agent   │    Agent    │    Agent    │
├─────────────────────────────────────────────────────────┤
│           🧠 Neural Pattern Recognition Layer           │
├─────────────────────────────────────────────────────────┤
│              💾 Distributed Memory System               │
├─────────────────────────────────────────────────────────┤
│            ⚡ 87 MCP Tools Integration Layer            │
├─────────────────────────────────────────────────────────┤
│              🛡️ Claude Code Integration                 │
└─────────────────────────────────────────────────────────┘
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🔄 Coordination Strategies&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Hierarchical&lt;/strong&gt;: Queen-led with specialized worker agents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mesh&lt;/strong&gt;: Peer-to-peer coordination for complex tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hybrid&lt;/strong&gt;: Dynamic strategy selection based on task complexity&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural-Enhanced&lt;/strong&gt;: AI-optimized coordination patterns&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛠️ &lt;strong&gt;Alpha Installation &amp;amp; Setup&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🚀 Quick Alpha Installation&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Global installation (recommended for testing)
npm install -g claude-flow@alpha

# Or use NPX for instant testing
npx claude-flow@alpha init --force

# Verify installation
claude-flow --version  # Should show 2.0.0-alpha.53
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🔧 Enhanced Configuration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Initialize with full alpha features
npx claude-flow@alpha init --force --hive-mind --neural-enhanced

# Configure Claude Code integration
npx claude-flow@alpha mcp setup --auto-permissions --87-tools

# Test hive-mind coordination
npx claude-flow@alpha hive-mind test --agents 5 --coordination-test
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📋 &lt;strong&gt;Alpha Command Reference&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;For complete command documentation, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx claude-flow@alpha --help          # Main help
npx claude-flow@alpha help &amp;lt;command&amp;gt;  # Detailed command help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key Commands:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Hive-Mind&lt;/strong&gt;: &lt;code&gt;hive-mind wizard&lt;/code&gt;, &lt;code&gt;hive-mind spawn&lt;/code&gt;, &lt;code&gt;hive-mind status&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural&lt;/strong&gt;: &lt;code&gt;neural train&lt;/code&gt;, &lt;code&gt;neural predict&lt;/code&gt;, &lt;code&gt;cognitive analyze&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: &lt;code&gt;memory store&lt;/code&gt;, &lt;code&gt;memory query&lt;/code&gt;, &lt;code&gt;memory stats&lt;/code&gt;, &lt;code&gt;memory export/import&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub&lt;/strong&gt;: &lt;code&gt;github &amp;lt;mode&amp;gt;&lt;/code&gt; (6 specialized modes available)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workflows&lt;/strong&gt;: &lt;code&gt;workflow create&lt;/code&gt;, &lt;code&gt;batch process&lt;/code&gt;, &lt;code&gt;pipeline create&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📚 &lt;strong&gt;Additional Documentation&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Core Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/API.md"&gt;Complete API Reference&lt;/a&gt; - Comprehensive API documentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/CLI.md"&gt;CLI Commands Guide&lt;/a&gt; - All command-line options&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/ARCHITECTURE.md"&gt;Architecture Overview&lt;/a&gt; - System design and internals&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/examples/"&gt;Examples Directory&lt;/a&gt; - Code examples and demos&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;New Features (v2.0.0)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/GIT_CHECKPOINT_HOOKS.md"&gt;🔒 Git Checkpoint System&lt;/a&gt; - Automatic Git checkpoints for Claude Code sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/REAL_PERFORMANCE_TRACKING.md"&gt;📊 Real Performance Tracking&lt;/a&gt; - Actual metrics collection and analysis&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/windows-installation.md"&gt;🪟 Windows Installation&lt;/a&gt; - Special instructions for Windows users&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Integration Guides&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/mcp-setup.md"&gt;MCP Server Setup&lt;/a&gt; - Model Context Protocol configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/claude-code-integration.md"&gt;Claude Code Integration&lt;/a&gt; - Enhanced AI workflows&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/github-workflows.md"&gt;GitHub Workflows&lt;/a&gt; - Repository automation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📄 &lt;strong&gt;License&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;MIT License - see &lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Alpha Disclaimer&lt;/strong&gt;: This is an alpha release intended for testing and feedback. Use in production environments is not recommended.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎉 &lt;strong&gt;Alpha Credits&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🧠 Hive-Mind Architecture&lt;/strong&gt;: Inspired by natural swarm intelligence&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Neural Computing&lt;/strong&gt;: Advanced AI coordination patterns&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛡️ Claude Code Integration&lt;/strong&gt;: Seamless AI development workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 Performance Optimization&lt;/strong&gt;: 2.8-4.4x speed improvements through parallel coordination&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;&lt;strong&gt;🚀 Ready to experience the future of AI development?&lt;/strong&gt;&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;npx claude-flow@alpha init --force
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Join the alpha testing revolution!&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/ruvnet/claude-flow/tree/claude-flow-v2.0.0"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Alpha%20Branch-blue?style=for-the-badge&amp;amp;logo=github" alt="GitHub" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow/v/alpha"&gt;&lt;img src="https://img.shields.io/badge/NPM-Alpha%20Release-orange?style=for-the-badge&amp;amp;logo=npm" alt="NPM Alpha" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/dfxmpwkG2D"&gt;&lt;img src="https://img.shields.io/badge/Discord-Agentics%20Community-purple?style=for-the-badge&amp;amp;logo=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;h2&gt;Star History&lt;/h2&gt; 
 &lt;a href="https://www.star-history.com/#ruvnet/claude-flow&amp;amp;Date"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date" /&gt; 
   &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;strong&gt;Built with ❤️ by &lt;a href="https://github.com/ruvnet"&gt;rUv&lt;/a&gt; | Powered by Revolutionary AI&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;v2.0.0 Alpha - The Future of AI Orchestration&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>expo/expo</title>
      <link>https://github.com/expo/expo</link>
      <description>&lt;p&gt;An open-source framework for making universal native apps with React. Expo runs on Android, iOS, and the web.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://expo.dev/"&gt; &lt;img alt="Expo logo" height="128" src="https://raw.githubusercontent.com/expo/expo/main/.github/resources/banner.png" /&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a href="https://expo.dev/"&gt;Expo&lt;/a&gt;&lt;/h1&gt;
&lt;a href="https://expo.dev/"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a aria-label="SDK version" href="https://www.npmjs.com/package/expo" target="_blank"&gt; &lt;img alt="Expo SDK version" src="https://img.shields.io/npm/v/expo.svg?style=flat-square&amp;amp;label=SDK&amp;amp;labelColor=000000&amp;amp;color=4630EB" /&gt; &lt;/a&gt; &lt;a aria-label="Chat or ask a question" href="https://chat.expo.dev" target="_blank"&gt; &lt;img alt="Chat or ask a question" src="https://img.shields.io/discord/695411232856997968.svg?style=flat-square&amp;amp;labelColor=000000&amp;amp;color=4630EB&amp;amp;logo=discord&amp;amp;logoColor=FFFFFF&amp;amp;label=Chat%20with%20us" /&gt; &lt;/a&gt; &lt;a aria-label="Expo is free to use" href="https://github.com/expo/expo/raw/main/LICENSE" target="_blank"&gt; &lt;img alt="License: MIT" src="https://img.shields.io/badge/License-MIT-success.svg?style=flat-square&amp;amp;color=33CC12" target="_blank" /&gt; &lt;/a&gt; &lt;a aria-label="expo downloads" href="http://www.npmtrends.com/expo" target="_blank"&gt; &lt;img alt="Downloads" src="https://img.shields.io/npm/dm/expo.svg?style=flat-square&amp;amp;labelColor=gray&amp;amp;color=33CC12&amp;amp;label=Downloads" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a aria-label="try expo with snack" href="https://snack.expo.dev"&gt;&lt;b&gt;Try Expo in the Browser&lt;/b&gt;&lt;/a&gt;  •  &lt;a aria-label="expo documentation" href="https://docs.expo.dev"&gt;Read the Documentation&lt;/a&gt;  •  &lt;a aria-label="expo documentation" href="https://expo.dev/blog"&gt;Learn more on our blog&lt;/a&gt;  •  &lt;a aria-label="expo documentation" href="https://expo.canny.io/feature-requests"&gt;Request a feature&lt;/a&gt; &lt;/p&gt; 
&lt;h6 align="center"&gt;Follow us on&lt;/h6&gt; 
&lt;p align="center"&gt; &lt;a aria-label="Follow @expo on X" href="https://x.com/intent/follow?screen_name=expo" target="_blank"&gt; &lt;img alt="Expo on X" src="https://img.shields.io/badge/X-000000?style=for-the-badge&amp;amp;logo=x&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on GitHub" href="https://github.com/expo" target="_blank"&gt; &lt;img alt="Expo on GitHub" src="https://img.shields.io/badge/GitHub-222222?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on Reddit" href="https://www.reddit.com/r/expo/" target="_blank"&gt; &lt;img alt="Expo on Reddit" src="https://img.shields.io/badge/Reddit-FF4500?style=for-the-badge&amp;amp;logo=reddit&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on Bluesky" href="https://bsky.app/profile/expo.dev" target="_blank"&gt; &lt;img alt="Expo on Bluesky" src="https://img.shields.io/badge/Bluesky-1DA1F2?style=for-the-badge&amp;amp;logo=bluesky&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on LinkedIn" href="https://www.linkedin.com/company/expo-dev" target="_blank"&gt; &lt;img alt="Expo on LinkedIn" src="https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Expo is an open-source platform for making universal native apps that run on Android, iOS, and the web. It includes a universal runtime and libraries that let you build native apps by writing React and JavaScript.&lt;/p&gt; 
&lt;p&gt;This repository includes the Expo SDK, Modules API, Go app, CLI, Router, documentation, and various other supporting tools. &lt;a href="https://expo.dev/eas"&gt;Expo Application Services (EAS)&lt;/a&gt; is a platform of hosted services that are deeply integrated with Expo open source tools. EAS helps you build, ship, and iterate on your app as an individual or a team.&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href="https://expo.dev/guidelines"&gt;Expo Community Guidelines&lt;/a&gt; before interacting in the repository. Thank you for helping keep the Expo community open and welcoming!&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-documentation"&gt;📚 Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-project-layout"&gt;🗺 Project Layout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-badges"&gt;🏅 Badges&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-contributing"&gt;👏 Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-faq"&gt;❓ FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-the-team"&gt;💙 The Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;p&gt;Learn about building and deploying universal apps &lt;a aria-label="expo documentation" href="https://docs.expo.dev"&gt;in our official docs!&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.expo.dev/"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.expo.dev/versions/latest/"&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.expo.dev/workflow/customizing/"&gt;Using Custom Native Modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🗺 Project Layout&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/packages"&gt;&lt;code&gt;packages&lt;/code&gt;&lt;/a&gt; All the source code for Expo modules, if you want to edit a library or just see how it works this is where you'll find it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/apps"&gt;&lt;code&gt;apps&lt;/code&gt;&lt;/a&gt; This is where you can find Expo projects which are linked to the development modules. You'll do most of your testing in here.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/apps/expo-go"&gt;&lt;code&gt;apps/expo-go&lt;/code&gt;&lt;/a&gt; This is where you can find the source code for Expo Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/apps/expo-go/ios"&gt;&lt;code&gt;apps/expo-go/ios/Exponent.xcworkspace&lt;/code&gt;&lt;/a&gt; is the Xcode workspace. When developing iOS, always open this instead of &lt;code&gt;Exponent.xcodeproj&lt;/code&gt; because the workspace also loads the CocoaPods dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/docs"&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/a&gt; The source code for &lt;strong&gt;&lt;a href="https://docs.expo.dev"&gt;https://docs.expo.dev&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/templates"&gt;&lt;code&gt;templates&lt;/code&gt;&lt;/a&gt; The template projects you get when you run &lt;code&gt;npx create-expo-app&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/react-native-lab"&gt;&lt;code&gt;react-native-lab&lt;/code&gt;&lt;/a&gt; This is our fork of &lt;code&gt;react-native&lt;/code&gt; used to build Expo Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/guides"&gt;&lt;code&gt;guides&lt;/code&gt;&lt;/a&gt; In-depth tutorials for advanced topics like contributing to the client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/tools"&gt;&lt;code&gt;tools&lt;/code&gt;&lt;/a&gt; contain build and configuration tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/template-files"&gt;&lt;code&gt;template-files&lt;/code&gt;&lt;/a&gt; contains templates for files that require private keys. They are populated using the keys in &lt;code&gt;template-files/keys.json&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/template-files/ios/dependencies.json"&gt;&lt;code&gt;template-files/ios/dependencies.json&lt;/code&gt;&lt;/a&gt; specifies the CocoaPods dependencies of the app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🏅 Badges&lt;/h2&gt; 
&lt;p&gt;Let everyone know your app can be run instantly in the &lt;em&gt;Expo Go&lt;/em&gt; app! &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://expo.dev/client"&gt;&lt;img src="https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000" alt="runs with Expo Go" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://expo.dev/client"&gt;&lt;img src="https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000" alt="runs with Expo Go" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000)](https://expo.dev/client)

[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000)](https://expo.dev/client)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;👏 Contributing&lt;/h2&gt; 
&lt;p&gt;If you like Expo and want to help make it better then check out our &lt;a href="https://raw.githubusercontent.com/expo/expo/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;! Check out the &lt;a href="https://github.com/expo/expo/tree/main/packages/%40expo/cli"&gt;CLI package&lt;/a&gt; to work on the Expo CLI.&lt;/p&gt; 
&lt;h2&gt;❓ FAQ&lt;/h2&gt; 
&lt;p&gt;If you have questions about Expo and want answers, then check out our &lt;a href="https://docs.expo.dev/faq/"&gt;Frequently Asked Questions&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;If you still have questions you can ask them on our &lt;a href="https://chat.expo.dev"&gt;Discord and Forums&lt;/a&gt; or X &lt;a href="https://x.com/expo"&gt;@expo&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💙 The Team&lt;/h2&gt; 
&lt;p&gt;Curious about who makes Expo? Here are our &lt;a href="https://expo.dev/about"&gt;team members&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Expo source code is made available under the &lt;a href="https://raw.githubusercontent.com/expo/expo/main/LICENSE"&gt;MIT license&lt;/a&gt;. Some of the dependencies are licensed differently, with the BSD license, for example.&lt;/p&gt; 
&lt;img alt="Star the Expo repo on GitHub to support the project" src="https://user-images.githubusercontent.com/9664363/185428788-d762fd5d-97b3-4f59-8db7-f72405be9677.gif" width="50%" /&gt;</description>
    </item>
    
    <item>
      <title>humanlayer/12-factor-agents</title>
      <link>https://github.com/humanlayer/12-factor-agents</link>
      <description>&lt;p&gt;What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;12-Factor Agents - Principles for building reliable LLM applications&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt; &lt;img src="https://img.shields.io/badge/Code-Apache%202.0-blue.svg?sanitize=true" alt="Code License: Apache 2.0" /&gt;&lt;/a&gt; 
 &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt; &lt;img src="https://img.shields.io/badge/Content-CC%20BY--SA%204.0-lightgrey.svg?sanitize=true" alt="Content License: CC BY-SA 4.0" /&gt;&lt;/a&gt; 
 &lt;a href="https://humanlayer.dev/discord"&gt; &lt;img src="https://img.shields.io/badge/chat-discord-5865F2" alt="Discord Server" /&gt;&lt;/a&gt; 
 &lt;a href="https://www.youtube.com/watch?v=8kMaTybvDUw"&gt; &lt;img src="https://img.shields.io/badge/aidotengineer-conf_talk_(17m)-white" alt="YouTube
Deep Dive" /&gt;&lt;/a&gt; 
 &lt;a href="https://www.youtube.com/watch?v=yxJDyQ8v6P0"&gt; &lt;img src="https://img.shields.io/badge/youtube-deep_dive-crimson" alt="YouTube
Deep Dive" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;In the spirit of &lt;a href="https://12factor.net/"&gt;12 Factor Apps&lt;/a&gt;&lt;/em&gt;. &lt;em&gt;The source for this project is public at &lt;a href="https://github.com/humanlayer/12-factor-agents"&gt;https://github.com/humanlayer/12-factor-agents&lt;/a&gt;, and I welcome your feedback and contributions. Let's figure this out together!&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Missed the AI Engineer World's Fair? &lt;a href="https://www.youtube.com/watch?v=8kMaTybvDUw"&gt;Catch the talk here&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Looking for Context Engineering? &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Jump straight to factor 3&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Want to contribute to &lt;code&gt;npx/uvx create-12-factor-agent&lt;/code&gt; - check out &lt;a href="https://github.com/humanlayer/12-factor-agents/discussions/61"&gt;the discussion thread&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img referrerpolicy="no-referrer-when-downgrade" src="https://static.scarf.sh/a.png?x-pxid=2acad99a-c2d9-48df-86f5-9ca8061b7bf9" /&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/humanlayer/12-factor-agents/main/#visual-nav"&gt;&lt;img width="907" alt="Screenshot 2025-04-03 at 2 49 07 PM" src="https://github.com/user-attachments/assets/23286ad8-7bef-4902-b371-88ff6a22e998" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Hi, I'm Dex. I've been &lt;a href="https://youtu.be/8bIHcttkOTE"&gt;hacking&lt;/a&gt; on &lt;a href="https://theouterloop.substack.com"&gt;AI agents&lt;/a&gt; for &lt;a href="https://humanlayer.dev"&gt;a while&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've tried every agent framework out there&lt;/strong&gt;, from the plug-and-play crew/langchains to the "minimalist" smolagents of the world to the "production grade" langraph, griptape, etc.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've talked to a lot of really strong founders&lt;/strong&gt;, in and out of YC, who are all building really impressive things with AI. Most of them are rolling the stack themselves. I don't see a lot of frameworks in production customer-facing agents.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've been surprised to find&lt;/strong&gt; that most of the products out there billing themselves as "AI Agents" are not all that agentic. A lot of them are mostly deterministic code, with LLM steps sprinkled in at just the right points to make the experience truly magical.&lt;/p&gt; 
&lt;p&gt;Agents, at least the good ones, don't follow the &lt;a href="https://www.anthropic.com/engineering/building-effective-agents#agents"&gt;"here's your prompt, here's a bag of tools, loop until you hit the goal"&lt;/a&gt; pattern. Rather, they are comprised of mostly just software.&lt;/p&gt; 
&lt;p&gt;So, I set out to answer:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;&lt;strong&gt;What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?&lt;/strong&gt;&lt;/h3&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Welcome to 12-factor agents. As every Chicago mayor since Daley has consistently plastered all over the city's major airports, we're glad you're here.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Special thanks to &lt;a href="https://github.com/iantbutler01"&gt;@iantbutler01&lt;/a&gt;, &lt;a href="https://github.com/tnm"&gt;@tnm&lt;/a&gt;, &lt;a href="https://www.github.com/hellovai"&gt;@hellovai&lt;/a&gt;, &lt;a href="https://www.github.com/stantonk"&gt;@stantonk&lt;/a&gt;, &lt;a href="https://www.github.com/balanceiskey"&gt;@balanceiskey&lt;/a&gt;, &lt;a href="https://www.github.com/AdjectiveAllison"&gt;@AdjectiveAllison&lt;/a&gt;, &lt;a href="https://www.github.com/pfbyjy"&gt;@pfbyjy&lt;/a&gt;, &lt;a href="https://www.github.com/a-churchill"&gt;@a-churchill&lt;/a&gt;, and the SF MLOps community for early feedback on this guide.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;The Short Version: The 12 Factors&lt;/h2&gt; 
&lt;p&gt;Even if LLMs &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md#what-if-llms-get-smarter"&gt;continue to get exponentially more powerful&lt;/a&gt;, there will be core engineering techniques that make LLM-powered software more reliable, more scalable, and easier to maintain.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;How We Got Here: A Brief History of Software&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;Factor 1: Natural Language to Tool Calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;Factor 2: Own your prompts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Factor 3: Own your context window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;Factor 4: Tools are just structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;Factor 5: Unify execution state and business state&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;Factor 6: Launch/Pause/Resume with simple APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;Factor 7: Contact humans with tool calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;Factor 8: Own your control flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;Factor 9: Compact Errors into Context Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;Factor 10: Small, Focused Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;Factor 11: Trigger from anywhere, meet users where they are&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;Factor 12: Make your agent a stateless reducer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Visual Nav&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/110-natural-language-tool-calls.png" alt="factor 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/120-own-your-prompts.png" alt="factor 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/130-own-your-context-building.png" alt="factor 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/140-tools-are-just-structured-outputs.png" alt="factor 4" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/150-unify-state.png" alt="factor 5" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/160-pause-resume-with-simple-apis.png" alt="factor 6" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/170-contact-humans-with-tools.png" alt="factor 7" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/180-control-flow.png" alt="factor 8" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/190-factor-9-errors-static.png" alt="factor 9" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1a0-small-focused-agents.png" alt="factor 10" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1b0-trigger-from-anywhere.png" alt="factor 11" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1c0-stateless-reducer.png" alt="factor 12" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;How we got here&lt;/h2&gt; 
&lt;p&gt;For a deeper dive on my agent journey and what led us here, check out &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;A Brief History of Software&lt;/a&gt; - a quick summary here:&lt;/p&gt; 
&lt;h3&gt;The promise of agents&lt;/h3&gt; 
&lt;p&gt;We're gonna talk a lot about Directed Graphs (DGs) and their Acyclic friends, DAGs. I'll start by pointing out that...well...software is a directed graph. There's a reason we used to represent programs as flow charts.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/010-software-dag.png" alt="010-software-dag" /&gt;&lt;/p&gt; 
&lt;h3&gt;From code to DAGs&lt;/h3&gt; 
&lt;p&gt;Around 20 years ago, we started to see DAG orchestrators become popular. We're talking classics like &lt;a href="https://airflow.apache.org/"&gt;Airflow&lt;/a&gt;, &lt;a href="https://www.prefect.io/"&gt;Prefect&lt;/a&gt;, some predecessors, and some newer ones like (&lt;a href="https://dagster.io/"&gt;dagster&lt;/a&gt;, &lt;a href="https://www.inngest.com/"&gt;inggest&lt;/a&gt;, &lt;a href="https://www.windmill.dev/"&gt;windmill&lt;/a&gt;). These followed the same graph pattern, with the added benefit of observability, modularity, retries, administration, etc.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/015-dag-orchestrators.png" alt="015-dag-orchestrators" /&gt;&lt;/p&gt; 
&lt;h3&gt;The promise of agents&lt;/h3&gt; 
&lt;p&gt;I'm not the first &lt;a href="https://youtu.be/Dc99-zTMyMg?si=bcT0hIwWij2mR-40&amp;amp;t=73"&gt;person to say this&lt;/a&gt;, but my biggest takeaway when I started learning about agents, was that you get to throw the DAG away. Instead of software engineers coding each step and edge case, you can give the agent a goal and a set of transitions:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/025-agent-dag.png" alt="025-agent-dag" /&gt;&lt;/p&gt; 
&lt;p&gt;And let the LLM make decisions in real time to figure out the path&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/026-agent-dag-lines.png" alt="026-agent-dag-lines" /&gt;&lt;/p&gt; 
&lt;p&gt;The promise here is that you write less software, you just give the LLM the "edges" of the graph and let it figure out the nodes. You can recover from errors, you can write less code, and you may find that LLMs find novel solutions to problems.&lt;/p&gt; 
&lt;h3&gt;Agents as loops&lt;/h3&gt; 
&lt;p&gt;As we'll see later, it turns out this doesn't quite work.&lt;/p&gt; 
&lt;p&gt;Let's dive one step deeper - with agents you've got this loop consisting of 3 steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;LLM determines the next step in the workflow, outputting structured json ("tool calling")&lt;/li&gt; 
 &lt;li&gt;Deterministic code executes the tool call&lt;/li&gt; 
 &lt;li&gt;The result is appended to the context window&lt;/li&gt; 
 &lt;li&gt;Repeat until the next step is determined to be "done"&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;initial_event = {"message": "..."}
context = [initial_event]
while True:
  next_step = await llm.determine_next_step(context)
  context.append(next_step)

  if (next_step.intent === "done"):
    return next_step.final_answer

  result = await execute_step(next_step)
  context.append(result)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Our initial context is just the starting event (maybe a user message, maybe a cron fired, maybe a webhook, etc), and we ask the llm to choose the next step (tool) or to determine that we're done.&lt;/p&gt; 
&lt;p&gt;Here's a multi-step example:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/3beb0966-fdb1-4c12-a47f-ed4e8240f8fd"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif" alt="027-agent-loop-animation" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif"&gt;GIF Version&lt;/a&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif" alt="027-agent-loop-animation" /&gt;]&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Why 12-factor agents?&lt;/h2&gt; 
&lt;p&gt;At the end of the day, this approach just doesn't work as well as we want it to.&lt;/p&gt; 
&lt;p&gt;In building HumanLayer, I've talked to at least 100 SaaS builders (mostly technical founders) looking to make their existing product more agentic. The journey usually goes something like:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Decide you want to build an agent&lt;/li&gt; 
 &lt;li&gt;Product design, UX mapping, what problems to solve&lt;/li&gt; 
 &lt;li&gt;Want to move fast, so grab $FRAMEWORK and &lt;em&gt;get to building&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Get to 70-80% quality bar&lt;/li&gt; 
 &lt;li&gt;Realize that 80% isn't good enough for most customer-facing features&lt;/li&gt; 
 &lt;li&gt;Realize that getting past 80% requires reverse-engineering the framework, prompts, flow, etc.&lt;/li&gt; 
 &lt;li&gt;Start over from scratch&lt;/li&gt; 
&lt;/ol&gt; 
&lt;details&gt; 
 &lt;summary&gt;Random Disclaimers&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: I'm not sure the exact right place to say this, but here seems as good as any: &lt;strong&gt;this in BY NO MEANS meant to be a dig on either the many frameworks out there, or the pretty dang smart people who work on them&lt;/strong&gt;. They enable incredible things and have accelerated the AI ecosystem.&lt;/p&gt; 
 &lt;p&gt;I hope that one outcome of this post is that agent framework builders can learn from the journeys of myself and others, and make frameworks even better.&lt;/p&gt; 
 &lt;p&gt;Especially for builders who want to move fast but need deep control.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER 2&lt;/strong&gt;: I'm not going to talk about MCP. I'm sure you can see where it fits in.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER 3&lt;/strong&gt;: I'm using mostly typescript, for &lt;a href="https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e?utm_source=share&amp;amp;utm_medium=member_desktop&amp;amp;rcm=ACoAAA4oHTkByAiD-wZjnGsMBUL_JT6nyyhOh30"&gt;reasons&lt;/a&gt; but all this stuff works in python or any other language you prefer.&lt;/p&gt; 
 &lt;p&gt;Anyways back to the thing...&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Design Patterns for great LLM applications&lt;/h3&gt; 
&lt;p&gt;After digging through hundreds of AI libriaries and working with dozens of founders, my instinct is this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;There are some core things that make agents great&lt;/li&gt; 
 &lt;li&gt;Going all in on a framework and building what is essentially a greenfield rewrite may be counter-productive&lt;/li&gt; 
 &lt;li&gt;There are some core principles that make agents great, and you will get most/all of them if you pull in a framework&lt;/li&gt; 
 &lt;li&gt;BUT, the fastest way I've seen for builders to get high-quality AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product&lt;/li&gt; 
 &lt;li&gt;These modular concepts from agents can be defined and applied by most skilled software engineers, even if they don't have an AI background&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;The fastest way I've seen for builders to get good AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;The 12 Factors (again)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;How We Got Here: A Brief History of Software&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;Factor 1: Natural Language to Tool Calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;Factor 2: Own your prompts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Factor 3: Own your context window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;Factor 4: Tools are just structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;Factor 5: Unify execution state and business state&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;Factor 6: Launch/Pause/Resume with simple APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;Factor 7: Contact humans with tool calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;Factor 8: Own your control flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;Factor 9: Compact Errors into Context Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;Factor 10: Small, Focused Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;Factor 11: Trigger from anywhere, meet users where they are&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;Factor 12: Make your agent a stateless reducer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Honorable Mentions / other advice&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/appendix-13-pre-fetch.md"&gt;Factor 13: Pre-fetch all the context you might need&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Related Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Contribute to this guide &lt;a href="https://github.com/humanlayer/12-factor-agents"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/8bIHcttkOTE"&gt;I talked about a lot of this on an episode of the Tool Use podcast&lt;/a&gt; in March 2025&lt;/li&gt; 
 &lt;li&gt;I write about some of this stuff at &lt;a href="https://theouterloop.substack.com"&gt;The Outer Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;I do &lt;a href="https://github.com/hellovai/ai-that-works/tree/main"&gt;webinars about Maximizing LLM Performance&lt;/a&gt; with &lt;a href="https://github.com/hellovai"&gt;@hellovai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;We build OSS agents with this methodology under &lt;a href="https://github.com/got-agents/agents"&gt;got-agents/agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;We ignored all our own advice and built a &lt;a href="https://github.com/humanlayer/kubechain"&gt;framework for running distributed agents in kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Other links from this guide: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://12factor.net"&gt;12 Factor Apps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.anthropic.com/engineering/building-effective-agents#agents"&gt;Building Effective Agents (Anthropic)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://thedataexchange.media/baml-revolution-in-ai-engineering/"&gt;Prompts are Functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tomasp.net/blog/2015/library-frameworks/"&gt;Library patterns: Why frameworks are evil&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction"&gt;The Wrong Abstraction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/dexhorthy/mailcrew"&gt;Mailcrew Agent&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=f_cKnoPC_Oo"&gt;Mailcrew Demo Video&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://x.com/chainlit_io/status/1858613325921480922"&gt;Chainlit Demo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e"&gt;TypeScript for LLMs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.boundaryml.com/blog/schema-aligned-parsing"&gt;Schema Aligned Parsing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.vellum.ai/blog/when-should-i-use-function-calling-structured-outputs-or-json-mode"&gt;Function Calling vs Structured Outputs vs JSON Mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/boundaryml/baml"&gt;BAML on GitHub&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.llamaindex.ai/en/stable/examples/llm/openai_json_vs_function_calling/"&gt;OpenAI JSON vs Function Calling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://theouterloop.substack.com/p/openais-realtime-api-is-a-step-towards"&gt;Outer Loop Agents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://airflow.apache.org/"&gt;Airflow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.prefect.io/"&gt;Prefect&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://dagster.io/"&gt;Dagster&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.inngest.com/"&gt;Inngest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.windmill.dev/"&gt;Windmill&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://aiagentindex.mit.edu/"&gt;The AI Agent Index (MIT)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://open.substack.com/pub/swyx/p/notebooklm?selection=08e1187c-cfee-4c63-93c9-71216640a5f8"&gt;NotebookLM on Finding Model Capability Boundaries&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks to everyone who has contributed to 12-factor agents!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/dexhorthy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3730605?v=4&amp;amp;s=80" width="80px" alt="dexhorthy" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Sypherd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50557586?v=4&amp;amp;s=80" width="80px" alt="Sypherd" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tofaramususa"&gt;&lt;img src="https://avatars.githubusercontent.com/u/66259401?v=4&amp;amp;s=80" width="80px" alt="tofaramususa" /&gt;&lt;/a&gt; &lt;a href="https://github.com/a-churchill"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18105223?v=4&amp;amp;s=80" width="80px" alt="a-churchill" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Elijas"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4084885?v=4&amp;amp;s=80" width="80px" alt="Elijas" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hugolmn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39267118?v=4&amp;amp;s=80" width="80px" alt="hugolmn" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jeremypeters"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1882972?v=4&amp;amp;s=80" width="80px" alt="jeremypeters" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/kndl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/380402?v=4&amp;amp;s=80" width="80px" alt="kndl" /&gt;&lt;/a&gt; &lt;a href="https://github.com/maciejkos"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16674643?v=4&amp;amp;s=80" width="80px" alt="maciejkos" /&gt;&lt;/a&gt; &lt;a href="https://github.com/pfbyjy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/85041180?v=4&amp;amp;s=80" width="80px" alt="pfbyjy" /&gt;&lt;/a&gt; &lt;a href="https://github.com/0xRaduan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36044389?v=4&amp;amp;s=80" width="80px" alt="0xRaduan" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zyuanlim"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7169731?v=4&amp;amp;s=80" width="80px" alt="zyuanlim" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lombardo-chcg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15862501?v=4&amp;amp;s=80" width="80px" alt="lombardo-chcg" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sahanatvessel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/160066852?v=4&amp;amp;s=80" width="80px" alt="sahanatvessel" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Versions&lt;/h2&gt; 
&lt;p&gt;This is the current version of 12-factor agents, version 1.0. There is a draft of version 1.1 on the &lt;a href="https://github.com/humanlayer/12-factor-agents/tree/v1.1"&gt;v1.1 branch&lt;/a&gt;. There are a few &lt;a href="https://github.com/humanlayer/12-factor-agents/issues?q=is%3Aissue%20state%3Aopen%20label%3Aversion%3A%3A1.1"&gt;Issues to track work on v1.1&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;All content and images are licensed under a &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt;CC BY-SA 4.0 License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Code is licensed under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0 License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>