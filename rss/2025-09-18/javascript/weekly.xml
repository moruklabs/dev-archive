<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Wed, 17 Sep 2025 02:40:02 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>mrdoob/three.js</title>
      <link>https://github.com/mrdoob/three.js</link>
      <description>&lt;p&gt;JavaScript 3D Library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;three.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/three"&gt;&lt;img src="https://img.shields.io/npm/v/three" alt="NPM Package" /&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/result?p=three"&gt;&lt;img src="https://badgen.net/bundlephobia/minzip/three" alt="Build Size" /&gt;&lt;/a&gt; &lt;a href="https://www.npmtrends.com/three"&gt;&lt;img src="https://img.shields.io/npm/dw/three" alt="NPM Downloads" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/56GBJwAnUS"&gt;&lt;img src="https://img.shields.io/discord/685241246557667386" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/mrdoob/three.js"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;JavaScript 3D library&lt;/h4&gt; 
&lt;p&gt;The aim of the project is to create an easy-to-use, lightweight, cross-browser, general-purpose 3D library. The current builds only include WebGL and WebGPU renderers but SVG and CSS3D renderers are also available as addons.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://threejs.org/examples/"&gt;Examples&lt;/a&gt; — &lt;a href="https://threejs.org/docs/"&gt;Docs&lt;/a&gt; — &lt;a href="https://threejs.org/manual/"&gt;Manual&lt;/a&gt; — &lt;a href="https://github.com/mrdoob/three.js/wiki"&gt;Wiki&lt;/a&gt; — &lt;a href="https://github.com/mrdoob/three.js/wiki/Migration-Guide"&gt;Migrating&lt;/a&gt; — &lt;a href="https://stackoverflow.com/questions/tagged/three.js"&gt;Questions&lt;/a&gt; — &lt;a href="https://discourse.threejs.org/"&gt;Forum&lt;/a&gt; — &lt;a href="https://discord.gg/56GBJwAnUS"&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a &lt;code&gt;WebGL&lt;/code&gt; renderer for the scene and camera, and it adds that viewport to the &lt;code&gt;document.body&lt;/code&gt; element. Finally, it animates the cube within the scene for the camera.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import * as THREE from 'three';

const width = window.innerWidth, height = window.innerHeight;

// init

const camera = new THREE.PerspectiveCamera( 70, width / height, 0.01, 10 );
camera.position.z = 1;

const scene = new THREE.Scene();

const geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
const material = new THREE.MeshNormalMaterial();

const mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );

const renderer = new THREE.WebGLRenderer( { antialias: true } );
renderer.setSize( width, height );
renderer.setAnimationLoop( animate );
document.body.appendChild( renderer.domElement );

// animation

function animate( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything goes well, you should see &lt;a href="https://jsfiddle.net/w43x5Lgh/"&gt;this&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Cloning this repository&lt;/h3&gt; 
&lt;p&gt;Cloning the repo with all its history results in a ~2 GB download. If you don't need the whole history you can use the &lt;code&gt;depth&lt;/code&gt; parameter to significantly reduce download size.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone --depth=1 https://github.com/mrdoob/three.js.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Change log&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/mrdoob/three.js/releases"&gt;Releases&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UseInterstellar/Interstellar</title>
      <link>https://github.com/UseInterstellar/Interstellar</link>
      <description>&lt;p&gt;One of the most popular modern web proxies with blazing fast speeds and a variety of games.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/UseInterstellar/Interstellar/main/.github/branding/in.png" /&gt; 
 &lt;p&gt;Serving over 15 million users since 2022.&lt;/p&gt;
 &lt;p&gt; &lt;/p&gt;
 &lt;p&gt;Interstellar is a web proxy with a Clean and Sleek UI and easy to use menus. Our goal is to provide the best user experience to everyone.&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;img src="https://github.com/UseInterstellar/Interstellar/assets/89202835/2669efed-5186-4932-83c4-725acae60bd2" alt="inpreview" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] If you fork this project, consider giving it a star in the original repository!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Join Our &lt;a href="https://discord.gg/interstellar"&gt;Discord Community&lt;/a&gt; for support, more links, and an active community!&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;About:Blank Cloaking&lt;/li&gt; 
 &lt;li&gt;Tab Cloaking&lt;/li&gt; 
 &lt;li&gt;Wide collection of apps &amp;amp; games&lt;/li&gt; 
 &lt;li&gt;Clean, Easy to use UI&lt;/li&gt; 
 &lt;li&gt;Inspect Element&lt;/li&gt; 
 &lt;li&gt;Various Themes&lt;/li&gt; 
 &lt;li&gt;Password Protection (Optional)&lt;/li&gt; 
 &lt;li&gt;Built-in Tab System&lt;/li&gt; 
 &lt;li&gt;Now.gg Support&lt;/li&gt; 
 &lt;li&gt;Fast Speeds&lt;/li&gt; 
 &lt;li&gt;Geforce NOW Support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] You &lt;strong&gt;cannot&lt;/strong&gt; deploy to static web hosts, including Netlify, Cloudflare Pages, and GitHub Pages.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Password Protection&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the &lt;code&gt;config.js&lt;/code&gt; file and set &lt;code&gt;challenge&lt;/code&gt; to &lt;strong&gt;true&lt;/strong&gt;. Then, set the environment variable as follows:&lt;/li&gt; 
 &lt;li&gt;For PNPM: Run either &lt;code&gt;config=true pnpm start&lt;/code&gt; or &lt;code&gt;$env:config=true; pnpm start&lt;/code&gt;, depending on your server.&lt;/li&gt; 
 &lt;li&gt;For Bun: Run either &lt;code&gt;config=true bun start&lt;/code&gt; or &lt;code&gt;$env:config=true; bun start&lt;/code&gt; if you prefer Bun.&lt;/li&gt; 
 &lt;li&gt;For NPM: Run either &lt;code&gt;config=true npm start&lt;/code&gt; or &lt;code&gt;$env:config=true; npm start&lt;/code&gt; if you prefer NPM.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Server Deployment&lt;/h3&gt; 
&lt;p&gt;You must run these commands on your server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/UseInterstellar/Interstellar
cd Interstellar
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Ad-Free Deployment&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone --branch Ad-Free https://github.com/UseInterstellar/Interstellar
cd Interstellar
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next depending on your package manager, run one of the following commands:&lt;/p&gt; 
&lt;h4&gt;Bun&lt;/h4&gt; 
&lt;p&gt;If you are using Bun, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun i
bun start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;pnpm&lt;/h4&gt; 
&lt;p&gt;If you are using pnpm, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm i
pnpm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;npm&lt;/h4&gt; 
&lt;p&gt;If you are using npm, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i
npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Updating&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd Interstellar
git pull --force --allow-unrelated-histories # This may overwrite your local changes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a target="_blank" href="https://heroku.com/deploy/?template=https://github.com/UseInterstellar/Interstellar"&gt;&lt;img alt="Deploy to Heroku" src="https://binbashbanana.github.io/deploy-buttons/buttons/remade/heroku.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://app.koyeb.com/deploy?type=git&amp;amp;repository=github.com/UseInterstellar/Interstellar"&gt;&lt;img alt="Deploy to Koyeb" src="https://binbashbanana.github.io/deploy-buttons/buttons/remade/koyeb.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Deployment Alternatives&lt;/h3&gt; 
&lt;p&gt;For more deployment options, join our &lt;a href="https://discord.gg/interstellar"&gt;Discord Server&lt;/a&gt; for various ways to deploy Interstellar. This includes methods of deploying to Render/OnRender.&lt;/p&gt; 
&lt;h4&gt;What happened to Replit Deployment?&lt;/h4&gt; 
&lt;p&gt;As of January 1st, 2024, Replit is &lt;a href="https://blog.replit.com/hosting-changes"&gt;no longer free&lt;/a&gt;. Try GitHub Codespaces instead.&lt;/p&gt; 
&lt;h3&gt;GitHub Codespaces&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you're setting the port below 1023, then you must run &lt;code&gt;sudo PORT=1023&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a GitHub account if you haven't already.&lt;/li&gt; 
 &lt;li&gt;Click "Code" (green button) and then "Create Codespace on main."&lt;/li&gt; 
 &lt;li&gt;In the terminal at the bottom, paste &lt;code&gt;pnpm i &amp;amp;&amp;amp; pnpm start&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Respond to the application popup by clicking "Make public."&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Make sure you click the "Make public." button, or the proxy won't function properly.&lt;br /&gt; If you get a Range Error, go back and make sure you clicked Make public!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Access the deployed website from the ports tab.&lt;/li&gt; 
 &lt;li&gt;For subsequent uses in the same codespace, just run &lt;code&gt;pnpm start&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Solution for if there is no popup.&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;pnpm i&lt;/code&gt;, and before &lt;code&gt;pnpm start&lt;/code&gt;, prepend &lt;code&gt;PORT=8080&lt;/code&gt;, replacing 8080 with another port. For example, &lt;code&gt;PORT=6969 pnpm start&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If this does not work then you can prepend &lt;code&gt;$env:PORT=8080;&lt;/code&gt;, replacing 8080 with another port. For example, &lt;code&gt;$env:PORT=6969; pnpm start&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Go to the ports tab, Click Forward A Port, And type the port number.&lt;/li&gt; 
 &lt;li&gt;Right-click Visibility and set Port Visibility to Public.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] We are committed to making Interstellar easy and personalized however, as of now we need your support in making it ad-free. Consider keeping ads so Interstellar can run freely or contribute by being a supporter.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Report Issues&lt;/h2&gt; 
&lt;p&gt;If you encounter problems, open an issue on GitHub, and we'll address it promptly.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you're having trouble, don't hesitate to reach out to us on &lt;a href="https://discord.gg/interstellar"&gt;Discord&lt;/a&gt; for personalized support.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Credits&lt;/h1&gt; 
&lt;p&gt;A huge thanks goes out to all of the people who have contributed to Interstellar.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/UseInterstellar/Interstellar/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=UseInterstellar/Interstellar" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docmirror/dev-sidecar</title>
      <link>https://github.com/docmirror/dev-sidecar</link>
      <description>&lt;p&gt;开发者边车，github打不开，github加速，git clone加速，git release下载加速，stackoverflow加速&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dev-sidecar&lt;/h1&gt; 
&lt;p&gt;开发者边车，命名取自service-mesh的service-sidecar，意为为开发者打辅助的边车工具（以下简称ds） 通过本地代理的方式将https请求代理到一些国内的加速通道上&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/docmirror/dev-sidecar"&gt;&lt;img alt="GitHub stars" src="https://img.shields.io/github/stars/docmirror/dev-sidecar?logo=github" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Gitee上的同步项目已被封禁，此项目将不再更新与维护 【狗头保命】&lt;/p&gt; 
 &lt;p&gt;我将继续奋战在开源一线，为社区贡献更多更好的开源项目。 感兴趣的可以关注我的主页 &lt;a href="https://github.com/greper"&gt;【github】&lt;/a&gt; &lt;a href="https://gitee.com/greper"&gt;【gitee】&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;打个广告&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://github.com/certd/certd"&gt;https://github.com/certd/certd&lt;/a&gt; 我的开源证书管理工具项目，全自动申请和部署证书，有需求的可以去试试，帮忙点个star&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;重要提醒&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;------------------------------重要提醒1---------------------------------&lt;/p&gt; 
 &lt;p&gt;注意：由于electron无法监听windows的关机事件，开着ds情况下直接重启电脑，会导致无法上网，你可以手动启动ds即可恢复网络，你也可以将ds设置为开机自启。&lt;/p&gt; 
 &lt;p&gt;关于此问题的更多讨论请前往：&lt;a href="https://github.com/docmirror/dev-sidecar/issues/109"&gt;https://github.com/docmirror/dev-sidecar/issues/109&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;注：此问题已在 &lt;code&gt;1.8.9&lt;/code&gt; 版本中得到解决。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;------------------------------重要提醒2---------------------------------&lt;/p&gt; 
 &lt;p&gt;注意：本应用启动会自动修改系统代理，所以会与其他代理软件有冲突，请务必不要一起使用。 本应用主要目的在于直连访问github，如果你已经有飞机了，那建议还是不要用这个自行车（ds）了&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;一、 特性&lt;/h2&gt; 
&lt;h3&gt;1.1、 dns优选（解决***污染问题）&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;根据网络状况智能解析最佳域名ip地址，获取最佳网络速度&lt;/li&gt; 
 &lt;li&gt;解决一些网站和库无法访问或访问速度慢的问题&lt;/li&gt; 
 &lt;li&gt;建议遇到打开比较慢的国外网站，可以优先尝试将该域名添加到dns设置中（注意：被***封杀的无效）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;1.2、 请求拦截&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;拦截打不开的网站，代理到加速镜像站点上去。&lt;/li&gt; 
 &lt;li&gt;可配置多个镜像站作为备份&lt;/li&gt; 
 &lt;li&gt;具备测速机制，当访问失败或超时之后，自动切换到备用站点，使得目标服务高可用&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;1.3、 github加速&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;github 直连加速 (通过修改sni实现，感谢 &lt;a href="https://github.com/dotnetcore/FastGithub"&gt;fastGithub&lt;/a&gt; 提供的思路)&lt;/li&gt; 
 &lt;li&gt;release、source、zip下载加速&lt;/li&gt; 
 &lt;li&gt;clone 加速&lt;/li&gt; 
 &lt;li&gt;头像加速&lt;/li&gt; 
 &lt;li&gt;解决readme中图片引用无法加载的问题&lt;/li&gt; 
 &lt;li&gt;gist.github.com 加速&lt;/li&gt; 
 &lt;li&gt;解决git push 偶尔失败需要输入账号密码的问题（fatal: TaskCanceledException encountered / fatal: HttpRequestException encountered）&lt;/li&gt; 
 &lt;li&gt;raw/blame加速&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;以上部分功能通过 &lt;code&gt;X.I.U&lt;/code&gt; 的油猴脚本实现， 以下是仓库和脚本下载链接，大家可以去支持一下。&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/XIU2/UserScript"&gt;https://github.com/XIU2/UserScript&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://greasyfork.org/scripts/412245"&gt;https://greasyfork.org/scripts/412245&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;由于此脚本在ds中是打包在本地的，更新会不及时，你可以直接通过浏览器安装油猴插件使用此脚本，从而获得最新更新（ds本地的可以通过 &lt;code&gt;加速服务-&amp;gt;基本设置-&amp;gt;启用脚本&lt;/code&gt; 进行关闭）。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;1.4、 Stack Overflow 加速&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;将ajax.google.com代理到加速CDN上&lt;/li&gt; 
 &lt;li&gt;recaptcha 图片验证码加速&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;1.5、 npm加速&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持开启npm代理&lt;/li&gt; 
 &lt;li&gt;官方与淘宝npm registry一键切换&lt;/li&gt; 
 &lt;li&gt;某些npm install的时候，并且使用cnpm也无法安装时，可以尝试开启npm代理再试&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;安全警告&lt;/em&gt;&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;请勿使用来源不明的服务地址，有隐私和账号泄露风险&lt;/li&gt; 
 &lt;li&gt;本应用及服务端承诺不收集任何信息。介意者请使用安全模式。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;二、快速开始&lt;/h2&gt; 
&lt;p&gt;支持windows、Mac、Linux(Ubuntu)&lt;/p&gt; 
&lt;h3&gt;2.1、DevSidecar桌面应用&lt;/h3&gt; 
&lt;h4&gt;1）下载安装包&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;release下载 &lt;a href="https://github.com/docmirror/dev-sidecar/releases"&gt;Github Release&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Windows: 请选择DevSidecar-x.x.x.exe Mac: 请选择DevSidecar-x.x.x.dmg Ubuntu: 请选择DevSidecar-x.x.x.deb 其他linux: 请选择DevSidecar-x.x.x.AppImage (未做测试，不保证能用)&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;linux安装说明请参考 &lt;a href="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/linux.md"&gt;linux安装文档&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;注意：由于没有买应用证书，所以应用在下载安装时会有“未知发行者”等安全提示，选择保留即可。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;2）安装后打开&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;注意：mac版安装需要在“系统偏好设置-&amp;gt;安全性与隐私-&amp;gt;通用”中解锁并允许应用安装&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/index.png" alt="" /&gt;&lt;/p&gt; 
&lt;h4&gt;3）安装根证书&lt;/h4&gt; 
&lt;p&gt;第一次打开会提示安装证书，根据提示操作即可&lt;/p&gt; 
&lt;p&gt;更多有关根证书的说明，请参考 &lt;a href="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/caroot.md"&gt;为什么要安装根证书?&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;根证书是本地随机生成的，所以不用担心根证书的安全问题（本应用不收集任何用户信息） 你也可以在加速服务设置中自定义根证书（PEM格式的证书与私钥）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;火狐浏览器需要&lt;a href="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/#3%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%93%E5%BC%80%E6%8F%90%E7%A4%BA%E8%AF%81%E4%B9%A6%E4%B8%8D%E5%8F%97%E4%BF%A1%E4%BB%BB"&gt;手动安装证书&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;4）开始加速吧&lt;/h4&gt; 
&lt;p&gt;去试试打开github&lt;/p&gt; 
&lt;h3&gt;2.2、开启前 vs 开启后&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;开启前&lt;/th&gt; 
   &lt;th&gt;开启后&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;头像&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/avatar2.png" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/avatar1.png" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;clone&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/clone-before.png" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/clone.png" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;zip 下载&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/download-before.png" alt="" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/download.png" alt="" /&gt;秒下的，实在截不到速度的图&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;三、模式说明&lt;/h2&gt; 
&lt;h3&gt;3.1、安全模式&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;此模式：关闭拦截、关闭增强、开启dns优选、开启测速&lt;/li&gt; 
 &lt;li&gt;最安全，无需安装证书，可以在浏览器地址栏左侧查看域名证书&lt;/li&gt; 
 &lt;li&gt;功能也最弱，只有特性1，相当于查询github的国外ip，手动改hosts一个意思。&lt;/li&gt; 
 &lt;li&gt;github的可访问性不稳定，取决于IP测速，如果有绿色ip存在，就 &lt;code&gt;有可能&lt;/code&gt; 可以直连访问。 &lt;img src="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/speed.png" alt="" /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3.2、默认模式&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;此模式：开启拦截、关闭增强、开启dns优选、开启测速&lt;/li&gt; 
 &lt;li&gt;需要安装证书，通过修改sni直连访问github&lt;/li&gt; 
 &lt;li&gt;功能上包含特性1/2/3/4。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;四、 最佳实践&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;把dev-sidecar一直开着就行了（注意windows下开着ds重启电脑，会无法上网，重新打开ds即可。）&lt;/li&gt; 
 &lt;li&gt;建议遇到打开比较慢的国外网站，可以尝试将该域名添加到dns设置中（注意：被***封杀的无效）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;其他加速&lt;/h3&gt; 
&lt;h4&gt;1）git clone 加速&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;方式1：快捷复制：&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;开启脚本支持，然后在复制clone链接下方，即可复制到加速链接&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;方式2：&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;ol&gt; 
    &lt;li&gt;使用方式：用实际的名称替换 &lt;code&gt;{}&lt;/code&gt; 的内容，即可加速clone &lt;a href="https://hub.fastgit.org/%7Busername%7D/%7Breponame%7D.git"&gt;https://hub.fastgit.org/{username}/{reponame}.git&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;clone 出来的 remote "origin" 为fastgit的地址，需要手动改回来&lt;/li&gt; 
    &lt;li&gt;你也可以直接使用他们的clone加速工具 &lt;a href="https://github.com/FastGitORG/fgit-go"&gt;fgit-go&lt;/a&gt;&lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2）&lt;code&gt;github.com&lt;/code&gt; 的镜像网站（注意：部分镜像网站不能登录）&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;a href="https://hub.fastgit.org/"&gt;hub.fastgit.org&lt;/a&gt; （2024/11/18：这个好像失效了？）&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com.cnpmjs.org/"&gt;github.com.cnpmjs.org&lt;/a&gt; 这个很容易超限（2024/11/18：这个好像失效了？）&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://dgithub.xyz/"&gt;dgithub.xyz&lt;/a&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;五、api&lt;/h2&gt; 
&lt;h3&gt;5.1、拦截配置&lt;/h3&gt; 
&lt;p&gt;没有配置域名的不会拦截，其他根据配置进行拦截处理&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const intercepts = {
  // 要拦截的域名
  'github.com': {
    // 需要拦截url的正则表达式
    '/.*/.*/releases/download/': {
      // 拦截类型
      // redirect: url,          // 临时重定向（url会变，一些下载资源可以通过此方式配置）
      // proxy: url,             // 代理（url不会变，没有跨域问题）
      // abort: true,            // 取消请求（适用于被***封锁的资源，找不到替代，直接取消请求，快速失败，节省时间）
      // success: true,          // 直接返回成功请求（某些请求不想发出去，可以伪装成功返回）
      // cacheDays: 1,           // GET请求的使用缓存，单位：天（常用于一些静态资源）
      // options: true,          // OPTIONS请求直接返回成功请求（该功能存在一定风险，请谨慎使用）
      // optionsMaxAge: 2592000, // OPTIONS请求缓存时间，默认：2592000（一个月）
      redirect: 'download.fastgit.org'
    },
    '.*': {
      proxy: 'github.com',
      sni: 'baidu.com' // 修改sni，规避***握手拦截
    }
  },
  'ajax.googleapis.com': {
    '.*': {
      proxy: 'ajax.loli.net', // 代理请求，url不会变
      backup: ['ajax.proxy.ustclug.org'], // 备份，当前代理请求失败后，将会切换到备用地址
      test: 'ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js',
      replace: '/(.*)/xxx'// 当加速地址的链接和原链接不是完全相同时，可以通过正则表达式replace，此时proxy通过$1$2来重组url， proxy:'ajax.loli.net/xxx/$1'
    }
  },
  'clients*.google.com': {
    '.*': {
      abort: true // 取消请求，被***封锁的资源，找不到替代，直接取消请求，快速失败，节省时间
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;5.2、DNS优选配置&lt;/h3&gt; 
&lt;p&gt;某些域名解析出来的ip会无法访问，（比如api.github.com会被解析到新加坡的ip上，新加坡的服务器在上午挺好，到了晚上就卡死，基本不可用） 通过从dns上获取ip列表，切换不同的ip进行尝试，最终会挑选到一个最快的ip&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "dns": {
    "mapping": {
      "api.github.com": "cloudflare", // "解决push的时候需要输入密码的问题",
      "gist.github.com": "cloudflare", // 解决gist无法访问的问题
      "*.githubusercontent.com": "cloudflare" // 解决github头像经常下载不到的问题
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;注意：暂时只支持IPv4的解析&lt;/p&gt; 
&lt;h2&gt;六、问题排查&lt;/h2&gt; 
&lt;h3&gt;6.1、dev-sidecar的前两个开关没有处于打开状态&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;尝试将开关按钮手动打开&lt;/li&gt; 
 &lt;li&gt;请尝试右键dev-sidecar图标，点退出。再重新打开&lt;/li&gt; 
 &lt;li&gt;如果还不行，请将日志发送给作者&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;如果是mac系统，可能是下面的原因&lt;/p&gt; 
&lt;h4&gt;1）Mac系统使用时，首页的系统代理开关无法打开&lt;/h4&gt; 
&lt;p&gt;出现这个问题可能是没有开启系统代理命令的执行权限&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;networksetup -setwebproxy 'WiFi' 127.0.0.1 31181
#看是否有如下错误提示
** Error: Command requires admin privileges.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;如果有上面的错误提示，请尝试如下方法：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;取消访问偏好设置需要管理员密码 系统偏好设置—&amp;gt;安全性与隐私—&amp;gt; 通用—&amp;gt; 高级—&amp;gt; 访问系统范围的偏好设置需要输入管理员密码（取消勾选）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;6.2、没有加速效果&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;本应用仅支持https加速，请务必确认你访问的网站地址是https开头的&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;本应用仅支持https加速 请务必确认你访问的地址是https开头的 比如： &lt;a href="https://github.com/"&gt;https://github.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;检查浏览器是否装了什么插件，与ds有冲突&lt;/li&gt; 
 &lt;li&gt;检查是否安装了其他代理软件，与ds有冲突&lt;/li&gt; 
 &lt;li&gt;请确认浏览器的代理设置为使用IE代理/或者使用系统代理状态&lt;/li&gt; 
 &lt;li&gt;可以尝试换个浏览器试试&lt;/li&gt; 
 &lt;li&gt;请确认网络代理设置处于勾选状态 正常情况下ds在“系统代理”开关打开时，会自动设置系统代理。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;6.3、浏览器打开提示证书不受信任&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/crt-error.png" alt="" /&gt; 一般是证书安装位置不对，重新安装证书后，重启浏览器&lt;/p&gt; 
&lt;h4&gt;1）windows: 请确认证书已正确安装在“信任的根证书颁发机构”下&lt;/h4&gt; 
&lt;h4&gt;2）mac: 请确认证书已经被安装并已经设置信任&lt;/h4&gt; 
&lt;h4&gt;3）火狐浏览器：火狐浏览器不走系统的根证书，需要在选项中添加根证书&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;火狐浏览器-&amp;gt;选项-&amp;gt;隐私与安全-&amp;gt;证书-&amp;gt;查看证书&lt;/li&gt; 
 &lt;li&gt;证书颁发机构-&amp;gt;导入&lt;/li&gt; 
 &lt;li&gt;选择证书文件 &lt;code&gt;C:\Users(用户)\Administrator(你的账号)\.dev-sidecar\dev-sidecar.ca.crt&lt;/code&gt;（Mac或linux为 &lt;code&gt;~/.dev-sidecar&lt;/code&gt; 目录）&lt;/li&gt; 
 &lt;li&gt;勾选信任由此证书颁发机构来标识网站，确定即可&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;6.4、打开github显示连接超时&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;DevSidecar Warning: Error: www.github.com:443, 代理请求超时
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol&gt; 
 &lt;li&gt;检查测速界面github.com是否有ip ，如果没有ip，则可能是由于你的网络提供商封锁了dns服务商的ip（试试能否ping通：1.1.1.1 / 9.9.9.9 ）&lt;/li&gt; 
 &lt;li&gt;如果是安全模式，则是因为不稳定导致的，等一会再刷新试试&lt;/li&gt; 
 &lt;li&gt;如果是增强模式，则是由于访问人数过多，正常现象&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;6.5、查看日志是否有报错&lt;/h3&gt; 
&lt;p&gt;如果还是不行，请在下方加作者好友，将服务日志发送给作者进行分析 日志打开方式：加速服务-&amp;gt;右边日志按钮-&amp;gt;打开日志文件夹&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/log.png" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;6.6、某些原本可以打开的网站打不开了&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;可以尝试关闭pac&lt;/li&gt; 
 &lt;li&gt;可以将域名加入白名单&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;6.7、应用意外关闭导致没有网络了&lt;/h3&gt; 
&lt;p&gt;应用开启后会自动修改系统代理设置，正常退出会自动关闭系统代理 当应用意外关闭时，可能会因为没有将系统代理恢复，从而导致完全无法上网。&lt;/p&gt; 
&lt;p&gt;对于此问题有如下几种解决方案可供选择：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;重新打开应用即可（右键应用托盘图标可完全退出，将会正常关闭系统代理设置）&lt;/li&gt; 
 &lt;li&gt;如果应用被卸载了，此时需要&lt;a href="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/recover.md"&gt;手动关闭系统代理设置&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;如果你是因为开着ds的情况下重启电脑导致无法上网，你可以设置ds为开机自启&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;6.8、卸载应用后上不了网，git请求不了&lt;/h3&gt; 
&lt;p&gt;如果你在卸载应用前，没有正常退出app，就有可能无法上网。请按如下步骤操作恢复您的网络：&lt;/p&gt; 
&lt;p&gt;1、关闭系统代理设置，参见：&lt;a href="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/recover.md"&gt;手动关闭系统代理设置&lt;/a&gt; 2、执行下面的命令关闭git的代理设置（如果你开启过 &lt;code&gt;Git.exe代理&lt;/code&gt; 的开关）&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git config --global --unset http.proxy
git config --global --unset https.proxy
git config --global --unset http.sslVerify
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;3、执行下面的命令关闭npm的代理设置（如果你开启过npm加速的开关）&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm config delete proxy
npm config delete https-proxy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;七、在其他程序使用&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docmirror/dev-sidecar/master/doc/other.md#Java%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8"&gt;java程序使用&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;八、贡献代码&lt;/h2&gt; 
&lt;h3&gt;8.1、准备环境&lt;/h3&gt; 
&lt;h4&gt;1）安装 &lt;code&gt;nodejs&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;推荐安装 nodejs &lt;code&gt;22.x.x&lt;/code&gt; 的版本，其他版本未做测试&lt;/p&gt; 
&lt;h4&gt;2）安装 &lt;code&gt;pnpm&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;运行如下命令即可安装所需依赖：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm install -g pnpm --registry=https://registry.npmmirror.com

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;8.2、开发调试模式启动&lt;/h3&gt; 
&lt;p&gt;运行如下命令即可开发模式启动&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# 拉取代码
git clone https://github.com/docmirror/dev-sidecar

cd dev-sidecar

# 注意不要使用 `npm install` 来安装依赖，因为 `pnpm` 会自动安装依赖
pnpm install

# 运行DevSidecar
cd packages/gui
npm run electron

&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果electron依赖包下载不动，可以开启ds的npm加速&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;8.3、打包成可执行文件&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# 先执行上面的步骤，然后运行如下命令打包成可执行文件
npm run electron:build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;8.4、提交pr&lt;/h3&gt; 
&lt;p&gt;如果你想将你的修改贡献出来，请提交pr&lt;/p&gt; 
&lt;h2&gt;九、联系作者&lt;/h2&gt; 
&lt;p&gt;欢迎bug反馈，需求建议，技术交流等&lt;/p&gt; 
&lt;p&gt;1、 加群（请备注dev-sidecar，或简称DS）&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;QQ 1群：390691483，人数：500 / 500（满）&lt;/li&gt; 
 &lt;li&gt;QQ 2群：&lt;a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;amp;k=n4nksr4sji93vZtD5e8YEHRT6qbh6VyQ&amp;amp;authKey=XKBZnzmoiJrAFyOT4V%2BCrgX5c13ds59b84g%2FVRhXAIQd%2FlAiilsuwDRGWJct%2B570&amp;amp;noverify=0&amp;amp;group_code=667666069"&gt;667666069&lt;/a&gt;，人数：447 / 500&lt;/li&gt; 
 &lt;li&gt;QQ 3群：419807815，人数：500 / 500（满）&lt;/li&gt; 
 &lt;li&gt;QQ 4群：&lt;a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;amp;k=i_NCBB5f_Bkm2JsEV1tLs2TkQ79UlCID&amp;amp;authKey=nMsVJbJ6P%2FGNO7Q6vsVUadXRKnULUURwR8zvUZJnP3IgzhHYPhYdcBCHvoOh8vYr&amp;amp;noverify=0&amp;amp;group_code=438148299"&gt;438148299&lt;/a&gt;，人数：203 / 1000&lt;/li&gt; 
 &lt;li&gt;QQ 5群：&lt;a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;amp;k=nAWi_Rxj7mM4Unp5LMiatmUWhGimtbcB&amp;amp;authKey=aswmlWGjbt3GIWXtvjB2GJqqAKuv7hWjk6UBs3MTb%2Biyvr%2Fsbb1kA9CjF6sK7Hgg&amp;amp;noverify=0&amp;amp;group_code=767622917"&gt;767622917&lt;/a&gt;，人数：016 / 200（new）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;十、求star&lt;/h2&gt; 
&lt;p&gt;我的其他项目求star&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fast-crud/fast-crud"&gt;fast-crud&lt;/a&gt; : 开发crud快如闪电&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/certd/certd"&gt;certd&lt;/a&gt; : 让你的证书永不过期&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/handsfree-work/trident-sync"&gt;trident-sync&lt;/a&gt; : 二次开发项目同步升级工具&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;十一、感谢&lt;/h2&gt; 
&lt;p&gt;本项目使用lerna包管理工具&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://lerna.js.org/"&gt;&lt;img src="https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg?sanitize=true" alt="lerna" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;本项目参考如下开源项目&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wuchangming/node-mitmproxy"&gt;node-mitmproxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/justjavac/ReplaceGoogleCDN"&gt;ReplaceGoogleCDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;特别感谢&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://greasyfork.org/zh-CN/scripts/412245-github-%E5%A2%9E%E5%BC%BA-%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD"&gt;github增强油猴脚本&lt;/a&gt; 本项目部分加速功能完全复制该脚本。&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pluwen/china-domain-allowlist"&gt;中国域名白名单&lt;/a&gt;，本项目的系统代理排除域名功能中，使用了该白名单。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本项目部分加速资源由如下组织提供&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://fastgit.org/"&gt;FastGit UK&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>jgraph/drawio</title>
      <link>https://github.com/jgraph/drawio</link>
      <description>&lt;p&gt;draw.io is a JavaScript, client-side editor for general diagramming.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;draw.io, this project, is a configurable diagramming/whiteboarding visualization application. draw.io is jointly owned and developed by JGraph Ltd and draw.io AG.&lt;/p&gt; 
&lt;p&gt;As well as running this project, we run a production-grade deployment of the diagramming interface at &lt;a href="https://app.diagrams.net"&gt;https://app.diagrams.net&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The minified code authored by us in this repo is licensed under an Apache v2 license, but not all the sources to build those files are in this repo. This is not an open source project. We do not accept PRs.&lt;/p&gt; 
&lt;p&gt;The JGraph provided icons and diagram templates are licensed under the &lt;a href="https://creativecommons.org/licenses/by/4.0/"&gt;CC BY 4.0&lt;/a&gt;. Additional terms may also apply where the icons are originally defined by a third-party copyright holder. We have checked in all cases that the original license allows use in this project. Also see the terms for using the draw.io logo below.&lt;/p&gt; 
&lt;p&gt;Additional minified JavaScript files and Java libraries are used in this project. All of the licenses are deemed compatible with the Apache 2.0, nothing is GPL or AGPL, due diligence is performed on all third-party code.&lt;/p&gt; 
&lt;p&gt;We make no copyright claim on the content you create with this software, regardless of the copyright of individual icons used in such content.&lt;/p&gt; 
&lt;h2&gt;PRs and use of gen AI&lt;/h2&gt; 
&lt;p&gt;This entire project is written by humans only and written by the core team only. There have been various reasons for this historically, but the key reason from 2024 is that we have no way to determine whether PRs are also human written.&lt;/p&gt; 
&lt;h2&gt;Scope of the Project&lt;/h2&gt; 
&lt;p&gt;draw.io is a diagramming or whiteboarding application, depending on which theme is selected. It is not an SVG editing app, the SVG export is designed only for embedding in web pages, not for further editing in other tools.&lt;/p&gt; 
&lt;p&gt;The application is designed to be entirely as-is. draw.io is not suitable as a framework for building other products from, as source code is not provided. For this try either &lt;a href="https://github.com/tldraw/tldraw"&gt;Tldraw&lt;/a&gt; or &lt;a href="https://github.com/excalidraw/excalidraw"&gt;Excalidraw&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Note, in particular, we don't have support for collaborative editing in this project. If this is important, one of the projects above is likely a better choice.&lt;/p&gt; 
&lt;p&gt;If you are using a draw.io project/product and have issues or questions about the editor itself, the issue tracker and discussion in this GitHub project are likely a good place to look.&lt;/p&gt; 
&lt;h2&gt;Running&lt;/h2&gt; 
&lt;p&gt;One way to run draw.io is to fork this project, &lt;a href="https://help.github.com/categories/github-pages-basics/"&gt;publish the master branch to GitHub pages&lt;/a&gt; and the &lt;a href="https://jgraph.github.io/drawio/src/main/webapp/index.html"&gt;pages sites&lt;/a&gt; will have the full editor functionality (sans the integrations).&lt;/p&gt; 
&lt;p&gt;Another way is to use &lt;a href="https://github.com/jgraph/docker-drawio"&gt;the recommended Docker project&lt;/a&gt; or to download &lt;a href="https://get.diagrams.net"&gt;draw.io Desktop&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The full packaged .war of the client and servlets is built when the project is tagged and available on the &lt;a href="https://github.com/jgraph/draw.io/releases"&gt;releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported Browsers&lt;/h2&gt; 
&lt;p&gt;draw.io supports Chrome 123+, Firefox 120+, Safari 17.5+, Opera 109+, WebView Android 137+, Safari iOS 18.5+ and Edge 123+.&lt;/p&gt; 
&lt;h2&gt;Logo and trademark usage&lt;/h2&gt; 
&lt;p&gt;draw.io is a registered EU trademark, #018062448&lt;/p&gt; 
&lt;p&gt;Do not use the draw.io name or any draw.io logo in a way that suggests you are JGraph, your offering or project is by JGraph, or that JGraph is endorsing you or your offering or project.&lt;/p&gt; 
&lt;p&gt;Do not use any draw.io logo as the icon or logo for your business/organization, offering, project, domain name, social media account, or website.&lt;/p&gt; 
&lt;p&gt;Do not modify the permitted draw.io logos, including changing the color, dimensions, or combining with other words or design elements.&lt;/p&gt; 
&lt;p&gt;Do not use JGraph trademarks or logos without JGraph’s prior written permission.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>blackmatrix7/ios_rule_script</title>
      <link>https://github.com/blackmatrix7/ios_rule_script</link>
      <description>&lt;p&gt;分流规则、重写写规则及脚本。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rules And Scripts&lt;/h1&gt; 
&lt;h2&gt;前言&lt;/h2&gt; 
&lt;p&gt;各平台的分流规则、复写规则及自动化脚本。&lt;/p&gt; 
&lt;h2&gt;特别声明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布。&lt;/li&gt; 
 &lt;li&gt;编写本项目主要目的为学习和研究ES6，无法保证项目内容的合法性、准确性、完整性和有效性。&lt;/li&gt; 
 &lt;li&gt;本项目涉及的数据由使用的个人或组织自行填写，本项目不对数据内容负责，包括但不限于数据的真实性、准确性、合法性。使用本项目所造成的一切后果，与本项目的所有贡献者无关，由使用的个人或组织完全承担。&lt;/li&gt; 
 &lt;li&gt;本项目中涉及的第三方硬件、软件等，与本项目没有任何直接或间接的关系。本项目仅对部署和使用过程进行客观描述，不代表支持使用任何第三方硬件、软件。使用任何第三方硬件、软件，所造成的一切后果由使用的个人或组织承担，与本项目无关。&lt;/li&gt; 
 &lt;li&gt;本项目中所有内容只供学习和研究使用，不得将本项目中任何内容用于违反国家/地区/组织等的法律法规或相关规定的其他用途。&lt;/li&gt; 
 &lt;li&gt;所有基于本项目源代码，进行的任何修改，为其他个人或组织的自发行为，与本项目没有任何直接或间接的关系，所造成的一切后果亦与本项目无关。&lt;/li&gt; 
 &lt;li&gt;所有直接或间接使用本项目的个人和组织，应24小时内完成学习和研究，并及时删除本项目中的所有内容。如对本项目的功能有需求，应自行开发相关功能。&lt;/li&gt; 
 &lt;li&gt;本项目保留随时对免责声明进行补充或更改的权利，直接或间接使用本项目内容的个人或组织，视为接受本项目的特别声明。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;规则&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;我们并不生产规则，我们只是开源规则的搬运工。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;分流规则&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/rule"&gt;https://github.com/blackmatrix7/ios_rule_script/tree/master/rule&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;复写规则&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/rewrite"&gt;https://github.com/blackmatrix7/ios_rule_script/tree/master/rewrite&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;所有规则数据都来自互联网，感谢开源规则项目作者的辛勤付出。&lt;/p&gt; 
&lt;h2&gt;脚本&lt;/h2&gt; 
&lt;h3&gt;脚本说明&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;脚本&lt;/th&gt; 
   &lt;th&gt;介绍&lt;/th&gt; 
   &lt;th&gt;框架&lt;/th&gt; 
   &lt;th&gt;维护状态&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/smzdm"&gt;什么值得买&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;什么值得买任务和去广告&lt;/td&gt; 
   &lt;td&gt;MagicJS 2/3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/tieba"&gt;百度贴吧&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;带重试功能的贴吧签到，提高签到成功率&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/startup"&gt;开屏去广告&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;通过脚本去除缓存到本地的APP开屏广告&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/manmanbuy"&gt;慢慢买&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;每日自动签到&lt;/td&gt; 
   &lt;td&gt;MagicJS 2&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/dingdong"&gt;叮咚买菜&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;每日自动签到&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/famijia"&gt;Fa米家&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;每日自动签到&lt;/td&gt; 
   &lt;td&gt;MagicJS 2&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/luka"&gt;Luka&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;每日自动签到&lt;/td&gt; 
   &lt;td&gt;MagicJS 2&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/zheye"&gt;哲也同学&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;之乎者也&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/synology"&gt;Synology&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;群晖Download Station资源离线下载&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/applestore"&gt;AppleStore&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AppleStore 商品库存监控&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;暂停&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Quantumult X Gallery&lt;/h4&gt; 
&lt;p&gt;部分脚本已配置为Quantumult X Gallery。&lt;/p&gt; 
&lt;p&gt;地址： &lt;a href="https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/gallery.json"&gt;https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/gallery.json&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;BoxJS&lt;/h4&gt; 
&lt;p&gt;感谢 &lt;a href="https://github.com/chouchoui"&gt;@chouchoui&lt;/a&gt; 为本项目添加BoxJS的订阅。&lt;/p&gt; 
&lt;p&gt;地址：&lt;a href="https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/boxjs.json"&gt;https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/boxjs.json&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;外部资源&lt;/h3&gt; 
&lt;p&gt;项目中资源来自互联网上其他开源项目（具体以不同目录的说明为准），这里主要进行一些整合和备份。对于此类资源，无法对使用过程中出现的任何问题进行解答，您需要联系原作者。&lt;/p&gt; 
&lt;p&gt;地址：&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/external"&gt;https://github.com/blackmatrix7/ios_rule_script/tree/master/external&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;感谢&lt;/h1&gt; 
&lt;p&gt;以下排名不分先后&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/BaileyZyp"&gt;@BaileyZyp&lt;/a&gt; &lt;a href="https://github.com/Mazeorz"&gt;@Mazeorz&lt;/a&gt; &lt;a href="https://github.com/LuzMasonj"&gt;@LuzMasonj&lt;/a&gt; &lt;a href="https://github.com/chouchoui"&gt;@chouchoui&lt;/a&gt; &lt;a href="https://github.com/ypannnn"&gt;@ypannnn&lt;/a&gt; &lt;a href="https://github.com/echizenryoma"&gt;@echizenryoma&lt;/a&gt; &lt;a href="https://github.com/zirawell"&gt;@zirawell&lt;/a&gt; &lt;a href="https://github.com/urzz"&gt;@urzz&lt;/a&gt; &lt;a href="https://github.com/ASD-max"&gt;@ASD-max&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>github/awesome-copilot</title>
      <link>https://github.com/github/awesome-copilot</link>
      <description>&lt;p&gt;Community-contributed instructions, prompts, and configurations to help you make the most of GitHub Copilot.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🤖 Awesome GitHub Copilot Customizations&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://aka.ms/awesome-github-copilot"&gt;&lt;img src="https://img.shields.io/badge/Powered_by-Awesome_Copilot-blue?logo=githubcopilot" alt="Powered by Awesome Copilot" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/#contributors-"&gt;&lt;img src="https://img.shields.io/badge/all_contributors-86-orange.svg?style=flat-square" alt="All Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; 
&lt;p&gt;A curated collection of prompts, instructions, and chat modes to supercharge your GitHub Copilot experience across different domains, languages, and use cases.&lt;/p&gt; 
&lt;h2&gt;🚀 What is Awesome GitHub Copilot?&lt;/h2&gt; 
&lt;p&gt;This repository provides a comprehensive toolkit for enhancing GitHub Copilot with specialized:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.prompts.md"&gt;&lt;img src="https://img.shields.io/badge/Awesome-Prompts-blue?logo=githubcopilot" alt="Awesome Prompts" /&gt;&lt;/a&gt;&lt;/strong&gt; - Focused, task-specific prompts for generating code, documentation, and solving specific problems&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.instructions.md"&gt;&lt;img src="https://img.shields.io/badge/Awesome-Instructions-blue?logo=githubcopilot" alt="Awesome Instructions" /&gt;&lt;/a&gt;&lt;/strong&gt; - Comprehensive coding standards and best practices that apply to specific file patterns or entire projects&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.chatmodes.md"&gt;&lt;img src="https://img.shields.io/badge/Awesome-Chat_Modes-blue?logo=githubcopilot" alt="Awesome Chat Modes" /&gt;&lt;/a&gt;&lt;/strong&gt; - Specialized AI personas and conversation modes for different roles and contexts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.collections.md"&gt;&lt;img src="https://img.shields.io/badge/Awesome-Collections-blue?logo=githubcopilot" alt="Awesome Collections" /&gt;&lt;/a&gt;&lt;/strong&gt; - Curated collections of related prompts, instructions, and chat modes organized around specific themes and workflows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;MCP Server&lt;/h2&gt; 
&lt;p&gt;To make it easy to add these customizations to your editor, we have created a &lt;a href="https://developer.microsoft.com/blog/announcing-awesome-copilot-mcp-server"&gt;MCP Server&lt;/a&gt; that provides a prompt for searching and installing prompts, instructions, and chat modes directly from this repository. You'll need to have Docker installed and running to run the server.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://aka.ms/awesome-copilot/mcp/vscode"&gt;&lt;img src="https://img.shields.io/badge/VS_Code-Install-0098FF?logo=visualstudiocode&amp;amp;logoColor=white" alt="Install in VS Code" /&gt;&lt;/a&gt; &lt;a href="https://aka.ms/awesome-copilot/mcp/vscode-insiders"&gt;&lt;img src="https://img.shields.io/badge/VS_Code_Insiders-Install-24bfa5?logo=visualstudiocode&amp;amp;logoColor=white" alt="Install in VS Code Insiders" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Show MCP Server JSON configuration&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "servers": {
    "awesome-copilot": {
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "ghcr.io/microsoft/mcp-dotnet-samples/awesome-copilot:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;🔧 How to Use&lt;/h2&gt; 
&lt;h3&gt;🎯 Prompts&lt;/h3&gt; 
&lt;p&gt;Use the &lt;code&gt;/&lt;/code&gt; command in GitHub Copilot Chat to access prompts:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/awesome-copilot create-readme
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;📋 Instructions&lt;/h3&gt; 
&lt;p&gt;Instructions automatically apply to files based on their patterns and provide contextual guidance for coding standards, frameworks, and best practices.&lt;/p&gt; 
&lt;h3&gt;💭 Chat Modes&lt;/h3&gt; 
&lt;p&gt;Activate chat modes to get specialized assistance from AI personas tailored for specific roles like architects, DBAs, or security experts.&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Please see our &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt; for details on how to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add new prompts, instructions, or chat modes&lt;/li&gt; 
 &lt;li&gt;Improve existing content&lt;/li&gt; 
 &lt;li&gt;Report issues or suggest enhancements&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Contribution Guide&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Follow our file naming conventions and frontmatter requirements&lt;/li&gt; 
 &lt;li&gt;Test your contributions thoroughly&lt;/li&gt; 
 &lt;li&gt;Update the appropriate README tables&lt;/li&gt; 
 &lt;li&gt;Submit a pull request with a clear description&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;📖 Repository Structure&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;├── prompts/          # Task-specific prompts (.prompt.md)
├── instructions/     # Coding standards and best practices (.instructions.md)
├── chatmodes/        # AI personas and specialized modes (.chatmode.md)
├── collections/      # Curated collections of related items (.collection.yml)
└── scripts/          # Utility scripts for maintenance
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🌟 Getting Started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Browse the Collections&lt;/strong&gt;: Check out our comprehensive lists of &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.prompts.md"&gt;prompts&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.instructions.md"&gt;instructions&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.chatmodes.md"&gt;chat modes&lt;/a&gt;, and &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.collections.md"&gt;collections&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Add to your editor&lt;/strong&gt;: Click the "Install" button to install to VS Code, or copy the file contents for other editors.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start Using&lt;/strong&gt;: Copy prompts to use with &lt;code&gt;/&lt;/code&gt; commands, let instructions enhance your coding experience, or activate chat modes for specialized assistance.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;🛡️ Security &amp;amp; Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Security Issues&lt;/strong&gt;: Please see our &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support&lt;/strong&gt;: Check our &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/SUPPORT.md"&gt;Support Guide&lt;/a&gt; for getting help&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;: We follow the &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/CODE_OF_CONDUCT.md"&gt;Contributor Covenant&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎯 Why Use Awesome GitHub Copilot?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Productivity&lt;/strong&gt;: Pre-built prompts and instructions save time and provide consistent results&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Best Practices&lt;/strong&gt;: Benefit from community-curated coding standards and patterns&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Specialized Assistance&lt;/strong&gt;: Access expert-level guidance through specialized chat modes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Continuous Learning&lt;/strong&gt;: Stay updated with the latest patterns and practices across technologies&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Ready to supercharge your coding experience?&lt;/strong&gt; Start exploring our &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.prompts.md"&gt;prompts&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.instructions.md"&gt;instructions&lt;/a&gt;, and &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/README.chatmodes.md"&gt;chat modes&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;Thanks goes to these wonderful people (&lt;a href="https://allcontributors.org/docs/en/emoji-key"&gt;emoji key&lt;/a&gt;):&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.aaron-powell.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/434140?v=4?s=100" width="100px;" alt="Aaron Powell" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aaron Powell&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=aaronpowell" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/#maintenance-aaronpowell" title="Maintenance"&gt;🚧&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/#projectManagement-aaronpowell" title="Project Management"&gt;📆&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/github/awesome-copilot/main/#promotion-aaronpowell" title="Promotion"&gt;📣&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://mubaidr.js.org/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2222702?v=4?s=100" width="100px;" alt="Muhammad Ubaid Raza" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Muhammad Ubaid Raza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=mubaidr" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://digitarald.de/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8599?v=4?s=100" width="100px;" alt="Harald Kirschner" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Harald Kirschner&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=digitarald" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mbianchidev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37507190?v=4?s=100" width="100px;" alt="Matteo Bianchi" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Matteo Bianchi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=mbianchidev" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/AungMyoKyaw"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9404824?v=4?s=100" width="100px;" alt="Aung Myo Kyaw" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aung Myo Kyaw&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=AungMyoKyaw" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://danielscottraynsford.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7589164?v=4?s=100" width="100px;" alt="Daniel Scott-Raynsford" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Scott-Raynsford&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=PlagueHO" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/burkeholland"&gt;&lt;img src="https://avatars.githubusercontent.com/u/686963?v=4?s=100" width="100px;" alt="Burke Holland" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Burke Holland&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=burkeholland" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://calva.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30010?v=4?s=100" width="100px;" alt="Peter Strömberg" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Peter Strömberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=PEZ" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.devprodlogs.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51440732?v=4?s=100" width="100px;" alt="Daniel Meppiel" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Meppiel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=danielmeppiel" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://montemagno.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1676321?v=4?s=100" width="100px;" alt="James Montemagno" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;James Montemagno&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=jamesmontemagno" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/VamshiVerma"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21999324?v=4?s=100" width="100px;" alt="Vamshi Verma" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vamshi Verma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=VamshiVerma" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sinedied"&gt;&lt;img src="https://avatars.githubusercontent.com/u/593151?v=4?s=100" width="100px;" alt="Yohan Lasorsa" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yohan Lasorsa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=sinedied" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/OrenMe"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5461862?v=4?s=100" width="100px;" alt="Oren Me" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Oren Me&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=OrenMe" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mjrousos"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10077254?v=4?s=100" width="100px;" alt="Mike Rousos" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mike Rousos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=mjrousos" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/guiopen"&gt;&lt;img src="https://avatars.githubusercontent.com/u/94094527?v=4?s=100" width="100px;" alt="Guilherme do Amaral Alves " /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Guilherme do Amaral Alves &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=guiopen" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.buymeacoffee.com/troystaylor"&gt;&lt;img src="https://avatars.githubusercontent.com/u/44444967?v=4?s=100" width="100px;" alt="Troy Simeon Taylor" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Troy Simeon Taylor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=troystaylor" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.linkedin.com/in/ambilykk/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10282550?v=4?s=100" width="100px;" alt="Ambily" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ambily&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=ambilykk" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://tgrall.github.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/541250?v=4?s=100" width="100px;" alt="Tugdual Grall" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tugdual Grall&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=tgrall" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/TianqiZhang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5326582?v=4?s=100" width="100px;" alt="Tianqi Zhang" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tianqi Zhang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=TianqiZhang" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/shubham070"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5480589?v=4?s=100" width="100px;" alt="Shubham Gaikwad" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Shubham Gaikwad&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=shubham070" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sdolgin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/576449?v=4?s=100" width="100px;" alt="Saul Dolgin" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Saul Dolgin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=sdolgin" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/nullchimp"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58362593?v=4?s=100" width="100px;" alt="NULLchimp" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;NULLchimp&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=nullchimp" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/MattVevang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20714898?v=4?s=100" width="100px;" alt="Matt Vevang" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Matt Vevang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=MattVevang" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://devkimchi.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1538528?v=4?s=100" width="100px;" alt="Justin Yoo" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Justin Yoo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=justinyoo" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://hachyderm.io/@0gis0"&gt;&lt;img src="https://avatars.githubusercontent.com/u/175379?v=4?s=100" width="100px;" alt="Gisela Torres" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Gisela Torres&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=0GiS0" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://debbie.codes/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13063165?v=4?s=100" width="100px;" alt="Debbie O'Brien" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Debbie O'Brien&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=debs-obrien" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/agreaves-ms"&gt;&lt;img src="https://avatars.githubusercontent.com/u/111466195?v=4?s=100" width="100px;" alt="Allen Greaves" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Allen Greaves&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=agreaves-ms" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/AmeliaRose802"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26167931?v=4?s=100" width="100px;" alt="Amelia Payne" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Amelia Payne&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=AmeliaRose802" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/SebastienDegodez"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2349146?v=4?s=100" width="100px;" alt="Sebastien DEGODEZ" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sebastien DEGODEZ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=SebastienDegodez" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://graef.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19261257?v=4?s=100" width="100px;" alt="Sebastian Gräf" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sebastian Gräf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=segraef" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://9ssi7.dev/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/76786120?v=4?s=100" width="100px;" alt="Salih İbrahimbaş" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Salih İbrahimbaş&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=9ssi7" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/inquinity"&gt;&lt;img src="https://avatars.githubusercontent.com/u/406234?v=4?s=100" width="100px;" alt="Robert Altman" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Robert Altman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=inquinity" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/pertrai1"&gt;&lt;img src="https://avatars.githubusercontent.com/u/442374?v=4?s=100" width="100px;" alt="Rob Simpson" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rob Simpson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=pertrai1" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://ricksm.it/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7207783?v=4?s=100" width="100px;" alt="Rick Smit" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rick Smit&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=ricksmit3000" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://dotneteers.net/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28162552?v=4?s=100" width="100px;" alt="Peter Smulovics" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Peter Smulovics&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=psmulovics" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/pelikhan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4175913?v=4?s=100" width="100px;" alt="Peli de Halleux" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Peli de Halleux&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=pelikhan" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.paulomorgado.net/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/470455?v=4?s=100" width="100px;" alt="Paulo Morgado" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Paulo Morgado&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=paulomorgado" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://nickyt.co/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/833231?v=4?s=100" width="100px;" alt="Nick Taylor" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nick Taylor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=nickytonline" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mikeparker104"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12763221?v=4?s=100" width="100px;" alt="Mike Parker" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mike Parker&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=mikeparker104" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mikekistler"&gt;&lt;img src="https://avatars.githubusercontent.com/u/85643503?v=4?s=100" width="100px;" alt="Mike Kistler" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mike Kistler&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=mikekistler" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://a11ysupport.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/498678?v=4?s=100" width="100px;" alt="Michael Fairchild" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Michael Fairchild&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=mfairchild365" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.linkedin.com/in/michael-volz/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/129928?v=4?s=100" width="100px;" alt="Michael A. Volz (Flynn)" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Michael A. Volz (Flynn)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=michaelvolz" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/4regab"&gt;&lt;img src="https://avatars.githubusercontent.com/u/178603515?v=4?s=100" width="100px;" alt="4regab" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;4regab&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=4regab" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/TheovanKraay"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24420698?v=4?s=100" width="100px;" alt="Theo van Kraay" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Theo van Kraay&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=TheovanKraay" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://glsauto.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/132710946?v=4?s=100" width="100px;" alt="Troy Witthoeft (glsauto)" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Troy Witthoeft (glsauto)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=twitthoeft-gls" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/iletai"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26614687?v=4?s=100" width="100px;" alt="Tài Lê" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tài Lê&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=iletai" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://tinyurl.com/3p5j9mwe"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9591887?v=4?s=100" width="100px;" alt="Udaya Veeramreddygari" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Udaya Veeramreddygari&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=udayakumarreddyv" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://bio.warengonzaga.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15052701?v=4?s=100" width="100px;" alt="Waren Gonzaga" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Waren Gonzaga&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=warengonzaga" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://blog.miniasp.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/88981?v=4?s=100" width="100px;" alt="Will 保哥" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Will 保哥&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=doggy8088" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/yukiomoto"&gt;&lt;img src="https://avatars.githubusercontent.com/u/38450410?v=4?s=100" width="100px;" alt="Yuki Omoto" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yuki Omoto&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=yukiomoto" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/hueanmy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20430626?v=4?s=100" width="100px;" alt="Meii" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Meii&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=hueanmy" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/samqbush"&gt;&lt;img src="https://avatars.githubusercontent.com/u/74389839?v=4?s=100" width="100px;" alt="samqbush" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;samqbush&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=samqbush" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sdanzo-hrb"&gt;&lt;img src="https://avatars.githubusercontent.com/u/136493100?v=4?s=100" width="100px;" alt="sdanzo-hrb" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;sdanzo-hrb&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=sdanzo-hrb" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/voidfnc"&gt;&lt;img src="https://avatars.githubusercontent.com/u/194750710?v=4?s=100" width="100px;" alt="voidfnc" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;voidfnc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=voidfnc" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/webreidi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/55603905?v=4?s=100" width="100px;" alt="Wendy Breiding" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Wendy Breiding&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=webreidi" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/zooav"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12625412?v=4?s=100" width="100px;" alt="Ankur Sharma" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ankur Sharma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=zooav" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://jianminhuang.cc/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6296280?v=4?s=100" width="100px;" alt="黃健旻 Vincent Huang" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;黃健旻 Vincent Huang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=Jian-Min-Huang" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/dgh06175"&gt;&lt;img src="https://avatars.githubusercontent.com/u/77305722?v=4?s=100" width="100px;" alt="이상현" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;이상현&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=dgh06175" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/abdidaudpropel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51310019?v=4?s=100" width="100px;" alt="Abdi Daud" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Abdi Daud&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=abdidaudpropel" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://www.senseof.tech/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50712277?v=4?s=100" width="100px;" alt="Adrien Clerbois" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Adrien Clerbois&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=AClerbois" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://www.qreate.it/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1868590?v=4?s=100" width="100px;" alt="Alan Sprecacenere" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alan Sprecacenere&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=tegola" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://asilva.dev/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2493377?v=4?s=100" width="100px;" alt="André Silva" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;André Silva&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=askpt" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://javaetmoi.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/838318?v=4?s=100" width="100px;" alt="Antoine Rey" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Antoine Rey&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=arey" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/artemsaveliev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15679218?v=4?s=100" width="100px;" alt="Artem Saveliev" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Artem Saveliev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=artemsaveliev" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://brunoborges.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/129743?v=4?s=100" width="100px;" alt="Bruno Borges" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Bruno Borges&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=brunoborges" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.peug.net/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3845786?v=4?s=100" width="100px;" alt="Christophe Peugnet" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Christophe Peugnet&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=tossnet" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.movinglive.ca/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14792628?v=4?s=100" width="100px;" alt="Chtive" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Chtive&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=MovingLive" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/craigbekker"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1115912?v=4?s=100" width="100px;" alt="Craig Bekker" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Craig Bekker&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=craigbekker" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/breakid"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1446918?v=4?s=100" width="100px;" alt="Dan" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=breakid" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ewega"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26189114?v=4?s=100" width="100px;" alt="Eldrick Wega" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Eldrick Wega&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=ewega" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.felixarjuna.dev/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/79026094?v=4?s=100" width="100px;" alt="Felix Arjuna" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Felix Arjuna&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=felixarjuna" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/feapaydin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19946639?v=4?s=100" width="100px;" alt="Furkan Enes" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Furkan Enes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=feapaydin" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://learn.microsoft.com/dotnet"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24882762?v=4?s=100" width="100px;" alt="Genevieve Warren" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Genevieve Warren&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=gewarren" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/geoder101"&gt;&lt;img src="https://avatars.githubusercontent.com/u/145904?v=4?s=100" width="100px;" alt="George Dernikos" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;George Dernikos&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=geoder101" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/giomartinsdev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/125399281?v=4?s=100" width="100px;" alt="Giovanni de Almeida Martins" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Giovanni de Almeida Martins&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=giomartinsdev" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Ioana37"&gt;&lt;img src="https://avatars.githubusercontent.com/u/69301842?v=4?s=100" width="100px;" alt="Ioana A" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ioana A&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=Ioana37" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/nohwnd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5735905?v=4?s=100" width="100px;" alt="Jakub Jareš" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jakub Jareš&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=nohwnd" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://joe-watkins.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3695795?v=4?s=100" width="100px;" alt="Joe Watkins" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Joe Watkins&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=joe-watkins" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://johnpapa.net/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1202528?v=4?s=100" width="100px;" alt="John Papa" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;John Papa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=johnpapa" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://www.sugbo4j.co.nz/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15100839?v=4?s=100" width="100px;" alt="Joseph Gonzales" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Joseph Gonzales&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=josephgonzales01" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://digio.es/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/173672918?v=4?s=100" width="100px;" alt="José Antonio Garrido" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;José Antonio Garrido&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=josegarridodigio" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Ranrar"&gt;&lt;img src="https://avatars.githubusercontent.com/u/95967772?v=4?s=100" width="100px;" alt="Kim Skov Rasmussen" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kim Skov Rasmussen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=Ranrar" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/whiteken"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20211937?v=4?s=100" width="100px;" alt="Kenny White" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kenny White&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=whiteken" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/LouellaCreemers"&gt;&lt;img src="https://avatars.githubusercontent.com/u/46204894?v=4?s=100" width="100px;" alt="Louella Creemers" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Louella Creemers&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=LouellaCreemers" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://linktr.ee/lukemurray"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24467442?v=4?s=100" width="100px;" alt="Luke Murray" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Luke Murray&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=lukemurraynz" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://marknoble.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3819700?v=4?s=100" width="100px;" alt="Mark Noble" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mark Noble&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/github/awesome-copilot/commits?author=marknoble" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tfoot&gt; 
  &lt;tr&gt; 
   &lt;td align="center" size="13px" colspan="7"&gt; &lt;img src="https://raw.githubusercontent.com/all-contributors/all-contributors-cli/1b8533af435da9854653492b1327a23a4dbd0a10/assets/logo-small.svg?sanitize=true" /&gt; &lt;a href="https://all-contributors.js.org/docs/en/bot/usage"&gt;Add your contributions&lt;/a&gt;  &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tfoot&gt; 
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;This project follows the &lt;a href="https://github.com/all-contributors/all-contributors"&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind welcome!&lt;/p&gt; 
&lt;h2&gt;📚 Additional Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/copilot/copilot-customization"&gt;VS Code Copilot Customization Documentation&lt;/a&gt; - Official Microsoft documentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/copilot/chat/copilot-chat"&gt;GitHub Copilot Chat Documentation&lt;/a&gt; - Complete chat feature guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/copilot/chat/chat-modes"&gt;Custom Chat Modes&lt;/a&gt; - Advanced chat configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.visualstudio.com/docs/getstarted/settings"&gt;VS Code Settings&lt;/a&gt; - General VS Code configuration guide&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;™️ Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href="https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general"&gt;Microsoft's Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>axios/axios</title>
      <link>https://github.com/axios/axios</link>
      <description>&lt;p&gt;Promise based HTTP client for the browser and node.js&lt;/p&gt;&lt;hr&gt;&lt;h3 align="center"&gt; 🥇 Gold sponsors &lt;br /&gt; &lt;/h3&gt; 
&lt;table align="center" width="100%"&gt;
 &lt;tbody&gt;
  &lt;tr width="33.333333333333336%"&gt;
   &lt;td align="center" width="33.333333333333336%"&gt; &lt;a href="https://dev.intra-mart.jp/?utm_source=axios&amp;amp;utm_medium=sponsorlist&amp;amp;utm_campaign=sponsorship" style="padding: 10px; display: inline-block" target="_blank"&gt; &lt;img width="48px" height="47px" src="https://axios-http.com/assets/sponsors/opencollective/948009b39c308b39f58c5d1245abd22512adc37b.png" alt="intra-mart" /&gt; &lt;/a&gt; &lt;p align="center" title="[1ページ目] CookBook の記事 intra-mart Developer Portal "&gt;[1ページ目] CookBook の記事 intra-mart Developer Portal&lt;/p&gt; &lt;p align="center"&gt; &lt;a href="https://dev.intra-mart.jp/?utm_source=axios&amp;amp;utm_medium=readme_sponsorlist&amp;amp;utm_campaign=sponsorship" target="_blank"&gt;&lt;b&gt;dev.intra-mart.jp&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &lt;/td&gt;
   &lt;td align="center" width="33.333333333333336%"&gt; &lt;a href="https://stytch.com/?utm_source=oss-sponsorship&amp;amp;utm_medium=paid_sponsorship&amp;amp;utm_content=website-link&amp;amp;utm_campaign=axios-http" style="padding: 10px; display: inline-block" target="_blank"&gt; 
     &lt;picture&gt; 
      &lt;source width="200px" height="38px" media="(prefers-color-scheme: dark)" srcset="https://axios-http.com/assets/sponsors/stytch_white.png" /&gt; 
      &lt;img width="200px" height="38px" src="https://axios-http.com/assets/sponsors/stytch.png" alt="Stytch" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;p align="center" title="API-first authentication, authorization, and fraud prevention"&gt;API-first authentication, authorization, and fraud prevention&lt;/p&gt; &lt;p align="center"&gt; &lt;a href="https://stytch.com/?utm_source=oss-sponsorship&amp;amp;utm_medium=paid_sponsorship&amp;amp;utm_content=website-link&amp;amp;utm_campaign=axios-http" target="_blank"&gt;&lt;b&gt;Website&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://stytch.com/docs?utm_source=oss-sponsorship&amp;amp;utm_medium=paid_sponsorship&amp;amp;utm_content=docs-link&amp;amp;utm_campaign=axios-http" target="_blank"&gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://github.com/stytchauth/stytch-node?utm_source=oss-sponsorship&amp;amp;utm_medium=paid_sponsorship&amp;amp;utm_content=node-sdk&amp;amp;utm_campaign=axios-http" target="_blank"&gt;&lt;b&gt;Node.js&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &lt;/td&gt;
   &lt;td align="center" width="33.333333333333336%"&gt; &lt;a href="https://www.principal.com/about-us?utm_source=axios&amp;amp;utm_medium=sponsorlist&amp;amp;utm_campaign=sponsorship" style="padding: 10px; display: inline-block" target="_blank"&gt; &lt;img width="133px" height="43px" src="https://axios-http.com/assets/sponsors/principal.svg?sanitize=true" alt="Principal Financial Group" /&gt; &lt;/a&gt; &lt;p align="center" title="We’re bound by one common purpose: to give you the financial tools, resources and information you need to live your best life."&gt;We’re bound by one common purpose: to give you the financial tools, resources and information you ne...&lt;/p&gt; &lt;p align="center"&gt; &lt;a href="https://www.principal.com/about-us?utm_source=axios&amp;amp;utm_medium=readme_sponsorlist&amp;amp;utm_campaign=sponsorship" target="_blank"&gt;&lt;b&gt;www.principal.com&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr width="33.333333333333336%"&gt;
   &lt;td align="center" width="33.333333333333336%"&gt; &lt;a href="https://twicsy.com/buy-instagram-followers?utm_source=axios&amp;amp;utm_medium=sponsorlist&amp;amp;utm_campaign=sponsorship" style="padding: 10px; display: inline-block" target="_blank"&gt; &lt;img width="85px" height="70px" src="https://axios-http.com/assets/sponsors/opencollective/dfa9670ad5e66eea17315332453c7f4e3a3b5905.png" alt="Buy Instagram Followers Twicsy" /&gt; &lt;/a&gt; &lt;p align="center" title="Buy real Instagram followers from Twicsy starting at only $2.97. Twicsy has been voted the best site to buy followers from the likes of US Magazine."&gt;Buy real Instagram followers from Twicsy starting at only $2.97. Twicsy has been voted the best site...&lt;/p&gt; &lt;p align="center"&gt; &lt;a href="https://twicsy.com/buy-instagram-followers?utm_source=axios&amp;amp;utm_medium=readme_sponsorlist&amp;amp;utm_campaign=sponsorship" target="_blank"&gt;&lt;b&gt;twicsy.com&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &lt;/td&gt;
   &lt;td align="center" width="33.333333333333336%"&gt; &lt;a href="https://www.descope.com/?utm_source=axios&amp;amp;utm_medium=referral&amp;amp;utm_campaign=axios-oss-sponsorship" style="padding: 10px; display: inline-block" target="_blank"&gt; 
     &lt;picture&gt; 
      &lt;source width="200px" height="52px" media="(prefers-color-scheme: dark)" srcset="https://axios-http.com/assets/sponsors/descope_white.png" /&gt; 
      &lt;img width="200px" height="52px" src="https://axios-http.com/assets/sponsors/descope.png" alt="Descope" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;p align="center" title="Hi, we're Descope! We are building something in the authentication space for app developers and can’t wait to place it in your hands."&gt;Hi, we're Descope! We are building something in the authentication space for app developers and...&lt;/p&gt; &lt;p align="center"&gt; &lt;a href="https://www.descope.com/?utm_source=axios&amp;amp;utm_medium=referral&amp;amp;utm_campaign=axios-oss-sponsorship" target="_blank"&gt;&lt;b&gt;Website&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://docs.descope.com/?utm_source=axios&amp;amp;utm_medium=referral&amp;amp;utm_campaign=axios-oss-sponsorship" target="_blank"&gt;&lt;b&gt;Docs&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://www.descope.com/community?utm_source=axios&amp;amp;utm_medium=referral&amp;amp;utm_campaign=axios-oss-sponsorship" target="_blank"&gt;&lt;b&gt;Community&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &lt;/td&gt;
   &lt;td align="center" width="33.333333333333336%"&gt; &lt;a href="https://route4me.com/?utm_source=axios&amp;amp;utm_medium=sponsorlist&amp;amp;utm_campaign=sponsorship" style="padding: 10px; display: inline-block" target="_blank"&gt; 
     &lt;picture&gt; 
      &lt;source width="200px" height="51px" media="(prefers-color-scheme: dark)" srcset="https://axios-http.com/assets/sponsors/route4me_white.png" /&gt; 
      &lt;img width="200px" height="51px" src="https://axios-http.com/assets/sponsors/route4me.png" alt="Route4Me" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;p align="center" title="Best Route Planning And Route Optimization Software"&gt;Best Route Planning And Route Optimization Software&lt;/p&gt; &lt;p align="center"&gt; &lt;a href="https://route4me.com/platform/route-optimization-software?utm_source=axios&amp;amp;utm_medium=readme_sponsorlist&amp;amp;utm_campaign=sponsorship" target="_blank"&gt;&lt;b&gt;Explore&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://route4me.com/platform/marketplace/pricing?utm_source=axios&amp;amp;utm_medium=readme_sponsorlist&amp;amp;utm_campaign=sponsorship" target="_blank"&gt;&lt;b&gt;Free Trial&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://route4me.com/contact?utm_source=axios&amp;amp;utm_medium=readme_sponsorlist&amp;amp;utm_campaign=sponsorship" target="_blank"&gt;&lt;b&gt;Contact&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr width="33.333333333333336%"&gt;
   &lt;td align="center" width="33.333333333333336%"&gt; &lt;a href="https://buzzoid.com/buy-instagram-followers/?utm_source=axios&amp;amp;utm_medium=sponsorlist&amp;amp;utm_campaign=sponsorship" style="padding: 10px; display: inline-block" target="_blank"&gt; &lt;img width="62px" height="70px" src="https://axios-http.com/assets/sponsors/opencollective/e1625cb54e10ee40180c99d1495a462e9d6664a4.png" alt="Buzzoid - Buy Instagram Followers" /&gt; &lt;/a&gt; &lt;p align="center" title="At Buzzoid, you can buy Instagram followers quickly, safely, and easily with just a few clicks. Rated world's #1 IG service since 2012."&gt;At Buzzoid, you can buy Instagram followers quickly, safely, and easily with just a few clicks. Rate...&lt;/p&gt; &lt;p align="center"&gt; &lt;a href="https://buzzoid.com/buy-instagram-followers/?utm_source=axios&amp;amp;utm_medium=readme_sponsorlist&amp;amp;utm_campaign=sponsorship" target="_blank"&gt;&lt;b&gt;buzzoid.com&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &lt;/td&gt;
   &lt;td align="center" width="33.333333333333336%"&gt; &lt;a href="https://www.famety.net/?utm_source=axios&amp;amp;utm_medium=sponsorlist&amp;amp;utm_campaign=sponsorship" style="padding: 10px; display: inline-block" target="_blank"&gt; &lt;img width="70px" height="70px" src="https://axios-http.com/assets/sponsors/opencollective/56645c65d4bad0ab84265e02430d19d64afde927.png" alt="Famety - Buy Instagram Followers" /&gt; &lt;/a&gt; &lt;p align="center" title="At Famety, you can grow your social media following quickly, safely, and easily with just a few clicks. Rated the world’s #1 social media service since 2013."&gt;At Famety, you can grow your social media following quickly, safely, and easily with just a few clic...&lt;/p&gt; &lt;p align="center"&gt; &lt;a href="https://www.famety.net/?utm_source=axios&amp;amp;utm_medium=readme_sponsorlist&amp;amp;utm_campaign=sponsorship" target="_blank"&gt;&lt;b&gt;www.famety.net&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &lt;/td&gt;
   &lt;td align="center" width="33.333333333333336%"&gt; &lt;a href="https://poprey.com/?utm_source=axios&amp;amp;utm_medium=sponsorlist&amp;amp;utm_campaign=sponsorship" style="padding: 10px; display: inline-block" target="_blank"&gt; &lt;img width="70px" height="70px" src="https://axios-http.com/assets/sponsors/opencollective/e699ec99f7df3a203ddbc49d3c7712a907e628ea.png" alt="Poprey - Buy Instagram Likes" /&gt; &lt;/a&gt; &lt;p align="center" title="Buy Instagram Likes"&gt;Buy Instagram Likes&lt;/p&gt; &lt;p align="center"&gt; &lt;a href="https://poprey.com/?utm_source=axios&amp;amp;utm_medium=readme_sponsorlist&amp;amp;utm_campaign=sponsorship" target="_blank"&gt;&lt;b&gt;poprey.com&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr width="33.333333333333336%"&gt;
   &lt;td align="center" width="33.333333333333336%"&gt; &lt;a href="https://ssmarket.net/buy-youtube-subscribers?utm_source=axios&amp;amp;utm_medium=sponsorlist&amp;amp;utm_campaign=sponsorship" style="padding: 10px; display: inline-block" target="_blank"&gt; &lt;img width="70px" height="70px" src="https://axios-http.com/assets/sponsors/opencollective/0845614102b0c6602707ca2983de05a0098faad4.png" alt="Buy Youtube Subscribers" /&gt; &lt;/a&gt; &lt;p align="center" title="SS Market offers professional social media services that rapidly increase your YouTube subscriber count, elevating your channel to a powerful position."&gt;SS Market offers professional social media services that rapidly increase your YouTube subscriber co...&lt;/p&gt; &lt;p align="center"&gt; &lt;a href="https://ssmarket.net/buy-youtube-subscribers?utm_source=axios&amp;amp;utm_medium=readme_sponsorlist&amp;amp;utm_campaign=sponsorship" target="_blank"&gt;&lt;b&gt;ssmarket.net&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; &lt;/td&gt;
   &lt;td align="center" width="33.333333333333336%"&gt; &lt;a href="https://opencollective.com/axios/contribute" target="_blank"&gt;💜 Become a sponsor&lt;/a&gt; &lt;/td&gt;
   &lt;td align="center" width="33.333333333333336%"&gt; &lt;a href="https://opencollective.com/axios/contribute" target="_blank"&gt;💜 Become a sponsor&lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!--&lt;div&gt;marker&lt;/div&gt;--&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://axios-http.com"&gt;&lt;img src="https://axios-http.com/assets/logo.svg?sanitize=true" alt="Axios" /&gt;&lt;/a&gt;
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt;Promise based HTTP client for the browser and node.js&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://axios-http.com/"&gt;&lt;b&gt;Website&lt;/b&gt;&lt;/a&gt; • &lt;a href="https://axios-http.com/docs/intro"&gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://www.npmjs.org/package/axios"&gt;&lt;img src="https://img.shields.io/npm/v/axios.svg?style=flat-square" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://cdnjs.com/libraries/axios"&gt;&lt;img src="https://img.shields.io/cdnjs/v/axios.svg?style=flat-square" alt="CDNJS" /&gt;&lt;/a&gt; &lt;a href="https://github.com/axios/axios/actions/workflows/ci.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/axios/axios/ci.yml?branch=v1.x&amp;amp;label=CI&amp;amp;logo=github&amp;amp;style=flat-square" alt="Build status" /&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/axios/axios"&gt;&lt;img src="https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&amp;amp;style=flat-square" alt="Gitpod Ready-to-Code" /&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/mzabriskie/axios"&gt;&lt;img src="https://img.shields.io/coveralls/mzabriskie/axios.svg?style=flat-square" alt="code coverage" /&gt;&lt;/a&gt; &lt;a href="https://packagephobia.now.sh/result?p=axios"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https://packagephobia.com/v2/api.json?p=axios&amp;amp;query=$.install.pretty&amp;amp;label=install%20size&amp;amp;style=flat-square" alt="install size" /&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/package/axios@latest"&gt;&lt;img src="https://img.shields.io/bundlephobia/minzip/axios?style=flat-square" alt="npm bundle size" /&gt;&lt;/a&gt; &lt;a href="https://npm-stat.com/charts.html?package=axios"&gt;&lt;img src="https://img.shields.io/npm/dm/axios.svg?style=flat-square" alt="npm downloads" /&gt;&lt;/a&gt; &lt;a href="https://gitter.im/mzabriskie/axios"&gt;&lt;img src="https://img.shields.io/gitter/room/mzabriskie/axios.svg?style=flat-square" alt="gitter chat" /&gt;&lt;/a&gt; &lt;a href="https://www.codetriage.com/axios/axios"&gt;&lt;img src="https://www.codetriage.com/axios/axios/badges/users.svg?sanitize=true" alt="code helpers" /&gt;&lt;/a&gt; &lt;a href="https://snyk.io/test/npm/axios"&gt;&lt;img src="https://snyk.io/test/npm/axios/badge.svg?sanitize=true" alt="Known Vulnerabilities" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#browser-support"&gt;Browser Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#installing"&gt;Installing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#package-manager"&gt;Package manager&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#cdn"&gt;CDN&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#example"&gt;Example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#axios-api"&gt;Axios API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#request-method-aliases"&gt;Request method aliases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#concurrency-deprecated"&gt;Concurrency 👎&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#creating-an-instance"&gt;Creating an instance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#instance-methods"&gt;Instance methods&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#request-config"&gt;Request Config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#response-schema"&gt;Response Schema&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#config-defaults"&gt;Config Defaults&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#global-axios-defaults"&gt;Global axios defaults&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#custom-instance-defaults"&gt;Custom instance defaults&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#config-order-of-precedence"&gt;Config order of precedence&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#interceptors"&gt;Interceptors&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#multiple-interceptors"&gt;Multiple Interceptors&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#handling-errors"&gt;Handling Errors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#cancellation"&gt;Cancellation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#abortcontroller"&gt;AbortController&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#canceltoken-deprecated"&gt;CancelToken 👎&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#using-applicationx-www-form-urlencoded-format"&gt;Using application/x-www-form-urlencoded format&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#urlsearchparams"&gt;URLSearchParams&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#query-string-older-browsers"&gt;Query string&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#-automatic-serialization-to-urlsearchparams"&gt;🆕 Automatic serialization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#using-multipartform-data-format"&gt;Using multipart/form-data format&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#formdata"&gt;FormData&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#-automatic-serialization-to-formdata"&gt;🆕 Automatic serialization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#files-posting"&gt;Files Posting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#-html-form-posting-browser"&gt;HTML Form Posting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#-progress-capturing"&gt;🆕 Progress capturing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#-progress-capturing"&gt;🆕 Rate limiting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#-axiosheaders"&gt;🆕 AxiosHeaders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#-fetch-adapter"&gt;🔥 Fetch adapter&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#-custom-fetch"&gt;🔥 Custom fetch&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#-using-with-tauri"&gt;🔥 Using with Tauri&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#-using-with-sveltekit-"&gt;🔥 Using with SvelteKit&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#semver"&gt;Semver&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#promises"&gt;Promises&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#typescript"&gt;TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#resources"&gt;Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"&gt;XMLHttpRequests&lt;/a&gt; from the browser&lt;/li&gt; 
 &lt;li&gt;Make &lt;a href="https://nodejs.org/api/http.html"&gt;http&lt;/a&gt; requests from node.js&lt;/li&gt; 
 &lt;li&gt;Supports the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"&gt;Promise&lt;/a&gt; API&lt;/li&gt; 
 &lt;li&gt;Intercept request and response&lt;/li&gt; 
 &lt;li&gt;Transform request and response data&lt;/li&gt; 
 &lt;li&gt;Cancel requests&lt;/li&gt; 
 &lt;li&gt;Automatic transforms for &lt;a href="https://www.json.org/json-en.html"&gt;JSON&lt;/a&gt; data&lt;/li&gt; 
 &lt;li&gt;🆕 Automatic data object serialization to &lt;code&gt;multipart/form-data&lt;/code&gt; and &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; body encodings&lt;/li&gt; 
 &lt;li&gt;Client side support for protecting against &lt;a href="https://en.wikipedia.org/wiki/Cross-site_request_forgery"&gt;XSRF&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Browser Support&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;img src="https://raw.githubusercontent.com/alrra/browser-logos/main/src/chrome/chrome_48x48.png" alt="Chrome" /&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;img src="https://raw.githubusercontent.com/alrra/browser-logos/main/src/firefox/firefox_48x48.png" alt="Firefox" /&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;img src="https://raw.githubusercontent.com/alrra/browser-logos/main/src/safari/safari_48x48.png" alt="Safari" /&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;img src="https://raw.githubusercontent.com/alrra/browser-logos/main/src/opera/opera_48x48.png" alt="Opera" /&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;img src="https://raw.githubusercontent.com/alrra/browser-logos/main/src/edge/edge_48x48.png" alt="Edge" /&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Latest ✔&lt;/td&gt; 
   &lt;td&gt;Latest ✔&lt;/td&gt; 
   &lt;td&gt;Latest ✔&lt;/td&gt; 
   &lt;td&gt;Latest ✔&lt;/td&gt; 
   &lt;td&gt;Latest ✔&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;a href="https://saucelabs.com/u/axios"&gt;&lt;img src="https://saucelabs.com/open_sauce/build_matrix/axios.svg?sanitize=true" alt="Browser Matrix" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;h3&gt;Package manager&lt;/h3&gt; 
&lt;p&gt;Using npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ npm install axios
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using bower:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ bower install axios
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using yarn:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ yarn add axios
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using pnpm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ pnpm add axios
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using bun:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ bun add axios
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once the package is installed, you can import the library using &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; approach:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import axios, {isCancel, AxiosError} from 'axios';
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the default export, since the named export is just a re-export from the Axios factory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import axios from 'axios';

console.log(axios.isCancel('something'));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you use &lt;code&gt;require&lt;/code&gt; for importing, &lt;strong&gt;only default export is available&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const axios = require('axios');

console.log(axios.isCancel('something'));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For some bundlers and some ES6 linters you may need to do the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { default as axios } from 'axios';
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For cases where something went wrong when trying to import a module into a custom or legacy environment, you can try importing the module package directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const axios = require('axios/dist/browser/axios.cjs'); // browser commonJS bundle (ES2017)
// const axios = require('axios/dist/node/axios.cjs'); // node commonJS bundle (ES2017)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CDN&lt;/h3&gt; 
&lt;p&gt;Using jsDelivr CDN (ES5 UMD browser module):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script src="https://cdn.jsdelivr.net/npm/axios@1.6.7/dist/axios.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using unpkg CDN:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script src="https://unpkg.com/axios@1.6.7/dist/axios.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: CommonJS usage&lt;br /&gt; In order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with &lt;code&gt;require()&lt;/code&gt;, use the following approach:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import axios from 'axios';
//const axios = require('axios'); // legacy way

// Make a request for a user with a given ID
axios.get('/user?ID=12345')
  .then(function (response) {
    // handle success
    console.log(response);
  })
  .catch(function (error) {
    // handle error
    console.log(error);
  })
  .finally(function () {
    // always executed
  });

// Optionally the request above could also be done as
axios.get('/user', {
    params: {
      ID: 12345
    }
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  })
  .finally(function () {
    // always executed
  });

// Want to use async/await? Add the `async` keyword to your outer function/method.
async function getUser() {
  try {
    const response = await axios.get('/user?ID=12345');
    console.log(response);
  } catch (error) {
    console.error(error);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;async/await&lt;/code&gt; is part of ECMAScript 2017 and is not supported in Internet Explorer and older browsers, so use with caution.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Performing a &lt;code&gt;POST&lt;/code&gt; request&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;axios.post('/user', {
    firstName: 'Fred',
    lastName: 'Flintstone'
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Performing multiple concurrent requests&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;function getUserAccount() {
  return axios.get('/user/12345');
}

function getUserPermissions() {
  return axios.get('/user/12345/permissions');
}

Promise.all([getUserAccount(), getUserPermissions()])
  .then(function (results) {
    const acct = results[0];
    const perm = results[1];
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;axios API&lt;/h2&gt; 
&lt;p&gt;Requests can be made by passing the relevant config to &lt;code&gt;axios&lt;/code&gt;.&lt;/p&gt; 
&lt;h5&gt;axios(config)&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Send a POST request
axios({
  method: 'post',
  url: '/user/12345',
  data: {
    firstName: 'Fred',
    lastName: 'Flintstone'
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// GET request for remote image in node.js
axios({
  method: 'get',
  url: 'https://bit.ly/2mTM3nY',
  responseType: 'stream'
})
  .then(function (response) {
    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;axios(url[, config])&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Send a GET request (default method)
axios('/user/12345');
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Request method aliases&lt;/h3&gt; 
&lt;p&gt;For convenience, aliases have been provided for all common request methods.&lt;/p&gt; 
&lt;h5&gt;axios.request(config)&lt;/h5&gt; 
&lt;h5&gt;axios.get(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios.delete(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios.head(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios.options(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios.post(url[, data[, config]])&lt;/h5&gt; 
&lt;h5&gt;axios.put(url[, data[, config]])&lt;/h5&gt; 
&lt;h5&gt;axios.patch(url[, data[, config]])&lt;/h5&gt; 
&lt;h6&gt;NOTE&lt;/h6&gt; 
&lt;p&gt;When using the alias methods &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, and &lt;code&gt;data&lt;/code&gt; properties don't need to be specified in config.&lt;/p&gt; 
&lt;h3&gt;Concurrency (Deprecated)&lt;/h3&gt; 
&lt;p&gt;Please use &lt;code&gt;Promise.all&lt;/code&gt; to replace the below functions.&lt;/p&gt; 
&lt;p&gt;Helper functions for dealing with concurrent requests.&lt;/p&gt; 
&lt;p&gt;axios.all(iterable) axios.spread(callback)&lt;/p&gt; 
&lt;h3&gt;Creating an instance&lt;/h3&gt; 
&lt;p&gt;You can create a new instance of axios with a custom config.&lt;/p&gt; 
&lt;h5&gt;axios.create([config])&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const instance = axios.create({
  baseURL: 'https://some-domain.com/api/',
  timeout: 1000,
  headers: {'X-Custom-Header': 'foobar'}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Instance methods&lt;/h3&gt; 
&lt;p&gt;The available instance methods are listed below. The specified config will be merged with the instance config.&lt;/p&gt; 
&lt;h5&gt;axios#request(config)&lt;/h5&gt; 
&lt;h5&gt;axios#get(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios#delete(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios#head(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios#options(url[, config])&lt;/h5&gt; 
&lt;h5&gt;axios#post(url[, data[, config]])&lt;/h5&gt; 
&lt;h5&gt;axios#put(url[, data[, config]])&lt;/h5&gt; 
&lt;h5&gt;axios#patch(url[, data[, config]])&lt;/h5&gt; 
&lt;h5&gt;axios#getUri([config])&lt;/h5&gt; 
&lt;h2&gt;Request Config&lt;/h2&gt; 
&lt;p&gt;These are the available config options for making requests. Only the &lt;code&gt;url&lt;/code&gt; is required. Requests will default to &lt;code&gt;GET&lt;/code&gt; if &lt;code&gt;method&lt;/code&gt; is not specified.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{
  // `url` is the server URL that will be used for the request
  url: '/user',

  // `method` is the request method to be used when making the request
  method: 'get', // default

  // `baseURL` will be prepended to `url` unless `url` is absolute and option `allowAbsoluteUrls` is set to true.
  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs
  // to methods of that instance.
  baseURL: 'https://some-domain.com/api/',

  // `allowAbsoluteUrls` determines whether or not absolute URLs will override a configured `baseUrl`.
  // When set to true (default), absolute values for `url` will override `baseUrl`.
  // When set to false, absolute values for `url` will always be prepended by `baseUrl`.
  allowAbsoluteUrls: true,

  // `transformRequest` allows changes to the request data before it is sent to the server
  // This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE'
  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,
  // FormData or Stream
  // You may modify the headers object.
  transformRequest: [function (data, headers) {
    // Do whatever you want to transform the data

    return data;
  }],

  // `transformResponse` allows changes to the response data to be made before
  // it is passed to then/catch
  transformResponse: [function (data) {
    // Do whatever you want to transform the data

    return data;
  }],

  // `headers` are custom headers to be sent
  headers: {'X-Requested-With': 'XMLHttpRequest'},

  // `params` are the URL parameters to be sent with the request
  // Must be a plain object or a URLSearchParams object
  params: {
    ID: 12345
  },
  
  // `paramsSerializer` is an optional config that allows you to customize serializing `params`. 
  paramsSerializer: {

    // Custom encoder function which sends key/value pairs in an iterative fashion.
    encode?: (param: string): string =&amp;gt; { /* Do custom operations here and return transformed string */ }, 
    
    // Custom serializer function for the entire parameter. Allows user to mimic pre 1.x behaviour.
    serialize?: (params: Record&amp;lt;string, any&amp;gt;, options?: ParamsSerializerOptions ), 
    
    // Configuration for formatting array indexes in the params. 
    indexes: false // Three available options: (1) indexes: null (leads to no brackets), (2) (default) indexes: false (leads to empty brackets), (3) indexes: true (leads to brackets with indexes).    
  },

  // `data` is the data to be sent as the request body
  // Only applicable for request methods 'PUT', 'POST', 'DELETE , and 'PATCH'
  // When no `transformRequest` is set, must be of one of the following types:
  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams
  // - Browser only: FormData, File, Blob
  // - Node only: Stream, Buffer, FormData (form-data package)
  data: {
    firstName: 'Fred'
  },

  // syntax alternative to send data into the body
  // method post
  // only the value is sent, not the key
  data: 'Country=Brasil&amp;amp;City=Belo Horizonte',

  // `timeout` specifies the number of milliseconds before the request times out.
  // If the request takes longer than `timeout`, the request will be aborted.
  timeout: 1000, // default is `0` (no timeout)

  // `withCredentials` indicates whether or not cross-site Access-Control requests
  // should be made using credentials
  withCredentials: false, // default

  // `adapter` allows custom handling of requests which makes testing easier.
  // Return a promise and supply a valid response (see lib/adapters/README.md)
  adapter: function (config) {
    /* ... */
  },
  // Also, you can set the name of the built-in adapter, or provide an array with their names
  // to choose the first available in the environment
  adapter: 'xhr', // 'fetch' | 'http' | ['xhr', 'http', 'fetch']

  // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.
  // This will set an `Authorization` header, overwriting any existing
  // `Authorization` custom headers you have set using `headers`.
  // Please note that only HTTP Basic auth is configurable through this parameter.
  // For Bearer tokens and such, use `Authorization` custom headers instead.
  auth: {
    username: 'janedoe',
    password: 's00pers3cret'
  },

  // `responseType` indicates the type of data that the server will respond with
  // options are: 'arraybuffer', 'document', 'json', 'text', 'stream'
  //   browser only: 'blob'
  responseType: 'json', // default

  // `responseEncoding` indicates encoding to use for decoding responses (Node.js only)
  // Note: Ignored for `responseType` of 'stream' or client-side requests
  // options are: 'ascii', 'ASCII', 'ansi', 'ANSI', 'binary', 'BINARY', 'base64', 'BASE64', 'base64url',
  // 'BASE64URL', 'hex', 'HEX', 'latin1', 'LATIN1', 'ucs-2', 'UCS-2', 'ucs2', 'UCS2', 'utf-8', 'UTF-8',
  // 'utf8', 'UTF8', 'utf16le', 'UTF16LE'
  responseEncoding: 'utf8', // default

  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token
  xsrfCookieName: 'XSRF-TOKEN', // default

  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value
  xsrfHeaderName: 'X-XSRF-TOKEN', // default
    
  // `undefined` (default) - set XSRF header only for the same origin requests
  withXSRFToken: boolean | undefined | ((config: InternalAxiosRequestConfig) =&amp;gt; boolean | undefined),

  // `onUploadProgress` allows handling of progress events for uploads
  // browser &amp;amp; node.js
  onUploadProgress: function ({loaded, total, progress, bytes, estimated, rate, upload = true}) {
    // Do whatever you want with the Axios progress event
  },

  // `onDownloadProgress` allows handling of progress events for downloads
  // browser &amp;amp; node.js
  onDownloadProgress: function ({loaded, total, progress, bytes, estimated, rate, download = true}) {
    // Do whatever you want with the Axios progress event
  },

  // `maxContentLength` defines the max size of the http response content in bytes allowed in node.js
  maxContentLength: 2000,

  // `maxBodyLength` (Node only option) defines the max size of the http request content in bytes allowed
  maxBodyLength: 2000,

  // `validateStatus` defines whether to resolve or reject the promise for a given
  // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`
  // or `undefined`), the promise will be resolved; otherwise, the promise will be
  // rejected.
  validateStatus: function (status) {
    return status &amp;gt;= 200 &amp;amp;&amp;amp; status &amp;lt; 300; // default
  },

  // `maxRedirects` defines the maximum number of redirects to follow in node.js.
  // If set to 0, no redirects will be followed.
  maxRedirects: 21, // default

  // `beforeRedirect` defines a function that will be called before redirect.
  // Use this to adjust the request options upon redirecting,
  // to inspect the latest response headers,
  // or to cancel the request by throwing an error
  // If maxRedirects is set to 0, `beforeRedirect` is not used.
  beforeRedirect: (options, { headers }) =&amp;gt; {
    if (options.hostname === "example.com") {
      options.auth = "user:password";
    }
  },

  // `socketPath` defines a UNIX Socket to be used in node.js.
  // e.g. '/var/run/docker.sock' to send requests to the docker daemon.
  // Only either `socketPath` or `proxy` can be specified.
  // If both are specified, `socketPath` is used.
  socketPath: null, // default
  
  // `transport` determines the transport method that will be used to make the request.
  // If defined, it will be used. Otherwise, if `maxRedirects` is 0,
  // the default `http` or `https` library will be used, depending on the protocol specified in `protocol`.
  // Otherwise, the `httpFollow` or `httpsFollow` library will be used, again depending on the protocol,
  // which can handle redirects.
  transport: undefined, // default

  // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http
  // and https requests, respectively, in node.js. This allows options to be added like
  // `keepAlive` that are not enabled by default before Node.js v19.0.0. After Node.js
  // v19.0.0, you no longer need to customize the agent to enable `keepAlive` because
  // `http.globalAgent` has `keepAlive` enabled by default.
  httpAgent: new http.Agent({ keepAlive: true }),
  httpsAgent: new https.Agent({ keepAlive: true }),

  // `proxy` defines the hostname, port, and protocol of the proxy server.
  // You can also define your proxy using the conventional `http_proxy` and
  // `https_proxy` environment variables. If you are using environment variables
  // for your proxy configuration, you can also define a `no_proxy` environment
  // variable as a comma-separated list of domains that should not be proxied.
  // Use `false` to disable proxies, ignoring environment variables.
  // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and
  // supplies credentials.
  // This will set an `Proxy-Authorization` header, overwriting any existing
  // `Proxy-Authorization` custom headers you have set using `headers`.
  // If the proxy server uses HTTPS, then you must set the protocol to `https`.
  proxy: {
    protocol: 'https',
    host: '127.0.0.1',
    // hostname: '127.0.0.1' // Takes precedence over 'host' if both are defined
    port: 9000,
    auth: {
      username: 'mikeymike',
      password: 'rapunz3l'
    }
  },

  // `cancelToken` specifies a cancel token that can be used to cancel the request
  // (see Cancellation section below for details)
  cancelToken: new CancelToken(function (cancel) {
  }),

  // an alternative way to cancel Axios requests using AbortController
  signal: new AbortController().signal,

  // `decompress` indicates whether or not the response body should be decompressed
  // automatically. If set to `true` will also remove the 'content-encoding' header
  // from the responses objects of all decompressed responses
  // - Node only (XHR cannot turn off decompression)
  decompress: true, // default

  // `insecureHTTPParser` boolean.
  // Indicates where to use an insecure HTTP parser that accepts invalid HTTP headers.
  // This may allow interoperability with non-conformant HTTP implementations.
  // Using the insecure parser should be avoided.
  // see options https://nodejs.org/dist/latest-v12.x/docs/api/http.html#http_http_request_url_options_callback
  // see also https://nodejs.org/en/blog/vulnerability/february-2020-security-releases/#strict-http-header-parsing-none
  insecureHTTPParser: undefined, // default

  // transitional options for backward compatibility that may be removed in the newer versions
  transitional: {
    // silent JSON parsing mode
    // `true`  - ignore JSON parsing errors and set response.data to null if parsing failed (old behaviour)
    // `false` - throw SyntaxError if JSON parsing failed (Note: responseType must be set to 'json')
    silentJSONParsing: true, // default value for the current Axios version

    // try to parse the response string as JSON even if `responseType` is not 'json'
    forcedJSONParsing: true,

    // throw ETIMEDOUT error instead of generic ECONNABORTED on request timeouts
    clarifyTimeoutError: false,
  },

  env: {
    // The FormData class to be used to automatically serialize the payload into a FormData object
    FormData: window?.FormData || global?.FormData
  },

  formSerializer: {
      visitor: (value, key, path, helpers) =&amp;gt; {}; // custom visitor function to serialize form values
      dots: boolean; // use dots instead of brackets format
      metaTokens: boolean; // keep special endings like {} in parameter key
      indexes: boolean; // array indexes format null - no brackets, false - empty brackets, true - brackets with indexes
  },

  // http adapter only (node.js)
  maxRate: [
    100 * 1024, // 100KB/s upload limit,
    100 * 1024  // 100KB/s download limit
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Response Schema&lt;/h2&gt; 
&lt;p&gt;The response for a request contains the following information.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{
  // `data` is the response that was provided by the server
  data: {},

  // `status` is the HTTP status code from the server response
  status: 200,

  // `statusText` is the HTTP status message from the server response
  statusText: 'OK',

  // `headers` the HTTP headers that the server responded with
  // All header names are lowercase and can be accessed using the bracket notation.
  // Example: `response.headers['content-type']`
  headers: {},

  // `config` is the config that was provided to `axios` for the request
  config: {},

  // `request` is the request that generated this response
  // It is the last ClientRequest instance in node.js (in redirects)
  // and an XMLHttpRequest instance in the browser
  request: {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When using &lt;code&gt;then&lt;/code&gt;, you will receive the response as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;axios.get('/user/12345')
  .then(function (response) {
    console.log(response.data);
    console.log(response.status);
    console.log(response.statusText);
    console.log(response.headers);
    console.log(response.config);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When using &lt;code&gt;catch&lt;/code&gt;, or passing a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then"&gt;rejection callback&lt;/a&gt; as second parameter of &lt;code&gt;then&lt;/code&gt;, the response will be available through the &lt;code&gt;error&lt;/code&gt; object as explained in the &lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/#handling-errors"&gt;Handling Errors&lt;/a&gt; section.&lt;/p&gt; 
&lt;h2&gt;Config Defaults&lt;/h2&gt; 
&lt;p&gt;You can specify config defaults that will be applied to every request.&lt;/p&gt; 
&lt;h3&gt;Global axios defaults&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;axios.defaults.baseURL = 'https://api.example.com';

// Important: If axios is used with multiple domains, the AUTH_TOKEN will be sent to all of them.
// See below for an example using Custom instance defaults instead.
axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;

axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Custom instance defaults&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Set config defaults when creating the instance
const instance = axios.create({
  baseURL: 'https://api.example.com'
});

// Alter defaults after instance has been created
instance.defaults.headers.common['Authorization'] = AUTH_TOKEN;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Config order of precedence&lt;/h3&gt; 
&lt;p&gt;Config will be merged with an order of precedence. The order is library defaults found in &lt;a href="https://github.com/axios/axios/raw/main/lib/defaults/index.js#L49"&gt;lib/defaults/index.js&lt;/a&gt;, then &lt;code&gt;defaults&lt;/code&gt; property of the instance, and finally &lt;code&gt;config&lt;/code&gt; argument for the request. The latter will take precedence over the former. Here's an example.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Create an instance using the config defaults provided by the library
// At this point the timeout config value is `0` as is the default for the library
const instance = axios.create();

// Override timeout default for the library
// Now all requests using this instance will wait 2.5 seconds before timing out
instance.defaults.timeout = 2500;

// Override timeout for this request as it's known to take a long time
instance.get('/longRequest', {
  timeout: 5000
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Interceptors&lt;/h2&gt; 
&lt;p&gt;You can intercept requests or responses before they are handled by &lt;code&gt;then&lt;/code&gt; or &lt;code&gt;catch&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;
const instance = axios.create();

// Add a request interceptor
instance.interceptors.request.use(function (config) {
    // Do something before request is sent
    return config;
  }, function (error) {
    // Do something with request error
    return Promise.reject(error);
  });

// Add a response interceptor
instance.interceptors.response.use(function (response) {
    // Any status code that lie within the range of 2xx cause this function to trigger
    // Do something with response data
    return response;
  }, function (error) {
    // Any status codes that falls outside the range of 2xx cause this function to trigger
    // Do something with response error
    return Promise.reject(error);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you need to remove an interceptor later you can.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const instance = axios.create();
const myInterceptor = instance.interceptors.request.use(function () {/*...*/});
axios.interceptors.request.eject(myInterceptor);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also clear all interceptors for requests or responses.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const instance = axios.create();
instance.interceptors.request.use(function () {/*...*/});
instance.interceptors.request.clear(); // Removes interceptors from requests
instance.interceptors.response.use(function () {/*...*/});
instance.interceptors.response.clear(); // Removes interceptors from responses
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can add interceptors to a custom instance of axios.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const instance = axios.create();
instance.interceptors.request.use(function () {/*...*/});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you add request interceptors, they are presumed to be asynchronous by default. This can cause a delay in the execution of your axios request when the main thread is blocked (a promise is created under the hood for the interceptor and your request gets put on the bottom of the call stack). If your request interceptors are synchronous you can add a flag to the options object that will tell axios to run the code synchronously and avoid any delays in request execution.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;axios.interceptors.request.use(function (config) {
  config.headers.test = 'I am only a header!';
  return config;
}, null, { synchronous: true });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to execute a particular interceptor based on a runtime check, you can add a &lt;code&gt;runWhen&lt;/code&gt; function to the options object. The request interceptor will not be executed &lt;strong&gt;if and only if&lt;/strong&gt; the return of &lt;code&gt;runWhen&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. The function will be called with the config object (don't forget that you can bind your own arguments to it as well.) This can be handy when you have an asynchronous request interceptor that only needs to run at certain times.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;function onGetCall(config) {
  return config.method === 'get';
}
axios.interceptors.request.use(function (config) {
  config.headers.test = 'special get headers';
  return config;
}, null, { runWhen: onGetCall });
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; options parameter(having &lt;code&gt;synchronous&lt;/code&gt; and &lt;code&gt;runWhen&lt;/code&gt; properties) is only supported for request interceptors at the moment.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Multiple Interceptors&lt;/h3&gt; 
&lt;p&gt;Given you add multiple response interceptors and when the response was fulfilled&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;then each interceptor is executed&lt;/li&gt; 
 &lt;li&gt;then they are executed in the order they were added&lt;/li&gt; 
 &lt;li&gt;then only the last interceptor's result is returned&lt;/li&gt; 
 &lt;li&gt;then every interceptor receives the result of its predecessor&lt;/li&gt; 
 &lt;li&gt;and when the fulfillment-interceptor throws 
  &lt;ul&gt; 
   &lt;li&gt;then the following fulfillment-interceptor is not called&lt;/li&gt; 
   &lt;li&gt;then the following rejection-interceptor is called&lt;/li&gt; 
   &lt;li&gt;once caught, another following fulfill-interceptor is called again (just like in a promise chain).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Read &lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/test/specs/interceptors.spec.js"&gt;the interceptor tests&lt;/a&gt; for seeing all this in code.&lt;/p&gt; 
&lt;h2&gt;Error Types&lt;/h2&gt; 
&lt;p&gt;There are many different axios error messages that can appear that can provide basic information about the specifics of the error and where opportunities may lie in debugging.&lt;/p&gt; 
&lt;p&gt;The general structure of axios errors is as follows:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Property&lt;/th&gt; 
   &lt;th&gt;Definition&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;message&lt;/td&gt; 
   &lt;td&gt;A quick summary of the error message and the status it failed with.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;name&lt;/td&gt; 
   &lt;td&gt;This defines where the error originated from. For axios, it will always be an 'AxiosError'.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;stack&lt;/td&gt; 
   &lt;td&gt;Provides the stack trace of the error.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;config&lt;/td&gt; 
   &lt;td&gt;An axios config object with specific instance configurations defined by the user from when the request was made&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;code&lt;/td&gt; 
   &lt;td&gt;Represents an axios identified error. The table below lists out specific definitions for internal axios error.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;status&lt;/td&gt; 
   &lt;td&gt;HTTP response status code. See &lt;a href="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"&gt;here&lt;/a&gt; for common HTTP response status code meanings.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Below is a list of potential axios identified error:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Code&lt;/th&gt; 
   &lt;th&gt;Definition&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ERR_BAD_OPTION_VALUE&lt;/td&gt; 
   &lt;td&gt;Invalid value provided in axios configuration.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ERR_BAD_OPTION&lt;/td&gt; 
   &lt;td&gt;Invalid option provided in axios configuration.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ERR_NOT_SUPPORT&lt;/td&gt; 
   &lt;td&gt;Feature or method not supported in the current axios environment.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ERR_DEPRECATED&lt;/td&gt; 
   &lt;td&gt;Deprecated feature or method used in axios.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ERR_INVALID_URL&lt;/td&gt; 
   &lt;td&gt;Invalid URL provided for axios request.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ECONNABORTED&lt;/td&gt; 
   &lt;td&gt;Typically indicates that the request has been timed out (unless &lt;code&gt;transitional.clarifyTimeoutError&lt;/code&gt; is set) or aborted by the browser or its plugin.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ERR_CANCELED&lt;/td&gt; 
   &lt;td&gt;Feature or method is canceled explicitly by the user using an AbortSignal (or a CancelToken).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ETIMEDOUT&lt;/td&gt; 
   &lt;td&gt;Request timed out due to exceeding default axios timelimit. &lt;code&gt;transitional.clarifyTimeoutError&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;, otherwise a generic &lt;code&gt;ECONNABORTED&lt;/code&gt; error will be thrown instead.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ERR_NETWORK&lt;/td&gt; 
   &lt;td&gt;Network-related issue. In the browser, this error can also be caused by a &lt;a href="https://developer.mozilla.org/ru/docs/Web/HTTP/Guides/CORS"&gt;CORS&lt;/a&gt; or &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content"&gt;Mixed Content&lt;/a&gt; policy violation. The browser does not allow the JS code to clarify the real reason for the error caused by security issues, so please check the console.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ERR_FR_TOO_MANY_REDIRECTS&lt;/td&gt; 
   &lt;td&gt;Request is redirected too many times; exceeds max redirects specified in axios configuration.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ERR_BAD_RESPONSE&lt;/td&gt; 
   &lt;td&gt;Response cannot be parsed properly or is in an unexpected format. Usually related to a response with &lt;code&gt;5xx&lt;/code&gt; status code.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ERR_BAD_REQUEST&lt;/td&gt; 
   &lt;td&gt;The request has an unexpected format or is missing required parameters. Usually related to a response with &lt;code&gt;4xx&lt;/code&gt; status code.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Handling Errors&lt;/h2&gt; 
&lt;p&gt;the default behavior is to reject every response that returns with a status code that falls out of the range of 2xx and treat it as an error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;axios.get('/user/12345')
  .catch(function (error) {
    if (error.response) {
      // The request was made and the server responded with a status code
      // that falls out of the range of 2xx
      console.log(error.response.data);
      console.log(error.response.status);
      console.log(error.response.headers);
    } else if (error.request) {
      // The request was made but no response was received
      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of
      // http.ClientRequest in node.js
      console.log(error.request);
    } else {
      // Something happened in setting up the request that triggered an Error
      console.log('Error', error.message);
    }
    console.log(error.config);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using the &lt;code&gt;validateStatus&lt;/code&gt; config option, you can override the default condition (status &amp;gt;= 200 &amp;amp;&amp;amp; status &amp;lt; 300) and define HTTP code(s) that should throw an error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;axios.get('/user/12345', {
  validateStatus: function (status) {
    return status &amp;lt; 500; // Resolve only if the status code is less than 500
  }
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using &lt;code&gt;toJSON&lt;/code&gt; you get an object with more information about the HTTP error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;axios.get('/user/12345')
  .catch(function (error) {
    console.log(error.toJSON());
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Cancellation&lt;/h2&gt; 
&lt;h3&gt;AbortController&lt;/h3&gt; 
&lt;p&gt;Starting from &lt;code&gt;v0.22.0&lt;/code&gt; Axios supports AbortController to cancel requests in fetch API way:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const controller = new AbortController();

axios.get('/foo/bar', {
   signal: controller.signal
}).then(function(response) {
   //...
});
// cancel the request
controller.abort()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CancelToken &lt;code&gt;👎deprecated&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;You can also cancel a request using a &lt;em&gt;CancelToken&lt;/em&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The axios cancel token API is based on the withdrawn &lt;a href="https://github.com/tc39/proposal-cancelable-promises"&gt;cancellable promises proposal&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This API is deprecated since v0.22.0 and shouldn't be used in new projects&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can create a cancel token using the &lt;code&gt;CancelToken.source&lt;/code&gt; factory as shown below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const CancelToken = axios.CancelToken;
const source = CancelToken.source();

axios.get('/user/12345', {
  cancelToken: source.token
}).catch(function (thrown) {
  if (axios.isCancel(thrown)) {
    console.log('Request canceled', thrown.message);
  } else {
    // handle error
  }
});

axios.post('/user/12345', {
  name: 'new name'
}, {
  cancelToken: source.token
})

// cancel the request (the message parameter is optional)
source.cancel('Operation canceled by the user.');
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also create a cancel token by passing an executor function to the &lt;code&gt;CancelToken&lt;/code&gt; constructor:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const CancelToken = axios.CancelToken;
let cancel;

axios.get('/user/12345', {
  cancelToken: new CancelToken(function executor(c) {
    // An executor function receives a cancel function as a parameter
    cancel = c;
  })
});

// cancel the request
cancel();
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; you can cancel several requests with the same cancel token/abort controller. If a cancellation token is already cancelled at the moment of starting an Axios request, then the request is cancelled immediately, without any attempts to make a real request.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;During the transition period, you can use both cancellation APIs, even for the same request:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Using &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format&lt;/h2&gt; 
&lt;h3&gt;URLSearchParams&lt;/h3&gt; 
&lt;p&gt;By default, axios serializes JavaScript objects to &lt;code&gt;JSON&lt;/code&gt;. To send data in the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST"&gt;&lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format&lt;/a&gt; instead, you can use the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams"&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; API, which is &lt;a href="http://www.caniuse.com/#feat=urlsearchparams"&gt;supported&lt;/a&gt; in the vast majority of browsers,and &lt;a href="https://nodejs.org/api/url.html#url_class_urlsearchparams"&gt; Node&lt;/a&gt; starting with v10 (released in 2018).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const params = new URLSearchParams({ foo: 'bar' });
params.append('extraparam', 'value');
axios.post('/foo', params);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Query string (Older browsers)&lt;/h3&gt; 
&lt;p&gt;For compatibility with very old browsers, there is a &lt;a href="https://github.com/WebReflection/url-search-params"&gt;polyfill&lt;/a&gt; available (make sure to polyfill the global environment).&lt;/p&gt; 
&lt;p&gt;Alternatively, you can encode data using the &lt;a href="https://github.com/ljharb/qs"&gt;&lt;code&gt;qs&lt;/code&gt;&lt;/a&gt; library:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const qs = require('qs');
axios.post('/foo', qs.stringify({ 'bar': 123 }));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or in another way (ES6),&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import qs from 'qs';
const data = { 'bar': 123 };
const options = {
  method: 'POST',
  headers: { 'content-type': 'application/x-www-form-urlencoded' },
  data: qs.stringify(data),
  url,
};
axios(options);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Older Node.js versions&lt;/h3&gt; 
&lt;p&gt;For older Node.js engines, you can use the &lt;a href="https://nodejs.org/api/querystring.html"&gt;&lt;code&gt;querystring&lt;/code&gt;&lt;/a&gt; module as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const querystring = require('querystring');
axios.post('https://something.com/', querystring.stringify({ foo: 'bar' }));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the &lt;a href="https://github.com/ljharb/qs"&gt;&lt;code&gt;qs&lt;/code&gt;&lt;/a&gt; library.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;qs&lt;/code&gt; library is preferable if you need to stringify nested objects, as the &lt;code&gt;querystring&lt;/code&gt; method has &lt;a href="https://github.com/nodejs/node-v0.x-archive/issues/1665"&gt;known issues&lt;/a&gt; with that use case.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;🆕 Automatic serialization to URLSearchParams&lt;/h3&gt; 
&lt;p&gt;Axios will automatically serialize the data object to urlencoded format if the content-type header is set to "application/x-www-form-urlencoded".&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const data = {
  x: 1,
  arr: [1, 2, 3],
  arr2: [1, [2], 3],
  users: [{name: 'Peter', surname: 'Griffin'}, {name: 'Thomas', surname: 'Anderson'}],
};

await axios.postForm('https://postman-echo.com/post', data,
  {headers: {'content-type': 'application/x-www-form-urlencoded'}}
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The server will handle it as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;  {
    x: '1',
    'arr[]': [ '1', '2', '3' ],
    'arr2[0]': '1',
    'arr2[1][0]': '2',
    'arr2[2]': '3',
    'arr3[]': [ '1', '2', '3' ],
    'users[0][name]': 'Peter',
    'users[0][surname]': 'griffin',
    'users[1][name]': 'Thomas',
    'users[1][surname]': 'Anderson'
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your backend body-parser (like &lt;code&gt;body-parser&lt;/code&gt; of &lt;code&gt;express.js&lt;/code&gt;) supports nested objects decoding, you will get the same object on the server-side automatically&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;  var app = express();

  app.use(bodyParser.urlencoded({ extended: true })); // support encoded bodies

  app.post('/', function (req, res, next) {
     // echo body as JSON
     res.send(JSON.stringify(req.body));
  });

  server = app.listen(3000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using &lt;code&gt;multipart/form-data&lt;/code&gt; format&lt;/h2&gt; 
&lt;h3&gt;FormData&lt;/h3&gt; 
&lt;p&gt;To send the data as a &lt;code&gt;multipart/formdata&lt;/code&gt; you need to pass a formData instance as a payload. Setting the &lt;code&gt;Content-Type&lt;/code&gt; header is not required as Axios guesses it based on the payload type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const formData = new FormData();
formData.append('foo', 'bar');

axios.post('https://httpbin.org/post', formData);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In node.js, you can use the &lt;a href="https://github.com/form-data/form-data"&gt;&lt;code&gt;form-data&lt;/code&gt;&lt;/a&gt; library as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const FormData = require('form-data');

const form = new FormData();
form.append('my_field', 'my value');
form.append('my_buffer', new Buffer(10));
form.append('my_file', fs.createReadStream('/foo/bar.jpg'));

axios.post('https://example.com', form)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🆕 Automatic serialization to FormData&lt;/h3&gt; 
&lt;p&gt;Starting from &lt;code&gt;v0.27.0&lt;/code&gt;, Axios supports automatic object serialization to a FormData object if the request &lt;code&gt;Content-Type&lt;/code&gt; header is set to &lt;code&gt;multipart/form-data&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The following request will submit the data in a FormData format (Browser &amp;amp; Node.js):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import axios from 'axios';

axios.post('https://httpbin.org/post', {x: 1}, {
  headers: {
    'Content-Type': 'multipart/form-data'
  }
}).then(({data}) =&amp;gt; console.log(data));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the &lt;code&gt;node.js&lt;/code&gt; build, the (&lt;a href="https://github.com/form-data/form-data"&gt;&lt;code&gt;form-data&lt;/code&gt;&lt;/a&gt;) polyfill is used by default.&lt;/p&gt; 
&lt;p&gt;You can overload the FormData class by setting the &lt;code&gt;env.FormData&lt;/code&gt; config variable, but you probably won't need it in most cases:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const axios = require('axios');
var FormData = require('form-data');

axios.post('https://httpbin.org/post', {x: 1, buf: new Buffer(10)}, {
  headers: {
    'Content-Type': 'multipart/form-data'
  }
}).then(({data}) =&amp;gt; console.log(data));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Axios FormData serializer supports some special endings to perform the following operations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{}&lt;/code&gt; - serialize the value with JSON.stringify&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[]&lt;/code&gt; - unwrap the array-like object as separate fields with the same key&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: unwrap/expand operation will be used by default on arrays and FileList objects&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;FormData serializer supports additional options via &lt;code&gt;config.formSerializer: object&lt;/code&gt; property to handle rare cases:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;visitor: Function&lt;/code&gt; - user-defined visitor function that will be called recursively to serialize the data object to a &lt;code&gt;FormData&lt;/code&gt; object by following custom rules.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;dots: boolean = false&lt;/code&gt; - use dot notation instead of brackets to serialize arrays and objects;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;metaTokens: boolean = true&lt;/code&gt; - add the special ending (e.g &lt;code&gt;user{}: '{"name": "John"}'&lt;/code&gt;) in the FormData key. The back-end body-parser could potentially use this meta-information to automatically parse the value as JSON.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;indexes: null|false|true = false&lt;/code&gt; - controls how indexes will be added to unwrapped keys of &lt;code&gt;flat&lt;/code&gt; array-like objects.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;null&lt;/code&gt; - don't add brackets (&lt;code&gt;arr: 1&lt;/code&gt;, &lt;code&gt;arr: 2&lt;/code&gt;, &lt;code&gt;arr: 3&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;false&lt;/code&gt;(default) - add empty brackets (&lt;code&gt;arr[]: 1&lt;/code&gt;, &lt;code&gt;arr[]: 2&lt;/code&gt;, &lt;code&gt;arr[]: 3&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;true&lt;/code&gt; - add brackets with indexes (&lt;code&gt;arr[0]: 1&lt;/code&gt;, &lt;code&gt;arr[1]: 2&lt;/code&gt;, &lt;code&gt;arr[2]: 3&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Let's say we have an object like this one:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const obj = {
  x: 1,
  arr: [1, 2, 3],
  arr2: [1, [2], 3],
  users: [{name: 'Peter', surname: 'Griffin'}, {name: 'Thomas', surname: 'Anderson'}],
  'obj2{}': [{x:1}]
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The following steps will be executed by the Axios serializer internally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const formData = new FormData();
formData.append('x', '1');
formData.append('arr[]', '1');
formData.append('arr[]', '2');
formData.append('arr[]', '3');
formData.append('arr2[0]', '1');
formData.append('arr2[1][0]', '2');
formData.append('arr2[2]', '3');
formData.append('users[0][name]', 'Peter');
formData.append('users[0][surname]', 'Griffin');
formData.append('users[1][name]', 'Thomas');
formData.append('users[1][surname]', 'Anderson');
formData.append('obj2{}', '[{"x":1}]');
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Axios supports the following shortcut methods: &lt;code&gt;postForm&lt;/code&gt;, &lt;code&gt;putForm&lt;/code&gt;, &lt;code&gt;patchForm&lt;/code&gt; which are just the corresponding http methods with the &lt;code&gt;Content-Type&lt;/code&gt; header preset to &lt;code&gt;multipart/form-data&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Files Posting&lt;/h2&gt; 
&lt;p&gt;You can easily submit a single file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;await axios.postForm('https://httpbin.org/post', {
  'myVar' : 'foo',
  'file': document.querySelector('#fileInput').files[0]
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or multiple files as &lt;code&gt;multipart/form-data&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;await axios.postForm('https://httpbin.org/post', {
  'files[]': document.querySelector('#fileInput').files
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;FileList&lt;/code&gt; object can be passed directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;await axios.postForm('https://httpbin.org/post', document.querySelector('#fileInput').files)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All files will be sent with the same field names: &lt;code&gt;files[]&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;🆕 HTML Form Posting (browser)&lt;/h2&gt; 
&lt;p&gt;Pass HTML Form element as a payload to submit it as &lt;code&gt;multipart/form-data&lt;/code&gt; content.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;await axios.postForm('https://httpbin.org/post', document.querySelector('#htmlForm'));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;FormData&lt;/code&gt; and &lt;code&gt;HTMLForm&lt;/code&gt; objects can also be posted as &lt;code&gt;JSON&lt;/code&gt; by explicitly setting the &lt;code&gt;Content-Type&lt;/code&gt; header to &lt;code&gt;application/json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;await axios.post('https://httpbin.org/post', document.querySelector('#htmlForm'), {
  headers: {
    'Content-Type': 'application/json'
  }
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, the Form&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;form id="form"&amp;gt;
  &amp;lt;input type="text" name="foo" value="1"&amp;gt;
  &amp;lt;input type="text" name="deep.prop" value="2"&amp;gt;
  &amp;lt;input type="text" name="deep prop spaced" value="3"&amp;gt;
  &amp;lt;input type="text" name="baz" value="4"&amp;gt;
  &amp;lt;input type="text" name="baz" value="5"&amp;gt;

  &amp;lt;select name="user.age"&amp;gt;
    &amp;lt;option value="value1"&amp;gt;Value 1&amp;lt;/option&amp;gt;
    &amp;lt;option value="value2" selected&amp;gt;Value 2&amp;lt;/option&amp;gt;
    &amp;lt;option value="value3"&amp;gt;Value 3&amp;lt;/option&amp;gt;
  &amp;lt;/select&amp;gt;

  &amp;lt;input type="submit" value="Save"&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;will be submitted as the following JSON object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{
  "foo": "1",
  "deep": {
    "prop": {
      "spaced": "3"
    }
  },
  "baz": [
    "4",
    "5"
  ],
  "user": {
    "age": "value2"
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Sending &lt;code&gt;Blobs&lt;/code&gt;/&lt;code&gt;Files&lt;/code&gt; as JSON (&lt;code&gt;base64&lt;/code&gt;) is not currently supported.&lt;/p&gt; 
&lt;h2&gt;🆕 Progress capturing&lt;/h2&gt; 
&lt;p&gt;Axios supports both browser and node environments to capture request upload/download progress. The frequency of progress events is forced to be limited to &lt;code&gt;3&lt;/code&gt; times per second.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;await axios.post(url, data, {
  onUploadProgress: function (axiosProgressEvent) {
    /*{
      loaded: number;
      total?: number;
      progress?: number; // in range [0..1]
      bytes: number; // how many bytes have been transferred since the last trigger (delta)
      estimated?: number; // estimated time in seconds
      rate?: number; // upload speed in bytes
      upload: true; // upload sign
    }*/
  },

  onDownloadProgress: function (axiosProgressEvent) {
    /*{
      loaded: number;
      total?: number;
      progress?: number;
      bytes: number; 
      estimated?: number;
      rate?: number; // download speed in bytes
      download: true; // download sign
    }*/
  }
});  
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also track stream upload/download progress in node.js:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const {data} = await axios.post(SERVER_URL, readableStream, {
   onUploadProgress: ({progress}) =&amp;gt; {
     console.log((progress * 100).toFixed(2));
   },
  
   headers: {
    'Content-Length': contentLength
   },

   maxRedirects: 0 // avoid buffering the entire stream
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Capturing FormData upload progress is not currently supported in node.js environments.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚠️ Warning&lt;/strong&gt; It is recommended to disable redirects by setting maxRedirects: 0 to upload the stream in the &lt;strong&gt;node.js&lt;/strong&gt; environment, as follow-redirects package will buffer the entire stream in RAM without following the "backpressure" algorithm.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🆕 Rate limiting&lt;/h2&gt; 
&lt;p&gt;Download and upload rate limits can only be set for the http adapter (node.js):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const {data} = await axios.post(LOCAL_SERVER_URL, myBuffer, {
  onUploadProgress: ({progress, rate}) =&amp;gt; {
    console.log(`Upload [${(progress*100).toFixed(2)}%]: ${(rate / 1024).toFixed(2)}KB/s`)
  },
   
  maxRate: [100 * 1024], // 100KB/s limit
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🆕 AxiosHeaders&lt;/h2&gt; 
&lt;p&gt;Axios has its own &lt;code&gt;AxiosHeaders&lt;/code&gt; class to manipulate headers using a Map-like API that guarantees caseless work. Although HTTP is case-insensitive in headers, Axios will retain the case of the original header for stylistic reasons and for a workaround when servers mistakenly consider the header's case. The old approach of directly manipulating headers object is still available, but deprecated and not recommended for future usage.&lt;/p&gt; 
&lt;h3&gt;Working with headers&lt;/h3&gt; 
&lt;p&gt;An AxiosHeaders object instance can contain different types of internal values. that control setting and merging logic. The final headers object with string values is obtained by Axios by calling the &lt;code&gt;toJSON&lt;/code&gt; method.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: By JSON here we mean an object consisting only of string values intended to be sent over the network.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The header value can be one of the following types:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;string&lt;/code&gt; - normal string value that will be sent to the server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;null&lt;/code&gt; - skip header when rendering to JSON&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;false&lt;/code&gt; - skip header when rendering to JSON, additionally indicates that &lt;code&gt;set&lt;/code&gt; method must be called with &lt;code&gt;rewrite&lt;/code&gt; option set to &lt;code&gt;true&lt;/code&gt; to overwrite this value (Axios uses this internally to allow users to opt out of installing certain headers like &lt;code&gt;User-Agent&lt;/code&gt; or &lt;code&gt;Content-Type&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt; - value is not set&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: The header value is considered set if it is not equal to undefined.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The headers object is always initialized inside interceptors and transformers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;  axios.interceptors.request.use((request: InternalAxiosRequestConfig) =&amp;gt; {
      request.headers.set('My-header', 'value');

      request.headers.set({
        "My-set-header1": "my-set-value1",
        "My-set-header2": "my-set-value2"
      });
      
      request.headers.set('User-Agent', false); // disable subsequent setting the header by Axios

      request.headers.setContentType('text/plain');
    
      request.headers['My-set-header2'] = 'newValue' // direct access is deprecated
    
      return request;
    }
  );
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can iterate over an &lt;code&gt;AxiosHeaders&lt;/code&gt; instance using a &lt;code&gt;for...of&lt;/code&gt; statement:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const headers = new AxiosHeaders({
  foo: '1',
  bar: '2',
  baz: '3'
});

for(const [header, value] of headers) {
  console.log(header, value);
}

// foo 1
// bar 2
// baz 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;new AxiosHeaders(headers?)&lt;/h3&gt; 
&lt;p&gt;Constructs a new &lt;code&gt;AxiosHeaders&lt;/code&gt; instance.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;constructor(headers?: RawAxiosHeaders | AxiosHeaders | string);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the headers object is a string, it will be parsed as RAW HTTP headers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const headers = new AxiosHeaders(`
Host: www.bing.com
User-Agent: curl/7.54.0
Accept: */*`);

console.log(headers);

// Object [AxiosHeaders] {
//   host: 'www.bing.com',
//   'user-agent': 'curl/7.54.0',
//   accept: '*/*'
// }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;AxiosHeaders#set&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;set(headerName, value: Axios, rewrite?: boolean);
set(headerName, value, rewrite?: (this: AxiosHeaders, value: string, name: string, headers: RawAxiosHeaders) =&amp;gt; boolean);
set(headers?: RawAxiosHeaders | AxiosHeaders | string, rewrite?: boolean);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;rewrite&lt;/code&gt; argument controls the overwriting behavior:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;false&lt;/code&gt; - do not overwrite if header's value is set (is not &lt;code&gt;undefined&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt; (default) - overwrite the header unless its value is set to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;true&lt;/code&gt; - rewrite anyway&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The option can also accept a user-defined function that determines whether the value should be overwritten or not.&lt;/p&gt; 
&lt;p&gt;Returns &lt;code&gt;this&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;AxiosHeaders#get(header)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;  get(headerName: string, matcher?: true | AxiosHeaderMatcher): AxiosHeaderValue;
  get(headerName: string, parser: RegExp): RegExpExecArray | null;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns the internal value of the header. It can take an extra argument to parse the header's value with &lt;code&gt;RegExp.exec&lt;/code&gt;, matcher function or internal key-value parser.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const headers = new AxiosHeaders({
  'Content-Type': 'multipart/form-data; boundary=Asrf456BGe4h'
});

console.log(headers.get('Content-Type')); 
// multipart/form-data; boundary=Asrf456BGe4h

console.log(headers.get('Content-Type', true)); // parse key-value pairs from a string separated with \s,;= delimiters:
// [Object: null prototype] {
//   'multipart/form-data': undefined,
//    boundary: 'Asrf456BGe4h'
// }


console.log(headers.get('Content-Type', (value, name, headers) =&amp;gt; {
  return String(value).replace(/a/g, 'ZZZ');
}));
// multipZZZrt/form-dZZZtZZZ; boundZZZry=Asrf456BGe4h

console.log(headers.get('Content-Type', /boundary=(\w+)/)?.[0]);
// boundary=Asrf456BGe4h

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns the value of the header.&lt;/p&gt; 
&lt;h3&gt;AxiosHeaders#has(header, matcher?)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;has(header: string, matcher?: AxiosHeaderMatcher): boolean;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the header is set (has no &lt;code&gt;undefined&lt;/code&gt; value).&lt;/p&gt; 
&lt;h3&gt;AxiosHeaders#delete(header, matcher?)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;delete(header: string | string[], matcher?: AxiosHeaderMatcher): boolean;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if at least one header has been removed.&lt;/p&gt; 
&lt;h3&gt;AxiosHeaders#clear(matcher?)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;clear(matcher?: AxiosHeaderMatcher): boolean;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Removes all headers. Unlike the &lt;code&gt;delete&lt;/code&gt; method matcher, this optional matcher will be used to match against the header name rather than the value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const headers = new AxiosHeaders({
  'foo': '1',
  'x-foo': '2',
  'x-bar': '3',
});

console.log(headers.clear(/^x-/)); // true

console.log(headers.toJSON()); // [Object: null prototype] { foo: '1' }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if at least one header has been cleared.&lt;/p&gt; 
&lt;h3&gt;AxiosHeaders#normalize(format);&lt;/h3&gt; 
&lt;p&gt;If the headers object was changed directly, it can have duplicates with the same name but in different cases. This method normalizes the headers object by combining duplicate keys into one. Axios uses this method internally after calling each interceptor. Set &lt;code&gt;format&lt;/code&gt; to true for converting headers name to lowercase and capitalize the initial letters (&lt;code&gt;cOntEnt-type&lt;/code&gt; =&amp;gt; &lt;code&gt;Content-Type&lt;/code&gt;)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const headers = new AxiosHeaders({
  'foo': '1',
});

headers.Foo = '2';
headers.FOO = '3';

console.log(headers.toJSON()); // [Object: null prototype] { foo: '1', Foo: '2', FOO: '3' }
console.log(headers.normalize().toJSON()); // [Object: null prototype] { foo: '3' }
console.log(headers.normalize(true).toJSON()); // [Object: null prototype] { Foo: '3' }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns &lt;code&gt;this&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;AxiosHeaders#concat(...targets)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;concat(...targets: Array&amp;lt;AxiosHeaders | RawAxiosHeaders | string | undefined | null&amp;gt;): AxiosHeaders;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Merges the instance with targets into a new &lt;code&gt;AxiosHeaders&lt;/code&gt; instance. If the target is a string, it will be parsed as RAW HTTP headers.&lt;/p&gt; 
&lt;p&gt;Returns a new &lt;code&gt;AxiosHeaders&lt;/code&gt; instance.&lt;/p&gt; 
&lt;h3&gt;AxiosHeaders#toJSON(asStrings?)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;toJSON(asStrings?: boolean): RawAxiosHeaders;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Resolve all internal headers values into a new null prototype object. Set &lt;code&gt;asStrings&lt;/code&gt; to true to resolve arrays as a string containing all elements, separated by commas.&lt;/p&gt; 
&lt;h3&gt;AxiosHeaders.from(thing?)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;from(thing?: AxiosHeaders | RawAxiosHeaders | string): AxiosHeaders;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns a new &lt;code&gt;AxiosHeaders&lt;/code&gt; instance created from the raw headers passed in, or simply returns the given headers object if it's an &lt;code&gt;AxiosHeaders&lt;/code&gt; instance.&lt;/p&gt; 
&lt;h3&gt;AxiosHeaders.concat(...targets)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;concat(...targets: Array&amp;lt;AxiosHeaders | RawAxiosHeaders | string | undefined | null&amp;gt;): AxiosHeaders;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns a new &lt;code&gt;AxiosHeaders&lt;/code&gt; instance created by merging the target objects.&lt;/p&gt; 
&lt;h3&gt;Shortcuts&lt;/h3&gt; 
&lt;p&gt;The following shortcuts are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;setContentType&lt;/code&gt;, &lt;code&gt;getContentType&lt;/code&gt;, &lt;code&gt;hasContentType&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;setContentLength&lt;/code&gt;, &lt;code&gt;getContentLength&lt;/code&gt;, &lt;code&gt;hasContentLength&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;setAccept&lt;/code&gt;, &lt;code&gt;getAccept&lt;/code&gt;, &lt;code&gt;hasAccept&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;setUserAgent&lt;/code&gt;, &lt;code&gt;getUserAgent&lt;/code&gt;, &lt;code&gt;hasUserAgent&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;setContentEncoding&lt;/code&gt;, &lt;code&gt;getContentEncoding&lt;/code&gt;, &lt;code&gt;hasContentEncoding&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔥 Fetch adapter&lt;/h2&gt; 
&lt;p&gt;Fetch adapter was introduced in &lt;code&gt;v1.7.0&lt;/code&gt;. By default, it will be used if &lt;code&gt;xhr&lt;/code&gt; and &lt;code&gt;http&lt;/code&gt; adapters are not available in the build, or not supported by the environment. To use it by default, it must be selected explicitly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const {data} = axios.get(url, {
  adapter: 'fetch' // by default ['xhr', 'http', 'fetch']
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can create a separate instance for this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const fetchAxios = axios.create({
  adapter: 'fetch'
});

const {data} = fetchAxios.get(url);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The adapter supports the same functionality as &lt;code&gt;xhr&lt;/code&gt; adapter, &lt;strong&gt;including upload and download progress capturing&lt;/strong&gt;. Also, it supports additional response types such as &lt;code&gt;stream&lt;/code&gt; and &lt;code&gt;formdata&lt;/code&gt; (if supported by the environment).&lt;/p&gt; 
&lt;h3&gt;🔥 Custom fetch&lt;/h3&gt; 
&lt;p&gt;Starting from &lt;code&gt;v1.12.0&lt;/code&gt;, you can customize the fetch adapter to use a custom fetch API instead of environment globals. You can pass a custom &lt;code&gt;fetch&lt;/code&gt; function, &lt;code&gt;Request&lt;/code&gt;, and &lt;code&gt;Response&lt;/code&gt; constructors via env config. This can be helpful in case of custom environments &amp;amp; app frameworks.&lt;/p&gt; 
&lt;p&gt;Also, when using a custom fetch, you may need to set custom Request and Response too. If you don't set them, global objects will be used. If your custom fetch api does not have these objects, and the globals are incompatible with a custom fetch, you must disable their use inside the fetch adapter by passing null.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Setting &lt;code&gt;Request&lt;/code&gt; &amp;amp; &lt;code&gt;Response&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt; will make it impossible for the fetch adapter to capture the upload &amp;amp; download progress.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Basic example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import customFetchFunction from 'customFetchModule';

const instance = axios.create({
  adapter: 'fetch',
  onDownloadProgress(e) {
    console.log('downloadProgress', e);
  },
  env: {
    fetch: customFetchFunction,
    Request: null, // undefined -&amp;gt; use the global constructor
    Response: null
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;🔥 Using with Tauri&lt;/h4&gt; 
&lt;p&gt;A minimal example of setting up Axios for use in a &lt;a href="https://tauri.app/plugin/http-client/"&gt;Tauri&lt;/a&gt; app with a platform fetch function that ignores CORS policy for requests.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { fetch } from "@tauri-apps/plugin-http";
import axios from "axios";

const instance = axios.create({
  adapter: 'fetch',
  onDownloadProgress(e) {
    console.log('downloadProgress', e);
  },
  env: {
    fetch
  }
});

 const {data} = await instance.get("https://google.com");
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;🔥 Using with SvelteKit&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://svelte.dev/docs/kit/web-standards#Fetch-APIs"&gt;SvelteKit&lt;/a&gt; framework has a custom implementation of the fetch function for server rendering (so called &lt;code&gt;load&lt;/code&gt; functions), and also uses relative paths, which makes it incompatible with the standard URL API. So, Axios must be configured to use the custom fetch API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;export async function load({ fetch }) {
  const {data: post} = await axios.get('https://jsonplaceholder.typicode.com/posts/1', {
    adapter: 'fetch',
    env: {
      fetch,
      Request: null,
      Response: null
    }
  });

  return { post };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Semver&lt;/h2&gt; 
&lt;p&gt;Since Axios has reached a &lt;code&gt;v.1.0.0&lt;/code&gt; we will fully embrace semver as per the spec &lt;a href="https://semver.org/"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Promises&lt;/h2&gt; 
&lt;p&gt;axios depends on a native ES6 Promise implementation to be &lt;a href="https://caniuse.com/promises"&gt;supported&lt;/a&gt;. If your environment doesn't support ES6 Promises, you can &lt;a href="https://github.com/jakearchibald/es6-promise"&gt;polyfill&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;TypeScript&lt;/h2&gt; 
&lt;p&gt;axios includes &lt;a href="https://typescriptlang.org"&gt;TypeScript&lt;/a&gt; definitions and a type guard for axios errors.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;let user: User = null;
try {
  const { data } = await axios.get('/user?ID=12345');
  user = data.userDetails;
} catch (error) {
  if (axios.isAxiosError(error)) {
    handleAxiosError(error);
  } else {
    handleUnexpectedError(error);
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Because axios dual publishes with an ESM default export and a CJS &lt;code&gt;module.exports&lt;/code&gt;, there are some caveats. The recommended setting is to use &lt;code&gt;"moduleResolution": "node16"&lt;/code&gt; (this is implied by &lt;code&gt;"module": "node16"&lt;/code&gt;). Note that this requires TypeScript 4.7 or greater. If use ESM, your settings should be fine. If you compile TypeScript to CJS and you can’t use &lt;code&gt;"moduleResolution": "node 16"&lt;/code&gt;, you have to enable &lt;code&gt;esModuleInterop&lt;/code&gt;. If you use TypeScript to type check CJS JavaScript code, your only option is to use &lt;code&gt;"moduleResolution": "node16"&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Online one-click setup&lt;/h2&gt; 
&lt;p&gt;You can use Gitpod, an online IDE(which is free for Open Source) for contributing or running the examples online.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/axios/axios/raw/main/examples/server.js"&gt;&lt;img src="https://gitpod.io/button/open-in-gitpod.svg?sanitize=true" alt="Open in Gitpod" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axios/axios/raw/v1.x/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axios/axios/raw/v1.x/ECOSYSTEM.md"&gt;Ecosystem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axios/axios/raw/v1.x/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axios/axios/raw/v1.x/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;axios is heavily inspired by the &lt;a href="https://docs.angularjs.org/api/ng/service/$http"&gt;$http service&lt;/a&gt; provided in &lt;a href="https://angularjs.org/"&gt;AngularJS&lt;/a&gt;. Ultimately axios is an effort to provide a standalone &lt;code&gt;$http&lt;/code&gt;-like service for use outside of AngularJS.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/axios/axios/v1.x/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>therealgliz/blooket-hacks</title>
      <link>https://github.com/therealgliz/blooket-hacks</link>
      <description>&lt;p&gt;Multiple game hacks to use so the game become easier to play!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;blooket-hack&lt;/h1&gt; 
&lt;p&gt;Hell i'm actually gliz who created the blooket hacks. I got the repo from the guy who was impersonating me.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This repo will not be updated at all. If you have any questions join the discord server below I'll be answering them.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;discord server: &lt;a href="https://discord.gg/Nj9Zs5VtFp"&gt;https://discord.gg/Nj9Zs5VtFp&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Proof thats it me: &lt;img src="https://user-images.githubusercontent.com/108590774/177013795-80b0e338-fa58-4eba-837f-340bab0c4e9a.png" alt="image" /&gt;&lt;/p&gt; 
&lt;h1&gt;Contact&lt;/h1&gt; 
&lt;p&gt;if you want to contact me just dm me on twitter &lt;a href="https://twitter.com/glizuwu"&gt;https://twitter.com/glizuwu&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SkyworkAI/DeepResearchAgent</title>
      <link>https://github.com/SkyworkAI/DeepResearchAgent</link>
      <description>&lt;p&gt;DeepResearchAgent is a hierarchical multi-agent system designed not only for deep research tasks but also for general-purpose task solving. The framework leverages a top-level planning agent to coordinate multiple specialized lower-level agents, enabling automated task decomposition and efficient execution across diverse and complex domains.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DeepResearchAgent&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://skyworkai.github.io/DeepResearchAgent/"&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%8C%90-Website-blue?style=for-the-badge&amp;amp;logo=github" alt="Website" /&gt;&lt;/a&gt; &lt;a href="https://arxiv.org/abs/2506.12508"&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%93%84-arXiv%20Paper-red?style=for-the-badge&amp;amp;logo=arxiv" alt="Paper" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/SkyworkAI/DeepResearchAgent/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-green?style=for-the-badge" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/SkyworkAI/DeepResearchAgent/main/README_CN.md"&gt;简体中文&lt;/a&gt; | &lt;a href="https://skyworkai.github.io/DeepResearchAgent/"&gt;🌐 &lt;strong&gt;Website&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;image.png DeepResearchAgent is a hierarchical multi-agent system designed not only for deep research tasks but also for general-purpose task solving. The framework leverages a top-level planning agent to coordinate multiple specialized lower-level agents, enabling automated task decomposition and efficient execution across diverse and complex domains.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🌐 &lt;strong&gt;Check out our interactive website&lt;/strong&gt;: &lt;a href="https://skyworkai.github.io/DeepResearchAgent/"&gt;https://skyworkai.github.io/DeepResearchAgent/&lt;/a&gt; - Explore the architecture, view experiments, and learn more about our research!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/SkyworkAI/DeepResearchAgent/main/docs/assets/architecture.png" alt="Architecture" width="700" /&gt; &lt;/p&gt; 
&lt;p&gt;The system adopts a two-layer structure:&lt;/p&gt; 
&lt;h3&gt;1. Top-Level Planning Agent&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Responsible for understanding, decomposing, and planning the overall workflow for a given task.&lt;/li&gt; 
 &lt;li&gt;Breaks down tasks into manageable sub-tasks and assigns them to appropriate lower-level agents.&lt;/li&gt; 
 &lt;li&gt;Dynamically coordinates the collaboration among agents to ensure smooth task completion.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2. Specialized Lower-Level Agents&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Deep Analyzer&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Performs in-depth analysis of input information, extracting key insights and potential requirements.&lt;/li&gt; 
   &lt;li&gt;Supports analysis of various data types, including text and structured data.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Deep Researcher&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Conducts thorough research on specified topics or questions, retrieving and synthesizing high-quality information.&lt;/li&gt; 
   &lt;li&gt;Capable of generating research reports or knowledge summaries automatically.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Browser Use&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Automates browser operations, supporting web search, information extraction, and data collection tasks.&lt;/li&gt; 
   &lt;li&gt;Assists the Deep Researcher in acquiring up-to-date information from the internet.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;MCP Manager Agent&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Manages and orchestrates Model Context Protocol (MCP) tools and services.&lt;/li&gt; 
   &lt;li&gt;Enables dynamic tool discovery, registration, and execution through MCP standards.&lt;/li&gt; 
   &lt;li&gt;Supports both local and remote MCP tool integration for enhanced agent capabilities.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;General Tool Calling Agent&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Provides a general-purpose interface for invoking various tools and APIs.&lt;/li&gt; 
   &lt;li&gt;Supports function calling, allowing the agent to execute specific tasks or retrieve information from external services.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hierarchical agent collaboration for complex and dynamic task scenarios&lt;/li&gt; 
 &lt;li&gt;Extensible agent system, allowing easy integration of additional specialized agents&lt;/li&gt; 
 &lt;li&gt;Automated information analysis, research, and web interaction capabilities&lt;/li&gt; 
 &lt;li&gt;Secure Python code execution environment for tools, featuring configurable import controls, restricted built-ins, attribute access limitations, and resource limits. (See &lt;a href="https://raw.githubusercontent.com/SkyworkAI/DeepResearchAgent/main/docs/python_interpreter_sandbox.md"&gt;PythonInterpreterTool Sandboxing&lt;/a&gt; for details).&lt;/li&gt; 
 &lt;li&gt;Support for asynchronous operations, enabling efficient handling of multiple tasks and agents&lt;/li&gt; 
 &lt;li&gt;Support for local and remote model inference, including OpenAI, Anthropic, Google LLMs, and local Qwen models via vLLM&lt;/li&gt; 
 &lt;li&gt;Support for image and video generation tools based on the Imagen and Veo3 models, respectively&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Image and Video Examples:&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/SkyworkAI/DeepResearchAgent/main/docs/assets/cat_yarn_playful_reference.png" alt="Image Example" width="300" /&gt; &lt;img src="https://raw.githubusercontent.com/SkyworkAI/DeepResearchAgent/main/docs/assets/cat_playing_with_yarn_video.gif" alt="Video Example" width="600" /&gt; &lt;/p&gt; 
&lt;h2&gt;Updates&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;2025.08.04&lt;/strong&gt;: Add the support for loading mcp tools from the local json file.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2025.07.08&lt;/strong&gt;: Add the video generator tool, which can generate a video based on the input text and/or image. The video generator tool is based on the Veo3 model.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2025.07.08&lt;/strong&gt;: Add the image generator tool, which can generate images based on the input text. The image generator tool is based on the Imagen model.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2025.07.07&lt;/strong&gt;: Due to the limited flexibility of TOML configuration files, we have switched to using the config format supported by mmengine.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2025.06.20&lt;/strong&gt;: Add the support for the mcp (Both the local mcp and remote mcp).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2025.06.17&lt;/strong&gt;: Update technical report &lt;a href="https://arxiv.org/pdf/2506.12508"&gt;https://arxiv.org/pdf/2506.12508&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2025.06.01&lt;/strong&gt;: Update the browser-use to 0.1.48.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2025.05.30&lt;/strong&gt;: Convert the sub agent to a function call. Planning agent can now be gpt-4.1 or gemini-2.5-pro.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2025.05.27&lt;/strong&gt;: Support OpenAI, Anthropic, Google LLMs, and local Qwen models (via vLLM, see details in &lt;a href="https://raw.githubusercontent.com/SkyworkAI/DeepResearchAgent/main/#usage"&gt;Usage&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;TODO List&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Asynchronous feature completed&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Image Generator Tool completed&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Video Generator Tool completed&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; MCP in progress&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Load local MCP tools from JSON file completed&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; AI4Research Agent to be developed&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Novel Writing Agent to be developed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Prepare Environment&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# poetry install environment
conda create -n dra python=3.11
conda activate dra
make install

# (Optional) You can also use requirements.txt
conda create -n dra python=3.11
conda activate dra
make install-requirements

# playwright install if needed
pip install playwright
playwright install chromium --with-deps --no-shell
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Set Up &lt;code&gt;.env&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Please refer to the &lt;code&gt;.env.template&lt;/code&gt; file and create a &lt;code&gt;.env&lt;/code&gt; file in the root directory of the project. This file is used to configure API keys and other environment variables.&lt;/p&gt; 
&lt;p&gt;Refer to the following instructions to obtain the necessary google gemini-2.5-pro API key and set it in the &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://aistudio.google.com/app/apikey"&gt;https://aistudio.google.com/app/apikey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/docs/authentication/application-default-credentials?hl=zh-cn"&gt;https://cloud.google.com/docs/authentication/application-default-credentials?hl=zh-cn&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install --cask google-cloud-sdk
gcloud init
gcloud auth application-default login
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Main Example&lt;/h3&gt; 
&lt;p&gt;A simple example to demonstrate the usage of the DeepResearchAgent framework.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python main.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run Single Agent Example&lt;/h3&gt; 
&lt;p&gt;A simple example to demonstrate the usage of a single agent, such as a general tool calling agent.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python examples/run_general.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;RUN GAIA Evaluation Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Download GAIA
mkdir data &amp;amp;&amp;amp; cd data
git clone https://huggingface.co/datasets/gaia-benchmark/GAIA

# Run
python examples/run_gaia.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Experiments&lt;/h2&gt; 
&lt;p&gt;We evaluated our agent on both GAIA validation and test sets, achieving state-of-the-art performance. Our system demonstrates superior performance across all difficulty levels.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/SkyworkAI/DeepResearchAgent/main/docs/assets/gaia_test.png" alt="GAIA Test Results" width="300" /&gt; &lt;img src="https://raw.githubusercontent.com/SkyworkAI/DeepResearchAgent/main/docs/assets/gaia_validation.png" alt="GAIA Validation Results" width="300" /&gt; &lt;/p&gt; 
&lt;p&gt;With the integration of the Computer Use and MCP Manager Agent, which now enables pixel-level control of the browser, our system demonstrates remarkable evolutionary capabilities. The agents can dynamically acquire and enhance their abilities through learning and adaptation, leading to significantly improved performance. The latest results show:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Test Set&lt;/strong&gt;: 83.39 (average), with 93.55 on Level 1, 83.02 on Level 2, and 65.31 on Level 3&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Validation Set&lt;/strong&gt;: 82.4 (average), with 92.5 on Level 1, 83.7 on Level 2, and 57.7 on Level 3&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Questions&lt;/h2&gt; 
&lt;h3&gt;1. About Qwen Models&lt;/h3&gt; 
&lt;p&gt;Our framework now supports:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;qwen2.5-7b-instruct&lt;/li&gt; 
 &lt;li&gt;qwen2.5-14b-instruct&lt;/li&gt; 
 &lt;li&gt;qwen2.5-32b-instruct&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Update your config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;model_id = "qwen2.5-7b-instruct"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Browser Use&lt;/h3&gt; 
&lt;p&gt;If problems occur, reinstall:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install "browser-use[memory]"==0.1.48
pip install playwright
playwright install chromium --with-deps --no-shell
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. Sub-Agent Calling&lt;/h3&gt; 
&lt;p&gt;Function-calling is now supported natively by GPT-4.1 / Gemini 2.5 Pro. Claude-3.7-Sonnet is also recommended.&lt;/p&gt; 
&lt;h3&gt;4. Use vllm for local models&lt;/h3&gt; 
&lt;p&gt;We provide huggingface as a shortcut to the local model. Also provide vllm as a way to start services so that parallel acceleration can be provided.&lt;/p&gt; 
&lt;h4&gt;Step 1: Launch the vLLM Inference Service&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nohup bash -c 'CUDA_VISIBLE_DEVICES=0,1 python -m vllm.entrypoints.openai.api_server \
  --model /input0/Qwen3-32B \
  --served-model-name Qwen \
  --host 0.0.0.0 \
  --port 8000 \
  --max-num-seqs 16 \
  --enable-auto-tool-choice \
  --tool-call-parser hermes \
  --tensor_parallel_size 2' &amp;gt; vllm_qwen.log 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Update &lt;code&gt;.env&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;QWEN_API_BASE=http://localhost:8000/v1
QWEN_API_KEY="abc"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Step 2: Launch the Agent Service&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python main.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;Use deep_researcher_agent to search the latest papers on the topic of 'AI Agent' and then summarize it.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Acknowledgement&lt;/h2&gt; 
&lt;p&gt;DeepResearchAgent is primarily inspired by the architecture of smolagents. The following improvements have been made:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The codebase of smolagents has been modularized for better structure and organization.&lt;/li&gt; 
 &lt;li&gt;The original synchronous framework has been refactored into an asynchronous one.&lt;/li&gt; 
 &lt;li&gt;The multi-agent setup process has been optimized to make it more user-friendly and efficient.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We would like to express our gratitude to the following open source projects, which have greatly contributed to the development of this work:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huggingface/smolagents"&gt;smolagents&lt;/a&gt; - A lightweight agent framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mannaandpoem/OpenManus"&gt;OpenManus&lt;/a&gt; - An asynchronous agent framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/browser-use/browser-use"&gt;browser-use&lt;/a&gt; - An AI-powered browser automation tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unclecode/crawl4ai"&gt;crawl4ai&lt;/a&gt; - A web crawling library for AI applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/markitdown"&gt;markitdown&lt;/a&gt; - A tool for converting files to Markdown format.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We sincerely appreciate the efforts of all contributors and maintainers of these projects for their commitment to advancing AI technologies and making them available to the wider community.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Contributions and suggestions are welcome! Feel free to open issues or submit pull requests.&lt;/p&gt; 
&lt;h2&gt;Cite&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{zhang2025agentorchestrahierarchicalmultiagentframework,
      title={AgentOrchestra: A Hierarchical Multi-Agent Framework for General-Purpose Task Solving}, 
      author={Wentao Zhang, Liang Zeng, Yuzhen Xiao, Yongcong Li, Ce Cui, Yilei Zhao, Rui Hu, Yang Liu, Yahui Zhou, Bo An},
      year={2025},
      eprint={2506.12508},
      archivePrefix={arXiv},
      primaryClass={cs.AI},
      url={https://arxiv.org/abs/2506.12508}, 
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h3&gt;🇨🇳 中文版说明文档&lt;/h3&gt; 
&lt;p&gt;如果你更习惯阅读中文说明文档，请查阅 &lt;a href="https://raw.githubusercontent.com/SkyworkAI/DeepResearchAgent/main/README_CN.md"&gt;README_CN.md&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/monaco-editor</title>
      <link>https://github.com/microsoft/monaco-editor</link>
      <description>&lt;p&gt;A browser based code editor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Monaco Editor&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/monaco-editor"&gt;&lt;img src="https://img.shields.io/npm/v/monaco-editor" alt="Versions" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/monaco-editor"&gt;&lt;img src="https://img.shields.io/npm/v/monaco-editor/next" alt="Versions" /&gt;&lt;/a&gt; &lt;a href="https://github.com/microsoft/monaco-editor/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request+sort%3Areactions-%2B1-desc"&gt;&lt;img src="https://img.shields.io/github/issues/microsoft/monaco-editor/feature-request.svg?sanitize=true" alt="Feature Requests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/microsoft/monaco-editor/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Abug"&gt;&lt;img src="https://img.shields.io/github/issues/microsoft/monaco-editor/bug.svg?sanitize=true" alt="Bugs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The Monaco Editor is the fully featured code editor from &lt;a href="https://github.com/microsoft/vscode"&gt;VS Code&lt;/a&gt;. Check out the &lt;a href="https://code.visualstudio.com/docs/editor/editingevolved"&gt;VS Code docs&lt;/a&gt; to see some of the supported features.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/5047891/94183711-290c0780-fea3-11ea-90e3-c88ff9d21bd6.png" alt="image" /&gt;&lt;/p&gt; 
&lt;h2&gt;Try it out&lt;/h2&gt; 
&lt;p&gt;Try out the editor and see various examples &lt;a href="https://microsoft.github.io/monaco-editor/playground.html"&gt;in our interactive playground&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The playground is the best way to learn about how to use the editor, which features is supports, to try out different versions and to create minimal reproducible examples for bug reports.&lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; npm install monaco-editor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will get:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;inside &lt;code&gt;/esm&lt;/code&gt;: ESM version of the editor (compatible with e.g. webpack)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;monaco.d.ts&lt;/code&gt;: this specifies the API of the editor (this is what is actually versioned, everything else is considered private and might break with any release).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; The monaco editor also ships an &lt;code&gt;AMD&lt;/code&gt; build for backwards-compatibility reasons, but the &lt;code&gt;AMD&lt;/code&gt; support is deprecated and will be removed in future versions.&lt;/p&gt; 
&lt;h2&gt;Concepts&lt;/h2&gt; 
&lt;p&gt;Monaco editor is best known for being the text editor that powers VS Code. However, it's a bit more nuanced. Some basic understanding about the underlying concepts is needed to use Monaco editor effectively.&lt;/p&gt; 
&lt;h3&gt;Models&lt;/h3&gt; 
&lt;p&gt;Models are at the heart of Monaco editor. It's what you interact with when managing content. A model represents a file that has been opened. This could represent a file that exists on a file system, but it doesn't have to. For example, the model holds the text content, determines the language of the content, and tracks the edit history of the content.&lt;/p&gt; 
&lt;h3&gt;URIs&lt;/h3&gt; 
&lt;p&gt;Each model is identified by a URI. This is why it's not possible for two models to have the same URI. Ideally when you represent content in Monaco editor, you should think of a virtual file system that matches the files your users are editing. For example, you could use &lt;code&gt;file:///&lt;/code&gt; as a base path. If a model is created without a URI, its URI will be &lt;code&gt;inmemory://model/1&lt;/code&gt;. The number increases as more models are created.&lt;/p&gt; 
&lt;h3&gt;Editors&lt;/h3&gt; 
&lt;p&gt;An editor is a user facing view of the model. This is what gets attached to the DOM and what your users see visually. Typical editor operations are displaying a model, managing the view state, or executing actions or commands.&lt;/p&gt; 
&lt;h3&gt;Providers&lt;/h3&gt; 
&lt;p&gt;Providers provide smart editor features. For example, this includes completion and hover information. It is not the same as, but often maps to &lt;a href="https://microsoft.github.io/language-server-protocol"&gt;language server protocol&lt;/a&gt; features.&lt;/p&gt; 
&lt;p&gt;Providers work on models. Some smart features depends on the file URI. For example, for TypeScript to resolve imports, or for JSON IntelliSense to determine which JSON schema to apply to which model. So it's important to choose proper model URIs.&lt;/p&gt; 
&lt;h3&gt;Disposables&lt;/h3&gt; 
&lt;p&gt;Many Monaco related objects often implement the &lt;code&gt;.dispose()&lt;/code&gt; method. This method is intended to perform cleanups when a resource is no longer needed. For example, calling &lt;code&gt;model.dispose()&lt;/code&gt; will unregister it, freeing up the URI for a new model. Editors should be disposed to free up resources and remove their model listeners.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Learn how to integrate the editor with these &lt;a href="https://raw.githubusercontent.com/microsoft/monaco-editor/main/samples/"&gt;complete samples&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/monaco-editor/main/docs/integrate-esm.md"&gt;Integrate the ESM version&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Learn how to use the editor API and try out your own customizations in the &lt;a href="https://microsoft.github.io/monaco-editor/playground.html"&gt;playground&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Explore the &lt;a href="https://microsoft.github.io/monaco-editor/docs.html"&gt;API docs&lt;/a&gt; or read them straight from &lt;a href="https://github.com/microsoft/monaco-editor/raw/gh-pages/node_modules/monaco-editor/monaco.d.ts"&gt;&lt;code&gt;monaco.d.ts&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Read &lt;a href="https://github.com/microsoft/monaco-editor/wiki/Accessibility-Guide-for-Integrators"&gt;this guide&lt;/a&gt; to ensure the editor is accessible to all your users!&lt;/li&gt; 
 &lt;li&gt;Create a Monarch tokenizer for a new programming language &lt;a href="https://microsoft.github.io/monaco-editor/monarch.html"&gt;in the Monarch playground&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Ask questions on &lt;a href="https://stackoverflow.com/questions/tagged/monaco-editor"&gt;StackOverflow&lt;/a&gt;! Search open and closed issues, there are a lot of tips in there!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;Create &lt;a href="https://github.com/microsoft/monaco-editor/issues"&gt;issues&lt;/a&gt; in this repository for anything related to the Monaco Editor. Please search for existing issues to avoid duplicates.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;❓ &lt;strong&gt;What is the relationship between VS Code and the Monaco Editor?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Monaco Editor is generated straight from VS Code's sources with some shims around services the code needs to make it run in a web browser outside of its home.&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;What is the relationship between VS Code's version and the Monaco Editor's version?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;None. The Monaco Editor is a library and it reflects directly the source code.&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;I've written an extension for VS Code, will it work on the Monaco Editor in a browser?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;No.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If the extension is fully based on the &lt;a href="https://microsoft.github.io/language-server-protocol/"&gt;LSP&lt;/a&gt; and if the language server is authored in JavaScript, then it would be possible.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;❓ &lt;strong&gt;Why all these web workers and why should I care?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Language services create web workers to compute heavy stuff outside of the UI thread. They cost hardly anything in terms of resource overhead and you shouldn't worry too much about them, as long as you get them to work (see above the cross-domain case).&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;I see the warning "Could not create web worker". What should I do?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;HTML5 does not allow pages loaded on &lt;code&gt;file://&lt;/code&gt; to create web workers. Please load the editor with a web server on &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; schemes.&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;Is the editor supported in mobile browsers or mobile web app frameworks?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;No.&lt;/p&gt; 
&lt;p&gt;❓ &lt;strong&gt;Why doesn't the editor support TextMate grammars?&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Please see &lt;a href="https://github.com/bolinfest/monaco-tm"&gt;https://github.com/bolinfest/monaco-tm&lt;/a&gt; which puts together &lt;code&gt;monaco-editor&lt;/code&gt;, &lt;code&gt;vscode-oniguruma&lt;/code&gt; and &lt;code&gt;vscode-textmate&lt;/code&gt; to get TM grammar support in the editor.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing / Local Development&lt;/h2&gt; 
&lt;p&gt;We are welcoming contributions from the community! Please see &lt;a href="https://raw.githubusercontent.com/microsoft/monaco-editor/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for details how you can contribute effectively, how you can run the editor from sources and how you can debug and fix issues.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href="https://github.com/microsoft/monaco-editor/raw/main/LICENSE.txt"&gt;MIT&lt;/a&gt; License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>appium/appium</title>
      <link>https://github.com/appium/appium</link>
      <description>&lt;p&gt;Cross-platform automation framework for all kinds of apps, built on top of the W3C WebDriver protocol&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://appium.io/"&gt; &lt;img alt="Appium" src="https://raw.githubusercontent.com/appium/appium/master/packages/appium/docs/overrides/assets/images/appium-logo-horiz.png" width="500" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; Cross-platform test automation for native, hybrid, mobile web and desktop apps. &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://npmjs.org/package/appium"&gt;&lt;img src="https://badge.fury.io/js/appium.svg?sanitize=true" alt="NPM version" /&gt;&lt;/a&gt; &lt;a href="https://npmjs.org/package/appium"&gt;&lt;img src="https://img.shields.io/npm/dm/appium.svg?sanitize=true" alt="Monthly Downloads" /&gt;&lt;/a&gt; &lt;a href="https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fappium%2Fappium?ref=badge_shield"&gt;&lt;img src="https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fappium%2Fappium.svg?type=shield" alt="FOSSA Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vshymanskyy/StandWithUkraine/"&gt;&lt;img src="https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/badges/StandWithUkraine.svg?sanitize=true" alt="StandWithUkraine" /&gt;&lt;/a&gt; &lt;a href="https://www.unrwa.org/"&gt;&lt;img src="https://img.shields.io/badge/Ceasefire_Now-%F0%9F%87%B5%F0%9F%87%B8-red?style=flat" alt="CeasefireInGaza" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt;&lt;b&gt; &lt;a href="https://appium.io"&gt;Documentation&lt;/a&gt; | &lt;a href="https://appium.io/docs/en/latest/intro/"&gt;Get Started&lt;/a&gt; | &lt;a href="https://appium.io/docs/en/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; | &lt;a href="https://github.com/appium/appium/raw/master/packages/appium/CHANGELOG.md"&gt;Changelog&lt;/a&gt; | &lt;a href="https://appium.io/docs/en/latest/contributing/"&gt;Contributing Guide&lt;/a&gt; | &lt;a href="https://discuss.appium.io"&gt;Discussion Forum&lt;/a&gt; &lt;/b&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Appium is an open-source automation framework that provides &lt;a href="https://www.w3.org/TR/webdriver/"&gt;WebDriver&lt;/a&gt;-based automation possibilities for a wide range of different mobile, desktop and IoT platforms. Appium is modular and extensible, and supports multiple programming languages, which means there is an entire ecosystem of related software:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/appium/appium/master/#drivers"&gt;&lt;strong&gt;Drivers&lt;/strong&gt;&lt;/a&gt; add support for automating specific platforms&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/appium/appium/master/#clients"&gt;&lt;strong&gt;Clients&lt;/strong&gt;&lt;/a&gt; allow writing Appium tests in your programming language of choice&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/appium/appium/master/#plugins"&gt;&lt;strong&gt;Plugins&lt;/strong&gt;&lt;/a&gt; allow to further extend Appium functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Upgrading From Older Versions&lt;/h2&gt; 
&lt;p&gt;The Appium team only provides support for the most recent version of Appium. If you wish to upgrade from an older major Appium version, please refer to the migration guides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://appium.io/docs/en/latest/guides/migrating-2-to-3/"&gt;Appium v2 to v3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://appium.io/docs/en/latest/guides/migrating-1-to-2/"&gt;Appium v1 to v2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Appium can be installed using &lt;code&gt;npm&lt;/code&gt; (other package managers are not currently supported). Please check the &lt;a href="http://appium.io/docs/en/latest/quickstart/install/"&gt;installation docs&lt;/a&gt; for the system requirements and further information.&lt;/p&gt; 
&lt;p&gt;If upgrading from Appium 1, make sure Appium 1 is fully uninstalled (&lt;code&gt;npm uninstall -g appium&lt;/code&gt;). Unexpected errors might appear if this has not been done.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i -g appium
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that this will only install the core Appium server, which cannot automate anything on its own. Please install &lt;a href="https://raw.githubusercontent.com/appium/appium/master/#drivers"&gt;drivers&lt;/a&gt; for your target platforms in order to automate them.&lt;/p&gt; 
&lt;h2&gt;Drivers&lt;/h2&gt; 
&lt;p&gt;Appium supports app automation across a variety of platforms, like iOS, Android, macOS, Windows, and more. Each platform is supported by one or more "drivers", which know how to automate that particular platform. You can find a full list of officially-supported and third-party drivers in &lt;a href="http://appium.io/docs/en/latest/ecosystem/drivers/"&gt;Appium Ecosystem's Drivers page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Driver management is done using &lt;a href="http://appium.io/docs/en/latest/cli/extensions/"&gt;Appium's Extension command-line interface&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install an official driver from npm (see documentation for a list of such drivers)
appium driver install &amp;lt;driver-name&amp;gt;
# Install any driver from npm
appium driver install --source=npm &amp;lt;driver-name&amp;gt;
# See documentation for installation from other sources

# List already installed drivers
appium driver list --installed
# Update a driver (it must be already installed)
# This will NOT update the major version, in order to prevent breaking changes
appium driver update &amp;lt;driver-name&amp;gt;
# Update a driver to the most recent version (may include breaking changes)
appium driver update &amp;lt;driver-name&amp;gt; --unsafe
# Uninstall a driver (it won't last forever, will it?)
appium driver uninstall &amp;lt;driver-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Clients&lt;/h2&gt; 
&lt;p&gt;Client libraries enable writing Appium tests in different programming languages. There are officially-supported clients for Java, Python, Ruby, and .NET C#, as well as third-party clients for other languages. You can find a full list of clients in &lt;a href="http://appium.io/docs/en/latest/ecosystem/clients/"&gt;Appium Ecosystem's Clients page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;p&gt;Plugins allow you to extend server functionality without changing the server code. The main difference between drivers and plugins is that the latter must be explicitly enabled on Appium server startup (all installed drivers are enabled by default):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;appium --use-plugins=&amp;lt;plugin-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find a full list of officially-supported and third-party plugins in &lt;a href="http://appium.io/docs/en/latest/ecosystem/plugins/"&gt;Appium Ecosystem's Plugins page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Similarly to drivers, plugin management is also done using &lt;a href="http://appium.io/docs/en/latest/cli/extensions/"&gt;Appium's Extension command-line interface&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install an official plugin from npm (see documentation for a list of such plugins)
appium plugin install &amp;lt;plugin-name&amp;gt;
# Install any plugin from npm
appium plugin install --source=npm &amp;lt;plugin-name&amp;gt;
# See documentation for installation from other sources

# List already installed plugins
appium plugin list --installed
# Update a plugin (it must be already installed)
# This will NOT update the major version, in order to prevent breaking changes
appium plugin update &amp;lt;plugin-name&amp;gt;
# Update a plugin to the most recent version (may include breaking changes)
appium plugin update &amp;lt;plugin-name&amp;gt; --unsafe
# Uninstall a plugin
appium plugin uninstall &amp;lt;plugin-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Server Command Line Interface&lt;/h2&gt; 
&lt;p&gt;In order to start sending commands to the Appium server, it must be running on the URL and port where your client library expects it to listen. &lt;a href="http://appium.io/docs/en/latest/cli/server/"&gt;Appium's command-line interface&lt;/a&gt; is used to launch and configure the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start the server on the default host (0.0.0.0) and port (4723)
appium server
# You can also omit the 'server' subcommand
appium
# Start the server on the given host, port and use a custom base path prefix (the default prefix is '/')
appium --address 127.0.0.1 --port 9000 --base-path /wd/hub
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Appium supports execution of parallel server processes, as well as parallel driver sessions within a single server process. Refer the corresponding driver documentations regarding which mode is optimal for the particular driver or whether it supports parallel sessions.&lt;/p&gt; 
&lt;h2&gt;Why Appium?&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;You usually don't have to recompile your app or modify it in any way, due to the use of standard automation APIs on all platforms.&lt;/li&gt; 
 &lt;li&gt;You can write tests with your favorite dev tools using any WebDriver-compatible language such as Java, Python, Ruby and C#. There are also third party client implementations for other languages.&lt;/li&gt; 
 &lt;li&gt;You can use any testing framework.&lt;/li&gt; 
 &lt;li&gt;Some drivers like &lt;code&gt;xcuitest&lt;/code&gt; and &lt;code&gt;uiautomator2&lt;/code&gt; have built-in mobile web and hybrid app support. Within the same script, you can switch seamlessly between native app automation and webview automation, all using the WebDriver model that's already the standard for web automation.&lt;/li&gt; 
 &lt;li&gt;You can run your automated tests locally and in a cloud. There are multiple cloud providers that support various Appium drivers (mostly targeting iOS and Android mobile automation).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/appium/appium-inspector"&gt;Appium Inspector&lt;/a&gt; can be used to visually inspect the page source of applications across different platforms, facilitating easier test development.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Investing in the &lt;a href="https://w3c.github.io/webdriver/webdriver-spec.html"&gt;WebDriver&lt;/a&gt; protocol means you are betting on a single, free, and open protocol for testing that has become a web standard. Don't lock yourself into a proprietary stack.&lt;/p&gt; 
&lt;p&gt;For example, if you use Apple's XCUITest library without Appium, you can only write tests using Obj-C/Swift, and you can only run tests through Xcode. Similarly, with Google's UiAutomator or Espresso, you can only write tests in Java/Kotlin. Appium opens up the possibility of true cross-platform native app automation, for mobile and beyond!&lt;/p&gt; 
&lt;p&gt;If you are looking for a more comprehensive description of what this is all about, please read our documentation on &lt;a href="https://appium.io/docs/en/latest/intro/appium/"&gt;How Does Appium Work?&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Appium has a &lt;a href="https://raw.githubusercontent.com/appium/appium/master/GOVERNANCE.md#sponsorship"&gt;Sponsorship Program&lt;/a&gt;! If you or your company uses Appium and wants to give back financially to the project, we use these funds to &lt;a href="https://raw.githubusercontent.com/appium/appium/master/GOVERNANCE.md#compensation-scheme"&gt;encourage development and contributions&lt;/a&gt;, as well as support other open source projects we rely on. &lt;a href="https://opencollective.com/appium"&gt;Become a sponsor&lt;/a&gt; via our OpenCollective page.&lt;/p&gt; 
&lt;h3&gt;Development and Strategic Partners&lt;/h3&gt; 
&lt;p&gt;Appium is incredibly grateful to our Development and Strategic Partners for their sustained contribution of project development and leadership!&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.browserstack.com/browserstack-appium?utm_campaigncode=701OW00000AoUTQYA3&amp;amp;utm_medium=partnered&amp;amp;utm_source=appium"&gt; 
  &lt;picture&gt; 
   &lt;source srcset="packages/appium/docs/overrides/assets/images/sponsor-logo-browserstack-dark.png" media="(prefers-color-scheme: dark)" /&gt; 
   &lt;source srcset="packages/appium/docs/overrides/assets/images/sponsor-logo-browserstack-light.png" media="(prefers-color-scheme: light)" /&gt; 
   &lt;img src="https://raw.githubusercontent.com/appium/appium/master/packages/appium/docs/overrides/assets/images/sponsor-logo-browserstack-dark.png" width="300" alt="Browserstack" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://lambdatest.com/?utm_source=appium.io&amp;amp;utm_medium=organic&amp;amp;utm_campaign=june_25&amp;amp;utm_term=sk&amp;amp;utm_content=webpage"&gt; 
  &lt;picture&gt; 
   &lt;source srcset="packages/appium/docs/overrides/assets/images/sponsor-logo-lambdatest-dark.png" media="(prefers-color-scheme: dark)" /&gt; 
   &lt;source srcset="packages/appium/docs/overrides/assets/images/sponsor-logo-lambdatest-light.png" media="(prefers-color-scheme: light)" /&gt; 
   &lt;img src="https://raw.githubusercontent.com/appium/appium/master/packages/appium/docs/overrides/assets/images/sponsor-logo-lambdatest-dark.png" width="300" alt="LambdaTest" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;Other Sponsors&lt;/h3&gt; 
&lt;p&gt;A full list of sponsors is available at our &lt;a href="https://appium.io/docs/en/latest/sponsors/"&gt;Sponsors page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/appium/appium/master/LICENSE"&gt;Apache-2.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fappium%2Fappium?ref=badge_large"&gt;&lt;img src="https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fappium%2Fappium.svg?type=large" alt="FOSSA Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;@appium/logger&lt;/code&gt; package is under &lt;a href="https://raw.githubusercontent.com/appium/appium/master/packages/logger/LICENSE"&gt;ISC&lt;/a&gt; License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bigskysoftware/htmx</title>
      <link>https://github.com/bigskysoftware/htmx</link>
      <description>&lt;p&gt;&lt;/&gt; htmx - high power tools for HTML&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://htmx.org"&gt;&lt;img src="https://raw.githubusercontent.com/bigskysoftware/htmx/master/www/static/img/htmx_logo.1.png" alt="&lt;/&gt; htmx" title="high power tools for HTML" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;high power tools for HTML&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://htmx.org/discord"&gt;&lt;img src="https://img.shields.io/discord/725789699527933952" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://app.netlify.com/sites/htmx/deploys"&gt;&lt;img src="https://img.shields.io/netlify/dba3fc85-d9c9-476a-a35a-e52a632cef78" alt="Netlify" /&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/result?p=htmx.org"&gt;&lt;img src="https://badgen.net/bundlephobia/dependency-count/htmx.org" alt="Bundlephobia" /&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/result?p=htmx.org"&gt;&lt;img src="https://badgen.net/bundlephobia/minzip/htmx.org" alt="Bundlephobia" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;introduction&lt;/h2&gt; 
&lt;p&gt;htmx allows you to access &lt;a href="https://htmx.org/docs#ajax"&gt;AJAX&lt;/a&gt;, &lt;a href="https://htmx.org/docs#css_transitions"&gt;CSS Transitions&lt;/a&gt;, &lt;a href="https://htmx.org/extensions/ws/"&gt;WebSockets&lt;/a&gt; and &lt;a href="https://htmx.org/extensions/sse/"&gt;Server Sent Events&lt;/a&gt; directly in HTML, using &lt;a href="https://htmx.org/reference#attributes"&gt;attributes&lt;/a&gt;, so you can build &lt;a href="https://htmx.org/examples"&gt;modern user interfaces&lt;/a&gt; with the &lt;a href="https://en.wikipedia.org/wiki/HATEOAS"&gt;simplicity&lt;/a&gt; and &lt;a href="https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm"&gt;power&lt;/a&gt; of hypertext&lt;/p&gt; 
&lt;p&gt;htmx is small (&lt;a href="https://cdn.jsdelivr.net/npm/htmx.org/dist/"&gt;~14k min.gz'd&lt;/a&gt;), &lt;a href="https://github.com/bigskysoftware/htmx/raw/master/package.json"&gt;dependency-free&lt;/a&gt; &amp;amp; &lt;a href="https://htmx.org/extensions"&gt;extendable&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;motivation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Why should only &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; be able to make HTTP requests?&lt;/li&gt; 
 &lt;li&gt;Why should only &lt;code&gt;click&lt;/code&gt; &amp;amp; &lt;code&gt;submit&lt;/code&gt; events trigger them?&lt;/li&gt; 
 &lt;li&gt;Why should only GET &amp;amp; POST be available?&lt;/li&gt; 
 &lt;li&gt;Why should you only be able to replace the &lt;em&gt;entire&lt;/em&gt; screen?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;By removing these arbitrary constraints htmx completes HTML as a &lt;a href="https://en.wikipedia.org/wiki/Hypertext"&gt;hypertext&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;quick start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;  &amp;lt;script src="https://cdn.jsdelivr.net/npm/htmx.org@2.0.7/dist/htmx.min.js"&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;!-- have a button POST a click via AJAX --&amp;gt;
  &amp;lt;button hx-post="/clicked" hx-swap="outerHTML"&amp;gt;
    Click Me
  &amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;a href="https://htmx.org/attributes/hx-post"&gt;&lt;code&gt;hx-post&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://htmx.org/attributes/hx-swap"&gt;&lt;code&gt;hx-swap&lt;/code&gt;&lt;/a&gt; attributes tell htmx:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"When a user clicks on this button, issue an AJAX request to /clicked, and replace the entire button with the response"&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;htmx is the successor to &lt;a href="http://intercoolerjs.org"&gt;intercooler.js&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;installing as a node package&lt;/h3&gt; 
&lt;p&gt;To install using npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install htmx.org --save
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note there is an old broken package called &lt;code&gt;htmx&lt;/code&gt;. This is &lt;code&gt;htmx.org&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;website &amp;amp; docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://htmx.org"&gt;https://htmx.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://htmx.org/docs"&gt;https://htmx.org/docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;contributing&lt;/h2&gt; 
&lt;p&gt;Want to contribute? Check out our &lt;a href="https://raw.githubusercontent.com/bigskysoftware/htmx/master/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;No time? Then &lt;a href="https://github.com/sponsors/bigskysoftware#sponsors"&gt;become a sponsor&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;hacking guide&lt;/h3&gt; 
&lt;p&gt;To develop htmx locally, you will need to install the development dependencies.&lt;/p&gt; 
&lt;p&gt;Run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, run a web server in the root.&lt;/p&gt; 
&lt;p&gt;This is easiest with:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can then run the test suite by navigating to:&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://0.0.0.0:3000/test/"&gt;http://0.0.0.0:3000/test/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;At this point you can modify &lt;code&gt;/src/htmx.js&lt;/code&gt; to add features, and then add tests in the appropriate area under &lt;code&gt;/test&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;/test/index.html&lt;/code&gt; - the root test page from which all other tests are included&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/test/attributes&lt;/code&gt; - attribute specific tests&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/test/core&lt;/code&gt; - core functionality tests&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/test/core/regressions.js&lt;/code&gt; - regression tests&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/test/ext&lt;/code&gt; - extension tests&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/test/manual&lt;/code&gt; - manual tests that cannot be automated&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;htmx uses the &lt;a href="https://mochajs.org/"&gt;mocha&lt;/a&gt; testing framework, the &lt;a href="https://www.chaijs.com/"&gt;chai&lt;/a&gt; assertion framework and &lt;a href="https://sinonjs.org/releases/v9/fake-xhr-and-server/"&gt;sinon&lt;/a&gt; to mock out AJAX requests. They are all OK.&lt;/p&gt; 
&lt;h2&gt;haiku&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;javascript fatigue:&lt;br /&gt; longing for a hypertext&lt;br /&gt; already in hand&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>plankanban/planka</title>
      <link>https://github.com/plankanban/planka</link>
      <description>&lt;p&gt;PLANKA is the kanban-style project mastering tool for everyone.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PLANKA&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Project mastering driven by fun&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/package-json/v/plankanban/planka?style=flat-square" alt="Version" /&gt; &lt;a href="https://github.com/plankanban/planka/pkgs/container/planka"&gt;&lt;img src="https://img.shields.io/badge/docker_pulls-6M%2B-%23066da5?style=flat-square&amp;amp;color=red" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://github.com/plankanban/planka/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/plankanban/planka?style=flat-square&amp;amp;color=blue" alt="Contributors" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/WqqYNd7Jvt"&gt;&lt;img src="https://img.shields.io/discord/1041440072953765979?style=flat-square&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Chat" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/plankanban/planka/master/assets/demo.gif" alt="Demo" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://plankanban.github.io/planka"&gt;&lt;strong&gt;Client demo&lt;/strong&gt;&lt;/a&gt; (without server features).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ The demo GIF and client demo are based on &lt;strong&gt;v1&lt;/strong&gt; and will be updated soon.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Collaborative Kanban Boards&lt;/strong&gt;: Create projects, boards, lists, cards, and manage tasks with an intuitive drag-and-drop interface&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-Time Updates&lt;/strong&gt;: Instant syncing across all users, no refresh needed&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rich Markdown Support&lt;/strong&gt;: Write beautifully formatted card descriptions with a powerful markdown editor&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible Notifications&lt;/strong&gt;: Get alerts through 100+ providers, fully customizable to your workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Seamless Authentication&lt;/strong&gt;: Single sign-on with OpenID Connect integration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multilingual &amp;amp; Easy to Translate&lt;/strong&gt;: Full internationalization support for a global audience&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to Deploy&lt;/h2&gt; 
&lt;p&gt;PLANKA is easy to install using multiple methods - learn more in the &lt;a href="https://docs.planka.cloud/docs/welcome/"&gt;installation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For configuration and environment settings, see the &lt;a href="https://docs.planka.cloud/docs/category/configuration/"&gt;configuration section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;Interested in a hosted version of PLANKA? Email us at &lt;a href="mailto:github@planka.group"&gt;github@planka.group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For any security issues, please do not create a public issue on GitHub - instead, report it privately by emailing &lt;a href="mailto:security@planka.group"&gt;security@planka.group&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We do NOT offer any public support via email, please use GitHub.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Join our community:&lt;/strong&gt; Get help, share ideas, or contribute on our &lt;a href="https://discord.gg/WqqYNd7Jvt"&gt;Discord server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;PLANKA is &lt;a href="https://faircode.io"&gt;fair-code&lt;/a&gt; distributed under the &lt;a href="https://github.com/plankanban/planka/raw/master/LICENSES/PLANKA%20Community%20License%20EN.md"&gt;Fair Use License&lt;/a&gt; and &lt;a href="https://github.com/plankanban/planka/raw/master/LICENSES/PLANKA%20Commercial%20License%20EN.md"&gt;PLANKA Pro/Enterprise License&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Source Available&lt;/strong&gt;: The source code is always visible&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-Hostable&lt;/strong&gt;: Deploy and host it anywhere&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: Customize with your own functionality&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise Licenses&lt;/strong&gt;: Available for additional features and support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more details, check the &lt;a href="https://github.com/plankanban/planka/raw/master/LICENSES/PLANKA%20License%20Guide%20EN.md"&gt;License Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Found a bug or have a feature request? Check out our &lt;a href="https://github.com/plankanban/planka/raw/master/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;For setting up the project locally, see the &lt;a href="https://docs.planka.cloud/docs/category/development/"&gt;development section&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Thanks to all our contributors!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/plankanban/planka/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=plankanban/planka" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Foundry376/Mailspring</title>
      <link>https://github.com/Foundry376/Mailspring</link>
      <description>&lt;p&gt;💌 A beautiful, fast and fully open source mail client for Mac, Windows and Linux.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;💌 Mailspring&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://travis-ci.com/github/Foundry376/Mailspring"&gt;&lt;img src="https://api.travis-ci.com/Foundry376/Mailspring.svg?branch=master" alt="Travis Status" /&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/Foundry376/Mailspring"&gt;&lt;img src="https://ci.appveyor.com/api/projects/status/iuuuy6d65u3x6bj6?svg=true" alt="AppVeyor Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Mailspring is a new version of Nylas Mail maintained by one of the original authors. It's faster, leaner, and shipping today!&lt;/strong&gt; It replaces the JavaScript sync code in Nylas Mail with a new C++ sync engine based on &lt;a href="https://github.com/MailCore/mailcore2"&gt;Mailcore2&lt;/a&gt;. It uses roughly half the RAM and CPU of Nylas Mail and idles with almost zero "CPU Wakes", which translates to great battery life. It also has an entirely revamped composer and other great new features.&lt;/p&gt; 
&lt;p&gt;Mailspring's UI is open source (GPLv3) and written in TypeScript with &lt;a href="https://github.com/atom/electron"&gt;Electron&lt;/a&gt; and &lt;a href="https://facebook.github.io/react/"&gt;React&lt;/a&gt; - it's built on a plugin architecture and was designed to be easy to extend. Check out &lt;a href="https://github.com/Foundry376/Mailspring/raw/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; to get started!&lt;/p&gt; 
&lt;p&gt;Mailspring's sync engine is spawned by the Electron application and runs locally on your computer. &lt;a href="https://github.com/Foundry376/Mailspring-Sync"&gt;It is open source (GPLv3) and written in C++ and C.&lt;/a&gt; For convenience, however, when you set up your development environment, Mailspring uses the latest version of the sync engine we've shipped for your platform so you don't need to pull sources or install its compile-time dependencies.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/Foundry376/Mailspring/raw/master/screenshots/hero_graphic_mac%402x.png" alt="Mailspring Screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Mailspring comes packed with powerful features like Unified Inbox, Snooze, Send Later, Mail Rules, Templates and more. Mailspring Pro, which you can unlock with a monthly subscription, adds even more features for people who send a ton of email: link tracking, read receipts, mailbox analytics, contact and company profiles. &lt;strong&gt;All of these features run in the client - Mailspring does not send your email credentials to the cloud.&lt;/strong&gt; For a full list of features, check out &lt;a href="https://getmailspring.com/"&gt;getmailspring.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Download Mailspring&lt;/h2&gt; 
&lt;p&gt;You can download compiled versions of Mailspring for Windows, Mac OS X, and Linux (deb, rpm and snap) from &lt;a href="https://getmailspring.com/download"&gt;https://getmailspring.com/download&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Help&lt;/h2&gt; 
&lt;p&gt;You can find community-based help and discussion with other Mailspring users on our &lt;a href="https://community.getmailspring.com/"&gt;Discourse community&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Mailspring is entirely open-source. Pull requests and contributions are welcome! There are three ways to contribute: building a plugin, building a theme, and submitting pull requests to the project itself. When you're getting started, you may want to join our &lt;a href="https://community.getmailspring.com/"&gt;Discourse&lt;/a&gt; so you can ask questions and learn from other people doing development.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Foundry376/Mailspring/master/CODE_OF_CONDUCT.md"&gt;&lt;img src="https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg?sanitize=true" alt="Contributor Covenant" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Running Mailspring from Source&lt;/h3&gt; 
&lt;p&gt;To install all dependencies and run Mailspring from its source code, run the following commands from the root directory of the Mailspring repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;export npm_config_arch=x64 # If you are on an M1 / Apple Silicon Mac
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can attach command line parameters by separating them using a double hyphen:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm start -- --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building Mailspring&lt;/h3&gt; 
&lt;p&gt;To build Mailspring, you need to run the following command from the root directory of the Mailspring repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run-script build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building A Plugin&lt;/h3&gt; 
&lt;p&gt;Plugins lie at the heart of Mailspring and give it its powerful features. Building your own plugins allows you to integrate the app with other tools, experiment with new workflows, and more. Follow the &lt;a href="https://Foundry376.github.io/Mailspring/"&gt;Getting Started guide&lt;/a&gt; to write your first plugin in five minutes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;To create your own theme, check out the &lt;a href="https://github.com/Foundry376/Mailspring-Theme-Starter"&gt;Mailspring-Theme-Starter&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To create your own plugin, check out the &lt;a href="https://github.com/Foundry376/Mailspring-Plugin-Starter"&gt;Mailspring-Plugin-Starter&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A plugin "store" like the Chrome Web Store is coming soon, and will make it easy for other users to discover plugins you create. (Right now, users need to "sideload" the plugins into the app by downloading them and copying them into place.)&lt;/p&gt; 
&lt;p&gt;You can share and browse Mailspring Plugins, and discuss plugin development with other developers, on our &lt;a href="https://community.getmailspring.com/"&gt;Discourse&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Building a Theme&lt;/h3&gt; 
&lt;p&gt;The Mailspring user interface is styled using CSS, which means it's easy to modify and extend. Mailspring comes stock with a few beautiful themes, and there are many more which have been built by community developers. To start creating a theme, &lt;a href="https://github.com/Foundry376/Mailspring-Theme-Starter"&gt;clone the theme starter&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;If you are updating an existing Nylas theme for Mailspring here is a &lt;a href="https://community.getmailspring.com/t/updating-an-n1-nylas-mail-theme-for-mailspring/195"&gt;step by step tutorial&lt;/a&gt;. Notice: as part of the update process you will probably need to &lt;a href="https://github.com/Foundry376/Mailspring/issues/326#issuecomment-343757775"&gt;import mailspring base variables&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can share and browse Mailspring Themes, and discuss theme development with other developers, on our &lt;a href="https://community.getmailspring.com/"&gt;Discourse&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Localizing / Translating&lt;/h3&gt; 
&lt;p&gt;Mailspring (1.5.0 and above) supports localization. If you're a fluent speaker of another language, we'd love your help improving translations. Check out the &lt;a href="https://github.com/Foundry376/Mailspring/raw/master/LOCALIZATION.md"&gt;LOCALIZATION&lt;/a&gt; guide for more information. You can discuss localization and translation with other developers on our &lt;a href="https://community.getmailspring.com/"&gt;Discourse&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing to Mailspring Core&lt;/h3&gt; 
&lt;p&gt;Pull requests are always welcome - check out &lt;a href="https://github.com/Foundry376/Mailspring/raw/master/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for more information about setting up the development environment, running tests locally, and submitting pull requests.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NaiboWang/EasySpider</title>
      <link>https://github.com/NaiboWang/EasySpider</link>
      <description>&lt;p&gt;A visual no-code/code-free web crawler/spider易采集：一个可视化浏览器自动化测试/数据采集/爬虫软件，可以无代码图形化的设计和执行爬虫任务。别名：ServiceWrapper面向Web应用的智能化服务封装系统。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;易采集/EasySpider: Visual Code-Free Web Crawler&lt;/h1&gt; 
&lt;p&gt;一个&lt;strong&gt;完全免费&lt;/strong&gt;（&lt;strong&gt;包括商业使用和二次开发&lt;/strong&gt;）的可视化浏览器自动化测试/数据采集/爬虫软件，可以使用图形化界面，无代码可视化的设计和执行任务。只需要在网页上选择自己想要操作的内容并根据提示框操作即可完成任务的设计和执行。同时软件还可以单独以命令行的方式进行执行，从而可以很方便的嵌入到其他系统中。&lt;/p&gt; 
&lt;p&gt;A &lt;strong&gt;completely free (including for commercial use and secondary development)&lt;/strong&gt; visual browser automation test/data collection/crawler software, which can be used to design and execute tasks in a code-free visual way. You only need to select the content you want to operate on the web page and follow the prompts to complete the design and execution of the task. At the same time, the software can also be executed separately in the command line, so that it can be easily embedded into other systems.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://trendshift.io/repositories/3367" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/3367" alt="NaiboWang%2FEasySpider | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;下载易采集/Download EasySpider&lt;/h2&gt; 
&lt;p&gt;进入 &lt;a href="https://github.com/NaiboWang/EasySpider/releases"&gt;Releases Page&lt;/a&gt; 下载最新版本。如果下载速度慢，可以考虑中国境内下载地址：&lt;a href="https://www.easyspider.cn/download.html"&gt;中国境内下载地址&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;Refer to the &lt;a href="https://github.com/NaiboWang/EasySpider/releases"&gt;Releases Page&lt;/a&gt; to download the latest version of EasySpider.&lt;/p&gt; 
&lt;h2&gt;赞助者/Sponsors&lt;/h2&gt; 
&lt;p&gt;&lt;a target="_blank" href="https://get.brightdata.com/njx4r"&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/BrightData.png" width="850" /&gt;&lt;/a&gt; &lt;a href="https://get.brightdata.com/njx4r"&gt;亮数据BrightData&lt;/a&gt;是代理市场领导者，覆盖全球的7200万IP，提供真人住宅IP，即时批量采集网络公开数据，成功率亲测有保证。需要性价比高代理IP的可&lt;strong&gt;点击上方图片注册&lt;/strong&gt;后联系中文客服，开通后免费试用，&lt;strong&gt;现在有首充多少就送多少的活动&lt;/strong&gt;。BrightData可配合EasySpider进行数据采集。&lt;/p&gt; 
&lt;!-- &lt;a target="_blank" href="https://www.thordata.com/?ls=github&amp;lk=wnb"&gt;&lt;img src="media/thordata.jpg" width=850&gt;&lt;/img&gt;&lt;/a&gt;
[Thordata](https://www.thordata.com/?ls=github&amp;lk=wnb)是全球代理IP解决方案提供商，支持大规模采集公共网络数据，提供 195+ 国家城市、6000 万住宅IP，价格低至 $0.65/GB，支持不限流量、不限IP、不限并发；还包括本土独享ISP静态代理和高性能数据中心代理（均为 $0.75/IP，弹性定价）。点击图片注册后联系中文客服即可免费试用，现在首充还有赠送同额金额活动。可与EasySpider工具配合使用，高效采集网络数据。 --&gt; 
&lt;p&gt;&lt;a target="_blank" href="https://bestproxy.com/?keyword=48xywxar"&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/best_proxy.png" width="850" /&gt;&lt;/a&gt; &lt;a href="https://bestproxy.com/?keyword=48xywxar"&gt;BestProxy&lt;/a&gt;全球独享专属资源池，优选海外195+国家/地区高质量住宅IP，本地ISP原生IP，不限量住宅代理、长效ISP代理、静态数据中心代理、网页爬虫API，城市级精准定位，支持HTTP(S)和SOCKS5协议，低检测风险，全方位代理服务解决方案，助力各种场景业务IP代理需求。$0.66/G起按需付费和长期套餐，适合不同预算需求，24/7多语言支持，联系客服免费试用500M。可与EasySpider工具配合使用，高效采集网络数据。&lt;/p&gt; 
&lt;p&gt;&lt;a target="_blank" href="https://www.ipdodo.com/account/register?invite_code=GE1XXDLJ"&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/IPdodo.png" width="850" /&gt;&lt;/a&gt; &lt;a href="https://www.ipdodo.com/account/register?invite_code=GE1XXDLJ"&gt;IPdodo&lt;/a&gt;专注为跨境用户，提供独享/纯净/家宽/原生/双ISP的全球代理IP，不限流量。全球8000万真实住宅IP，覆盖200+国家/地区，99.9%匿名保护，且支持Http/Https/Socks5协议，满足爬虫、数据采集、跨境电商、tk/fb流媒体等业务场景。现在前往IPdodo注册，支持免费试用。&lt;/p&gt; 
&lt;!-- &lt;a target="_blank" href="https://www.ipwo.net/?code=KK9YVWI2L"&gt;&lt;img src="media/IPWO_Proxy.gif" width=850&gt;&lt;/img&gt;&lt;/a&gt;

&lt;!-- [IPWO](https://www.ipwo.net/?code=KK9YVWI2L)支持免费测试，作为行业领先的代理IP提供商，拥有 9000万+真实住宅IP，覆盖200+国家和地区，支持无限并发，可用率高达99.9%，帮助用户轻松突破地理限制，实现高效、安全的全球网络访问，与EasySpider完美结合，助力数据采集，尽享无缝体验。 --&gt; 
&lt;!-- &lt;a target="_blank" href="https://www.capsolver.com/zh?utm_source=github&amp;utm_medium=banner_github&amp;utm_campaign=easyspider"&gt;&lt;img src="media/capsolver.jpg" width=850&gt;&lt;/img&gt;&lt;/a&gt; --&gt; 
&lt;!-- [![Capsolver](media/capsolver.jpg)](https://www.capsolver.com/zh?utm_source=github&amp;utm_medium=banner_github&amp;utm_campaign=easyspider) --&gt; 
&lt;!-- [Capsolver.com](https://www.capsolver.com/?utm_source=github&amp;utm_medium=banner_github&amp;utm_campaign=easyspider) is an AI-powered service that specializes in solving various types of captchas automatically. It supports captchas such as [reCAPTCHA V2](https://docs.capsolver.com/guide/captcha/ReCaptchaV2.html?utm_source=github&amp;utm_medium=banner_github&amp;utm_campaign=easyspider), [reCAPTCHA V3](https://docs.capsolver.com/guide/captcha/ReCaptchaV3.html?utm_source=github&amp;utm_medium=banner_github&amp;utm_campaign=easyspider), [DataDome](https://docs.capsolver.com/guide/captcha/DataDome.html?utm_source=github&amp;utm_medium=banner_github&amp;utm_campaign=easyspider), [AWS Captcha](https://docs.capsolver.com/guide/captcha/awsWaf.html?utm_source=github&amp;utm_medium=banner_github&amp;utm_campaign=easyspider), [Geetest](https://docs.capsolver.com/guide/captcha/Geetest.html?utm_source=github&amp;utm_medium=banner_github&amp;utm_campaign=easyspider), and Cloudflare [Captcha](https://docs.capsolver.com/guide/antibots/cloudflare_turnstile.html?utm_source=github&amp;utm_medium=banner_github&amp;utm_campaign=easyspider) / [Challenge 5s](https://docs.capsolver.com/guide/antibots/cloudflare_challenge.html?utm_source=github&amp;utm_medium=banner_github&amp;utm_campaign=easyspider), [Imperva / Incapsula](https://docs.capsolver.com/guide/antibots/imperva.html?utm_source=github&amp;utm_medium=banner_github&amp;utm_campaign=easyspider), among others.
For developers, Capsolver offers API integration options detailed in their [documentation](https://docs.capsolver.com/?utm_source=github&amp;utm_medium=banner_github&amp;utm_campaign=easyspider), facilitating the integration of captcha solving into applications. They also provide browser extensions for [Chrome](https://chromewebstore.google.com/detail/captcha-solver-auto-captc/pgojnojmmhpofjgdmaebadhbocahppod) and [Firefox](https://addons.mozilla.org/es/firefox/addon/capsolver-captcha-solver/), making it easy to use their service directly within a browser. Different pricing packages are available to accommodate varying needs, ensuring flexibility for users. --&gt; 
&lt;!-- &lt;a target="_blank" href="https://www.proxy302.com/?ref=wangnaibo"&gt;&lt;img src="media/Proxy302.jpg" width=850&gt;&lt;/img&gt;&lt;/a&gt;

[Proxy302](https://www.proxy302.com/?ref=wangnaibo)是一个全球代理IP自助超市。按需付费，无需套餐捆绑购买；无阶梯式定价，充值即可使用所有类型的代理IP；免费测试，注册获取$1测试额度。覆盖全球240＋国家和地区，6500万个住宅IP可供选择。Proxy302可配合EasySpider进行数据采集。

&lt;a target="_blank" href="https://www.123proxy.cn/?utm_source=EasySpider"&gt;&lt;img src="media/123proxy.png" width=850&gt;&lt;/img&gt;&lt;/a&gt;

[123Proxy](https://www.123proxy.cn/?utm_source=EasySpider)是企业级海外代理IP提供商, 拥有独家的8000万+代理IP池，190+国家覆盖，真实家庭住宅IP，适合各种用途的数据采集类任务。它支持免费测试2-4小时，**点击上方图片注册**联系客服即可获取；它还支持15%返现活动，给公司购买代理可以返现到个人，直接微信/支付宝返现，打工人的小福利。123Proxy可配合EasySpider进行数据采集。

&lt;a target="_blank" href="https://koala-ip.com/"&gt;&lt;img src="media/Koala-IP.png" width=850&gt;&lt;/img&gt;&lt;/a&gt;

[Koala-IP](https://koala-ip.com/)提供海量低价高质量代理IP服务，致力于为客户提供[最优价格](https://zh-cn.koala-ip.com/var-ip)和最稳定的代理IP解决方案。无论你是需要网络爬虫、数据抓取、隐私保护还是跨地域访问，[Koala-IP（中文）](https://zh-cn.koala-ip.com/) 都能满足你的所有需求。[立即注册Koala-IP](https://koala-ip.com/admin/register)，享受超高性价比的代理IP服务，提升你的业务效益！ --&gt; 
&lt;h2&gt;官方网站/Official Website&lt;/h2&gt; 
&lt;p&gt;访问易采集官网：&lt;a href="http://www.easyspider.cn"&gt;www.easyspider.cn&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Visit the official website of EasySpider: &lt;a href="http://www.easyspider.net"&gt;www.easyspider.net&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;软件使用示例/Software Usage Example&lt;/h2&gt; 
&lt;h3&gt;示例1/Example 1&lt;/h3&gt; 
&lt;p&gt;（右键）选中一个大商品块 -&amp;gt; 软件自动检测到同类型商品块 -&amp;gt; 点击“选中全部”选项 -&amp;gt; 点击“选中子元素”选项 -&amp;gt; 点击“采集数据”选项，即可采集到所有商品的所有信息，并分成不同字段保存。&lt;/p&gt; 
&lt;p&gt;(Right click) Select a large product block -&amp;gt; The software will automatically detect similar blocks -&amp;gt; Click the 'Select All' option -&amp;gt; Click the 'Select Child Elements' option -&amp;gt; Click the 'Collect Data' option, you can collect the information of all products, and will be saved by sub-field.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/animation_zh.gif" alt="animation_zh" /&gt;&lt;/p&gt; 
&lt;h3&gt;示例2/Example 2&lt;/h3&gt; 
&lt;p&gt;（右键）选中一个商品标题，同类型标题会被自动匹配，点击“选中全部”选项 -&amp;gt; 点击“采集数据”选项，即可采集到所有商品的标题信息。&lt;/p&gt; 
&lt;p&gt;同时，选中全部后如果选择“循环点击每个元素”选项，即可自动打开每个商品的详情页，然后可以再继续设置采集详情页的信息。&lt;/p&gt; 
&lt;p&gt;(Right Click) Select a product title, the same type of title will be automatically matched, click the 'Select All' option -&amp;gt; Click the 'Collect Data' option, you can collect the title information of all products.&lt;/p&gt; 
&lt;p&gt;At the same time, if you select the 'Loop-click every element' option after selecting all, you can automatically open the details page of each product, and then can set to collect the information of the details page.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/animation_en.gif" alt="animation_en" /&gt;&lt;/p&gt; 
&lt;h3&gt;更多特性/More Features&lt;/h3&gt; 
&lt;p&gt;更多特性请翻到页面底部查看。&lt;/p&gt; 
&lt;p&gt;More features please scroll to the bottom of this page to view.&lt;/p&gt; 
&lt;h2&gt;支持作者/Support Author&lt;/h2&gt; 
&lt;p&gt;易采集EasySpider是一款完全免费且使用中无广告的开源软件，软件开发和维护全靠作者用爱发电，因此您可以选择支持作者让作者有更多的热情和精力维护此软件，或者您使用了此软件进行了盈利，欢迎您通过下面的方式支持作者：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Github Sponsor：直接点击右侧&lt;strong&gt;Sponsor&lt;/strong&gt;按钮赞助。&lt;/li&gt; 
 &lt;li&gt;支付宝账号：&lt;a href="mailto:naibowang@foxmail.com"&gt;naibowang@foxmail.com&lt;/a&gt;，也可以扫描下方二维码。&lt;/li&gt; 
 &lt;li&gt;微信收款：扫描下方二维码。&lt;/li&gt; 
 &lt;li&gt;PayPal账号：naibowang，也可以扫描下方二维码。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You can support the author by clicking the &lt;strong&gt;Sponsor&lt;/strong&gt; button at right side or pay via paypal: naibowang.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/QRCODES.png" alt="QRCodes" /&gt;&lt;/p&gt; 
&lt;h2&gt;文档/Documentation&lt;/h2&gt; 
&lt;p&gt;请点此进入&lt;a href="https://github.com/NaiboWang/EasySpider/wiki"&gt;教程文档&lt;/a&gt;，如有英文可暂时翻译一下，或看作者的&lt;a href="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/Docs/%E9%9D%A2%E5%90%91WEB%E5%BA%94%E7%94%A8%E7%9A%84%E6%99%BA%E8%83%BD%E5%8C%96%E6%9C%8D%E5%8A%A1%E5%B0%81%E8%A3%85%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0.pdf"&gt;硕士毕业论文&lt;/a&gt;（主要看第三章和第五章）。&lt;/p&gt; 
&lt;p&gt;Ebay样例博客：&lt;a href="https://blog.csdn.net/ihero/article/details/130805504"&gt;https://blog.csdn.net/ihero/article/details/130805504&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;Documentation can be found from &lt;a href="https://github.com/NaiboWang/EasySpider/wiki"&gt;GitHub Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;视频教程/Video Tutorials&lt;/h2&gt; 
&lt;p&gt;Bilibili/B站视频教程:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1th411A7ey/"&gt;EasySpider介绍 - 中国地震台网采集案例&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1G14y1o7Qa/"&gt;设置页面向下滚动&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1BN411t71C/"&gt;如何无代码可视化的爬取需要登录才能爬的网站 - 知乎网站案例&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV12V411D7RZ"&gt;循环点击列表中每个链接进入详情页采集详情页内容+设计时动态调试+动态JS&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV14u4y1x7S5/"&gt;实战采集汽车网文章内容并下载文章内图片&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1N94y1a7Lp/"&gt;定时执行任务+选中子元素多种模式+将提取值作为变量输入&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV18C4y1V7J7/"&gt;【重要】自定义条件判断之使用循环项内的JS命令返回值 - 第二弹&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV14N4y1o73Y/"&gt;流程图执行逻辑解析 - 58同城房源描述采集案例&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1E34y137fT/"&gt;MacOS系统设计和执行eBay网站爬虫任务教程&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1UH4y1f7BM/"&gt;如何执行自己写的JS代码和系统代码 （自定义操作）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV18w411a77e/"&gt;如何自定义循环和判断条件 - 第一弹&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1ch4y1E7cn/"&gt;如何对元素和网页截图及命令行执行指南&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1GP411y7u4/"&gt;OCR识别元素内容功能（常用于文字验证码）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1Rw411C7Hs/"&gt;如何爬需要输入验证码的网站&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1zw411w7BN/"&gt;如何切换IP池和使用隧道IP - 打开详情页采集案例&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1Dj411b77M/"&gt;如何同时执行多个任务（并行多开）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1kF411R7VJ/"&gt;Python代码运算后的结果作为文本框的输入&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1XH4y1Z78i/"&gt;实例 - 反人类网站文章采集和代码调试&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1os4y1679S/"&gt;写入MySQL数据库教程&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1VE421P7yj/"&gt;从源代码编译程序并设计运行和调试任务指南（基于Ubuntu24.04）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Refer to &lt;a href="https://youtube.com/playlist?list=PL0kEFEkWrT7mt9MUlEBV2DTo1QsaanUTp"&gt;Youtube Playlist&lt;/a&gt; to see the video tutorials of EasySpider.&lt;/p&gt; 
&lt;h2&gt;样例任务/Sample Tasks&lt;/h2&gt; 
&lt;p&gt;从本项目的&lt;a href="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/Examples"&gt;Examples&lt;/a&gt;文件夹中下载样例任务，更名为大于0的数字，导入到EasySpider中的&lt;code&gt;tasks&lt;/code&gt;文件夹中，然后在EasySpider中打开即可。&lt;/p&gt; 
&lt;p&gt;Download sample tasks from the &lt;a href="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/Examples"&gt;Examples&lt;/a&gt; folder of this project, rename them to numbers greater than 0, import them into the &lt;code&gt;tasks&lt;/code&gt; folder in EasySpider, and then open them in EasySpider.&lt;/p&gt; 
&lt;h2&gt;声明/Declaration&lt;/h2&gt; 
&lt;p&gt;本软件仅供学习交流使用，&lt;strong&gt;严禁使用软件进行任何违法违规的操作，如爬取不允许爬取的政府/军事机关网站等&lt;/strong&gt;。使用本软件所造成的&lt;strong&gt;一切后果由使用者自负&lt;/strong&gt;，与作者本人无关，&lt;strong&gt;作者不会承担任何责任&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;This software is for learning and communication only. &lt;strong&gt;It is strictly forbidden to use the software for any illegal operations, such as crawling government/military websites that are not allowed to be crawled.&lt;/strong&gt; All consequences caused by the use of this software are &lt;strong&gt;at the user's own risk, and the author is not responsible for any consequences&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;对于政府和军事机关等网站的爬虫操作，&lt;strong&gt;作者将不会进行任何答疑&lt;/strong&gt;，以免违反国家相关法律法规和政策。&lt;/p&gt; 
&lt;p&gt;For the crawler operations of government and military websites, &lt;strong&gt;the author will not answer any questions&lt;/strong&gt; in order to avoid violating relevant national laws, regulations and policies.&lt;/p&gt; 
&lt;p&gt;EasySpider遵循AGPL-3.0协议，&lt;strong&gt;任何个人和企业都可以免费使用软件本身或使用源代码进行二次开发，无需联系作者进行商业（专利）授权&lt;/strong&gt;，但需要注意AGPL-3.0协议的相关规则：&lt;/p&gt; 
&lt;p&gt;EasySpider complies with the AGPL-3.0 agreement. &lt;strong&gt;Any individual or enterprise can use the software for free and use the software source code for secondary development without contacting the author for commercial (patent) authorization.&lt;/strong&gt; However, it is necessary to pay attention to the related rules of the AGPL-3.0 agreement:&lt;/p&gt; 
&lt;h3&gt;1. Copyleft（传染性） / Copyleft (Viral Clause)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;衍生作品 / Derivative Works&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;任何基于 AGPL 代码的修改或衍生作品，必须&lt;strong&gt;以相同许可证（AGPL-3.0）发布&lt;/strong&gt;。&lt;/li&gt; 
   &lt;li&gt;Any modifications or derivative works based on AGPL code must be &lt;strong&gt;licensed under AGPL-3.0&lt;/strong&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;联动范围 / Scope of Copyleft&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;若 AGPL 代码与其他代码结合（如静态链接、紧密集成），整个作品需遵守 AGPL。&lt;/li&gt; 
   &lt;li&gt;If AGPL code is combined with other code (e.g., static linking), the entire work must comply with AGPL.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2. 网络使用条款 / Network Use Clause&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SaaS 触发开源义务 / SaaS Trigger&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;若软件以服务形式提供（如网站、API），必须向所有用户公开&lt;strong&gt;完整对应源代码&lt;/strong&gt;（包括修改后的代码）。&lt;/li&gt; 
   &lt;li&gt;If the software is provided as a service (e.g., website, API), the &lt;strong&gt;full corresponding source code&lt;/strong&gt; (including modifications) must be made available to all users.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;用户权利 / User Rights&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;服务的接收者可通过下载或书面请求获取源码。&lt;/li&gt; 
   &lt;li&gt;Service recipients may obtain the source code via download or written request.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3. 源码提供要求 / Source Code Provision&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;二进制分发 / Binary Distribution&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;必须附带源码或提供获取渠道（如下载链接）。&lt;/li&gt; 
   &lt;li&gt;Source code must be included or a download link provided.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;网络服务场景 / Network Service Scenario&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;需通过服务界面&lt;strong&gt;显式提供源码链接&lt;/strong&gt;，或向用户书面承诺提供源码。&lt;/li&gt; 
   &lt;li&gt;The service interface must &lt;strong&gt;explicitly provide a source code link&lt;/strong&gt; or offer a written offer for source code.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4. 专利授权 / Patent Grant&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;贡献者自动授予用户与软件相关的专利许可，禁止专利诉讼。&lt;/li&gt; 
 &lt;li&gt;Contributors automatically grant users patent rights related to the software, and prohibit patent litigation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;5. 免责声明 / Disclaimer&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;软件按“原样”提供，作者&lt;strong&gt;不承担任何责任&lt;/strong&gt;（无担保条款）。&lt;/li&gt; 
 &lt;li&gt;The software is provided "as is" with &lt;strong&gt;no warranties or liabilities&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;答疑QQ群&lt;/h2&gt; 
&lt;p&gt;群号：&lt;strong&gt;682921940&lt;/strong&gt;，建议通过Github提Issue的方式答疑，如果实在有需要才请加QQ群，因为群人数有上限，&lt;strong&gt;QQ群不提供软件下载功能&lt;/strong&gt;。&lt;/p&gt; 
&lt;h2&gt;出版物/Publications&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;This software has been accepted by The Web Conference (WWW) 2023 (中国计算机学会顶级会议，CCF A): &lt;a href="https://dl.acm.org/doi/abs/10.1145/3543873.3587345"&gt;EasySpider: A No-Code Visual System for Crawling the Web&lt;/a&gt;, April 2023.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;中国国家知识产权局发明专利，&lt;a href="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/patent.png"&gt;一种自定义提取流程的服务封装系统&lt;/a&gt;， 2022年5月。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://d.wanfangdata.com.cn/thesis/Y3691829"&gt;浙江大学硕士论文&lt;/a&gt;，&lt;a href="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/Docs/%E9%9D%A2%E5%90%91WEB%E5%BA%94%E7%94%A8%E7%9A%84%E6%99%BA%E8%83%BD%E5%8C%96%E6%9C%8D%E5%8A%A1%E5%B0%81%E8%A3%85%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0.pdf"&gt;面向WEB应用的智能化服务封装系统设计与实现&lt;/a&gt;，2020年6月。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- - See the [Copyright Declaration Page](https://github.com/NaiboWang/EasySpider/blob/master/media/readme_back.md) here.
 --&gt; 
&lt;h2&gt;编译说明/Compilation Instructions&lt;/h2&gt; 
&lt;p&gt;查看&lt;a href="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/ElectronJS/README.md"&gt;编译说明&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;Refer to &lt;a href="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/ElectronJS/README.md"&gt;Compilation Instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;支持特性/Supported Features&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/features_CN.png" alt="pic" /&gt; &lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/features_EN.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h2&gt;中文界面截图&lt;/h2&gt; 
&lt;h4&gt;软件界面示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;块和子块及表单定义&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture2.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;已选中和待选择示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture7.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;京东商品块选择示例：&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture1.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;京东商品标题自动匹配选择示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture5.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;分块选择所有子元素示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture6.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;同类型元素自动和手动匹配示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture8.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;四种选择方式示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture90.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;输入文字示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture10.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;循环点击58同城房屋标题以进入详情页采集示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture12.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;采集元素文本示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture14.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;流程图界面介绍&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture4.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;循环选项示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture9.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;循环点击下一页示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture11.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;条件分支示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture13.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;完整采集流程图示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture16.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;完整采集流程图转换为常规流程图示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture91.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;服务信息示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture15.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;服务调用示例&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture17.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;h4&gt;58 同城房源信息采集服务部分采集结果展示&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/NaiboWang/EasySpider/master/media/Picture18.png" alt="pic" /&gt;&lt;/p&gt; 
&lt;!-- ## Ethics Discussion
Various fields can benefit from web crawlers due to their open access nature.
Inevitably, there will be some risk of malicious use or data infringement issue, e.g., automatic order swiping and ticket grabbing, but this is contrary to our expectations. As a tool developer, we only hope that it can be used for legitimate purposes. We advocate the reasonable and legal utilization of our system, respecting and protecting the data security and privacy. --&gt;</description>
    </item>
    
    <item>
      <title>trueadm/ripple</title>
      <link>https://github.com/trueadm/ripple</link>
      <description>&lt;p&gt;the elegant TypeScript UI framework&lt;/p&gt;&lt;hr&gt;&lt;a href="https://ripplejs.com"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="assets/ripple-dark.png" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/trueadm/ripple/main/assets/ripple-light.png" alt="Ripple - the elegant TypeScript UI framework" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;p&gt;&lt;a href="https://github.com/trueadm/ripple/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/trueadm/ripple/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/JBF2ySrh2W"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join%20Server-7289da?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://stackblitz.com/github/trueadm/ripple/tree/main/templates/basic"&gt;&lt;img src="https://developer.stackblitz.com/img/open_in_stackblitz_small.svg?sanitize=true" alt="Open in StackBlitz" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;What is Ripple?&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Currently, this project is still in early development, and should not be used in production.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Ripple is a TypeScript UI framework that takes the best parts of React, Solid and Svelte and combines them into one package.&lt;/p&gt; 
&lt;p&gt;I wrote Ripple as a love letter for frontend web – and this is largely a project that I built in less than a week, so it's very raw.&lt;/p&gt; 
&lt;p&gt;Personally, I (&lt;a href="https://github.com/trueadm"&gt;@trueadm&lt;/a&gt;) have been involved in some truly amazing frontend frameworks along their journeys – from &lt;a href="https://github.com/infernojs/inferno"&gt;Inferno&lt;/a&gt;, where it all began, to &lt;a href="https://github.com/facebook/react"&gt;React&lt;/a&gt; and the journey of React Hooks, to creating &lt;a href="https://github.com/facebook/lexical"&gt;Lexical&lt;/a&gt;, to &lt;a href="https://github.com/sveltejs/svelte"&gt;Svelte 5&lt;/a&gt; and its new compiler and signal-based reactivity runtime. Along that journey, I collected ideas, and intriguing thoughts that may or may not pay off. Given my time between roles, I decided it was the best opportunity to try them out, and for open source to see what I was cooking.&lt;/p&gt; 
&lt;p&gt;Ripple was designed to be a JS/TS-first framework, rather than HTML-first. Ripple modules have their own &lt;code&gt;.ripple&lt;/code&gt; extension, and these modules fully support TypeScript. By introducing a new extension, it allows Ripple to invent its own superset language, which plays really nicely with TypeScript and JSX, but with a few interesting touches. In my experience, this has led to better DX not only for humans, but also for LLMs.&lt;/p&gt; 
&lt;p&gt;Right now, there will be plenty of bugs, things just won't work either and you'll find TODOs everywhere. At this stage, Ripple is more of an early alpha version of something that &lt;em&gt;might&lt;/em&gt; be, rather than something you should try and adopt. If anything, maybe some of the ideas can be shared and incubated back into other frameworks. There's also a lot of similarities with Svelte 5, and that's not by accident; that's because of my recent time working on Svelte 5.&lt;/p&gt; 
&lt;p&gt;If you'd like to know more, join the &lt;a href="https://discord.gg/JBF2ySrh2W"&gt;Ripple Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Reactive State Management&lt;/strong&gt;: Built-in reactivity with &lt;code&gt;$&lt;/code&gt; prefixed variables and object properties&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based Architecture&lt;/strong&gt;: Clean, reusable components with props and children&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSX-like Syntax&lt;/strong&gt;: Familiar templating with Ripple-specific enhancements&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Fine-grain rendering, with industry-leading performance and memory usage&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TypeScript Support&lt;/strong&gt;: Full TypeScript integration with type checking&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VSCode Integration&lt;/strong&gt;: Rich editor support with diagnostics, syntax highlighting, and IntelliSense&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prettier Support&lt;/strong&gt;: Full Prettier formatting support for &lt;code&gt;.ripple&lt;/code&gt; modules&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Missing Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SSR&lt;/strong&gt;: Ripple is currently an SPA only, this is because I haven't gotten around to it&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Types&lt;/strong&gt;: The codebase is very raw with limited types; we're getting around to it&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Try Ripple&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;We're working hard on getting an online playground available. Watch this space!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can try Ripple now by using our basic Vite template either via &lt;a href="https://stackblitz.com/github/trueadm/ripple/tree/main/templates/basic"&gt;StackBlitz&lt;/a&gt;, or by running these commands in your terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx degit trueadm/ripple/templates/basic my-app
cd my-app
npm i # or yarn or pnpm
npm run dev # or yarn or pnpm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;VSCode Extension&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://marketplace.visualstudio.com/items?itemName=ripplejs.ripple-vscode-plugin"&gt;Ripple VSCode extension&lt;/a&gt; provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Syntax Highlighting&lt;/strong&gt; for &lt;code&gt;.ripple&lt;/code&gt; files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-time Diagnostics&lt;/strong&gt; for compilation errors&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TypeScript Integration&lt;/strong&gt; for type checking&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;IntelliSense&lt;/strong&gt; for autocompletion&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can find the extension on the VS Code Marketplace as &lt;a href="https://marketplace.visualstudio.com/items?itemName=ripplejs.ripple-vscode-plugin"&gt;&lt;code&gt;Ripple for VS Code&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also &lt;a href="https://github.com/trueadm/ripple/raw/refs/heads/main/packages/ripple-vscode-plugin/published/ripple-vscode-plugin.vsix"&gt;manually install the extension&lt;/a&gt; &lt;code&gt;.vsix&lt;/code&gt; that have been manually packaged.&lt;/p&gt; 
&lt;h3&gt;Mounting your app&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;mount&lt;/code&gt; API from the &lt;code&gt;ripple&lt;/code&gt; package to render your Ripple component, using the &lt;code&gt;target&lt;/code&gt; option to specify what DOM element you want to render the component.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// index.ts
import { mount } from 'ripple';
import { App } from '/App.ripple';

mount(App, {
  props: {
    title: 'Hello world!',
  },
  target: document.getElementById('root'),
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Key Concepts&lt;/h2&gt; 
&lt;h3&gt;Components&lt;/h3&gt; 
&lt;p&gt;Define reusable components with the &lt;code&gt;component&lt;/code&gt; keyword. These are similar to functions in that they have &lt;code&gt;props&lt;/code&gt;, but crucially, they allow for a JSX-like syntax to be defined alongside standard TypeScript. That means you do not &lt;em&gt;return JSX&lt;/em&gt; like in other frameworks, but you instead use it like a JavaScript statement, as shown:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component Button(props: { text: string, onClick: () =&amp;gt; void }) {
  &amp;lt;button onClick={props.onClick}&amp;gt;
    {props.text}
  &amp;lt;/button&amp;gt;
}

// Usage
export component App() {
  &amp;lt;Button text="Click me" onClick={() =&amp;gt; console.log("Clicked!")} /&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ripple's templating language also supports shorthands and object spreads too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-svelte"&gt;// you can do a normal prop
&amp;lt;div onClick={onClick}&amp;gt;{text}&amp;lt;/div&amp;gt;

// or using the shorthand prop
&amp;lt;div {onClick}&amp;gt;{text}&amp;lt;/div&amp;gt;

// and you can spread props
&amp;lt;div {...properties}&amp;gt;{text}&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Reactive Variables&lt;/h3&gt; 
&lt;p&gt;Variables prefixed with &lt;code&gt;$&lt;/code&gt; are automatically reactive:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;let $name = 'World';
let $count = 0;

// Updates automatically trigger re-renders
$count++;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Object properties prefixed with &lt;code&gt;$&lt;/code&gt; are also automatically reactive:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;let counter = { $current: 0 };

// Updates automatically trigger re-renders
counter.$current++;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Derived values are simply &lt;code&gt;$&lt;/code&gt; variables that combined different parts of state:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;let $count = 0;
let $double = $count * 2;
let $quadruple = $double * 2;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That means &lt;code&gt;$count&lt;/code&gt; itself might be derived if it were to reference another reactive property. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component Counter({ $startingCount }) {
  let $count = $startingCount;
  let $double = $count * 2;
  let $quadruple = $double * 2;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now given &lt;code&gt;$startingCount&lt;/code&gt; is reactive, it would mean that &lt;code&gt;$count&lt;/code&gt; might reset each time an incoming change to &lt;code&gt;$startingCount&lt;/code&gt; occurs. That might not be desirable, so Ripple provides a way to &lt;code&gt;untrack&lt;/code&gt; reactivity in those cases:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { untrack } from 'ripple';

component Counter({ $startingCount }) {
  let $count = untrack(() =&amp;gt; $startingCount);
  let $double = $count * 2;
  let $quadruple = $double * 2;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now &lt;code&gt;$count&lt;/code&gt; will only reactively create its value on initialization.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: you cannot define reactive variables in module/global scope, they have to be created on access from an active component&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Transporting Reactivity&lt;/h4&gt; 
&lt;p&gt;Ripple doesn't constrain reactivity to components only. Reactivity can be used inside other functions (and classes in the future) and be composed in a way to improve expressivity and co-location.&lt;/p&gt; 
&lt;p&gt;Ripple provides a very nice way to transport reactivity between boundaries so that it's persisted – using objects and arrays. Here's an example using arrays to transport reactivity:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { effect } from 'ripple';

function createDouble([ $count ]) {
  const $double = $count * 2;

  effect(() =&amp;gt; {
    console.log('Count:', $count)
  });

  return [ $double ];
}

export component App() {
  let $count = 0;

  const [ $double ] = createDouble([ $count ]);

  &amp;lt;div&amp;gt;{'Double: ' + $double}&amp;lt;/div&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; { $count++; }}&amp;gt;{'Increment'}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can do the same with objects too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { effect } from 'ripple';

function createDouble({ $count }) {
  const $double = $count * 2;

  effect(() =&amp;gt; {
    console.log('Count:', $count)
  });

  return { $double };
}

export component App() {
  let $count = 0;
  const { $double } = createDouble({ $count });

  &amp;lt;div&amp;gt;{'Double: ' + $double}&amp;lt;/div&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; { $count++; }}&amp;gt;{'Increment'}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Just remember, reactive state must be connected to a component and it can't be global or created within the top-level of a module – because then Ripple won't be able to link it to your component tree.&lt;/p&gt; 
&lt;h4&gt;Reactive Arrays&lt;/h4&gt; 
&lt;p&gt;Just like, objects, you can use the &lt;code&gt;$&lt;/code&gt; prefix in an array literal to specify that the field is reactive.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let $first = 0;
let $second = 0;
const arr = [$first, $second];

const $total = arr.reduce((a, b) =&amp;gt; a + b, 0);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Like shown in the above example, you can compose normal arrays with reactivity and pass them through props or boundaries.&lt;/p&gt; 
&lt;p&gt;However, if you need the entire array to be fully reactive, including when new elements get added, you should use the reactive array that Ripple provides.&lt;/p&gt; 
&lt;p&gt;You'll need to import the &lt;code&gt;RippleArray&lt;/code&gt; class from Ripple. It extends the standard JS &lt;code&gt;Array&lt;/code&gt; class, and supports all of its methods and properties.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { RippleArray } from 'ripple';

// using the new constructor
const arr = new RippleArray(1, 2, 3);

// using static from method
const arr = RippleArray.from([1, 2, 3]);

// using static of method
const arr = RippleArray.of(1, 2, 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;RippleArray&lt;/code&gt; is a reactive array, and that means you can access properties normally using numeric index. However, accessing the &lt;code&gt;length&lt;/code&gt; property of a &lt;code&gt;RippleArray&lt;/code&gt; will be not be reactive, instead you should use &lt;code&gt;$length&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Reactive Set&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;RippleSet&lt;/code&gt; extends the standard JS &lt;code&gt;Set&lt;/code&gt; class, and supports all of its methods and properties. However, accessing the &lt;code&gt;size&lt;/code&gt; property of a &lt;code&gt;RippleSet&lt;/code&gt; will be not be reactive, instead you should use &lt;code&gt;$size&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { RippleSet } from 'ripple';

const set = new RippleSet([1, 2, 3]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;RippleSet's reactive methods or properties can be used directly or assigned to reactive variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { RippleSet } from 'ripple';

export component App() {
  const set = new RippleSet([1, 2, 3]);

  // direct usage
  &amp;lt;p&amp;gt;{"Direct usage: set contains 2: "}{set.has(2)}&amp;lt;/p&amp;gt;

  // reactive assignment with prefixed `$`
  let $has = set.has(2);
  &amp;lt;p&amp;gt;{"Assigned usage: set contains 2: "}{$has}&amp;lt;/p&amp;gt;

  &amp;lt;button onClick={() =&amp;gt; set.delete(2)}&amp;gt;{"Delete 2"}&amp;lt;/button&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; set.add(2)}&amp;gt;{"Add 2"}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Reactive Map&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;RippleMap&lt;/code&gt; extends the standard JS &lt;code&gt;Map&lt;/code&gt; class, and supports all of its methods and properties. However, accessing the &lt;code&gt;size&lt;/code&gt; property of a &lt;code&gt;RippleMap&lt;/code&gt; will be not be reactive, instead you should use &lt;code&gt;$size&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { RippleMap } from 'ripple';

const map = new RippleMap([[1,1], [2,2], [3,3], [4,4]]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;RippleMap's reactive methods or properties can be used directly or assigned to reactive variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { RippleMap } from 'ripple';

export component App() {
  const map = new RippleMap([[1,1], [2,2], [3,3], [4,4]]);

  // direct usage
  &amp;lt;p&amp;gt;{"Direct usage: map has an item with key 2: "}{map.has(2)}&amp;lt;/p&amp;gt;

  // reactive assignment with prefixed `$`
  let $has = map.has(2);
  &amp;lt;p&amp;gt;{"Assigned usage: map has an item with key 2: "}{$has}&amp;lt;/p&amp;gt;

  &amp;lt;button onClick={() =&amp;gt; map.delete(2)}&amp;gt;{"Delete item with key 2"}&amp;lt;/button&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; map.set(2, 2)}&amp;gt;{"Add key 2 with value 2"}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Effects&lt;/h3&gt; 
&lt;p&gt;When dealing with reactive state, you might want to be able to create side-effects based upon changes that happen upon updates. To do this, you can use &lt;code&gt;effect&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { effect } from 'ripple';

export component App() {
  let $count = 0;

  effect(() =&amp;gt; {
    console.log($count);
  });

  &amp;lt;button onClick={() =&amp;gt; $count++}&amp;gt;{'Increment'}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Control flow&lt;/h3&gt; 
&lt;p&gt;The JSX-like syntax might take some time to get used to if you're coming from another framework. For one, templating in Ripple can only occur &lt;em&gt;inside&lt;/em&gt; a &lt;code&gt;component&lt;/code&gt; body – you can't create JSX inside functions, or assign it to variables as an expression.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;div&amp;gt;
  // you can create variables inside the template!
  const str = "hello world";

  console.log(str); // and function calls too!

  debugger; // you can put breakpoints anywhere to help debugging!

  {str}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that strings inside the template need to be inside &lt;code&gt;{"string"}&lt;/code&gt;, you can't do &lt;code&gt;&amp;lt;div&amp;gt;hello&amp;lt;/div&amp;gt;&lt;/code&gt; as Ripple has no idea if &lt;code&gt;hello&lt;/code&gt; is a string or maybe some JavaScript code that needs evaluating, so just ensure you wrap them in curly braces. This shouldn't be an issue in the real-world anyway, as you'll likely use an i18n library that means using JavaScript expressions regardless.&lt;/p&gt; 
&lt;h3&gt;If statements&lt;/h3&gt; 
&lt;p&gt;If blocks work seamlessly with Ripple's templating language, you can put them inside the JSX-like statements, making control-flow far easier to read and reason with.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component Truthy({ x }) {
  &amp;lt;div&amp;gt;
    if (x) {
      &amp;lt;span&amp;gt;{'x is truthy'}&amp;lt;/span&amp;gt;
    } else {
      &amp;lt;span&amp;gt;{'x is falsy'}&amp;lt;/span&amp;gt;
    }
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;For statements&lt;/h3&gt; 
&lt;p&gt;You can render collections using a &lt;code&gt;for...of&lt;/code&gt; block, and you don't need to specify a &lt;code&gt;key&lt;/code&gt; prop like other frameworks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component ListView({ title, items }) {
  &amp;lt;h2&amp;gt;{title}&amp;lt;/h2&amp;gt;
  &amp;lt;ul&amp;gt;
    for (const item of items) {
      &amp;lt;li&amp;gt;{item.text}&amp;lt;/li&amp;gt;
    }
  &amp;lt;/ul&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can use Ripple's reactive arrays to easily compose contents of an array.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { RippleArray } from 'ripple';

component Numbers() {
  const items = new RippleArray(1, 2, 3);

  for (const item of items) {
    &amp;lt;div&amp;gt;{item}&amp;lt;/div&amp;gt;
  }

  &amp;lt;button onClick={() =&amp;gt; items.push(`Item ${items.$length + 1}`)}&amp;gt;{"Add Item"}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Clicking the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; will create a new item, note that &lt;code&gt;items&lt;/code&gt; is not &lt;code&gt;$&lt;/code&gt; prefixed, because it's not reactive, but rather its properties are instead.&lt;/p&gt; 
&lt;h3&gt;Try statements&lt;/h3&gt; 
&lt;p&gt;Try blocks work to build the foundation for &lt;strong&gt;error boundaries&lt;/strong&gt;, when the runtime encounters an error in the &lt;code&gt;try&lt;/code&gt; block, you can easily render a fallback in the &lt;code&gt;catch&lt;/code&gt; block.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { reportError } from 'some-library';

component ErrorBoundary() {
  &amp;lt;div&amp;gt;
    try {
      &amp;lt;ComponentThatFails /&amp;gt;
    } catch (e) {
      reportError(e);

      &amp;lt;div&amp;gt;{'An error occurred! ' + e.message}&amp;lt;/div&amp;gt;
    }
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Props&lt;/h3&gt; 
&lt;p&gt;If you want a prop to be reactive, you should also give it a &lt;code&gt;$&lt;/code&gt; prefix.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component Button(props: { $text: string, onClick: () =&amp;gt; void }) {
  &amp;lt;button onClick={props.onClick}&amp;gt;
    {props.$text}
  &amp;lt;/button&amp;gt;
}

// Usage
&amp;lt;Button $text={some_text} onClick={() =&amp;gt; console.log("Clicked!")} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This also applies to DOM elements, if you want an attribute or property to be reactive, it needs to have a &lt;code&gt;$&lt;/code&gt; prefix.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-tsx"&gt;&amp;lt;div $class={props.$someClass} $id={$someId}&amp;gt;
  {$someText}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Otherwise changes to the attribute or property will not be reactively updated.&lt;/p&gt; 
&lt;h3&gt;Children&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;$children&lt;/code&gt; prop and then use it in the form of &lt;code&gt;&amp;lt;$children /&amp;gt;&lt;/code&gt; for component composition.&lt;/p&gt; 
&lt;p&gt;When you pass in children to a component, it gets implicitly passed as the &lt;code&gt;$children&lt;/code&gt; prop, in the form of a component.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import type { Component } from 'ripple';

component Card(props: { $children: Component }) {
  &amp;lt;div class="card"&amp;gt;
    &amp;lt;props.$children /&amp;gt;
  &amp;lt;/div&amp;gt;
}

// Usage
&amp;lt;Card&amp;gt;
  &amp;lt;p&amp;gt;{"Card content here"}&amp;lt;/p&amp;gt;
&amp;lt;/Card&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You could also explicitly write the same code as shown:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import type { Component } from 'ripple';

component Card(props: { $children: Component }) {
  &amp;lt;div class="card"&amp;gt;
    &amp;lt;props.$children /&amp;gt;
  &amp;lt;/div&amp;gt;
}

// Usage with explicit component
&amp;lt;Card&amp;gt;
  component $children() {
    &amp;lt;p&amp;gt;{"Card content here"}&amp;lt;/p&amp;gt;
  }
&amp;lt;/Card&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Accessor Props&lt;/h3&gt; 
&lt;p&gt;When working with props on composite components (&lt;code&gt;&amp;lt;Foo&amp;gt;&lt;/code&gt; rather than &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;), it can sometimes be difficult to debug why a certain value is a certain way. JavaScript gives us a way to do this on objects using the &lt;code&gt;get&lt;/code&gt; syntax:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let name = 'Bob';

const object = {
  get name() {
    // I can easily debug when this property gets
    // access and track it easily
    console.log(name);
    return name;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So Ripple provides similar capabilities when working with composite components in a template, specifically using &lt;code&gt;$prop:={}&lt;/code&gt; rather than the typical &lt;code&gt;$prop={}&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In fact, when you use an accessor, you must pass a function, and the prop must be &lt;code&gt;$&lt;/code&gt; prefixed, as Ripple considers accessor props as reactive:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;let $name = 'Bob';

const getName = () =&amp;gt; {
  // I can easily debug when this property gets
  // access and track it easily
  console.log(name);
  return $name;
};

&amp;lt;Person $name:={getName} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also inline the function too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;let $name = 'Bob';

&amp;lt;Person $name:={() =&amp;gt; {
  // I can easily debug when this property gets
  // access and track it easily
  console.log(name);
  return $name;
}} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Furthermore, just like property accessors in JavaScript, Ripple provides a way of capturing the &lt;code&gt;set&lt;/code&gt; too, enabling two-way data-flow on composite component props. You just need to provide a second function after the first, separated using a comma:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;let $name = 'Bob';

const getName = () =&amp;gt; {
  return $name;
}

const setName = (newName) =&amp;gt; {
  $name = newName;
}

&amp;lt;Person $name:={getName, setName} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or an inlined version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;let $name = 'Bob';

&amp;lt;Person $name:={() =&amp;gt; $name, (newName) =&amp;gt; $name = $newName} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now changes in the &lt;code&gt;Person&lt;/code&gt; to its &lt;code&gt;props&lt;/code&gt; will propagate to its parent component:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component Person(props) {
  const updateName = (newName) =&amp;gt; {
    props.$name = newName;
  }

  &amp;lt;NameInput onChange={updateName}&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Refs&lt;/h3&gt; 
&lt;p&gt;Ripple provides a consistent way to capture the underlying DOM element – refs. Specifically, using the syntax &lt;code&gt;{ref fn}&lt;/code&gt; where &lt;code&gt;fn&lt;/code&gt; is a function that captures the DOM element. If you're familiar with other frameworks, then this is identical to &lt;code&gt;{@attach fn}&lt;/code&gt; in Svelte 5 and somewhat similar to &lt;code&gt;ref&lt;/code&gt; in React. The hook function will receive the reference to the underlying DOM element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
  let $node;

  const divRef = (node) =&amp;gt; {
    $node = node;
    console.log("mounted", node);

    return () =&amp;gt; {
      $node = undefined;
      console.log("unmounted", node);
    };
  };

  &amp;lt;div {ref divRef}&amp;gt;{"Hello world"}&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also create &lt;code&gt;{ref}&lt;/code&gt; functions inline.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
  let $node;

  &amp;lt;div {ref (node) =&amp;gt; {
    $node = node;
    return () =&amp;gt; $node = null;
  }}&amp;gt;{"Hello world"}&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use function factories to define properties, these are functions that return functions that do the same thing. However, you can use this pattern to pass reactive properties.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { fadeIn } from 'some-library';

export component App({ $ms }) {
  &amp;lt;div {ref fadeIn({ $ms })}&amp;gt;{"Hello world"}&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Lastly, you can use refs on composite components.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;Image {ref (node) =&amp;gt; console.log(node)} {...props} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When passing refs to composite components (rather than HTML elements) as shown above, they will be passed a &lt;code&gt;Symbol&lt;/code&gt; property, as they are not named. This still means that it can be spread to HTML template elements later on and still work.&lt;/p&gt; 
&lt;h4&gt;createRefKey&lt;/h4&gt; 
&lt;p&gt;Creates a unique object key that will be recognised as a ref when the object is spread onto an element. This allows programmatic assignment of refs without relying directly on the &lt;code&gt;{ref ...}&lt;/code&gt; template syntax.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { createRefKey } from 'ripple';

export component App() {
  let $value = '';

  const props = {
    id: "example",
    $value,
    [createRefKey()]: (node) =&amp;gt; {
      const removeListener = node.addEventListener('input', (e) =&amp;gt; $value = e.target.value);

      return () =&amp;gt; {
        removeListener();
      }
    }
  };

  // applied to an element
  &amp;lt;input type="text" {...props} /&amp;gt;

  // with composite component
  &amp;lt;Input {...props} /&amp;gt;
}

component Input({ id, $value, ...rest }) {
  &amp;lt;input type="text" {id} {$value} {...rest} /&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Event Props&lt;/h3&gt; 
&lt;p&gt;Like React, events are props that start with &lt;code&gt;on&lt;/code&gt; and then continue with an uppercase character, such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;onClick&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onPointerMove&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onPointerDown&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onKeyDown&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For &lt;code&gt;capture&lt;/code&gt; phase events, just add &lt;code&gt;Capture&lt;/code&gt; to the end of the prop name:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;onClickCapture&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onPointerMoveCapture&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onPointerDownCapture&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onKeyDownCapture&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Some events are automatically delegated where possible by Ripple to improve runtime performance.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Styling&lt;/h3&gt; 
&lt;p&gt;Ripple supports native CSS styling that is localized to the given component using the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component MyComponent() {
  &amp;lt;div class="container"&amp;gt;&amp;lt;h1&amp;gt;{'Hello World'}&amp;lt;/h1&amp;gt;&amp;lt;/div&amp;gt;

  &amp;lt;style&amp;gt;
    .container {
      background: blue;
      padding: 1rem;
    }

    h1 {
      color: white;
      font-size: 2rem;
    }
  &amp;lt;/style&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; element must be top-level within a &lt;code&gt;component&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Context&lt;/h3&gt; 
&lt;p&gt;Ripple has the concept of &lt;code&gt;context&lt;/code&gt; where a value or reactive object can be shared through the component tree – like in other frameworks. This all happens from the &lt;code&gt;createContext&lt;/code&gt; function that is imported from &lt;code&gt;ripple&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;When you create a context, you can &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; the values, but this must happen within the component. Using them outside will result in an error being thrown.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { createContext } from 'ripple';

const MyContext = createContext(null);

component Child() {
  // Context is read in the Child component
  const value = MyContext.get(MyContext);

  // value is "Hello from context!"
  console.log(value);
}

component Parent() {
  const value = MyContext.get(MyContext);

  // Context is read in the Parent component, but hasn't yet
  // been set, so we fallback to the initial context value.
  // So the value is `null`
  console.log(value);

  // Context is set in the Parent component
  MyContext.set("Hello from context!");

  &amp;lt;Child /&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We are happy for your interest in contributing. Please see our &lt;a href="https://raw.githubusercontent.com/trueadm/ripple/main/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/trueadm/ripple/main/LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>open-webui/open-webui</title>
      <link>https://github.com/open-webui/open-webui</link>
      <description>&lt;p&gt;User-friendly AI Interface (Supports Ollama, OpenAI API, ...)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open WebUI 👋&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/stars/open-webui/open-webui?style=social" alt="GitHub stars" /&gt; &lt;img src="https://img.shields.io/github/forks/open-webui/open-webui?style=social" alt="GitHub forks" /&gt; &lt;img src="https://img.shields.io/github/watchers/open-webui/open-webui?style=social" alt="GitHub watchers" /&gt; &lt;img src="https://img.shields.io/github/repo-size/open-webui/open-webui" alt="GitHub repo size" /&gt; &lt;img src="https://img.shields.io/github/languages/count/open-webui/open-webui" alt="GitHub language count" /&gt; &lt;img src="https://img.shields.io/github/languages/top/open-webui/open-webui" alt="GitHub top language" /&gt; &lt;img src="https://img.shields.io/github/last-commit/open-webui/open-webui?color=red" alt="GitHub last commit" /&gt; &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;&lt;img src="https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/tjbck"&gt;&lt;img src="https://img.shields.io/static/v1?label=Sponsor&amp;amp;message=%E2%9D%A4&amp;amp;logo=GitHub&amp;amp;color=%23fe8e86" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Open WebUI is an &lt;a href="https://docs.openwebui.com/features/plugin/"&gt;extensible&lt;/a&gt;, feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.&lt;/strong&gt; It supports various LLM runners like &lt;strong&gt;Ollama&lt;/strong&gt; and &lt;strong&gt;OpenAI-compatible APIs&lt;/strong&gt;, with &lt;strong&gt;built-in inference engine&lt;/strong&gt; for RAG, making it a &lt;strong&gt;powerful AI deployment solution&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Passionate about open-source AI? &lt;a href="https://careers.openwebui.com/"&gt;Join our team →&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/open-webui/open-webui/main/demo.gif" alt="Open WebUI Demo" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;br /&gt; &lt;strong&gt;Looking for an &lt;a href="https://docs.openwebui.com/enterprise"&gt;Enterprise Plan&lt;/a&gt;?&lt;/strong&gt; – &lt;strong&gt;&lt;a href="mailto:sales@openwebui.com"&gt;Speak with Our Sales Team Today!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Get &lt;strong&gt;enhanced capabilities&lt;/strong&gt;, including &lt;strong&gt;custom theming and branding&lt;/strong&gt;, &lt;strong&gt;Service Level Agreement (SLA) support&lt;/strong&gt;, &lt;strong&gt;Long-Term Support (LTS) versions&lt;/strong&gt;, and &lt;strong&gt;more!&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For more information, be sure to check out our &lt;a href="https://docs.openwebui.com/"&gt;Open WebUI Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Key Features of Open WebUI ⭐&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🚀 &lt;strong&gt;Effortless Setup&lt;/strong&gt;: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both &lt;code&gt;:ollama&lt;/code&gt; and &lt;code&gt;:cuda&lt;/code&gt; tagged images.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🤝 &lt;strong&gt;Ollama/OpenAI API Integration&lt;/strong&gt;: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with &lt;strong&gt;LMStudio, GroqCloud, Mistral, OpenRouter, and more&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🛡️ &lt;strong&gt;Granular Permissions and User Groups&lt;/strong&gt;: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔄 &lt;strong&gt;SCIM 2.0 Support&lt;/strong&gt;: Enterprise-grade user and group provisioning through SCIM 2.0 protocol, enabling seamless integration with identity providers like Okta, Azure AD, and Google Workspace for automated user lifecycle management.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📱 &lt;strong&gt;Responsive Design&lt;/strong&gt;: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📱 &lt;strong&gt;Progressive Web App (PWA) for Mobile&lt;/strong&gt;: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;✒️🔢 &lt;strong&gt;Full Markdown and LaTeX Support&lt;/strong&gt;: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🎤📹 &lt;strong&gt;Hands-Free Voice/Video Call&lt;/strong&gt;: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🛠️ &lt;strong&gt;Model Builder&lt;/strong&gt;: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through &lt;a href="https://openwebui.com/"&gt;Open WebUI Community&lt;/a&gt; integration.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🐍 &lt;strong&gt;Native Python Function Calling Tool&lt;/strong&gt;: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📚 &lt;strong&gt;Local RAG Integration&lt;/strong&gt;: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the &lt;code&gt;#&lt;/code&gt; command before a query.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔍 &lt;strong&gt;Web Search for RAG&lt;/strong&gt;: Perform web searches using providers like &lt;code&gt;SearXNG&lt;/code&gt;, &lt;code&gt;Google PSE&lt;/code&gt;, &lt;code&gt;Brave Search&lt;/code&gt;, &lt;code&gt;serpstack&lt;/code&gt;, &lt;code&gt;serper&lt;/code&gt;, &lt;code&gt;Serply&lt;/code&gt;, &lt;code&gt;DuckDuckGo&lt;/code&gt;, &lt;code&gt;TavilySearch&lt;/code&gt;, &lt;code&gt;SearchApi&lt;/code&gt; and &lt;code&gt;Bing&lt;/code&gt; and inject the results directly into your chat experience.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🌐 &lt;strong&gt;Web Browsing Capability&lt;/strong&gt;: Seamlessly integrate websites into your chat experience using the &lt;code&gt;#&lt;/code&gt; command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🎨 &lt;strong&gt;Image Generation Integration&lt;/strong&gt;: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI's DALL-E (external), enriching your chat experience with dynamic visual content.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;⚙️ &lt;strong&gt;Many Models Conversations&lt;/strong&gt;: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔐 &lt;strong&gt;Role-Based Access Control (RBAC)&lt;/strong&gt;: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🌐🌍 &lt;strong&gt;Multilingual Support&lt;/strong&gt;: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We're actively seeking contributors!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🧩 &lt;strong&gt;Pipelines, Open WebUI Plugin Support&lt;/strong&gt;: Seamlessly integrate custom logic and Python libraries into Open WebUI using &lt;a href="https://github.com/open-webui/pipelines"&gt;Pipelines Plugin Framework&lt;/a&gt;. Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. &lt;a href="https://github.com/open-webui/pipelines/tree/main/examples"&gt;Examples&lt;/a&gt; include &lt;strong&gt;Function Calling&lt;/strong&gt;, User &lt;strong&gt;Rate Limiting&lt;/strong&gt; to control access, &lt;strong&gt;Usage Monitoring&lt;/strong&gt; with tools like Langfuse, &lt;strong&gt;Live Translation with LibreTranslate&lt;/strong&gt; for multilingual support, &lt;strong&gt;Toxic Message Filtering&lt;/strong&gt; and much more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🌟 &lt;strong&gt;Continuous Updates&lt;/strong&gt;: We are committed to improving Open WebUI with regular updates, fixes, and new features.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Want to learn more about Open WebUI's features? Check out our &lt;a href="https://docs.openwebui.com/features"&gt;Open WebUI documentation&lt;/a&gt; for a comprehensive overview!&lt;/p&gt; 
&lt;h2&gt;Sponsors 🙌&lt;/h2&gt; 
&lt;h4&gt;Emerald&lt;/h4&gt; 
&lt;table&gt; 
 &lt;!-- &lt;tr&gt;
    &lt;td&gt;
      &lt;a href="https://n8n.io/" target="_blank"&gt;
        &lt;img src="https://docs.openwebui.com/sponsors/logos/n8n.png" alt="n8n" style="width: 8rem; height: 8rem; border-radius: .75rem;" /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href="https://n8n.io/"&gt;n8n&lt;/a&gt; • Does your interface have a backend yet?&lt;br&gt;Try &lt;a href="https://n8n.io/"&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt; --&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;amp;utm_medium=paid-ad-placement&amp;amp;utm_campaign=OpenWebUI-Docs" target="_blank"&gt; &lt;img src="https://docs.openwebui.com/sponsors/logos/tailscale.png" alt="Tailscale" style="width: 8rem; height: 8rem; border-radius: .75rem;" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;amp;utm_medium=paid-ad-placement&amp;amp;utm_campaign=OpenWebUI-Docs"&gt;Tailscale&lt;/a&gt; • Connect self-hosted AI to any device with Tailscale &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://warp.dev/open-webui" target="_blank"&gt; &lt;img src="https://docs.openwebui.com/sponsors/logos/warp.png" alt="Warp" style="width: 8rem; height: 8rem; border-radius: .75rem;" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://warp.dev/open-webui"&gt;Warp&lt;/a&gt; • The intelligent terminal for developers &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;p&gt;We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!&lt;/p&gt; 
&lt;h2&gt;How to Install 🚀&lt;/h2&gt; 
&lt;h3&gt;Installation via Python pip 🐍&lt;/h3&gt; 
&lt;p&gt;Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you're using &lt;strong&gt;Python 3.11&lt;/strong&gt; to avoid compatibility issues.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Open WebUI&lt;/strong&gt;: Open your terminal and run the following command to install Open WebUI:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install open-webui
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Running Open WebUI&lt;/strong&gt;: After installation, you can start Open WebUI by executing:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;open-webui serve
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This will start the Open WebUI server, which you can access at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Quick Start with Docker 🐳&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on &lt;a href="https://docs.openwebui.com/"&gt;Open WebUI Documentation&lt;/a&gt; is ready to assist you.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] When using Docker to install Open WebUI, make sure to include the &lt;code&gt;-v open-webui:/app/backend/data&lt;/code&gt; in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;br /&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either &lt;code&gt;:cuda&lt;/code&gt; or &lt;code&gt;:ollama&lt;/code&gt;. To enable CUDA, you must install the &lt;a href="https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/"&gt;Nvidia CUDA container toolkit&lt;/a&gt; on your Linux/WSL system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Installation with Default Configuration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;If Ollama is on your computer&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;If Ollama is on a Different Server&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;p&gt;To connect to Ollama on another server, change the &lt;code&gt;OLLAMA_BASE_URL&lt;/code&gt; to the server's URL:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;To run Open WebUI with Nvidia GPU support&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation for OpenAI API Usage Only&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;If you're only using OpenAI API&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installing Open WebUI with Bundled Ollama Support&lt;/h3&gt; 
&lt;p&gt;This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;With GPU Support&lt;/strong&gt;: Utilize GPU resources by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For CPU Only&lt;/strong&gt;: If you're not using a GPU, use this command instead:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.&lt;/p&gt; 
&lt;p&gt;After installation, you can access Open WebUI at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;. Enjoy! 😄&lt;/p&gt; 
&lt;h3&gt;Other Installation Methods&lt;/h3&gt; 
&lt;p&gt;We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our &lt;a href="https://docs.openwebui.com/getting-started/"&gt;Open WebUI Documentation&lt;/a&gt; or join our &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;Discord community&lt;/a&gt; for comprehensive guidance.&lt;/p&gt; 
&lt;p&gt;Look at the &lt;a href="https://docs.openwebui.com/getting-started/advanced-topics/development"&gt;Local Development Guide&lt;/a&gt; for instructions on setting up a local development environment.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;Encountering connection issues? Our &lt;a href="https://docs.openwebui.com/troubleshooting/"&gt;Open WebUI Documentation&lt;/a&gt; has got you covered. For further assistance and to join our vibrant community, visit the &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;Open WebUI Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Open WebUI: Server Connection Error&lt;/h4&gt; 
&lt;p&gt;If you're experiencing connection issues, it’s often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the &lt;code&gt;--network=host&lt;/code&gt; flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example Docker Command&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Keeping Your Docker Installation Up-to-Date&lt;/h3&gt; 
&lt;p&gt;In case you want to update your local Docker installation to the latest version, you can do it with &lt;a href="https://containrrr.dev/watchtower/"&gt;Watchtower&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the last part of the command, replace &lt;code&gt;open-webui&lt;/code&gt; with your container name if it is different.&lt;/p&gt; 
&lt;p&gt;Check our Updating Guide available in our &lt;a href="https://docs.openwebui.com/getting-started/updating"&gt;Open WebUI Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Using the Dev Branch 🌙&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The &lt;code&gt;:dev&lt;/code&gt; branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the &lt;code&gt;:dev&lt;/code&gt; tag like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Offline Mode&lt;/h3&gt; 
&lt;p&gt;If you are running Open WebUI in an offline environment, you can set the &lt;code&gt;HF_HUB_OFFLINE&lt;/code&gt; environment variable to &lt;code&gt;1&lt;/code&gt; to prevent attempts to download models from the internet.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export HF_HUB_OFFLINE=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What's Next? 🌟&lt;/h2&gt; 
&lt;p&gt;Discover upcoming features on our roadmap in the &lt;a href="https://docs.openwebui.com/roadmap/"&gt;Open WebUI Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License 📜&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/open-webui/open-webui/main/LICENSE"&gt;Open WebUI License&lt;/a&gt;, a revised BSD-3-Clause license. You receive all the same rights as the classic BSD-3 license: you can use, modify, and distribute the software, including in proprietary and commercial products, with minimal restrictions. The only additional requirement is to preserve the "Open WebUI" branding, as detailed in the LICENSE file. For full terms, see the &lt;a href="https://raw.githubusercontent.com/open-webui/open-webui/main/LICENSE"&gt;LICENSE&lt;/a&gt; document. 📄&lt;/p&gt; 
&lt;h2&gt;Support 💬&lt;/h2&gt; 
&lt;p&gt;If you have any questions, suggestions, or need assistance, please open an issue or join our &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;Open WebUI Discord community&lt;/a&gt; to connect with us! 🤝&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://star-history.com/#open-webui/open-webui&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=open-webui/open-webui&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=open-webui/open-webui&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=open-webui/open-webui&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;p&gt;Created by &lt;a href="https://github.com/tjbck"&gt;Timothy Jaeryang Baek&lt;/a&gt; - Let's make Open WebUI even more amazing together! 💪&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>met4citizen/TalkingHead</title>
      <link>https://github.com/met4citizen/TalkingHead</link>
      <description>&lt;p&gt;Talking Head (3D): A JavaScript class for real-time lip-sync using Ready Player Me full-body 3D avatars.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Talking Head (3D)&lt;/h1&gt; 
&lt;h3&gt;Demo Videos&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;All the demo videos are real-time screen captures from a Chrome browser running the TalkingHead test web app without any post-processing.&lt;/em&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Video&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;span style="display: block; min-width:400px"&gt;&lt;a href="https://youtu.be/YUbDIWkskuw"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/dynamicbones.jpg" width="400" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://youtu.be/4Y9NFnENH5s"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/dynamicbones2.jpg" width="400" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Having a good hair day! – A two-part introduction to the TalkingHead's dynamic bones feature 🦴🦴 and built-in physics engine. Using custom models with rigged hair and two different hairstyles. See Appendix E for more details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://youtu.be/OA6LBZjkzJI"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/screenshot4.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;I chat with Jenny and Harri. The close-up view allows you to evaluate the accuracy of lip-sync in both English and Finnish. Using GPT-3.5 and Microsoft text-to-speech.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://youtu.be/fJrYGaGCAGo"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/screenshot5.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A short demo of how AI can control the avatar's movements. Using OpenAI's function calling and Google TTS with the TalkingHead's built-in viseme generation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://youtu.be/6XRxALY1Iwg"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/screenshot6.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Michael lip-syncs to two MP3 audio tracks using OpenAI's Whisper and TalkingHead's &lt;code&gt;speakAudio&lt;/code&gt; method. He kicks things off with some casual talk, but then goes all out by trying to tackle an old Meat Loaf classic. 🤘 Keep rockin', Michael! 🎤😂&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://youtu.be/SfnqRnWKT40"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/screenshot3.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Julia and I showcase some of the features of the TalkingHead class and the test app including the settings, some poses and animations.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Use Case Examples&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Some videos, apps, and projects using the TalkingHead class:&lt;/em&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Video/App&lt;/th&gt; 
   &lt;th&gt;Use Case&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;span style="display: block; min-width:400px"&gt;&lt;a href="https://youtu.be/9GeXwjuslnQ"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/olivia.jpg" width="400" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Video conferencing&lt;/strong&gt;. A video conferencing solution with real-time transcription, contextual AI responses, and voice lip-sync. The app and demo, featuring Olivia, by &lt;a href="https://github.com/namnm"&gt;namnm&lt;/a&gt; 👍&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.edgespeaker.com/"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/edgespeaker.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Fully in-browser AI you can talk to&lt;/strong&gt;. Uses TalkingHead, &lt;a href="https://github.com/met4citizen/HeadTTS"&gt;HeadTTS (with Kokoro)&lt;/a&gt;, &lt;a href="https://github.com/xenova/whisper-web"&gt;whisper-web&lt;/a&gt;, and &lt;a href="https://github.com/mlc-ai/web-llm"&gt;WebLLM (with Llama 3.2)&lt;/a&gt;. No APIs, no accounts. For more details, see &lt;a href="https://github.com/met4citizen/TalkingHead/issues/115"&gt;#115&lt;/a&gt;. — For best performance and WebGPU support, use a desktop version of Chrome or Edge: 👉 &lt;a href="https://www.edgespeaker.com/"&gt;EdgeSpeaker.com&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=Dl2o9kRvbLQ"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/geminicompetition.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Recycling Advisor 3D&lt;/strong&gt;. Snap a photo and get local recycling advice from a talking avatar. My entry for the &lt;a href="https://ai.google.dev/competition/projects/recycling-advisor-3d"&gt;Gemini API Developer Competition&lt;/a&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=OG1vwOit_Yk"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/evertrail.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Live Twitch adventure&lt;/strong&gt;. &lt;a href="https://evertrail.app"&gt;Evertrail&lt;/a&gt; is an infinite, real-time generated world where all of your choices shape the outcome. Video clip and the app by &lt;a href="https://github.com/JPhilipp"&gt;JPhilipp&lt;/a&gt; 👏👏&lt;br /&gt;&lt;strong&gt;NEWS&lt;/strong&gt;: Featured at the AI Film Awards during the 2025 Cannes Film Festival!&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=vNJ9Ifv-as8"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/cliquevm.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Quantum physics using a blackboard&lt;/strong&gt;. David introduces us to the CHSH game and explores the mystery of quantum entanglement. For more information about the research project, see &lt;a href="https://github.com/met4citizen/CliqueVM"&gt;CliqueVM&lt;/a&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://akshatrastogi.in/"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/interactiveportfolio.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Interactive Portfolio&lt;/strong&gt;. Click the image to open the app, where you can interview the virtual persona of its developer, &lt;a href="https://github.com/AkshatRastogi-1nC0re"&gt;AkshatRastogi-1nC0re&lt;/a&gt; 👋&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=Hv-ItCZ0qc4"&gt;&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/datingprofile.jpg" width="400" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Interactive Dating Profiles&lt;/strong&gt;. ❤️ Researchers from the MIT Media Lab and Harvard used the TalkingHead class and data-driven AI to create digital twins that potential dating partners could interact with. Their paper (Baradari et al., 2025) was presented at &lt;a href="https://programs.sigchi.org/chi/2025/program/content/194739"&gt;CHI 2025&lt;/a&gt; in Japan.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Introduction&lt;/h3&gt; 
&lt;p&gt;Talking Head (3D) is a browser JavaScript class featuring a 3D avatar that can speak and lip-sync in real-time. The class supports &lt;a href="https://readyplayer.me/"&gt;Ready Player Me&lt;/a&gt; / &lt;a href="https://playerzero.me/"&gt;PlayerZero&lt;/a&gt; full-body 3D avatars (GLB) and &lt;a href="https://www.mixamo.com"&gt;Mixamo&lt;/a&gt; animations (FBX). It also knows a set of emojis and can convert them into facial expressions.&lt;/p&gt; 
&lt;p&gt;You can create your own 3D avatar for free using the Ready Player Me or PlayerZero service. Alternatively, you can create a custom 3D avatar by making it compatible with RPM models. See Appendix A for more details.&lt;/p&gt; 
&lt;p&gt;By default, the class uses &lt;a href="https://cloud.google.com/text-to-speech"&gt;Google Cloud TTS&lt;/a&gt; for text-to-speech and has a built-in lip-sync support for English, German, French, Finnish, and Lithuanian. New lip-sync languages can be added by creating new lip-sync language modules.&lt;/p&gt; 
&lt;p&gt;It is also possible to integrate the TalkingHead class with any external TTS service that can provide word-level timestamps, such as the &lt;a href="https://elevenlabs.io"&gt;ElevenLabs WebSocket API&lt;/a&gt;. Note that a lip-sync language module is not required if your TTS engine can output viseme IDs or blend shape data directly. For example, by using the &lt;a href="https://github.com/microsoft/cognitive-services-speech-sdk-js"&gt;Microsoft Azure Speech SDK&lt;/a&gt;, you can extend TalkingHead's lip-sync support to 100+ languages.&lt;/p&gt; 
&lt;p&gt;The class uses &lt;a href="https://github.com/mrdoob/three.js/"&gt;ThreeJS&lt;/a&gt; / WebGL for 3D rendering.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you're looking for a free English TTS that can output timestamps and viseme IDs, check out &lt;a href="https://github.com/met4citizen/HeadTTS"&gt;HeadTTS&lt;/a&gt;. It offers Kokoro neural voices, phoneme-level timestamps, and can run locally or even entirely in a browser using WebGPU. And best of all, it's fully compatible with the TalkingHead class.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Talking Head class&lt;/h3&gt; 
&lt;p&gt;You can download the TalkingHead modules from &lt;a href="https://github.com/met4citizen/TalkingHead/releases"&gt;releases&lt;/a&gt; (without dependencies). Alternatively, you can install them from &lt;a href="https://www.npmjs.com/package/@met4citizen/talkinghead"&gt;NPM&lt;/a&gt;, or import all the needed modules from a CDN:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;&amp;lt;script type="importmap"&amp;gt;
{ "imports":
  {
    "three": "https://cdn.jsdelivr.net/npm/three@0.180.0/build/three.module.js/+esm",
    "three/addons/": "https://cdn.jsdelivr.net/npm/three@0.180.0/examples/jsm/",
    "talkinghead": "https://cdn.jsdelivr.net/gh/met4citizen/TalkingHead@1.5/modules/talkinghead.mjs"
  }
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] &lt;strong&gt;FOR HOBBYISTS:&lt;/strong&gt; If you're just looking to experiment on your personal laptop without dealing with proxies, JSON Web Tokens, or Single Sign-On, take a look at the &lt;a href="https://github.com/met4citizen/TalkingHead/raw/main/examples/minimal.html"&gt;minimal code example&lt;/a&gt;. Simply download the file, add your Google TTS API key, and you'll have a basic web app template with a talking head.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to use the built-in Google TTS and lip-sync using Single Sign-On (SSO) functionality, give the class your TTS proxy endpoint and a function from which to obtain the JSON Web Token needed to use that proxy. Refer to Appendix B for one way to implement JWT SSO.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import { TalkingHead } from "talkinghead";

// Create the talking head avatar
const nodeAvatar = document.getElementById('avatar');
const head = new TalkingHead( nodeAvatar, {
  ttsEndpoint: "/gtts/",
  jwtGet: jwtGet,
  lipsyncModules: ["en", "fi"],
  mixerGainSpeech: 3
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;CLICK HERE to see all the available OPTIONS.&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Option&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
    &lt;th&gt;Default&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;jwsGet&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Function to get the JSON Web Token (JWT). See Appendix B for more information.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsEndpoint&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Text-to-speech backend/endpoint/proxy implementing the Google Text-to-Speech API.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsApikey&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If you don't want to use a proxy or JWT, you can use Google TTS endpoint directly and provide your API key here. &lt;strong&gt;NOTE: I recommend that you don't use this in production and never put your API key in any client-side code.&lt;/strong&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsLang&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Google text-to-speech language.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"fi-FI"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsVoice&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Google text-to-speech voice. The used voice must support SSML and &amp;lt;mark&amp;gt; tags that are needed to get word-level timestamps. Currently, Google supports SSML and &amp;lt;mark&amp;gt; tags when using Standard, Wavenet, Neural2, News, or Casual voice types.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"fi-FI-Standard-A"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsRate&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Google text-to-speech rate in the range [0.25, 4.0].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;1.0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsPitch&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Google text-to-speech pitch in the range [-20.0, 20.0].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsVolume&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Google text-to-speech volume gain (in dB) in the range [-96.0, 16.0].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsTrimStart&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Trim the viseme sequence start relative to the beginning of the audio (shift in milliseconds).&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;ttsTrimEnd&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Trim the viseme sequence end relative to the end of the audio (shift in milliseconds).&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;400&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;mixerGainSpeech&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The amount of gain for speech. See Web Audio API / GainNode for more information.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;mixerGainBackground&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The amount of gain for background audio. See Web Audio API / GainNode for more information.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lipsyncModules&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Lip-sync modules to load dynamically at start-up. Limiting the number of language modules improves the loading time and memory usage.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;["en", "fi", "lt"]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lipsyncLang&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Lip-sync language.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"fi"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;pcmSampleRate&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;PCM (signed 16bit little endian) sample rate used in &lt;code&gt;speakAudio&lt;/code&gt; in Hz.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;22050&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;modelRoot&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The root name of the armature.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;Armature&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;modelPixelRatio&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Sets the device's pixel ratio.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;modelFPS&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Frames per second. Note that actual frame rate will be a bit lower than the set value.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;30&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;modelMovementFactor&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;A factor in the range [0,1] limiting the avatar's upper body movement when standing.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;dracoEnabled&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If &lt;code&gt;true&lt;/code&gt;, use Draco geometry compression. [≥&lt;code&gt;v1.5&lt;/code&gt;]&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;dracoDecoderPath&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Draco decoder library path. [≥&lt;code&gt;v1.5&lt;/code&gt;]&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"https://www.gstatic.com/&lt;/code&gt;&lt;br /&gt;&lt;code&gt;draco/v1/decoders/"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraView&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Initial view. Supported views are &lt;code&gt;"full"&lt;/code&gt;, &lt;code&gt;"mid"&lt;/code&gt;, &lt;code&gt;"upper"&lt;/code&gt; and &lt;code&gt;"head"&lt;/code&gt;.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"full"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraDistance&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Camera distance offset for initial view in meters.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraX&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Camera position offset in X direction in meters.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraY&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Camera position offset in Y direction in meters.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraRotateX&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Camera rotation offset in X direction in radians.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraRotateY&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Camera rotation offset in Y direction in radians.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraRotateEnable&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If true, the user is allowed to rotate the 3D model.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraPanEnable&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If true, the user is allowed to pan the 3D model.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;cameraZoomEnable&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If true, the user is allowed to zoom the 3D model.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightAmbientColor&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Ambient light color. The value can be a hexadecimal color or CSS-style string.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0xffffff&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightAmbientIntensity&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Ambient light intensity.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightDirectColor&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Direction light color. The value can be a hexadecimal color or CSS-style string.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0x8888aa&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightDirectIntensity&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Direction light intensity.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;30&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightDirectPhi&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Direction light phi angle.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.1&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightDirectTheta&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Direction light theta angle.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightSpotColor&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Spot light color. The value can be a hexadecimal color or CSS-style string.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0x3388ff&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightSpotIntensity&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Spot light intensity.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightSpotPhi&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Spot light phi angle.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.1&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightSpotTheta&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Spot light theta angle.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;4&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lightSpotDispersion&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Spot light dispersion.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarMood&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The mood of the avatar. Supported moods: &lt;code&gt;"neutral"&lt;/code&gt;, &lt;code&gt;"happy"&lt;/code&gt;, &lt;code&gt;"angry"&lt;/code&gt;, &lt;code&gt;"sad"&lt;/code&gt;, &lt;code&gt;"fear"&lt;/code&gt;, &lt;code&gt;"disgust"&lt;/code&gt;, &lt;code&gt;"love"&lt;/code&gt;, &lt;code&gt;"sleep"&lt;/code&gt;.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"neutral"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarMute&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Mute the avatar. This can be helpful option if you want to output subtitles without audio and lip-sync.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarIdle&lt;/code&gt;&lt;br /&gt;&lt;code&gt;EyeContact&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The average proportion of eye contact while idle in the range [0,1].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.2&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarIdle&lt;/code&gt;&lt;br /&gt;&lt;code&gt;HeadMove&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The average proportion of head movement while idle in the range [0,1].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.5&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarSpeaking&lt;/code&gt;&lt;br /&gt;&lt;code&gt;EyeContact&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The average proportion of eye contact while speaking in the range [0,1].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.5&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarSpeaking&lt;/code&gt;&lt;br /&gt;&lt;code&gt;HeadMove&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The average proportion of head movement while speaking in the range [0,1].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.5&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarIgnoreCamera&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If set to &lt;code&gt;true&lt;/code&gt;, makes the avatar to ignore the camera and speak to whatever it is facing.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;listeningSilence&lt;/code&gt;&lt;br /&gt;&lt;code&gt;ThresholdLevel&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Silence detection threshold in the range of [0,100]. If the volume stays below the level for the set duration, a &lt;code&gt;"stop"&lt;/code&gt; event is triggered.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;40&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;listeningSilence&lt;/code&gt;&lt;br /&gt;&lt;code&gt;ThresholdMs&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Silence detection duration in milliseconds. If the volume stays below the level for the set duration, a &lt;code&gt;"stop"&lt;/code&gt; event is triggered.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;2000&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;listeningSilence&lt;/code&gt;&lt;br /&gt;&lt;code&gt;DurationMax&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Maximum silence in milliseconds before &lt;code&gt;"maxsilence"&lt;/code&gt; event is triggered.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;10000&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;listeningActive&lt;/code&gt;&lt;br /&gt;&lt;code&gt;ThresholdLevel&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Activity detection threshold in the range of [0,100]. If the volume stays above the set level for the set duration, a &lt;code&gt;"start"&lt;/code&gt; event is triggered.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;90&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;listeningActive&lt;/code&gt;&lt;br /&gt;&lt;code&gt;ThresholdMs&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Activity detection duration in milliseconds. If the volume stays above the set level for the set duration, a &lt;code&gt;"start"&lt;/code&gt; event is triggered.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;400&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;listeningActive&lt;/code&gt;&lt;br /&gt;&lt;code&gt;DurationMax&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Maximum activity in milliseconds before &lt;code&gt;"maxactive"&lt;/code&gt; event is triggered.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;240000&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarOnly&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If &lt;code&gt;true&lt;/code&gt;, creates an avatar armature object instead of a standalone instance with a 3D scene, lights, and renderer. Read Appendix H for more details about the &lt;code&gt;avatarOnly&lt;/code&gt; mode. (EXPERIMENTAL)&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarOnlyCamera&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;In &lt;code&gt;avatarOnly&lt;/code&gt; mode, sets the camera to which the avatar is linked.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;avatarOnlyScene&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If set in &lt;code&gt;avatarOnly&lt;/code&gt; mode, the armature object is automatically added to the specified scene.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;update&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Custom callback function inside the &lt;code&gt;requestAnimationFrame&lt;/code&gt; animation loop. Enables the app to do custom processing before rendering the 3D scene. If &lt;code&gt;null&lt;/code&gt;, disabled.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;statsNode&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Parent DOM element for the three.js stats display. If &lt;code&gt;null&lt;/code&gt;, don't use.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;statsStyle&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;CSS style for the stats element. If &lt;code&gt;null&lt;/code&gt;, use the three.js default style.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;p&gt;Once the instance has been created, you can load and display your avatar. Refer to Appendix A for how to make your avatar:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Load and show the avatar
try {
  await head.showAvatar( {
    url: './avatars/brunette.glb',
    body: 'F',
    avatarMood: 'neutral',
    ttsLang: "en-GB",
    ttsVoice: "en-GB-Standard-A",
    lipsyncLang: 'en'
  });
} catch (error) {
  console.log(error);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An example of how to make the avatar speak the text on input &lt;code&gt;text&lt;/code&gt; when the button &lt;code&gt;speak&lt;/code&gt; is clicked:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Speak 'text' when the button 'speak' is clicked
const nodeSpeak = document.getElementById('speak');
nodeSpeak.addEventListener('click', function () {
  try {
    const text = document.getElementById('text').value;
    if ( text ) {
      head.speakText( text );
    }
  } catch (error) {
    console.log(error);
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;CLICK HERE to see the key METHODS.&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Method&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;showAvatar(avatar, [onprogress=null])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Load and show the specified avatar. The &lt;code&gt;avatar&lt;/code&gt; object must include the &lt;code&gt;url&lt;/code&gt; for GLB file. Optional properties are &lt;code&gt;body&lt;/code&gt; for either male &lt;code&gt;M&lt;/code&gt; or female &lt;code&gt;F&lt;/code&gt; body form, &lt;code&gt;lipsyncLang&lt;/code&gt;, &lt;code&gt;lipsyncHeadMovement&lt;/code&gt;, &lt;code&gt;baseline&lt;/code&gt; object for blend shape baseline, &lt;code&gt;modelDynamicBones&lt;/code&gt; for dynamic bones (see Appendix E), &lt;code&gt;ttsLang&lt;/code&gt;, &lt;code&gt;ttsVoice&lt;/code&gt;, &lt;code&gt;ttsRate&lt;/code&gt;, &lt;code&gt;ttsPitch&lt;/code&gt;, &lt;code&gt;ttsVolume&lt;/code&gt;, &lt;code&gt;avatarMood&lt;/code&gt;, &lt;code&gt;avatarMute&lt;/code&gt;, &lt;code&gt;avatarIdleEyeContact&lt;/code&gt;, &lt;code&gt;avatarSpeakingEyeContact&lt;/code&gt;, &lt;code&gt;avatarListeningEyeContact&lt;/code&gt;, and &lt;code&gt;avatarIgnoreCamera&lt;/code&gt;.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;setView(view, [opt])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Set view. Supported views are &lt;code&gt;"full"&lt;/code&gt;, &lt;code&gt;"mid"&lt;/code&gt;, &lt;code&gt;"upper"&lt;/code&gt; and &lt;code&gt;"head"&lt;/code&gt;. The &lt;code&gt;opt&lt;/code&gt; object can be used to set &lt;code&gt;cameraDistance&lt;/code&gt;, &lt;code&gt;cameraX&lt;/code&gt;, &lt;code&gt;cameraY&lt;/code&gt;, &lt;code&gt;cameraRotateX&lt;/code&gt;, &lt;code&gt;cameraRotateY&lt;/code&gt;.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;setLighting(opt)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Change lighting settings. The &lt;code&gt;opt&lt;/code&gt; object can be used to set &lt;code&gt;lightAmbientColor&lt;/code&gt;, &lt;code&gt;lightAmbientIntensity&lt;/code&gt;, &lt;code&gt;lightDirectColor&lt;/code&gt;, &lt;code&gt;lightDirectIntensity&lt;/code&gt;, &lt;code&gt;lightDirectPhi&lt;/code&gt;, &lt;code&gt;lightDirectTheta&lt;/code&gt;, &lt;code&gt;lightSpotColor&lt;/code&gt;, &lt;code&gt;lightSpotIntensity&lt;/code&gt;, &lt;code&gt;lightSpotPhi&lt;/code&gt;, &lt;code&gt;lightSpotTheta&lt;/code&gt;, &lt;code&gt;lightSpotDispersion&lt;/code&gt;.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;speakText(text, [opt={}], [onsubtitles=null], [excludes=[]])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Add the &lt;code&gt;text&lt;/code&gt; string to the speech queue. The text can contain face emojis. Options &lt;code&gt;opt&lt;/code&gt; can be used to set text-specific &lt;code&gt;lipsyncLang&lt;/code&gt;, &lt;code&gt;ttsLang&lt;/code&gt;, &lt;code&gt;ttsVoice&lt;/code&gt;, &lt;code&gt;ttsRate&lt;/code&gt;, &lt;code&gt;ttsPitch&lt;/code&gt;, &lt;code&gt;ttsVolume&lt;/code&gt;, &lt;code&gt;avatarMood&lt;/code&gt;, &lt;code&gt;avatarMute&lt;/code&gt;. Optional callback function &lt;code&gt;onsubtitles&lt;/code&gt; is called whenever a new subtitle is to be written with the parameter of the added string. The optional &lt;code&gt;excludes&lt;/code&gt; is an array of [start,end] indices to be excluded from audio but to be included in the subtitles.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;speakAudio(audio, [opt={}], [onsubtitles=null])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Add a new &lt;code&gt;audio&lt;/code&gt; object to the speech queue. In audio object, property &lt;code&gt;audio&lt;/code&gt; is either &lt;code&gt;AudioBuffer&lt;/code&gt; or an array of PCM 16bit LE audio chunks. Property &lt;code&gt;words&lt;/code&gt; is an array of words, &lt;code&gt;wtimes&lt;/code&gt; is an array of corresponding starting times in milliseconds, and &lt;code&gt;wdurations&lt;/code&gt; an array of durations in milliseconds. If the Oculus viseme IDs are known, they can be given in optional &lt;code&gt;visemes&lt;/code&gt;, &lt;code&gt;vtimes&lt;/code&gt; and &lt;code&gt;vdurations&lt;/code&gt; arrays. The object also supports optional timed callbacks using &lt;code&gt;markers&lt;/code&gt; and &lt;code&gt;mtimes&lt;/code&gt;. In addition, you can provide an optional &lt;code&gt;anim&lt;/code&gt; as an animation template object that can drive your own blendshape or morph target data in sync with audio playback. See Appendix F for more details. The &lt;code&gt;opt&lt;/code&gt; object can be used to set text-specific &lt;code&gt;lipsyncLang&lt;/code&gt;.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;streamStart(opt={}, onAudioStart = null, onAudioEnd = null, onSubtitles = null, onMetrics = null)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Sets the talking head in streaming mode. See Appendix G for streaming instructions.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;streamAudio(audio)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Starts feeding audio chunks to talkinghead in the streaming mode. See Appendix G for streaming instructions.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;streamNotifyEnd()&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Signals the end of streaming audio chunks to the talkinghead. See Appendix G for streaming instructions.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;streamInterrupt()&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Interrupts ongoing audio and lip-sync in streaming mode without ending the session. See Appendix G for streaming instructions.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;streamStop()&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Exits the streaming mode and ends the session. See Appendix G for streaming instructions.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;speakEmoji(e)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Add an emoji &lt;code&gt;e&lt;/code&gt; to the speech queue.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;speakBreak(t)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Add a break of &lt;code&gt;t&lt;/code&gt; milliseconds to the speech queue.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;speakMarker(onmarker)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Add a marker to the speech queue. The callback function &lt;code&gt;onmarker&lt;/code&gt; is called when the queue processes the marker.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lookAt(x,y,t)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Make the avatar's head turn to look at the screen position (&lt;code&gt;x&lt;/code&gt;,&lt;code&gt;y&lt;/code&gt;) for &lt;code&gt;t&lt;/code&gt; milliseconds.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lookAhead(t)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Make avatar look ahead for &lt;code&gt;t&lt;/code&gt; milliseconds.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;lookAtCamera(t)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Make the avatar's head turn to look at the camera for &lt;code&gt;t&lt;/code&gt; milliseconds. If &lt;code&gt;avatarIgnoreCamera&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, looks ahead for &lt;code&gt;t&lt;/code&gt; milliseconds.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;makeEyeContact(t)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Make the avatar maintain eye contact with the person in front of it for (at least) &lt;code&gt;t&lt;/code&gt; milliseconds.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;setMood(mood)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Set avatar mood.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;playBackgroundAudio(url)&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Play background audio such as ambient sounds/music in a loop.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;stopBackgroundAudio()&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Stop playing the background audio.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;setMixerGain(speech, [background=null], [fadeSecs=0])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The amount of gain for speech and background audio (see Web Audio API / GainNode for more information). Value &lt;code&gt;null&lt;/code&gt; means no change. Optional &lt;code&gt;fadeSecs&lt;/code&gt; parameter sets exponential fade in/out time in seconds.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;playAnimation(url, [onprogress=null], [dur=10], [ndx=0], [scale=0.01])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Play Mixamo animation file for &lt;code&gt;dur&lt;/code&gt; seconds, but full rounds and at least once. If the FBX file includes several animations, the parameter &lt;code&gt;ndx&lt;/code&gt; specifies the index. Since Mixamo rigs have a scale 100 and RPM a scale 1, the &lt;code&gt;scale&lt;/code&gt; factor can be used to scale the positions.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;stopAnimation()&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Stop the current animation started by &lt;code&gt;playAnimation&lt;/code&gt;.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;playPose(url, [onprogress=null], [dur=5], [ndx=0], [scale=0.01])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Play the initial pose of a Mixamo animation file for &lt;code&gt;dur&lt;/code&gt; seconds. If the FBX file includes several animations, the parameter &lt;code&gt;ndx&lt;/code&gt; specifies the index. Since Mixamo rigs have a scale 100 and RPM a scale 1, the &lt;code&gt;scale&lt;/code&gt; factor can be used to scale the positions.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;stopPose()&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Stop the current pose started by &lt;code&gt;playPose&lt;/code&gt;.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;playGesture(name, [dur=3], [mirror=false], [ms=1000])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Play a named hand gesture and/or animated emoji for &lt;code&gt;dur&lt;/code&gt; seconds with the &lt;code&gt;ms&lt;/code&gt; transition time. The available hand gestures are &lt;code&gt;handup&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;ok&lt;/code&gt;, &lt;code&gt;thumbup&lt;/code&gt;, &lt;code&gt;thumbdown&lt;/code&gt;, &lt;code&gt;side&lt;/code&gt;, &lt;code&gt;shrug&lt;/code&gt;. By default, hand gestures are done with the left hand. If you want the right handed version, set &lt;code&gt;mirror&lt;/code&gt; to true. You can also use &lt;code&gt;playGesture&lt;/code&gt; to play emojis. See Appendix D for more details.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;stopGesture([ms=1000])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Stop the gesture with &lt;code&gt;ms&lt;/code&gt; transition time.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;startListening(analyzer, [opt={}], [onchange=null])&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Start listening &lt;code&gt;analyzer&lt;/code&gt; AnalyserNode. The &lt;code&gt;opt&lt;/code&gt; object can be used to set options &lt;code&gt;listeningSilenceThresholdLevel&lt;/code&gt;, &lt;code&gt;listeningSilenceThresholdMs&lt;/code&gt;, &lt;code&gt;listeningSilenceDurationMax&lt;/code&gt;, &lt;code&gt;listeningActiveThresholdLevel&lt;/code&gt;, &lt;code&gt;listeningActiveThresholdMs&lt;/code&gt;, &lt;code&gt;listeningActiveDurationMax&lt;/code&gt;. The callback function &lt;code&gt;onchange&lt;/code&gt; is called, when the state changes with one of the following parameter: &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, &lt;code&gt;maxsilence&lt;/code&gt;, &lt;code&gt;maxactive&lt;/code&gt;.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;stopListening&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Stop listening the incoming audio.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;start&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Start/re-start the Talking Head animation loop.&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Stop the Talking Head animation loop.&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;p&gt;The class has been tested on the latest Chrome, Firefox, Safari, and Edge desktop browsers, as well as on iPad.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;The &lt;code&gt;index.html&lt;/code&gt; Test App&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;em&gt;The &lt;code&gt;index.html&lt;/code&gt; app was created for testing and developing the TalkingHead class. It includes various integrations with several paid services. If you only want to use the TalkingHead class in your own app, there is no need to install and configure the &lt;code&gt;index.html&lt;/code&gt; app.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;In addition to testing and development, the test app be used as an example of how to integrate the TalkingHead class with &lt;a href="https://elevenlabs.io"&gt;ElevenLabs WebSocket API&lt;/a&gt;, &lt;a href="https://github.com/microsoft/cognitive-services-speech-sdk-js"&gt;Microsoft Azure Speech SDK&lt;/a&gt;, &lt;a href="https://openai.com"&gt;OpenAI&lt;/a&gt;, &lt;a href="https://ai.google.dev/gemini-api"&gt;Gemini&lt;/a&gt; and &lt;a href="https://docs.x.ai"&gt;Grok&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can try out the test app online &lt;a href="https://met4citizen.github.io/TalkingHead/"&gt;here on GitHub&lt;/a&gt;. By default, the text-to-speech and AI features will not work, but you can activate them by navigating to the settings menu (☰) and pasting your own API key in the relevant field(s). Your API keys will not be stored, so you will need to re-enter them each time you reload the page.&lt;/p&gt; 
&lt;p&gt;To set up the test app in your local environment, follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Copy the latest files to your own web server, for example:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone --depth 1 https://github.com/met4citizen/TalkingHead.git &amp;amp;&amp;amp; rm -r TalkingHead/.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Optional: Create API proxies as described in Appendix B and check/update your proxy configuration in &lt;code&gt;index.html&lt;/code&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// API proxys
const jwtEndpoint = "/app/jwt/get"; // Get JSON Web Token for Single Sign-On
const openaiChatCompletionsProxy = "/openai/v1/chat/completions";
const openaiModerationsProxy = "/openai/v1/moderations";
const openaiAudioTranscriptionsProxy = "/openai/v1/audio/transcriptions";
const vertexaiChatCompletionsProxy = "/vertexai/";
const googleTTSProxy = "/gtts/";
const elevenTTSProxy = [
  "wss://" + window.location.host + "/elevenlabs/",
  "/v1/text-to-speech/",
  "/stream-input?model_id=eleven_multilingual_v2&amp;amp;output_format=pcm_22050"
];
const microsoftTTSProxy = [
  "wss://" + window.location.host + "/mstts/",
  "/cognitiveservices/websocket/v1"
];
const grokChatCompletionsProxy = "/grok/v1/chat/completions"; // Grok-beta
const llamaChatCompletionsProxy = "/llama/v1/chat/completions"; // Local llama.cpp
const localWhisperCppProxy = "/whisper/"; // Local whisper.cpp
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt; &lt;p&gt;The test app's UI supports Finnish and English. If you want to add another language, you need to add an another entry to the &lt;code&gt;i18n&lt;/code&gt; object.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Add you own background images, videos, audio files, avatars etc. in the directory structure and update your site configuration &lt;code&gt;siteconfig.js&lt;/code&gt; accordingly. The keys are in English, but the entries can include translations to other languages.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Licenses, attributions and notes related to the &lt;code&gt;index.html&lt;/code&gt; web app assets:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The app uses &lt;a href="https://github.com/markedjs/marked"&gt;Marked&lt;/a&gt; Markdown parser and &lt;a href="https://github.com/cure53/DOMPurify"&gt;DOMPurify&lt;/a&gt; XSS sanitizer.&lt;/li&gt; 
 &lt;li&gt;Fira Sans Condensed and Fira Sans Extra Condensed fonts are licensed under the SIL Open Font License, version 1.1, available with a FAQ at &lt;a href="http://scripts.sil.org/OFL"&gt;http://scripts.sil.org/OFL&lt;/a&gt;. Digitized data copyright (c) 2012-2015, The Mozilla Foundation and Telefonica S.A.&lt;/li&gt; 
 &lt;li&gt;SVG icons from &lt;a href="https://github.com/astrit/css.gg"&gt;css.gg&lt;/a&gt;, MIT License (versions prior to license update).&lt;/li&gt; 
 &lt;li&gt;Example avatar "brunette.glb" was created at &lt;a href="https://readyplayer.me/"&gt;Ready Player Me&lt;/a&gt;. The avatar is free to all developers for non-commercial use under the &lt;a href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;CC BY-NC 4.0 DEED&lt;/a&gt;. If you want to integrate Ready Player Me avatars into a commercial app or game, you must sign up as a Ready Player Me developer.&lt;/li&gt; 
 &lt;li&gt;Example animation &lt;code&gt;walking.fbx&lt;/code&gt; and the pose &lt;code&gt;dance.fbx&lt;/code&gt; are from Mixamo, a subsidiary of Adobe Inc. &lt;a href="https://www.mixamo.com"&gt;Mixamo&lt;/a&gt; service is free and its animations/poses (&amp;gt;2000) can be used royalty free for personal, commercial, and non-profit projects. Raw animation files can't be distributed outside the project team and can't be used to train ML models.&lt;/li&gt; 
 &lt;li&gt;Background view examples are from &lt;a href="https://virtualbackgrounds.site"&gt;Virtual Backgrounds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Impulse response (IR) files for reverb effects: 
  &lt;ul&gt; 
   &lt;li&gt;ir-room: &lt;a href="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/www.openairlib.net"&gt;OpenAir&lt;/a&gt;, Public Domain Creative Commons license&lt;/li&gt; 
   &lt;li&gt;ir-basement: &lt;a href="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/www.openairlib.net"&gt;OpenAir&lt;/a&gt;, Public Domain Creative Commons license&lt;/li&gt; 
   &lt;li&gt;ir-forest (Abies Grandis Forest, Wheldrake Wood): &lt;a href="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/www.openairlib.net"&gt;OpenAir&lt;/a&gt;, Creative Commons Attribution 4.0 International License&lt;/li&gt; 
   &lt;li&gt;ir-church (St. Andrews Church): &lt;a href="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/www.openairlib.net"&gt;OpenAir&lt;/a&gt;, Share Alike Creative Commons 3.0&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Ambient sounds/music attributions: 
  &lt;ul&gt; 
   &lt;li&gt;murmur.mp3: &lt;a href="https://github.com/siwalikm/coffitivity-offline"&gt;https://github.com/siwalikm/coffitivity-offline&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; None of the assets described above are used or distributed as part of the TalkingHead class releases. If you wish to use them in your own application, please refer to the exact terms of use provided by the copyright holders.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Why not use the free Web Speech API?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The free Web Speech API can't provide word-to-audio timestamps, which are essential for accurate lip-sync. As far as I know, there is no way even to get Web Speech API speech synthesis as an audio file or determine its duration in advance. At some point I tried to use the Web Speech API events for syncronization, but the results were not good.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;What paid text-to-speech service should I use?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;It depends on your use case and budget. If the built-in lip-sync support is sufficient for your needs, I would recommend Google TTS, because it gives you up to 4 million characters for free each month. If your app needs to support multiple languages, I would consider Microsoft Speech SDK.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I would like to have lip-sync support for language X.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You have two options. First, you can implement a word-to-viseme class similar to those that currently exist for English and Finnish. See Appendix C for detailed instructions. Alternatively, you can check if Microsoft Azure TTS can provide visemes for your language and use Microsoft Speech SDK integration (&lt;code&gt;speakAudio&lt;/code&gt;) instead of Google TTS and the built-in lip-sync (&lt;code&gt;speakText&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Can I use a custom 3D model?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The class supports full-body Ready Player Me avatars. You can also make your own custom model, but it needs to have a RPM compatible rig/bone structure and all their blend shapes. Please refer to Appendix A and readyplayer.me documentation for more details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Any future plans for the project?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This is just a small side-project for me, so I don't have any big plans for it. That said, there are several companies that are currently developing text-to-3D-avatar and text-to-3D-animation features. If and when they get released as APIs, I will probably take a look at them and see if they can be used/integrated in some way to the project.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;[1] &lt;a href="https://en.wiktionary.org/wiki/Appendix:Finnish_pronunciation"&gt;Finnish pronunciation&lt;/a&gt;, Wiktionary&lt;/p&gt; 
&lt;p&gt;[2] Elovitz, H. S., Johnson, R. W., McHugh, A., Shore, J. E., Automatic Translation of English Text to Phonetics by Means of Letter-to-Sound Rules (NRL Report 7948). Naval Research Laboratory (NRL). Washington, D. C., 1976. &lt;a href="https://apps.dtic.mil/sti/pdfs/ADA021929.pdf"&gt;https://apps.dtic.mil/sti/pdfs/ADA021929.pdf&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix A: Create Your Own 3D Avatar&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;FOR HOBBYISTS:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create your own full-body avatar free at &lt;a href="https://readyplayer.me/avatar/"&gt;https://readyplayer.me/avatar/&lt;/a&gt; or &lt;a href="https://playerzero.readyplayer.me/"&gt;https://playerzero.readyplayer.me/&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Copy your avatar’s unique ID (e.g., &lt;code&gt;64bfa15f0e72c63d7c3934a6&lt;/code&gt;) and download the GLB file using one of the links below. Replace the ID with your own, and make sure to keep the URL parameters to include the necessary morph targets (blend shapes).&lt;br /&gt;&lt;br /&gt;Ready Player Me:&lt;br /&gt;&lt;code&gt;https://models.readyplayer.me/64bfa15f0e72c63d7c3934a6.glb?morphTargets=ARKit,Oculus+Visemes,mouthOpen,mouthSmile,eyesClosed,eyesLookUp,eyesLookDown&amp;amp;textureSizeLimit=1024&amp;amp;textureFormat=png&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;PlayerZero:&lt;br /&gt;&lt;code&gt;https://avatars.readyplayer.me/67ebd62a688cd661ebe09988.glb?morphTargetsGroup=ARKit,Oculus+Visemes&amp;amp;morphTargets=mouthSmile,mouthOpen,eyesClosed,eyesLookUp,eyesLookDown&amp;amp;textureSizeLimit=1024&amp;amp;textureFormat=png&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;Depending on your use case, you can customize the texture format and texture quality (e.g. &lt;code&gt;textureFormat=webp&amp;amp;textureQuality=high&lt;/code&gt;), the triangle count (e.g. &lt;code&gt;lod=1&lt;/code&gt;), use Draco mesh compression (&lt;code&gt;useDracoMeshCompression=true&lt;/code&gt;), and so on. See the full list of option &lt;a href="https://docs.readyplayer.me/ready-player-me/api-reference/rest-api/avatars/get-3d-avatars"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;FOR 3D MODELERS:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can create and use your own 3D full-body model, but it has to be Ready Player Me compatible. Their rig has a Mixamo-compatible bone structure described here:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.readyplayer.me/ready-player-me/api-reference/avatars/full-body-avatars"&gt;https://docs.readyplayer.me/ready-player-me/api-reference/avatars/full-body-avatars&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For lip-sync and facial expressions, you also need to have ARKit and Oculus compatible blend shapes, and a few additional ones, all listed in the following two pages:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.readyplayer.me/ready-player-me/api-reference/avatars/morph-targets/apple-arkit"&gt;https://docs.readyplayer.me/ready-player-me/api-reference/avatars/morph-targets/apple-arkit&lt;/a&gt; &lt;a href="https://docs.readyplayer.me/ready-player-me/api-reference/avatars/morph-targets/oculus-ovr-libsync"&gt;https://docs.readyplayer.me/ready-player-me/api-reference/avatars/morph-targets/oculus-ovr-libsync&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;br /&gt; The additional blend shapes mentioned in the specs (&lt;code&gt;"mouthOpen"&lt;/code&gt;, &lt;code&gt;"mouthSmile"&lt;/code&gt;, &lt;code&gt;"eyesClosed"&lt;/code&gt;, &lt;code&gt;"eyesLookUp"&lt;/code&gt;, &lt;code&gt;"eyesLookDown"&lt;/code&gt;) are not strictly required, as the TalkingHead class will automatically generate them from ARKit blend shapes if they are missing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The TalkingHead class supports both separated mesh and texture atlasing.&lt;/p&gt; 
&lt;p&gt;Here are some Blender Python scripts that could be useful in converting custom models:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Script&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/met4citizen/TalkingHead/raw/main/blender/rename-mixamo-bones.py"&gt;rename-mixamo-bones.py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;If your model doesn't have a compatible rig, you can auto-rig your model easily at &lt;a href="https://www.mixamo.com"&gt;Mixamo&lt;/a&gt; and use this Blender script to rename the Mixamo bones.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/met4citizen/TalkingHead/raw/main/blender/rename-rocketbox-shapekeys.py"&gt;rename-rocketbox-shapekeys.py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;Rename &lt;a href="https://github.com/microsoft/Microsoft-Rocketbox"&gt;Microsoft Rocketbox&lt;/a&gt; model shape keys.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/met4citizen/TalkingHead/raw/main/blender/rename-avatarsdk-shapekeys.py"&gt;rename-avatarsdk-shapekeys.py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;Rename &lt;a href="https://github.com/avatarsdk"&gt;Avatar SDK MetaPerson&lt;/a&gt; model shape keys.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/met4citizen/TalkingHead/raw/main/blender/build-extras-from-arkit.py"&gt;build-extras-from-arkit.py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;Build RPM extras (mouthOpen, mouthSmile, eyesClosed, eyesLookUp, eyesLookDown) from ARKit blendshapes. Note: The TalkingHead will generate these automatically if they're missing. However, building them yourself allows you to fine-tune them to your taste.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/met4citizen/TalkingHead/raw/main/blender/build-visemes-from-arkit.py"&gt;build-visemes-from-arkit.py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&amp;nbsp;Build Oculus visemes from ARKit blendshapes. As models are all different, you should fine-tune the script for best result. EXPERIMENTAL&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix B: Create API Proxies with JSON Web Token (JWT) Single Sign-On (SSO)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Make a CGI script that generates a new JSON Web Token with an expiration time (exp). See &lt;a href="https://jwt.io"&gt;jwt.io&lt;/a&gt; for more information about JWT and libraries that best fit your needs and architecture. In my own test setup, I return the generated JWT as JSON.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{ "jwt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c" }
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Protect your CGI script with some authentication scheme. Below is an example Apache 2.4 directory config that uses Basic authentication (remember to always use HTTPS/SSL!). Put your CGI script &lt;code&gt;get&lt;/code&gt; in the &lt;code&gt;jwt&lt;/code&gt; directory.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-apacheconf"&gt;# Restricted applications
&amp;lt;Directory "/var/www/app"&amp;gt;
  AuthType Basic
  AuthName "Restricted apps"
  AuthUserFile /etc/httpd/.htpasswd
  Require valid-user
&amp;lt;/Directory&amp;gt;

# JSON Web Token
&amp;lt;Directory "/var/www/app/jwt" &amp;gt;
  Options ExecCGI
  SetEnv REMOTE_USER %{REMOTE_USER}
  SetHandler cgi-script
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Make an &lt;a href="https://httpd.apache.org/docs/2.4/rewrite/rewritemap.html#prg"&gt;External Rewriting Program&lt;/a&gt; script that verifies JSON Web Tokens. The script should return &lt;code&gt;OK&lt;/code&gt; if the given token is not expired and its signature is valid. Start the script in Apache 2.4 config. User's don't use the verifier script directly, so put it in some internal directory, not under document root.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-apacheconf"&gt;# JSON Web Token verifier
RewriteEngine On
RewriteMap jwtverify "prg:/etc/httpd/jwtverify" apache:apache
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Make a proxy configuration for each service you want to use. Add the required API keys and protect the proxies with the JWT token verifier. Below are some example configs for Apache 2.4 web server. Note that when opening a WebSocket connection (ElevenLabs, Azure) you can't add authentication headers in browser JavaScript. This problem is solved here by including the JWT token as a part of the request URL. The downside is that the token might end up in server log files. This is typically not a problem as long as you are controlling the proxy server, you are using HTTPS/SSL, and the token has an expiration time.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-apacheconf"&gt;# OpenAI API
&amp;lt;Location /openai/&amp;gt;
  RewriteCond ${jwtverify:%{http:Authorization}} !=OK
  RewriteRule .+ - [F]
  ProxyPass https://api.openai.com/
  ProxyPassReverse  https://api.openai.com/
  ProxyPassReverseCookiePath "/"  "/openai/"
  ProxyPassReverseCookieDomain ".api.openai.com" ".&amp;lt;insert-your-proxy-domain-here&amp;gt;"
  RequestHeader set Authorization "Bearer &amp;lt;insert-your-openai-api-key-here&amp;gt;"
&amp;lt;/Location&amp;gt;

# Google TTS API
&amp;lt;Location /gtts/&amp;gt;
  RewriteCond ${jwtverify:%{http:Authorization}} !=OK
  RewriteRule .+ - [F]
  ProxyPass https://eu-texttospeech.googleapis.com/v1beta1/text:synthesize?key=&amp;lt;insert-your-api-key-here&amp;gt; nocanon
  RequestHeader unset Authorization
&amp;lt;/Location&amp;gt;

# Microsoft Azure TTS WebSocket API (Speech SDK)
&amp;lt;LocationMatch /mstts/(?&amp;lt;jwt&amp;gt;[^/]+)/&amp;gt;
  RewriteCond ${jwtverify:%{env:MATCH_JWT}} !=OK
  RewriteRule .+ - [F]
  RewriteCond %{HTTP:Connection} Upgrade [NC]
  RewriteCond %{HTTP:Upgrade} websocket [NC]
  RewriteRule /mstts/[^/]+/(.+) "wss://&amp;lt;insert-your-region-here&amp;gt;.tts.speech.microsoft.com/$1" [P]
  RequestHeader set "Ocp-Apim-Subscription-Key" &amp;lt;insert-your-subscription-key-here&amp;gt;
&amp;lt;/LocationMatch&amp;gt;

# ElevenLabs Text-to-speech WebSocket API
&amp;lt;LocationMatch /elevenlabs/(?&amp;lt;jwt&amp;gt;[^/]+)/&amp;gt;
  RewriteCond ${jwtverify:%{env:MATCH_JWT}} !=OK
  RewriteRule .+ - [F]
  RewriteCond %{HTTP:Connection} Upgrade [NC]
  RewriteCond %{HTTP:Upgrade} websocket [NC]
  RewriteRule /elevenlabs/[^/]+/(.+) "wss://api.elevenlabs.io/$1" [P]
  RequestHeader set "xi-api-key" "&amp;lt;add-your-elevenlabs-api-key-here&amp;gt;"
&amp;lt;/LocationMatch&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix C: Create A New Lip-sync Module&lt;/h3&gt; 
&lt;p&gt;The steps that are common to all new languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new file named &lt;code&gt;lipsync-xx.mjs&lt;/code&gt; where &lt;code&gt;xx&lt;/code&gt; is your language code, and place the file in the &lt;code&gt;./modules/&lt;/code&gt; directory. The language module should have a class named &lt;code&gt;LipsyncXx&lt;/code&gt; where Xx is the language code. The naming in important, because the modules are loaded dynamically based on their names.&lt;/li&gt; 
 &lt;li&gt;The class should have (at least) the following two methods: &lt;code&gt;preProcessText&lt;/code&gt; and &lt;code&gt;wordsToVisemes&lt;/code&gt;. These are the methods used in the TalkingHead class.&lt;/li&gt; 
 &lt;li&gt;The purpose of the &lt;code&gt;preProcessText&lt;/code&gt; method is to preprocess the given text by converting symbols to words, numbers to words, and filtering out characters that should be left unspoken (if any), etc. This is often needed to prevent ambiguities between TTS and lip-sync engines. This method takes a string as a parameter and returns the preprocessed string.&lt;/li&gt; 
 &lt;li&gt;The purpose of the &lt;code&gt;wordsToVisemes&lt;/code&gt; method is to convert the given text into visemes and timestamps. The method takes a string as a parameter and returns a lip-sync object. The lipsync object has three required properties: &lt;code&gt;visemes&lt;/code&gt;, &lt;code&gt;times&lt;/code&gt;and &lt;code&gt;durations&lt;/code&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;Property &lt;code&gt;visemes&lt;/code&gt; is an array of Oculus OVR viseme codes. Each viseme is one of the strings: &lt;code&gt;'aa'&lt;/code&gt;, &lt;code&gt;'E'&lt;/code&gt;, &lt;code&gt;'I'&lt;/code&gt;, &lt;code&gt;'O'&lt;/code&gt;, &lt;code&gt;'U'&lt;/code&gt;, &lt;code&gt;'PP'&lt;/code&gt;, &lt;code&gt;'SS'&lt;/code&gt;, &lt;code&gt;'TH'&lt;/code&gt;, &lt;code&gt;'CH'&lt;/code&gt;, &lt;code&gt;'FF'&lt;/code&gt;, &lt;code&gt;'kk'&lt;/code&gt;, &lt;code&gt;'nn'&lt;/code&gt;, &lt;code&gt;'RR'&lt;/code&gt;, &lt;code&gt;'DD'&lt;/code&gt;, &lt;code&gt;'sil'&lt;/code&gt;. See the reference images here: &lt;a href="https://developer.oculus.com/documentation/unity/audio-ovrlipsync-viseme-reference/"&gt;https://developer.oculus.com/documentation/unity/audio-ovrlipsync-viseme-reference/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Property &lt;code&gt;times&lt;/code&gt; is an array of starting times, one entry for each viseme in &lt;code&gt;visemes&lt;/code&gt;. Starting times are to be given in relative units. They will be scaled later on based on the word timestamps that we get from the TTS engine.&lt;/li&gt; 
   &lt;li&gt;Property &lt;code&gt;durations&lt;/code&gt; is an array of relative durations, one entry for each viseme in &lt;code&gt;visemes&lt;/code&gt;. Durations are to be given in relative units. They will be scaled later on based on the word timestamps that we get from the TTS engine.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The difficult part is to actually make the conversion from words to visemes. What is the best approach depends on the language. Here are some typical approaches to consider (not a comprehensive list):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Direct mapping from graphemes to phonemes to visemes&lt;/strong&gt;. This works well for languages that have a consistent one-to-one mapping between individual letters and phonemes. This was used as the approach for the Finnish language (&lt;code&gt;lipsync-fi.mjs&lt;/code&gt;) giving &amp;gt;99.9% lip-sync accuracy compared to the Finnish phoneme dictionary. Implementation size was ~4k. Unfortunately not all languages are phonetically orthographic languages.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rule-based mapping&lt;/strong&gt;. This was used as the approach for the English language (&lt;code&gt;lipsync-en.mjs&lt;/code&gt;) giving around 80% lip-sync accuracy compared to the English phoneme dictionary. However, since the rules cover the most common words, the effective accuracy is higher. Implementation size ~12k.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dictionary based approach&lt;/strong&gt;. If neither of the previous approaches work for your language, make a search from some open source phoneme dictionary. Note that you still need some backup algorithm for those words that are not in the dictionary. The problem with phoneme dictionaries is their size. For example, the CMU phoneme dictionary for English is ~5M.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural-net approach based on transformer models&lt;/strong&gt;. Typically this should be done on server-side as the model size can be &amp;gt;50M.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;TalkingHead is supposed to be a real-time class, so latency is always something to consider. It is often better to be small and fast than to aim for 100% accuracy.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix D: Adding Custom Poses, Moods, Gestures, and Emojis (ADVANCED)&lt;/h3&gt; 
&lt;p&gt;In the TalkingHead class, the avatar's movements are based on four data structures: &lt;code&gt;head.poseTemplates&lt;/code&gt;, &lt;code&gt;head.animMoods&lt;/code&gt;, &lt;code&gt;head.gestureTemplates&lt;/code&gt;, and &lt;code&gt;head.animEmojis&lt;/code&gt;. By using these objects, you can give your avatar its own personal body language.&lt;/p&gt; 
&lt;p&gt;In &lt;code&gt;head.poseTemplates&lt;/code&gt; the hip position is defined as an {x, y, z} coordinate in meters, and bone rotations as Euler XYZ rotations in radians. In each pose, the avatar should have its weight on the left leg, if any, as the class automatically mirrors it for the right side. Setting the boolean properties &lt;code&gt;standing&lt;/code&gt;, &lt;code&gt;sitting&lt;/code&gt;, &lt;code&gt;bend&lt;/code&gt;, &lt;code&gt;kneeling&lt;/code&gt;, and &lt;code&gt;lying&lt;/code&gt; helps the class make the transitions between different poses in proper steps.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;head.poseTemplates["custom-pose-1"] = {
  standing: true, sitting: false, bend: false, kneeling: false, lying: false,
  props: {
    'Hips.position':{x:0, y:0.989, z:0.001}, 'Hips.rotation':{x:0.047, y:0.007, z:-0.007}, 'Spine.rotation':{x:-0.143, y:-0.007, z:0.005}, 'Spine1.rotation':{x:-0.043, y:-0.014, z:0.012}, 'Spine2.rotation':{x:0.072, y:-0.013, z:0.013}, 'Neck.rotation':{x:0.048, y:-0.003, z:0.012}, 'Head.rotation':{x:0.05, y:-0.02, z:-0.017}, 'LeftShoulder.rotation':{x:1.62, y:-0.166, z:-1.605}, 'LeftArm.rotation':{x:1.275, y:0.544, z:-0.092}, 'LeftForeArm.rotation':{x:0, y:0, z:0.302}, 'LeftHand.rotation':{x:-0.225, y:-0.154, z:0.11}, 'LeftHandThumb1.rotation':{x:0.435, y:-0.044, z:0.457}, 'LeftHandThumb2.rotation':{x:-0.028, y:0.002, z:-0.246}, 'LeftHandThumb3.rotation':{x:-0.236, y:-0.025, z:0.113}, 'LeftHandIndex1.rotation':{x:0.218, y:0.008, z:-0.081}, 'LeftHandIndex2.rotation':{x:0.165, y:-0.001, z:-0.017}, 'LeftHandIndex3.rotation':{x:0.165, y:-0.001, z:-0.017}, 'LeftHandMiddle1.rotation':{x:0.235, y:-0.011, z:-0.065}, 'LeftHandMiddle2.rotation':{x:0.182, y:-0.002, z:-0.019}, 'LeftHandMiddle3.rotation':{x:0.182, y:-0.002, z:-0.019}, 'LeftHandRing1.rotation':{x:0.316, y:-0.017, z:0.008}, 'LeftHandRing2.rotation':{x:0.253, y:-0.003, z:-0.026}, 'LeftHandRing3.rotation':{x:0.255, y:-0.003, z:-0.026}, 'LeftHandPinky1.rotation':{x:0.336, y:-0.062, z:0.088}, 'LeftHandPinky2.rotation':{x:0.276, y:-0.004, z:-0.028}, 'LeftHandPinky3.rotation':{x:0.276, y:-0.004, z:-0.028}, 'RightShoulder.rotation':{x:1.615, y:0.064, z:1.53}, 'RightArm.rotation':{x:1.313, y:-0.424, z:0.131}, 'RightForeArm.rotation':{x:0, y:0, z:-0.317}, 'RightHand.rotation':{x:-0.158, y:-0.639, z:-0.196}, 'RightHandThumb1.rotation':{x:0.44, y:0.048, z:-0.549}, 'RightHandThumb2.rotation':{x:-0.056, y:-0.008, z:0.274}, 'RightHandThumb3.rotation':{x:-0.258, y:0.031, z:-0.095}, 'RightHandIndex1.rotation':{x:0.169, y:-0.011, z:0.105}, 'RightHandIndex2.rotation':{x:0.134, y:0.001, z:0.011}, 'RightHandIndex3.rotation':{x:0.134, y:0.001, z:0.011}, 'RightHandMiddle1.rotation':{x:0.288, y:0.014, z:0.092}, 'RightHandMiddle2.rotation':{x:0.248, y:0.003, z:0.02}, 'RightHandMiddle3.rotation':{x:0.249, y:0.003, z:0.02}, 'RightHandRing1.rotation':{x:0.369, y:0.019, z:0.006}, 'RightHandRing2.rotation':{x:0.321, y:0.004, z:0.026}, 'RightHandRing3.rotation':{x:0.323, y:0.004, z:0.026}, 'RightHandPinky1.rotation':{x:0.468, y:0.085, z:-0.03}, 'RightHandPinky2.rotation':{x:0.427, y:0.007, z:0.034}, 'RightHandPinky3.rotation':{x:0.142, y:0.001, z:0.012}, 'LeftUpLeg.rotation':{x:-0.077, y:-0.058, z:3.126}, 'LeftLeg.rotation':{x:-0.252, y:0.001, z:-0.018}, 'LeftFoot.rotation':{x:1.315, y:-0.064, z:0.315}, 'LeftToeBase.rotation':{x:0.577, y:-0.07, z:-0.009}, 'RightUpLeg.rotation':{x:-0.083, y:-0.032, z:3.124}, 'RightLeg.rotation':{x:-0.272, y:-0.003, z:0.021}, 'RightFoot.rotation':{x:1.342, y:0.076, z:-0.222}, 'RightToeBase.rotation':{x:0.44, y:0.069, z:0.016}
  }
};
head.playPose("custom-pose-1");
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In &lt;code&gt;head.animMoods&lt;/code&gt; the syntax is more complex, so I suggest that you take a look at the existing moods. In &lt;code&gt;anims&lt;/code&gt;, each leaf object is an animation loop template. Whenever a loop starts, the class iterates through the nested hierarchy of objects by following keys that match the current state (&lt;code&gt;idle&lt;/code&gt;, &lt;code&gt;talking&lt;/code&gt;), body form (&lt;code&gt;M&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;), current view (&lt;code&gt;full&lt;/code&gt;, &lt;code&gt;upper&lt;/code&gt;, &lt;code&gt;mid&lt;/code&gt;, &lt;code&gt;head&lt;/code&gt;), and/or probabilities (&lt;code&gt;alt&lt;/code&gt; + &lt;code&gt;p&lt;/code&gt;). The next animation will be created internally by using the &lt;code&gt;animFactory&lt;/code&gt; method. The property &lt;code&gt;delay&lt;/code&gt; (ms) determines how long that pose is held, &lt;code&gt;dt&lt;/code&gt; defines durations (ms) for each part in the sequence, and &lt;code&gt;vs&lt;/code&gt; defines the shapekeys and their target values for each part.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;
head.animMoods["custom-mood-1"] = {
  baseline: { eyesLookDown: 0.1 },
  speech: { deltaRate: 0, deltaPitch: 0, deltaVolume: 0 },
  anims: [
    { name: 'breathing', delay: 1500, dt: [ 1200,500,1000 ], vs: { chestInhale: [0.5,0.5,0] } },
    { name: 'pose', alt: [
      { p: 0.2, delay: [5000,20000], vs: { pose: ['side'] } },
      { p: 0.2, delay: [5000,20000], vs: { pose: ['hip'] },
        'M': { delay: [5000,20000], vs: { pose: ['wide'] } }
      },
      { delay: [5000,20000], vs: { pose: ['custom-pose-1'] } }
    ]},
    { name: 'head',
      idle: { delay: [0,1000], dt: [ [200,5000] ], vs: { headRotateX: [[-0.04,0.10]], headRotateY: [[-0.3,0.3]], headRotateZ: [[-0.08,0.08]] } },
      talking: { dt: [ [0,1000,0] ], vs: { headRotateX: [[-0.05,0.15,1,2]], headRotateY: [[-0.1,0.1]], headRotateZ: [[-0.1,0.1]] } }
    },
    { name: 'eyes', delay: [200,5000], dt: [ [100,500],[100,5000,2] ], vs: { eyesRotateY: [[-0.6,0.6]], eyesRotateX: [[-0.2,0.6]] } },
    { name: 'blink', delay: [1000,8000,1,2], dt: [50,[100,300],100], vs: { eyeBlinkLeft: [1,1,0], eyeBlinkRight: [1,1,0] } },
    { name: 'mouth', delay: [1000,5000], dt: [ [100,500],[100,5000,2] ], vs : { mouthRollLower: [[0,0.3,2]], mouthRollUpper: [[0,0.3,2]], mouthStretchLeft: [[0,0.3]], mouthStretchRight: [[0,0.3]], mouthPucker: [[0,0.3]] } },
    { name: 'misc', delay: [100,5000], dt: [ [100,500],[100,5000,2] ], vs : { eyeSquintLeft: [[0,0.3,3]], eyeSquintRight: [[0,0.3,3]], browInnerUp: [[0,0.3]], browOuterUpLeft: [[0,0.3]], browOuterUpRight: [[0,0.3]] } }
  ]
};
head.setMood("custom-mood-1");

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Typical value range is [0,1] or [-1,1]. At the end of each animation, the value will automatically return to its baseline value. If the value is an array, it defines a range for a uniform/Gaussian random value (approximated using CLT). See the class method &lt;code&gt;gaussianRandom&lt;/code&gt; for more information.&lt;/p&gt; 
&lt;p&gt;In &lt;code&gt;head.gestureTemplates&lt;/code&gt; each property is a subset of bone rotations that will be used to override the current pose.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;head.gestureTemplates["salute"] = {
  'LeftShoulder.rotation':{x:1.706, y:-0.171, z:-1.756}, 'LeftArm.rotation':{x:0.883, y:-0.288, z:0.886}, 'LeftForeArm.rotation':{x:0, y:0, z:2.183}, 'LeftHand.rotation':{x:0.029, y:-0.298, z:0.346}, 'LeftHandThumb1.rotation':{x:1.43, y:-0.887, z:0.956}, 'LeftHandThumb2.rotation':{x:-0.406, y:0.243, z:0.094}, 'LeftHandThumb3.rotation':{x:-0.024, y:0.008, z:-0.012}, 'LeftHandIndex1.rotation':{x:0.247, y:-0.011, z:-0.084}, 'LeftHandIndex2.rotation':{x:0.006, y:0, z:0}, 'LeftHandIndex3.rotation':{x:-0.047, y:0, z:0.004}, 'LeftHandMiddle1.rotation':{x:0.114, y:-0.004, z:-0.055}, 'LeftHandMiddle2.rotation':{x:0.09, y:0, z:-0.007}, 'LeftHandMiddle3.rotation':{x:0.078, y:0, z:-0.006}, 'LeftHandRing1.rotation':{x:0.205, y:-0.009, z:0.023}, 'LeftHandRing2.rotation':{x:0.109, y:0, z:-0.009}, 'LeftHandRing3.rotation':{x:-0.015, y:0, z:0.001}, 'LeftHandPinky1.rotation':{x:0.267, y:-0.012, z:0.031}, 'LeftHandPinky2.rotation':{x:0.063, y:0, z:-0.005}, 'LeftHandPinky3.rotation':{x:0.178, y:-0.001, z:-0.014}
};
head.playGesture("salute",3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In &lt;code&gt;head.animEmojis&lt;/code&gt; each object is an animated emoji. Note that you can also use &lt;code&gt;head.playGesture&lt;/code&gt; to play animated emojis. This makes it easy to combine a hand gesture and a facial expression by giving the gesture and the emoji the same name.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;head.animEmojis["🫤"] = { dt: [300,2000], vs: {
    browInnerUp: [0.5], eyeWideLeft: [0.5], eyeWideRight: [0.5], mouthLeft: [0.5], mouthPressLeft: [0.8], mouthPressRight: [0.2], mouthRollLower: [0.5], mouthStretchLeft: [0.7],   mouthStretchRight: [0.7]
  }
};
head.playGesture("🫤",3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix E: Dynamic Bones (ADVANCED)&lt;/h3&gt; 
&lt;p&gt;If you want your character's hair or other body parts to wiggle as the character moves, you can use TalkingHead's Dynamic Bones feature. The built-in physics engine simulates Newton's equations of motions using a spring-damper model and the &lt;a href="https://en.wikipedia.org/wiki/Verlet_integration"&gt;velocity Verlet integration&lt;/a&gt; method.&lt;/p&gt; 
&lt;p&gt;Standard Ready Player Me 3D avatars don't yet include features like hair bones. Until they do, you'll need to add the dynamic bones and weights to the model yourself. Here's an example of rigged hair in Blender.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/images/ponytail.jpg" /&gt; 
&lt;p&gt;Once your custom rig is in place, you can configure the dynamic bones by setting the &lt;code&gt;modelDynamicBones&lt;/code&gt; property to the &lt;code&gt;avatar&lt;/code&gt; object of the &lt;code&gt;showAvatar&lt;/code&gt; method. Here's an example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Load and show the avatar
try {
  await head.showAvatar( {
    url: './avatars/custom.glb',
    body: 'F',
    avatarMood: 'neutral',
    ttsLang: "en-GB",
    ttsVoice: "en-GB-Standard-A",
    lipsyncLang: 'en',
    modelDynamicBones: [
      {
        bone: "ponytail1", type: "full", stiffness: 20, damping: 2,
        limits: [null,null,[null,0.01],null],
      },
      {
        bone: "ponytail2", type: "full", stiffness: 200, damping: 10,
        pivot: true
      },
      {
        bone: "ponytail3", type: "full", stiffness: 400, damping: 10,
        excludes: [{"bone":"Head","deltaLocal":[0,0.05,0.02],"radius":0.13}]
      }
    ]
  });
} catch (error) {
  console.log(error);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Each item in &lt;code&gt;modelDynamicBones&lt;/code&gt; array represents one dynamic bone, which can be configured separately.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;CLICK HERE to see all the available PROPERTIES.&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Property&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
    &lt;th&gt;Example&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;bone&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;The name of the bone in your custom skeleton. Note that each dynamic bone must have a parent bone.&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"ponytail1"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;type&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;
     &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;"point"&lt;/code&gt; updates only the bone's local position [x,y,z]. It is fast to calculate, but may cause skinned meshes to deform unnaturally.&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;"link"&lt;/code&gt; updates only the parent's quaternions (XZ rotations).&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;"mix1"&lt;/code&gt; mixes XZ rotations with a stretch (bone length, position change).&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;"mix2"&lt;/code&gt; mixes XZ rotations with a twist (Y rotations).&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;"full"&lt;/code&gt; link with both stretch and twist.&lt;/li&gt;
     &lt;/ul&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;"full"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;stiffness&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Mass-normalized spring constant &lt;code&gt;k&lt;/code&gt; [m/s^2]. Either a non-negative number or an array with separate values for each dimension [x, y, z, t].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;20&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;damping&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Mass-normalized damping coefficient &lt;code&gt;c&lt;/code&gt; [1/s]. Either a non-negative number or an array with separate values for each dimension [x, y, z, t].&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;external&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;External scaling factor between [0,1] that can be used to scale down the external forces caused by parent's movement. If set to &lt;code&gt;0&lt;/code&gt;, the bone is rigid and moves with its parent without experiencing any external force. If set to &lt;code&gt;1&lt;/code&gt;, the bone follows its parent with a lag (inertia) and feels the force. OPTIONAL, default value &lt;code&gt;1.0&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;0.7&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;limits&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Sets the limiting range [low, high] for each dimension [x, y, z, t] in meters [m]. This can help prevent situations in which meshes overlap due to sudden movements or when the amplitude becomes unrealistic. Limits are applied in local space. OPTIONAL, default &lt;code&gt;null&lt;/code&gt; (no limit)&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;[null,null,[null,0.01],null]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;deltaLocal&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Local position translation [dx,dy,dz] in meters [m]. OPTIONAL, default &lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;[0,0.01,0]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;deltaWorld&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;World position translation [dx,dy,dz] in meters [m]. OPTIONAL, default &lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;[0,-0.02,0]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;pivot&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If &lt;code&gt;true&lt;/code&gt;, the bone becomes a free-hanging bone along the Y-axis. This means that the parent's X/Z rotations are automatically compensated. Use with caution, as this requires additional computational effort, and the &lt;code&gt;limits&lt;/code&gt; do not apply as usual. OPTIONAL, default &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;excludes&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Sets one or more spherical excluded zones that act as invisible force fields, limiting the movement of the bone. An array of objects in the format &lt;code&gt;{ bone, deltaLocal, radius}&lt;/code&gt; in which &lt;code&gt;bone&lt;/code&gt; specifies the center bone name, &lt;code&gt;deltaLocal&lt;/code&gt; (optional) offset [x,y,z] relative to center bone, and &lt;code&gt;radius&lt;/code&gt; in meters. OPTIONAL, default &lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&amp;nbsp;&lt;code&gt;[ { bone: "Head", deltaLocal: [0,0.05,0.02], radius: 0.13 } ]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;code&gt;helper&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;If &lt;code&gt;true&lt;/code&gt;, add a helper object to the scene to assist with visualizing the bone during testing. If the dynamic bone type is "point", displays only a square, otherwise also the line from parent to the bone. OPTIONAL, default &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;p&gt;Finding a good combination of &lt;code&gt;stiffness&lt;/code&gt;, &lt;code&gt;damping&lt;/code&gt;, and &lt;code&gt;external&lt;/code&gt;, is mostly a matter of trial and error. Turn on the helper property or use the test app to fine-tune the settings while running animations typical to your use case.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] For dynamic bones of type &lt;code&gt;"point"&lt;/code&gt;, you can simulate gravity by applying a &lt;code&gt;deltaWorld&lt;/code&gt; translation down the Y-axis and compensating for the initial stretch in the rest pose by applying &lt;code&gt;deltaLocal&lt;/code&gt; translation up the Y-axis.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix F: Controlling Blendshapes Directly (Advanced)&lt;/h3&gt; 
&lt;p&gt;The TalkingHead class provides basic facial expressions and animations by controlling the 3D avatar's blendshapes (a.k.a. morph targets). It also possible to control these blendshapes directly from your app. Below are some of the available approaches, with simple code examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;code&gt;setFixedValue&lt;/code&gt; method to smoothly transition from the current blendshape value to some fixed value. The fixed value will override all other methods as well as internal/external animations. To return back to normal operation, set the fixed value to &lt;code&gt;null&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;head.setFixedValue("jawOpen",1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use the &lt;code&gt;realtime&lt;/code&gt; value of the &lt;code&gt;head.mtAvatar&lt;/code&gt; property to set the blend shape value without any smooth transition. This is useful for cases like face landmark detection, where you need to stay in sync with real-time input. To return back to normal operation, set the realtime value to &lt;code&gt;null&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;Object.assign( head.mtAvatar["jawOpen"],{ realtime: 1, needsUpdate: true });
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add an animation template object &lt;code&gt;anim&lt;/code&gt; to the audio data in &lt;code&gt;speakAudio&lt;/code&gt; to drive blendshapes in sync with audio playback. This is especially useful when using facial animation data from external sources (e.g., Azure TTS 3D blendshapes or motion capture) and want to play it alongside spoken audio:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;head.speakAudio({
  audio: audio,
  anim: {
    name: "blendshapes",
    dt: [ 33, 33, 33, ... ],  // durations in milliseconds for each frame
    vs: { // Blend shape keys and values for each frame
      "jawOpen": [ 0, 0.2, 0.4, ... ],
      "mouthRollLower": [ 0, 0.05, 0.1, ... ],
      // ... additional blendshape keys
    }
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See a full code example using Azure blendshape output &lt;a href="https://raw.githubusercontent.com/met4citizen/TalkingHead/main/examples/azure-blendshapes.html"&gt;here&lt;/a&gt;. - &lt;strong&gt;Note&lt;/strong&gt;: Azure's output relies solely on ARKit blendshapes and is not optimized for RPM avatars. As a result, the quality of lip-sync may be less natural compared to using Oculus visemes and the TalkingHead's internal lip-sync language module. For example, the mouth may open too widely, or the lips may fail to touch for certain phonemes they should.&lt;/p&gt; 
&lt;p&gt;See also the next Appendix G for how to stream audio with lip-sync.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix G: Streaming Audio and Lip-sync (Advanced)&lt;/h3&gt; 
&lt;p&gt;This low-level streaming interface is designed for real-time scenarios, such as speech-to-speech or live TTS integrations where latency must be minimized. Use this interface if you require direct, chunked audio playback and on-the-fly lip-sync updates. You can, for instance, integrate a real-time TTS pipeline (like Azure Speech SDK or another live audio source) that continuously streams audio and word/viseme data into TalkingHead.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; The calling application must handle all aspects of managing and synchronizing the data streams (e.g., facial expressions, eye contact, hand gestures), as well as preventing concurrency issues and buffering multiple sources. The system is designed to handle one stream at a time.&lt;/p&gt; 
&lt;h4&gt;Stream Session Reusability&lt;/h4&gt; 
&lt;p&gt;Once a streaming session is started with &lt;code&gt;streamStart()&lt;/code&gt;, the session remains active and reusable until explicitly ended with &lt;code&gt;streamStop()&lt;/code&gt;. You can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Natural completion&lt;/strong&gt;: Call &lt;code&gt;streamNotifyEnd()&lt;/code&gt; after streaming all data with &lt;code&gt;streamAudio()&lt;/code&gt; to signal the end of an utterance. The session remains active for reuse.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Interruption&lt;/strong&gt;: Call &lt;code&gt;streamInterrupt()&lt;/code&gt; to immediately stop ongoing audio and lip-sync. The session remains active for reuse.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reconfiguration&lt;/strong&gt;: Call &lt;code&gt;streamStart()&lt;/code&gt; again at any time to reconfigure the session with new options.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Session termination&lt;/strong&gt;: Call &lt;code&gt;streamStop()&lt;/code&gt; to completely end the streaming session.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;API Overview&lt;/h4&gt; 
&lt;h5&gt;1. &lt;code&gt;streamStart(opt={}, onAudioStart, onAudioEnd, onSubtitles, onMetrics)&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Enters streaming mode using an &lt;code&gt;AudioWorklet&lt;/code&gt; for low-latency playback. Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;opt&lt;/code&gt; &lt;em&gt;(object, optional)&lt;/em&gt; – Settings controlling streaming behavior: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;sampleRate&lt;/code&gt; – A number in the range [8000, 96000].&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;gain&lt;/code&gt; – Sets the playback gain (volume) for the streaming audio.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;lipsyncLang&lt;/code&gt; – Specifies lip-sync language if you want viseme generation using words. Defaults to avatar &lt;code&gt;lipsyncLang&lt;/code&gt;, or to options &lt;code&gt;lipsyncLang&lt;/code&gt; value.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;lipsyncType&lt;/code&gt; – Specifies lip-sync data type. Can take one of the values &lt;code&gt;visemes&lt;/code&gt; (default), &lt;code&gt;blendshapes&lt;/code&gt;, and &lt;code&gt;words&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;waitForAudioChunks&lt;/code&gt; – Boolean (default: &lt;code&gt;true&lt;/code&gt;). If &lt;code&gt;false&lt;/code&gt;, lip-sync will play immediately without waiting for audio chunks. This can be used to play lip-sync without audio.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;mood&lt;/code&gt; – Sets avatar mood upon starting the stream.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;metrics&lt;/code&gt; – Used for in development performance monitoring: &lt;code&gt;{enabled: true, intervalHz: 2}&lt;/code&gt;. Enables queue depth and underrun tracking in the audio worklet. Do not set in production.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onAudioStart&lt;/code&gt; &lt;em&gt;(function, optional)&lt;/em&gt; – Callback invoked the moment audio playback starts.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onAudioEnd&lt;/code&gt; &lt;em&gt;(function, optional)&lt;/em&gt; – Callback invoked automatically once audio playback concludes.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onSubtitles&lt;/code&gt; &lt;em&gt;(function, optional)&lt;/em&gt; – Callback to handle showing subtitle text.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onMetrics&lt;/code&gt; &lt;em&gt;(function, optional)&lt;/em&gt; – Callback receiving performance monitoring data: queue depth, underruns, playback state.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Upon calling &lt;code&gt;streamStart&lt;/code&gt;, all queued speech (&lt;code&gt;speakText&lt;/code&gt;, &lt;code&gt;speakAudio&lt;/code&gt;) is stopped, the engine enters streaming mode, and the avatar prepares for real-time lip-sync. You can then feed audio via &lt;code&gt;streamAudio()&lt;/code&gt;. The session remains active until &lt;code&gt;streamStop()&lt;/code&gt; is called.&lt;/p&gt; 
&lt;h5&gt;2. &lt;code&gt;streamAudio(r)&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Sends one chunk of PCM audio data (16-bit little-endian) plus lip-sync data. Parameters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;r.audio&lt;/code&gt; – An &lt;code&gt;ArrayBuffer&lt;/code&gt; or typed array of &lt;strong&gt;16-bit LE PCM&lt;/strong&gt; samples. These are played immediately.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;r.visemes&lt;/code&gt;, &lt;code&gt;r.vtimes&lt;/code&gt;, &lt;code&gt;r.vdurations&lt;/code&gt; &lt;em&gt;(optional)&lt;/em&gt; – Directly schedule lip-sync visemes at specific times with specific durations. This is the default type of lip-sync data.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;r.words&lt;/code&gt;, &lt;code&gt;r.wtimes&lt;/code&gt;, &lt;code&gt;r.wdurations&lt;/code&gt; &lt;em&gt;(optional)&lt;/em&gt; – Per-word timings and durations (e.g. TTS), allowing the library to create subtitles and/or calculate visemes if the &lt;code&gt;lipsyncType&lt;/code&gt; option is set to &lt;code&gt;words&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;r.anims&lt;/code&gt; &lt;em&gt;(optional)&lt;/em&gt; – An array of blendshape animations that play in sync with the audio. Requires setting &lt;code&gt;lipsyncType&lt;/code&gt; option to &lt;code&gt;blendshapes&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each call to &lt;code&gt;streamAudio()&lt;/code&gt; schedules an immediate chunk for playback and any included lip-sync or subtitle data on the animation timeline. Include only lip-sync data as specified in the &lt;code&gt;lipsyncType&lt;/code&gt; option via the &lt;code&gt;streamStart&lt;/code&gt; call. You can include any number of visemes, anims, or words which are not necessarily associated with the included audio chunk. You need to buffer the lip-sync data in the application and send it alongside the audio chunks.&lt;/p&gt; 
&lt;h5&gt;3. &lt;code&gt;streamNotifyEnd()&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Signals that no more chunks are expected for the current streaming utterance. Playback stops automatically once queued audio finishes. This is useful for gracefully concluding real-time TTS streams when your pipeline has no additional data to send. The streaming session remains active and can be reused by calling &lt;code&gt;streamAudio()&lt;/code&gt; again.&lt;/p&gt; 
&lt;h5&gt;4. &lt;code&gt;streamInterrupt()&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Immediately interrupts any ongoing audio playback and lip-sync animations in the streaming session. This method stops the current utterance but keeps the streaming session active for reuse. You can continue using the session by calling &lt;code&gt;streamAudio()&lt;/code&gt; again after interruption.&lt;/p&gt; 
&lt;h5&gt;5. &lt;code&gt;streamStop()&lt;/code&gt;&lt;/h5&gt; 
&lt;p&gt;Forces an immediate end to the streaming session. All queued audio and lip-sync animations are cleared, the avatar reverts to its idle state, and the audio worklet is disconnected and cleaned up. To start streaming again after calling &lt;code&gt;streamStop()&lt;/code&gt;, you must call &lt;code&gt;streamStart()&lt;/code&gt; to create a new session.&lt;/p&gt; 
&lt;h4&gt;Example Usage&lt;/h4&gt; 
&lt;p&gt;Refer to the example provided in the repository &lt;code&gt;azure-audio-streaming.html&lt;/code&gt; on how to integrate this interface with Azure TTS streamed audio.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Appendix H: Avatar-Only Mode (EXPERIMENTAL)&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] This is still an experimental feature, so expect rapid changes.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;By default, the TalkingHead class operates in standalone mode, creating its own 3D scene, renderer, lights, and other 3D components. If you already have your own 3D scene, you can create an avatar-only instance and call the &lt;code&gt;head.animate(dt)&lt;/code&gt; update function from within your own renderer. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Create avatarOnly instance and load
const head = new TalkingHead( container, {
  /* ... */
  avatarOnly: true, // set avatarOnly mode
  avatarOnlyCamera: camera // Your camera avatar talks to
});
await head.showAvatar({ /* ... */ });

// Add to your own scene
head.armature.position.set(1,0,0);
head.armature.rotation.set(0,0.5,0);
scene.add(head.armature);

// You own animation loop
const clock = new THREE.Clock();
function animate() {
  const delta = clock.getDelta();
  head.animate(delta * 1000); // Update avatar
  renderer.render( scene, camera );
}
renderer.setAnimationLoop(animate);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also add &lt;code&gt;avatarOnly&lt;/code&gt; armatures to your standalone TalkingHead scene to have multiple avatars in one scene. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;let headStandalone, headAvatarOnly;

// Standalone instance
headStandalone = new TalkingHead( container, {
  /* ... */
  update: (dt) =&amp;gt; { headAvatarOnly?.animate(dt); }
});
await headStandalone.showAvatar({ /* ... */ });

// avatarOnly instance
headAvatarOnly = new TalkingHead( container, {
  /* ... */
  avatarOnly: true, // set avatarOnly mode
  avatarOnlyCamera: headStandalone.camera // Standalone camera
});
await headAvatarOnly.showAvatar({ /* ... */ });

// Add avatarOnly to standalone scene
headAvatarOnly.armature.position.set(1,0,0);
headStandalone.scene.add( headAvatarOnly.armature );
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want one TalkingHead avatar to speak to another, set its &lt;code&gt;speakTo&lt;/code&gt; property. The value can be another TalkingHead instance, any 3D object, or a world position. For example, to make two avatars talk to each other:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;headAvatarOnly.speakTo = headStandalone;
headStandalone.speakTo = headAvatarOnly;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want the avatar to address the user again, set &lt;code&gt;speakTo&lt;/code&gt; value to &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>