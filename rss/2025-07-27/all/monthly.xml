<rss version="2.0">
  <channel>
    <title>GitHub All Languages Monthly Trending</title>
    <description>Monthly Trending of All Languages in GitHub</description>
    <pubDate>Sat, 26 Jul 2025 01:48:24 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>musistudio/claude-code-router</title>
      <link>https://github.com/musistudio/claude-code-router</link>
      <description>&lt;p&gt;Use Claude Code as the foundation for coding infrastructure, allowing you to decide how to interact with the model while enjoying updates from Anthropic.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Code Router&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/musistudio/claude-code-router/main/README_zh.md"&gt;中文版&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A powerful tool to route Claude Code requests to different models and customize any request.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/claude-code.png" alt=""&gt;&lt;/p&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Model Routing&lt;/strong&gt;: Route requests to different models based on your needs (e.g., background tasks, thinking, long context).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Provider Support&lt;/strong&gt;: Supports various model providers like OpenRouter, DeepSeek, Ollama, Gemini, Volcengine, and SiliconFlow.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Request/Response Transformation&lt;/strong&gt;: Customize requests and responses for different providers using transformers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Model Switching&lt;/strong&gt;: Switch models on-the-fly within Claude Code using the &lt;code&gt;/model&lt;/code&gt; command.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Actions Integration&lt;/strong&gt;: Trigger Claude Code tasks in your GitHub workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt;: Extend functionality with custom transformers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;h3&gt;1. Installation&lt;/h3&gt; 
&lt;p&gt;First, ensure you have &lt;a href="https://docs.anthropic.com/en/docs/claude-code/quickstart"&gt;Claude Code&lt;/a&gt; installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm install -g @anthropic-ai/claude-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, install Claude Code Router:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm install -g @musistudio/claude-code-router
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Configuration&lt;/h3&gt; 
&lt;p&gt;Create and configure your &lt;code&gt;~/.claude-code-router/config.json&lt;/code&gt; file. For more details, you can refer to &lt;code&gt;config.example.json&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;config.json&lt;/code&gt; file has several key sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;PROXY_URL&lt;/code&gt;&lt;/strong&gt; (optional): You can set a proxy for API requests, for example: &lt;code&gt;"PROXY_URL": "http://127.0.0.1:7890"&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;LOG&lt;/code&gt;&lt;/strong&gt; (optional): You can enable logging by setting it to &lt;code&gt;true&lt;/code&gt;. The log file will be located at &lt;code&gt;$HOME/.claude-code-router.log&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;APIKEY&lt;/code&gt;&lt;/strong&gt; (optional): You can set a secret key to authenticate requests. When set, clients must provide this key in the &lt;code&gt;Authorization&lt;/code&gt; header (e.g., &lt;code&gt;Bearer your-secret-key&lt;/code&gt;) or the &lt;code&gt;x-api-key&lt;/code&gt; header. Example: &lt;code&gt;"APIKEY": "your-secret-key"&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/strong&gt; (optional): You can set the host address for the server. If &lt;code&gt;APIKEY&lt;/code&gt; is not set, the host will be forced to &lt;code&gt;127.0.0.1&lt;/code&gt; for security reasons to prevent unauthorized access. Example: &lt;code&gt;"HOST": "0.0.0.0"&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Providers&lt;/code&gt;&lt;/strong&gt;: Used to configure different model providers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;Router&lt;/code&gt;&lt;/strong&gt;: Used to set up routing rules. &lt;code&gt;default&lt;/code&gt; specifies the default model, which will be used for all requests if no other route is configured.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Here is a comprehensive example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "APIKEY": "your-secret-key",
  "PROXY_URL": "http://127.0.0.1:7890",
  "LOG": true,
  "Providers": [
    {
      "name": "openrouter",
      "api_base_url": "https://openrouter.ai/api/v1/chat/completions",
      "api_key": "sk-xxx",
      "models": [
        "google/gemini-2.5-pro-preview",
        "anthropic/claude-sonnet-4",
        "anthropic/claude-3.5-sonnet",
        "anthropic/claude-3.7-sonnet:thinking"
      ],
      "transformer": {
        "use": ["openrouter"]
      }
    },
    {
      "name": "deepseek",
      "api_base_url": "https://api.deepseek.com/chat/completions",
      "api_key": "sk-xxx",
      "models": ["deepseek-chat", "deepseek-reasoner"],
      "transformer": {
        "use": ["deepseek"],
        "deepseek-chat": {
          "use": ["tooluse"]
        }
      }
    },
    {
      "name": "ollama",
      "api_base_url": "http://localhost:11434/v1/chat/completions",
      "api_key": "ollama",
      "models": ["qwen2.5-coder:latest"]
    },
    {
      "name": "gemini",
      "api_base_url": "https://generativelanguage.googleapis.com/v1beta/models/",
      "api_key": "sk-xxx",
      "models": ["gemini-2.5-flash", "gemini-2.5-pro"],
      "transformer": {
        "use": ["gemini"]
      }
    },
    {
      "name": "volcengine",
      "api_base_url": "https://ark.cn-beijing.volces.com/api/v3/chat/completions",
      "api_key": "sk-xxx",
      "models": ["deepseek-v3-250324", "deepseek-r1-250528"],
      "transformer": {
        "use": ["deepseek"]
      }
    },
    {
      "name": "modelscope",
      "api_base_url": "https://api-inference.modelscope.cn/v1/chat/completions",
      "api_key": "",
      "models": ["Qwen/Qwen3-Coder-480B-A35B-Instruct"],
      "transformer": {
        "use": [
          [
            "maxtoken",
            {
              "max_tokens": 65536
            }
          ],
          "enhancetool"
        ]
      }
    },
    {
      "name": "dashscope",
      "api_base_url": "https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions",
      "api_key": "",
      "models": ["qwen3-coder-plus"],
      "transformer": {
        "use": [
          [
            "maxtoken",
            {
              "max_tokens": 65536
            }
          ],
          "enhancetool"
        ]
      }
    }
  ],
  "Router": {
    "default": "deepseek,deepseek-chat",
    "background": "ollama,qwen2.5-coder:latest",
    "think": "deepseek,deepseek-reasoner",
    "longContext": "openrouter,google/gemini-2.5-pro-preview",
    "webSearch": "gemini,gemini-2.5-flash"
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. Running Claude Code with the Router&lt;/h3&gt; 
&lt;p&gt;Start Claude Code using the router:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ccr code
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: After modifying the configuration file, you need to restart the service for the changes to take effect:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;ccr restart
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Providers&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;Providers&lt;/code&gt; array is where you define the different model providers you want to use. Each provider object requires:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: A unique name for the provider.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api_base_url&lt;/code&gt;: The full API endpoint for chat completions.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api_key&lt;/code&gt;: Your API key for the provider.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;models&lt;/code&gt;: A list of model names available from this provider.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;transformer&lt;/code&gt; (optional): Specifies transformers to process requests and responses.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Transformers&lt;/h4&gt; 
&lt;p&gt;Transformers allow you to modify the request and response payloads to ensure compatibility with different provider APIs.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Global Transformer&lt;/strong&gt;: Apply a transformer to all models from a provider. In this example, the &lt;code&gt;openrouter&lt;/code&gt; transformer is applied to all models under the &lt;code&gt;openrouter&lt;/code&gt; provider.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "openrouter",
  "api_base_url": "https://openrouter.ai/api/v1/chat/completions",
  "api_key": "sk-xxx",
  "models": [
    "google/gemini-2.5-pro-preview",
    "anthropic/claude-sonnet-4",
    "anthropic/claude-3.5-sonnet"
  ],
  "transformer": { "use": ["openrouter"] }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Model-Specific Transformer&lt;/strong&gt;: Apply a transformer to a specific model. In this example, the &lt;code&gt;deepseek&lt;/code&gt; transformer is applied to all models, and an additional &lt;code&gt;tooluse&lt;/code&gt; transformer is applied only to the &lt;code&gt;deepseek-chat&lt;/code&gt; model.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "deepseek",
  "api_base_url": "https://api.deepseek.com/chat/completions",
  "api_key": "sk-xxx",
  "models": ["deepseek-chat", "deepseek-reasoner"],
  "transformer": {
    "use": ["deepseek"],
    "deepseek-chat": { "use": ["tooluse"] }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Passing Options to a Transformer&lt;/strong&gt;: Some transformers, like &lt;code&gt;maxtoken&lt;/code&gt;, accept options. To pass options, use a nested array where the first element is the transformer name and the second is an options object.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "siliconflow",
  "api_base_url": "https://api.siliconflow.cn/v1/chat/completions",
  "api_key": "sk-xxx",
  "models": ["moonshotai/Kimi-K2-Instruct"],
  "transformer": {
    "use": [
      [
        "maxtoken",
        {
          "max_tokens": 16384
        }
      ]
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Available Built-in Transformers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;deepseek&lt;/code&gt;: Adapts requests/responses for DeepSeek API.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;gemini&lt;/code&gt;: Adapts requests/responses for Gemini API.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;openrouter&lt;/code&gt;: Adapts requests/responses for OpenRouter API.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;groq&lt;/code&gt;: Adapts requests/responses for groq API.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;maxtoken&lt;/code&gt;: Sets a specific &lt;code&gt;max_tokens&lt;/code&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tooluse&lt;/code&gt;: Optimizes tool usage for certain models via &lt;code&gt;tool_choice&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;gemini-cli&lt;/code&gt; (experimental): Unofficial support for Gemini via Gemini CLI &lt;a href="https://gist.github.com/musistudio/1c13a65f35916a7ab690649d3df8d1cd"&gt;gemini-cli.js&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Custom Transformers:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can also create your own transformers and load them via the &lt;code&gt;transformers&lt;/code&gt; field in &lt;code&gt;config.json&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "transformers": [
    {
      "path": "$HOME/.claude-code-router/plugins/gemini-cli.js",
      "options": {
        "project": "xxx"
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Router&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;Router&lt;/code&gt; object defines which model to use for different scenarios:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;default&lt;/code&gt;: The default model for general tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;background&lt;/code&gt;: A model for background tasks. This can be a smaller, local model to save costs.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;think&lt;/code&gt;: A model for reasoning-heavy tasks, like Plan Mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;longContext&lt;/code&gt;: A model for handling long contexts (e.g., &amp;gt; 60K tokens).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;webSearch&lt;/code&gt;: Used for handling web search tasks and this requires the model itself to support the feature. If you're using openrouter, you need to add the &lt;code&gt;:online&lt;/code&gt; suffix after the model name.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also switch models dynamically in Claude Code with the &lt;code&gt;/model&lt;/code&gt; command: &lt;code&gt;/model provider_name,model_name&lt;/code&gt; Example: &lt;code&gt;/model openrouter,anthropic/claude-3.5-sonnet&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;Custom Router&lt;/h4&gt; 
&lt;p&gt;For more advanced routing logic, you can specify a custom router script via the &lt;code&gt;CUSTOM_ROUTER_PATH&lt;/code&gt; in your &lt;code&gt;config.json&lt;/code&gt;. This allows you to implement complex routing rules beyond the default scenarios.&lt;/p&gt; 
&lt;p&gt;In your &lt;code&gt;config.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "CUSTOM_ROUTER_PATH": "$HOME/.claude-code-router/custom-router.js"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The custom router file must be a JavaScript module that exports an &lt;code&gt;async&lt;/code&gt; function. This function receives the request object and the config object as arguments and should return the provider and model name as a string (e.g., &lt;code&gt;"provider_name,model_name"&lt;/code&gt;), or &lt;code&gt;null&lt;/code&gt; to fall back to the default router.&lt;/p&gt; 
&lt;p&gt;Here is an example of a &lt;code&gt;custom-router.js&lt;/code&gt; based on &lt;code&gt;custom-router.example.js&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// $HOME/.claude-code-router/custom-router.js

/**
 * A custom router function to determine which model to use based on the request.
 *
 * @param {object} req - The request object from Claude Code, containing the request body.
 * @param {object} config - The application's config object.
 * @returns {Promise&amp;lt;string|null&amp;gt;} - A promise that resolves to the "provider,model_name" string, or null to use the default router.
 */
module.exports = async function router(req, config) {
  const userMessage = req.body.messages.find((m) =&amp;gt; m.role === "user")?.content;

  if (userMessage &amp;amp;&amp;amp; userMessage.includes("explain this code")) {
    // Use a powerful model for code explanation
    return "openrouter,anthropic/claude-3.5-sonnet";
  }

  // Fallback to the default router configuration
  return null;
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🤖 GitHub Actions&lt;/h2&gt; 
&lt;p&gt;Integrate Claude Code Router into your CI/CD pipeline. After setting up &lt;a href="https://docs.anthropic.com/en/docs/claude-code/github-actions"&gt;Claude Code Actions&lt;/a&gt;, modify your &lt;code&gt;.github/workflows/claude.yaml&lt;/code&gt; to use the router:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;name: Claude Code

on:
  issue_comment:
    types: [created]
  # ... other triggers

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' &amp;amp;&amp;amp; contains(github.event.comment.body, '@claude')) ||
      # ... other conditions
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare Environment
        run: |
          curl -fsSL https://bun.sh/install | bash
          mkdir -p $HOME/.claude-code-router
          cat &amp;lt;&amp;lt; 'EOF' &amp;gt; $HOME/.claude-code-router/config.json
          {
            "log": true,
            "OPENAI_API_KEY": "${{ secrets.OPENAI_API_KEY }}",
            "OPENAI_BASE_URL": "https://api.deepseek.com",
            "OPENAI_MODEL": "deepseek-chat"
          }
          EOF
        shell: bash

      - name: Start Claude Code Router
        run: |
          nohup ~/.bun/bin/bunx @musistudio/claude-code-router@1.0.8 start &amp;amp;
        shell: bash

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        env:
          ANTHROPIC_BASE_URL: http://localhost:3456
        with:
          anthropic_api_key: "any-string-is-ok"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This setup allows for interesting automations, like running tasks during off-peak hours to reduce API costs.&lt;/p&gt; 
&lt;h2&gt;📝 Further Reading&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/en/project-motivation-and-how-it-works.md"&gt;Project Motivation and How It Works&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/en/maybe-we-can-do-more-with-the-route.md"&gt;Maybe We Can Do More with the Router&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;❤️ Support &amp;amp; Sponsoring&lt;/h2&gt; 
&lt;p&gt;If you find this project helpful, please consider sponsoring its development. Your support is greatly appreciated!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://ko-fi.com/F1F31GN2GM"&gt;&lt;img src="https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true" alt="ko-fi"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/alipay.jpg" width="200" alt="Alipay"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/musistudio/claude-code-router/main/blog/images/wechat.jpg" width="200" alt="WeChat Pay"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Our Sponsors&lt;/h3&gt; 
&lt;p&gt;A huge thank you to all our sponsors for their generous support!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;@Simon Leischnig&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/duanshuaimin"&gt;@duanshuaimin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vrgitadmin"&gt;@vrgitadmin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*o&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ceilwoo"&gt;@ceilwoo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*说&lt;/li&gt; 
 &lt;li&gt;@*更&lt;/li&gt; 
 &lt;li&gt;@K*g&lt;/li&gt; 
 &lt;li&gt;@R*R&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bobleer"&gt;@bobleer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*苗&lt;/li&gt; 
 &lt;li&gt;@*划&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Clarence-pan"&gt;@Clarence-pan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carter003"&gt;@carter003&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@S*r&lt;/li&gt; 
 &lt;li&gt;@*晖&lt;/li&gt; 
 &lt;li&gt;@*敏&lt;/li&gt; 
 &lt;li&gt;@Z*z&lt;/li&gt; 
 &lt;li&gt;@*然&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cluic"&gt;@cluic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*苗&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PromptExpert"&gt;@PromptExpert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*应&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yusnake"&gt;@yusnake&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*飞&lt;/li&gt; 
 &lt;li&gt;@董*&lt;/li&gt; 
 &lt;li&gt;@*汀&lt;/li&gt; 
 &lt;li&gt;@*涯&lt;/li&gt; 
 &lt;li&gt;@*:-）&lt;/li&gt; 
 &lt;li&gt;@**磊&lt;/li&gt; 
 &lt;li&gt;@*琢&lt;/li&gt; 
 &lt;li&gt;@*成&lt;/li&gt; 
 &lt;li&gt;@Z*o&lt;/li&gt; 
 &lt;li&gt;@*琨&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/congzhangzh"&gt;@congzhangzh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@*_&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(If your name is masked, please contact me via my homepage email to update it with your GitHub username.)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>snailyp/gemini-balance</title>
      <link>https://github.com/snailyp/gemini-balance</link>
      <description>&lt;p&gt;Gemini polling proxy service （gemini轮询代理服务）&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/snailyp/gemini-balance/main/README_ZH.md"&gt;Read this document in Chinese&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Gemini Balance - Gemini API Proxy and Load Balancer&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/13692" target="_blank"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/13692" alt="snailyp%2Fgemini-balance | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.python.org/"&gt;&lt;img src="https://img.shields.io/badge/Python-3.9%2B-blue.svg?sanitize=true" alt="Python"&gt;&lt;/a&gt; &lt;a href="https://fastapi.tiangolo.com/"&gt;&lt;img src="https://img.shields.io/badge/FastAPI-0.100%2B-green.svg?sanitize=true" alt="FastAPI"&gt;&lt;/a&gt; &lt;a href="https://www.uvicorn.org/"&gt;&lt;img src="https://img.shields.io/badge/Uvicorn-running-purple.svg?sanitize=true" alt="Uvicorn"&gt;&lt;/a&gt; &lt;a href="https://t.me/+soaHax5lyI0wZDVl"&gt;&lt;img src="https://img.shields.io/badge/Telegram-Group-blue.svg?logo=telegram" alt="Telegram Group"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;Important&lt;/strong&gt;: This project is licensed under the &lt;a href="https://raw.githubusercontent.com/snailyp/gemini-balance/main/LICENSE"&gt;CC BY-NC 4.0&lt;/a&gt; license. &lt;strong&gt;Any form of commercial resale service is prohibited&lt;/strong&gt;. I have never sold this service on any platform. If you encounter someone selling this service, they are a reseller. Please do not be deceived.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h2&gt;📖 Project Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Gemini Balance&lt;/strong&gt; is an application built with Python FastAPI, designed to provide proxy and load balancing functions for the Google Gemini API. It allows you to manage multiple Gemini API Keys and implement key rotation, authentication, model filtering, and status monitoring through simple configuration. Additionally, the project integrates image generation and multiple image hosting upload functions, and supports proxying in the OpenAI API format.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;📂 View Project Structure&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-plaintext"&gt;app/
├── config/       # Configuration management
├── core/         # Core application logic (FastAPI instance creation, middleware, etc.)
├── database/     # Database models and connections
├── domain/       # Business domain objects
├── exception/    # Custom exceptions
├── handler/      # Request handlers
├── log/          # Logging configuration
├── main.py       # Application entry point
├── middleware/   # FastAPI middleware
├── router/       # API routes (Gemini, OpenAI, status page, etc.)
├── scheduler/    # Scheduled tasks (e.g., Key status check)
├── service/      # Business logic services (chat, Key management, statistics, etc.)
├── static/       # Static files (CSS, JS)
├── templates/    # HTML templates (e.g., Key status page)
└── utils/        # Utility functions
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h2&gt;✨ Feature Highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Key Load Balancing&lt;/strong&gt;: Supports configuring multiple Gemini API Keys (&lt;code&gt;API_KEYS&lt;/code&gt;) for automatic sequential polling.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Visual Configuration&lt;/strong&gt;: Configurations modified through the admin backend take effect immediately without restarting. &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image4.png" alt="Configuration Panel"&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dual Protocol API Compatibility&lt;/strong&gt;: Supports both Gemini and OpenAI CHAT API formats. 
  &lt;ul&gt; 
   &lt;li&gt;OpenAI Base URL: &lt;code&gt;http://localhost:8000(/hf)/v1&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Gemini Base URL: &lt;code&gt;http://localhost:8000(/gemini)/v1beta&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image-Text Chat &amp;amp; Modification&lt;/strong&gt;: Configure models with &lt;code&gt;IMAGE_MODELS&lt;/code&gt; to support image-text chat and editing. Use the &lt;code&gt;configured_model-image&lt;/code&gt; model name to invoke. &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image6.png" alt="Chat with Image Generation"&gt; &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image7.png" alt="Modify Image"&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web Search&lt;/strong&gt;: Configure models with &lt;code&gt;SEARCH_MODELS&lt;/code&gt; to support web search. Use the &lt;code&gt;configured_model-search&lt;/code&gt; model name to invoke. &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image8.png" alt="Web Search"&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Key Status Monitoring&lt;/strong&gt;: Provides a &lt;code&gt;/keys_status&lt;/code&gt; page (authentication required) for real-time monitoring. &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image.png" alt="Monitoring Panel"&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Detailed Logging&lt;/strong&gt;: Provides detailed error logs for easy troubleshooting. &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image1.png" alt="Call Details"&gt; &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image2.png" alt="Log List"&gt; &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image3.png" alt="Log Details"&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible Key Addition&lt;/strong&gt;: Add keys in batches using the &lt;code&gt;gemini_key&lt;/code&gt; regex, with automatic deduplication. &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image5.png" alt="Add Key"&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Failure Retry &amp;amp; Auto-Disable&lt;/strong&gt;: Automatically retries failed API requests (&lt;code&gt;MAX_RETRIES&lt;/code&gt;) and disables keys after excessive failures (&lt;code&gt;MAX_FAILURES&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive API Compatibility&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Embeddings API&lt;/strong&gt;: Fully compatible with the OpenAI &lt;code&gt;embeddings&lt;/code&gt; API format.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Image Generation API&lt;/strong&gt;: Adapts the &lt;code&gt;imagen-3.0-generate-002&lt;/code&gt; model to the OpenAI image generation API format.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic Model List Maintenance&lt;/strong&gt;: Automatically fetches and syncs the latest model lists from Gemini and OpenAI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Proxy Support&lt;/strong&gt;: Supports HTTP/SOCKS5 proxies (&lt;code&gt;PROXIES&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Support&lt;/strong&gt;: Provides Docker images for both AMD and ARM architectures. 
  &lt;ul&gt; 
   &lt;li&gt;Image Address: &lt;code&gt;ghcr.io/snailyp/gemini-balance:latest&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;h3&gt;Option 1: Docker Compose (Recommended)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Get &lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/strong&gt;: Download the &lt;code&gt;docker-compose.yml&lt;/code&gt; file from the project repository.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prepare &lt;code&gt;.env&lt;/code&gt; file&lt;/strong&gt;: Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and configure it. Ensure &lt;code&gt;DATABASE_TYPE&lt;/code&gt; is set to &lt;code&gt;mysql&lt;/code&gt; and fill in the &lt;code&gt;MYSQL_*&lt;/code&gt; details.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start Services&lt;/strong&gt;: In the directory containing &lt;code&gt;docker-compose.yml&lt;/code&gt; and &lt;code&gt;.env&lt;/code&gt;, run: &lt;pre&gt;&lt;code class="language-bash"&gt;docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Option 2: Docker Command&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Pull Image&lt;/strong&gt;: &lt;pre&gt;&lt;code class="language-bash"&gt;docker pull ghcr.io/snailyp/gemini-balance:latest
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prepare &lt;code&gt;.env&lt;/code&gt; file&lt;/strong&gt;: Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and configure it.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Run Container&lt;/strong&gt;: &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 8000:8000 --name gemini-balance \
-v ./data:/app/data \
--env-file .env \
ghcr.io/snailyp/gemini-balance:latest
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: Detached mode.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-p 8000:8000&lt;/code&gt;: Map container port 8000 to host.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-v ./data:/app/data&lt;/code&gt;: Mount volume for persistent data.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--env-file .env&lt;/code&gt;: Load environment variables.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Option 3: Local Development&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Clone and Install&lt;/strong&gt;: &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/snailyp/gemini-balance.git
cd gemini-balance
pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configure Environment&lt;/strong&gt;: Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and configure it.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start Application&lt;/strong&gt;: &lt;pre&gt;&lt;code class="language-bash"&gt;uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
&lt;/code&gt;&lt;/pre&gt; Access the application at &lt;code&gt;http://localhost:8000&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h2&gt;⚙️ API Endpoints&lt;/h2&gt; 
&lt;h3&gt;Gemini API Format (&lt;code&gt;/gemini/v1beta&lt;/code&gt;)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GET /models&lt;/code&gt;: List available Gemini models.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /models/{model_name}:generateContent&lt;/code&gt;: Generate content.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /models/{model_name}:streamGenerateContent&lt;/code&gt;: Stream content generation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;OpenAI API Format&lt;/h3&gt; 
&lt;h4&gt;Hugging Face (HF) Compatible&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GET /hf/v1/models&lt;/code&gt;: List models.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /hf/v1/chat/completions&lt;/code&gt;: Chat completion.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /hf/v1/embeddings&lt;/code&gt;: Create text embeddings.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /hf/v1/images/generations&lt;/code&gt;: Generate images.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Standard OpenAI&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GET /openai/v1/models&lt;/code&gt;: List models.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /openai/v1/chat/completions&lt;/code&gt;: Chat completion (Recommended).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /openai/v1/embeddings&lt;/code&gt;: Create text embeddings.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /openai/v1/images/generations&lt;/code&gt;: Generate images.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;details&gt; 
 &lt;summary&gt;📋 View Full Configuration List&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align="left"&gt;Configuration Item&lt;/th&gt; 
    &lt;th align="left"&gt;Description&lt;/th&gt; 
    &lt;th align="left"&gt;Default Value&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;Database&lt;/strong&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;DATABASE_TYPE&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;mysql&lt;/code&gt; or &lt;code&gt;sqlite&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;mysql&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;SQLITE_DATABASE&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Path for SQLite database file&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;default_db&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MYSQL_HOST&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;MySQL host address&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;localhost&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MYSQL_SOCKET&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;MySQL socket address&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;/var/run/mysqld/mysqld.sock&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MYSQL_PORT&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;MySQL port&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;3306&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MYSQL_USER&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;MySQL username&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;your_db_user&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MYSQL_PASSWORD&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;MySQL password&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;your_db_password&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MYSQL_DATABASE&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;MySQL database name&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;defaultdb&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;API&lt;/strong&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;API_KEYS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;Required&lt;/strong&gt;, list of Gemini API keys&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;ALLOWED_TOKENS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;Required&lt;/strong&gt;, list of access tokens&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;AUTH_TOKEN&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Super admin token, defaults to the first of &lt;code&gt;ALLOWED_TOKENS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;sk-123456&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;ADMIN_SESSION_EXPIRE&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Admin session expiration time in seconds (5 minutes to 24 hours)&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;3600&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;TEST_MODEL&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Model for testing key validity&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;gemini-1.5-flash&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;IMAGE_MODELS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Models supporting image generation&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;["gemini-2.0-flash-exp"]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;SEARCH_MODELS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Models supporting web search&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;["gemini-2.0-flash-exp"]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;FILTERED_MODELS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Disabled models&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;TOOLS_CODE_EXECUTION_ENABLED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Enable code execution tool&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;SHOW_SEARCH_LINK&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Display search result links in response&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;SHOW_THINKING_PROCESS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Display model's thinking process&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;THINKING_MODELS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Models supporting thinking process&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;THINKING_BUDGET_MAP&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Budget map for thinking function (model:budget)&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;URL_NORMALIZATION_ENABLED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Enable smart URL routing&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;URL_CONTEXT_ENABLED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Enable URL context understanding&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;URL_CONTEXT_MODELS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Models supporting URL context&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;BASE_URL&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Gemini API base URL&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;https://generativelanguage.googleapis.com/v1beta&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MAX_FAILURES&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Max failures allowed per key&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MAX_RETRIES&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Max retries for failed API requests&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;CHECK_INTERVAL_HOURS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Interval (hours) to re-check disabled keys&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;TIMEZONE&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Application timezone&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;Asia/Shanghai&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;TIME_OUT&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Request timeout (seconds)&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;300&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;PROXIES&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;List of proxy servers&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;Logging &amp;amp; Security&lt;/strong&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;LOG_LEVEL&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Log level: &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;INFO&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;AUTO_DELETE_ERROR_LOGS_ENABLED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Auto-delete error logs&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;AUTO_DELETE_ERROR_LOGS_DAYS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Error log retention period (days)&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;7&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;AUTO_DELETE_REQUEST_LOGS_ENABLED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Auto-delete request logs&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;AUTO_DELETE_REQUEST_LOGS_DAYS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Request log retention period (days)&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;30&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;SAFETY_SETTINGS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Content safety thresholds (JSON string)&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;[{"category": "HARM_CATEGORY_HARASSMENT", "threshold": "OFF"}, ...]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;TTS&lt;/strong&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;TTS_MODEL&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;TTS model name&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;gemini-2.5-flash-preview-tts&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;TTS_VOICE_NAME&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;TTS voice name&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;Zephyr&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;TTS_SPEED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;TTS speed&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;normal&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;Image Generation&lt;/strong&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;PAID_KEY&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Paid API Key for advanced features&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;your-paid-api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;CREATE_IMAGE_MODEL&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Image generation model&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;imagen-3.0-generate-002&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;UPLOAD_PROVIDER&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Image upload provider: &lt;code&gt;smms&lt;/code&gt;, &lt;code&gt;picgo&lt;/code&gt;, &lt;code&gt;cloudflare_imgbed&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;smms&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;SMMS_SECRET_TOKEN&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;SM.MS API Token&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;your-smms-token&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;PICGO_API_KEY&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;PicoGo API Key&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;your-picogo-apikey&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;CLOUDFLARE_IMGBED_URL&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;CloudFlare ImgBed upload URL&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;https://xxxxxxx.pages.dev/upload&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;CLOUDFLARE_IMGBED_AUTH_CODE&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;CloudFlare ImgBed auth key&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;your-cloudflare-imgber-auth-code&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;CLOUDFLARE_IMGBED_UPLOAD_FOLDER&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;CloudFlare ImgBed upload folder&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;Stream Optimizer&lt;/strong&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;STREAM_OPTIMIZER_ENABLED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Enable stream output optimization&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;STREAM_MIN_DELAY&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Minimum stream output delay&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;0.016&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;STREAM_MAX_DELAY&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Maximum stream output delay&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;0.024&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;STREAM_SHORT_TEXT_THRESHOLD&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Short text threshold&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;STREAM_LONG_TEXT_THRESHOLD&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Long text threshold&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;50&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;STREAM_CHUNK_SIZE&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Stream output chunk size&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;Fake Stream&lt;/strong&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;FAKE_STREAM_ENABLED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Enable fake streaming&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;FAKE_STREAM_EMPTY_DATA_INTERVAL_SECONDS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Heartbeat interval for fake streaming (seconds)&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;Pull Requests or Issues are welcome.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/snailyp/gemini-balance/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=snailyp/gemini-balance" alt="Contributors"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;⭐ Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#snailyp/gemini-balance&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=snailyp/gemini-balance&amp;amp;type=Date" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🎉 Special Thanks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.picgo.net/"&gt;PicGo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://smms.app/"&gt;SM.MS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MarSeventh/CloudFlare-ImgBed"&gt;CloudFlare-ImgBed&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🙏 Our Supporters&lt;/h2&gt; 
&lt;p&gt;A special shout-out to &lt;a href="https://m.do.co/c/b249dd7f3b4c"&gt;DigitalOcean&lt;/a&gt; for providing the rock-solid and dependable cloud infrastructure that keeps this project humming!&lt;/p&gt; 
&lt;a href="https://m.do.co/c/b249dd7f3b4c"&gt; &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/dataocean.svg?sanitize=true" alt="DigitalOcean Logo" width="200"&gt; &lt;/a&gt; 
&lt;p&gt;CDN acceleration and security protection for this project are sponsored by &lt;a href="https://edgeone.ai/?from=github"&gt;Tencent EdgeOne&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://edgeone.ai/?from=github"&gt; &lt;img src="https://edgeone.ai/media/34fe3a45-492d-4ea4-ae5d-ea1087ca7b4b.png" alt="EdgeOne Logo" width="200"&gt; &lt;/a&gt; 
&lt;h2&gt;💖 Friendly Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/chengtx809/OneLine"&gt;OneLine&lt;/a&gt;&lt;/strong&gt; by &lt;a href="https://github.com/chengtx809"&gt;chengtx809&lt;/a&gt; - AI-driven hot event timeline generation tool.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎁 Project Support&lt;/h2&gt; 
&lt;p&gt;If you find this project helpful, consider supporting me via &lt;a href="https://afdian.com/a/snaily"&gt;Afdian&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/snailyp/gemini-balance/main/LICENSE"&gt;CC BY-NC 4.0&lt;/a&gt; (Attribution-NonCommercial) license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NanmiCoder/MediaCrawler</title>
      <link>https://github.com/NanmiCoder/MediaCrawler</link>
      <description>&lt;p&gt;小红书笔记 | 评论爬虫、抖音视频 | 评论爬虫、快手视频 | 评论爬虫、B 站视频 ｜ 评论爬虫、微博帖子 ｜ 评论爬虫、百度贴吧帖子 ｜ 百度贴吧评论回复爬虫 | 知乎问答文章｜评论爬虫&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🔥 MediaCrawler - 自媒体平台爬虫 🕷️&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://trendshift.io/repositories/8291" target="_blank"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/8291" alt="NanmiCoder%2FMediaCrawler | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"&gt; &lt;/a&gt; 
 &lt;p&gt;&lt;a href="https://github.com/NanmiCoder/MediaCrawler/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/NanmiCoder/MediaCrawler?style=social" alt="GitHub Stars"&gt;&lt;/a&gt; &lt;a href="https://github.com/NanmiCoder/MediaCrawler/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/NanmiCoder/MediaCrawler?style=social" alt="GitHub Forks"&gt;&lt;/a&gt; &lt;a href="https://github.com/NanmiCoder/MediaCrawler/issues"&gt;&lt;img src="https://img.shields.io/github/issues/NanmiCoder/MediaCrawler" alt="GitHub Issues"&gt;&lt;/a&gt; &lt;a href="https://github.com/NanmiCoder/MediaCrawler/pulls"&gt;&lt;img src="https://img.shields.io/github/issues-pr/NanmiCoder/MediaCrawler" alt="GitHub Pull Requests"&gt;&lt;/a&gt; &lt;a href="https://github.com/NanmiCoder/MediaCrawler/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/NanmiCoder/MediaCrawler" alt="License"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/README.md"&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%87%A8%F0%9F%87%B3_%E4%B8%AD%E6%96%87-%E5%BD%93%E5%89%8D-blue" alt="中文"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/README_en.md"&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%87%BA%F0%9F%87%B8_English-Available-green" alt="English"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/README_es.md"&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%87%AA%F0%9F%87%B8_Espa%C3%B1ol-Available-green" alt="Español"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;免责声明：&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;大家请以学习为目的使用本仓库⚠️⚠️⚠️⚠️，&lt;a href="https://github.com/HiddenStrawberry/Crawler_Illegal_Cases_In_China"&gt;爬虫违法违规的案件&lt;/a&gt; &lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;本仓库的所有内容仅供学习和参考之用，禁止用于商业用途。任何人或组织不得将本仓库的内容用于非法用途或侵犯他人合法权益。本仓库所涉及的爬虫技术仅用于学习和研究，不得用于对其他平台进行大规模爬虫或其他非法行为。对于因使用本仓库内容而引起的任何法律责任，本仓库不承担任何责任。使用本仓库的内容即表示您同意本免责声明的所有条款和条件。&lt;/p&gt; 
 &lt;p&gt;点击查看更为详细的免责声明。&lt;a href="https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/#disclaimer"&gt;点击跳转&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;📖 项目简介&lt;/h2&gt; 
&lt;p&gt;一个功能强大的&lt;strong&gt;多平台自媒体数据采集工具&lt;/strong&gt;，支持小红书、抖音、快手、B站、微博、贴吧、知乎等主流平台的公开信息抓取。&lt;/p&gt; 
&lt;h3&gt;🔧 技术原理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;核心技术&lt;/strong&gt;：基于 &lt;a href="https://playwright.dev/"&gt;Playwright&lt;/a&gt; 浏览器自动化框架登录保存登录态&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;无需JS逆向&lt;/strong&gt;：利用保留登录态的浏览器上下文环境，通过 JS 表达式获取签名参数&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;优势特点&lt;/strong&gt;：无需逆向复杂的加密算法，大幅降低技术门槛&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;✨ 功能特性&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;平台&lt;/th&gt; 
   &lt;th&gt;关键词搜索&lt;/th&gt; 
   &lt;th&gt;指定帖子ID爬取&lt;/th&gt; 
   &lt;th&gt;二级评论&lt;/th&gt; 
   &lt;th&gt;指定创作者主页&lt;/th&gt; 
   &lt;th&gt;登录态缓存&lt;/th&gt; 
   &lt;th&gt;IP代理池&lt;/th&gt; 
   &lt;th&gt;生成评论词云图&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;小红书&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;抖音&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;快手&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;B 站&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;微博&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;贴吧&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;知乎&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details id="pro-version"&gt; 
 &lt;summary&gt;🔗 &lt;strong&gt;🚀 MediaCrawlerPro 重磅发布！更多的功能，更好的架构设计！&lt;/strong&gt;&lt;/summary&gt; 
 &lt;h3&gt;🚀 MediaCrawlerPro 重磅发布！&lt;/h3&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;专注于学习成熟项目的架构设计，不仅仅是爬虫技术，Pro 版本的代码设计思路同样值得深入学习！&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;&lt;a href="https://github.com/MediaCrawlerPro"&gt;MediaCrawlerPro&lt;/a&gt; 相较于开源版本的核心优势：&lt;/p&gt; 
 &lt;h4&gt;🎯 核心功能升级&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ &lt;strong&gt;断点续爬功能&lt;/strong&gt;（重点特性）&lt;/li&gt; 
  &lt;li&gt;✅ &lt;strong&gt;多账号 + IP代理池支持&lt;/strong&gt;（重点特性）&lt;/li&gt; 
  &lt;li&gt;✅ &lt;strong&gt;去除 Playwright 依赖&lt;/strong&gt;，使用更简单&lt;/li&gt; 
  &lt;li&gt;✅ &lt;strong&gt;完整 Linux 环境支持&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;🏗️ 架构设计优化&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ &lt;strong&gt;代码重构优化&lt;/strong&gt;，更易读易维护（解耦 JS 签名逻辑）&lt;/li&gt; 
  &lt;li&gt;✅ &lt;strong&gt;企业级代码质量&lt;/strong&gt;，适合构建大型爬虫项目&lt;/li&gt; 
  &lt;li&gt;✅ &lt;strong&gt;完美架构设计&lt;/strong&gt;，高扩展性，源码学习价值更大&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;🎁 额外功能&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ &lt;strong&gt;自媒体视频下载器桌面端&lt;/strong&gt;（适合学习全栈开发）&lt;/li&gt; 
  &lt;li&gt;✅ &lt;strong&gt;多平台首页信息流推荐&lt;/strong&gt;（HomeFeed）&lt;/li&gt; 
  &lt;li&gt;&lt;input type="checkbox" disabled&gt; &lt;strong&gt;基于自媒体平台的AI Agent正在开发中 🚀🚀&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;点击查看：&lt;a href="https://github.com/MediaCrawlerPro"&gt;MediaCrawlerPro 项目主页&lt;/a&gt; 更多介绍&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;🚀 快速开始&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 &lt;strong&gt;开源不易，如果这个项目对您有帮助，请给个 ⭐ Star 支持一下！&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;📋 前置依赖&lt;/h2&gt; 
&lt;h3&gt;🚀 uv 安装（推荐）&lt;/h3&gt; 
&lt;p&gt;在进行下一步操作之前，请确保电脑上已经安装了 uv：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;安装地址&lt;/strong&gt;：&lt;a href="https://docs.astral.sh/uv/getting-started/installation"&gt;uv 官方安装指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;验证安装&lt;/strong&gt;：终端输入命令 &lt;code&gt;uv --version&lt;/code&gt;，如果正常显示版本号，证明已经安装成功&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;推荐理由&lt;/strong&gt;：uv 是目前最强的 Python 包管理工具，速度快、依赖解析准确&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🟢 Node.js 安装&lt;/h3&gt; 
&lt;p&gt;项目依赖 Node.js，请前往官网下载安装：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;下载地址&lt;/strong&gt;：&lt;a href="https://nodejs.org/en/download/"&gt;https://nodejs.org/en/download/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;版本要求&lt;/strong&gt;：&amp;gt;= 16.0.0&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📦 Python 包安装&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# 进入项目目录
cd MediaCrawler

# 使用 uv sync 命令来保证 python 版本和相关依赖包的一致性
uv sync
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🌐 浏览器驱动安装&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# 安装浏览器驱动
uv run playwright install
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;💡 提示&lt;/strong&gt;：MediaCrawler 目前已经支持使用 playwright 连接你本地的 Chrome 浏览器了，一些因为 Webdriver 导致的问题迎刃而解了。&lt;/p&gt; 
 &lt;p&gt;目前开放了 &lt;code&gt;xhs&lt;/code&gt; 和 &lt;code&gt;dy&lt;/code&gt; 这两个使用 CDP 的方式连接本地浏览器，如有需要，查看 &lt;code&gt;config/base_config.py&lt;/code&gt; 中的配置项。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🚀 运行爬虫程序&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# 项目默认是没有开启评论爬取模式，如需评论请在 config/base_config.py 中的 ENABLE_GET_COMMENTS 变量修改
# 一些其他支持项，也可以在 config/base_config.py 查看功能，写的有中文注释

# 从配置文件中读取关键词搜索相关的帖子并爬取帖子信息与评论
uv run main.py --platform xhs --lt qrcode --type search

# 从配置文件中读取指定的帖子ID列表获取指定帖子的信息与评论信息
uv run main.py --platform xhs --lt qrcode --type detail

# 打开对应APP扫二维码登录

# 其他平台爬虫使用示例，执行下面的命令查看
uv run main.py --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;🔗 &lt;strong&gt;使用 Python 原生 venv 管理环境（不推荐）&lt;/strong&gt;&lt;/summary&gt; 
 &lt;h4&gt;创建并激活 Python 虚拟环境&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;如果是爬取抖音和知乎，需要提前安装 nodejs 环境，版本大于等于：&lt;code&gt;16&lt;/code&gt; 即可&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;# 进入项目根目录
cd MediaCrawler

# 创建虚拟环境
# 我的 python 版本是：3.9.6，requirements.txt 中的库是基于这个版本的
# 如果是其他 python 版本，可能 requirements.txt 中的库不兼容，需自行解决
python -m venv venv

# macOS &amp;amp; Linux 激活虚拟环境
source venv/bin/activate

# Windows 激活虚拟环境
venv\Scripts\activate
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;安装依赖库&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;安装 playwright 浏览器驱动&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;playwright install
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;运行爬虫程序（原生环境）&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;# 项目默认是没有开启评论爬取模式，如需评论请在 config/base_config.py 中的 ENABLE_GET_COMMENTS 变量修改
# 一些其他支持项，也可以在 config/base_config.py 查看功能，写的有中文注释

# 从配置文件中读取关键词搜索相关的帖子并爬取帖子信息与评论
python main.py --platform xhs --lt qrcode --type search

# 从配置文件中读取指定的帖子ID列表获取指定帖子的信息与评论信息
python main.py --platform xhs --lt qrcode --type detail

# 打开对应APP扫二维码登录

# 其他平台爬虫使用示例，执行下面的命令查看
python main.py --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;💾 数据保存&lt;/h2&gt; 
&lt;p&gt;支持多种数据存储方式：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SQLite 数据库&lt;/strong&gt;：轻量级数据库，无需服务器，适合个人使用（推荐） 
  &lt;ul&gt; 
   &lt;li&gt;参数：&lt;code&gt;--save_data_option sqlite&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;自动创建数据库文件&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MySQL 数据库&lt;/strong&gt;：支持关系型数据库 MySQL 中保存（需要提前创建数据库） 
  &lt;ul&gt; 
   &lt;li&gt;执行 &lt;code&gt;python db.py&lt;/code&gt; 初始化数据库表结构（只在首次执行）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CSV 文件&lt;/strong&gt;：支持保存到 CSV 中（&lt;code&gt;data/&lt;/code&gt; 目录下）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSON 文件&lt;/strong&gt;：支持保存到 JSON 中（&lt;code&gt;data/&lt;/code&gt; 目录下）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;使用示例：&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# 使用 SQLite（推荐个人用户使用）
uv run main.py --platform xhs --lt qrcode --type search --save_data_option sqlite

# 使用 MySQL
uv run main.py --platform xhs --lt qrcode --type search --save_data_option db
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href="https://github.com/MediaCrawlerPro"&gt;🚀 MediaCrawlerPro 重磅发布 🚀！更多的功能，更好的架构设计！&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🤝 社区与支持&lt;/h2&gt; 
&lt;h3&gt;💬 交流群组&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;微信交流群&lt;/strong&gt;：&lt;a href="https://nanmicoder.github.io/MediaCrawler/%E5%BE%AE%E4%BF%A1%E4%BA%A4%E6%B5%81%E7%BE%A4.html"&gt;点击加入&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📚 文档与教程&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;在线文档&lt;/strong&gt;：&lt;a href="https://nanmicoder.github.io/MediaCrawler/"&gt;MediaCrawler 完整文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;爬虫教程&lt;/strong&gt;：&lt;a href="https://github.com/NanmiCoder/CrawlerTutorial"&gt;CrawlerTutorial 免费教程&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;其他常见问题可以查看在线文档&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;在线文档包含使用方法、常见问题、加入项目交流群等。 &lt;a href="https://nanmicoder.github.io/MediaCrawler/"&gt;MediaCrawler在线文档&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;作者提供的知识服务&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果想快速入门和学习该项目的使用、源码架构设计等、学习编程技术、亦或者想了解MediaCrawlerPro的源代码设计可以看下我的知识付费栏目。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://nanmicoder.github.io/MediaCrawler/%E7%9F%A5%E8%AF%86%E4%BB%98%E8%B4%B9%E4%BB%8B%E7%BB%8D.html"&gt;作者的知识付费栏目介绍&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;⭐ Star 趋势图&lt;/h2&gt; 
&lt;p&gt;如果这个项目对您有帮助，请给个 ⭐ Star 支持一下，让更多的人看到 MediaCrawler！&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#NanmiCoder/MediaCrawler&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=NanmiCoder/MediaCrawler&amp;amp;type=Date" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;💰 赞助商展示&lt;/h3&gt; 
&lt;a href="https://www.swiftproxy.net/?ref=nanmi"&gt; &lt;img src="https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/docs/static/images/img_5.png"&gt; &lt;br&gt; Swiftproxy - 90M+ 全球高质量纯净住宅IP，注册可领免费 500MB 测试流量，动态流量不过期！ &amp;gt; 专属折扣码：**GHB5** 立享九折优惠！ &lt;/a&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;a href="https://www.tkyds.com/?=MediaCrawler"&gt; &lt;img src="https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/docs/static/images/img_6.png"&gt; &lt;br&gt; TK云大师,专业的TikTok矩阵系统,AI赋能自动化,单人轻松管理上万账号！ &lt;/a&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;a href="https://www.thordata.com/?ls=github&amp;amp;lk=Crawler"&gt; &lt;img src="https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/docs/static/images/img_7.png"&gt; &lt;br&gt; Thordata是全球代理IP解决方案提供商，支持大规模采集公共网络数据，提供 195+ 国家城市、6000 万住宅IP，价格低至 $0.65/GB，支持不限流量、不限IP、不限并发；还包括本土独享ISP静态代理和高性能数据中心代理（均为 $0.75/IP，弹性定价）。点击图片注册后联系中文客服即可免费试用，现在首充还有赠送同额金额活动。可与EasySpider工具配合使用，高效采集网络数据。 &lt;/a&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href="https://sider.ai/ad-land-redirect?source=github&amp;amp;p1=mi&amp;amp;p2=kk"&gt;&lt;strong&gt;Sider&lt;/strong&gt; - 全网最火的 ChatGPT 插件，体验拉满！&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;🤝 成为赞助者&lt;/h3&gt; 
&lt;p&gt;成为赞助者，可以将您的产品展示在这里，每天获得大量曝光！&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;联系方式&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;微信：&lt;code&gt;yzglan&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;邮箱：&lt;code&gt;relakkes@gmail.com&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📚 参考&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;小红书客户端&lt;/strong&gt;：&lt;a href="https://github.com/ReaJason/xhs"&gt;ReaJason 的 xhs 仓库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;短信转发&lt;/strong&gt;：&lt;a href="https://github.com/pppscn/SmsForwarder"&gt;SmsForwarder 参考仓库&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;内网穿透工具&lt;/strong&gt;：&lt;a href="https://ngrok.com/docs/"&gt;ngrok 官方文档&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;免责声明&lt;/h1&gt; 
&lt;div id="disclaimer"&gt; 
 &lt;h2&gt;1. 项目目的与性质&lt;/h2&gt; 
 &lt;p&gt;本项目（以下简称“本项目”）是作为一个技术研究与学习工具而创建的，旨在探索和学习网络数据采集技术。本项目专注于自媒体平台的数据爬取技术研究，旨在提供给学习者和研究者作为技术交流之用。&lt;/p&gt; 
 &lt;h2&gt;2. 法律合规性声明&lt;/h2&gt; 
 &lt;p&gt;本项目开发者（以下简称“开发者”）郑重提醒用户在下载、安装和使用本项目时，严格遵守中华人民共和国相关法律法规，包括但不限于《中华人民共和国网络安全法》、《中华人民共和国反间谍法》等所有适用的国家法律和政策。用户应自行承担一切因使用本项目而可能引起的法律责任。&lt;/p&gt; 
 &lt;h2&gt;3. 使用目的限制&lt;/h2&gt; 
 &lt;p&gt;本项目严禁用于任何非法目的或非学习、非研究的商业行为。本项目不得用于任何形式的非法侵入他人计算机系统，不得用于任何侵犯他人知识产权或其他合法权益的行为。用户应保证其使用本项目的目的纯属个人学习和技术研究，不得用于任何形式的非法活动。&lt;/p&gt; 
 &lt;h2&gt;4. 免责声明&lt;/h2&gt; 
 &lt;p&gt;开发者已尽最大努力确保本项目的正当性及安全性，但不对用户使用本项目可能引起的任何形式的直接或间接损失承担责任。包括但不限于由于使用本项目而导致的任何数据丢失、设备损坏、法律诉讼等。&lt;/p&gt; 
 &lt;h2&gt;5. 知识产权声明&lt;/h2&gt; 
 &lt;p&gt;本项目的知识产权归开发者所有。本项目受到著作权法和国际著作权条约以及其他知识产权法律和条约的保护。用户在遵守本声明及相关法律法规的前提下，可以下载和使用本项目。&lt;/p&gt; 
 &lt;h2&gt;6. 最终解释权&lt;/h2&gt; 
 &lt;p&gt;关于本项目的最终解释权归开发者所有。开发者保留随时更改或更新本免责声明的权利，恕不另行通知。&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🙏 致谢&lt;/h2&gt; 
&lt;h3&gt;JetBrains 开源许可证支持&lt;/h3&gt; 
&lt;p&gt;感谢 JetBrains 为本项目提供免费的开源许可证支持！&lt;/p&gt; 
&lt;a href="https://www.jetbrains.com/?from=MediaCrawler"&gt; &lt;img src="https://www.jetbrains.com/company/brand/img/jetbrains_logo.png" width="100" alt="JetBrains"&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>maybe-finance/maybe</title>
      <link>https://github.com/maybe-finance/maybe</link>
      <description>&lt;p&gt;The personal finance app for everyone&lt;/p&gt;&lt;hr&gt;&lt;img width="1190" alt="maybe_hero" src="https://github.com/user-attachments/assets/5ed08763-a9ee-42b2-a436-e05038fcf573"&gt; 
&lt;h1&gt;Maybe: The personal finance app for everyone&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] This repository is no longer actively maintained. You can read more about this in our &lt;a href="https://github.com/maybe-finance/maybe/releases/tag/v0.6.0"&gt;final release&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Maybe Hosting&lt;/h2&gt; 
&lt;p&gt;Maybe is a fully working personal finance app that can be &lt;a href="https://raw.githubusercontent.com/maybe-finance/maybe/main/docs/hosting/docker.md"&gt;self hosted with Docker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Forking and Attribution&lt;/h2&gt; 
&lt;p&gt;This repo is no longer maintained. You’re free to fork it under the AGPLv3. To stay compliant and avoid trademark issues:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Be sure to include the original &lt;a href="https://github.com/maybe-finance/maybe/raw/main/LICENSE"&gt;AGPLv3 license&lt;/a&gt; and clearly state in your README that your fork is based on Maybe Finance but is &lt;strong&gt;not affiliated with or endorsed by&lt;/strong&gt; Maybe Finance Inc.&lt;/li&gt; 
 &lt;li&gt;"Maybe" is a trademark of Maybe Finance Inc. and therefore, use of it is NOT allowed in forked repositories (or the logo)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Local Development Setup&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;If you are trying to &lt;em&gt;self-host&lt;/em&gt; the Maybe app, stop here. You should &lt;a href="https://raw.githubusercontent.com/maybe-finance/maybe/main/docs/hosting/docker.md"&gt;read this guide to get started&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The instructions below are for developers to get started with contributing to the app.&lt;/p&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;See &lt;code&gt;.ruby-version&lt;/code&gt; file for required Ruby version&lt;/li&gt; 
 &lt;li&gt;PostgreSQL &amp;gt;9.3 (ideally, latest stable version)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;After cloning the repo, the basic setup commands are:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cd maybe
cp .env.local.example .env.local
bin/setup
bin/dev

# Optionally, load demo data
rake demo_data:default
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And visit &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; to see the app. You can use the following credentials to log in (generated by DB seed):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Email: &lt;code&gt;user@maybe.local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Password: &lt;code&gt;password&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For further instructions, see guides below.&lt;/p&gt; 
&lt;h3&gt;Setup Guides&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maybe-finance/maybe/wiki/Mac-Dev-Setup-Guide"&gt;Mac dev setup guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maybe-finance/maybe/wiki/Linux-Dev-Setup-Guide"&gt;Linux dev setup guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maybe-finance/maybe/wiki/Windows-Dev-Setup-Guide"&gt;Windows dev setup guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dev containers - visit &lt;a href="https://code.visualstudio.com/docs/devcontainers/containers"&gt;this guide&lt;/a&gt; to learn more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Copyright &amp;amp; license&lt;/h2&gt; 
&lt;p&gt;Maybe is distributed under an &lt;a href="https://github.com/maybe-finance/maybe/raw/main/LICENSE"&gt;AGPLv3 license&lt;/a&gt;. " Maybe" is a trademark of Maybe Finance, Inc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenBB-finance/OpenBB</title>
      <link>https://github.com/OpenBB-finance/OpenBB</link>
      <description>&lt;p&gt;Investment Research for Everyone, Everywhere.&lt;/p&gt;&lt;hr&gt;&lt;br&gt; 
&lt;img src="https://github.com/OpenBB-finance/OpenBB/raw/develop/images/platform-light.svg?raw=true#gh-light-mode-only" alt="OpenBB Platform logo" width="600"&gt; 
&lt;img src="https://github.com/OpenBB-finance/OpenBB/raw/develop/images/platform-dark.svg?raw=true#gh-dark-mode-only" alt="OpenBB Platform logo" width="600"&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href="https://x.com/openbb_finance"&gt;&lt;img src="https://img.shields.io/twitter/url/https/twitter.com/openbb_finance.svg?style=social&amp;amp;label=Follow%20%40openbb_finance" alt="Twitter"&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/xPHTuHCmuV"&gt;&lt;img src="https://img.shields.io/discord/831165782750789672" alt="Discord Shield"&gt;&lt;/a&gt; &lt;a href="https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/OpenBB-finance/OpenBB"&gt;&lt;img src="https://img.shields.io/static/v1?label=Dev%20Containers&amp;amp;message=Open&amp;amp;color=blue&amp;amp;logo=visualstudiocode" alt="Open in Dev Containers"&gt;&lt;/a&gt; &lt;a href="https://codespaces.new/OpenBB-finance/OpenBB"&gt; &lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" height="20"&gt; &lt;/a&gt; &lt;a target="_blank" href="https://colab.research.google.com/github/OpenBB-finance/OpenBB/blob/develop/examples/googleColab.ipynb"&gt; &lt;img src="https://colab.research.google.com/assets/colab-badge.svg?sanitize=true" alt="Open In Colab"&gt; &lt;/a&gt; &lt;a href="https://pypi.org/project/openbb/"&gt;&lt;img src="https://img.shields.io/pypi/v/openbb?color=blue&amp;amp;label=PyPI%20Package" alt="PyPI"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The first financial Platform that is open source.&lt;/p&gt; 
&lt;p&gt;The OpenBB Platform offers access to equity, options, crypto, forex, macro economy, fixed income, and more while also offering a broad range of extensions to enhance the user experience according to their needs.&lt;/p&gt; 
&lt;p&gt;Get started with: &lt;code&gt;pip install openbb&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from openbb import obb
output = obb.equity.price.historical("AAPL")
df = output.to_dataframe()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can sign up to the &lt;a href="https://my.openbb.co/login"&gt;OpenBB Hub&lt;/a&gt; to get the most out of the OpenBB ecosystem.&lt;/p&gt; 
&lt;p&gt;Data integrations available can be found here: &lt;a href="https://docs.openbb.co/platform/reference"&gt;https://docs.openbb.co/platform/reference&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;OpenBB Workspace&lt;/h2&gt; 
&lt;p&gt;While the OpenBB Platform is all about an integration to dozens of different data vendors, the interface is either Python or a CLI.&lt;/p&gt; 
&lt;p&gt;If you want an enterprise UI to visualize this datasets and use AI agents on top, you can find OpenBB Workspace at &lt;a href="https://pro.openbb.co"&gt;https://pro.openbb.co&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://pro.openbb.co"&gt; 
 &lt;div align="center"&gt; 
  &lt;img src="https://openbb-cms.directus.app/assets/f69b6aaf-0821-4bc8-a43c-715e03a924ef.png" alt="Logo" width="1000"&gt; 
 &lt;/div&gt; &lt;/a&gt; 
&lt;p&gt;Data integration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can learn more about adding data to the OpenBB workspace from the &lt;a href="https://docs.openbb.co/workspace"&gt;docs&lt;/a&gt; or &lt;a href="https://github.com/OpenBB-finance/backends-for-openbb"&gt;this open source repository&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;AI Agents integration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can learn more about adding AI agents to the OpenBB workspace from &lt;a href="https://github.com/OpenBB-finance/agents-for-openbb"&gt;this open source repository&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Integrating OpenBB Platform to the OpenBB Workspace&lt;/h3&gt; 
&lt;p&gt;Connect this library to the OpenBB Workspace with a few simple commands, in a Python (3.9.21 - 3.12) environment.&lt;/p&gt; 
&lt;h4&gt;Run OpenBB Platform backend&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install the packages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pip install "openbb[all]"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Start the API server over localhost.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;openbb-api
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will launch a FastAPI server, via Uvicorn, at &lt;code&gt;127.0.0.1:6900&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can check that it works by going to &lt;a href="http://127.0.0.1:6900"&gt;http://127.0.0.1:6900&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Integrate OpenBB Platform backend to OpenBB Workspace&lt;/h4&gt; 
&lt;p&gt;Sign-in to the &lt;a href="https://pro.openbb.co/"&gt;OpenBB Workspace&lt;/a&gt;, and follow the following steps:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/75cffb4a-5e95-470a-b9d0-6ffd4067e069" alt="CleanShot 2025-05-17 at 09 51 56@2x"&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the "Apps" tab&lt;/li&gt; 
 &lt;li&gt;Click on "Connect backend"&lt;/li&gt; 
 &lt;li&gt;Fill in the form with: Name: OpenBB Platform URL: &lt;a href="http://127.0.0.1:6900"&gt;http://127.0.0.1:6900&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Click on "Test". You should get a "Test successful" with the number of apps found.&lt;/li&gt; 
 &lt;li&gt;Click on "Add".&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;That's it.&lt;/p&gt; 
&lt;hr&gt; 
&lt;!-- TABLE OF CONTENTS --&gt; 
&lt;details closed="closed"&gt; 
 &lt;summary&gt;&lt;h2 style="display: inline-block"&gt;Table of Contents&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/OpenBB-finance/OpenBB/develop/#1-installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/OpenBB-finance/OpenBB/develop/#2-contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/OpenBB-finance/OpenBB/develop/#3-license"&gt;License&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/OpenBB-finance/OpenBB/develop/#4-disclaimer"&gt;Disclaimer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/OpenBB-finance/OpenBB/develop/#5-contacts"&gt;Contacts&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/OpenBB-finance/OpenBB/develop/#6-star-history"&gt;Star History&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/OpenBB-finance/OpenBB/develop/#7-contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;1. Installation&lt;/h2&gt; 
&lt;p&gt;The OpenBB Platform can be installed as a &lt;a href="https://pypi.org/project/openbb/"&gt;PyPI package&lt;/a&gt; by running &lt;code&gt;pip install openbb&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;or by cloning the repository directly with &lt;code&gt;git clone https://github.com/OpenBB-finance/OpenBB.git&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Please find more about the installation process, in the &lt;a href="https://docs.openbb.co/platform/installation"&gt;OpenBB Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;OpenBB Platform CLI installation&lt;/h3&gt; 
&lt;p&gt;The OpenBB Platform CLI is a command-line interface that allows you to access the OpenBB Platform directly from your command line.&lt;/p&gt; 
&lt;p&gt;It can be installed by running &lt;code&gt;pip install openbb-cli&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;or by cloning the repository directly with &lt;code&gt;git clone https://github.com/OpenBB-finance/OpenBB.git&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Please find more about the installation process in the &lt;a href="https://docs.openbb.co/cli/installation"&gt;OpenBB Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;2. Contributing&lt;/h2&gt; 
&lt;p&gt;There are three main ways of contributing to this project. (Hopefully you have starred the project by now ⭐️)&lt;/p&gt; 
&lt;h3&gt;Become a Contributor&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;More information on our &lt;a href="https://docs.openbb.co/platform/developer_guide/misc/contributing"&gt;Contributing Documentation&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Create a GitHub ticket&lt;/h3&gt; 
&lt;p&gt;Before creating a ticket make sure the one you are creating doesn't exist already &lt;a href="https://github.com/OpenBB-finance/OpenBB/issues"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OpenBB-finance/OpenBB/issues/new?assignees=&amp;amp;labels=bug&amp;amp;template=bug_report.md&amp;amp;title=%5BBug%5D"&gt;Report bug&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OpenBB-finance/OpenBB/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;template=enhancement.md&amp;amp;title=%5BIMPROVE%5D"&gt;Suggest improvement&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OpenBB-finance/OpenBB/issues/new?assignees=&amp;amp;labels=new+feature&amp;amp;template=feature_request.md&amp;amp;title=%5BFR%5D"&gt;Request a feature&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Provide feedback&lt;/h3&gt; 
&lt;p&gt;We are most active on &lt;a href="https://openbb.co/discord"&gt;our Discord&lt;/a&gt;, but feel free to reach out to us in any of &lt;a href="https://openbb.co/links"&gt;our social media&lt;/a&gt; for feedback.&lt;/p&gt; 
&lt;h2&gt;3. License&lt;/h2&gt; 
&lt;p&gt;Distributed under the AGPLv3 License. See &lt;a href="https://github.com/OpenBB-finance/OpenBB/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;4. Disclaimer&lt;/h2&gt; 
&lt;p&gt;Trading in financial instruments involves high risks including the risk of losing some, or all, of your investment amount, and may not be suitable for all investors.&lt;/p&gt; 
&lt;p&gt;Before deciding to trade in a financial instrument you should be fully informed of the risks and costs associated with trading the financial markets, carefully consider your investment objectives, level of experience, and risk appetite, and seek professional advice where needed.&lt;/p&gt; 
&lt;p&gt;The data contained in the OpenBB Platform is not necessarily accurate.&lt;/p&gt; 
&lt;p&gt;OpenBB and any provider of the data contained in this website will not accept liability for any loss or damage as a result of your trading, or your reliance on the information displayed.&lt;/p&gt; 
&lt;p&gt;All names, logos, and brands of third parties that may be referenced in our sites, products or documentation are trademarks of their respective owners. Unless otherwise specified, OpenBB and its products and services are not endorsed by, sponsored by, or affiliated with these third parties.&lt;/p&gt; 
&lt;p&gt;Our use of these names, logos, and brands is for identification purposes only, and does not imply any such endorsement, sponsorship, or affiliation.&lt;/p&gt; 
&lt;h2&gt;5. Contacts&lt;/h2&gt; 
&lt;p&gt;If you have any questions about the platform or anything OpenBB, feel free to email us at &lt;code&gt;support@openbb.co&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If you want to say hi, or are interested in partnering with us, feel free to reach us at &lt;code&gt;hello@openbb.co&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Any of our social media platforms: &lt;a href="https://openbb.co/links"&gt;openbb.co/links&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;6. Star History&lt;/h2&gt; 
&lt;p&gt;This is a proxy of our growth and that we are just getting started.&lt;/p&gt; 
&lt;p&gt;But for more metrics important to us check &lt;a href="https://openbb.co/open"&gt;openbb.co/open&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://api.star-history.com/svg?repos=openbb-finance/OpenBB&amp;amp;type=Date&amp;amp;theme=dark"&gt;&lt;img src="https://api.star-history.com/svg?repos=openbb-finance/OpenBB&amp;amp;type=Date&amp;amp;theme=dark" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;7. Contributors&lt;/h2&gt; 
&lt;p&gt;OpenBB wouldn't be OpenBB without you. If we are going to disrupt financial industry, every contribution counts. Thank you for being part of this journey.&lt;/p&gt; 
&lt;a href="https://github.com/OpenBB-finance/OpenBB/graphs/contributors"&gt; &lt;img src="https://contributors-img.web.app/image?repo=OpenBB-finance/OpenBB" width="800"&gt; &lt;/a&gt; 
&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt; 
&lt;!-- https://www.markdownguide.org/basic-syntax/#reference-style-links --&gt;</description>
    </item>
    
    <item>
      <title>google-gemini/gemini-cli</title>
      <link>https://github.com/google-gemini/gemini-cli</link>
      <description>&lt;p&gt;An open-source AI agent that brings the power of Gemini directly into your terminal.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gemini CLI&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Gemini CLI CI"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/assets/gemini-screenshot.png" alt="Gemini CLI Screenshot"&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains the Gemini CLI, a command-line AI workflow tool that connects to your tools, understands your code and accelerates your workflows.&lt;/p&gt; 
&lt;p&gt;With the Gemini CLI you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Query and edit large codebases in and beyond Gemini's 1M token context window.&lt;/li&gt; 
 &lt;li&gt;Generate new apps from PDFs or sketches, using Gemini's multimodal capabilities.&lt;/li&gt; 
 &lt;li&gt;Automate operational tasks, like querying pull requests or handling complex rebases.&lt;/li&gt; 
 &lt;li&gt;Use tools and MCP servers to connect new capabilities, including &lt;a href="https://github.com/GoogleCloudPlatform/vertex-ai-creative-studio/tree/main/experiments/mcp-genmedia"&gt;media generation with Imagen, Veo or Lyria&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Ground your queries with the &lt;a href="https://ai.google.dev/gemini-api/docs/grounding"&gt;Google Search&lt;/a&gt; tool, built into Gemini.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;You have two options to install Gemini CLI.&lt;/p&gt; 
&lt;h3&gt;With Node&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; Ensure you have &lt;a href="https://nodejs.org/en/download"&gt;Node.js version 20&lt;/a&gt; or higher installed.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the CLI:&lt;/strong&gt; Execute the following command in your terminal:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npx https://github.com/google-gemini/gemini-cli
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Or install it with:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then, run the CLI from anywhere:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;gemini
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;With Homebrew&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; Ensure you have &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt; installed.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install the CLI&lt;/strong&gt; Execute the following command in your terminal:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;brew install gemini-cli
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then, run the CLI from anywhere:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;gemini
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Common Configuration steps&lt;/h3&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;strong&gt;Pick a color theme&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Authenticate:&lt;/strong&gt; When prompted, sign in with your personal Google account. This will grant you up to 60 model requests per minute and 1,000 model requests per day using Gemini.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You are now ready to use the Gemini CLI!&lt;/p&gt; 
&lt;h3&gt;Use a Gemini API key:&lt;/h3&gt; 
&lt;p&gt;The Gemini API provides a free tier with &lt;a href="https://ai.google.dev/gemini-api/docs/rate-limits#free-tier"&gt;100 requests per day&lt;/a&gt; using Gemini 2.5 Pro, control over which model you use, and access to higher rate limits (with a paid plan):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Generate a key from &lt;a href="https://aistudio.google.com/apikey"&gt;Google AI Studio&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set it as an environment variable in your terminal. Replace &lt;code&gt;YOUR_API_KEY&lt;/code&gt; with your generated key.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;export GEMINI_API_KEY="YOUR_API_KEY"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;(Optionally) Upgrade your Gemini API project to a paid plan on the API key page (will automatically unlock &lt;a href="https://ai.google.dev/gemini-api/docs/rate-limits#tier-1"&gt;Tier 1 rate limits&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Use a Vertex AI API key:&lt;/h3&gt; 
&lt;p&gt;The Vertex AI API provides a &lt;a href="https://cloud.google.com/vertex-ai/generative-ai/docs/start/express-mode/overview"&gt;free tier&lt;/a&gt; using express mode for Gemini 2.5 Pro, control over which model you use, and access to higher rate limits with a billing account:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Generate a key from &lt;a href="https://cloud.google.com/vertex-ai/generative-ai/docs/start/api-keys"&gt;Google Cloud&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set it as an environment variable in your terminal. Replace &lt;code&gt;YOUR_API_KEY&lt;/code&gt; with your generated key and set GOOGLE_GENAI_USE_VERTEXAI to true&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;export GOOGLE_API_KEY="YOUR_API_KEY"
export GOOGLE_GENAI_USE_VERTEXAI=true
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;(Optionally) Add a billing account on your project to get access to &lt;a href="https://cloud.google.com/vertex-ai/generative-ai/docs/quotas"&gt;higher usage limits&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For other authentication methods, including Google Workspace accounts, see the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/authentication.md"&gt;authentication&lt;/a&gt; guide.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Once the CLI is running, you can start interacting with Gemini from your shell.&lt;/p&gt; 
&lt;p&gt;You can start a project from a new directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cd new-project/
gemini
&amp;gt; Write me a Gemini Discord bot that answers questions using a FAQ.md file I will provide
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or work with an existing project:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/google-gemini/gemini-cli
cd gemini-cli
gemini
&amp;gt; Give me a summary of all of the changes that went in yesterday
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Next steps&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Learn how to &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/CONTRIBUTING.md"&gt;contribute to or build from the source&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Explore the available &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/commands.md"&gt;CLI Commands&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;If you encounter any issues, review the &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/troubleshooting.md"&gt;troubleshooting guide&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;For more comprehensive documentation, see the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/index.md"&gt;full documentation&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Take a look at some &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/#popular-tasks"&gt;popular tasks&lt;/a&gt; for more inspiration.&lt;/li&gt; 
 &lt;li&gt;Check out our &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/ROADMAP.md"&gt;Official Roadmap&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;Head over to the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/troubleshooting.md"&gt;troubleshooting guide&lt;/a&gt; if you're having issues.&lt;/p&gt; 
&lt;h2&gt;Popular tasks&lt;/h2&gt; 
&lt;h3&gt;Explore a new codebase&lt;/h3&gt; 
&lt;p&gt;Start by &lt;code&gt;cd&lt;/code&gt;ing into an existing or newly-cloned repository and running &lt;code&gt;gemini&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; Describe the main pieces of this system's architecture.
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; What security mechanisms are in place?
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Work with your existing code&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; Implement a first draft for GitHub issue #123.
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; Help me migrate this codebase to the latest version of Java. Start with a plan.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Automate your workflows&lt;/h3&gt; 
&lt;p&gt;Use MCP servers to integrate your local system tools with your enterprise collaboration suite.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; Make me a slide deck showing the git history from the last 7 days, grouped by feature and team member.
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; Make a full-screen web app for a wall display to show our most interacted-with GitHub issues.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Interact with your system&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; Convert all the images in this directory to png, and rename them to use dates from the exif data.
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; Organize my PDF invoices by month of expenditure.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Uninstall&lt;/h3&gt; 
&lt;p&gt;Head over to the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/Uninstall.md"&gt;Uninstall&lt;/a&gt; guide for uninstallation instructions.&lt;/p&gt; 
&lt;h2&gt;Terms of Service and Privacy Notice&lt;/h2&gt; 
&lt;p&gt;For details on the terms of service and privacy notice applicable to your use of Gemini CLI, see the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tos-privacy.md"&gt;Terms of Service and Privacy Notice&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Alibaba-NLP/WebAgent</title>
      <link>https://github.com/Alibaba-NLP/WebAgent</link>
      <description>&lt;p&gt;🌐 WebAgent for Information Seeking built by Tongyi Lab: WebWalker &amp; WebDancer &amp; WebSailor &amp; WebShaper https://arxiv.org/abs/2507.15061 https://arxiv.org/pdf/2507.02592&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h2&gt;WebAgent for Information Seeking built by Tongyi Lab, Alibaba Group &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/tongyi.png" width="30px" style="display:inline;"&gt;&lt;/h2&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/14217" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/14217" alt="Alibaba-NLP%2FWebAgent | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; 🤗 &lt;a href="https://huggingface.co/datasets/Alibaba-NLP/WebShaper" target="_blank"&gt;WebShaperQA&lt;/a&gt; ｜ &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/tongyi.png" width="14px" style="display:inline;"&gt; &lt;a href="https://modelscope.cn/datasets/iic/WebShaper" target="_blank"&gt;WebShaperQA&lt;/a&gt; ｜ 🤗 &lt;a href="https://huggingface.co/Alibaba-NLP/WebSailor-3B" target="_blank"&gt;WebSailor-3B&lt;/a&gt; ｜ &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/tongyi.png" width="14px" style="display:inline;"&gt; &lt;a href="https://modelscope.cn/models/iic/WebSailor-3B" target="_blank"&gt;ModelScope WebSailor-3B&lt;/a&gt; | &lt;/p&gt; 
&lt;p align="center"&gt; 🤗 &lt;a href="https://huggingface.co/Alibaba-NLP/WebDancer-32B" target="_blank"&gt;WebDancer-QwQ-32B&lt;/a&gt; | &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/tongyi.png" width="14px" style="display:inline;"&gt; &lt;a href="https://modelscope.cn/models/iic/WebDancer-32B" target="_blank"&gt;ModelScope WebDancer-QwQ-32B&lt;/a&gt; | 🤗 &lt;a href="https://huggingface.co/datasets/callanwu/WebWalkerQA" target="_blank"&gt;WebWalkerQA&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/roadmap.png" width="100%" height="400%"&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You can check the paper of &lt;a href="https://arxiv.org/pdf/2505.22648"&gt;WebDancer&lt;/a&gt; and &lt;a href="https://arxiv.org/pdf/2501.07572"&gt;WebWalker&lt;/a&gt; and &lt;a href="https://arxiv.org/pdf/2507.02592"&gt;WebSailor&lt;/a&gt; and &lt;a href="https://arxiv.org/pdf/2507.15061"&gt;WebShaper&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💥 💥 💥 Stay tuned for more updates! We are working on building native agentic model based on the Browser and more open-domain environments!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/WebShaper"&gt;&lt;strong&gt;WebShaper&lt;/strong&gt;&lt;/a&gt; (Preprint 2025) - WebShaper: Agentically Data Synthesizing via Information-Seeking Formalization&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/WebSailor"&gt;&lt;strong&gt;WebSailor&lt;/strong&gt;&lt;/a&gt; (Preprint 2025) - WebSailor: Navigating Super-human Reasoning for Web Agent&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/WebDancer"&gt;&lt;strong&gt;WebDancer&lt;/strong&gt;&lt;/a&gt; (Preprint 2025) - WebDancer: Towards Autonomous Information Seeking Agency&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/WebWalker"&gt;&lt;strong&gt;WebWalker&lt;/strong&gt;&lt;/a&gt; (ACL 2025) - WebWalker: Benchmarking LLMs in Web Traversal&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📰 News and Updates&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;2025.07.22&lt;/code&gt; 🔥🔥🔥We release &lt;strong&gt;WebShaper&lt;/strong&gt;: Agentically Data Synthesizing via Information-Seeking Formalization.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025.07.11&lt;/code&gt; 🔥🔥🔥&lt;strong&gt;WebSailor-3B&lt;/strong&gt; is &lt;a href="https://huggingface.co/Alibaba-NLP/WebSailor-3B"&gt;released&lt;/a&gt;. You can deploy it with one click using &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/aliyun.png" width="14px" style="display:inline;"&gt; &lt;a href="https://functionai.console.aliyun.com/template-detail?template=Alibaba-NLP-WebSailor-3B"&gt;Alibaba Cloud's FunctionAI&lt;/a&gt; in ten minutes!&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025.07.03&lt;/code&gt; 🔥🔥🔥We release &lt;strong&gt;WebSailor&lt;/strong&gt;, an agentic search model specialized in performing extremely complex information seeking tasks, achieving open-source SOTA on some of the most difficult browsing benchmarks. &lt;strong&gt;WebSailor&lt;/strong&gt; topped the HuggingFace &lt;a href="https://huggingface.co/papers/2507.02592"&gt;daily papers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025.06.23&lt;/code&gt; 🔥🔥🔥The model, interactive demo, and some of the data of &lt;strong&gt;WebDancer&lt;/strong&gt; have been open-sourced. You're welcome to try them out!&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025.05.29&lt;/code&gt; 🔥🔥🔥We release &lt;strong&gt;WebDancer&lt;/strong&gt;, a native agentic search model towards autonomous information seeking agency and &lt;em&gt;Deep Research&lt;/em&gt;-like model.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025.05.15&lt;/code&gt; &lt;strong&gt;WebWalker&lt;/strong&gt; is accepted by ACL 2025 main conference.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025.01.14&lt;/code&gt; We release &lt;strong&gt;WebWalker&lt;/strong&gt;, a benchmark for LLMs in web traversal and a multi-agent framework for information seeking.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💎 Results Showcase&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/webagent-gaia.png" width="800%" height="400%"&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/webagent-bc.png" width="800%" height="400%"&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;💡 Features for WebShaper&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;strong&gt;&lt;code&gt;formalization-driven&lt;/code&gt;&lt;/strong&gt; data synthesis method for information-seeking agents, grounded in our proposed task formalization. Leveraging this method, we construct the &lt;strong&gt;WebShaper&lt;/strong&gt; dataset, which enables systematic generation of IS instances.&lt;/li&gt; 
 &lt;li&gt;We propose an agentic Expander that iteratively generates and validates questions in alignment with the formalization.&lt;/li&gt; 
 &lt;li&gt;We conduct extensive experiments across multiple benchmarks to evaluate the effectiveness of WebShaper. We achieve new state-of-the-art results on &lt;strong&gt;GAIA&lt;/strong&gt; (&lt;strong&gt;60.19&lt;/strong&gt;) and &lt;strong&gt;WebWalkerQA&lt;/strong&gt; (&lt;strong&gt;52.50&lt;/strong&gt;) benchmarks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⛵️ Features for WebSailor&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A complete post-training methodology enabling models to engage in extended thinking and information seeking, ultimately allowing them to successfully complete extremely complex tasks previously considered unsolvable.&lt;/li&gt; 
 &lt;li&gt;Introduces &lt;strong&gt;SailorFog-QA&lt;/strong&gt;, a scalable QA benchmark with high uncertainty and difficulty, curated with a novel data synthesis method through graph sampling and information obfuscation. Example SailorFog-QA data samples can be found at: &lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/WebSailor/dataset/sailorfog-QA.jsonl"&gt;&lt;code&gt;WebSailor/dataset/sailorfog-QA.jsonl&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Effective post-training pipeline consisting of (1) high-quality reconstruction of concise reasoning from expert trajectories for clean supervision, (2) a two-stage training process involving an RFT cold start stage, followed by &lt;strong&gt;Duplicating Sampling Policy Optimization (DUPO)&lt;/strong&gt;, an efficient agentic RL algorithm excelling in effectiveness and efficiency.&lt;/li&gt; 
 &lt;li&gt;WebSailor-72B significantly outperforms all open-source agents and frameworks while closing the performance gap with leading proprietary systems, achieving a score of &lt;strong&gt;12.0%&lt;/strong&gt; on BrowseComp-en, &lt;strong&gt;30.1%&lt;/strong&gt; on BrowseComp-zh, and &lt;strong&gt;55.4%&lt;/strong&gt; on GAIA.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The checkpoint is coming soon.&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🌐 Features for WebDancer&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Native agentic search reasoning model using ReAct framework towards autonomous information seeking agency and &lt;em&gt;Deep Research&lt;/em&gt;-like model.&lt;/li&gt; 
 &lt;li&gt;We introduce a four-stage training paradigm comprising &lt;strong&gt;browsing data construction, trajectory sampling, supervised fine-tuning for effective cold start, and reinforcement learning for improved generalization&lt;/strong&gt;, enabling the agent to autonomously acquire autonomous search and reasoning skills.&lt;/li&gt; 
 &lt;li&gt;Our data-centric approach integrates trajectory-level supervision fine-tuning and reinforcement learning (DAPO) to develop a scalable pipeline for &lt;strong&gt;training agentic systems&lt;/strong&gt; via SFT or RL.&lt;/li&gt; 
 &lt;li&gt;WebDancer achieves a Pass@3 score of 64.1% on GAIA and 62.0% on WebWalkerQA.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;p&gt;You need to enter the &lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/WebDancer"&gt;&lt;code&gt;WebDancer&lt;/code&gt;&lt;/a&gt; folder for the following commands.&lt;/p&gt; 
&lt;h3&gt;Step 0: Set Up the Environment&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;conda create -n webdancer python=3.12
pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Step 1: Deploy the Model&lt;/h3&gt; 
&lt;p&gt;Download the WebDancer model from &lt;a href="https://huggingface.co/Alibaba-NLP/WebDancer-32B"&gt;🤗 HuggingFace&lt;/a&gt; and deploy it using the provided scripts with &lt;a href="https://github.com/sgl-project/sglang"&gt;sglang&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd scripts
bash deploy_model.sh WebDancer_PATH
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Replace &lt;code&gt;WebDancer_PATH&lt;/code&gt; with the actual path to the downloaded model.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Step 2: Run the Demo&lt;/h3&gt; 
&lt;p&gt;Edit the following keys in &lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/WebDancer/scripts/run_demo.sh"&gt;&lt;code&gt;WebDancer/scripts/run_demo.sh&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GOOGLE_SEARCH_KEY&lt;/code&gt;, you can get it from &lt;a href="https://serper.dev/"&gt;serper&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;JINA_API_KEY&lt;/code&gt;, you can get it from &lt;a href="https://jina.ai/api-dashboard/"&gt;jina&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DASHSCOPE_API_KEY&lt;/code&gt;, you can get it from &lt;a href="https://dashscope.aliyun.com/"&gt;dashscope&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then, launch the demo with Gradio to interact with the WebDancer model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd scripts
bash run_demo.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🎥 WebSailor Demos&lt;/h2&gt; 
&lt;p&gt;We provide demos for BrowseComp-en, BrowseComp-zh and Daily Use. Our model can complete highly difficult and uncertain tasks requiring massive information acquisition and complex reasoning.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;BrowseComp-en&lt;/h3&gt; 
 &lt;video src="https://github.com/user-attachments/assets/2dc0b03a-c241-4f70-bf11-92fda28020fa"&gt;&lt;/video&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;BrowseComp-zh&lt;/h3&gt; 
 &lt;video src="https://github.com/user-attachments/assets/f9aed746-ffc8-4b76-b135-715ec0eab544"&gt;&lt;/video&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;Daily Use&lt;/h3&gt; 
 &lt;video src="https://github.com/user-attachments/assets/1299c5a8-cee3-4a70-b68b-c5d227cf8055"&gt;&lt;/video&gt; 
&lt;/div&gt; 
&lt;h2&gt;🎥 WebDancer Demos&lt;/h2&gt; 
&lt;p&gt;We provide demos for WebWalkerQA, GAIA and Daily Use. Our model can execute the long-horizon tasks with &lt;strong&gt;multiple steps&lt;/strong&gt; and &lt;strong&gt;complex reasoning&lt;/strong&gt;, such as web traversal, information seeking and question answering.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;WebWalkerQA&lt;/h3&gt; 
 &lt;video src="https://github.com/user-attachments/assets/0bbaf55b-897e-4c57-967d-a6e8bbd2167e"&gt;&lt;/video&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;GAIA&lt;/h3&gt; 
 &lt;video src="https://github.com/user-attachments/assets/935c668e-6169-4712-9c04-ac80f0531872"&gt;&lt;/video&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;Daily Use&lt;/h3&gt; 
 &lt;video src="https://github.com/user-attachments/assets/d1d5b533-4009-478b-bd87-96b86389327d"&gt;&lt;/video&gt; 
&lt;/div&gt; 
&lt;h2&gt;📃 License&lt;/h2&gt; 
&lt;p&gt;The content of this project itself is licensed under &lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/LICENSE"&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🚩 Citation&lt;/h2&gt; 
&lt;p&gt;If this work is helpful, please kindly cite as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bigquery"&gt;@misc{tao2025webshaper,
      title={WebShaper: Agentically Data Synthesizing via Information-Seeking Formalization},
      author={Zhengwei Tao and Jialong Wu and Wenbiao Yin and Junkai Zhang and Baixuan Li and Haiyang Shen and Kuan Li and Liwen Zhang and Xinyu Wang and Yong Jiang and Pengjun Xie and Fei Huang and Jingren Zhou},
      year={2025},
      eprint={2507.15061},
      archivePrefix={arXiv},
      primaryClass={cs.CL},
      url={https://arxiv.org/abs/2507.15061},
}
@misc{li2025websailor,
      title={WebSailor: Navigating Super-human Reasoning for Web Agent},
      author={Kuan Li and Zhongwang Zhang and Huifeng Yin and Liwen Zhang and Litu Ou and Jialong Wu and Wenbiao Yin and Baixuan Li and Zhengwei Tao and Xinyu Wang and Weizhou Shen and Junkai Zhang and Dingchu Zhang and Xixi Wu and Yong Jiang and Ming Yan and Pengjun Xie and Fei Huang and Jingren Zhou},
      year={2025},
      eprint={2507.02592},
      archivePrefix={arXiv},
      primaryClass={cs.CL},
      url={https://arxiv.org/abs/2507.02592},
}
@misc{wu2025webdancer,
      title={WebDancer: Towards Autonomous Information Seeking Agency},
      author={Jialong Wu and Baixuan Li and Runnan Fang and Wenbiao Yin and Liwen Zhang and Zhengwei Tao and Dingchu Zhang and Zekun Xi and Yong Jiang and Pengjun Xie and Fei Huang and Jingren Zhou},
      year={2025},
      eprint={2505.22648},
      archivePrefix={arXiv},
      primaryClass={cs.CL},
      url={https://arxiv.org/abs/2505.22648},
}
@misc{wu2025webwalker,
      title={WebWalker: Benchmarking LLMs in Web Traversal},
      author={Jialong Wu and Wenbiao Yin and Yong Jiang and Zhenglin Wang and Zekun Xi and Runnan Fang and Deyu Zhou and Pengjun Xie and Fei Huang},
      year={2025},
      eprint={2501.07572},
      archivePrefix={arXiv},
      primaryClass={cs.CL},
      url={https://arxiv.org/abs/2501.07572},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🌟 Misc&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://www.star-history.com/#Alibaba-NLP/WebAgent&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=Alibaba-NLP/WebAgent&amp;amp;type=Date" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🚩 Talent Recruitment&lt;/h2&gt; 
&lt;p&gt;🔥🔥🔥 We are hiring! Research intern positions are open (based in Hangzhou、Beijing、Shanghai)&lt;/p&gt; 
&lt;p&gt;📚 &lt;strong&gt;Research Area&lt;/strong&gt;：Web Agent, Search Agent, Agent RL, MultiAgent RL, Agentic RAG&lt;/p&gt; 
&lt;p&gt;☎️ &lt;strong&gt;Contact&lt;/strong&gt;：&lt;a href=""&gt;yongjiang.jy@alibaba-inc.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contact Information&lt;/h2&gt; 
&lt;p&gt;For communications, please contact Yong Jiang (&lt;a href="mailto:yongjiang.jy@alibaba-inc.com"&gt;yongjiang.jy@alibaba-inc.com&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GraphiteEditor/Graphite</title>
      <link>https://github.com/GraphiteEditor/Graphite</link>
      <description>&lt;p&gt;An open source graphics editor for 2025: comprehensive 2D content creation tool suite for graphic design, digital art, and interactive real-time motion graphics — featuring node-based procedural editing&lt;/p&gt;&lt;hr&gt;&lt;a href="https://graphite.rs/"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/user-attachments/assets/9366c148-4405-484f-909a-9a3526eb9209"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/user-attachments/assets/791508ab-bcd5-4e31-a3b9-1187cfd7a2f6"&gt; 
  &lt;img alt="Graphite logo" src="https://github.com/user-attachments/assets/791508ab-bcd5-4e31-a3b9-1187cfd7a2f6"&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h1&gt;Your procedural toolbox for 2D content creation&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Graphite is a free, open source vector and raster graphics engine, &lt;a href="https://editor.graphite.rs"&gt;available now&lt;/a&gt; in alpha. Get creative with a fully nondestructive editing workflow that combines layer-based compositing with node-based generative design.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Having begun life as a vector editor, Graphite continues evolving into a generalized, all-in-one graphics toolbox that's built more like a game engine than a conventional creative app. The editor's tools wrap its node graph core, providing user-friendly workflows for vector, raster, and beyond. Photo editing, motion graphics, digital painting, desktop publishing, and VFX compositing are additional competencies on the planned &lt;a href="https://graphite.rs/features/#roadmap"&gt;roadmap&lt;/a&gt; making Graphite into a highly versatile content creation tool.&lt;/p&gt; 
&lt;p&gt;Learn more from the &lt;a href="https://graphite.rs/"&gt;website&lt;/a&gt;, subscribe to the &lt;a href="https://graphite.rs/#newsletter"&gt;newsletter&lt;/a&gt;, consider &lt;a href="https://graphite.rs/volunteer/"&gt;volunteering&lt;/a&gt; or &lt;a href="https://graphite.rs/donate/"&gt;donating&lt;/a&gt;, and remember to give this repository a ⭐!&lt;/p&gt; 
&lt;br&gt; 
&lt;a href="https://discord.graphite.rs/"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/user-attachments/assets/ad185fac-3b48-446d-863c-2bcb0724abee"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/user-attachments/assets/aa23f503-f3bf-444a-9080-8eaa19fa2fa8"&gt; 
  &lt;img alt="Discord" src="https://github.com/user-attachments/assets/aa23f503-f3bf-444a-9080-8eaa19fa2fa8" width="48" height="48"&gt; 
 &lt;/picture&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
&lt;a href="https://www.reddit.com/r/graphite/"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/user-attachments/assets/d8c05686-2eb9-4ac1-8149-728c12b4e71a"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/user-attachments/assets/6f32329a-4d6f-42d8-9a2f-42977c0b3c05"&gt; 
  &lt;img alt="Reddit" src="https://github.com/user-attachments/assets/6f32329a-4d6f-42d8-9a2f-42977c0b3c05" width="48" height="48"&gt; 
 &lt;/picture&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
&lt;a href="https://bsky.app/profile/graphiteeditor.bsky.social"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/user-attachments/assets/c736d80c-e9bf-4591-a7e0-a7723057a906"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/user-attachments/assets/3db9b0a1-5ab7-4bff-bfd3-8a4ade7b98bd"&gt; 
  &lt;img alt="Bluesky" src="https://github.com/user-attachments/assets/3db9b0a1-5ab7-4bff-bfd3-8a4ade7b98bd" width="48" height="48"&gt; 
 &lt;/picture&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
&lt;a href="https://twitter.com/graphiteeditor"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/user-attachments/assets/115f04cc-e3c2-4f90-ac35-eb9edd3ca9be"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/user-attachments/assets/4ed4185d-a622-418c-bbf4-a0419e690ca9"&gt; 
  &lt;img alt="Twitter" src="https://github.com/user-attachments/assets/4ed4185d-a622-418c-bbf4-a0419e690ca9" width="48" height="48"&gt; 
 &lt;/picture&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
&lt;a href="https://www.youtube.com/@GraphiteEditor"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/user-attachments/assets/cbc02fad-5cbc-4715-a8e5-860198e989c7"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/user-attachments/assets/d13b484d-97a8-4d9e-bbe4-c60348b3f676"&gt; 
  &lt;img alt="YouTube" src="https://github.com/user-attachments/assets/d13b484d-97a8-4d9e-bbe4-c60348b3f676" width="48" height="48"&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;br&gt;
&lt;br&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/f4604aea-e8f1-45ce-9218-46ddc666f11d"&gt;https://github.com/user-attachments/assets/f4604aea-e8f1-45ce-9218-46ddc666f11d&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support our mission ❤️&lt;/h2&gt; 
&lt;p&gt;Graphite is 100% community built and funded. Please become a part of keeping the project alive and thriving with a &lt;a href="https://graphite.rs/donate/"&gt;donation&lt;/a&gt; if you share a belief in our &lt;strong&gt;mission&lt;/strong&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Graphite strives to unshackle the creativity of every budding artist and seasoned professional by building the best comprehensive art and design tool that's accessible to all.&lt;/p&gt; 
 &lt;p&gt;Mission success will come when Graphite is an industry standard. A cohesive product vision and focus on innovation over imitation is the strategy that will make that possible.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/decb7011-18c2-4c68-82af-d1fa5064244a" alt="Made using nondestructive boolean operations and procedural polka dot patterns"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/9e023997-185b-4f43-a724-797d308d9e7b" alt="Mandelbrot fractal filled with a noise pattern, procedurally generated and infinitely scalable"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/90eca551-5868-4f8d-9016-33958bf96345" alt="Design for a magazine spread, a preview of the upcoming focus on desktop publishing"&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing/building the code&lt;/h2&gt; 
&lt;p&gt;Are you a graphics programmer or Rust developer? Graphite aims to be one of the most approachable projects for putting your engineering skills to use in the world of open source. See &lt;a href="https://graphite.rs/volunteer/guide/"&gt;instructions here&lt;/a&gt; for setting up the project and getting started.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;By submitting code for inclusion in the project, you are agreeing to license your changes under the Apache 2.0 license, and that you have the authority to do so. Some directories may have other licenses, like dual-licensed MIT/Apache 2.0, and code submissions to those directories mean you agree to the applicable license(s).&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>twentyhq/twenty</title>
      <link>https://github.com/twentyhq/twenty</link>
      <description>&lt;p&gt;Building a modern alternative to Salesforce, powered by the community.&lt;/p&gt;&lt;hr&gt;&lt;br&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.twenty.com"&gt; &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/core/logo.svg?sanitize=true" width="100px" alt="Twenty logo"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2 align="center"&gt;The #1 Open-Source CRM &lt;/h2&gt; 
&lt;p align="center"&gt;&lt;a href="https://twenty.com"&gt;🌐 Website&lt;/a&gt; · &lt;a href="https://twenty.com/developers"&gt;📚 Documentation&lt;/a&gt; · &lt;a href="https://github.com/orgs/twentyhq/projects/1"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/planner-icon.svg?sanitize=true" width="12" height="12"&gt; Roadmap &lt;/a&gt; · &lt;a href="https://discord.gg/cx5n4Jzs57"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/discord-icon.svg?sanitize=true" width="12" height="12"&gt; Discord&lt;/a&gt; · &lt;a href="https://www.figma.com/file/xt8O9mFeLl46C5InWwoMrN/Twenty"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/figma-icon.png" width="12" height="12"&gt; Figma&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.twenty.com"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/github-cover-dark.png"&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/github-cover-light.png"&gt; 
   &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/github-cover-light.png" alt="Cover"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;See:&lt;br&gt; 🚀 &lt;a href="https://twenty.com/developers/section/self-hosting"&gt;Self-hosting&lt;/a&gt;&lt;br&gt; 🖥️ &lt;a href="https://twenty.com/developers/local-setup"&gt;Local Setup&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Does the world need another CRM?&lt;/h1&gt; 
&lt;p&gt;We built Twenty for three reasons:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;CRMs are too expensive, and users are trapped.&lt;/strong&gt; Companies use locked-in customer data to hike prices. It shouldn't be that way.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A fresh start is required to build a better experience.&lt;/strong&gt; We can learn from past mistakes and craft a cohesive experience inspired by new UX patterns from tools like Notion, Airtable or Linear.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We believe in Open-source and community.&lt;/strong&gt; Hundreds of developers are already building Twenty together. Once we have plugin capabilities, a whole ecosystem will grow around it.&lt;/p&gt; 
&lt;br&gt; 
&lt;h1&gt;What You Can Do With Twenty&lt;/h1&gt; 
&lt;p&gt;Please feel free to flag any specific needs you have by creating an issue.&lt;/p&gt; 
&lt;p&gt;Below are a few features we have implemented to date:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#personalize-layouts-with-filters-sort-group-by-kanban-and-table-views"&gt;Personalize layouts with filters, sort, group by, kanban and table views&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#customize-your-objects-and-fields"&gt;Customize your objects and fields&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#create-and-manage-permissions-with-custom-roles"&gt;Create and manage permissions with custom roles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#automate-workflow-with-triggers-and-actions"&gt;Automate workflow with triggers and actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#emails-calendar-events-files-and-more"&gt;Emails, calendar events, files, and more&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Personalize layouts with filters, sort, group by, kanban and table views&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/views-dark.png"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/views-light.png"&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/views-light.png" alt="Companies Kanban Views"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h2&gt;Customize your objects and fields&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/data-model-dark.png"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/data-model-light.png"&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/data-model-light.png" alt="Setting Custom Objects"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h2&gt;Create and manage permissions with custom roles&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/permissions-dark.png"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/permissions-light.png"&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/permissions-light.png" alt="Permissions"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h2&gt;Automate workflow with triggers and actions&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/workflows-dark.png"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/workflows-light.png"&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/workflows-light.png" alt="Workflows"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h2&gt;Emails, calendar events, files, and more&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/plus-other-features-dark.png"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/plus-other-features-light.png"&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/plus-other-features-light.png" alt="Other Features"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;h1&gt;Stack&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nx.dev/"&gt;Nx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nestjs.com/"&gt;NestJS&lt;/a&gt;, with &lt;a href="https://bullmq.io/"&gt;BullMQ&lt;/a&gt;, &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt;, &lt;a href="https://redis.io/"&gt;Redis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;, with &lt;a href="https://recoiljs.org/"&gt;Recoil&lt;/a&gt;, &lt;a href="https://emotion.sh/"&gt;Emotion&lt;/a&gt; and &lt;a href="https://lingui.dev/"&gt;Lingui&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Thanks&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.chromatic.com/"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/chromatic.png" height="30" alt="Chromatic"&gt;&lt;/a&gt; &lt;a href="https://greptile.com"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/greptile.png" height="30" alt="Greptile"&gt;&lt;/a&gt; &lt;a href="https://sentry.io/"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/sentry.png" height="30" alt="Sentry"&gt;&lt;/a&gt; &lt;a href="https://crowdin.com/"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/crowdin.png" height="30" alt="Crowdin"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Thanks to these amazing services that we use and recommend for UI testing (Chromatic), code review (Greptile), catching bugs (Sentry) and translating (Crowdin).&lt;/p&gt; 
&lt;h1&gt;Join the Community&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Star the repo&lt;/li&gt; 
 &lt;li&gt;Subscribe to releases (watch -&amp;gt; custom -&amp;gt; releases)&lt;/li&gt; 
 &lt;li&gt;Follow us on &lt;a href="https://twitter.com/twentycrm"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/company/twenty/"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Join our &lt;a href="https://discord.gg/cx5n4Jzs57"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Improve translations on &lt;a href="https://twenty.crowdin.com/twenty"&gt;Crowdin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twentyhq/twenty/contribute"&gt;Contributions&lt;/a&gt; are, of course, most welcome!&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>googleapis/genai-toolbox</title>
      <link>https://github.com/googleapis/genai-toolbox</link>
      <description>&lt;p&gt;MCP Toolbox for Databases is an open source MCP server for databases.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/logo.png" alt="logo"&gt;&lt;/p&gt; 
&lt;h1&gt;MCP Toolbox for Databases&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://googleapis.github.io/genai-toolbox/"&gt;&lt;img src="https://img.shields.io/badge/docs-MCP_Toolbox-blue" alt="Docs"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/Dmm69peqjh"&gt;&lt;img src="https://img.shields.io/badge/Discord-%235865F2.svg?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://medium.com/@mcp_toolbox"&gt;&lt;img src="https://img.shields.io/badge/Medium-12100E?style=flat&amp;amp;logo=medium&amp;amp;logoColor=white" alt="Medium"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/googleapis/genai-toolbox"&gt;&lt;img src="https://goreportcard.com/badge/github.com/googleapis/genai-toolbox" alt="Go Report Card"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] MCP Toolbox for Databases is currently in beta, and may see breaking changes until the first stable release (v1.0).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;MCP Toolbox for Databases is an open source MCP server for databases. It enables you to develop tools easier, faster, and more securely by handling the complexities such as connection pooling, authentication, and more.&lt;/p&gt; 
&lt;p&gt;This README provides a brief overview. For comprehensive details, see the &lt;a href="https://googleapis.github.io/genai-toolbox/"&gt;full documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This solution was originally named “Gen AI Toolbox for Databases” as its initial development predated MCP, but was renamed to align with recently added MCP compatibility.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- TOC ignore:true --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- TOC --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#why-toolbox"&gt;Why Toolbox?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#general-architecture"&gt;General Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#getting-started"&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#installing-the-server"&gt;Installing the server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#running-the-server"&gt;Running the server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#integrating-your-application"&gt;Integrating your application&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#configuration"&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#sources"&gt;Sources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#toolsets"&gt;Toolsets&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#versioning"&gt;Versioning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- /TOC --&gt; 
&lt;h2&gt;Why Toolbox?&lt;/h2&gt; 
&lt;p&gt;Toolbox helps you build Gen AI tools that let your agents access data in your database. Toolbox provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Simplified development&lt;/strong&gt;: Integrate tools to your agent in less than 10 lines of code, reuse tools between multiple agents or frameworks, and deploy new versions of tools more easily.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Better performance&lt;/strong&gt;: Best practices such as connection pooling, authentication, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced security&lt;/strong&gt;: Integrated auth for more secure access to your data&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;End-to-end observability&lt;/strong&gt;: Out of the box metrics and tracing with built-in support for OpenTelemetry.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;⚡ Supercharge Your Workflow with an AI Database Assistant ⚡&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Stop context-switching and let your AI assistant become a true co-developer. By &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/connect-ide/"&gt;connecting your IDE to your databases with MCP Toolbox&lt;/a&gt;, you can delegate complex and time-consuming database tasks, allowing you to build faster and focus on what matters. This isn't just about code completion; it's about giving your AI the context it needs to handle the entire development lifecycle.&lt;/p&gt; 
&lt;p&gt;Here’s how it will save you time:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Query in Plain English&lt;/strong&gt;: Interact with your data using natural language right from your IDE. Ask complex questions like, &lt;em&gt;"How many orders were delivered in 2024, and what items were in them?"&lt;/em&gt; without writing any SQL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automate Database Management&lt;/strong&gt;: Simply describe your data needs, and let the AI assistant manage your database for you. It can handle generating queries, creating tables, adding indexes, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generate Context-Aware Code&lt;/strong&gt;: Empower your AI assistant to generate application code and tests with a deep understanding of your real-time database schema. This accelerates the development cycle by ensuring the generated code is directly usable.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Slash Development Overhead&lt;/strong&gt;: Radically reduce the time spent on manual setup and boilerplate. MCP Toolbox helps streamline lengthy database configurations, repetitive code, and error-prone schema migrations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/connect-ide/"&gt;how to connect your AI tools (IDEs) to Toolbox using MCP&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;General Architecture&lt;/h2&gt; 
&lt;p&gt;Toolbox sits between your application's orchestration framework and your database, providing a control plane that is used to modify, distribute, or invoke tools. It simplifies the management of your tools by providing you with a centralized location to store and update tools, allowing you to share tools between agents and applications and update those tools without necessarily redeploying your application.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/docs/en/getting-started/introduction/architecture.png" alt="architecture"&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Installing the server&lt;/h3&gt; 
&lt;p&gt;For the latest version, check the &lt;a href="https://github.com/googleapis/genai-toolbox/releases"&gt;releases page&lt;/a&gt; and use the following instructions for your OS and CPU architecture.&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt;Binary&lt;/summary&gt; 
 &lt;p&gt;To install Toolbox as a binary:&lt;/p&gt; 
 &lt;!-- {x-release-please-start-version} --&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# see releases page for other versions
export VERSION=0.10.0
curl -O https://storage.googleapis.com/genai-toolbox/v$VERSION/linux/amd64/toolbox
chmod +x toolbox
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Container image&lt;/summary&gt; You can also install Toolbox as a container: 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# see releases page for other versions
export VERSION=0.10.0
docker pull us-central1-docker.pkg.dev/database-toolbox/toolbox/toolbox:$VERSION
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Homebrew&lt;/summary&gt; 
 &lt;p&gt;To install Toolbox using Homebrew on macOS or Linux:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;brew install mcp-toolbox
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Compile from source&lt;/summary&gt; 
 &lt;p&gt;To install from source, ensure you have the latest version of &lt;a href="https://go.dev/doc/install"&gt;Go installed&lt;/a&gt;, and then run the following command:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;go install github.com/googleapis/genai-toolbox@v0.10.0
&lt;/code&gt;&lt;/pre&gt; 
 &lt;!-- {x-release-please-end} --&gt; 
&lt;/details&gt; 
&lt;h3&gt;Running the server&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#configuration"&gt;Configure&lt;/a&gt; a &lt;code&gt;tools.yaml&lt;/code&gt; to define your tools, and then execute &lt;code&gt;toolbox&lt;/code&gt; to start the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./toolbox --tools-file "tools.yaml"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Toolbox enables dynamic reloading by default. To disable, use the &lt;code&gt;--disable-reload&lt;/code&gt; flag.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Homebrew Users&lt;/h4&gt; 
&lt;p&gt;If you installed Toolbox using Homebrew, the &lt;code&gt;toolbox&lt;/code&gt; binary is available in your system path. You can start the server with the same command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;toolbox --tools-file "tools.yaml"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can use &lt;code&gt;toolbox help&lt;/code&gt; for a full list of flags! To stop the server, send a terminate signal (&lt;code&gt;ctrl+c&lt;/code&gt; on most platforms).&lt;/p&gt; 
&lt;p&gt;For more detailed documentation on deploying to different environments, check out the resources in the &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/"&gt;How-to section&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Integrating your application&lt;/h3&gt; 
&lt;p&gt;Once your server is up and running, you can load the tools into your application. See below the list of Client SDKs for using various frameworks:&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt;Python (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-core/"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_core import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = await client.load_toolset("toolset_name")
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
   &lt;p&gt;For more detailed instructions on using the Toolbox Core SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python/tree/main/packages/toolbox-core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain / LangGraph&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-langchain/"&gt;Toolbox LangChain SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-langchain
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_langchain import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = client.load_toolset()
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox LangChain SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python/raw/main/packages/toolbox-langchain/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LlamaIndex&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-llamaindex/"&gt;Toolbox Llamaindex SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-llamaindex
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_llamaindex import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = client.load_toolset()
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Llamaindex SDK, see the &lt;a href="https://github.com/googleapis/genai-toolbox-llamaindex-python/raw/main/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;  
&lt;details&gt; 
 &lt;summary&gt;Javascript/Typescript (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-js"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const tools = await client.loadToolset('toolsetName');
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Core SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-js/raw/main/packages/toolbox-core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain / LangGraph&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const toolboxTools = await client.loadToolset('toolsetName');

// Define the basics of the tool: name, description, schema and core logic
const getTool = (toolboxTool) =&amp;gt; tool(currTool, {
    name: toolboxTool.getName(),
    description: toolboxTool.getDescription(),
    schema: toolboxTool.getParamSchema()
});

// Use these tools in your Langchain/Langraph applications
const tools = toolboxTools.map(getTool);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Genkit&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';
import { genkit } from 'genkit';

// Initialise genkit
const ai = genkit({
    plugins: [
        googleAI({
            apiKey: process.env.GEMINI_API_KEY || process.env.GOOGLE_API_KEY
        })
    ],
    model: googleAI.model('gemini-2.0-flash'),
});

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const toolboxTools = await client.loadToolset('toolsetName');

// Define the basics of the tool: name, description, schema and core logic
const getTool = (toolboxTool) =&amp;gt; ai.defineTool({
    name: toolboxTool.getName(),
    description: toolboxTool.getDescription(),
    schema: toolboxTool.getParamSchema()
}, toolboxTool)

// Use these tools in your Genkit applications
const tools = toolboxTools.map(getTool);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;  
&lt;details&gt; 
 &lt;summary&gt;Go (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-go"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "context"
)

func main() {
  // Make sure to add the error checks
  // update the url to point to your server
  URL := "http://127.0.0.1:5000";
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tools
  tools, err := client.LoadToolset("toolsetName", ctx)
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Go SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-go/raw/main/core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain Go&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "github.com/tmc/langchaingo/llms"
)

func main() {
  // Make sure to add the error checks
  // update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var paramsSchema map[string]any
  _ = json.Unmarshal(inputschema, &amp;amp;paramsSchema)

  // Use this tool with LangChainGo
  langChainTool := llms.Tool{
    Type: "function",
    Function: &amp;amp;llms.FunctionDefinition{
      Name:        tool.Name(),
      Description: tool.Description(),
      Parameters:  paramsSchema,
    },
  }
}

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Genkit&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main
import (
  "context"
  "encoding/json"

  "github.com/firebase/genkit/go/ai"
  "github.com/firebase/genkit/go/genkit"
  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "github.com/googleapis/mcp-toolbox-sdk-go/tbgenkit"
  "github.com/invopop/jsonschema"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()
  g, err := genkit.Init(ctx)

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Convert the tool using the tbgenkit package
  // Use this tool with Genkit Go
  genkitTool, err := tbgenkit.ToGenkitTool(tool, g)
  if err != nil {
    log.Fatalf("Failed to convert tool: %v\n", err)
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Go GenAI&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "google.golang.org/genai"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var schema *genai.Schema
  _ = json.Unmarshal(inputschema, &amp;amp;schema)

  funcDeclaration := &amp;amp;genai.FunctionDeclaration{
    Name:        tool.Name(),
    Description: tool.Description(),
    Parameters:  schema,
  }

  // Use this tool with Go GenAI
  genAITool := &amp;amp;genai.Tool{
    FunctionDeclarations: []*genai.FunctionDeclaration{funcDeclaration},
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;OpenAI Go&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  openai "github.com/openai/openai-go"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var paramsSchema openai.FunctionParameters
  _ = json.Unmarshal(inputschema, &amp;amp;paramsSchema)

  // Use this tool with OpenAI Go
  openAITool := openai.ChatCompletionToolParam{
    Function: openai.FunctionDefinitionParam{
      Name:        tool.Name(),
      Description: openai.String(tool.Description()),
      Parameters:  paramsSchema,
    },
  }

}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;   
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;The primary way to configure Toolbox is through the &lt;code&gt;tools.yaml&lt;/code&gt; file. If you have multiple files, you can tell toolbox which to load with the &lt;code&gt;--tools-file tools.yaml&lt;/code&gt; flag.&lt;/p&gt; 
&lt;p&gt;You can find more detailed reference documentation to all resource types in the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/"&gt;Resources&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Sources&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;sources&lt;/code&gt; section of your &lt;code&gt;tools.yaml&lt;/code&gt; defines what data sources your Toolbox should have access to. Most tools will have at least one source to execute against.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;sources:
  my-pg-source:
    kind: postgres
    host: 127.0.0.1
    port: 5432
    database: toolbox_db
    user: toolbox_user
    password: my-password
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring different types of sources, see the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/sources"&gt;Sources&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;tools&lt;/code&gt; section of a &lt;code&gt;tools.yaml&lt;/code&gt; define the actions an agent can take: what kind of tool it is, which source(s) it affects, what parameters it uses, etc.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;tools:
  search-hotels-by-name:
    kind: postgres-sql
    source: my-pg-source
    description: Search for hotels based on name.
    parameters:
      - name: name
        type: string
        description: The name of the hotel.
    statement: SELECT * FROM hotels WHERE name ILIKE '%' || $1 || '%';
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring different types of tools, see the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/tools"&gt;Tools&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Toolsets&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;toolsets&lt;/code&gt; section of your &lt;code&gt;tools.yaml&lt;/code&gt; allows you to define groups of tools that you want to be able to load together. This can be useful for defining different groups based on agent or application.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;toolsets:
    my_first_toolset:
        - my_first_tool
        - my_second_tool
    my_second_toolset:
        - my_second_tool
        - my_third_tool
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can load toolsets by name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# This will load all tools
all_tools = client.load_toolset()

# This will only load the tools listed in 'my_second_toolset'
my_second_toolset = client.load_toolset("my_second_toolset")
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;This project uses &lt;a href="https://semver.org/"&gt;semantic versioning&lt;/a&gt;, including a &lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt; version number that increments with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MAJOR version when we make incompatible API changes&lt;/li&gt; 
 &lt;li&gt;MINOR version when we add functionality in a backward compatible manner&lt;/li&gt; 
 &lt;li&gt;PATCH version when we make backward compatible bug fixes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The public API that this applies to is the CLI associated with Toolbox, the interactions with official SDKs, and the definitions in the &lt;code&gt;tools.yaml&lt;/code&gt; file.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome. Please, see the &lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. See &lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/CODE_OF_CONDUCT.md"&gt;Contributor Code of Conduct&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.gg/GQrFB3Ec3W"&gt;discord community&lt;/a&gt; to connect with our developers!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>humanlayer/12-factor-agents</title>
      <link>https://github.com/humanlayer/12-factor-agents</link>
      <description>&lt;p&gt;What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;12-Factor Agents - Principles for building reliable LLM applications&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt; &lt;img src="https://img.shields.io/badge/Code-Apache%202.0-blue.svg?sanitize=true" alt="Code License: Apache 2.0"&gt;&lt;/a&gt; 
 &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt; &lt;img src="https://img.shields.io/badge/Content-CC%20BY--SA%204.0-lightgrey.svg?sanitize=true" alt="Content License: CC BY-SA 4.0"&gt;&lt;/a&gt; 
 &lt;a href="https://humanlayer.dev/discord"&gt; &lt;img src="https://img.shields.io/badge/chat-discord-5865F2" alt="Discord Server"&gt;&lt;/a&gt; 
 &lt;a href="https://www.youtube.com/watch?v=8kMaTybvDUw"&gt; &lt;img src="https://img.shields.io/badge/aidotengineer-conf_talk_(17m)-white" alt="YouTube
Deep Dive"&gt;&lt;/a&gt; 
 &lt;a href="https://www.youtube.com/watch?v=yxJDyQ8v6P0"&gt; &lt;img src="https://img.shields.io/badge/youtube-deep_dive-crimson" alt="YouTube
Deep Dive"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;In the spirit of &lt;a href="https://12factor.net/"&gt;12 Factor Apps&lt;/a&gt;&lt;/em&gt;. &lt;em&gt;The source for this project is public at &lt;a href="https://github.com/humanlayer/12-factor-agents"&gt;https://github.com/humanlayer/12-factor-agents&lt;/a&gt;, and I welcome your feedback and contributions. Let's figure this out together!&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Missed the AI Engineer World's Fair? &lt;a href="https://www.youtube.com/watch?v=8kMaTybvDUw"&gt;Catch the talk here&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Looking for Context Engineering? &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Jump straight to factor 3&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Want to contribute to &lt;code&gt;npx/uvx create-12-factor-agent&lt;/code&gt; - check out &lt;a href="https://github.com/humanlayer/12-factor-agents/discussions/61"&gt;the discussion thread&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img referrerpolicy="no-referrer-when-downgrade" src="https://static.scarf.sh/a.png?x-pxid=2acad99a-c2d9-48df-86f5-9ca8061b7bf9"&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/humanlayer/12-factor-agents/main/#visual-nav"&gt;&lt;img width="907" alt="Screenshot 2025-04-03 at 2 49 07 PM" src="https://github.com/user-attachments/assets/23286ad8-7bef-4902-b371-88ff6a22e998"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Hi, I'm Dex. I've been &lt;a href="https://youtu.be/8bIHcttkOTE"&gt;hacking&lt;/a&gt; on &lt;a href="https://theouterloop.substack.com"&gt;AI agents&lt;/a&gt; for &lt;a href="https://humanlayer.dev"&gt;a while&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've tried every agent framework out there&lt;/strong&gt;, from the plug-and-play crew/langchains to the "minimalist" smolagents of the world to the "production grade" langraph, griptape, etc.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've talked to a lot of really strong founders&lt;/strong&gt;, in and out of YC, who are all building really impressive things with AI. Most of them are rolling the stack themselves. I don't see a lot of frameworks in production customer-facing agents.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've been surprised to find&lt;/strong&gt; that most of the products out there billing themselves as "AI Agents" are not all that agentic. A lot of them are mostly deterministic code, with LLM steps sprinkled in at just the right points to make the experience truly magical.&lt;/p&gt; 
&lt;p&gt;Agents, at least the good ones, don't follow the &lt;a href="https://www.anthropic.com/engineering/building-effective-agents#agents"&gt;"here's your prompt, here's a bag of tools, loop until you hit the goal"&lt;/a&gt; pattern. Rather, they are comprised of mostly just software.&lt;/p&gt; 
&lt;p&gt;So, I set out to answer:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;&lt;strong&gt;What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?&lt;/strong&gt;&lt;/h3&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Welcome to 12-factor agents. As every Chicago mayor since Daley has consistently plastered all over the city's major airports, we're glad you're here.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Special thanks to &lt;a href="https://github.com/iantbutler01"&gt;@iantbutler01&lt;/a&gt;, &lt;a href="https://github.com/tnm"&gt;@tnm&lt;/a&gt;, &lt;a href="https://www.github.com/hellovai"&gt;@hellovai&lt;/a&gt;, &lt;a href="https://www.github.com/stantonk"&gt;@stantonk&lt;/a&gt;, &lt;a href="https://www.github.com/balanceiskey"&gt;@balanceiskey&lt;/a&gt;, &lt;a href="https://www.github.com/AdjectiveAllison"&gt;@AdjectiveAllison&lt;/a&gt;, &lt;a href="https://www.github.com/pfbyjy"&gt;@pfbyjy&lt;/a&gt;, &lt;a href="https://www.github.com/a-churchill"&gt;@a-churchill&lt;/a&gt;, and the SF MLOps community for early feedback on this guide.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;The Short Version: The 12 Factors&lt;/h2&gt; 
&lt;p&gt;Even if LLMs &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md#what-if-llms-get-smarter"&gt;continue to get exponentially more powerful&lt;/a&gt;, there will be core engineering techniques that make LLM-powered software more reliable, more scalable, and easier to maintain.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;How We Got Here: A Brief History of Software&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;Factor 1: Natural Language to Tool Calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;Factor 2: Own your prompts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Factor 3: Own your context window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;Factor 4: Tools are just structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;Factor 5: Unify execution state and business state&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;Factor 6: Launch/Pause/Resume with simple APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;Factor 7: Contact humans with tool calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;Factor 8: Own your control flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;Factor 9: Compact Errors into Context Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;Factor 10: Small, Focused Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;Factor 11: Trigger from anywhere, meet users where they are&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;Factor 12: Make your agent a stateless reducer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Visual Nav&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/110-natural-language-tool-calls.png" alt="factor 1"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/120-own-your-prompts.png" alt="factor 2"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/130-own-your-context-building.png" alt="factor 3"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/140-tools-are-just-structured-outputs.png" alt="factor 4"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/150-unify-state.png" alt="factor 5"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/160-pause-resume-with-simple-apis.png" alt="factor 6"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/170-contact-humans-with-tools.png" alt="factor 7"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/180-control-flow.png" alt="factor 8"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/190-factor-9-errors-static.png" alt="factor 9"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1a0-small-focused-agents.png" alt="factor 10"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1b0-trigger-from-anywhere.png" alt="factor 11"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1c0-stateless-reducer.png" alt="factor 12"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;How we got here&lt;/h2&gt; 
&lt;p&gt;For a deeper dive on my agent journey and what led us here, check out &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;A Brief History of Software&lt;/a&gt; - a quick summary here:&lt;/p&gt; 
&lt;h3&gt;The promise of agents&lt;/h3&gt; 
&lt;p&gt;We're gonna talk a lot about Directed Graphs (DGs) and their Acyclic friends, DAGs. I'll start by pointing out that...well...software is a directed graph. There's a reason we used to represent programs as flow charts.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/010-software-dag.png" alt="010-software-dag"&gt;&lt;/p&gt; 
&lt;h3&gt;From code to DAGs&lt;/h3&gt; 
&lt;p&gt;Around 20 years ago, we started to see DAG orchestrators become popular. We're talking classics like &lt;a href="https://airflow.apache.org/"&gt;Airflow&lt;/a&gt;, &lt;a href="https://www.prefect.io/"&gt;Prefect&lt;/a&gt;, some predecessors, and some newer ones like (&lt;a href="https://dagster.io/"&gt;dagster&lt;/a&gt;, &lt;a href="https://www.inngest.com/"&gt;inggest&lt;/a&gt;, &lt;a href="https://www.windmill.dev/"&gt;windmill&lt;/a&gt;). These followed the same graph pattern, with the added benefit of observability, modularity, retries, administration, etc.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/015-dag-orchestrators.png" alt="015-dag-orchestrators"&gt;&lt;/p&gt; 
&lt;h3&gt;The promise of agents&lt;/h3&gt; 
&lt;p&gt;I'm not the first &lt;a href="https://youtu.be/Dc99-zTMyMg?si=bcT0hIwWij2mR-40&amp;amp;t=73"&gt;person to say this&lt;/a&gt;, but my biggest takeaway when I started learning about agents, was that you get to throw the DAG away. Instead of software engineers coding each step and edge case, you can give the agent a goal and a set of transitions:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/025-agent-dag.png" alt="025-agent-dag"&gt;&lt;/p&gt; 
&lt;p&gt;And let the LLM make decisions in real time to figure out the path&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/026-agent-dag-lines.png" alt="026-agent-dag-lines"&gt;&lt;/p&gt; 
&lt;p&gt;The promise here is that you write less software, you just give the LLM the "edges" of the graph and let it figure out the nodes. You can recover from errors, you can write less code, and you may find that LLMs find novel solutions to problems.&lt;/p&gt; 
&lt;h3&gt;Agents as loops&lt;/h3&gt; 
&lt;p&gt;As we'll see later, it turns out this doesn't quite work.&lt;/p&gt; 
&lt;p&gt;Let's dive one step deeper - with agents you've got this loop consisting of 3 steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;LLM determines the next step in the workflow, outputting structured json ("tool calling")&lt;/li&gt; 
 &lt;li&gt;Deterministic code executes the tool call&lt;/li&gt; 
 &lt;li&gt;The result is appended to the context window&lt;/li&gt; 
 &lt;li&gt;Repeat until the next step is determined to be "done"&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;initial_event = {"message": "..."}
context = [initial_event]
while True:
  next_step = await llm.determine_next_step(context)
  context.append(next_step)

  if (next_step.intent === "done"):
    return next_step.final_answer

  result = await execute_step(next_step)
  context.append(result)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Our initial context is just the starting event (maybe a user message, maybe a cron fired, maybe a webhook, etc), and we ask the llm to choose the next step (tool) or to determine that we're done.&lt;/p&gt; 
&lt;p&gt;Here's a multi-step example:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/3beb0966-fdb1-4c12-a47f-ed4e8240f8fd"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif" alt="027-agent-loop-animation"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif"&gt;GIF Version&lt;/a&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif" alt="027-agent-loop-animation"&gt;]&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Why 12-factor agents?&lt;/h2&gt; 
&lt;p&gt;At the end of the day, this approach just doesn't work as well as we want it to.&lt;/p&gt; 
&lt;p&gt;In building HumanLayer, I've talked to at least 100 SaaS builders (mostly technical founders) looking to make their existing product more agentic. The journey usually goes something like:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Decide you want to build an agent&lt;/li&gt; 
 &lt;li&gt;Product design, UX mapping, what problems to solve&lt;/li&gt; 
 &lt;li&gt;Want to move fast, so grab $FRAMEWORK and &lt;em&gt;get to building&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Get to 70-80% quality bar&lt;/li&gt; 
 &lt;li&gt;Realize that 80% isn't good enough for most customer-facing features&lt;/li&gt; 
 &lt;li&gt;Realize that getting past 80% requires reverse-engineering the framework, prompts, flow, etc.&lt;/li&gt; 
 &lt;li&gt;Start over from scratch&lt;/li&gt; 
&lt;/ol&gt; 
&lt;details&gt; 
 &lt;summary&gt;Random Disclaimers&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: I'm not sure the exact right place to say this, but here seems as good as any: &lt;strong&gt;this in BY NO MEANS meant to be a dig on either the many frameworks out there, or the pretty dang smart people who work on them&lt;/strong&gt;. They enable incredible things and have accelerated the AI ecosystem.&lt;/p&gt; 
 &lt;p&gt;I hope that one outcome of this post is that agent framework builders can learn from the journeys of myself and others, and make frameworks even better.&lt;/p&gt; 
 &lt;p&gt;Especially for builders who want to move fast but need deep control.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER 2&lt;/strong&gt;: I'm not going to talk about MCP. I'm sure you can see where it fits in.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER 3&lt;/strong&gt;: I'm using mostly typescript, for &lt;a href="https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e?utm_source=share&amp;amp;utm_medium=member_desktop&amp;amp;rcm=ACoAAA4oHTkByAiD-wZjnGsMBUL_JT6nyyhOh30"&gt;reasons&lt;/a&gt; but all this stuff works in python or any other language you prefer.&lt;/p&gt; 
 &lt;p&gt;Anyways back to the thing...&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Design Patterns for great LLM applications&lt;/h3&gt; 
&lt;p&gt;After digging through hundreds of AI libriaries and working with dozens of founders, my instinct is this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;There are some core things that make agents great&lt;/li&gt; 
 &lt;li&gt;Going all in on a framework and building what is essentially a greenfield rewrite may be counter-productive&lt;/li&gt; 
 &lt;li&gt;There are some core principles that make agents great, and you will get most/all of them if you pull in a framework&lt;/li&gt; 
 &lt;li&gt;BUT, the fastest way I've seen for builders to get high-quality AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product&lt;/li&gt; 
 &lt;li&gt;These modular concepts from agents can be defined and applied by most skilled software engineers, even if they don't have an AI background&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;The fastest way I've seen for builders to get good AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;The 12 Factors (again)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;How We Got Here: A Brief History of Software&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;Factor 1: Natural Language to Tool Calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;Factor 2: Own your prompts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Factor 3: Own your context window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;Factor 4: Tools are just structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;Factor 5: Unify execution state and business state&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;Factor 6: Launch/Pause/Resume with simple APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;Factor 7: Contact humans with tool calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;Factor 8: Own your control flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;Factor 9: Compact Errors into Context Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;Factor 10: Small, Focused Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;Factor 11: Trigger from anywhere, meet users where they are&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;Factor 12: Make your agent a stateless reducer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Honorable Mentions / other advice&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/appendix-13-pre-fetch.md"&gt;Factor 13: Pre-fetch all the context you might need&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Related Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Contribute to this guide &lt;a href="https://github.com/humanlayer/12-factor-agents"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/8bIHcttkOTE"&gt;I talked about a lot of this on an episode of the Tool Use podcast&lt;/a&gt; in March 2025&lt;/li&gt; 
 &lt;li&gt;I write about some of this stuff at &lt;a href="https://theouterloop.substack.com"&gt;The Outer Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;I do &lt;a href="https://github.com/hellovai/ai-that-works/tree/main"&gt;webinars about Maximizing LLM Performance&lt;/a&gt; with &lt;a href="https://github.com/hellovai"&gt;@hellovai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;We build OSS agents with this methodology under &lt;a href="https://github.com/got-agents/agents"&gt;got-agents/agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;We ignored all our own advice and built a &lt;a href="https://github.com/humanlayer/kubechain"&gt;framework for running distributed agents in kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Other links from this guide: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://12factor.net"&gt;12 Factor Apps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.anthropic.com/engineering/building-effective-agents#agents"&gt;Building Effective Agents (Anthropic)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://thedataexchange.media/baml-revolution-in-ai-engineering/"&gt;Prompts are Functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tomasp.net/blog/2015/library-frameworks/"&gt;Library patterns: Why frameworks are evil&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction"&gt;The Wrong Abstraction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/dexhorthy/mailcrew"&gt;Mailcrew Agent&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=f_cKnoPC_Oo"&gt;Mailcrew Demo Video&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://x.com/chainlit_io/status/1858613325921480922"&gt;Chainlit Demo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e"&gt;TypeScript for LLMs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.boundaryml.com/blog/schema-aligned-parsing"&gt;Schema Aligned Parsing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.vellum.ai/blog/when-should-i-use-function-calling-structured-outputs-or-json-mode"&gt;Function Calling vs Structured Outputs vs JSON Mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/boundaryml/baml"&gt;BAML on GitHub&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.llamaindex.ai/en/stable/examples/llm/openai_json_vs_function_calling/"&gt;OpenAI JSON vs Function Calling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://theouterloop.substack.com/p/openais-realtime-api-is-a-step-towards"&gt;Outer Loop Agents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://airflow.apache.org/"&gt;Airflow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.prefect.io/"&gt;Prefect&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://dagster.io/"&gt;Dagster&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.inngest.com/"&gt;Inngest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.windmill.dev/"&gt;Windmill&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://aiagentindex.mit.edu/"&gt;The AI Agent Index (MIT)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://open.substack.com/pub/swyx/p/notebooklm?selection=08e1187c-cfee-4c63-93c9-71216640a5f8"&gt;NotebookLM on Finding Model Capability Boundaries&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks to everyone who has contributed to 12-factor agents!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/dexhorthy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3730605?v=4&amp;amp;s=80" width="80px" alt="dexhorthy"&gt;&lt;/a&gt; &lt;a href="https://github.com/Sypherd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50557586?v=4&amp;amp;s=80" width="80px" alt="Sypherd"&gt;&lt;/a&gt; &lt;a href="https://github.com/tofaramususa"&gt;&lt;img src="https://avatars.githubusercontent.com/u/66259401?v=4&amp;amp;s=80" width="80px" alt="tofaramususa"&gt;&lt;/a&gt; &lt;a href="https://github.com/a-churchill"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18105223?v=4&amp;amp;s=80" width="80px" alt="a-churchill"&gt;&lt;/a&gt; &lt;a href="https://github.com/Elijas"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4084885?v=4&amp;amp;s=80" width="80px" alt="Elijas"&gt;&lt;/a&gt; &lt;a href="https://github.com/hugolmn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39267118?v=4&amp;amp;s=80" width="80px" alt="hugolmn"&gt;&lt;/a&gt; &lt;a href="https://github.com/jeremypeters"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1882972?v=4&amp;amp;s=80" width="80px" alt="jeremypeters"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/kndl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/380402?v=4&amp;amp;s=80" width="80px" alt="kndl"&gt;&lt;/a&gt; &lt;a href="https://github.com/maciejkos"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16674643?v=4&amp;amp;s=80" width="80px" alt="maciejkos"&gt;&lt;/a&gt; &lt;a href="https://github.com/pfbyjy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/85041180?v=4&amp;amp;s=80" width="80px" alt="pfbyjy"&gt;&lt;/a&gt; &lt;a href="https://github.com/0xRaduan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36044389?v=4&amp;amp;s=80" width="80px" alt="0xRaduan"&gt;&lt;/a&gt; &lt;a href="https://github.com/zyuanlim"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7169731?v=4&amp;amp;s=80" width="80px" alt="zyuanlim"&gt;&lt;/a&gt; &lt;a href="https://github.com/lombardo-chcg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15862501?v=4&amp;amp;s=80" width="80px" alt="lombardo-chcg"&gt;&lt;/a&gt; &lt;a href="https://github.com/sahanatvessel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/160066852?v=4&amp;amp;s=80" width="80px" alt="sahanatvessel"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Versions&lt;/h2&gt; 
&lt;p&gt;This is the current version of 12-factor agents, version 1.0. There is a draft of version 1.1 on the &lt;a href="https://github.com/humanlayer/12-factor-agents/tree/v1.1"&gt;v1.1 branch&lt;/a&gt;. There are a few &lt;a href="https://github.com/humanlayer/12-factor-agents/issues?q=is%3Aissue%20state%3Aopen%20label%3Aversion%3A%3A1.1"&gt;Issues to track work on v1.1&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;All content and images are licensed under a &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt;CC BY-SA 4.0 License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Code is licensed under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0 License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anthropics/claude-code</title>
      <link>https://github.com/anthropics/claude-code</link>
      <description>&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows - all through natural language commands.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Code&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/Node.js-18%2B-brightgreen?style=flat-square" alt=""&gt; &lt;a href="https://www.npmjs.com/package/@anthropic-ai/claude-code"&gt;&lt;img src="https://img.shields.io/npm/v/@anthropic-ai/claude-code.svg?style=flat-square" alt="npm"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows -- all through natural language commands. Use it in your terminal, IDE, or tag @claude on Github.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Learn more in the &lt;a href="https://docs.anthropic.com/en/docs/claude-code/overview"&gt;official documentation&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/anthropics/claude-code/main/demo.gif"&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Claude Code:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install -g @anthropic-ai/claude-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Navigate to your project directory and run &lt;code&gt;claude&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Reporting Bugs&lt;/h2&gt; 
&lt;p&gt;We welcome your feedback. Use the &lt;code&gt;/bug&lt;/code&gt; command to report issues directly within Claude Code, or file a &lt;a href="https://github.com/anthropics/claude-code/issues"&gt;GitHub issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Data collection, usage, and retention&lt;/h2&gt; 
&lt;p&gt;When you use Claude Code, we collect feedback, which includes usage data (such as code acceptance or rejections), associated conversation data, and user feedback submitted via the &lt;code&gt;/bug&lt;/code&gt; command.&lt;/p&gt; 
&lt;h3&gt;How we use your data&lt;/h3&gt; 
&lt;p&gt;We may use feedback to improve our products and services, but we will not train generative models using your feedback from Claude Code. Given their potentially sensitive nature, we store user feedback transcripts for only 30 days.&lt;/p&gt; 
&lt;p&gt;If you choose to send us feedback about Claude Code, such as transcripts of your usage, Anthropic may use that feedback to debug related issues and improve Claude Code's functionality (e.g., to reduce the risk of similar bugs occurring in the future).&lt;/p&gt; 
&lt;h3&gt;Privacy safeguards&lt;/h3&gt; 
&lt;p&gt;We have implemented several safeguards to protect your data, including limited retention periods for sensitive information, restricted access to user session data, and clear policies against using feedback for model training.&lt;/p&gt; 
&lt;p&gt;For full details, please review our &lt;a href="https://www.anthropic.com/legal/commercial-terms"&gt;Commercial Terms of Service&lt;/a&gt; and &lt;a href="https://www.anthropic.com/legal/privacy"&gt;Privacy Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/ML-For-Beginners</title>
      <link>https://github.com/microsoft/ML-For-Beginners</link>
      <description>&lt;p&gt;12 weeks, 26 lessons, 52 quizzes, classic Machine Learning for all&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/microsoft/ML-For-Beginners/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/microsoft/ML-For-Beginners.svg?sanitize=true" alt="GitHub license"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/graphs/contributors/"&gt;&lt;img src="https://img.shields.io/github/contributors/microsoft/ML-For-Beginners.svg?sanitize=true" alt="GitHub contributors"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/issues/"&gt;&lt;img src="https://img.shields.io/github/issues/microsoft/ML-For-Beginners.svg?sanitize=true" alt="GitHub issues"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/pulls/"&gt;&lt;img src="https://img.shields.io/github/issues-pr/microsoft/ML-For-Beginners.svg?sanitize=true" alt="GitHub pull-requests"&gt;&lt;/a&gt; &lt;a href="http://makeapullrequest.com"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square" alt="PRs Welcome"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/watchers/"&gt;&lt;img src="https://img.shields.io/github/watchers/microsoft/ML-For-Beginners.svg?style=social&amp;amp;label=Watch" alt="GitHub watchers"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/network/"&gt;&lt;img src="https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&amp;amp;label=Fork" alt="GitHub forks"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/stargazers/"&gt;&lt;img src="https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&amp;amp;label=Star" alt="GitHub stars"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/zxKYvhSnVp?WT.mc_id=academic-000002-leestott"&gt;&lt;img src="https://dcbadge.vercel.app/api/server/ByRwuEEgH4" alt=""&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Machine Learning for Beginners - A Curriculum&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🌍 Travel around the world as we explore Machine Learning by means of world cultures 🌍&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Cloud Advocates at Microsoft are pleased to offer a 12-week, 26-lesson curriculum all about &lt;strong&gt;Machine Learning&lt;/strong&gt;. In this curriculum, you will learn about what is sometimes called &lt;strong&gt;classic machine learning&lt;/strong&gt;, using primarily Scikit-learn as a library and avoiding deep learning, which is covered in our &lt;a href="https://aka.ms/ai4beginners"&gt;AI for Beginners' curriculum&lt;/a&gt;. Pair these lessons with our &lt;a href="https://aka.ms/ds4beginners"&gt;'Data Science for Beginners' curriculum&lt;/a&gt;, as well!&lt;/p&gt; 
&lt;p&gt;Travel with us around the world as we apply these classic techniques to data from many areas of the world. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment, and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;✍️ Hearty thanks to our authors&lt;/strong&gt; Jen Looper, Stephen Howell, Francesca Lazzeri, Tomomi Imura, Cassie Breviu, Dmitry Soshnikov, Chris Noring, Anirban Mukherjee, Ornella Altunyan, Ruth Yakubu and Amy Boyd&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🎨 Thanks as well to our illustrators&lt;/strong&gt; Tomomi Imura, Dasani Madipalli, and Jen Looper&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🙏 Special thanks 🙏 to our Microsoft Student Ambassador authors, reviewers, and content contributors&lt;/strong&gt;, notably Rishit Dagli, Muhammad Sakib Khan Inan, Rohan Raj, Alexandru Petrescu, Abhishek Jaiswal, Nawrin Tabassum, Ioan Samuila, and Snigdha Agarwal&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🤩 Extra gratitude to Microsoft Student Ambassadors Eric Wanjau, Jasleen Sondhi, and Vidushi Gupta for our R lessons!&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;p&gt;Follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork the Repository&lt;/strong&gt;: Click on the "Fork" button at the top-right corner of this page.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Clone the Repository&lt;/strong&gt;: &lt;code&gt;git clone https://github.com/microsoft/ML-For-Beginners.git&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/collections/qrqzamz1nn2wx3?WT.mc_id=academic-77952-bethanycheum"&gt;find all additional resources for this course in our Microsoft Learn collection&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://aka.ms/student-page"&gt;Students&lt;/a&gt;&lt;/strong&gt;, to use this curriculum, fork the entire repo to your own GitHub account and complete the exercises on your own or with a group:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Start with a pre-lecture quiz.&lt;/li&gt; 
 &lt;li&gt;Read the lecture and complete the activities, pausing and reflecting at each knowledge check.&lt;/li&gt; 
 &lt;li&gt;Try to create the projects by comprehending the lessons rather than running the solution code; however that code is available in the &lt;code&gt;/solution&lt;/code&gt; folders in each project-oriented lesson.&lt;/li&gt; 
 &lt;li&gt;Take the post-lecture quiz.&lt;/li&gt; 
 &lt;li&gt;Complete the challenge.&lt;/li&gt; 
 &lt;li&gt;Complete the assignment.&lt;/li&gt; 
 &lt;li&gt;After completing a lesson group, visit the &lt;a href="https://github.com/microsoft/ML-For-Beginners/discussions"&gt;Discussion Board&lt;/a&gt; and "learn out loud" by filling out the appropriate PAT rubric. A 'PAT' is a Progress Assessment Tool that is a rubric you fill out to further your learning. You can also react to other PATs so we can learn together.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For further study, we recommend following these &lt;a href="https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-77952-leestott"&gt;Microsoft Learn&lt;/a&gt; modules and learning paths.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Teachers&lt;/strong&gt;, we have &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/for-teachers.md"&gt;included some suggestions&lt;/a&gt; on how to use this curriculum.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Video walkthroughs&lt;/h2&gt; 
&lt;p&gt;Some of the lessons are available as short form video. You can find all these in-line in the lessons, or on the &lt;a href="https://aka.ms/ml-beginners-videos"&gt;ML for Beginners playlist on the Microsoft Developer YouTube channel&lt;/a&gt; by clicking the image below.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://aka.ms/ml-beginners-videos"&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/ml-for-beginners-video-banner.png" alt="ML for beginners banner"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Meet the Team&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/Tj1XWrDSYJU" title="Promo video"&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/ml.gif" alt="Promo video"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gif by&lt;/strong&gt; &lt;a href="https://linkedin.com/in/mohitjaisal"&gt;Mohit Jaisal&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🎥 Click the image above for a video about the project and the folks who created it!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h2&gt;Pedagogy&lt;/h2&gt; 
&lt;p&gt;We have chosen two pedagogical tenets while building this curriculum: ensuring that it is hands-on &lt;strong&gt;project-based&lt;/strong&gt; and that it includes &lt;strong&gt;frequent quizzes&lt;/strong&gt;. In addition, this curriculum has a common &lt;strong&gt;theme&lt;/strong&gt; to give it cohesion.&lt;/p&gt; 
&lt;p&gt;By ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented. In addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. This curriculum was designed to be flexible and fun and can be taken in whole or in part. The projects start small and become increasingly complex by the end of the 12-week cycle. This curriculum also includes a postscript on real-world applications of ML, which can be used as extra credit or as a basis for discussion.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Find our &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;, and &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/TRANSLATIONS.md"&gt;Translation&lt;/a&gt; guidelines. We welcome your constructive feedback!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Each lesson includes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;optional sketchnote&lt;/li&gt; 
 &lt;li&gt;optional supplemental video&lt;/li&gt; 
 &lt;li&gt;video walkthrough (some lessons only)&lt;/li&gt; 
 &lt;li&gt;pre-lecture warmup quiz&lt;/li&gt; 
 &lt;li&gt;written lesson&lt;/li&gt; 
 &lt;li&gt;for project-based lessons, step-by-step guides on how to build the project&lt;/li&gt; 
 &lt;li&gt;knowledge checks&lt;/li&gt; 
 &lt;li&gt;a challenge&lt;/li&gt; 
 &lt;li&gt;supplemental reading&lt;/li&gt; 
 &lt;li&gt;assignment&lt;/li&gt; 
 &lt;li&gt;post-lecture quiz&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;A note about languages&lt;/strong&gt;: These lessons are primarily written in Python, but many are also available in R. To complete an R lesson, go to the &lt;code&gt;/solution&lt;/code&gt; folder and look for R lessons. They include an .rmd extension that represents an &lt;strong&gt;R Markdown&lt;/strong&gt; file which can be simply defined as an embedding of &lt;code&gt;code chunks&lt;/code&gt; (of R or other languages) and a &lt;code&gt;YAML header&lt;/code&gt; (that guides how to format outputs such as PDF) in a &lt;code&gt;Markdown document&lt;/code&gt;. As such, it serves as an exemplary authoring framework for data science since it allows you to combine your code, its output, and your thoughts by allowing you to write them down in Markdown. Moreover, R Markdown documents can be rendered to output formats such as PDF, HTML, or Word.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;A note about quizzes&lt;/strong&gt;: All quizzes are contained in &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/quiz-app/"&gt;Quiz App folder&lt;/a&gt;, for 52 total quizzes of three questions each. They are linked from within the lessons but the quiz app can be run locally; follow the instruction in the &lt;code&gt;quiz-app&lt;/code&gt; folder to locally host or deploy to Azure.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Lesson Number&lt;/th&gt; 
   &lt;th align="center"&gt;Topic&lt;/th&gt; 
   &lt;th align="center"&gt;Lesson Grouping&lt;/th&gt; 
   &lt;th&gt;Learning Objectives&lt;/th&gt; 
   &lt;th align="center"&gt;Linked Lesson&lt;/th&gt; 
   &lt;th align="center"&gt;Author&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;01&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to machine learning&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/README.md"&gt;Introduction&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Learn the basic concepts behind machine learning&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/1-intro-to-ML/README.md"&gt;Lesson&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Muhammad&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;02&lt;/td&gt; 
   &lt;td align="center"&gt;The History of machine learning&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/README.md"&gt;Introduction&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Learn the history underlying this field&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/2-history-of-ML/README.md"&gt;Lesson&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen and Amy&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;03&lt;/td&gt; 
   &lt;td align="center"&gt;Fairness and machine learning&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/README.md"&gt;Introduction&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;What are the important philosophical issues around fairness that students should consider when building and applying ML models?&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/3-fairness/README.md"&gt;Lesson&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Tomomi&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;04&lt;/td&gt; 
   &lt;td align="center"&gt;Techniques for machine learning&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/README.md"&gt;Introduction&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;What techniques do ML researchers use to build ML models?&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/4-techniques-of-ML/README.md"&gt;Lesson&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris and Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;05&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to regression&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/README.md"&gt;Regression&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Get started with Python and Scikit-learn for regression models&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/1-Tools/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/1-Tools/solution/R/lesson_1.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;06&lt;/td&gt; 
   &lt;td align="center"&gt;North American pumpkin prices 🎃&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/README.md"&gt;Regression&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Visualize and clean data in preparation for ML&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/2-Data/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/2-Data/solution/R/lesson_2.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;07&lt;/td&gt; 
   &lt;td align="center"&gt;North American pumpkin prices 🎃&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/README.md"&gt;Regression&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Build linear and polynomial regression models&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/3-Linear/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/3-Linear/solution/R/lesson_3.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen and Dmitry&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;08&lt;/td&gt; 
   &lt;td align="center"&gt;North American pumpkin prices 🎃&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/README.md"&gt;Regression&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Build a logistic regression model&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/4-Logistic/README.md"&gt;Python&lt;/a&gt; &lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/4-Logistic/solution/R/lesson_4.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;09&lt;/td&gt; 
   &lt;td align="center"&gt;A Web App 🔌&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/3-Web-App/README.md"&gt;Web App&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Build a web app to use your trained model&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/3-Web-App/1-Web-App/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;10&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to classification&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/README.md"&gt;Classification&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Clean, prep, and visualize your data; introduction to classification&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt; &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/1-Introduction/README.md"&gt;Python&lt;/a&gt; &lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/1-Introduction/solution/R/lesson_10.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen and Cassie&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;11&lt;/td&gt; 
   &lt;td align="center"&gt;Delicious Asian and Indian cuisines 🍜&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/README.md"&gt;Classification&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Introduction to classifiers&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt; &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/2-Classifiers-1/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/2-Classifiers-1/solution/R/lesson_11.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen and Cassie&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;12&lt;/td&gt; 
   &lt;td align="center"&gt;Delicious Asian and Indian cuisines 🍜&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/README.md"&gt;Classification&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;More classifiers&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt; &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/3-Classifiers-2/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/3-Classifiers-2/solution/R/lesson_12.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen and Cassie&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;13&lt;/td&gt; 
   &lt;td align="center"&gt;Delicious Asian and Indian cuisines 🍜&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/README.md"&gt;Classification&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Build a recommender web app using your model&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/4-Applied/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;14&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to clustering&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/5-Clustering/README.md"&gt;Clustering&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Clean, prep, and visualize your data; Introduction to clustering&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt; &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/5-Clustering/1-Visualize/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/5-Clustering/1-Visualize/solution/R/lesson_14.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;15&lt;/td&gt; 
   &lt;td align="center"&gt;Exploring Nigerian Musical Tastes 🎧&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/5-Clustering/README.md"&gt;Clustering&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Explore the K-Means clustering method&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt; &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/5-Clustering/2-K-Means/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/5-Clustering/2-K-Means/solution/R/lesson_15.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;16&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to natural language processing ☕️&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/README.md"&gt;Natural language processing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Learn the basics about NLP by building a simple bot&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/1-Introduction-to-NLP/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Stephen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;17&lt;/td&gt; 
   &lt;td align="center"&gt;Common NLP Tasks ☕️&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/README.md"&gt;Natural language processing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Deepen your NLP knowledge by understanding common tasks required when dealing with language structures&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/2-Tasks/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Stephen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;18&lt;/td&gt; 
   &lt;td align="center"&gt;Translation and sentiment analysis ♥️&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/README.md"&gt;Natural language processing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Translation and sentiment analysis with Jane Austen&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/3-Translation-Sentiment/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Stephen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;19&lt;/td&gt; 
   &lt;td align="center"&gt;Romantic hotels of Europe ♥️&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/README.md"&gt;Natural language processing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Sentiment analysis with hotel reviews 1&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/4-Hotel-Reviews-1/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Stephen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;20&lt;/td&gt; 
   &lt;td align="center"&gt;Romantic hotels of Europe ♥️&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/README.md"&gt;Natural language processing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Sentiment analysis with hotel reviews 2&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/5-Hotel-Reviews-2/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Stephen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;21&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to time series forecasting&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/7-TimeSeries/README.md"&gt;Time series&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Introduction to time series forecasting&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/7-TimeSeries/1-Introduction/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Francesca&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;22&lt;/td&gt; 
   &lt;td align="center"&gt;⚡️ World Power Usage ⚡️ - time series forecasting with ARIMA&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/7-TimeSeries/README.md"&gt;Time series&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Time series forecasting with ARIMA&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/7-TimeSeries/2-ARIMA/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Francesca&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;23&lt;/td&gt; 
   &lt;td align="center"&gt;⚡️ World Power Usage ⚡️ - time series forecasting with SVR&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/7-TimeSeries/README.md"&gt;Time series&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Time series forecasting with Support Vector Regressor&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/7-TimeSeries/3-SVR/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Anirban&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;24&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to reinforcement learning&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/8-Reinforcement/README.md"&gt;Reinforcement learning&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Introduction to reinforcement learning with Q-Learning&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/8-Reinforcement/1-QLearning/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Dmitry&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;25&lt;/td&gt; 
   &lt;td align="center"&gt;Help Peter avoid the wolf! 🐺&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/8-Reinforcement/README.md"&gt;Reinforcement learning&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Reinforcement learning Gym&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/8-Reinforcement/2-Gym/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Dmitry&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Postscript&lt;/td&gt; 
   &lt;td align="center"&gt;Real-World ML scenarios and applications&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/9-Real-World/README.md"&gt;ML in the Wild&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Interesting and revealing real-world applications of classical ML&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/9-Real-World/1-Applications/README.md"&gt;Lesson&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Team&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Postscript&lt;/td&gt; 
   &lt;td align="center"&gt;Model Debugging in ML using RAI dashboard&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/9-Real-World/README.md"&gt;ML in the Wild&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Model Debugging in Machine Learning using Responsible AI dashboard components&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/9-Real-World/2-Debugging-ML-Models/README.md"&gt;Lesson&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Ruth Yakubu&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/collections/qrqzamz1nn2wx3?WT.mc_id=academic-77952-bethanycheum"&gt;find all additional resources for this course in our Microsoft Learn collection&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Offline access&lt;/h2&gt; 
&lt;p&gt;You can run this documentation offline by using &lt;a href="https://docsify.js.org/#/"&gt;Docsify&lt;/a&gt;. Fork this repo, &lt;a href="https://docsify.js.org/#/quickstart"&gt;install Docsify&lt;/a&gt; on your local machine, and then in the root folder of this repo, type &lt;code&gt;docsify serve&lt;/code&gt;. The website will be served on port 3000 on your localhost: &lt;code&gt;localhost:3000&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;PDFs&lt;/h2&gt; 
&lt;p&gt;Find a pdf of the curriculum with links &lt;a href="https://microsoft.github.io/ML-For-Beginners/pdf/readme.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Help Wanted&lt;/h2&gt; 
&lt;p&gt;Would you like to contribute a translation? Please read our &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/TRANSLATIONS.md"&gt;translation guidelines&lt;/a&gt; and add a templated issue to manage the workload &lt;a href="https://github.com/microsoft/ML-For-Beginners/issues"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🎒 Other Courses&lt;/h2&gt; 
&lt;p&gt;Our team produces other courses! Check out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/genai-beginners"&gt;Generative AI for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/Generative-AI-for-beginners-dotnet"&gt;Generative AI for Beginners .NET&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/generative-ai-with-javascript"&gt;Generative AI with JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/ai-beginners"&gt;AI for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/datascience-beginners"&gt;Data Science for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/ml-beginners"&gt;ML for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/Security-101"&gt;Cybersecurity for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/webdev-beginners"&gt;Web Dev for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/iot-beginners"&gt;IoT for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/xr-development-for-beginners"&gt;XR Development for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/Mastering-GitHub-Copilot-for-Paired-Programming"&gt;Mastering GitHub Copilot for Paired Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/mastering-github-copilot-for-dotnet-csharp-developers"&gt;Mastering GitHub Copilot for C#/.NET Developers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/CopilotAdventures"&gt;Choose Your Own Copilot Adventure&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Kilo-Org/kilocode</title>
      <link>https://github.com/Kilo-Org/kilocode</link>
      <description>&lt;p&gt;Open Source AI coding assistant for planning, building, and fixing code. We're a superset of Roo, Cline, and our own features. Follow us: kilocode.ai/social&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code"&gt;&lt;img src="https://img.shields.io/visual-studio-marketplace/v/kilocode.Kilo-Code.svg?label=VS%20Code%20Marketplace" alt="VS Code Marketplace"&gt;&lt;/a&gt; 
 &lt;!--&lt;a href="https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code"&gt;&lt;img src="https://img.shields.io/badge/Get%20$20%20of%20free%20tokens-green?logo=claude&amp;logoColor=white" alt="Get $20 of tokens for free"&gt;&lt;/a&gt;--&gt; &lt;a href="https://x.com/kilo_code"&gt;&lt;img src="https://img.shields.io/twitter/follow/kilo_code?style=flat&amp;amp;logo=x&amp;amp;color=555" alt="X (Twitter)"&gt;&lt;/a&gt; &lt;a href="https://blog.kilocode.ai"&gt;&lt;img src="https://img.shields.io/badge/Blog-555?style=flat&amp;amp;logo=substack&amp;amp;logoColor=white" alt="Substack Blog"&gt;&lt;/a&gt; &lt;a href="https://kilocode.ai/discord"&gt;&lt;img src="https://img.shields.io/discord/1349288496988160052?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://www.reddit.com/r/kilocode/"&gt;&lt;img src="https://img.shields.io/reddit/subreddit-subscribers/kilocode?style=flat&amp;amp;logo=reddit&amp;amp;logoColor=white" alt="Reddit"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;🚀 Kilo Code&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Open-source VS Code AI agent. Merged features from &lt;a href="https://github.com/RooVetGit/Roo-Code"&gt;Roo Code&lt;/a&gt; and &lt;a href="https://github.com/cline/cline"&gt;Cline&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;✨ Generate code from natural language&lt;/li&gt; 
 &lt;li&gt;✅ Checks its own work&lt;/li&gt; 
 &lt;li&gt;🧪 Run terminal commands&lt;/li&gt; 
 &lt;li&gt;🌐 Automate the browser&lt;/li&gt; 
 &lt;li&gt;🤖 Latest AI models&lt;/li&gt; 
 &lt;li&gt;🎁 API keys optional&lt;/li&gt; 
 &lt;li&gt;💡 &lt;strong&gt;$20 free credits for Gemini 2.5 Pro, Claude 4 Sonnet &amp;amp; Opus, and GPT-4.1&lt;/strong&gt;&lt;br&gt;Share feedback and earn more credits!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Kilo-Org/kilocode/refs/heads/main/kilo.gif" width="100%"&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://kilocode.ai/vscode-marketplace?utm_source=Readme"&gt;VS Code Marketplace&lt;/a&gt; (download)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kilocode.ai"&gt;Official KiloCode.ai Home page&lt;/a&gt; (learn more)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code Generation:&lt;/strong&gt; Generate code using natural language.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Task Automation:&lt;/strong&gt; Automate repetitive coding tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automated Refactoring:&lt;/strong&gt; Refactor and improve existing code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Server Marketplace&lt;/strong&gt;: Easily find, and use MCP servers to extend the agent capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi Mode&lt;/strong&gt;: Plan with Architect, Code with Coder, and Debug with Debugger, and make your own custom modes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to get started with Kilo Code&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the Kilo Code extension from the &lt;a href="https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code"&gt;VS Code Marketplace&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Log in with your Google Account to get $20 in free Claude 4 Sonnet &amp;amp; Opus credits.&lt;/li&gt; 
 &lt;li&gt;Start using the extension. Here's a video to help you get started (just click on the image below and you'll be redirected to YouTube):&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/pqGfYXgrhig"&gt;&lt;img src="https://img.youtube.com/vi/pqGfYXgrhig/maxresdefault.jpg" alt="Watch the video"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Difference between Roo Code and Cline&lt;/h2&gt; 
&lt;p&gt;We're doing our best to combine the best of both worlds. Kilo Code combines all features of Cline, Roo, and adds a few of our own additions. It has the best features of both, and we're working on making it even better!&lt;/p&gt; 
&lt;p&gt;No need to fiddle with API keys, Kilo Code ships with the latest AI models plugged in, including Claude 4 Sonnet and Opus and Gemini 2.5 Pro.&lt;/p&gt; 
&lt;p&gt;Kilo Code is a direct fork from Roo Code, but also includes the following features from Cline (and more):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MCP Server Marketplace: Easily find, and use MCP servers to extend the agent capabilities.&lt;/li&gt; 
 &lt;li&gt;System notifications: Get notified when the agent is done with a task.&lt;/li&gt; 
 &lt;li&gt;Easy model connection: with bigger free tier.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Extension Development&lt;/h2&gt; 
&lt;p&gt;For details on building and developing the extension, see &lt;a href="https://raw.githubusercontent.com/Kilo-Org/kilocode/main/DEVELOPMENT.md"&gt;DEVELOPMENT.md&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hesreallyhim/awesome-claude-code</title>
      <link>https://github.com/hesreallyhim/awesome-claude-code</link>
      <description>&lt;p&gt;A curated list of awesome commands, files, and workflows for Claude Code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;/h1&gt; 
&lt;!-- [![Awesome](https://awesome.re/badge-flat2.svg)](https://awesome.re) --&gt; 
&lt;pre style="display: inline-block; text-align: left;"&gt;
 █████┐ ██┐    ██┐███████┐███████┐ ██████┐ ███┐   ███┐███████┐
██┌──██┐██│    ██│██┌────┘██┌────┘██┌───██┐████┐ ████│██┌────┘
███████│██│ █┐ ██│█████┐  ███████┐██│   ██│██┌████┌██│█████┐
██┌──██│██│███┐██│██┌──┘  └────██│██│   ██│██│└██┌┘██│██┌──┘
██│  ██│└███┌███┌┘███████┐███████│└██████┌┘██│ └─┘ ██│███████┐
└─┘  └─┘ └──┘└──┘ └──────┘└──────┘ └─────┘ └─┘     └─┘└──────┘

 ────────────────────────────────────────────────────────────────────────────────────

 ██████┐██┐      █████┐ ██┐   ██┐██████┐ ███████┐     ██████┐ ██████┐ ██████┐ ███████┐
██┌────┘██│     ██┌──██┐██│   ██│██┌──██┐██┌────┘    ██┌────┘██┌───██┐██┌──██┐██┌────┘
██│     ██│     ███████│██│   ██│██│  ██│█████┐      ██│     ██│   ██│██│  ██│█████┐
██│     ██│     ██┌──██│██│   ██│██│  ██│██┌──┘      ██│     ██│   ██│██│  ██│██┌──┘
└██████┐███████┐██│  ██│└██████┌┘██████┌┘███████┐    └██████┐└██████┌┘██████┌┘███████┐
 └─────┘└──────┘└─┘  └─┘ └─────┘ └─────┘ └──────┘     └─────┘ └─────┘ └─────┘ └──────┘
&lt;/pre&gt; 
&lt;!--lint enable remark-lint:awesome-badge--&gt; 
&lt;p&gt;&lt;a href="https://awesome.re"&gt;&lt;img src="https://awesome.re/badge-flat2.svg?sanitize=true" alt="Awesome"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!--lint enable remark-lint:awesome-badge--&gt; 
&lt;!--lint disable double-link--&gt; 
&lt;p&gt;This is a curated list of slash-commands, &lt;code&gt;CLAUDE.md&lt;/code&gt; files, CLI tools, and other resources and guides for enhancing your &lt;a href="https://docs.anthropic.com/en/docs/claude-code"&gt;Claude Code&lt;/a&gt; workflow, productivity, and vibes.&lt;/p&gt; 
&lt;!--lint enable double-link--&gt; 
&lt;p&gt;Claude Code is a cutting-edge CLI-based coding assistant and agent that you can access in your terminal or IDE. It is a rapidly evolving tool that offers a number of powerful capabilities, and allows for a lot of configuration, in a lot of different ways. Users are actively working out best practices and workflows. It is the hope that this repo will help the community share knowledge and understand how to get the most out of Claude Code.&lt;/p&gt; 
&lt;h3&gt;Announcements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;2025-07-18 - I ended up over-engineering the submission workflow, but I think it's done, I just have to smoke test it and update the docs. For anyone with existing PR's, don't worry about updating them (for formatting purposes, that is), I can take care of it myself. For anoyne with new PR's, you &lt;em&gt;should&lt;/em&gt; be able to run &lt;code&gt;make submit&lt;/code&gt; from the root directory of your fork for an interactive experience (as I said, needs smoke testing) - alternatively, add your entry to the bottom of &lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/THE_RESOURCES_TABLE.csv"&gt;&lt;code&gt;THE_RESOURCES_TABLE&lt;/code&gt;&lt;/a&gt; and run &lt;code&gt;make generate&lt;/code&gt; to automatically update the &lt;code&gt;README.md&lt;/code&gt; based on the information you filled in. If it's not working, just open a PR with the relevant information and I'll deal with it, I created this mess anyway 😃.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;p&gt;▪&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#workflows--knowledge-guides-"&gt;Workflows &amp;amp; Knowledge Guides&lt;/a&gt;&lt;br&gt; ▪&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#tooling-"&gt;Tooling&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;▫&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#ide-integrations"&gt;IDE Integrations&lt;/a&gt;&lt;br&gt; ▪&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#hooks-"&gt;Hooks&lt;/a&gt;&lt;br&gt; ▪&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#slash-commands-"&gt;Slash-Commands&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;▫&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#version-control--git"&gt;Version Control &amp;amp; Git&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;▫&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#code-analysis--testing"&gt;Code Analysis &amp;amp; Testing&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;▫&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#context-loading--priming"&gt;Context Loading &amp;amp; Priming&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;▫&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#documentation--changelogs"&gt;Documentation &amp;amp; Changelogs&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;▫&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#ci--deployment"&gt;CI / Deployment&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;▫&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#project--task-management"&gt;Project &amp;amp; Task Management&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;▫&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;br&gt; ▪&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#claudemd-files-"&gt;CLAUDE.md Files&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;▫&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#language-specific"&gt;Language-Specific&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;▫&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#domain-specific"&gt;Domain-Specific&lt;/a&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;▫&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#project-scaffolding--mcp"&gt;Project Scaffolding &amp;amp; MCP&lt;/a&gt;&lt;br&gt; ▪&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/#official-documentation-"&gt;Official Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Workflows &amp;amp; Knowledge Guides 🧠&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A &lt;strong&gt;workflow&lt;/strong&gt; is a tightly coupled set of Claude Code-native resources that facilitate specific projects&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://github.com/cloudartisan/cloudartisan.github.io/tree/main/.claude/commands"&gt;&lt;code&gt;Blogging Platform Instructions&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/cloudartisan"&gt;cloudartisan&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;CC-BY-SA-4.0&lt;br&gt; Provides a well-structured set of commands for publishing and maintaining a blogging platform, including commands for creating posts, managing categories, and handling media files.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://claudelog.com"&gt;&lt;code&gt;ClaudeLog&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://www.reddit.com/user/inventor_black/"&gt;InventorBlack&lt;/a&gt;&lt;br&gt; A comprehensive knowledge base with detailed breakdowns of advanced &lt;a href="https://claudelog.com/mechanics/you-are-the-main-thread/"&gt;mechanics&lt;/a&gt; including &lt;a href="https://claudelog.com/mechanics/claude-md-supremacy"&gt;CLAUDE.md best practices&lt;/a&gt;, practical technique guides like &lt;a href="https://claudelog.com/mechanics/plan-mode"&gt;plan mode&lt;/a&gt;, &lt;a href="https://claudelog.com/faqs/what-is-ultrathink/"&gt;ultrathink&lt;/a&gt;, &lt;a href="https://claudelog.com/mechanics/task-agent-tools/"&gt;sub-agents&lt;/a&gt;, &lt;a href="https://claudelog.com/mechanics/agent-first-design/"&gt;agent-first design&lt;/a&gt; and &lt;a href="https://claudelog.com/configuration"&gt;configuration guides&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/disler/just-prompt/tree/main/.claude/commands"&gt;&lt;code&gt;Context Priming&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/disler"&gt;disler&lt;/a&gt;&lt;br&gt; Provides a systematic approach to priming Claude Code with comprehensive project context through specialized commands for different project scenarios and development contexts.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/kingler/n8n_agent/tree/main/.claude/commands"&gt;&lt;code&gt;n8n_agent&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/kingler"&gt;kingler&lt;/a&gt;&lt;br&gt; Amazing comprehensive set of comments for code analysis, QA, design, documentation, project structure, project management, optimization, and many more.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/steadycursor/steadystart/tree/main/.claude/commands"&gt;&lt;code&gt;Project Bootstrapping and Task Management&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/steadycursor"&gt;steadycursor&lt;/a&gt;&lt;br&gt; Provides a structured set of commands for bootstrapping and managing a new project, including meta-commands for creating and editing custom slash-commands.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/scopecraft/command/tree/main/.claude/commands"&gt;&lt;code&gt;Project Management, Implementation, Planning, and Release&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/scopecraft"&gt;scopecraft&lt;/a&gt;&lt;br&gt; Really comprehensive set of commands for all aspects of SDLC.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/harperreed/dotfiles/tree/master/.claude/commands"&gt;&lt;code&gt;Project Workflow System&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/harperreed"&gt;harperreed&lt;/a&gt;&lt;br&gt; A set of commands that provide a comprehensive workflow system for managing projects, including task management, code review, and deployment processes.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://diwank.space/field-notes-from-shipping-real-code-with-claude"&gt;&lt;code&gt;Shipping Real Code w/ Claude&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/creatorrr"&gt;Diwank&lt;/a&gt;&lt;br&gt; A detailed blog post explaining the author's process for shipping a product with Claude Code, including CLAUDE.md files and other interesting resources.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Helmi/claude-simone"&gt;&lt;code&gt;Simone&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/Helmi"&gt;Helmi&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A broader project management workflow for Claude Code that encompasses not just a set of commands, but a system of documents, guidelines, and processes to facilitate project planning and execution.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/wcygan/dotfiles/tree/d8ab6b9f5a7a81007b7f5fa3025d4f83ce12cc02/claude/commands"&gt;&lt;code&gt;Slash-commands megalist&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/wcygan"&gt;wcygan&lt;/a&gt;&lt;br&gt; A pretty stunning list (88 at the time of this post!) of slash-commands ranging from agent orchestration, code review, project management, security, documentation, self-assessment, almost anything you can dream of.&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Tooling 🧰&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Tooling&lt;/strong&gt; denotes applications that are built on top of Claude Code and consist of more components than slash-commands and &lt;code&gt;CLAUDE.md&lt;/code&gt; files&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://github.com/ryoppippi/ccusage"&gt;&lt;code&gt;CC Usage&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/ryoppippi"&gt;ryoppippi&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Handy CLI tool for managing and analyzing Claude Code usage, based on analyzing local Claude Code logs. Presents a nice dashboard regarding cost information, token consumption, etc.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/nyatinte/ccexp"&gt;&lt;code&gt;ccexp&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/nyatinte"&gt;nyatinte&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Interactive CLI tool for discovering and managing Claude Code configuration files and slash commands with a beautiful terminal UI.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/ruvnet/claude-code-flow"&gt;&lt;code&gt;Claude Code Flow&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/ruvnet"&gt;ruvnet&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; This mode serves as a code-first orchestration layer, enabling Claude to write, edit, test, and optimize code autonomously across recursive agent cycles.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Maciek-roboblog/Claude-Code-Usage-Monitor"&gt;&lt;code&gt;Claude Code Usage Monitor&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/Maciek-roboblog"&gt;Maciek-roboblog&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A real-time terminal-based tool for monitoring Claude Code token usage. It shows live token consumption, burn rate, and predictions for token depletion. Features include visual progress bars, session-aware analytics, and support for multiple subscription plans.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/possibilities/claude-composer"&gt;&lt;code&gt;Claude Composer&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/possibilities"&gt;Mike Bannister&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;Unlicense&lt;br&gt; A tool that adds small enhancements to Claude Code.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/claude-did-this/claude-hub"&gt;&lt;code&gt;Claude Hub&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/claude-did-this"&gt;Claude Did This&lt;/a&gt;&lt;br&gt; A webhook service that connects Claude Code to GitHub repositories, enabling AI-powered code assistance directly through pull requests and issues. This integration allows Claude to analyze repositories, answer technical questions, and help developers understand and improve their codebase through simple @mentions.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/smtg-ai/claude-squad"&gt;&lt;code&gt;Claude Squad&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/smtg-ai"&gt;smtg-ai&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;AGPL-3.0&lt;br&gt; Claude Squad is a terminal app that manages multiple Claude Code, Codex (and other local agents including Aider) in separate workspaces, allowing you to work on multiple tasks simultaneously.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/parruda/claude-swarm"&gt;&lt;code&gt;Claude Swarm&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/parruda"&gt;parruda&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Launch Claude Code session that is connected to a swarm of Claude Code Agents.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/eyaltoledano/claude-task-master"&gt;&lt;code&gt;Claude Task Master&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/eyaltoledano"&gt;eyaltoledano&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; A task management system for AI-driven development with Claude, designed to work seamlessly with Cursor AI.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/grahama1970/claude-task-runner"&gt;&lt;code&gt;Claude Task Runner&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/grahama1970"&gt;grahama1970&lt;/a&gt;&lt;br&gt; A specialized tool to manage context isolation and focused task execution with Claude Code, solving the critical challenge of context length limitations and task focus when working with Claude on complex, multi-step projects.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/dagger/container-use"&gt;&lt;code&gt;Container Use&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/dagger"&gt;dagger&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Development environments for coding agents. Enable multiple agents to work safely and independently with your preferred stack.&lt;/p&gt; 
&lt;h3&gt;IDE Integrations&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=AndrePimenta.claude-code-chat"&gt;&lt;code&gt;Claude Code Chat&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/andrepimenta"&gt;andrepimenta&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;©&lt;br&gt; An elegant and user-friendly Claude Code chat interface for VS Code.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/stevemolitor/claude-code.el"&gt;&lt;code&gt;claude-code.el&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/stevemolitor"&gt;stevemolitor&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; An Emacs interface for Claude Code CLI.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/greggh/claude-code.nvim"&gt;&lt;code&gt;claude-code.nvim&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/greggh"&gt;greggh&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A seamless integration between Claude Code AI assistant and Neovim.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/stravu/crystal"&gt;&lt;code&gt;crystal&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/stravu"&gt;stravu&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A full-fledged desktop application for orchestrating, monitoring, and interacting with Claude Code agents.&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Hooks 🪝&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Hooks&lt;/strong&gt; are a brand new API for Claude Code that allows users to activate commands and run scripts at different points in Claude's agentic lifecycle.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;[Experimental]&lt;/strong&gt; - The resources listed in this section have not been fully vetted and may not work as expected, given the bleeding-edge nature of Claude Code hooks. Nevertheless, I wished to include them at least as a source of inspiration and to explore this unknown terrain. YMMV!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/beyondcode/claude-hooks-sdk"&gt;&lt;code&gt;claude-code-hooks-sdk&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/beyondcode"&gt;beyondcode&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A Laravel-inspired PHP SDK for building Claude Code hook responses with a clean, fluent API. This SDK makes it easy to create structured JSON responses for Claude Code hooks using an expressive, chainable interface.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/johnlindquist/claude-hooks"&gt;&lt;code&gt;claude-hooks&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/johnlindquist"&gt;John Lindquist&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A TypeScript-based system for configuring and customizing Claude Code hooks with a powerful and flexible interface.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Veraticus/nix-config/tree/main/home-manager/claude-code/hooks"&gt;&lt;code&gt;Linting, testing, and notifications (in go)&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/Veraticus"&gt;Josh Symonds&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Nice set of hooks for enforcing code quality (linting, testing, notifications), with a nice configuration setup as well.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/nizos/tdd-guard"&gt;&lt;code&gt;TDD Guard&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/nizos"&gt;Nizar Selander&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A hooks-driven system that monitors file operations in real-time and blocks changes that violate TDD principles.&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Slash-Commands 🔪&lt;/h2&gt; 
&lt;h3&gt;Version Control &amp;amp; Git&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/danielscholl/mvn-mcp-server/raw/main/.claude/commands/bug-fix.md"&gt;&lt;code&gt;/bug-fix&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/danielscholl"&gt;danielscholl&lt;/a&gt;&lt;br&gt; Streamlines bug fixing by creating a GitHub issue first, then a feature branch for implementing and thoroughly testing the solution before merging.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/evmts/tevm-monorepo/raw/main/.claude/commands/commit.md"&gt;&lt;code&gt;/commit&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/evmts"&gt;evmts&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Creates git commits using conventional commit format with appropriate emojis, following project standards and creating descriptive messages that explain the purpose of changes.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/steadycursor/steadystart/raw/main/.claude/commands/2-commit-fast.md"&gt;&lt;code&gt;/commit-fast&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/steadycursor"&gt;steadycursor&lt;/a&gt;&lt;br&gt; Automates git commit process by selecting the first suggested message, generating structured commits with consistent formatting while skipping manual confirmation and removing Claude co-Contributorship footer&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/toyamarinyon/giselle/raw/main/.claude/commands/create-pr.md"&gt;&lt;code&gt;/create-pr&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/toyamarinyon"&gt;toyamarinyon&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Streamlines pull request creation by handling the entire workflow: creating a new branch, committing changes, formatting modified files with Biome, and submitting the PR.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/liam-hq/liam/raw/main/.claude/commands/create-pull-request.md"&gt;&lt;code&gt;/create-pull-request&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/liam-hq"&gt;liam-hq&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Provides comprehensive PR creation guidance with GitHub CLI, enforcing title conventions, following template structure, and offering concrete command examples with best practices.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/evmts/tevm-monorepo/raw/main/.claude/commands/create-worktrees.md"&gt;&lt;code&gt;/create-worktrees&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/evmts"&gt;evmts&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Creates git worktrees for all open PRs or specific branches, handling branches with slashes, cleaning up stale worktrees, and supporting custom branch creation for development.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/jeremymailen/kotlinter-gradle/raw/master/.claude/commands/fix-github-issue.md"&gt;&lt;code&gt;/fix-github-issue&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/jeremymailen"&gt;jeremymailen&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Analyzes and fixes GitHub issues using a structured approach with GitHub CLI for issue details, implementing necessary code changes, running tests, and creating proper commit messages.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/metabase/metabase/raw/master/.claude/commands/fix-issue.md"&gt;&lt;code&gt;/fix-issue&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/metabase"&gt;metabase&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; Addresses GitHub issues by taking issue number as parameter, analyzing context, implementing solution, and testing/validating the fix for proper integration.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/metabase/metabase/raw/master/.claude/commands/fix-pr.md"&gt;&lt;code&gt;/fix-pr&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/metabase"&gt;metabase&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; Fetches and fixes unresolved PR comments by automatically retrieving feedback, addressing reviewer concerns, making targeted code improvements, and streamlining the review process.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/evmts/tevm-monorepo/raw/main/.claude/commands/husky.md"&gt;&lt;code&gt;/husky&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/evmts"&gt;evmts&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Sets up and manages Husky Git hooks by configuring pre-commit hooks, establishing commit message standards, integrating with linting tools, and ensuring code quality on commits.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/arkavo-org/opentdf-rs/raw/main/.claude/commands/pr-review.md"&gt;&lt;code&gt;/pr-review&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/arkavo-org"&gt;arkavo-org&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Reviews pull request changes to provide feedback, check for issues, and suggest improvements before merging into the main codebase.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/giselles-ai/giselle/raw/main/.claude/commands/update-branch-name.md"&gt;&lt;code&gt;/update-branch-name&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/giselles-ai"&gt;giselles-ai&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Updates branch names with proper prefixes and formats, enforcing naming conventions, supporting semantic prefixes, and managing remote branch updates.&lt;/p&gt; 
&lt;h3&gt;Code Analysis &amp;amp; Testing&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/rygwdn/slack-tools/raw/main/.claude/commands/check.md"&gt;&lt;code&gt;/check&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/rygwdn"&gt;rygwdn&lt;/a&gt;&lt;br&gt; Performs comprehensive code quality and security checks, featuring static analysis integration, security vulnerability scanning, code style enforcement, and detailed reporting.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Graphlet-AI/eridu/raw/main/.claude/commands/clean.md"&gt;&lt;code&gt;/clean&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/Graphlet-AI"&gt;Graphlet-AI&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Addresses code formatting and quality issues by fixing black formatting problems, organizing imports with isort, resolving flake8 linting issues, and correcting mypy type errors.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/kingler/n8n_agent/raw/main/.claude/commands/code_analysis.md"&gt;&lt;code&gt;/code_analysis&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/kingler"&gt;kingler&lt;/a&gt;&lt;br&gt; Provides a menu of advanced code analysis commands for deep inspection, including knowledge graph generation, optimization suggestions, and quality evaluation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/to4iki/ai-project-rules/raw/main/.claude/commands/optimize.md"&gt;&lt;code&gt;/optimize&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/to4iki"&gt;to4iki&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Analyzes code performance to identify bottlenecks, proposing concrete optimizations with implementation guidance for improved application performance.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/rzykov/metabase/raw/master/.claude/commands/repro-issue.md"&gt;&lt;code&gt;/repro-issue&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/rzykov"&gt;rzykov&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; Creates reproducible test cases for GitHub issues, ensuring tests fail reliably and documenting clear reproduction steps for developers.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/zscott/pane/raw/main/.claude/commands/tdd.md"&gt;&lt;code&gt;/tdd&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/zscott"&gt;zscott&lt;/a&gt;&lt;br&gt; Guides development using Test-Driven Development principles, enforcing Red-Green-Refactor discipline, integrating with git workflow, and managing PR creation.&lt;/p&gt; 
&lt;h3&gt;Context Loading &amp;amp; Priming&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/elizaOS/elizaos.github.io/raw/main/.claude/commands/context-prime.md"&gt;&lt;code&gt;/context-prime&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/elizaOS"&gt;elizaOS&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Primes Claude with comprehensive project understanding by loading repository structure, setting development context, establishing project goals, and defining collaboration parameters.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/okuvshynov/cubestat/raw/main/.claude/commands/initref.md"&gt;&lt;code&gt;/initref&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/okuvshynov"&gt;okuvshynov&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Initializes reference documentation structure with standard doc templates, API reference setup, documentation conventions, and placeholder content generation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/ethpandaops/xatu-data/raw/master/.claude/commands/load-llms-txt.md"&gt;&lt;code&gt;/load-llms-txt&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/ethpandaops"&gt;ethpandaops&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Loads LLM configuration files to context, importing specific terminology, model configurations, and establishing baseline terminology for AI discussions.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Mjvolk3/torchcell/raw/main/.claude/commands/load_coo_context.md"&gt;&lt;code&gt;/load_coo_context&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/Mjvolk3"&gt;Mjvolk3&lt;/a&gt;&lt;br&gt; References specific files for sparse matrix operations, explains transform usage, compares with previous approaches, and sets data formatting context for development.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Mjvolk3/torchcell/raw/main/.claude/commands/load_dango_pipeline.md"&gt;&lt;code&gt;/load_dango_pipeline&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/Mjvolk3"&gt;Mjvolk3&lt;/a&gt;&lt;br&gt; Sets context for model training by referencing pipeline files, establishing working context, and preparing for pipeline work with relevant documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/yzyydev/AI-Engineering-Structure/raw/main/.claude/commands/prime.md"&gt;&lt;code&gt;/prime&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/yzyydev"&gt;yzyydev&lt;/a&gt;&lt;br&gt; Sets up initial project context by viewing directory structure and reading key files, creating standardized context with directory visualization and key documentation focus.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/ddisisto/si/raw/main/.claude/commands/rsi.md"&gt;&lt;code&gt;/rsi&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/ddisisto"&gt;ddisisto&lt;/a&gt;&lt;br&gt; Reads all commands and key project files to optimize AI-assisted development by streamlining the process, loading command context, and setting up for better development workflow.&lt;/p&gt; 
&lt;h3&gt;Documentation &amp;amp; Changelogs&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/berrydev-ai/blockdoc-python/raw/main/.claude/commands/add-to-changelog.md"&gt;&lt;code&gt;/add-to-changelog&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/berrydev-ai"&gt;berrydev-ai&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Adds new entries to changelog files while maintaining format consistency, properly documenting changes, and following established project standards for version tracking.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/jerseycheese/Narraitor/tree/feature/issue-227-ai-suggestions/.claude/commands/analyze-issue.md"&gt;&lt;code&gt;/create-docs&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/jerseycheese"&gt;jerseycheese&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Analyzes code structure and purpose to create comprehensive documentation detailing inputs/outputs, behavior, user interaction flows, and edge cases with error handling.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/slunsford/coffee-analytics/raw/main/.claude/commands/docs.md"&gt;&lt;code&gt;/docs&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/slunsford"&gt;slunsford&lt;/a&gt;&lt;br&gt; Generates comprehensive documentation that follows project structure, documenting APIs and usage patterns with consistent formatting for better user understanding.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/hackdays-io/toban-contribution-viewer/raw/main/.claude/commands/explain-issue-fix.md"&gt;&lt;code&gt;/explain-issue-fix&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/hackdays-io"&gt;hackdays-io&lt;/a&gt;&lt;br&gt; Documents solution approaches for GitHub issues, explaining technical decisions, detailing challenges overcome, and providing implementation context for better understanding.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Consiliency/Flutter-Structurizr/raw/main/.claude/commands/update-docs.md"&gt;&lt;code&gt;/update-docs&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/Consiliency"&gt;Consiliency&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Reviews current documentation status, updates implementation progress, reviews phase documents, and maintains documentation consistency across the project.&lt;/p&gt; 
&lt;h3&gt;CI / Deployment&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/kelp/webdown/raw/main/.claude/commands/release.md"&gt;&lt;code&gt;/release&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/kelp"&gt;kelp&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Manages software releases by updating changelogs, reviewing README changes, evaluating version increments, and documenting release changes for better version tracking.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/hackdays-io/toban-contribution-viewer/raw/main/.claude/commands/run-ci.md"&gt;&lt;code&gt;/run-ci&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/hackdays-io"&gt;hackdays-io&lt;/a&gt;&lt;br&gt; Activates virtual environments, runs CI-compatible check scripts, iteratively fixes errors, and ensures all tests pass before completion.&lt;/p&gt; 
&lt;h3&gt;Project &amp;amp; Task Management&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/scopecraft/command/raw/main/.claude/commands/create-command.md"&gt;&lt;code&gt;/create-command&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/scopecraft"&gt;scopecraft&lt;/a&gt;&lt;br&gt; Guides Claude through creating new custom commands with proper structure by analyzing requirements, templating commands by category, enforcing command standards, and creating supporting documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/taddyorg/inkverse/raw/main/.claude/commands/create-jtbd.md"&gt;&lt;code&gt;/create-jtbd&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/taddyorg"&gt;taddyorg&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;AGPL-3.0&lt;br&gt; Creates Jobs-to-be-Done frameworks that outline user needs with structured format, focusing on specific user problems and organizing by job categories for product development.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/taddyorg/inkverse/raw/main/.claude/commands/create-prd.md"&gt;&lt;code&gt;/create-prd&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/taddyorg"&gt;taddyorg&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;AGPL-3.0&lt;br&gt; Generates comprehensive product requirement documents outlining detailed specifications, requirements, and features following standardized document structure and format.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Wirasm/claudecode-utils/raw/main/.claude/commands/create-prp.md"&gt;&lt;code&gt;/create-prp&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/Wirasm"&gt;Wirasm&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Creates product requirement plans by reading PRP methodology, following template structure, creating comprehensive requirements, and structuring product definitions for development.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/disler/just-prompt/raw/main/.claude/commands/project_hello_w_name.md"&gt;&lt;code&gt;/project_hello_w_name&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/disler"&gt;disler&lt;/a&gt;&lt;br&gt; Creates customizable greeting components with name input, demonstrating argument passing, component reusability, state management, and user input handling.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/chrisleyva/todo-slash-command/raw/main/todo.md"&gt;&lt;code&gt;/todo&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/chrisleyva"&gt;chrisleyva&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; A convenient command to quickly manage project todo items without leaving the Claude Code interface, featuring due dates, sorting, task prioritization, and comprehensive todo list management.&lt;/p&gt; 
&lt;h3&gt;Miscellaneous&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/TuckerTucker/tkr-portfolio/raw/main/.claude/commands/five.md"&gt;&lt;code&gt;/five&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/TuckerTucker"&gt;TuckerTucker&lt;/a&gt;&lt;br&gt; Applies the "five whys" methodology to perform root cause analysis, identify underlying issues, and create solution approaches for complex problems.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Mjvolk3/torchcell/raw/main/.claude/commands/fixing_go_in_graph.md"&gt;&lt;code&gt;/fixing_go_in_graph&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/Mjvolk3"&gt;Mjvolk3&lt;/a&gt;&lt;br&gt; Focuses on Gene Ontology annotation integration in graph databases, handling multiple data sources, addressing graph representation issues, and ensuring correct data incorporation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/GaloyMoney/lana-bank/raw/main/.claude/commands/mermaid.md"&gt;&lt;code&gt;/mermaid&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/GaloyMoney"&gt;GaloyMoney&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; Generates Mermaid diagrams from SQL schema files, creating entity relationship diagrams with table properties, validating diagram compilation, and ensuring complete entity coverage.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Mjvolk3/torchcell/raw/main/.claude/commands/review_dcell_model.md"&gt;&lt;code&gt;/review_dcell_model&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/Mjvolk3"&gt;Mjvolk3&lt;/a&gt;&lt;br&gt; Reviews old Dcell implementation files, comparing with newer Dango model, noting changes over time, and analyzing refactoring approaches for better code organization.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/zuplo/docs/raw/main/.claude/commands/use-stepper.md"&gt;&lt;code&gt;/use-stepper&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/zuplo"&gt;zuplo&lt;/a&gt;&lt;br&gt; Reformats documentation to use React Stepper component, transforming heading formats, applying proper indentation, and maintaining markdown compatibility with admonition formatting.&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;CLAUDE.md Files 📂&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;code&gt;CLAUDE.md&lt;/code&gt; files&lt;/strong&gt; are files that contain important guidelines and context-specfic information or instructions that help Claude Code to better understand your project and your coding standards&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Language-Specific&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/didalgolab/ai-intellij-plugin/raw/main/CLAUDE.md"&gt;&lt;code&gt;AI IntelliJ Plugin&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/didalgolab"&gt;didalgolab&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Provides comprehensive Gradle commands for IntelliJ plugin development with platform-specific coding patterns, detailed package structure guidelines, and clear internationalization standards.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/alexei-led/aws-mcp-server/raw/main/CLAUDE.md"&gt;&lt;code&gt;AWS MCP Server&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/alexei-led"&gt;alexei-led&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Features multiple Python environment setup options with detailed code style guidelines, comprehensive error handling recommendations, and security considerations for AWS CLI interactions.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/touchlab/DroidconKotlin/raw/main/CLAUDE.md"&gt;&lt;code&gt;DroidconKotlin&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/touchlab"&gt;touchlab&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Delivers comprehensive Gradle commands for cross-platform Kotlin Multiplatform development with clear module structure and practical guidance for dependency injection.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/expectedparrot/edsl/raw/main/CLAUDE.md"&gt;&lt;code&gt;EDSL&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/expectedparrot"&gt;expectedparrot&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Offers detailed build and test commands with strict code style enforcement, comprehensive testing requirements, and standardized development workflow using Black and mypy.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/giselles-ai/giselle/raw/main/CLAUDE.md"&gt;&lt;code&gt;Giselle&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/giselles-ai"&gt;giselles-ai&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Provides detailed build and test commands using pnpm and Vitest with strict code formatting requirements and comprehensive naming conventions for code consistency.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/hashintel/hash/raw/main/CLAUDE.md"&gt;&lt;code&gt;HASH&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/hashintel"&gt;hashintel&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; Features comprehensive repository structure breakdown with strong emphasis on coding standards, detailed Rust documentation guidelines, and systematic PR review process.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/inkline/inkline/raw/main/CLAUDE.md"&gt;&lt;code&gt;Inkline&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/inkline"&gt;inkline&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; Structures development workflow using pnpm with emphasis on TypeScript and Vue 3 Composition API, detailed component creation process, and comprehensive testing recommendations.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/mattgodbolt/jsbeeb/raw/main/CLAUDE.md"&gt;&lt;code&gt;JSBeeb&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/mattgodbolt"&gt;mattgodbolt&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;GPL-3.0&lt;br&gt; Provides development guide for JavaScript BBC Micro emulator with build and testing instructions, architecture documentation, and debugging workflows.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/LamoomAI/lamoom-python/raw/main/CLAUDE.md"&gt;&lt;code&gt;Lamoom Python&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/LamoomAI"&gt;LamoomAI&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;Apache-2.0&lt;br&gt; Serves as reference for production prompt engineering library with load balancing of AI Models, API documentation, and usage patterns with examples.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/langchain-ai/langgraphjs/raw/main/CLAUDE.md"&gt;&lt;code&gt;LangGraphJS&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/langchain-ai"&gt;langchain-ai&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Offers comprehensive build and test commands with detailed TypeScript style guidelines, layered library architecture, and monorepo structure using yarn workspaces.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/metabase/metabase/raw/master/CLAUDE.md"&gt;&lt;code&gt;Metabase&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/metabase"&gt;metabase&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;NOASSERTION&lt;br&gt; Details workflow for REPL-driven development in Clojure/ClojureScript with emphasis on incremental development, testing, and step-by-step approach for feature implementation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/sgcarstrends/backend/raw/main/CLAUDE.md"&gt;&lt;code&gt;SG Cars Trends Backend&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/sgcarstrends"&gt;sgcarstrends&lt;/a&gt;&lt;br&gt; Provides comprehensive structure for TypeScript monorepo projects with detailed commands for development, testing, deployment, and AWS/Cloudflare integration.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/spylang/spy/raw/main/CLAUDE.md"&gt;&lt;code&gt;SPy&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/spylang"&gt;spylang&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Enforces strict coding conventions with comprehensive testing guidelines, multiple code compilation options, and backend-specific test decorators for targeted filtering.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/KarpelesLab/tpl/raw/master/CLAUDE.md"&gt;&lt;code&gt;TPL&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/KarpelesLab"&gt;KarpelesLab&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Details Go project conventions with comprehensive error handling recommendations, table-driven testing approach guidelines, and modernization suggestions for latest Go features.&lt;/p&gt; 
&lt;h3&gt;Domain-Specific&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/Layr-Labs/avs-vibe-developer-guide/raw/master/CLAUDE.md"&gt;&lt;code&gt;AVS Vibe Developer Guide&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/Layr-Labs"&gt;Layr-Labs&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Structures AI-assisted EigenLayer AVS development workflow with consistent naming conventions for prompt files and established terminology standards for blockchain concepts.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/CommE2E/comm/raw/master/CLAUDE.md"&gt;&lt;code&gt;Comm&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/CommE2E"&gt;CommE2E&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;BSD-3-Clause&lt;br&gt; Serves as a development reference for E2E-encrypted messaging applications with code organization architecture, security implementation details, and testing procedures.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/badass-courses/course-builder/raw/main/CLAUDE.md"&gt;&lt;code&gt;Course Builder&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/badass-courses"&gt;badass-courses&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Enables real-time multiplayer capabilities for collaborative course creation with diverse tech stack integration and monorepo architecture using Turborepo.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/eastlondoner/cursor-tools/raw/main/CLAUDE.md"&gt;&lt;code&gt;Cursor Tools&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/eastlondoner"&gt;eastlondoner&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Creates a versatile AI command interface supporting multiple providers and models with flexible command options and browser automation through "Stagehand" feature.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/soramimi/Guitar/raw/master/CLAUDE.md"&gt;&lt;code&gt;Guitar&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/soramimi"&gt;soramimi&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;GPL-2.0&lt;br&gt; Serves as development guide for Guitar Git GUI Client with build commands for various platforms, code style guidelines for contributing, and project structure explanation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Fimeg/NetworkChronicles/raw/legacy-v1/CLAUDE.md"&gt;&lt;code&gt;Network Chronicles&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/Fimeg"&gt;Fimeg&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Presents detailed implementation plan for AI-driven game characters with technical specifications for LLM integration, character guidelines, and service discovery mechanics.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/different-ai/note-companion/raw/master/CLAUDE.md"&gt;&lt;code&gt;Note Companion&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/different-ai"&gt;different-ai&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Provides detailed styling isolation techniques for Obsidian plugins using Tailwind with custom prefix to prevent style conflicts and practical troubleshooting steps.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/ParetoSecurity/pareto-mac/raw/main/CLAUDE.md"&gt;&lt;code&gt;Pareto Mac&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/ParetoSecurity"&gt;ParetoSecurity&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;GPL-3.0&lt;br&gt; Serves as development guide for Mac security audit tool with build instructions, contribution guidelines, testing procedures, and workflow documentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/steadycursor/steadystart/raw/main/CLAUDE.md"&gt;&lt;code&gt;SteadyStart&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/steadycursor"&gt;steadycursor&lt;/a&gt;&lt;br&gt; Clear and direct instructives about style, permissions, Claude's "role", communications, and documentation of Claude Code sessions for other team members to stay abreast.&lt;/p&gt; 
&lt;h3&gt;Project Scaffolding &amp;amp; MCP&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/basicmachines-co/basic-memory/raw/main/CLAUDE.md"&gt;&lt;code&gt;Basic Memory&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/basicmachines-co"&gt;basicmachines-co&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;AGPL-3.0&lt;br&gt; Presents an innovative AI-human collaboration framework with Model Context Protocol for bidirectional LLM-markdown communication and flexible knowledge structure for complex projects.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/grahama1970/claude-code-mcp-enhanced/raw/main/CLAUDE.md"&gt;&lt;code&gt;claude-code-mcp-enhanced&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/grahama1970"&gt;grahama1970&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Provides detailed and emphatic instructions for Claude to follow as a coding agent, with testing guidance, code examples, and compliance checks.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Family-IT-Guy/perplexity-mcp/raw/main/CLAUDE.md"&gt;&lt;code&gt;Perplexity MCP&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/Family-IT-Guy"&gt;Family-IT-Guy&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;ISC&lt;br&gt; Offers clear step-by-step installation instructions with multiple configuration options, detailed troubleshooting guidance, and concise architecture overview of the MCP protocol.&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Official Documentation 🏛️&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Links to some of Anthropic's terrific documentation and resources regarding Claude Code&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!--lint disable double-link--&gt; 
&lt;p&gt;&lt;a href="https://docs.anthropic.com/en/docs/claude-code"&gt;&lt;code&gt;Anthropic Documentation&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/anthropics"&gt;Anthropic&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;©&lt;br&gt; The official documentation for Claude Code, including installation instructions, usage guidelines, API references, tutorials, examples, loads of information that I won't list individually. Like Claude Code, the documentation is frequently updated.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/anthropics/anthropic-quickstarts/raw/main/CLAUDE.md"&gt;&lt;code&gt;Anthropic Quickstarts&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/anthropics"&gt;Anthropic&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Offers comprehensive development guides for three distinct AI-powered demo projects with standardized workflows, strict code style guidelines, and containerization instructions.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/anthropics/claude-code-action/tree/main/examples"&gt;&lt;code&gt;Claude Code GitHub Actions&lt;/code&gt;&lt;/a&gt; &amp;nbsp; by &amp;nbsp; &lt;a href="https://github.com/anthropics"&gt;Anthropic&lt;/a&gt; &amp;nbsp;&amp;nbsp;⚖️&amp;nbsp;&amp;nbsp;MIT&lt;br&gt; Official GitHub Actions integration for Claude Code with examples and documentation for automating AI-powered workflows in CI/CD pipelines.&lt;/p&gt; 
&lt;h2&gt;Contributing 🌻&lt;/h2&gt; 
&lt;p&gt;Please note that this project is released with a &lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/code-of-conduct.md"&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project you agree to abide by its terms.&lt;/p&gt; 
&lt;p&gt;Regarding content, we especially welcome:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Proven, effective resources that follow best practices and may even be in use in production.&lt;/li&gt; 
 &lt;li&gt;Innovative, creative, or experimental workflows that perhaps are still being iterated upon, but have high potential value, and push the boundaries of Claude Code's documented capabilities and use cases.&lt;/li&gt; 
 &lt;li&gt;Additional libraries and tooling that are built on top of Claude Code and offer enhanced functionality.&lt;/li&gt; 
 &lt;li&gt;Applications of Claude Code outside of the traditional "coding assistant" context, e.g., CI/CD integration, testing, documentation, dev-ops, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/hesreallyhim/awesome-claude-code/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information on how to contribute to this project. Or, fire up Claude Code and invoke the &lt;code&gt;/project:add-new-resource&lt;/code&gt; command and let Claude walk you through it!&lt;/p&gt; 
&lt;p&gt;If you have any suggestions or thoughts on how to improve the repo, or how to best organize the list, feel free to start a Discussion topic. This is meant to be for the Claude Code community, and in general I prefer not to act on sole authority.&lt;/p&gt; 
&lt;h3&gt;A note about licenses&lt;/h3&gt; 
&lt;p&gt;Because simply listing a hyperlink does not qualify as redistribution, the license of the original source is not relevant to its inclusion. However, for posterity and convenience, we do host copies of all resources whose license permits it. Therefore, please include information about the resource's license. Additionally, take note: &lt;em&gt;if you do not include a LICENSE in your GitHub repo, then by default it is fully copyrighted and redistribution is not allowed&lt;/em&gt;. So, if you are intending to make an open source project, it's critical to pick from one of the many available open source licenses. This is just a reminder that without a LICENSE, your project is not open source (it's merely source-code-available) - it may of course still be included on this list, but this notice is to inform readers about the default rules regarding GitHub and LICENSE files. See &lt;a href="https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/licensing-a-repository"&gt;here&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>