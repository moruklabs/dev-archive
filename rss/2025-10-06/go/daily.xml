<rss version="2.0">
  <channel>
    <title>GitHub Go Daily Trending</title>
    <description>Daily Trending of Go in GitHub</description>
    <pubDate>Sun, 05 Oct 2025 01:34:34 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>netbirdio/netbird</title>
      <link>https://github.com/netbirdio/netbird</link>
      <description>&lt;p&gt;Connect your devices into a secure WireGuardÂ®-based overlay network with SSO, MFA and granular access controls.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;p align="center"&gt; &lt;img width="234" src="https://raw.githubusercontent.com/netbirdio/netbird/main/docs/media/logo-full.png" /&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;a href="https://img.shields.io/badge/license-BSD--3-blue)"&gt; &lt;img src="https://sonarcloud.io/api/project_badges/measure?project=netbirdio_netbird&amp;amp;metric=alert_status" /&gt; &lt;/a&gt; &lt;a href="https://github.com/netbirdio/netbird/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-BSD--3-blue" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://docs.netbird.io/slack-url"&gt; &lt;img src="https://img.shields.io/badge/slack-@netbird-red.svg?logo=slack" /&gt; &lt;/a&gt; &lt;a href="https://forum.netbird.io"&gt; &lt;img src="https://img.shields.io/badge/community forum-@netbird-red.svg?logo=discourse" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://gurubase.io/g/netbird"&gt; &lt;img src="https://img.shields.io/badge/Gurubase-Ask%20NetBird%20Guru-006BFF" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;strong&gt; Start using NetBird at &lt;a href="https://netbird.io/pricing"&gt;netbird.io&lt;/a&gt; &lt;br /&gt; See &lt;a href="https://netbird.io/docs/"&gt;Documentation&lt;/a&gt; &lt;br /&gt; Join our &lt;a href="https://docs.netbird.io/slack-url"&gt;Slack channel&lt;/a&gt; or our &lt;a href="https://forum.netbird.io"&gt;Community forum&lt;/a&gt; &lt;br /&gt; &lt;/strong&gt; &lt;br /&gt; &lt;a href="https://registry.terraform.io/providers/netbirdio/netbird/latest"&gt; New: NetBird terraform provider &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;strong&gt;NetBird combines a configuration-free peer-to-peer private network and a centralized access control system in a single platform, making it easy to create secure private networks for your organization or home.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Connect.&lt;/strong&gt; NetBird creates a WireGuard-based overlay network that automatically connects your machines over an encrypted tunnel, leaving behind the hassle of opening ports, complex firewall rules, VPN gateways, and so forth.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Secure.&lt;/strong&gt; NetBird enables secure remote access by applying granular access policies while allowing you to manage them intuitively from a single place. Works universally on any infrastructure.&lt;/p&gt; 
&lt;h3&gt;Open Source Network Security in a Single Platform&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/10cec749-bb56-4ab3-97af-4e38850108d2"&gt;https://github.com/user-attachments/assets/10cec749-bb56-4ab3-97af-4e38850108d2&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;NetBird on Lawrence Systems (Video)&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Kwrff6h0rEw"&gt;&lt;img src="https://img.youtube.com/vi/Kwrff6h0rEw/0.jpg" alt="Watch the video" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Key features&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Connectivity&lt;/th&gt; 
   &lt;th&gt;Management&lt;/th&gt; 
   &lt;th&gt;Security&lt;/th&gt; 
   &lt;th&gt;Automation&lt;/th&gt; 
   &lt;th&gt;Platforms&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Kernel WireGuard&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://github.com/netbirdio/dashboard"&gt;Admin Web UI&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/installation#running-net-bird-with-sso-login"&gt;SSO &amp;amp; MFA support&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/api"&gt;Public API&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Linux&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Peer-to-peer connections&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Auto peer discovery and configuration&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-network-access"&gt;Access control - groups &amp;amp; rules&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/register-machines-using-setup-keys"&gt;Setup keys for bulk network provisioning&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Mac&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Connection relay fallback&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/selfhosted/identity-providers"&gt;IdP integrations&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/audit-events-logging"&gt;Activity logging&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/selfhosted/selfhosted-quickstart"&gt;Self-hosting quickstart script&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Windows&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/routing-traffic-to-private-networks"&gt;Routes to external networks&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-dns-in-your-network"&gt;Private DNS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-posture-checks"&gt;Device posture checks&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] IdP groups sync with JWT&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Android&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] NAT traversal with BPF&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/add-users-to-your-network"&gt;Multiuser support&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Peer-to-peer encryption&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] iOS&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://netbird.io/knowledge-hub/the-first-quantum-resistant-mesh-vpn"&gt;Quantum-resistance with Rosenpass&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] OpenWRT&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/enforce-periodic-user-authentication"&gt;Periodic re-authentication&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/netbird-on-faas"&gt;Serverless&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Docker&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Quickstart with NetBird Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and install NetBird at &lt;a href="https://app.netbird.io/install"&gt;https://app.netbird.io/install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow the steps to sign-up with Google, Microsoft, GitHub or your email address.&lt;/li&gt; 
 &lt;li&gt;Check NetBird &lt;a href="https://app.netbird.io/"&gt;admin UI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Add more machines.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quickstart with self-hosted NetBird&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This is the quickest way to try self-hosted NetBird. It should take around 5 minutes to get started if you already have a public domain and a VM. Follow the &lt;a href="https://docs.netbird.io/selfhosted/selfhosted-guide#advanced-guide-with-a-custom-identity-provider"&gt;Advanced guide with a custom identity provider&lt;/a&gt; for installations with different IDPs.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Infrastructure requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Linux VM with at least &lt;strong&gt;1CPU&lt;/strong&gt; and &lt;strong&gt;2GB&lt;/strong&gt; of memory.&lt;/li&gt; 
 &lt;li&gt;The VM should be publicly accessible on TCP ports &lt;strong&gt;80&lt;/strong&gt; and &lt;strong&gt;443&lt;/strong&gt; and UDP ports: &lt;strong&gt;3478&lt;/strong&gt;, &lt;strong&gt;49152-65535&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Public domain&lt;/strong&gt; name pointing to the VM.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Software requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker installed on the VM with the docker-compose plugin (&lt;a href="https://docs.docker.com/engine/install/"&gt;Docker installation guide&lt;/a&gt;) or docker with docker-compose in version 2 or higher.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jqlang.github.io/jq/"&gt;jq&lt;/a&gt; installed. In most distributions Usually available in the official repositories and can be installed with &lt;code&gt;sudo apt install jq&lt;/code&gt; or &lt;code&gt;sudo yum install jq&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://curl.se/"&gt;curl&lt;/a&gt; installed. Usually available in the official repositories and can be installed with &lt;code&gt;sudo apt install curl&lt;/code&gt; or &lt;code&gt;sudo yum install curl&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and run the installation script:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export NETBIRD_DOMAIN=netbird.example.com; curl -fsSL https://github.com/netbirdio/netbird/releases/latest/download/getting-started-with-zitadel.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Once finished, you can manage the resources via &lt;code&gt;docker-compose&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;A bit on NetBird internals&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every machine in the network runs &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/client/"&gt;NetBird Agent (or Client)&lt;/a&gt; that manages WireGuard.&lt;/li&gt; 
 &lt;li&gt;Every agent connects to &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/management/"&gt;Management Service&lt;/a&gt; that holds network state, manages peer IPs, and distributes network updates to agents (peers).&lt;/li&gt; 
 &lt;li&gt;NetBird agent uses WebRTC ICE implemented in &lt;a href="https://github.com/pion/ice"&gt;pion/ice library&lt;/a&gt; to discover connection candidates when establishing a peer-to-peer connection between machines.&lt;/li&gt; 
 &lt;li&gt;Connection candidates are discovered with the help of &lt;a href="https://en.wikipedia.org/wiki/STUN"&gt;STUN&lt;/a&gt; servers.&lt;/li&gt; 
 &lt;li&gt;Agents negotiate a connection through &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/signal/"&gt;Signal Service&lt;/a&gt; passing p2p encrypted messages with candidates.&lt;/li&gt; 
 &lt;li&gt;Sometimes the NAT traversal is unsuccessful due to strict NATs (e.g. mobile carrier-grade NAT) and a p2p connection isn't possible. When this occurs the system falls back to a relay server called &lt;a href="https://en.wikipedia.org/wiki/Traversal_Using_Relays_around_NAT"&gt;TURN&lt;/a&gt;, and a secure WireGuard tunnel is established via the TURN server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/coturn/coturn"&gt;Coturn&lt;/a&gt; is the one that has been successfully used for STUN and TURN in NetBird setups.&lt;/p&gt; 
&lt;p float="left" align="middle"&gt; &lt;img src="https://docs.netbird.io/docs-static/img/architecture/high-level-dia.png" width="700" /&gt; &lt;/p&gt; 
&lt;p&gt;See a complete &lt;a href="https://docs.netbird.io/about-netbird/how-netbird-works#architecture"&gt;architecture overview&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Community projects&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/physk/netbird-installer"&gt;NetBird installer script&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://galaxy.ansible.com/ui/repo/published/dominion_solutions/netbird/"&gt;NetBird ansible collection by Dominion Solutions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;main&lt;/code&gt; branch may be in an &lt;em&gt;unstable or even broken state&lt;/em&gt; during development. For stable versions, see &lt;a href="https://github.com/netbirdio/netbird/releases"&gt;releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Support acknowledgement&lt;/h3&gt; 
&lt;p&gt;In November 2022, NetBird joined the &lt;a href="https://www.forschung-it-sicherheit-kommunikationssysteme.de/foerderung/bekanntmachungen/startup-secure"&gt;StartUpSecure program&lt;/a&gt; sponsored by The Federal Ministry of Education and Research of The Federal Republic of Germany. Together with &lt;a href="https://cispa.de/en"&gt;CISPA Helmholtz Center for Information Security&lt;/a&gt; NetBird brings the security best practices and simplicity to private networking.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/700848/203091324-c6d311a0-22b5-4b05-a288-91cbc6cdcc46.png" alt="CISPA_Logo_BLACK_EN_RZ_RGB (1)" /&gt;&lt;/p&gt; 
&lt;h3&gt;Testimonials&lt;/h3&gt; 
&lt;p&gt;We use open-source technologies like &lt;a href="https://www.wireguard.com/"&gt;WireGuardÂ®&lt;/a&gt;, &lt;a href="https://github.com/pion/ice"&gt;Pion ICE (WebRTC)&lt;/a&gt;, &lt;a href="https://github.com/coturn/coturn"&gt;Coturn&lt;/a&gt;, and &lt;a href="https://rosenpass.eu"&gt;Rosenpass&lt;/a&gt;. We very much appreciate the work these guys are doing and we'd greatly appreciate if you could support them in any way (e.g., by giving a star or a contribution).&lt;/p&gt; 
&lt;h3&gt;Legal&lt;/h3&gt; 
&lt;p&gt;This repository is licensed under BSD-3-Clause license that applies to all parts of the repository except for the directories management/, signal/ and relay/. Those directories are licensed under the GNU Affero General Public License version 3.0 (AGPLv3). See the respective LICENSE files inside each directory.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;WireGuard&lt;/em&gt; and the &lt;em&gt;WireGuard&lt;/em&gt; logo are &lt;a href="https://www.wireguard.com/trademark-policy/"&gt;registered trademarks&lt;/a&gt; of Jason A. Donenfeld.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>istio/istio</title>
      <link>https://github.com/istio/istio</link>
      <description>&lt;p&gt;Connect, secure, control, and observe services.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Istio&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://bestpractices.coreinfrastructure.org/projects/1395"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/1395/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/istio/istio"&gt;&lt;img src="https://goreportcard.com/badge/github.com/istio/istio" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/istio.io/istio"&gt;&lt;img src="https://godoc.org/istio.io/istio?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;a href="https://istio.io/"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/cncf/artwork/refs/heads/main/projects/istio/icon/color/istio-icon-color.svg" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/istio/istio/raw/master/logo/istio-bluelogo-whitebackground-unframed.svg" /&gt; 
  &lt;img title="Istio" height="100" width="100" alt="Istio logo" src="https://github.com/istio/istio/raw/master/logo/istio-bluelogo-whitebackground-unframed.svg?sanitize=true" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;p&gt;Istio is an open source service mesh that layers transparently onto existing distributed applications. Istioâs powerful features provide a uniform and more efficient way to secure, connect, and monitor services. Istio is the path to load balancing, service-to-service authentication, and monitoring â with few or no service code changes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For in-depth information about how to use Istio, visit &lt;a href="https://istio.io"&gt;istio.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;To ask questions and get assistance from our community, visit &lt;a href="https://github.com/istio/istio/discussions"&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;To learn how to participate in our overall community, visit &lt;a href="https://istio.io/about/community"&gt;our community page&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In this README:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/#repositories"&gt;Repositories&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/#issue-management"&gt;Issue management&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In addition, here are some other documents you may wish to read:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/istio/community#istio-community"&gt;Istio Community&lt;/a&gt; - describes how to get involved and contribute to the Istio project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/istio/istio/wiki/Preparing-for-Development"&gt;Istio Developer's Guide&lt;/a&gt; - explains how to set up and use an Istio development environment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/istio/istio/wiki/Development-Conventions"&gt;Project Conventions&lt;/a&gt; - describes the conventions we use within the code base&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/istio/istio/wiki/Writing-Fast-and-Lean-Code"&gt;Creating Fast and Lean Code&lt;/a&gt; - performance-oriented advice and guidelines for the code base&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You'll find many other useful documents on our &lt;a href="https://github.com/istio/istio/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://istio.io/latest/docs/concepts/what-is-istio/"&gt;Istio&lt;/a&gt; is an open platform for providing a uniform way to &lt;a href="https://istio.io/latest/docs/examples/microservices-istio/"&gt;integrate microservices&lt;/a&gt;, manage &lt;a href="https://istio.io/latest/docs/concepts/traffic-management/"&gt;traffic flow&lt;/a&gt; across microservices, enforce policies and aggregate telemetry data. Istio's control plane provides an abstraction layer over the underlying cluster management platform, such as Kubernetes.&lt;/p&gt; 
&lt;p&gt;Istio is composed of these components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Envoy&lt;/strong&gt; - Sidecar proxies per microservice to handle ingress/egress traffic between services in the cluster and from a service to external services. The proxies form a &lt;em&gt;secure microservice mesh&lt;/em&gt; providing a rich set of functions like discovery, rich layer-7 routing, circuit breakers, policy enforcement and telemetry recording/reporting functions.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Note: The service mesh is not an overlay network. It simplifies and enhances how microservices in an application talk to each other over the network provided by the underlying platform.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Istiod&lt;/strong&gt; - The Istio control plane. It provides service discovery, configuration and certificate management. It consists of the following sub-components:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Pilot&lt;/strong&gt; - Responsible for configuring the proxies at runtime.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Citadel&lt;/strong&gt; - Responsible for certificate issuance and rotation.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Galley&lt;/strong&gt; - Responsible for validating, ingesting, aggregating, transforming and distributing config within Istio.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Operator&lt;/strong&gt; - The component provides user friendly options to operate the Istio service mesh.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Repositories&lt;/h2&gt; 
&lt;p&gt;The Istio project is divided across a few GitHub repositories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/api"&gt;istio/api&lt;/a&gt;. This repository defines component-level APIs and common configuration formats for the Istio platform.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/community"&gt;istio/community&lt;/a&gt;. This repository contains information on the Istio community, including the various documents that govern the Istio open source project.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/README.md"&gt;istio/istio&lt;/a&gt;. This is the main code repository. It hosts Istio's core components, install artifacts, and sample programs. It includes:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/istioctl/"&gt;istioctl&lt;/a&gt;. This directory contains code for the &lt;a href="https://istio.io/latest/docs/reference/commands/istioctl/"&gt;&lt;em&gt;istioctl&lt;/em&gt;&lt;/a&gt; command line utility.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/pilot/"&gt;pilot&lt;/a&gt;. This directory contains platform-specific code to populate the &lt;a href="https://istio.io/docs/concepts/traffic-management/#pilot"&gt;abstract service model&lt;/a&gt;, dynamically reconfigure the proxies when the application topology changes, as well as translate &lt;a href="https://istio.io/latest/docs/reference/config/networking/"&gt;routing rules&lt;/a&gt; into proxy specific configuration.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/istio/istio/master/security/"&gt;security&lt;/a&gt;. This directory contains &lt;a href="https://istio.io/latest/docs/concepts/security/"&gt;security&lt;/a&gt; related code, including Citadel (acting as Certificate Authority), citadel agent, etc.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/proxy"&gt;istio/proxy&lt;/a&gt;. The Istio proxy contains extensions to the &lt;a href="https://github.com/envoyproxy/envoy"&gt;Envoy proxy&lt;/a&gt; (in the form of Envoy filters) that support authentication, authorization, and telemetry collection.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/ztunnel"&gt;istio/ztunnel&lt;/a&gt;. The repository contains the Rust implementation of the ztunnel component of Ambient mesh.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/istio/client-go"&gt;istio/client-go&lt;/a&gt;. This repository defines auto-generated Kubernetes clients for interacting with Istio resources programmatically.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Only the &lt;code&gt;istio/api&lt;/code&gt; and &lt;code&gt;istio/client-go&lt;/code&gt; repositories expose stable interfaces intended for direct usage as libraries.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Issue management&lt;/h2&gt; 
&lt;p&gt;We use GitHub to track all of our bugs and feature requests. Each issue we track has a variety of metadata:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Epic&lt;/strong&gt;. An epic represents a feature area for Istio as a whole. Epics are fairly broad in scope and are basically product-level things. Each issue is ultimately part of an epic.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Milestone&lt;/strong&gt;. Each issue is assigned a milestone. This is 0.1, 0.2, ..., or 'Nebulous Future'. The milestone indicates when we think the issue should get addressed.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Priority&lt;/strong&gt;. Each issue has a priority which is represented by the column in the &lt;a href="https://github.com/orgs/istio/projects/6"&gt;Prioritization&lt;/a&gt; project. Priority can be one of P0, P1, P2, or &amp;gt;P2. The priority indicates how important it is to address the issue within the milestone. P0 says that the milestone cannot be considered achieved if the issue isn't resolved.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/cncf/artwork/refs/heads/main/other/cncf/horizontal/color-whitetext/cncf-color-whitetext.svg" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/cncf/artwork/master/other/cncf/horizontal/color/cncf-color.svg" /&gt; 
  &lt;img width="300" alt="Cloud Native Computing Foundation logo" src="https://raw.githubusercontent.com/cncf/artwork/refs/heads/main/other/cncf/horizontal/color-whitetext/cncf-color-whitetext.svg?sanitize=true" /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;Istio is a &lt;a href="https://cncf.io"&gt;Cloud Native Computing Foundation&lt;/a&gt; project.&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>NVIDIA/gpu-operator</title>
      <link>https://github.com/NVIDIA/gpu-operator</link>
      <description>&lt;p&gt;NVIDIA GPU Operator creates, configures, and manages GPUs in Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/NVIDIA/gpu-operator/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/NVIDIA/gpu-operator?style=flat-square" alt="license" /&gt;&lt;/a&gt; &lt;a href="https://gitlab.com/nvidia/kubernetes/gpu-operator/-/pipelines"&gt;&lt;img src="https://gitlab.com/nvidia/kubernetes/gpu-operator/badges/master/pipeline.svg?sanitize=true" alt="pipeline status" /&gt;&lt;/a&gt; &lt;a href="https://gitlab.com/nvidia/kubernetes/gpu-operator/-/pipelines"&gt;&lt;img src="https://gitlab.com/nvidia/kubernetes/gpu-operator/badges/master/coverage.svg?sanitize=true" alt="coverage report" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;NVIDIA GPU Operator&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://www.nvidia.com/content/dam/en-zz/Solutions/Data-Center/egx/nvidia-egx-platform-gold-image-full-2c50-d@2x.jpg" alt="nvidia-gpu-operator" /&gt;&lt;/p&gt; 
&lt;p&gt;Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/"&gt;device plugin framework&lt;/a&gt;. However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors. The NVIDIA GPU Operator uses the &lt;a href="https://cloud.redhat.com/blog/introducing-the-operator-framework"&gt;operator framework&lt;/a&gt; within Kubernetes to automate the management of all NVIDIA software components needed to provision GPU. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling, &lt;a href="https://developer.nvidia.com/dcgm"&gt;DCGM&lt;/a&gt; based monitoring and others.&lt;/p&gt; 
&lt;h2&gt;Audience and Use-Cases&lt;/h2&gt; 
&lt;p&gt;The GPU Operator allows administrators of Kubernetes clusters to manage GPU nodes just like CPU nodes in the cluster. Instead of provisioning a special OS image for GPU nodes, administrators can rely on a standard OS image for both CPU and GPU nodes and then rely on the GPU Operator to provision the required software components for GPUs.&lt;/p&gt; 
&lt;p&gt;Note that the GPU Operator is specifically useful for scenarios where the Kubernetes cluster needs to scale quickly - for example provisioning additional GPU nodes on the cloud or on-prem and managing the lifecycle of the underlying software components. Since the GPU Operator runs everything as containers including NVIDIA drivers, the administrators can easily swap various components - simply by starting or stopping containers.&lt;/p&gt; 
&lt;h2&gt;Product Documentation&lt;/h2&gt; 
&lt;p&gt;For information on platform support and getting started, visit the official documentation &lt;a href="https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/overview.html"&gt;repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Webinar&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://info.nvidia.com/how-to-use-gpus-on-kubernetes-webinar.html"&gt;How to easily use GPUs on Kubernetes&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/NVIDIA/gpu-operator/raw/master/CONTRIBUTING.md"&gt;Read the document on contributions&lt;/a&gt;. You can contribute by opening a &lt;a href="https://help.github.com/en/articles/about-pull-requests"&gt;pull request&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support and Getting Help&lt;/h2&gt; 
&lt;p&gt;Please open &lt;a href="https://github.com/NVIDIA/gpu-operator/issues/new"&gt;an issue on the GitHub project&lt;/a&gt; for any questions. Your feedback is appreciated.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fyne-io/fyne</title>
      <link>https://github.com/fyne-io/fyne</link>
      <description>&lt;p&gt;Cross platform GUI toolkit in Go inspired by Material Design&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://pkg.go.dev/fyne.io/fyne/v2?tab=doc" title="Go API Reference" rel="nofollow"&gt;&lt;img src="https://img.shields.io/badge/go-documentation-blue.svg?style=flat" alt="Go API Reference" /&gt;&lt;/a&gt; &lt;a href="https://img.shields.io/github/v/release/fyne-io/fyne?include_prereleases" title="Latest Release" rel="nofollow"&gt;&lt;img src="https://img.shields.io/github/v/release/fyne-io/fyne?include_prereleases" alt="Latest Release" /&gt;&lt;/a&gt; &lt;a href="https://gophers.slack.com/messages/fyne"&gt;&lt;img src="https://img.shields.io/badge/join-us%20on%20slack-gray.svg?longCache=true&amp;amp;logo=slack&amp;amp;colorB=blue" alt="Join us on Slack" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://goreportcard.com/report/fyne.io/fyne/v2"&gt;&lt;img src="https://goreportcard.com/badge/fyne.io/fyne/v2" alt="Code Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/fyne-io/fyne/actions"&gt;&lt;img src="https://github.com/fyne-io/fyne/workflows/Platform%20Tests/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/fyne-io/fyne?branch=develop"&gt;&lt;img src="https://coveralls.io/repos/github/fyne-io/fyne/badge.svg?branch=develop" alt="Coverage Status" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;About&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://fyne.io"&gt;Fyne&lt;/a&gt; is an easy-to-use UI toolkit and app API written in Go. It is designed to build applications that run on desktop and mobile devices with a single codebase.&lt;/p&gt; 
&lt;h1&gt;Prerequisites&lt;/h1&gt; 
&lt;p&gt;To develop apps using Fyne you will need Go version 1.17 or later, a C compiler and your system's development tools. If you're not sure if that's all installed or you don't know how then check out our &lt;a href="https://fyne.io/develop/"&gt;Getting Started&lt;/a&gt; document.&lt;/p&gt; 
&lt;p&gt;Using the standard go tools you can install Fyne's core library using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go get fyne.io/fyne/v2@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After importing a new module, run the following command before compiling the code for the first time. Avoid running it before writing code that uses the module to prevent accidental removal of dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go mod tidy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Widget demo&lt;/h1&gt; 
&lt;p&gt;To run a showcase of the features of Fyne execute the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install fyne.io/fyne/v2/cmd/fyne_demo@latest
fyne_demo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And you should see something like this (after you click a few buttons):&lt;/p&gt; 
&lt;p align="center" markdown="1" style="max-width: 100%"&gt; &lt;img src="https://raw.githubusercontent.com/fyne-io/fyne/master/img/widgets-dark.png" width="752" alt="Fyne Demo Dark Theme" style="max-width: 100%" /&gt; &lt;/p&gt; 
&lt;p&gt;Or if you are using the light theme:&lt;/p&gt; 
&lt;p align="center" markdown="1" style="max-width: 100%"&gt; &lt;img src="https://raw.githubusercontent.com/fyne-io/fyne/master/img/widgets-light.png" width="752" alt="Fyne Demo Light Theme" style="max-width: 100%" /&gt; &lt;/p&gt; 
&lt;p&gt;And even running on a mobile device:&lt;/p&gt; 
&lt;p align="center" markdown="1" style="max-width: 100%"&gt; &lt;img src="https://raw.githubusercontent.com/fyne-io/fyne/master/img/widgets-mobile-light.png" width="348" alt="Fyne Demo Mobile Light Theme" style="max-width: 100%" /&gt; &lt;/p&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;p&gt;Fyne is designed to be really easy to code with. If you have followed the prerequisite steps above then all you need is a Go IDE (or a text editor).&lt;/p&gt; 
&lt;p&gt;Open a new file and you're ready to write your first app!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"fyne.io/fyne/v2/app"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/widget"
)

func main() {
	a := app.New()
	w := a.NewWindow("Hello")

	hello := widget.NewLabel("Hello Fyne!")
	w.SetContent(container.NewVBox(
		hello,
		widget.NewButton("Hi!", func() {
			hello.SetText("Welcome :)")
		}),
	))

	w.ShowAndRun()
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And you can run that simply as:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; The first compilation of Fyne on Windows &lt;em&gt;can&lt;/em&gt; take up to 10 minutes, depending on your hardware. Subsequent builds will be fast.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;It should look like this:&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;table cellpadding="0" cellspacing="0" style="margin: auto; border-collapse: collapse;"&gt; 
  &lt;tbody&gt;
   &lt;tr style="border: none;"&gt;
    &lt;td style="border: none;"&gt; &lt;img src="https://raw.githubusercontent.com/fyne-io/fyne/master/img/hello-light.png" width="207" alt="Fyne Hello Dark Theme" /&gt; &lt;/td&gt;
    &lt;td style="border: none;"&gt; &lt;img src="https://raw.githubusercontent.com/fyne-io/fyne/master/img/hello-dark.png" width="207" alt="Fyne Hello Dark Theme" /&gt; &lt;/td&gt;
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h2&gt;Run in mobile simulation&lt;/h2&gt; 
&lt;p&gt;There is a helpful mobile simulation mode that gives a hint of how your app would work on a mobile device:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go run -tags mobile main.go
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Another option is to use &lt;code&gt;fyne&lt;/code&gt; command, see &lt;a href="https://raw.githubusercontent.com/fyne-io/fyne/master/#packaging-for-mobile"&gt;Packaging for mobile&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Installing&lt;/h1&gt; 
&lt;p&gt;Using &lt;code&gt;go install&lt;/code&gt; will copy the executable into your go &lt;code&gt;bin&lt;/code&gt; dir. To install the application with icons etc into your operating system's standard application location you can use the fyne utility and the "install" subcommand.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install fyne.io/fyne/v2/cmd/fyne@latest
fyne install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Packaging for mobile&lt;/h1&gt; 
&lt;p&gt;To run on a mobile device it is necessary to package up the application. To do this we can use the fyne utility "package" subcommand. You will need to add appropriate parameters as prompted, but the basic command is shown below. Once packaged you can install using the platform development tools or the fyne "install" subcommand.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;fyne package -os android -appID my.domain.appname
fyne install -os android
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The built Android application can run either in a real device or an Android emulator. However, building for iOS is slightly different. If the "-os" argument is "ios", it is build only for a real iOS device. Specify "-os" to "iossimulator" allows the application be able to run in an iOS simulator:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;fyne package -os ios -appID my.domain.appname
fyne package -os iossimulator -appID my.domain.appname
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Preparing a release&lt;/h1&gt; 
&lt;p&gt;Using the fyne utility "release" subcommand you can package up your app for release to app stores and market places. Make sure you have the standard build tools installed and have followed the platform documentation for setting up accounts and signing. Then you can execute something like the following, notice the &lt;code&gt;-os ios&lt;/code&gt; parameter allows building an iOS app from macOS computer. Other combinations work as well :)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ fyne release -os ios -certificate "Apple Distribution" -profile "My App Distribution" -appID "com.example.myapp"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above command will create a '.ipa' file that can then be uploaded to the iOS App Store.&lt;/p&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;p&gt;More documentation is available at the &lt;a href="https://developer.fyne.io/"&gt;Fyne developer website&lt;/a&gt; or on &lt;a href="https://pkg.go.dev/fyne.io/fyne/v2?tab=doc"&gt;pkg.go.dev&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Examples&lt;/h1&gt; 
&lt;p&gt;You can find many example applications in the &lt;a href="https://github.com/fyne-io/examples/"&gt;examples repository&lt;/a&gt;. Alternatively a list of applications using fyne can be found at &lt;a href="https://apps.fyne.io/"&gt;our website&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Shipping the Fyne Toolkit&lt;/h1&gt; 
&lt;p&gt;All Fyne apps will work without pre-installed libraries, this is one reason the apps are so portable. However, if looking to support Fyne in a bigger way on your operating system then you can install some utilities that help to make a more complete experience.&lt;/p&gt; 
&lt;h2&gt;Additional apps&lt;/h2&gt; 
&lt;p&gt;It is recommended that you install the following additional apps:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;app&lt;/th&gt; 
   &lt;th&gt;go install&lt;/th&gt; 
   &lt;th&gt;description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;fyne_settings&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;fyne.io/fyne/v2/cmd/fyne_settings&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;A GUI for managing your global Fyne settings like theme and scaling&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;apps&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;github.com/fyne-io/apps&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;A graphical installer for the Fyne apps listed at &lt;a href="https://apps.fyne.io"&gt;https://apps.fyne.io&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;These are optional applications but can help to create a more complete desktop experience.&lt;/p&gt; 
&lt;h2&gt;FyneDesk (Linux / BSD)&lt;/h2&gt; 
&lt;p&gt;To go all the way with Fyne on your desktop / laptop computer you could install &lt;a href="https://github.com/fyshos/fynedesk"&gt;FyneDesk&lt;/a&gt; as well :)&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://fyshos.com/img/desktop.png" alt="FyneDesk screenshopt in dark mode" /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jackc/pgx</title>
      <link>https://github.com/jackc/pgx</link>
      <description>&lt;p&gt;PostgreSQL driver and toolkit for Go&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/jackc/pgx/v5"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/jackc/pgx/v5.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jackc/pgx/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/jackc/pgx/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;pgx - PostgreSQL Driver and Toolkit&lt;/h1&gt; 
&lt;p&gt;pgx is a pure Go driver and toolkit for PostgreSQL.&lt;/p&gt; 
&lt;p&gt;The pgx driver is a low-level, high performance interface that exposes PostgreSQL-specific features such as &lt;code&gt;LISTEN&lt;/code&gt; / &lt;code&gt;NOTIFY&lt;/code&gt; and &lt;code&gt;COPY&lt;/code&gt;. It also includes an adapter for the standard &lt;code&gt;database/sql&lt;/code&gt; interface.&lt;/p&gt; 
&lt;p&gt;The toolkit component is a related set of packages that implement PostgreSQL functionality such as parsing the wire protocol and type mapping between PostgreSQL and Go. These underlying packages can be used to implement alternative drivers, proxies, load balancers, logical replication clients, etc.&lt;/p&gt; 
&lt;h2&gt;Example Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"context"
	"fmt"
	"os"

	"github.com/jackc/pgx/v5"
)

func main() {
	// urlExample := "postgres://username:password@localhost:5432/database_name"
	conn, err := pgx.Connect(context.Background(), os.Getenv("DATABASE_URL"))
	if err != nil {
		fmt.Fprintf(os.Stderr, "Unable to connect to database: %v\n", err)
		os.Exit(1)
	}
	defer conn.Close(context.Background())

	var name string
	var weight int64
	err = conn.QueryRow(context.Background(), "select name, weight from widgets where id=$1", 42).Scan(&amp;amp;name, &amp;amp;weight)
	if err != nil {
		fmt.Fprintf(os.Stderr, "QueryRow failed: %v\n", err)
		os.Exit(1)
	}

	fmt.Println(name, weight)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/jackc/pgx/wiki/Getting-started-with-pgx"&gt;getting started guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support for approximately 70 different PostgreSQL types&lt;/li&gt; 
 &lt;li&gt;Automatic statement preparation and caching&lt;/li&gt; 
 &lt;li&gt;Batch queries&lt;/li&gt; 
 &lt;li&gt;Single-round trip query mode&lt;/li&gt; 
 &lt;li&gt;Full TLS connection control&lt;/li&gt; 
 &lt;li&gt;Binary format support for custom types (allows for much quicker encoding/decoding)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;COPY&lt;/code&gt; protocol support for faster bulk data loads&lt;/li&gt; 
 &lt;li&gt;Tracing and logging support&lt;/li&gt; 
 &lt;li&gt;Connection pool with after-connect hook for arbitrary connection setup&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LISTEN&lt;/code&gt; / &lt;code&gt;NOTIFY&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Conversion of PostgreSQL arrays to Go slice mappings for integers, floats, and strings&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hstore&lt;/code&gt; support&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;json&lt;/code&gt; and &lt;code&gt;jsonb&lt;/code&gt; support&lt;/li&gt; 
 &lt;li&gt;Maps &lt;code&gt;inet&lt;/code&gt; and &lt;code&gt;cidr&lt;/code&gt; PostgreSQL types to &lt;code&gt;netip.Addr&lt;/code&gt; and &lt;code&gt;netip.Prefix&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Large object support&lt;/li&gt; 
 &lt;li&gt;NULL mapping to pointer to pointer&lt;/li&gt; 
 &lt;li&gt;Supports &lt;code&gt;database/sql.Scanner&lt;/code&gt; and &lt;code&gt;database/sql/driver.Valuer&lt;/code&gt; interfaces for custom types&lt;/li&gt; 
 &lt;li&gt;Notice response handling&lt;/li&gt; 
 &lt;li&gt;Simulated nested transactions with savepoints&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Choosing Between the pgx and database/sql Interfaces&lt;/h2&gt; 
&lt;p&gt;The pgx interface is faster. Many PostgreSQL specific features such as &lt;code&gt;LISTEN&lt;/code&gt; / &lt;code&gt;NOTIFY&lt;/code&gt; and &lt;code&gt;COPY&lt;/code&gt; are not available through the &lt;code&gt;database/sql&lt;/code&gt; interface.&lt;/p&gt; 
&lt;p&gt;The pgx interface is recommended when:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The application only targets PostgreSQL.&lt;/li&gt; 
 &lt;li&gt;No other libraries that require &lt;code&gt;database/sql&lt;/code&gt; are in use.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;It is also possible to use the &lt;code&gt;database/sql&lt;/code&gt; interface and convert a connection to the lower-level pgx interface as needed.&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/jackc/pgx/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for setup instructions.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;See the presentation at Golang Estonia, &lt;a href="https://www.youtube.com/watch?v=sXMSWhcHCf8"&gt;PGX Top to Bottom&lt;/a&gt; for a description of pgx architecture.&lt;/p&gt; 
&lt;h2&gt;Supported Go and PostgreSQL Versions&lt;/h2&gt; 
&lt;p&gt;pgx supports the same versions of Go and PostgreSQL that are supported by their respective teams. For &lt;a href="https://golang.org/doc/devel/release.html#policy"&gt;Go&lt;/a&gt; that is the two most recent major releases and for &lt;a href="https://www.postgresql.org/support/versioning/"&gt;PostgreSQL&lt;/a&gt; the major releases in the last 5 years. This means pgx supports Go 1.24 and higher and PostgreSQL 13 and higher. pgx also is tested against the latest version of &lt;a href="https://www.cockroachlabs.com/product/"&gt;CockroachDB&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Version Policy&lt;/h2&gt; 
&lt;p&gt;pgx follows semantic versioning for the documented public API on stable releases. &lt;code&gt;v5&lt;/code&gt; is the latest stable major version.&lt;/p&gt; 
&lt;h2&gt;PGX Family Libraries&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://github.com/jackc/pglogrepl"&gt;github.com/jackc/pglogrepl&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;pglogrepl provides functionality to act as a client for PostgreSQL logical replication.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/jackc/pgmock"&gt;github.com/jackc/pgmock&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;pgmock offers the ability to create a server that mocks the PostgreSQL wire protocol. This is used internally to test pgx by purposely inducing unusual errors. pgproto3 and pgmock together provide most of the foundational tooling required to implement a PostgreSQL proxy or MitM (such as for a custom connection pooler).&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/jackc/tern"&gt;github.com/jackc/tern&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;tern is a stand-alone SQL migration system.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/jackc/pgerrcode"&gt;github.com/jackc/pgerrcode&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;pgerrcode contains constants for the PostgreSQL error codes.&lt;/p&gt; 
&lt;h2&gt;Adapters for 3rd Party Types&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-gofrs-uuid"&gt;github.com/jackc/pgx-gofrs-uuid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-shopspring-decimal"&gt;github.com/jackc/pgx-shopspring-decimal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twpayne/pgx-geos"&gt;github.com/twpayne/pgx-geos&lt;/a&gt; (&lt;a href="https://postgis.net/"&gt;PostGIS&lt;/a&gt; and &lt;a href="https://libgeos.org/"&gt;GEOS&lt;/a&gt; via &lt;a href="https://github.com/twpayne/go-geos"&gt;go-geos&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vgarvardt/pgx-google-uuid"&gt;github.com/vgarvardt/pgx-google-uuid&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adapters for 3rd Party Tracers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackhopner/pgx-xray-tracer"&gt;github.com/jackhopner/pgx-xray-tracer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/exaring/otelpgx"&gt;github.com/exaring/otelpgx&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adapters for 3rd Party Loggers&lt;/h2&gt; 
&lt;p&gt;These adapters can be used with the tracelog package.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-go-kit-log"&gt;github.com/jackc/pgx-go-kit-log&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-log15"&gt;github.com/jackc/pgx-log15&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-logrus"&gt;github.com/jackc/pgx-logrus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-zap"&gt;github.com/jackc/pgx-zap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-zerolog"&gt;github.com/jackc/pgx-zerolog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcosta74/pgx-slog"&gt;github.com/mcosta74/pgx-slog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kataras/pgx-golog"&gt;github.com/kataras/pgx-golog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;3rd Party Libraries with PGX Support&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://github.com/pashagolub/pgxmock"&gt;github.com/pashagolub/pgxmock&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;pgxmock is a mock library implementing pgx interfaces. pgxmock has one and only purpose - to simulate pgx behavior in tests, without needing a real database connection.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/georgysavva/scany"&gt;github.com/georgysavva/scany&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Library for scanning data from a database into Go structs and more.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/vingarcia/ksql"&gt;github.com/vingarcia/ksql&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;A carefully designed SQL client for making using SQL easier, more productive, and less error-prone on Golang.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/otan/gopgkrb5"&gt;github.com/otan/gopgkrb5&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Adds GSSAPI / Kerberos authentication support.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/wcamarao/pmx"&gt;github.com/wcamarao/pmx&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Explicit data mapping and scanning library for Go structs and slices.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/stephenafamo/scan"&gt;github.com/stephenafamo/scan&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Type safe and flexible package for scanning database data into Go types. Supports, structs, maps, slices and custom mapping functions.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/z0ne-dev/mgx"&gt;github.com/z0ne-dev/mgx&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Code first migration library for native pgx (no database/sql abstraction).&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/amirsalarsafaei/sqlc-pgx-monitoring"&gt;github.com/amirsalarsafaei/sqlc-pgx-monitoring&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;A database monitoring/metrics library for pgx and sqlc. Trace, log and monitor your sqlc query performance using OpenTelemetry.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/nikolayk812/pgx-outbox"&gt;https://github.com/nikolayk812/pgx-outbox&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Simple Golang implementation for transactional outbox pattern for PostgreSQL using jackc/pgx driver.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/Arlandaren/pgxWrappy"&gt;https://github.com/Arlandaren/pgxWrappy&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Simplifies working with the pgx library, providing convenient scanning of nested structures.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/KoNekoD/pgx-colon-query-rewriter"&gt;https://github.com/KoNekoD/pgx-colon-query-rewriter&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Implementation of the pgx query rewriter to use ':' instead of '@' in named query parameters.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>evcc-io/evcc</title>
      <link>https://github.com/evcc-io/evcc</link>
      <description>&lt;p&gt;solar charging âï¸ð&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;evcc ðâï¸&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/evcc-io/evcc/actions/workflows/nightly.yml"&gt;&lt;img src="https://github.com/evcc-io/evcc/actions/workflows/nightly.yml/badge.svg?sanitize=true" alt="Build" /&gt;&lt;/a&gt; &lt;a href="https://hosted.weblate.org/engage/evcc/"&gt;&lt;img src="https://hosted.weblate.org/widgets/evcc/-/evcc/svg-badge.svg?sanitize=true" alt="Translation" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/docker/pulls/evcc/evcc" alt="Docker Pulls" /&gt; &lt;a href="https://cloudsmith.io/~evcc/packages/"&gt;&lt;img src="https://img.shields.io/badge/OSS%20hosting%20by-cloudsmith-blue?logo=cloudsmith" alt="OSS hosting by cloudsmith" /&gt;&lt;/a&gt; &lt;a href="https://github.com/evcc-io/evcc/releases"&gt;&lt;img src="https://img.shields.io/github/release/evcc-io/evcc.svg?sanitize=true" alt="Latest Version" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="https://depot.dev/?utm_source=evcc"&gt;&lt;img src="https://depot.dev/badges/built-with-depot.svg?sanitize=true" alt="Built with Depot" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;evcc is an extensible EV Charge Controller and home energy management system.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/evcc-io/evcc/master/assets/github/screenshot.webp" alt="Screenshot" /&gt;&lt;/p&gt; 
&lt;p&gt;Our goal is to provide local energy management, without relying on cloud services. Featured in &lt;a href="https://www.pv-magazine.de/2022/01/14/mit-open-source-lademanager-schnittstellen-zu-wallbox-und-photovoltaik-anlage-meistern/"&gt;PV Magazine&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=MoBpEXHMNjI"&gt;cât Magazin&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;simple and clean user interface&lt;/li&gt; 
 &lt;li&gt;support for many &lt;a href="https://docs.evcc.io/en/docs/devices/chargers"&gt;EV chargers&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;ABB, ABL, Alfen, Alphatec, Amperfied, Ampure, Audi, AUTEL, Autoaid, Bender, BMW, cFos, Charge Amps, Compleo, CUBOS, Cupra, Dadapower, DaheimLaden, Delta, E.ON Drive, E3/DC, Easee, Ebee, echarge, EcoHarmony, Edgetech, Elecq, eledio, Elli, EM2GO, EN+, enercab, Ensto, EntraTek, ESL, eSystems, Etrel, EVBox, Free2Move, Free2move eSolutions, Fronius, Garo, go-e, Hardy Barth, Heidelberg, Hesotec, Homecharge, Huawei, Innogy, INRO, Juice, Kathrein, KEBA, Kontron Solar, Kostal, KSE, LadeFoxx, LRT, Mennekes, NRGkick, OBO Bettermann, OpenEVSE, openWB, Optec, Orbis, PC Electric, Peblar, Phoenix Contact, Plugchoice, Porsche, Pracht, Pulsares, Pulsatrix, Qcells, Schneider, Schrack, SENEC, Siemens, Skoda, SMA, Smartfox, SolarEdge, Solax, Sonnen, Spelsberg, Stark in Strom, Sungrow, TechniSat, Tesla, Tigo, TinkerForge, Ubitricity, V2C Trydan, Vestel, Victron, Viridian EV, Volkswagen, Volt Time, Wallbe, wallbox, Walther Werke, Webasto, WeidmÃ¼ller, Zaptec, ZJ Beny. &lt;a href="https://docs.evcc.io/en/docs/devices/chargers"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;EEBus&lt;/strong&gt; support (Elli, PMCC)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;OCPP&lt;/strong&gt; support&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;build-your-own:&lt;/strong&gt; Phoenix Contact (includes ESL Walli), EVSE DIN&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;smart switches:&lt;/strong&gt; AVM, FRITZ!, Home Assistant, Homematic IP, HomeWizard, myStrom, Shelly, Tasmota, TP-Link. &lt;a href="https://docs.evcc.io/en/docs/devices/smartswitches"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;heat pumps and electric heaters:&lt;/strong&gt; alpha innotec, Bosch, Buderus, BÃ¶sch, CTA All-In-One, Daikin, Elco, IDM, Junkers, Kermi, Lambda, my-PV, Nibe, Novelan, Roth, Stiebel Eltron, Tecalor, Vaillant, Viessmann, Wolf, Zewotherm. &lt;a href="https://docs.evcc.io/en/docs/devices/heating"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;support for many &lt;a href="https://docs.evcc.io/en/docs/devices/meters"&gt;energy meters&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;solar inverters and battery systems:&lt;/strong&gt; A-Tronix, Acrel, Ads-tec, Alpha ESS, Ampere, Anker, APsystems, AVM, Axitec, BGEtech, Bosch, Bosswerk, Carlo Gavazzi, Deye, E3/DC, Eastron, Enphase, FENECON, FRITZ!, FoxESS, Fronius, Ginlong, go-e, GoodWe, Growatt, Homematic IP, HomeWizard, Hoymiles, Huawei, IAMMETER, IGEN Tech, Kostal, LG, Loxone, M-TEC, Marstek, myStrom, OpenEMS, Powerfox, Qcells, RCT, SAJ, SAX, SENEC, Senergy, Shelly, Siemens, Sigenergy, SMA, Smartfox, SofarSolar, Solaranzeige, SolarEdge, SolarMax, Solarwatt, Solax, Solinteng, Sonnen, St-ems, Steca, Sungrow, Sunsynk, Sunway, Tasmota, Tesla, TP-Link, VARTA, Victron, Wattsonic, Youless, ZCS Azzurro, Zendure. &lt;a href="https://docs.evcc.io/en/docs/devices/meters"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;general energy meters:&lt;/strong&gt; A-Tronix, ABB, Acrel, Alpha ESS, Ampere, AVM, Axitec, Bernecker Engineering, BGEtech, Bosch, Carlo Gavazzi, cFos, Deye, DSMR, DZG, E3/DC, Eastron, Enphase, ESPHome, FENECON, FoxESS, FRITZ!, Fronius, Ginlong, go-e, GoodWe, Growatt, Homematic IP, HomeWizard, Huawei, IAMMETER, inepro, IOmeter, Janitza, KEBA, Kostal, LG, Loxone, M-TEC, mhendriks, my-PV, myStrom, OpenEMS, ORNO, P1Monitor, Powerfox, Qcells, RCT, Saia-Burgess Controls (SBC), SAJ, SAX, Schneider Electric, SENEC, Shelly, Siemens, Sigenergy, SMA, Smartfox, SofarSolar, Solaranzeige, SolarEdge, SolarMax, Solarwatt, Solax, Solinteng, Sonnen, St-ems, Sungrow, Sunsynk, Sunway, Tasmota, Tesla, Tibber, TQ, VARTA, Victron, VolkszÃ¤hler, Wago, Wattsonic, WeidmÃ¼ller, Youless, ZCS Azzurro, Zuidwijk. &lt;a href="https://docs.evcc.io/en/docs/devices/meters"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;integrated systems&lt;/strong&gt;: SMA Sunny Home Manager and Energy Meter, KOSTAL Smart Energy Meter (KSEM, EMxx)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;sunspec&lt;/strong&gt;-compatible inverter or home battery devices&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;mbmd&lt;/strong&gt;-compatible devices, see &lt;a href="https://github.com/volkszaehler/mbmd#supported-devices"&gt;volkszaehler/mbmd&lt;/a&gt; for a complete list&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.evcc.io/en/docs/devices/vehicles"&gt;vehicle&lt;/a&gt; integrations (state of charge, remote charge, battery and preconditioning status): 
  &lt;ul&gt; 
   &lt;li&gt;Aiways, Audi, BMW, CitroÃ«n, Dacia, DS, Fiat, Ford, Hyundai, Jeep, Kia, Mercedes-Benz, MG, Mini, Nissan, NIU, Opel, Peugeot, Polestar, Renault, Seat, Skoda, Smart, Tesla, Toyota, Volkswagen, Volvo, Zero Motorcycles. &lt;a href="https://docs.evcc.io/en/docs/devices/vehicles"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;services:&lt;/strong&gt; OVMS, Tronity, evNotify, ioBroker.bmw, mg2mqtt, mz2mqtt, TeslaLogger, TeslaMate, Tessi, volvo2mqtt&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.evcc.io/en/docs/devices/plugins"&gt;plugins&lt;/a&gt; for integrating with any charger, smartswitch, heatpump, electric heater, meter, solar- / battery-inverter or vehicle: 
  &lt;ul&gt; 
   &lt;li&gt;Modbus, HTTP, MQTT, JavaScript, WebSocket, Go and shell scripts&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;status &lt;a href="https://docs.evcc.io/en/docs/reference/configuration/messaging"&gt;notifications&lt;/a&gt; using &lt;a href="https://telegram.org"&gt;Telegram&lt;/a&gt;, &lt;a href="https://pushover.net"&gt;PushOver&lt;/a&gt; and &lt;a href="https://containrrr.dev/shoutrrr/"&gt;many more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;logging using &lt;a href="https://www.influxdata.com"&gt;InfluxDB&lt;/a&gt; and &lt;a href="https://grafana.com/grafana/"&gt;Grafana&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.evcc.io/en/docs/integrations/rest-api"&gt;REST&lt;/a&gt; and &lt;a href="https://docs.evcc.io/en/docs/integrations/mqtt-api"&gt;MQTT&lt;/a&gt; APIs for integration with home automation systems&lt;/li&gt; 
 &lt;li&gt;Add-ons for &lt;a href="https://docs.evcc.io/en/docs/integrations/home-assistant"&gt;Home Assistant&lt;/a&gt; and &lt;a href="https://www.openhab.org/addons/bindings/evcc"&gt;openHAB&lt;/a&gt; (not maintained by the evcc core team)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;You'll find everything you need in our &lt;a href="https://docs.evcc.io/en/"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Technical details on how to contribute, how to add translations and how to build evcc from source can be found &lt;a href="https://raw.githubusercontent.com/evcc-io/evcc/master/CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hosted.weblate.org/engage/evcc/"&gt;&lt;img src="https://hosted.weblate.org/widgets/evcc/-/evcc/287x66-grey.png" alt="Weblate Hosted" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsorship&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/evcc-io/evcc/master/assets/github/evcc-gopher.png" align="right" width="150" /&gt; 
&lt;p&gt;evcc believes in open source software. We're committed to provide best in class EV charging experience. Maintaining evcc consumes time and effort. With the vast amount of different devices to support, we depend on community and vendor support to keep evcc alive.&lt;/p&gt; 
&lt;p&gt;While evcc is open source, we would also like to encourage vendors to provide open source hardware devices, public documentation and support open source projects like ours that provide additional value to otherwise closed hardware. Where this is not the case, evcc requires "sponsor token" to finance ongoing development and support of evcc.&lt;/p&gt; 
&lt;p&gt;Learn more about our &lt;a href="https://docs.evcc.io/en/docs/sponsorship"&gt;sponsorship model&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License. See the &lt;a href="https://raw.githubusercontent.com/evcc-io/evcc/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;p&gt;For additional license information regarding fonts, icons, and other assets, please see the &lt;a href="https://raw.githubusercontent.com/evcc-io/evcc/master/LICENSES/"&gt;LICENSES&lt;/a&gt; folder.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All sponsor-required components are excluded from the MIT License. See file license header for details. If you want to use them in your own project, one evcc sponsorship token is required per evcc instance. Custom licensing agreements are available - please &lt;a href="mailto:info@evcc.io"&gt;contact us&lt;/a&gt; to discuss your specific requirements.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>keploy/keploy</title>
      <link>https://github.com/keploy/keploy</link>
      <description>&lt;p&gt;API, Integration, E2E Testing Agent for Developers that actually work. Generate tests, mocks/stubs for your APIs!&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://docs.keploy.io/img/keploy-logo-dark.svg?s=200&amp;amp;v=4" height="80" alt="Keploy Logo" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/3262" target="_blank"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/3262" alt="keploy%2Fkeploy | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;&lt;b&gt;â¡ï¸ API tests faster than unit tests, from user traffic â¡ï¸&lt;/b&gt;&lt;/h3&gt; 
&lt;p align="center"&gt;ð The must-have tool for developers in the AI-Gen era for 90% test coverage ð&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;a href="https://join.slack.com/t/keploy/shared_invite/zt-357qqm9b5-PbZRVu3Yt2rJIa6ofrwWNg"&gt;&lt;img src="https://img.shields.io/badge/Slack-4A154B?style=flat&amp;amp;logo=slack&amp;amp;logoColor=white" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/keploy/"&gt;&lt;img src="https://img.shields.io/badge/LinkedIn-%230077B5.svg?style=flat&amp;amp;logo=linkedin&amp;amp;logoColor=white" alt="LinkedIn" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/channel/UC6OTg7F4o0WkmNtSoob34lg"&gt;&lt;img src="https://img.shields.io/badge/YouTube-%23FF0000.svg?style=flat&amp;amp;logo=YouTube&amp;amp;logoColor=white" alt="YouTube" /&gt;&lt;/a&gt; &lt;a href="https://x.com/Keployio"&gt;&lt;img src="https://img.shields.io/badge/X-%231DA1F2.svg?style=flat&amp;amp;logo=X&amp;amp;logoColor=white" alt="X" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://landscape.cncf.io/?item=app-definition-and-development--continuous-integration-delivery--keploy"&gt; &lt;img src="https://img.shields.io/badge/CNCF%20Landscape-5699C6?logo=cncf&amp;amp;style=social" alt="Keploy CNCF Landscape" /&gt; &lt;/a&gt; &lt;a href="https://github.com/Keploy/Keploy/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/keploy/keploy?color=%23EAC54F&amp;amp;logo=github" alt="GitHub Stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Keploy/Keploy/"&gt; &lt;img src="https://img.shields.io/github/stars/keploy/keploy?color=%23EAC54F&amp;amp;logo=github&amp;amp;label=Help%20us%20reach%2020K%20stars!%20Now%20at:" alt="Help us reach 20k stars!" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://keploy.io"&gt;Keploy&lt;/a&gt; is a &lt;strong&gt;developerâcentric API and integration testing tool&lt;/strong&gt; that autoâgenerates &lt;strong&gt;tests and dataâmocks&lt;/strong&gt; faster than unit tests.&lt;/p&gt; 
&lt;p&gt;It records API calls, database queries, and streaming events â then replays them as tests. Under the hood, Keploy &lt;strong&gt;uses eBPF to capture traffic at the network layer,&lt;/strong&gt; but for you itâs completely &lt;strong&gt;codeâless&lt;/strong&gt; and &lt;strong&gt;languageâagnostic&lt;/strong&gt;.&lt;/p&gt; 
&lt;img align="center" src="https://raw.githubusercontent.com/keploy/docs/main/static/gif/record-replay.gif" width="100%" alt="Convert API calls to API tests test cases and Data Mocks using AI" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ð° &lt;strong&gt;Fun fact:&lt;/strong&gt; Keploy uses itself for testing! Check out our swanky coverage badge: &lt;a href="https://coveralls.io/github/keploy/keploy?branch=main&amp;amp;kill_cache=1"&gt;&lt;img src="https://coveralls.io/repos/github/keploy/keploy/badge.svg?branch=main&amp;amp;kill_cache=1" alt="Coverage Status" /&gt;&lt;/a&gt; &amp;nbsp;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Key Highlights&lt;/h1&gt; 
&lt;h2&gt;ð¯ No code changes&lt;/h2&gt; 
&lt;p&gt;Just run your app with &lt;code&gt;keploy record&lt;/code&gt;. Real API + integration flows are automatically captured as tests and mocks. &lt;em&gt;(Keploy uses eBPF under the hood to capture traffic, so you &lt;strong&gt;donât need&lt;/strong&gt; to add any SDKs or modify code.)&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;ð¹ Record and Replay complex Flows&lt;/h2&gt; 
&lt;p&gt;Keploy can record and replay complex, distributed API flows as mocks and stubs. It's like having a very light-weight time machine for your testsâsaving you tons of time!&lt;/p&gt; 
&lt;p&gt;ð &lt;a href="https://keploy.io/docs/keploy-explained/introduction/"&gt;Read the docs on record-replay&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/keploy/docs/main/static/gif/record-tc.gif" width="60%" alt="Convert API calls to test cases" /&gt; 
&lt;h2&gt;ð Complete InfraâVirtualization (beyond HTTP mocks)&lt;/h2&gt; 
&lt;p&gt;Unlike tools that only mock HTTP endpoints, Keploy records &lt;strong&gt;databases&lt;/strong&gt; (Postgres, MySQL, MongoDB), &lt;strong&gt;streaming/queues&lt;/strong&gt; (Kafka, RabbitMQ), external APIs, and more.&lt;/p&gt; 
&lt;p&gt;It replays them deterministically so you can run tests without reâprovisioning infra.&lt;/p&gt; 
&lt;p&gt;ð &lt;a href="https://keploy.io/docs/keploy-explained/how-keploy-works/"&gt;Read the docs on infra virtualisation&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://keploy-devrel.s3.us-west-2.amazonaws.com/Group+1261152745.png" width="100%" alt="Convert API calls to test cases" /&gt; 
&lt;h2&gt;ð§ª Combined Test Coverage&lt;/h2&gt; 
&lt;p&gt;If youâre a &lt;strong&gt;developer&lt;/strong&gt;, you probably care about &lt;em&gt;statement&lt;/em&gt; and &lt;em&gt;branch&lt;/em&gt; coverage â Keploy calculates that for you.&lt;/p&gt; 
&lt;p&gt;If youâre a &lt;strong&gt;QA&lt;/strong&gt;, you focus more on &lt;em&gt;API schema&lt;/em&gt; and &lt;em&gt;business useâcase coverage&lt;/em&gt; â Keploy calculates that too. This way coverage isnât subjective anymore.&lt;/p&gt; 
&lt;p&gt;ð &lt;a href="https://keploy.io/docs/server/sdk-installation/go/"&gt;Read the docs on coverage&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://keploy-devrel.s3.us-west-2.amazonaws.com/keploy+ai+test+gen+for+api+statement+schema+and+branch+coverage.jpg" width="100%" alt="ai test gen for api statement schema and branch coverage" /&gt; 
&lt;h2&gt;ð¤ Expand API Coverage using AI&lt;/h2&gt; 
&lt;p&gt;Keploy uses existing recordings, Swagger/OpenAPI Schema to find: boundary values, missing/extra fields, wrong types, outâofâorder sequences, retries/timeouts.&lt;/p&gt; 
&lt;p&gt;This helps expand API Schema, Statement, and Branch Coverage.&lt;/p&gt; 
&lt;p&gt;ð &lt;a href="https://app.keploy.io/"&gt;Read the docs on coverage&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://keploy-devrel.s3.us-west-2.amazonaws.com/ai+test+case+generation+that+works.png" width="100%" alt="ai test gen for api statement schema and branch coverage" /&gt; 
&lt;h3&gt;Other Capabilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;ð &lt;strong&gt;CI/CD Integration:&lt;/strong&gt; Run tests with mocks anywhere you likeâlocally on the CLI, in your CI pipeline (Jenkins, Github Actions..) , or even across a Kubernetes cluster. &lt;a href="https://keploy.io/docs/running-keploy/api-testing-cicd/"&gt;Read more&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ð­ &lt;strong&gt;Multi-Purpose Mocks&lt;/strong&gt;: You can also use Keploy-generated Mocks, as server Tests!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ð &lt;strong&gt;Reporting:&lt;/strong&gt; Unified reports for API, integration, unit, and e2e coverage with insights directly in your CI or PRs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ð¥ï¸ &lt;strong&gt;Console:&lt;/strong&gt; A developer-friendly console to view, manage, and debug recorded tests and mocks.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;â±ï¸ &lt;strong&gt;Time Freezing:&lt;/strong&gt; Deterministically replay tests by freezing system time during execution. &lt;a href="https://keploy.io/docs/keploy-cloud/time-freezing/"&gt;Read more&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ð &lt;strong&gt;Mock Registry:&lt;/strong&gt; Centralized registry to manage, reuse, and version mocks across teams and environments. &lt;a href="https://keploy.io/docs/keploy-cloud/mock-registry/"&gt;Read more&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;1. Install Keploy Agent&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl --silent -O -L https://keploy.io/install.sh &amp;amp;&amp;amp; source install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Record Test Cases&lt;/h3&gt; 
&lt;p&gt;Start your app under Keploy to convert real API calls into tests and mocks.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;keploy record -c "CMD_TO_RUN_APP"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example for Python:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;keploy record -c "python main.py"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. Run Tests&lt;/h3&gt; 
&lt;p&gt;Run tests offline without external dependencies.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;keploy test -c "CMD_TO_RUN_APP" --delay 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;h3&gt;- ð &lt;a href="https://keploy.io/docs/server/installation/"&gt;Installation&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;- ð &lt;a href="https://keploy.io/docs/quickstart/quickstart-filter/"&gt;QuickStarts&lt;/a&gt;&lt;/h3&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Languages &amp;amp; Frameworks (Any stack)&lt;/h2&gt; 
&lt;p&gt;Because Keploy intercepts at the &lt;strong&gt;network layer (eBPF)&lt;/strong&gt;, it works with &lt;strong&gt;any language, framework, or runtime&lt;/strong&gt;âno SDK required.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Some of the dependencies are not open-source by nature because their protocols and parsings are not open-sourced. It's not supported in Keploy enterprise.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p align="center"&gt; 
 &lt;!-- Languages --&gt; &lt;img src="https://img.shields.io/badge/Go-00ADD8?logo=go&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Java-ED8B00?logo=openjdk&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Node.js-43853D?logo=node.js&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Python-3776AB?logo=python&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Rust-000000?logo=rust&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/C%23-239120?logo=csharp&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/C/C++-00599C?logo=cplusplus&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/TypeScript-3178C6?logo=typescript&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Scala-DC322F?logo=scala&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Kotlin-7F52FF?logo=kotlin&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Swift-FA7343?logo=swift&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Dart-0175C2?logo=dart&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/PHP-777BB4?logo=php&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Ruby-CC342D?logo=ruby&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Elixir-4B275F?logo=elixir&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/.NET-512BD4?logo=dotnet&amp;amp;logoColor=white" /&gt; 
 &lt;!-- Protocols &amp;amp; infra commonly virtualized --&gt; &lt;img src="https://img.shields.io/badge/gRPC-5E35B1?logo=grpc&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/GraphQL-E10098?logo=graphql&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/HTTP%2FREST-0A84FF?logo=httpie&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Kafka-231F20?logo=apachekafka&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/RabbitMQ-FF6600?logo=rabbitmq&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/PostgreSQL-4169E1?logo=postgresql&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/MySQL-4479A1?logo=mysql&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/MongoDB-47A248?logo=mongodb&amp;amp;logoColor=white" /&gt; &lt;img src="https://img.shields.io/badge/Redis-DC382D?logo=redis&amp;amp;logoColor=white" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Questions?&lt;/h2&gt; 
&lt;h3&gt;Book a Live Demo / Enterprise Support&lt;/h3&gt; 
&lt;p&gt;Want a guided walkthrough, dedicated support, or help planning enterprise rollout?&lt;/p&gt; 
&lt;p&gt; &lt;a href="https://calendar.app.google/4ZKd1nz9A5wLuP4W7"&gt; &lt;img src="https://img.shields.io/badge/Request%20a%20Demo-Email-2ea44f?logo=gmail" /&gt; &lt;/a&gt; &amp;nbsp; &lt;a href="https://join.slack.com/t/keploy/shared_invite/zt-357qqm9b5-PbZRVu3Yt2rJIa6ofrwWNg"&gt; &lt;img src="https://img.shields.io/badge/Chat%20with%20Us-Slack-4A154B?logo=slack&amp;amp;logoColor=white" /&gt; &lt;/a&gt; 
 &lt;!-- Optional: replace with your scheduling link (Cal.com/Calendly) --&gt; 
 &lt;!-- &lt;a href="https://cal.com/keploy/demo"&gt;&lt;img src="https://img.shields.io/badge/Book%20via%20Calendar-Cal.com-111111" /&gt;&lt;/a&gt; --&gt; &lt;/p&gt; 
&lt;p&gt;Prefer a calendar invite? Mention your availability in the emailâweâll send a &lt;strong&gt;calendar invite&lt;/strong&gt; right away.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Documentation &amp;amp; Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;ð &lt;a href="https://keploy.io/docs/"&gt;Documentation&lt;/a&gt; â Explore the full docs&lt;/li&gt; 
 &lt;li&gt;ð¬ &lt;a href="https://join.slack.com/t/keploy/shared_invite/zt-357qqm9b5-PbZRVu3Yt2rJIa6ofrwWNg"&gt;Slack Community&lt;/a&gt; â Join the conversation&lt;/li&gt; 
 &lt;li&gt;ð &lt;a href="https://keploy.io/docs/keploy-explained/contribution-guide/"&gt;Contribution Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;â¤ï¸ &lt;a href="https://github.com/keploy/keploy/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ð¢ &lt;a href="https://keploy.io/blog/"&gt;Blog&lt;/a&gt; â Read articles and updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Contribute &amp;amp; Collaborate&lt;/h2&gt; 
&lt;p&gt;Whether you're new or experienced, your input matters. Help us improve Keploy by contributing code, reporting issues, or sharing feedback.&lt;/p&gt; 
&lt;p&gt;Together, let's build better testing tools for modern applications.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dbos-inc/dbos-transact-golang</title>
      <link>https://github.com/dbos-inc/dbos-transact-golang</link>
      <description>&lt;p&gt;Durable Workflow Orchestration with Golang and Postgres&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/dbos-inc/dbos-transact-golang"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/dbos-inc/dbos-transact-golang.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/dbos-inc/dbos-transact-golang"&gt;&lt;img src="https://goreportcard.com/badge/github.com/dbos-inc/dbos-transact-golang" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dbos-inc/dbos-transact-golang/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/dbos-inc/dbos-transact-golang?sort=semver" alt="GitHub release (latest SemVer)" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/jsmC6pXGgX"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join%20Chat-5865F2?logo=discord&amp;amp;logoColor=white" alt="Join Discord" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/dbos-inc/dbos-transact-golang/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dbos-inc/dbos-transact-golang"&gt;&lt;img src="https://img.shields.io/github/stars/dbos-inc/dbos-transact-golang?style=social" alt="GitHub Stars" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h1&gt;DBOS Transact: Lightweight Durable Workflow Orchestration with Postgres&lt;/h1&gt; 
 &lt;h4&gt;&lt;a href="https://docs.dbos.dev/"&gt;Documentation&lt;/a&gt; &amp;nbsp;&amp;nbsp;â¢&amp;nbsp;&amp;nbsp; &lt;a href="https://docs.dbos.dev/examples"&gt;Examples&lt;/a&gt; &amp;nbsp;&amp;nbsp;â¢&amp;nbsp;&amp;nbsp; &lt;a href="https://github.com/dbos-inc"&gt;Github&lt;/a&gt;&lt;/h4&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;What is DBOS?&lt;/h2&gt; 
&lt;p&gt;DBOS provides lightweight durable workflow orchestration on top of Postgres. Instead of managing your own workflow orchestrator or task queue system, you can use DBOS to add durable workflows and queues to your program in just a few lines of code.&lt;/p&gt; 
&lt;h2&gt;When Should I Use DBOS?&lt;/h2&gt; 
&lt;p&gt;You should consider using DBOS if your application needs to &lt;strong&gt;reliably handle failures&lt;/strong&gt;. For example, you might be building a payments service that must reliably process transactions even if servers crash mid-operation, or a long-running data pipeline that needs to resume seamlessly from checkpoints rather than restart from the beginning when interrupted.&lt;/p&gt; 
&lt;p&gt;Handling failures is costly and complicated, requiring complex state management and recovery logic as well as heavyweight tools like external orchestration services. DBOS makes it simpler: annotate your code to checkpoint it in Postgres and automatically recover from any failure. DBOS also provides powerful Postgres-backed primitives that makes it easier to write and operate reliable code, including durable queues, notifications, scheduling, event processing, and programmatic workflow management.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;details open&gt;
 &lt;summary&gt;&lt;strong&gt;ð¾ Durable Workflows&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;DBOS workflows make your program &lt;strong&gt;durable&lt;/strong&gt; by checkpointing its state in Postgres. If your program ever fails, when it restarts all your workflows will automatically resume from the last completed step.&lt;/p&gt; 
 &lt;p&gt;You add durable workflows to your existing Golang program by registering ordinary functions as workflows or running them as steps:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-golang"&gt;package main

import (
    "context"
    "fmt"
    "os"
    "time"

    "github.com/dbos-inc/dbos-transact-golang/dbos"
)

func workflow(dbosCtx dbos.DBOSContext, _ string) (string, error) {
    _, err := dbos.RunAsStep(dbosCtx, stepOne)
    if err != nil {
        return "", err
    }
    return dbos.RunAsStep(dbosCtx, stepTwo)
}

func stepOne(ctx context.Context) (string, error) {
    fmt.Println("Step one completed!")
    return "Step 1 completed", nil
}

func stepTwo(ctx context.Context) (string, error) {
    fmt.Println("Step two completed!")
    return "Step 2 completed - Workflow finished successfully", nil
}

func main() {
    // Initialize a DBOS context
    ctx, err := dbos.NewDBOSContext(context.Background(), dbos.Config{
        DatabaseURL: os.Getenv("DBOS_SYSTEM_DATABASE_URL"),
        AppName:     "myapp",
    })
    if err != nil {
        panic(err)
    }

    // Register a workflow
    dbos.RegisterWorkflow(ctx, workflow)

    // Launch DBOS
    err = dbos.Launch(ctx)
    if err != nil {
        panic(err)
    }
    defer dbos.Shutdown(ctx, 2 * time.Second)

    // Run a durable workflow and get its result
    handle, err := dbos.RunWorkflow(ctx, workflow, "")
    if err != nil {
        panic(err)
    }
    res, err := handle.GetResult()
    if err != nil {
        panic(err)
    }
    fmt.Println("Workflow result:", res)
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Workflows are particularly useful for&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Orchestrating business processes so they seamlessly recover from any failure.&lt;/li&gt; 
  &lt;li&gt;Building observable and fault-tolerant data pipelines.&lt;/li&gt; 
  &lt;li&gt;Operating an AI agent, or any application that relies on unreliable or non-deterministic APIs.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;strong&gt;ð Durable Queues&lt;/strong&gt;&lt;/summary&gt; 
 &lt;h4&gt;&lt;/h4&gt; 
 &lt;p&gt;DBOS queues help you &lt;strong&gt;durably&lt;/strong&gt; run tasks in the background. When you enqueue a workflow, one of your processes will pick it up for execution. DBOS manages the execution of your tasks: it guarantees that tasks complete, and that their callers get their results without needing to resubmit them, even if your application is interrupted.&lt;/p&gt; 
 &lt;p&gt;Queues also provide flow control, so you can limit the concurrency of your tasks on a per-queue or per-process basis. You can also set timeouts for tasks, rate limit how often queued tasks are executed, deduplicate tasks, or prioritize tasks.&lt;/p&gt; 
 &lt;p&gt;You can add queues to your workflows in just a couple lines of code. They don't require a separate queueing service or message brokerâjust Postgres.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-golang"&gt;package main

import (
    "context"
    "fmt"
    "os"
    "time"

    "github.com/dbos-inc/dbos-transact-golang/dbos"
)

func task(ctx dbos.DBOSContext, i int) (int, error) {
    dbos.Sleep(ctx, 5*time.Second)
    fmt.Printf("Task %d completed\n", i)
    return i, nil
}

func main() {
    // Initialize a DBOS context
    ctx, err := dbos.NewDBOSContext(context.Background(), dbos.Config{
        DatabaseURL: os.Getenv("DBOS_SYSTEM_DATABASE_URL"),
        AppName:     "myapp",
    })
    if err != nil {
        panic(err)
    }

    // Register the workflow and create a durable queue
    dbos.RegisterWorkflow(ctx, task)
    queue := dbos.NewWorkflowQueue(ctx, "queue")

    // Launch DBOS
    err = dbos.Launch(ctx)
    if err != nil {
        panic(err)
    }
    defer dbos.Shutdown(ctx, 2 * time.Second)

    // Enqueue tasks and gather results
    fmt.Println("Enqueuing workflows")
    handles := make([]dbos.WorkflowHandle[int], 10)
    for i := range 10 {
        handle, err := dbos.RunWorkflow(ctx, task, i, dbos.WithQueue(queue.Name))
        if err != nil {
            panic(fmt.Sprintf("failed to enqueue step %d: %v", i, err))
        }
        handles[i] = handle
    }
    results := make([]int, 10)
    for i, handle := range handles {
        result, err := handle.GetResult()
        if err != nil {
            panic(fmt.Sprintf("failed to get result for step %d: %v", i, err))
        }
        results[i] = result
    }
    fmt.Printf("Successfully completed %d steps\n", len(results))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;strong&gt;ð« Exactly-Once Event Processing&lt;/strong&gt;&lt;/summary&gt; 
 &lt;h4&gt;&lt;/h4&gt; 
 &lt;p&gt;Use DBOS to build reliable webhooks, event listeners, or Kafka consumers by starting a workflow exactly-once in response to an event. Acknowledge the event immediately while reliably processing it in the background.&lt;/p&gt; 
 &lt;p&gt;For example:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-golang"&gt;_, err := dbos.RunWorkflow(ctx, task, i, dbos.WithWorkflowID(exactlyOnceEventID))
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;strong&gt;ð Durable Scheduling&lt;/strong&gt;&lt;/summary&gt; 
 &lt;h4&gt;&lt;/h4&gt; 
 &lt;p&gt;Schedule workflows using cron syntax, or use durable sleep to pause workflows for as long as you like (even days or weeks) before executing.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-golang"&gt;dbos.RegisterWorkflow(dbosCtx, func(ctx dbos.DBOSContext, scheduledTime time.Time) (string, error) {
    return fmt.Sprintf("Workflow executed at %s", scheduledTime), nil
}, dbos.WithSchedule("* * * * * *")) // Every second
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;You can add a durable sleep to any workflow with a single line of code. It stores its wakeup time in Postgres so the workflow sleeps through any interruption or restart, then always resumes on schedule.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-golang"&gt;func workflow(ctx dbos.DBOSContext, duration time.Duration) (string, error) {
    dbos.Sleep(ctx, duration)
    return fmt.Sprintf("Workflow slept for %s", duration), nil
}

handle, err := dbos.RunWorkflow(dbosCtx, workflow, time.Second*5)
_, err = handle.GetResult()
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;strong&gt;ð« Durable Notifications&lt;/strong&gt;&lt;/summary&gt; 
 &lt;h4&gt;&lt;/h4&gt; 
 &lt;p&gt;Pause your workflow executions until a notification is received, or emit events from your workflow to send progress updates to external clients. All notifications are stored in Postgres, so they can be sent and received with exactly-once semantics. Set durable timeouts when waiting for events, so you can wait for as long as you like (even days or weeks) through interruptions or restarts, then resume once a notification arrives or the timeout is reached.&lt;/p&gt; 
 &lt;p&gt;For example, build a reliable billing workflow that durably waits for a notification from a payments service, processing it exactly-once:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-golang"&gt;func sendWorkflow(ctx dbos.DBOSContext, message string) (string, error) {
    err := dbos.Send(ctx, "receiverID", message, "topic")
    return "sent", err
}

func receiveWorkflow(ctx dbos.DBOSContext, topic string) (string, error) {
    return dbos.Recv[string](ctx, topic, 48 * time.Hour)
}

// Start a receiver in the background
recvHandle, err := dbos.RunWorkflow(dbosCtx, receiveWorkflow, "topic", dbos.WithWorkflowID("receiverID"))

// Send a message
sendHandle, err := dbos.RunWorkflow(dbosCtx, sendWorkflow, "hola!")
_, err = sendHandle.GetResult()

// Eventually get the response
recvResult, err := recvHandle.GetResult()
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;To get started, follow the &lt;a href="https://docs.dbos.dev/quickstart"&gt;quickstart&lt;/a&gt; to install this open-source library and connect it to a Postgres database. Then, check out the &lt;a href="https://docs.dbos.dev/python/programming-guide"&gt;programming guide&lt;/a&gt; to learn how to build with durable workflows and queues.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.dbos.dev"&gt;https://docs.dbos.dev&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.dbos.dev/examples"&gt;https://docs.dbos.dev/examples&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;DBOS vs. Other Systems&lt;/h2&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;strong&gt;DBOS vs. Temporal&lt;/strong&gt;&lt;/summary&gt; 
 &lt;h4&gt;&lt;/h4&gt; 
 &lt;p&gt;Both DBOS and Temporal provide durable execution, but DBOS is implemented in a lightweight Postgres-backed library whereas Temporal is implemented in an externally orchestrated server.&lt;/p&gt; 
 &lt;p&gt;You can add DBOS to your program by installing this open-source library, connecting it to Postgres, and annotating workflows and steps. By contrast, to add Temporal to your program, you must rearchitect your program to move your workflows and steps (activities) to a Temporal worker, configure a Temporal server to orchestrate those workflows, and access your workflows only through a Temporal client. &lt;a href="https://www.dbos.dev/blog/durable-execution-coding-comparison"&gt;This blog post&lt;/a&gt; makes the comparison in more detail.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;When to use DBOS:&lt;/strong&gt; You need to add durable workflows to your applications with minimal rearchitecting, or you are using Postgres.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;When to use Temporal:&lt;/strong&gt; You don't want to add Postgres to your stack, or you need a language DBOS doesn't support yet.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;strong&gt;DBOS vs. Airflow&lt;/strong&gt;&lt;/summary&gt; 
 &lt;h4&gt;&lt;/h4&gt; 
 &lt;p&gt;DBOS and Airflow both provide workflow abstractions. Airflow is targeted at data science use cases, providing many out-of-the-box connectors but requiring workflows be written as explicit DAGs and externally orchestrating them from an Airflow cluster. Airflow is designed for batch operations and does not provide good performance for streaming or real-time use cases. DBOS is general-purpose, but is often used for data pipelines, allowing developers to write workflows as code and requiring no infrastructure except Postgres.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;When to use DBOS:&lt;/strong&gt; You need the flexibility of writing workflows as code, or you need higher performance than Airflow is capable of (particularly for streaming or real-time use cases).&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;When to use Airflow:&lt;/strong&gt; You need Airflow's ecosystem of connectors.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;strong&gt;DBOS vs. Celery/BullMQ&lt;/strong&gt;&lt;/summary&gt; 
 &lt;h4&gt;&lt;/h4&gt; 
 &lt;p&gt;DBOS provides a similar queue abstraction to dedicated queueing systems like Celery or BullMQ: you can declare queues, submit tasks to them, and control their flow with concurrency limits, rate limits, timeouts, prioritization, etc. However, DBOS queues are &lt;strong&gt;durable and Postgres-backed&lt;/strong&gt; and integrate with durable workflows. For example, in DBOS you can write a durable workflow that enqueues a thousand tasks and waits for their results. DBOS checkpoints the workflow and each of its tasks in Postgres, guaranteeing that even if failures or interruptions occur, the tasks will complete and the workflow will collect their results. By contrast, Celery/BullMQ are Redis-backed and don't provide workflows, so they provide fewer guarantees but better performance.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;When to use DBOS:&lt;/strong&gt; You need the reliability of enqueueing tasks from durable workflows.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;When to use Celery/BullMQ&lt;/strong&gt;: You don't need durability, or you need very high throughput beyond what your Postgres server can support.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;â­ï¸ Like this project?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/dbos-inc/dbos-transact-golang"&gt;Star it on GitHub&lt;/a&gt; &lt;a href="https://github.com/dbos-inc/dbos-transact-golang"&gt;&lt;img src="https://img.shields.io/github/stars/dbos-inc/dbos-transact-golang?style=social" alt="GitHub Stars" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ava-labs/avalanchego</title>
      <link>https://github.com/ava-labs/avalanchego</link>
      <description>&lt;p&gt;Go implementation of an Avalanche node.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ava-labs/avalanchego/master/resources/AvalancheLogoRed.png?raw=true" /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;Node implementation for the &lt;a href="https://avax.network"&gt;Avalanche&lt;/a&gt; network - a blockchains platform with high throughput, and blazing fast transactions.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Avalanche is an incredibly lightweight protocol, so the minimum computer requirements are quite modest. Note that as network usage increases, hardware requirements may change.&lt;/p&gt; 
&lt;p&gt;The minimum recommended hardware specification for nodes connected to Mainnet is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CPU: Equivalent of 8 AWS vCPU&lt;/li&gt; 
 &lt;li&gt;RAM: 16 GiB&lt;/li&gt; 
 &lt;li&gt;Storage: 1 TiB 
  &lt;ul&gt; 
   &lt;li&gt;Nodes running for very long periods of time or nodes with custom configurations may observe higher storage requirements.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;OS: Ubuntu 22.04/24.04 or macOS &amp;gt;= 12&lt;/li&gt; 
 &lt;li&gt;Network: Reliable IPv4 or IPv6 network connection, with an open public port.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you plan to build AvalancheGo from source, you will also need the following software:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/doc/install"&gt;Go&lt;/a&gt; version &amp;gt;= 1.24.7&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gcc.gnu.org/"&gt;gcc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;g++&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Building From Source&lt;/h3&gt; 
&lt;h4&gt;Clone The Repository&lt;/h4&gt; 
&lt;p&gt;Clone the AvalancheGo repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone git@github.com:ava-labs/avalanchego.git
cd avalanchego
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will clone and checkout the &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt; 
&lt;h4&gt;Building AvalancheGo&lt;/h4&gt; 
&lt;p&gt;Build AvalancheGo by running the build task:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./scripts/run_task.sh build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;avalanchego&lt;/code&gt; binary is now in the &lt;code&gt;build&lt;/code&gt; directory. To run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./build/avalanchego
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Binary Repository&lt;/h3&gt; 
&lt;p&gt;Install AvalancheGo using an &lt;code&gt;apt&lt;/code&gt; repository.&lt;/p&gt; 
&lt;h4&gt;Adding the APT Repository&lt;/h4&gt; 
&lt;p&gt;If you already have the APT repository added, you do not need to add it again.&lt;/p&gt; 
&lt;p&gt;To add the repository on Ubuntu, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo su -
wget -qO - https://downloads.avax.network/avalanchego.gpg.key | tee /etc/apt/trusted.gpg.d/avalanchego.asc
source /etc/os-release &amp;amp;&amp;amp; echo "deb https://downloads.avax.network/apt $UBUNTU_CODENAME main" &amp;gt; /etc/apt/sources.list.d/avalanche.list
exit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Installing the Latest Version&lt;/h4&gt; 
&lt;p&gt;After adding the APT repository, install &lt;code&gt;avalanchego&lt;/code&gt; by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo apt update
sudo apt install avalanchego
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Binary Install&lt;/h3&gt; 
&lt;p&gt;Download the &lt;a href="https://github.com/ava-labs/avalanchego/releases/latest"&gt;latest build&lt;/a&gt; for your operating system and architecture.&lt;/p&gt; 
&lt;p&gt;The Avalanche binary to be executed is named &lt;code&gt;avalanchego&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Docker Install&lt;/h3&gt; 
&lt;p&gt;Make sure Docker is installed on the machine - so commands like &lt;code&gt;docker run&lt;/code&gt; etc. are available.&lt;/p&gt; 
&lt;p&gt;Building the Docker image of latest &lt;code&gt;avalanchego&lt;/code&gt; branch can be done by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./scripts/run-task.sh build-image
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To check the built image, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker image ls
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The image should be tagged as &lt;code&gt;avaplatform/avalanchego:xxxxxxxx&lt;/code&gt;, where &lt;code&gt;xxxxxxxx&lt;/code&gt; is the shortened commit of the Avalanche source it was built from. To run the Avalanche node, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker run -ti -p 9650:9650 -p 9651:9651 avaplatform/avalanchego:xxxxxxxx /avalanchego/build/avalanchego
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running Avalanche&lt;/h2&gt; 
&lt;h3&gt;Connecting to Mainnet&lt;/h3&gt; 
&lt;p&gt;To connect to the Avalanche Mainnet, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./build/avalanchego
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should see some pretty ASCII art and log messages.&lt;/p&gt; 
&lt;p&gt;You can use &lt;code&gt;Ctrl+C&lt;/code&gt; to kill the node.&lt;/p&gt; 
&lt;h3&gt;Connecting to Fuji&lt;/h3&gt; 
&lt;p&gt;To connect to the Fuji Testnet, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./build/avalanchego --network-id=fuji
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Creating a Local Testnet&lt;/h3&gt; 
&lt;p&gt;The &lt;a href="https://github.com/ava-labs/avalanche-cli"&gt;avalanche-cli&lt;/a&gt; is the easiest way to start a local network.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;avalanche network start
avalanche network status
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Bootstrapping&lt;/h2&gt; 
&lt;p&gt;A node needs to catch up to the latest network state before it can participate in consensus and serve API calls. This process (called bootstrapping) currently takes several days for a new node connected to Mainnet.&lt;/p&gt; 
&lt;p&gt;A node will not &lt;a href="https://build.avax.network/docs/api-reference/health-api"&gt;report healthy&lt;/a&gt; until it is done bootstrapping.&lt;/p&gt; 
&lt;p&gt;Improvements that reduce the amount of time it takes to bootstrap are under development.&lt;/p&gt; 
&lt;p&gt;The bottleneck during bootstrapping is typically database IO. Using a more powerful CPU or increasing the database IOPS on the computer running a node will decrease the amount of time bootstrapping takes.&lt;/p&gt; 
&lt;h2&gt;Generating Code&lt;/h2&gt; 
&lt;p&gt;AvalancheGo uses multiple tools to generate efficient and boilerplate code.&lt;/p&gt; 
&lt;h3&gt;Running protobuf codegen&lt;/h3&gt; 
&lt;p&gt;To regenerate the protobuf go code, run &lt;code&gt;scripts/run-task.sh generate-protobuf&lt;/code&gt; from the root of the repo.&lt;/p&gt; 
&lt;p&gt;This should only be necessary when upgrading protobuf versions or modifying .proto definition files.&lt;/p&gt; 
&lt;p&gt;To use this script, you must have &lt;a href="https://docs.buf.build/installation"&gt;buf&lt;/a&gt; (v1.31.0), protoc-gen-go (v1.33.0) and protoc-gen-go-grpc (v1.3.0) installed.&lt;/p&gt; 
&lt;p&gt;To install the buf dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.33.0
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have not already, you may need to add &lt;code&gt;$GOPATH/bin&lt;/code&gt; to your &lt;code&gt;$PATH&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export PATH="$PATH:$(go env GOPATH)/bin"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you extract buf to ~/software/buf/bin, the following should work:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export PATH=$PATH:~/software/buf/bin/:~/go/bin
go get google.golang.org/protobuf/cmd/protoc-gen-go
go get google.golang.org/protobuf/cmd/protoc-gen-go-grpc
scripts/run_task.sh generate-protobuf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information, refer to the &lt;a href="https://grpc.io/docs/languages/go/quickstart/"&gt;GRPC Golang Quick Start Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Running mock codegen&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="CONTRIBUTING.md####Autogenerated-mocks"&gt;the Contributing document autogenerated mocks section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;h3&gt;Version Semantics&lt;/h3&gt; 
&lt;p&gt;AvalancheGo is first and foremost a client for the Avalanche network. The versioning of AvalancheGo follows that of the Avalanche network.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;v0.x.x&lt;/code&gt; indicates a development network version.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v1.x.x&lt;/code&gt; indicates a production network version.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vx.[Upgrade].x&lt;/code&gt; indicates the number of network upgrades that have occurred.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vx.x.[Patch]&lt;/code&gt; indicates the number of client upgrades that have occurred since the last network upgrade.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Library Compatibility Guarantees&lt;/h3&gt; 
&lt;p&gt;Because AvalancheGo's version denotes the network version, it is expected that interfaces exported by AvalancheGo's packages may change in &lt;code&gt;Patch&lt;/code&gt; version updates.&lt;/p&gt; 
&lt;h3&gt;API Compatibility Guarantees&lt;/h3&gt; 
&lt;p&gt;APIs exposed when running AvalancheGo will maintain backwards compatibility, unless the functionality is explicitly deprecated and announced when removed.&lt;/p&gt; 
&lt;h2&gt;Supported Platforms&lt;/h2&gt; 
&lt;p&gt;AvalancheGo can run on different platforms, with different support tiers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Tier 1&lt;/strong&gt;: Fully supported by the maintainers, guaranteed to pass all tests including e2e and stress tests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tier 2&lt;/strong&gt;: Passes all unit and integration tests but not necessarily e2e tests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tier 3&lt;/strong&gt;: Builds but lightly tested (or not), considered &lt;em&gt;experimental&lt;/em&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Not supported&lt;/strong&gt;: May not build and not tested, considered &lt;em&gt;unsafe&lt;/em&gt;. To be supported in the future.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following table lists currently supported platforms and their corresponding AvalancheGo support tiers:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Architecture&lt;/th&gt; 
   &lt;th align="center"&gt;Operating system&lt;/th&gt; 
   &lt;th align="center"&gt;Support tier&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;amd64&lt;/td&gt; 
   &lt;td align="center"&gt;Linux&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;arm64&lt;/td&gt; 
   &lt;td align="center"&gt;Linux&lt;/td&gt; 
   &lt;td align="center"&gt;2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;amd64&lt;/td&gt; 
   &lt;td align="center"&gt;Darwin&lt;/td&gt; 
   &lt;td align="center"&gt;2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;amd64&lt;/td&gt; 
   &lt;td align="center"&gt;Windows&lt;/td&gt; 
   &lt;td align="center"&gt;Not supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;arm&lt;/td&gt; 
   &lt;td align="center"&gt;Linux&lt;/td&gt; 
   &lt;td align="center"&gt;Not supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;i386&lt;/td&gt; 
   &lt;td align="center"&gt;Linux&lt;/td&gt; 
   &lt;td align="center"&gt;Not supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;arm64&lt;/td&gt; 
   &lt;td align="center"&gt;Darwin&lt;/td&gt; 
   &lt;td align="center"&gt;Not supported&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;To officially support a new platform, one must satisfy the following requirements:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;AvalancheGo continuous integration&lt;/th&gt; 
   &lt;th align="center"&gt;Tier 1&lt;/th&gt; 
   &lt;th align="center"&gt;Tier 2&lt;/th&gt; 
   &lt;th align="center"&gt;Tier 3&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build passes&lt;/td&gt; 
   &lt;td align="center"&gt;â&lt;/td&gt; 
   &lt;td align="center"&gt;â&lt;/td&gt; 
   &lt;td align="center"&gt;â&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Unit and integration tests pass&lt;/td&gt; 
   &lt;td align="center"&gt;â&lt;/td&gt; 
   &lt;td align="center"&gt;â&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;End-to-end and stress tests pass&lt;/td&gt; 
   &lt;td align="center"&gt;â&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Security Bugs&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;We and our community welcome responsible disclosures.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://raw.githubusercontent.com/ava-labs/avalanchego/master/SECURITY.md"&gt;Security Policy&lt;/a&gt; and &lt;a href="https://github.com/ava-labs/avalanchego/security/advisories"&gt;Security Advisories&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hashicorp/terraform</title>
      <link>https://github.com/hashicorp/terraform</link>
      <description>&lt;p&gt;Terraform enables you to safely and predictably create, change, and improve infrastructure. It is a source-available tool that codifies APIs into declarative configuration files that can be shared amongst team members, treated as code, edited, reviewed, and versioned.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Terraform&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href="https://developer.hashicorp.com/terraform"&gt;https://developer.hashicorp.com/terraform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Forums: &lt;a href="https://discuss.hashicorp.com/c/terraform-core"&gt;HashiCorp Discuss&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://developer.hashicorp.com/terraform/docs"&gt;https://developer.hashicorp.com/terraform/docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tutorials: &lt;a href="https://developer.hashicorp.com/terraform/tutorials"&gt;HashiCorp's Learn Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Certification Exam: &lt;a href="https://www.hashicorp.com/certification/#hashicorp-certified-terraform-associate"&gt;HashiCorp Certified: Terraform Associate&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img alt="Terraform" src="https://www.datocms-assets.com/2885/1731373310-terraform_white.svg?sanitize=true" width="600px" /&gt; 
&lt;p&gt;Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.&lt;/p&gt; 
&lt;p&gt;The key features of Terraform are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Infrastructure as Code&lt;/strong&gt;: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Execution Plans&lt;/strong&gt;: Terraform has a "planning" step where it generates an execution plan. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Resource Graph&lt;/strong&gt;: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Change Automation&lt;/strong&gt;: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, refer to the &lt;a href="https://www.terraform.io/intro"&gt;What is Terraform?&lt;/a&gt; page on the Terraform website.&lt;/p&gt; 
&lt;h2&gt;Getting Started &amp;amp; Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation is available on the &lt;a href="https://developer.hashicorp.com/terraform"&gt;Terraform website&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.hashicorp.com/terraform/intro"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.hashicorp.com/terraform/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you're new to Terraform and want to get started creating infrastructure, please check out our &lt;a href="https://learn.hashicorp.com/terraform#getting-started"&gt;Getting Started guides&lt;/a&gt; on HashiCorp's learning platform. There are also &lt;a href="https://learn.hashicorp.com/terraform#operations-and-development"&gt;additional guides&lt;/a&gt; to continue your learning.&lt;/p&gt; 
&lt;p&gt;Show off your Terraform knowledge by passing a certification exam. Visit the &lt;a href="https://www.hashicorp.com/certification/"&gt;certification page&lt;/a&gt; for information about exams and find &lt;a href="https://learn.hashicorp.com/terraform/certification/terraform-associate"&gt;study materials&lt;/a&gt; on HashiCorp's learning platform.&lt;/p&gt; 
&lt;h2&gt;Developing Terraform&lt;/h2&gt; 
&lt;p&gt;This repository contains only Terraform core, which includes the command line interface and the main graph engine. Providers are implemented as plugins, and Terraform can automatically download providers that are published on &lt;a href="https://registry.terraform.io"&gt;the Terraform Registry&lt;/a&gt;. HashiCorp develops some providers, and others are developed by other organizations. For more information, refer to &lt;a href="https://developer.hashicorp.com/terraform/plugin"&gt;Plugin development&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;To learn more about compiling Terraform and contributing suggested changes, refer to &lt;a href="https://raw.githubusercontent.com/hashicorp/terraform/main/.github/CONTRIBUTING.md"&gt;the contributing guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To learn more about how we handle bug reports, refer to the &lt;a href="https://raw.githubusercontent.com/hashicorp/terraform/main/BUGPROCESS.md"&gt;bug triage guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To learn how to contribute to the Terraform documentation, refer to the &lt;a href="https://github.com/hashicorp/web-unified-docs"&gt;Web Unified Docs repository&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/hashicorp/terraform/raw/main/LICENSE"&gt;Business Source License 1.1&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>go-gitea/gitea</title>
      <link>https://github.com/go-gitea/gitea</link>
      <description>&lt;p&gt;Git with a cup of tea! Painless self-hosted all-in-one software development service, including Git hosting, code review, team collaboration, package registry and CI/CD&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gitea&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/go-gitea/gitea/actions/workflows/release-nightly.yml?query=branch%3Amain" title="Release Nightly"&gt;&lt;img src="https://github.com/go-gitea/gitea/actions/workflows/release-nightly.yml/badge.svg?branch=main" alt="" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/Gitea" title="Join the Discord chat at https://discord.gg/Gitea"&gt;&lt;img src="https://img.shields.io/discord/322538954119184384.svg?logo=discord&amp;amp;logoColor=white&amp;amp;label=Discord&amp;amp;color=5865F2" alt="" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/code.gitea.io/gitea" title="Go Report Card"&gt;&lt;img src="https://goreportcard.com/badge/code.gitea.io/gitea" alt="" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/code.gitea.io/gitea" title="GoDoc"&gt;&lt;img src="https://pkg.go.dev/badge/code.gitea.io/gitea?status.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/go-gitea/gitea/releases/latest" title="GitHub release"&gt;&lt;img src="https://img.shields.io/github/release/go-gitea/gitea.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://www.codetriage.com/go-gitea/gitea" title="Help Contribute to Open Source"&gt;&lt;img src="https://www.codetriage.com/go-gitea/gitea/badges/users.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea" title="Become a backer/sponsor of gitea"&gt;&lt;img src="https://opencollective.com/gitea/tiers/backers/badge.svg?label=backers&amp;amp;color=brightgreen" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT" title="License: MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/go-gitea/gitea"&gt;&lt;img src="https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod&amp;amp;color=green" alt="Contribute with Gitpod" /&gt;&lt;/a&gt; &lt;a href="https://translate.gitea.com" title="Crowdin"&gt;&lt;img src="https://badges.crowdin.net/gitea/localized.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/go-gitea/gitea/main/README.zh-tw.md"&gt;ç¹é«ä¸­æ&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/go-gitea/gitea/main/README.zh-cn.md"&gt;ç®ä½ä¸­æ&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Purpose&lt;/h2&gt; 
&lt;p&gt;The goal of this project is to make the easiest, fastest, and most painless way of setting up a self-hosted Git service.&lt;/p&gt; 
&lt;p&gt;As Gitea is written in Go, it works across &lt;strong&gt;all&lt;/strong&gt; the platforms and architectures that are supported by Go, including Linux, macOS, and Windows on x86, amd64, ARM and PowerPC architectures. This project has been &lt;a href="https://blog.gitea.com/welcome-to-gitea/"&gt;forked&lt;/a&gt; from &lt;a href="https://gogs.io"&gt;Gogs&lt;/a&gt; since November of 2016, but a lot has changed.&lt;/p&gt; 
&lt;p&gt;For online demonstrations, you can visit &lt;a href="https://demo.gitea.com"&gt;demo.gitea.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For accessing free Gitea service (with a limited number of repositories), you can visit &lt;a href="https://gitea.com/user/login"&gt;gitea.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To quickly deploy your own dedicated Gitea instance on Gitea Cloud, you can start a free trial at &lt;a href="https://cloud.gitea.com"&gt;cloud.gitea.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find comprehensive documentation on our official &lt;a href="https://docs.gitea.com/"&gt;documentation website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It includes installation, administration, usage, development, contributing guides, and more to help you get started and explore all features effectively.&lt;/p&gt; 
&lt;p&gt;If you have any suggestions or would like to contribute to it, you can visit the &lt;a href="https://gitea.com/gitea/docs"&gt;documentation repository&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;From the root of the source tree, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TAGS="bindata" make build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or if SQLite support is required:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TAGS="bindata sqlite sqlite_unlock_notify" make build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;build&lt;/code&gt; target is split into two sub-targets:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;make backend&lt;/code&gt; which requires &lt;a href="https://go.dev/dl/"&gt;Go Stable&lt;/a&gt;, the required version is defined in &lt;a href="https://raw.githubusercontent.com/go-gitea/gitea/main/go.mod"&gt;go.mod&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make frontend&lt;/code&gt; which requires &lt;a href="https://nodejs.org/en/download/"&gt;Node.js LTS&lt;/a&gt; or greater and &lt;a href="https://pnpm.io/installation"&gt;pnpm&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Internet connectivity is required to download the go and npm modules. When building from the official source tarballs which include pre-built frontend files, the &lt;code&gt;frontend&lt;/code&gt; target will not be triggered, making it possible to build without Node.js.&lt;/p&gt; 
&lt;p&gt;More info: &lt;a href="https://docs.gitea.com/installation/install-from-source"&gt;https://docs.gitea.com/installation/install-from-source&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Using&lt;/h2&gt; 
&lt;p&gt;After building, a binary file named &lt;code&gt;gitea&lt;/code&gt; will be generated in the root of the source tree by default. To run it, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./gitea web
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you're interested in using our APIs, we have experimental support with &lt;a href="https://docs.gitea.com/api"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Expected workflow is: Fork -&amp;gt; Patch -&amp;gt; Push -&amp;gt; Pull Request&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;YOU MUST READ THE &lt;a href="https://raw.githubusercontent.com/go-gitea/gitea/main/CONTRIBUTING.md"&gt;CONTRIBUTORS GUIDE&lt;/a&gt; BEFORE STARTING TO WORK ON A PULL REQUEST.&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;If you have found a vulnerability in the project, please write privately to &lt;strong&gt;&lt;a href="mailto:security@gitea.io"&gt;security@gitea.io&lt;/a&gt;&lt;/strong&gt;. Thanks!&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Translating&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://translate.gitea.com"&gt;&lt;img src="https://badges.crowdin.net/gitea/localized.svg?sanitize=true" alt="Crowdin" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Translations are done through &lt;a href="https://translate.gitea.com"&gt;Crowdin&lt;/a&gt;. If you want to translate to a new language, ask one of the managers in the Crowdin project to add a new language there.&lt;/p&gt; 
&lt;p&gt;You can also just create an issue for adding a language or ask on Discord on the #translation channel. If you need context or find some translation issues, you can leave a comment on the string or ask on Discord. For general translation questions there is a section in the docs. Currently a bit empty, but we hope to fill it as questions pop up.&lt;/p&gt; 
&lt;p&gt;Get more information from &lt;a href="https://docs.gitea.com/contributing/localization"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Official and Third-Party Projects&lt;/h2&gt; 
&lt;p&gt;We provide an official &lt;a href="https://gitea.com/gitea/go-sdk"&gt;go-sdk&lt;/a&gt;, a CLI tool called &lt;a href="https://gitea.com/gitea/tea"&gt;tea&lt;/a&gt; and an &lt;a href="https://gitea.com/gitea/act_runner"&gt;action runner&lt;/a&gt; for Gitea Action.&lt;/p&gt; 
&lt;p&gt;We maintain a list of Gitea-related projects at &lt;a href="https://gitea.com/gitea/awesome-gitea"&gt;gitea/awesome-gitea&lt;/a&gt;, where you can discover more third-party projects, including SDKs, plugins, themes, and more.&lt;/p&gt; 
&lt;h2&gt;Communication&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/Gitea" title="Join the Discord chat at https://discord.gg/Gitea"&gt;&lt;img src="https://img.shields.io/discord/322538954119184384.svg?logo=discord&amp;amp;logoColor=white&amp;amp;label=Discord&amp;amp;color=5865F2" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you have questions that are not covered by the &lt;a href="https://docs.gitea.com/"&gt;documentation&lt;/a&gt;, you can get in contact with us on our &lt;a href="https://discord.gg/Gitea"&gt;Discord server&lt;/a&gt; or create a post in the &lt;a href="https://forum.gitea.com/"&gt;discourse forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orgs/go-gitea/people"&gt;Maintainers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-gitea/gitea/graphs/contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/go-gitea/gitea/main/options/locale/TRANSLATORS"&gt;Translators&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Backers&lt;/h2&gt; 
&lt;p&gt;Thank you to all our backers! ð [&lt;a href="https://opencollective.com/gitea#backer"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/gitea#backers" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/backers.svg?width=890" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href="https://opencollective.com/gitea#sponsor"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/gitea/sponsor/0/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/0/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/1/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/1/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/2/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/2/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/3/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/3/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/4/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/4/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/5/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/5/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/6/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/6/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/7/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/7/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/8/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/8/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/gitea/sponsor/9/website" target="_blank"&gt;&lt;img src="https://opencollective.com/gitea/sponsor/9/avatar.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;How do you pronounce Gitea?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Gitea is pronounced &lt;a href="https://youtu.be/EM71-2uDAoY"&gt;/É¡Éªâti:/&lt;/a&gt; as in "gi-tea" with a hard g.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Why is this not hosted on a Gitea instance?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We're &lt;a href="https://github.com/go-gitea/gitea/issues/1029"&gt;working on it&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Where can I find the security patches?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In the &lt;a href="https://github.com/go-gitea/gitea/releases"&gt;release log&lt;/a&gt; or the &lt;a href="https://github.com/go-gitea/gitea/raw/main/CHANGELOG.md"&gt;change log&lt;/a&gt;, search for the keyword &lt;code&gt;SECURITY&lt;/code&gt; to find the security patches.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License. See the &lt;a href="https://github.com/go-gitea/gitea/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for the full license text.&lt;/p&gt; 
&lt;h2&gt;Further information&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Looking for an overview of the interface? Check it out!&lt;/summary&gt; 
 &lt;h3&gt;Login/Register Page&lt;/h3&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/login.png" alt="Login" /&gt; &lt;img src="https://dl.gitea.com/screenshots/register.png" alt="Register" /&gt;&lt;/p&gt; 
 &lt;h3&gt;User Dashboard&lt;/h3&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/home.png" alt="Home" /&gt; &lt;img src="https://dl.gitea.com/screenshots/issues.png" alt="Issues" /&gt; &lt;img src="https://dl.gitea.com/screenshots/pull_requests.png" alt="Pull Requests" /&gt; &lt;img src="https://dl.gitea.com/screenshots/milestones.png" alt="Milestones" /&gt;&lt;/p&gt; 
 &lt;h3&gt;User Profile&lt;/h3&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/user_profile.png" alt="Profile" /&gt;&lt;/p&gt; 
 &lt;h3&gt;Explore&lt;/h3&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/explore_repos.png" alt="Repos" /&gt; &lt;img src="https://dl.gitea.com/screenshots/explore_users.png" alt="Users" /&gt; &lt;img src="https://dl.gitea.com/screenshots/explore_orgs.png" alt="Orgs" /&gt;&lt;/p&gt; 
 &lt;h3&gt;Repository&lt;/h3&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/repo_home.png" alt="Home" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_commits.png" alt="Commits" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_branches.png" alt="Branches" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_labels.png" alt="Labels" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_milestones.png" alt="Milestones" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_releases.png" alt="Releases" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_tags.png" alt="Tags" /&gt;&lt;/p&gt; 
 &lt;h4&gt;Repository Issue&lt;/h4&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/repo_issues.png" alt="List" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_issue.png" alt="Issue" /&gt;&lt;/p&gt; 
 &lt;h4&gt;Repository Pull Requests&lt;/h4&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/repo_pull_requests.png" alt="List" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_pull_request.png" alt="Pull Request" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_pull_request_file.png" alt="File" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_pull_request_commits.png" alt="Commits" /&gt;&lt;/p&gt; 
 &lt;h4&gt;Repository Actions&lt;/h4&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/repo_actions.png" alt="List" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_actions_run.png" alt="Details" /&gt;&lt;/p&gt; 
 &lt;h4&gt;Repository Activity&lt;/h4&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/repo_activity.png" alt="Activity" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_contributors.png" alt="Contributors" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_code_frequency.png" alt="Code Frequency" /&gt; &lt;img src="https://dl.gitea.com/screenshots/repo_recent_commits.png" alt="Recent Commits" /&gt;&lt;/p&gt; 
 &lt;h3&gt;Organization&lt;/h3&gt; 
 &lt;p&gt;&lt;img src="https://dl.gitea.com/screenshots/org_home.png" alt="Home" /&gt;&lt;/p&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>openbao/openbao</title>
      <link>https://github.com/openbao/openbao</link>
      <description>&lt;p&gt;OpenBao exists to provide a software solution to manage, store, and distribute sensitive data including secrets, certificates, and keys.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenBao&lt;/h1&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;: We take OpenBao's security and our users' trust very seriously. If you believe you have found a security issue in OpenBao, &lt;em&gt;please responsibly disclose&lt;/em&gt; by contacting us at &lt;a href="mailto:openbao-security@lists.openssf.org"&gt;openbao-security@lists.openssf.org&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.openbao.org"&gt;Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lists.openssf.org/g/openbao"&gt;Mailing List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openbao/openbao/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chat.lfx.linuxfoundation.org/"&gt;Chat Server&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;#openbao-announcements&lt;/code&gt; (&lt;a href="https://matrix.to/#/#openbao-announcements:chat.lfx.linuxfoundation.org"&gt;matrix client&lt;/a&gt;, &lt;a href="https://chat.lfx.linuxfoundation.org/#/room/#openbao-announcements:chat.lfx.linuxfoundation.org"&gt;home server&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;#openbao-development&lt;/code&gt; (&lt;a href="https://matrix.to/#/#openbao-development:chat.lfx.linuxfoundation.org"&gt;matrix client&lt;/a&gt;, &lt;a href="https://chat.lfx.linuxfoundation.org/#/room/#openbao-development:chat.lfx.linuxfoundation.org"&gt;home server&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;#openbao-general&lt;/code&gt; (&lt;a href="https://matrix.to/#/#openbao-general:chat.lfx.linuxfoundation.org"&gt;matrix client&lt;/a&gt;, &lt;a href="https://chat.lfx.linuxfoundation.org/#/room/#openbao-general:chat.lfx.linuxfoundation.org"&gt;home server&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;#openbao-questions&lt;/code&gt; (&lt;a href="https://matrix.to/#/#openbao-questions:chat.lfx.linuxfoundation.org"&gt;matrix client&lt;/a&gt;, &lt;a href="https://chat.lfx.linuxfoundation.org/#/room/#openbao-questions:chat.lfx.linuxfoundation.org"&gt;home server&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;#openbao-random&lt;/code&gt; (&lt;a href="https://matrix.to/#/#openbao-random:chat.lfx.linuxfoundation.org"&gt;matrix client&lt;/a&gt;, &lt;a href="https://chat.lfx.linuxfoundation.org/#/room/#openbao-random:chat.lfx.linuxfoundation.org"&gt;home server&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;img width="300" alt="OpenBao Mascot" src="https://raw.githubusercontent.com/openbao/artwork/main/color/openbao-color.svg?sanitize=true" /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;OpenBao exists to provide a software solution to manage, store, and distribute sensitive data including secrets, certificates, and keys. The OpenBao community intends to provide this software under an OSI-approved open-source license, led by a community run under open governance principles.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A modern system requires access to a multitude of secrets: database credentials, API keys for external services, credentials for service-oriented architecture communication, etc. Understanding who is accessing what secrets is already very difficult and platform-specific. Adding on key rolling, secure storage, and detailed audit logs is almost impossible without a custom solution. This is where OpenBao steps in.&lt;/p&gt; 
&lt;p&gt;The key features of OpenBao are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure Secret Storage&lt;/strong&gt;: Arbitrary key/value secrets can be stored in OpenBao. OpenBao encrypts these secrets prior to writing them to persistent storage, so gaining access to the raw storage isn't enough to access your secrets. OpenBao can write to disk, &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt;, and more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dynamic Secrets&lt;/strong&gt;: OpenBao can generate secrets on-demand for some systems, such as AWS or SQL databases. For example, when an application needs to access an S3 bucket, it asks OpenBao for credentials, and OpenBao will generate an AWS keypair with valid permissions on demand. After creating these dynamic secrets, OpenBao will also automatically revoke them after the lease is up.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Data Encryption&lt;/strong&gt;: OpenBao can encrypt and decrypt data without storing it. This allows security teams to define encryption parameters and developers to store encrypted data in a location such as a SQL database without having to design their own encryption methods.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Leasing and Renewal&lt;/strong&gt;: All secrets in OpenBao have a &lt;em&gt;lease&lt;/em&gt; associated with them. At the end of the lease, OpenBao will automatically revoke that secret. Clients are able to renew leases via built-in renew APIs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Revocation&lt;/strong&gt;: OpenBao has built-in support for secret revocation. OpenBao can revoke not only single secrets, but a tree of secrets, for example, all secrets read by a specific user, or all secrets of a particular type. Revocation assists in key rolling as well as locking down systems in the case of an intrusion.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation, Getting Started, and Certification Exams&lt;/h2&gt; 
&lt;p&gt;Documentation is available on the &lt;a href="https://www.openbao.org/docs/"&gt;OpenBao website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Developing OpenBao&lt;/h2&gt; 
&lt;p&gt;If you wish to work on OpenBao itself or any of its built-in systems, you'll first need &lt;a href="https://www.golang.org"&gt;Go&lt;/a&gt; installed on your machine.&lt;/p&gt; 
&lt;p&gt;For local dev first make sure Go is properly installed, including setting up a &lt;a href="https://golang.org/doc/code.html#GOPATH"&gt;GOPATH&lt;/a&gt;. Ensure that &lt;code&gt;$GOPATH/bin&lt;/code&gt; is in your path as some distributions bundle the old version of build tools. Next, clone this repository. OpenBao uses &lt;a href="https://github.com/golang/go/wiki/Modules"&gt;Go Modules&lt;/a&gt;, so it is recommended that you clone the repository &lt;em&gt;&lt;strong&gt;outside&lt;/strong&gt;&lt;/em&gt; of the GOPATH. You can then download any required build tools by bootstrapping your environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ make bootstrap
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To compile a development version of OpenBao, run &lt;code&gt;make&lt;/code&gt; or &lt;code&gt;make dev&lt;/code&gt;. This will put the OpenBao binary in the &lt;code&gt;bin&lt;/code&gt; and &lt;code&gt;$GOPATH/bin&lt;/code&gt; folders:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ make dev
...
$ bin/bao
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To compile a development version of OpenBao with the UI, run &lt;code&gt;make static-dist dev-ui&lt;/code&gt;. This will put the OpenBao binary in the &lt;code&gt;bin&lt;/code&gt; and &lt;code&gt;$GOPATH/bin&lt;/code&gt; folders:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ make static-dist dev-ui
...
$ bin/bao
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run tests, type &lt;code&gt;make test&lt;/code&gt;. Note: this requires Docker to be installed. If this exits with exit status 0, then everything is working!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ make test
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're developing a specific package, you can run tests for just that package by specifying the &lt;code&gt;TEST&lt;/code&gt; variable. For example below, only &lt;code&gt;vault&lt;/code&gt; package tests will be run.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ make test TEST=./vault
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Importing OpenBao&lt;/h3&gt; 
&lt;p&gt;This repository publishes two libraries that may be imported by other projects: &lt;code&gt;github.com/openbao/openbao/api/v2&lt;/code&gt; and &lt;code&gt;github.com/openbao/openbao/sdk/v2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note that this repository also contains OpenBao (the product), and as with most Go projects, OpenBao uses Go modules to manage its dependencies. The mechanism to do that is the &lt;a href="https://raw.githubusercontent.com/openbao/openbao/main/go.mod"&gt;go.mod&lt;/a&gt; file. As it happens, the presence of that file also makes it theoretically possible to import OpenBao as a dependency into other projects. Some other projects have made a practice of doing so in order to take advantage of testing tooling that was developed for testing OpenBao itself. This is not, and has never been, a supported way to use the OpenBao project. We aren't likely to fix bugs relating to failure to import &lt;code&gt;github.com/openbao/openbao&lt;/code&gt; into your project.&lt;/p&gt; 
&lt;p&gt;See also the section "Docker-based tests" below.&lt;/p&gt; 
&lt;h3&gt;Acceptance Tests&lt;/h3&gt; 
&lt;p&gt;OpenBao has comprehensive &lt;a href="https://en.wikipedia.org/wiki/Acceptance_testing"&gt;acceptance tests&lt;/a&gt; covering most of the features of the secret and auth methods.&lt;/p&gt; 
&lt;p&gt;If you're working on a feature of a secret or auth method and want to verify it is functioning (and also hasn't broken anything else), we recommend running the acceptance tests.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; The acceptance tests create/destroy/modify &lt;em&gt;real resources&lt;/em&gt;, which may incur real costs in some cases. In the presence of a bug, it is technically possible that broken backends could leave dangling data behind. Therefore, please run the acceptance tests at your own risk. At the very least, we recommend running them in their own private account for whatever backend you're testing.&lt;/p&gt; 
&lt;p&gt;To run the acceptance tests, invoke &lt;code&gt;make testacc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ make testacc TEST=./builtin/logical/pki
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;TEST&lt;/code&gt; variable is required, and you should specify the folder where the backend is. The &lt;code&gt;TESTARGS&lt;/code&gt; variable is recommended to filter down to a specific resource to test, since testing all of them at once can sometimes take a very long time.&lt;/p&gt; 
&lt;p&gt;Acceptance tests typically require other environment variables to be set for things such as access keys. The test itself should error early and tell you what to set, so it is not documented here.&lt;/p&gt; 
&lt;h3&gt;Docker-based Tests&lt;/h3&gt; 
&lt;p&gt;We have created an experimental new testing mechanism inspired by NewTestCluster. An example of how to use it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import (
  "testing"
  "github.com/openbao/openbao/sdk/v2/helper/testcluster/docker"
)

func Test_Something_With_Docker(t *testing.T) {
  opts := &amp;amp;docker.DockerClusterOptions{
    ImageRepo: "openbao/openbao",
    ImageTag:    "latest",
  }
  cluster := docker.NewTestDockerCluster(t, opts)
  defer cluster.Cleanup()

  client := cluster.Nodes()[0].APIClient()
  _, err := client.Logical().Read("sys/storage/raft/configuration")
  if err != nil {
    t.Fatal(err)
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here is a more realistic example of how we use it in practice. &lt;code&gt;DefaultOptions&lt;/code&gt; uses &lt;code&gt;hashicorp/vault:latest&lt;/code&gt; as the repo and tag, but it also looks at the environment variable &lt;code&gt;BAO_BINARY&lt;/code&gt;. If populated, it will copy the local file referenced by &lt;code&gt;BAO_BINARY&lt;/code&gt; into the container. This is useful when testing local changes.&lt;/p&gt; 
&lt;p&gt;Optionally you can set &lt;code&gt;COMMIT_SHA&lt;/code&gt;, which will be appended to the image name we build as a debugging convenience.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func Test_Custom_Build_With_Docker(t *testing.T) {
  opts := docker.DefaultOptions(t)
  cluster := docker.NewTestDockerCluster(t, opts)
  defer cluster.Cleanup()
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, here's an example of running an existing OSS docker test with a custom binary:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ GOOS=linux make dev
$ VAULT_BINARY=$(pwd)/bin/bao go test -run 'TestRaft_Configuration_Docker' ./vault/external_tests/raft/raft_binary
ok      github.com/openbao/openbao/vault/external_tests/raft/raft_binary        20.960s
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>tulir/whatsmeow</title>
      <link>https://github.com/tulir/whatsmeow</link>
      <description>&lt;p&gt;Go library for the WhatsApp web multidevice API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;whatsmeow&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/go.mau.fi/whatsmeow"&gt;&lt;img src="https://pkg.go.dev/badge/go.mau.fi/whatsmeow.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;whatsmeow is a Go library for the WhatsApp web multidevice API.&lt;/p&gt; 
&lt;h2&gt;Discussion&lt;/h2&gt; 
&lt;p&gt;Matrix room: &lt;a href="https://matrix.to/#/#whatsmeow:maunium.net"&gt;#whatsmeow:maunium.net&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For questions about the WhatsApp protocol (like how to send a specific type of message), you can also use the &lt;a href="https://github.com/tulir/whatsmeow/discussions/categories/whatsapp-protocol-q-a"&gt;WhatsApp protocol Q&amp;amp;A&lt;/a&gt; section on GitHub discussions.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://pkg.go.dev/go.mau.fi/whatsmeow"&gt;godoc&lt;/a&gt; includes docs for all methods and event types. There's also a &lt;a href="https://pkg.go.dev/go.mau.fi/whatsmeow#example-package"&gt;simple example&lt;/a&gt; at the top.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Most core features are already present:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Sending messages to private chats and groups (both text and media)&lt;/li&gt; 
 &lt;li&gt;Receiving all messages&lt;/li&gt; 
 &lt;li&gt;Managing groups and receiving group change events&lt;/li&gt; 
 &lt;li&gt;Joining via invite messages, using and creating invite links&lt;/li&gt; 
 &lt;li&gt;Sending and receiving typing notifications&lt;/li&gt; 
 &lt;li&gt;Sending and receiving delivery and read receipts&lt;/li&gt; 
 &lt;li&gt;Reading and writing app state (contact list, chat pin/mute status, etc)&lt;/li&gt; 
 &lt;li&gt;Sending and handling retry receipts if message decryption fails&lt;/li&gt; 
 &lt;li&gt;Sending status messages (experimental, may not work for large contact lists)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Things that are not yet implemented:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Sending broadcast list messages (this is not supported on WhatsApp web either)&lt;/li&gt; 
 &lt;li&gt;Calls&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>coder/coder</title>
      <link>https://github.com/coder/coder</link>
      <description>&lt;p&gt;Secure environments for developers and their agents&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://coder.com#gh-light-mode-only"&gt; &lt;img src="https://raw.githubusercontent.com/coder/coder/main/docs/images/logo-black.png" alt="Coder Logo Light" style="width: 128px" /&gt; &lt;/a&gt; 
 &lt;a href="https://coder.com#gh-dark-mode-only"&gt; &lt;img src="https://raw.githubusercontent.com/coder/coder/main/docs/images/logo-white.png" alt="Coder Logo Dark" style="width: 128px" /&gt; &lt;/a&gt; 
 &lt;h1&gt; Self-Hosted Cloud Development Environments &lt;/h1&gt; 
 &lt;a href="https://coder.com#gh-light-mode-only"&gt; &lt;img src="https://raw.githubusercontent.com/coder/coder/main/docs/images/banner-black.png" alt="Coder Banner Light" style="width: 650px" /&gt; &lt;/a&gt; 
 &lt;a href="https://coder.com#gh-dark-mode-only"&gt; &lt;img src="https://raw.githubusercontent.com/coder/coder/main/docs/images/banner-white.png" alt="Coder Banner Dark" style="width: 650px" /&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/coder/coder/main/#quickstart"&gt;Quickstart&lt;/a&gt; | &lt;a href="https://coder.com/docs"&gt;Docs&lt;/a&gt; | &lt;a href="https://coder.com/why"&gt;Why Coder&lt;/a&gt; | &lt;a href="https://coder.com/pricing#compare-plans"&gt;Premium&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://discord.gg/coder"&gt;&lt;img src="https://img.shields.io/discord/747933592273027093?label=discord" alt="discord" /&gt;&lt;/a&gt; &lt;a href="https://github.com/coder/coder/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/coder/coder" alt="release" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/coder/coder"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/coder/coder.svg?sanitize=true" alt="godoc" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/coder/coder/v2"&gt;&lt;img src="https://goreportcard.com/badge/github.com/coder/coder/v2" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/9511"&gt;&lt;img src="https://www.bestpractices.dev/projects/9511/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com%2Fcoder%2Fcoder"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/coder/coder/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/coder/coder/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/coder/coder" alt="license" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://coder.com"&gt;Coder&lt;/a&gt; enables organizations to set up development environments in their public or private cloud infrastructure. Cloud development environments are defined with Terraform, connected through a secure high-speed WireguardÂ® tunnel, and automatically shut down when not used to save on costs. Coder gives engineering teams the flexibility to use the cloud for workloads most beneficial to them.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Define cloud development environments in Terraform 
  &lt;ul&gt; 
   &lt;li&gt;EC2 VMs, Kubernetes Pods, Docker Containers, etc.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Automatically shutdown idle resources to save on costs&lt;/li&gt; 
 &lt;li&gt;Onboard developers in seconds instead of days&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/coder/coder/main/docs/images/hero-image.png" alt="Coder Hero Image" /&gt; &lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;The most convenient way to try Coder is to install it on your local machine and experiment with provisioning cloud development environments using Docker (works on Linux, macOS, and Windows).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# First, install Coder
curl -L https://coder.com/install.sh | sh

# Start the Coder server (caches data in ~/.cache/coder)
coder server

# Navigate to http://localhost:3000 to create your initial user,
# create a Docker template and provision a workspace
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;The easiest way to install Coder is to use our &lt;a href="https://github.com/coder/coder/raw/main/install.sh"&gt;install script&lt;/a&gt; for Linux and macOS. For Windows, use the latest &lt;code&gt;..._installer.exe&lt;/code&gt; file from GitHub Releases.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl -L https://coder.com/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can run the install script with &lt;code&gt;--dry-run&lt;/code&gt; to see the commands that will be used to install without executing them. Run the install script with &lt;code&gt;--help&lt;/code&gt; for additional flags.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;See &lt;a href="https://coder.com/docs/install"&gt;install&lt;/a&gt; for additional methods.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Once installed, you can start a production deployment with a single command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Automatically sets up an external access URL on *.try.coder.app
coder server

# Requires a PostgreSQL instance (version 13 or higher) and external access URL
coder server --postgres-url &amp;lt;url&amp;gt; --access-url &amp;lt;url&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use &lt;code&gt;coder --help&lt;/code&gt; to get a list of flags and environment variables. Use our &lt;a href="https://coder.com/docs/install"&gt;install guides&lt;/a&gt; for a complete walkthrough.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Browse our docs &lt;a href="https://coder.com/docs"&gt;here&lt;/a&gt; or visit a specific section below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://coder.com/docs/templates"&gt;&lt;strong&gt;Templates&lt;/strong&gt;&lt;/a&gt;: Templates are written in Terraform and describe the infrastructure for workspaces&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://coder.com/docs/workspaces"&gt;&lt;strong&gt;Workspaces&lt;/strong&gt;&lt;/a&gt;: Workspaces contain the IDEs, dependencies, and configuration information needed for software development&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://coder.com/docs/ides"&gt;&lt;strong&gt;IDEs&lt;/strong&gt;&lt;/a&gt;: Connect your existing editor to a workspace&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://coder.com/docs/admin"&gt;&lt;strong&gt;Administration&lt;/strong&gt;&lt;/a&gt;: Learn how to operate Coder&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://coder.com/pricing#compare-plans"&gt;&lt;strong&gt;Premium&lt;/strong&gt;&lt;/a&gt;: Learn about our paid features built for large teams&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Feel free to &lt;a href="https://github.com/coder/coder/issues/new"&gt;open an issue&lt;/a&gt; if you have questions, run into bugs, or have a feature request.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/coder"&gt;Join our Discord&lt;/a&gt; to provide feedback on in-progress features and chat with the community using Coder!&lt;/p&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;p&gt;We are always working on new integrations. Please feel free to open an issue and ask for an integration. Contributions are welcome in any official or community repositories.&lt;/p&gt; 
&lt;h3&gt;Official&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=coder.coder-remote"&gt;&lt;strong&gt;VS Code Extension&lt;/strong&gt;&lt;/a&gt;: Open any Coder workspace in VS Code with a single click&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://plugins.jetbrains.com/plugin/26968-coder"&gt;&lt;strong&gt;JetBrains Toolbox Plugin&lt;/strong&gt;&lt;/a&gt;: Open any Coder workspace from JetBrains Toolbox with a single click&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://plugins.jetbrains.com/plugin/19620-coder"&gt;&lt;strong&gt;JetBrains Gateway Plugin&lt;/strong&gt;&lt;/a&gt;: Open any Coder workspace in JetBrains Gateway with a single click&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coder/envbuilder"&gt;&lt;strong&gt;Dev Container Builder&lt;/strong&gt;&lt;/a&gt;: Build development environments using &lt;code&gt;devcontainer.json&lt;/code&gt; on Docker, Kubernetes, and OpenShift&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://registry.coder.com"&gt;&lt;strong&gt;Coder Registry&lt;/strong&gt;&lt;/a&gt;: Build and extend development environments with common use-cases&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coder/coder-logstream-kube"&gt;&lt;strong&gt;Kubernetes Log Stream&lt;/strong&gt;&lt;/a&gt;: Stream Kubernetes Pod events to the Coder startup logs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coder/code-marketplace"&gt;&lt;strong&gt;Self-Hosted VS Code Extension Marketplace&lt;/strong&gt;&lt;/a&gt;: A private extension marketplace that works in restricted or airgapped networks integrating with &lt;a href="https://github.com/coder/code-server"&gt;code-server&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marketplace/actions/setup-coder"&gt;&lt;strong&gt;Setup Coder&lt;/strong&gt;&lt;/a&gt;: An action to setup coder CLI in GitHub workflows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ElliotG/coder-oss-tf"&gt;&lt;strong&gt;Provision Coder with Terraform&lt;/strong&gt;&lt;/a&gt;: Provision Coder on Google GKE, Azure AKS, AWS EKS, DigitalOcean DOKS, IBMCloud K8s, OVHCloud K8s, and Scaleway K8s Kapsule with Terraform&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marketplace/actions/update-coder-template"&gt;&lt;strong&gt;Coder Template GitHub Action&lt;/strong&gt;&lt;/a&gt;: A GitHub Action that updates Coder templates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We are always happy to see new contributors to Coder. If you are new to the Coder codebase, we have &lt;a href="https://coder.com/docs/CONTRIBUTING"&gt;a guide on how to get started&lt;/a&gt;. We'd love to see your contributions!&lt;/p&gt; 
&lt;h2&gt;Hiring&lt;/h2&gt; 
&lt;p&gt;Apply &lt;a href="https://jobs.ashbyhq.com/coder?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=unknown"&gt;here&lt;/a&gt; if you're interested in joining our team.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>stacklok/toolhive</title>
      <link>https://github.com/stacklok/toolhive</link>
      <description>&lt;p&gt;ToolHive makes deploying MCP servers easy, secure and fun&lt;/p&gt;&lt;hr&gt;&lt;p float="left"&gt; 
 &lt;picture&gt; 
  &lt;img src="https://raw.githubusercontent.com/stacklok/toolhive/main/docs/images/toolhive-icon-1024.png" alt="ToolHive Studio logo" height="100" align="middle" /&gt; 
 &lt;/picture&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="docs/images/toolhive-wordmark-white.png" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/stacklok/toolhive/main/docs/images/toolhive-wordmark-black.png" alt="ToolHive wordmark" width="500" align="middle" hspace="20" /&gt; 
 &lt;/picture&gt; 
 &lt;picture&gt; 
  &lt;img src="https://raw.githubusercontent.com/stacklok/toolhive/main/docs/images/toolhive.png" alt="ToolHive mascot" width="125" align="middle" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/stacklok/toolhive/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/stacklok/toolhive?style=flat&amp;amp;label=Latest%20version" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/stacklok/toolhive/actions/workflows/run-on-main.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/stacklok/toolhive/run-on-main.yml?style=flat&amp;amp;logo=github&amp;amp;label=Build" alt="Build status" /&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/stacklok/toolhive?branch=main"&gt;&lt;img src="https://coveralls.io/repos/github/stacklok/toolhive/badge.svg?branch=main" alt="Coverage Status" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache2.0-blue.svg?style=flat" alt="License: Apache 2.0" /&gt;&lt;/a&gt; &lt;a href="https://github.com/stacklok/toolhive"&gt;&lt;img src="https://img.shields.io/github/stars/stacklok/toolhive.svg?style=flat&amp;amp;logo=github&amp;amp;label=Stars" alt="Star on GitHub" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/stacklok"&gt;&lt;img src="https://img.shields.io/discord/1184987096302239844?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;label=Discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;ToolHive - simplify and secure MCP servers&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Run any Model Context Protocol (MCP) server â securely, instantly, anywhere.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;ToolHive is the easiest way to discover, deploy, and manage MCP servers. Launch any MCP server in a locked-down container with a single command. No manual setup, no security headaches, no runtime hassles.&lt;/p&gt; 
&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="docs/images/toolhive-diagram-dark.svg" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/stacklok/toolhive/main/docs/images/toolhive-diagram-light.svg?sanitize=true" alt="ToolHive diagram" width="800" style="padding: 20px 0" /&gt; 
&lt;/picture&gt; 
&lt;hr /&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="50%"&gt; &lt;h2&gt;Why ToolHive?&lt;/h2&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;strong&gt;Instant deployment:&lt;/strong&gt; Start any MCP server with one click or command, using Docker or Kubernetes.&lt;/li&gt; 
     &lt;li&gt;&lt;strong&gt;Secure by default:&lt;/strong&gt; Every server runs in an isolated container with only the permissions it needs. Secrets are managed securely, never in plaintext.&lt;/li&gt; 
     &lt;li&gt;&lt;strong&gt;Works everywhere:&lt;/strong&gt; Use the UI and CLI for local development, or the Kubernetes Operator for production and scale.&lt;/li&gt; 
     &lt;li&gt;&lt;strong&gt;Seamless integration:&lt;/strong&gt; ToolHive auto-configures popular clients like GitHub Copilot, Cursor, and more.&lt;/li&gt; 
    &lt;/ul&gt; &lt;p&gt;ToolHive is available as a GUI desktop app, CLI, and Kubernetes Operator.&lt;/p&gt; &lt;br /&gt; &lt;/td&gt; 
   &lt;td width="50%" align="center"&gt; 
    &lt;picture&gt; 
     &lt;source media="(prefers-color-scheme: dark)" srcset="docs/images/toolhive-sources-dark.svg" /&gt; 
     &lt;img src="https://raw.githubusercontent.com/stacklok/toolhive/main/docs/images/toolhive-sources-light.svg?sanitize=true" alt="ToolHive sources diagram" width="400px" /&gt; 
    &lt;/picture&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Quick links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;ð &lt;a href="https://docs.stacklok.com/toolhive/"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ð Quickstart guides: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.stacklok.com/toolhive/tutorials/quickstart-ui"&gt;Desktop app&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.stacklok.com/toolhive/tutorials/quickstart-cli"&gt;CLI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.stacklok.com/toolhive/tutorials/quickstart-k8s"&gt;Kubernetes Operator&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ð¬ &lt;a href="https://discord.gg/stacklok"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions and feedback from the community!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ð &lt;a href="https://github.com/stacklok/toolhive/issues"&gt;Report issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ð¬ &lt;a href="https://discord.gg/stacklok"&gt;Join our Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have ideas, suggestions, or want to get involved, check out our contributing guide or open an issue. Join us in making ToolHive even better!&lt;/p&gt; 
&lt;p&gt;Contribute to the CLI, API, and Kubernetes Operator:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ð¤ &lt;a href="https://raw.githubusercontent.com/stacklok/toolhive/main/CONTRIBUTING.md"&gt;Contributing guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ð &lt;a href="https://raw.githubusercontent.com/stacklok/toolhive/main/docs/README.md"&gt;Developer guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Contribute to the desktop UI:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ð¥ï¸ &lt;a href="https://github.com/stacklok/toolhive-studio"&gt;Desktop UI repository&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Contribute to the documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ð &lt;a href="https://github.com/stacklok/docs-website"&gt;Documentation repository&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/stacklok/toolhive/main/LICENSE"&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- Badge links --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- markdownlint-disable-file first-line-heading no-inline-html --&gt;</description>
    </item>
    
    <item>
      <title>pulumi/pulumi</title>
      <link>https://github.com/pulumi/pulumi</link>
      <description>&lt;p&gt;Pulumi - Infrastructure as Code in any programming language ð&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.pulumi.com/?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=pulumi-pulumi-github-repo&amp;amp;utm_content=top+logo" title="Pulumi - Modern Infrastructure as Code - AWS Azure Kubernetes Containers Serverless"&gt; &lt;img src="https://www.pulumi.com/images/logo/logo-on-white-box.svg?" width="350" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://slack.pulumi.com/"&gt;&lt;img src="http://www.pulumi.com/images/docs/badges/slack.svg?sanitize=true" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://github.com/pulumi/pulumi/discussions"&gt;&lt;img src="https://img.shields.io/github/discussions/pulumi/pulumi" alt="GitHub Discussions" /&gt;&lt;/a&gt; &lt;a href="https://npmjs.com/package/@pulumi/pulumi"&gt;&lt;img src="https://badge.fury.io/js/%40pulumi%2Fpulumi.svg?sanitize=true" alt="NPM version" /&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/pulumi"&gt;&lt;img src="https://badge.fury.io/py/pulumi.svg?sanitize=true" alt="Python version" /&gt;&lt;/a&gt; &lt;a href="https://badge.fury.io/nu/pulumi"&gt;&lt;img src="https://badge.fury.io/nu/pulumi.svg?sanitize=true" alt="NuGet version" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/pulumi/pulumi"&gt;&lt;img src="https://godoc.org/github.com/pulumi/pulumi?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/pulumi/pulumi/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/pulumi/pulumi" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Infrastructure as Code in any Programming Language&lt;/h1&gt; 
&lt;a href="https://www.pulumi.com/docs/iac/get-started/"&gt; &lt;img src="https://www.pulumi.com/images/get-started.svg?" align="right" width="120" /&gt; &lt;/a&gt; 
&lt;p&gt;&lt;strong&gt;Pulumi Infrastructure as Code&lt;/strong&gt; is the easiest way to build and deploy infrastructure, of any architecture and on any cloud, using programming languages that you already know and love. Code and ship infrastructure faster with your favorite languages and tools, and embed IaC anywhere with &lt;a href="https://www.pulumi.com/docs/iac/using-pulumi/automation-api/"&gt;Automation API&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Simply write code in your favorite language and Pulumi automatically provisions and manages your resources on &lt;a href="https://www.pulumi.com/docs/iac/clouds/aws/"&gt;AWS&lt;/a&gt;, &lt;a href="https://www.pulumi.com/docs/iac/clouds/azure/"&gt;Azure&lt;/a&gt;, &lt;a href="https://www.pulumi.com/docs/iac/clouds/gcp/"&gt;Google Cloud Platform&lt;/a&gt;, &lt;a href="https://www.pulumi.com/docs/iac/clouds/kubernetes/"&gt;Kubernetes&lt;/a&gt;, and &lt;a href="https://www.pulumi.com/registry/"&gt;120+ providers&lt;/a&gt; using an &lt;a href="https://www.pulumi.com/what-is/what-is-infrastructure-as-code/"&gt;infrastructure-as-code&lt;/a&gt; approach. Skip the YAML, and use standard language features like loops, functions, classes, and package management that you already know and love.&lt;/p&gt; 
&lt;p&gt;For example, create three web servers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;const aws = require("@pulumi/aws");
const sg = new aws.ec2.SecurityGroup("web-sg", {
    ingress: [{ protocol: "tcp", fromPort: 80, toPort: 80, cidrBlocks: ["0.0.0.0/0"] }],
});
for (let i = 0; i &amp;lt; 3; i++) {
    new aws.ec2.Instance(`web-${i}`, {
        ami: "ami-7172b611",
        instanceType: "t2.micro",
        vpcSecurityGroupIds: [sg.id],
        userData: `#!/bin/bash
            echo "Hello, World!" &amp;gt; index.html
            nohup python -m SimpleHTTPServer 80 &amp;amp;`,
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or a simple serverless timer that archives Hacker News every day at 8:30AM:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;const aws = require("@pulumi/aws");

const snapshots = new aws.dynamodb.Table("snapshots", {
    attributes: [{ name: "id", type: "S", }],
    hashKey: "id", billingMode: "PAY_PER_REQUEST",
});

aws.cloudwatch.onSchedule("daily-yc-snapshot", "cron(30 8 * * ? *)", () =&amp;gt; {
    require("https").get("https://news.ycombinator.com", res =&amp;gt; {
        let content = "";
        res.setEncoding("utf8");
        res.on("data", chunk =&amp;gt; content += chunk);
        res.on("end", () =&amp;gt; new aws.sdk.DynamoDB.DocumentClient().put({
            TableName: snapshots.name.get(),
            Item: { date: Date.now(), content },
        }).promise());
    }).end();
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Many examples are available spanning containers, serverless, and infrastructure in &lt;a href="https://github.com/pulumi/examples"&gt;pulumi/examples&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Pulumi is open source under the &lt;a href="https://github.com/pulumi/pulumi/raw/master/LICENSE"&gt;Apache 2.0 license&lt;/a&gt;, supports many languages and clouds, and is easy to extend. This repo contains the &lt;code&gt;pulumi&lt;/code&gt; CLI, language SDKs, and core Pulumi engine, and individual libraries are in their own repos.&lt;/p&gt; 
&lt;h2&gt;Welcome&lt;/h2&gt; 
&lt;img align="right" width="400" src="https://www.pulumi.com/images/docs/quickstart/console.png" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/docs/iac/get-started/"&gt;Get Started with Pulumi&lt;/a&gt;&lt;/strong&gt;: Deploy a simple application in AWS, Azure, Google Cloud, or Kubernetes using Pulumi.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/tutorials/"&gt;Learn&lt;/a&gt;&lt;/strong&gt;: Follow Pulumi learning pathways to learn best practices and architectural patterns through authentic examples.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/pulumi/examples"&gt;Examples&lt;/a&gt;&lt;/strong&gt;: Browse several examples across many languages, clouds, and scenarios including containers, serverless, and infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/docs/"&gt;Docs&lt;/a&gt;&lt;/strong&gt;: Learn about Pulumi concepts, follow user-guides, and consult the reference documentation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/registry/"&gt;Registry&lt;/a&gt;&lt;/strong&gt;: Find the Pulumi Package with the resources you need. Install the package directly into your project, browse the API documentation, and start building.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.pulumi.com/product/secrets-management/"&gt;Secrets Management&lt;/a&gt;&lt;/strong&gt;: Tame secrets sprawl and configuration complexity securely across all your cloud infrastructure and applications with Pulumi ESC.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/orgs/pulumi/projects/44"&gt;Pulumi Roadmap&lt;/a&gt;&lt;/strong&gt;: Review the planned work for the upcoming quarter and a selected backlog of issues that are on our mind but not yet scheduled.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://slack.pulumi.com/"&gt;Community Slack&lt;/a&gt;&lt;/strong&gt;: Join us in Pulumi Community Slack. All conversations and questions are welcome.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/pulumi/pulumi/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/strong&gt;: Ask questions or share what you're building with Pulumi.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a name="getting-started"&gt;&lt;/a&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=6f8KF6UGN7g"&gt;&lt;img src="https://raw.githubusercontent.com/pulumi/pulumi/master/youtube_preview_image.png" alt="Watch the video" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://www.pulumi.com/docs/iac/get-started/"&gt;Get Started&lt;/a&gt; guide to quickly get started with Pulumi on your platform and cloud of choice.&lt;/p&gt; 
&lt;p&gt;Otherwise, the following steps demonstrate how to deploy your first Pulumi program, using AWS Serverless Lambdas, in minutes:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;To install the latest Pulumi release, run the following (see full &lt;a href="https://www.pulumi.com/docs/iac/download-install/"&gt;installation instructions&lt;/a&gt; for additional installation options):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ curl -fsSL https://get.pulumi.com/ | sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a Project&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;After installing, you can get started with the &lt;code&gt;pulumi new&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ mkdir pulumi-demo &amp;amp;&amp;amp; cd pulumi-demo
$ pulumi new hello-aws-javascript
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;new&lt;/code&gt; command offers templates for all languages and clouds. Run it without an argument and it'll prompt you with available projects. This command created an AWS Serverless Lambda project written in JavaScript.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Deploy to the Cloud&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Run &lt;code&gt;pulumi up&lt;/code&gt; to get your code to the cloud:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ pulumi up
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This makes all cloud resources needed to run your code. Simply make edits to your project, and subsequent &lt;code&gt;pulumi up&lt;/code&gt;s will compute the minimal diff to deploy your changes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use Your Program&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Now that your code is deployed, you can interact with it. In the above example, we can curl the endpoint:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ curl $(pulumi stack output url)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Access the Logs&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;If you're using containers or functions, Pulumi's unified logging command will show all of your logs:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ pulumi logs -f
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Destroy your Resources&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;After you're done, you can remove all resources created by your program:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ pulumi destroy -y
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To learn more, head over to &lt;a href="https://pulumi.com/"&gt;pulumi.com&lt;/a&gt; for much more information, including &lt;a href="https://www.pulumi.com/tutorials/"&gt;tutorials&lt;/a&gt;, &lt;a href="https://github.com/pulumi/examples"&gt;examples&lt;/a&gt;, and details of the core Pulumi CLI and &lt;a href="https://www.pulumi.com/docs/iac/concepts/"&gt;programming model concepts&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a name="platform"&gt;&lt;/a&gt;Platform&lt;/h2&gt; 
&lt;h3&gt;Languages&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Runtime&lt;/th&gt; 
   &lt;th&gt;Versions&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/logo-js.png" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/javascript/"&gt;JavaScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://nodejs.org/en/about/previous-releases"&gt;Current, Active and Maintenance LTS versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/logo-ts.png" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/javascript/"&gt;TypeScript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://nodejs.org/en/about/previous-releases"&gt;Current, Active and Maintenance LTS versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/logo-python.svg?sanitize=true" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/python/"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;Python&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://devguide.python.org/versions/#versions"&gt;Supported versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/logo-golang.png" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/go/"&gt;Go&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://go.dev/doc/devel/release#policy"&gt;Supported versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/dotnet.svg?sanitize=true" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/dotnet/"&gt;.NET (C#/F#/VB.NET)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;.NET&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://dotnet.microsoft.com/en-us/platform/support/policy/dotnet-core#lifecycle"&gt;Supported versions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/java.svg?sanitize=true" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/java/"&gt;Java&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;JDK&lt;/td&gt; 
   &lt;td&gt;11+&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.pulumi.com/logos/tech/yaml.svg?sanitize=true" height="38" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pulumi.com/docs/iac/languages-sdks/yaml/"&gt;YAML&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;EOL Releases&lt;/h3&gt; 
&lt;p&gt;The Pulumi CLI v1 and v2 are no longer supported. If you are not yet running v3, please consider migrating to v3 to continue getting the latest and greatest Pulumi has to offer! &lt;span&gt;ðª&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;To migrate from v2 to v3, please see our &lt;a href="https://www.pulumi.com/docs/iac/download-install/migrating-3.0/"&gt;v3 Migration Guide&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Clouds&lt;/h3&gt; 
&lt;p&gt;Visit the &lt;a href="https://www.pulumi.com/registry/"&gt;Registry&lt;/a&gt; for the full list of supported cloud and infrastructure providers.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://github.com/pulumi/pulumi/raw/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for information on building Pulumi from source or contributing improvements.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>amacneil/dbmate</title>
      <link>https://github.com/amacneil/dbmate</link>
      <description>&lt;p&gt;ð A lightweight, framework-agnostic database migration tool.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dbmate&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/amacneil/dbmate/releases"&gt;&lt;img src="https://img.shields.io/github/release/amacneil/dbmate.svg?sanitize=true" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/amacneil/dbmate"&gt;&lt;img src="https://goreportcard.com/badge/github.com/amacneil/dbmate" alt="Go Report" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/amacneil/dbmate/v2/pkg/dbmate"&gt;&lt;img src="https://img.shields.io/badge/go.dev-reference-blue?logo=go&amp;amp;logoColor=white" alt="Reference" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Dbmate is a database migration tool that will keep your database schema in sync across multiple developers and your production servers.&lt;/p&gt; 
&lt;p&gt;It is a standalone command line tool that can be used with Go, Node.js, Python, Ruby, PHP, Rust, C++, or any other language or framework you are using to write database-backed applications. This is especially helpful if you are writing multiple services in different languages, and want to maintain some sanity with consistent development tools.&lt;/p&gt; 
&lt;p&gt;For a comparison between dbmate and other popular database schema migration tools, please see &lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#alternatives"&gt;Alternatives&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#commands"&gt;Commands&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#command-line-options"&gt;Command Line Options&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#usage"&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#connecting-to-the-database"&gt;Connecting to the Database&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#postgresql"&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#mysql"&gt;MySQL&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#sqlite"&gt;SQLite&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#clickhouse"&gt;ClickHouse&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#bigquery"&gt;BigQuery&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#spanner"&gt;Spanner&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#creating-migrations"&gt;Creating Migrations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#running-migrations"&gt;Running Migrations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#rolling-back-migrations"&gt;Rolling Back Migrations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#migration-options"&gt;Migration Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#waiting-for-the-database"&gt;Waiting For The Database&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#exporting-schema-file"&gt;Exporting Schema File&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#library"&gt;Library&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#use-dbmate-as-a-library"&gt;Use dbmate as a library&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#embedding-migrations"&gt;Embedding migrations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#concepts"&gt;Concepts&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#migration-files"&gt;Migration files&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#schema-file"&gt;Schema file&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#schema-migrations-table"&gt;Schema migrations table&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#alternatives"&gt;Alternatives&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports MySQL, PostgreSQL, SQLite, and ClickHouse&lt;/li&gt; 
 &lt;li&gt;Uses plain SQL for writing schema migrations&lt;/li&gt; 
 &lt;li&gt;Migrations are timestamp-versioned, to avoid version number conflicts with multiple developers&lt;/li&gt; 
 &lt;li&gt;Migrations are run atomically inside a transaction&lt;/li&gt; 
 &lt;li&gt;Supports creating and dropping databases (handy in development/test)&lt;/li&gt; 
 &lt;li&gt;Supports saving a &lt;code&gt;schema.sql&lt;/code&gt; file to easily diff schema changes in git&lt;/li&gt; 
 &lt;li&gt;Database connection URL is defined using an environment variable (&lt;code&gt;DATABASE_URL&lt;/code&gt; by default), or specified on the command line&lt;/li&gt; 
 &lt;li&gt;Built-in support for reading environment variables from your &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; 
 &lt;li&gt;Easy to distribute, single self-contained binary&lt;/li&gt; 
 &lt;li&gt;Doesn't try to upsell you on a SaaS service&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NPM&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Install using &lt;a href="https://www.npmjs.com/"&gt;NPM&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install --save-dev dbmate
npx dbmate --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Install using &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install dbmate
dbmate --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Install the binary directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo curl -fsSL -o /usr/local/bin/dbmate https://github.com/amacneil/dbmate/releases/latest/download/dbmate-linux-amd64
sudo chmod +x /usr/local/bin/dbmate
/usr/local/bin/dbmate --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Install using &lt;a href="https://scoop.sh"&gt;Scoop&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-pwsh"&gt;scoop install dbmate
dbmate --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Docker images are published to GitHub Container Registry (&lt;a href="https://ghcr.io/amacneil/dbmate"&gt;&lt;code&gt;ghcr.io/amacneil/dbmate&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;Remember to set &lt;code&gt;--network=host&lt;/code&gt; or see &lt;a href="https://github.com/amacneil/dbmate/issues/128#issuecomment-615924611"&gt;this comment&lt;/a&gt; for more tips on using dbmate with docker networking):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker run --rm -it --network=host ghcr.io/amacneil/dbmate --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you wish to create or apply migrations, you will need to use Docker's &lt;a href="https://docs.docker.com/storage/bind-mounts/"&gt;bind mount&lt;/a&gt; feature to make your local working directory (&lt;code&gt;pwd&lt;/code&gt;) available inside the dbmate container:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker run --rm -it --network=host -v "$(pwd)/db:/db" ghcr.io/amacneil/dbmate new create_users_table
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Commands&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;dbmate --help    # print usage help
dbmate new       # generate a new migration file
dbmate up        # create the database (if it does not already exist) and run any pending migrations
dbmate create    # create the database
dbmate drop      # drop the database
dbmate migrate   # run any pending migrations
dbmate rollback  # roll back the most recent migration
dbmate down      # alias for rollback
dbmate status    # show the status of all migrations (supports --exit-code and --quiet)
dbmate dump      # write the database schema.sql file
dbmate load      # load schema.sql file to the database
dbmate wait      # wait for the database server to become available
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Command Line Options&lt;/h3&gt; 
&lt;p&gt;The following options are available with all commands. You must use command line arguments in the order &lt;code&gt;dbmate [global options] command [command options]&lt;/code&gt;. Most options can also be configured via environment variables (and loaded from your &lt;code&gt;.env&lt;/code&gt; file, which is helpful to share configuration between team members).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--url, -u "protocol://host:port/dbname"&lt;/code&gt; - specify the database url directly. &lt;em&gt;(env: &lt;code&gt;DATABASE_URL&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--env, -e "DATABASE_URL"&lt;/code&gt; - specify an environment variable to read the database connection URL from.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--env-file ".env"&lt;/code&gt; - specify an alternate environment variables file(s) to load.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--migrations-dir, -d "./db/migrations"&lt;/code&gt; - where to keep the migration files. &lt;em&gt;(env: &lt;code&gt;DBMATE_MIGRATIONS_DIR&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--migrations-table "schema_migrations"&lt;/code&gt; - database table to record migrations in. &lt;em&gt;(env: &lt;code&gt;DBMATE_MIGRATIONS_TABLE&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--schema-file, -s "./db/schema.sql"&lt;/code&gt; - a path to keep the schema.sql file. &lt;em&gt;(env: &lt;code&gt;DBMATE_SCHEMA_FILE&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--no-dump-schema&lt;/code&gt; - don't auto-update the schema.sql file on migrate/rollback &lt;em&gt;(env: &lt;code&gt;DBMATE_NO_DUMP_SCHEMA&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--strict&lt;/code&gt; - fail if migrations would be applied out of order &lt;em&gt;(env: &lt;code&gt;DBMATE_STRICT&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--wait&lt;/code&gt; - wait for the db to become available before executing the subsequent command &lt;em&gt;(env: &lt;code&gt;DBMATE_WAIT&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--wait-timeout 60s&lt;/code&gt; - timeout for --wait flag &lt;em&gt;(env: &lt;code&gt;DBMATE_WAIT_TIMEOUT&lt;/code&gt;)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Connecting to the Database&lt;/h3&gt; 
&lt;p&gt;Dbmate locates your database using the &lt;code&gt;DATABASE_URL&lt;/code&gt; environment variable by default. If you are writing a &lt;a href="http://12factor.net/"&gt;twelve-factor app&lt;/a&gt;, you should be storing all connection strings in environment variables.&lt;/p&gt; 
&lt;p&gt;To make this easy in development, dbmate looks for a &lt;code&gt;.env&lt;/code&gt; file in the current directory, and treats any variables listed there as if they were specified in the current environment (existing environment variables take preference, however).&lt;/p&gt; 
&lt;p&gt;If you do not already have a &lt;code&gt;.env&lt;/code&gt; file, create one and add your database connection URL:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ cat .env
DATABASE_URL="postgres://postgres@127.0.0.1:5432/myapp_development?sslmode=disable"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;DATABASE_URL&lt;/code&gt; should be specified in the following format:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;protocol://username:password@host:port/database_name?options
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;protocol&lt;/code&gt; must be one of &lt;code&gt;mysql&lt;/code&gt;, &lt;code&gt;postgres&lt;/code&gt;, &lt;code&gt;postgresql&lt;/code&gt;, &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;sqlite3&lt;/code&gt;, &lt;code&gt;clickhouse&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; must be URL encoded (you will get an error if you use special charactors)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;host&lt;/code&gt; can be either a hostname or IP address&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;options&lt;/code&gt; are driver-specific (refer to the underlying Go SQL drivers if you wish to use these)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Dbmate can also load the connection URL from a different environment variable. For example, before running your test suite, you may wish to drop and recreate the test database. One easy way to do this is to store your test database connection URL in the &lt;code&gt;TEST_DATABASE_URL&lt;/code&gt; environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ cat .env
DATABASE_URL="postgres://postgres@127.0.0.1:5432/myapp_dev?sslmode=disable"
TEST_DATABASE_URL="postgres://postgres@127.0.0.1:5432/myapp_test?sslmode=disable"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can then specify this environment variable in your test script (Makefile or similar):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ dbmate -e TEST_DATABASE_URL drop
Dropping: myapp_test
$ dbmate -e TEST_DATABASE_URL --no-dump-schema up
Creating: myapp_test
Applying: 20151127184807_create_users_table.sql
Applied: 20151127184807_create_users_table.sql in 123Âµs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can specify the url directly on the command line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ dbmate -u "postgres://postgres@127.0.0.1:5432/myapp_test?sslmode=disable" up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The only advantage of using &lt;code&gt;dbmate -e TEST_DATABASE_URL&lt;/code&gt; over &lt;code&gt;dbmate -u $TEST_DATABASE_URL&lt;/code&gt; is that the former takes advantage of dbmate's automatic &lt;code&gt;.env&lt;/code&gt; file loading.&lt;/p&gt; 
&lt;h4&gt;PostgreSQL&lt;/h4&gt; 
&lt;p&gt;When connecting to Postgres, you may need to add the &lt;code&gt;sslmode=disable&lt;/code&gt; option to your connection string, as dbmate by default requires a TLS connection (some other frameworks/languages allow unencrypted connections by default).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;DATABASE_URL="postgres://username:password@127.0.0.1:5432/database_name?sslmode=disable"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A &lt;code&gt;socket&lt;/code&gt; or &lt;code&gt;host&lt;/code&gt; parameter can be specified to connect through a unix socket (note: specify the directory only):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;DATABASE_URL="postgres://username:password@/database_name?socket=/var/run/postgresql"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A &lt;code&gt;search_path&lt;/code&gt; parameter can be used to specify the &lt;a href="https://www.postgresql.org/docs/13/ddl-schemas.html#DDL-SCHEMAS-PATH"&gt;current schema&lt;/a&gt; while applying migrations, as well as for dbmate's &lt;code&gt;schema_migrations&lt;/code&gt; table. If the schema does not exist, it will be created automatically. If multiple comma-separated schemas are passed, the first will be used for the &lt;code&gt;schema_migrations&lt;/code&gt; table.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;DATABASE_URL="postgres://username:password@127.0.0.1:5432/database_name?search_path=myschema"
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;DATABASE_URL="postgres://username:password@127.0.0.1:5432/database_name?search_path=myschema,public"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;MySQL&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;DATABASE_URL="mysql://username:password@127.0.0.1:3306/database_name"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A &lt;code&gt;socket&lt;/code&gt; parameter can be specified to connect through a unix socket:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;DATABASE_URL="mysql://username:password@/database_name?socket=/var/run/mysqld/mysqld.sock"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;SQLite&lt;/h4&gt; 
&lt;p&gt;SQLite databases are stored on the filesystem, so you do not need to specify a host. By default, files are relative to the current directory. For example, the following will create a database at &lt;code&gt;./db/database.sqlite3&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;DATABASE_URL="sqlite:db/database.sqlite3"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To specify an absolute path, add a forward slash to the path. The following will create a database at &lt;code&gt;/tmp/database.sqlite3&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;DATABASE_URL="sqlite:/tmp/database.sqlite3"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that for some common &lt;a href="https://sqlite.org/pragma.html"&gt;settings&lt;/a&gt; like &lt;code&gt;journal_mode&lt;/code&gt; to improve performance, transactions need to be disabled for that migration file, e.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;-- migrate:up transaction:false
PRAGMA journal_mode = WAL;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Otherwise the migration will fail with "Error: cannot change into wal mode from within a transaction".&lt;/p&gt; 
&lt;h4&gt;ClickHouse&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;DATABASE_URL="clickhouse://username:password@127.0.0.1:9000/database_name"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To work with ClickHouse cluster, there are 4 connection query parameters that can be supplied:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;on_cluster&lt;/code&gt; - Indicataion to use cluster statements and replicated migration table. (default: &lt;code&gt;false&lt;/code&gt;) If this parameter is not supplied, other cluster related query parameters are ignored.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;DATABASE_URL="clickhouse://username:password@127.0.0.1:9000/database_name?on_cluster"

DATABASE_URL="clickhouse://username:password@127.0.0.1:9000/database_name?on_cluster=true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;cluster_macro&lt;/code&gt; (Optional) - Macro value to be used for ON CLUSTER statements and for the replciated migration table engine zookeeper path. (default: &lt;code&gt;{cluster}&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;DATABASE_URL="clickhouse://username:password@127.0.0.1:9000/database_name?on_cluster&amp;amp;cluster_macro={my_cluster}"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;replica_macro&lt;/code&gt; (Optional) - Macro value to be used for the replica name in the replciated migration table engine. (default: &lt;code&gt;{replica}&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;DATABASE_URL="clickhouse://username:password@127.0.0.1:9000/database_name?on_cluster&amp;amp;replica_macro={my_replica}"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;zoo_path&lt;/code&gt; (Optional) - The path to the table migration in ClickHouse/Zoo Keeper. (default: &lt;code&gt;/clickhouse/tables/&amp;lt;cluster_macro&amp;gt;/{table}&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;DATABASE_URL="clickhouse://username:password@127.0.0.1:9000/database_name?on_cluster&amp;amp;zoo_path=/zk/path/tables"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/ClickHouse/clickhouse-go#dsn"&gt;See other supported connection options&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;BigQuery&lt;/h4&gt; 
&lt;p&gt;Follow the following format for &lt;code&gt;DATABASE_URL&lt;/code&gt; when connecting to actual BigQuery in GCP:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;bigquery://projectid/location/dataset
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;projectid&lt;/code&gt; (mandatory) - Project ID&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;dataset&lt;/code&gt; (mandatory) - Dataset name within the Project&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;location&lt;/code&gt; (optional) - Where Dataset is created&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;NOTE: Follow &lt;a href="https://cloud.google.com/docs/authentication/provide-credentials-adc"&gt;this doc&lt;/a&gt; on how to set &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt; environment variable for proper Authentication&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Follow the following format if trying to connect to a custom endpoint e.g. &lt;a href="https://github.com/goccy/bigquery-emulator"&gt;BigQuery Emulator&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;bigquery://host:port/projectid/location/dataset?disable_auth=true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;disable_auth&lt;/code&gt; (optional) - Pass &lt;code&gt;true&lt;/code&gt; to skip Authentication, use only for testing and connecting to emulator.&lt;/p&gt; 
&lt;h4&gt;Spanner&lt;/h4&gt; 
&lt;p&gt;Spanner support is currently limited to databases using the &lt;a href="https://cloud.google.com/spanner/docs/postgresql-interface"&gt;PostgreSQL Dialect&lt;/a&gt;, which must be chosen during database creation. For future Spanner with GoogleSQL support, see &lt;a href="https://github.com/amacneil/dbmate/discussions/369"&gt;this discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Spanner with the Postgres interface requires that the &lt;a href="https://cloud.google.com/spanner/docs/pgadapter"&gt;PGAdapter&lt;/a&gt; is running. Use the following format for &lt;code&gt;DATABASE_URL&lt;/code&gt;, with the host and port set to where the PGAdapter is running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;DATABASE_URL="spanner-postgres://127.0.0.1:5432/database_name?sslmode=disable"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that specifying a username and password is not necessary, as authentication is handled by the PGAdapter (they will be ignored by the PGAdapter if specified).&lt;/p&gt; 
&lt;p&gt;Other options of the &lt;a href="https://raw.githubusercontent.com/amacneil/dbmate/main/#postgresql"&gt;postgres driver&lt;/a&gt; are supported.&lt;/p&gt; 
&lt;p&gt;Spanner also doesn't allow DDL to be executed inside explicit transactions. You must therefore specify &lt;code&gt;transaction:false&lt;/code&gt; on migrations that include DDL:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;-- migrate:up transaction:false
CREATE TABLE ...

-- migrate:down transaction:false
DROP TABLE ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Schema dumps are not currently supported, as &lt;code&gt;pg_dump&lt;/code&gt; uses functions that are not provided by Spanner.&lt;/p&gt; 
&lt;h3&gt;Creating Migrations&lt;/h3&gt; 
&lt;p&gt;To create a new migration, run &lt;code&gt;dbmate new create_users_table&lt;/code&gt;. You can name the migration anything you like. This will create a file &lt;code&gt;db/migrations/20151127184807_create_users_table.sql&lt;/code&gt; in the current directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;-- migrate:up

-- migrate:down
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To write a migration, simply add your SQL to the &lt;code&gt;migrate:up&lt;/code&gt; section:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;-- migrate:up
create table users (
  id integer,
  name varchar(255),
  email varchar(255) not null
);

-- migrate:down
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For related changes, it is possible to include multiple migrations in a single file using additional &lt;code&gt;migrate:up&lt;/code&gt; and &lt;code&gt;migrate:down&lt;/code&gt; sections. Migration file either succeeds or fails as a whole.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;-- migrate:up
CREATE TABLE users (id SERIAL PRIMARY KEY);

-- migrate:down
DROP TABLE users;

-- migrate:up
ALTER TABLE users ADD COLUMN email VARCHAR;

-- migrate:down
ALTER TABLE users DROP COLUMN email;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Migration files are named in the format &lt;code&gt;[version]_[description].sql&lt;/code&gt;. Only the version (defined as all leading numeric characters in the file name) is recorded in the database, so you can safely rename a migration file without having any effect on its current application state.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Running Migrations&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;dbmate up&lt;/code&gt; to run any pending migrations.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ dbmate up
Creating: myapp_development
Applying: 20151127184807_create_users_table.sql
Applied: 20151127184807_create_users_table.sql in 123Âµs
Writing: ./db/schema.sql
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: &lt;code&gt;dbmate up&lt;/code&gt; will create the database if it does not already exist (assuming the current user has permission to create databases). If you want to run migrations without creating the database, run &lt;code&gt;dbmate migrate&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Pending migrations are always applied in numerical order. However, dbmate does not prevent migrations from being applied out of order if they are committed independently (for example: if a developer has been working on a branch for a long time, and commits a migration which has a lower version number than other already-applied migrations, dbmate will simply apply the pending migration). See &lt;a href="https://github.com/amacneil/dbmate/issues/159"&gt;#159&lt;/a&gt; for a more detailed explanation.&lt;/p&gt; 
&lt;h3&gt;Rolling Back Migrations&lt;/h3&gt; 
&lt;p&gt;By default, dbmate doesn't know how to roll back a migration. In development, it's often useful to be able to revert your database to a previous state. To accomplish this, implement the &lt;code&gt;migrate:down&lt;/code&gt; section:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;-- migrate:up
create table users (
  id integer,
  name varchar(255),
  email varchar(255) not null
);

-- migrate:down
drop table users;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run &lt;code&gt;dbmate rollback&lt;/code&gt; to roll back the most recent migration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ dbmate rollback
Rolling back: 20151127184807_create_users_table.sql
Rolled back: 20151127184807_create_users_table.sql in 123Âµs
Writing: ./db/schema.sql
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Migration Options&lt;/h3&gt; 
&lt;p&gt;dbmate supports options passed to a migration block in the form of &lt;code&gt;key:value&lt;/code&gt; pairs. List of supported options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;transaction&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;transaction&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;transaction&lt;/code&gt; is useful if you do not want to run SQL inside a transaction:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;-- migrate:up transaction:false
ALTER TYPE colors ADD VALUE 'orange' AFTER 'red';
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;transaction&lt;/code&gt; will default to &lt;code&gt;true&lt;/code&gt; if your database supports it.&lt;/p&gt; 
&lt;h3&gt;Waiting For The Database&lt;/h3&gt; 
&lt;p&gt;If you use a Docker development environment for your project, you may encounter issues with the database not being immediately ready when running migrations or unit tests. This can be due to the database server having only just started.&lt;/p&gt; 
&lt;p&gt;In general, your application should be resilient to not having a working database connection on startup. However, for the purpose of running migrations or unit tests, this is not practical. The &lt;code&gt;wait&lt;/code&gt; command avoids this situation by allowing you to pause a script or other application until the database is available. Dbmate will attempt a connection to the database server every second, up to a maximum of 60 seconds.&lt;/p&gt; 
&lt;p&gt;If the database is available, &lt;code&gt;wait&lt;/code&gt; will return no output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ dbmate wait
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the database is unavailable, &lt;code&gt;wait&lt;/code&gt; will block until the database becomes available:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ dbmate wait
Waiting for database....
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the &lt;code&gt;--wait&lt;/code&gt; flag with other commands if you sometimes see failures caused by the database not yet being ready:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ dbmate --wait up
Waiting for database....
Creating: myapp_development
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can customize the timeout using &lt;code&gt;--wait-timeout&lt;/code&gt; (default 60s). If the database is still not available, the command will return an error:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ dbmate --wait-timeout=5s wait
Waiting for database.....
Error: unable to connect to database: dial tcp 127.0.0.1:5432: connect: connection refused
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that the &lt;code&gt;wait&lt;/code&gt; command does not verify whether your specified database exists, only that the server is available and ready (so it will return success if the database server is available, but your database has not yet been created).&lt;/p&gt; 
&lt;h3&gt;Exporting Schema File&lt;/h3&gt; 
&lt;p&gt;When you run the &lt;code&gt;up&lt;/code&gt;, &lt;code&gt;migrate&lt;/code&gt;, or &lt;code&gt;rollback&lt;/code&gt; commands, dbmate will automatically create a &lt;code&gt;./db/schema.sql&lt;/code&gt; file containing a complete representation of your database schema. Dbmate keeps this file up to date for you, so you should not manually edit it.&lt;/p&gt; 
&lt;p&gt;It is recommended to check this file into source control, so that you can easily review changes to the schema in commits or pull requests. It's also possible to use this file when you want to quickly load a database schema, without running each migration sequentially (for example in your test harness). However, if you do not wish to save this file, you could add it to your &lt;code&gt;.gitignore&lt;/code&gt;, or pass the &lt;code&gt;--no-dump-schema&lt;/code&gt; command line option.&lt;/p&gt; 
&lt;p&gt;To dump the &lt;code&gt;schema.sql&lt;/code&gt; file without performing any other actions, run &lt;code&gt;dbmate dump&lt;/code&gt;. Unlike other dbmate actions, this command relies on the respective &lt;code&gt;pg_dump&lt;/code&gt;, &lt;code&gt;mysqldump&lt;/code&gt;, or &lt;code&gt;sqlite3&lt;/code&gt; commands being available in your PATH. If these tools are not available, dbmate will silently skip the schema dump step during &lt;code&gt;up&lt;/code&gt;, &lt;code&gt;migrate&lt;/code&gt;, or &lt;code&gt;rollback&lt;/code&gt; actions. You can diagnose the issue by running &lt;code&gt;dbmate dump&lt;/code&gt; and looking at the output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ dbmate dump
exec: "pg_dump": executable file not found in $PATH
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On Ubuntu or Debian systems, you can fix this by installing &lt;code&gt;postgresql-client&lt;/code&gt;, &lt;code&gt;mysql-client&lt;/code&gt;, or &lt;code&gt;sqlite3&lt;/code&gt; respectively. Ensure that the package version you install is greater than or equal to the version running on your database server.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: The &lt;code&gt;schema.sql&lt;/code&gt; file will contain a complete schema for your database, even if some tables or columns were created outside of dbmate migrations.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Library&lt;/h2&gt; 
&lt;h3&gt;Use dbmate as a library&lt;/h3&gt; 
&lt;p&gt;Dbmate is designed to be used as a CLI with any language or framework, but it can also be used as a library in a Go application.&lt;/p&gt; 
&lt;p&gt;Here is a simple example. Remember to import the driver you need!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"net/url"

	"github.com/amacneil/dbmate/v2/pkg/dbmate"
	_ "github.com/amacneil/dbmate/v2/pkg/driver/sqlite"
)

func main() {
	u, _ := url.Parse("sqlite:foo.sqlite3")
	db := dbmate.New(u)

	err := db.CreateAndMigrate()
	if err != nil {
		panic(err)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://pkg.go.dev/github.com/amacneil/dbmate/v2/pkg/dbmate"&gt;reference documentation&lt;/a&gt; for more options.&lt;/p&gt; 
&lt;h3&gt;Embedding migrations&lt;/h3&gt; 
&lt;p&gt;Migrations can be embedded into your application binary using Go's &lt;a href="https://pkg.go.dev/embed"&gt;embed&lt;/a&gt; functionality.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;db.FS&lt;/code&gt; to specify the filesystem used for reading migrations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"embed"
	"fmt"
	"net/url"

	"github.com/amacneil/dbmate/v2/pkg/dbmate"
	_ "github.com/amacneil/dbmate/v2/pkg/driver/sqlite"
)

//go:embed db/migrations/*.sql
var fs embed.FS

func main() {
	u, _ := url.Parse("sqlite:foo.sqlite3")
	db := dbmate.New(u)
	db.FS = fs

	fmt.Println("Migrations:")
	migrations, err := db.FindMigrations()
	if err != nil {
		panic(err)
	}
	for _, m := range migrations {
		fmt.Println(m.Version, m.FilePath)
	}

	fmt.Println("\nApplying...")
	err = db.CreateAndMigrate()
	if err != nil {
		panic(err)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Concepts&lt;/h2&gt; 
&lt;h3&gt;Migration files&lt;/h3&gt; 
&lt;p&gt;Migration files are very simple, and are stored in &lt;code&gt;./db/migrations&lt;/code&gt; by default. You can create a new migration file named &lt;code&gt;[date]_create_users.sql&lt;/code&gt; by running &lt;code&gt;dbmate new create_users&lt;/code&gt;. Here is an example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;-- migrate:up
create table users (
  id integer,
  name varchar(255),
);

-- migrate:down
drop table if exists users;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Both up and down migrations are stored in the same file, for ease of editing. Both up and down directives are required, even if you choose not to implement the down migration.&lt;/p&gt; 
&lt;p&gt;When you apply a migration dbmate only stores the version number, not the contents, so you should always rollback a migration before modifying its contents. For this reason, you can safely rename a migration file without affecting its applied status, as long as you keep the version number intact.&lt;/p&gt; 
&lt;h3&gt;Schema file&lt;/h3&gt; 
&lt;p&gt;The schema file is written to &lt;code&gt;./db/schema.sql&lt;/code&gt; by default. It is a complete dump of your database schema, including any applied migrations, and any other modifications you have made.&lt;/p&gt; 
&lt;p&gt;This file should be checked in to source control, so that you can easily compare the diff of a migration. You can use the schema file to quickly restore your database without needing to run all migrations.&lt;/p&gt; 
&lt;h3&gt;Schema migrations table&lt;/h3&gt; 
&lt;p&gt;Dbmate stores a record of each applied migration in table named &lt;code&gt;schema_migrations&lt;/code&gt;. This table will be created for you automatically if it does not already exist.&lt;/p&gt; 
&lt;p&gt;The table is very simple:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;CREATE TABLE IF NOT EXISTS schema_migrations (
  version VARCHAR(255) PRIMARY KEY
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can customize the name of this table using the &lt;code&gt;--migrations-table&lt;/code&gt; flag or &lt;code&gt;DBMATE_MIGRATIONS_TABLE&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h2&gt;Alternatives&lt;/h2&gt; 
&lt;p&gt;Why another database schema migration tool? Dbmate was inspired by many other tools, primarily &lt;a href="http://guides.rubyonrails.org/active_record_migrations.html"&gt;Active Record Migrations&lt;/a&gt;, with the goals of being trivial to configure, and language &amp;amp; framework independent. Here is a comparison between dbmate and other popular migration tools.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;a href="https://github.com/amacneil/dbmate"&gt;dbmate&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;a href="https://github.com/pressly/goose"&gt;goose&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;a href="https://github.com/rubenv/sql-migrate"&gt;sql-migrate&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;a href="https://github.com/golang-migrate/migrate"&gt;golang-migrate&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;a href="http://guides.rubyonrails.org/active_record_migrations.html"&gt;activerecord&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;a href="http://docs.sequelizejs.com/manual/tutorial/migrations.html"&gt;sequelize&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;a href="https://flywaydb.org/"&gt;flyway&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;a href="https://sqitch.org/"&gt;sqitch&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Plain SQL migration files&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Support for creating and dropping databases&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Support for saving schema dump files&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Timestamp-versioned migration files&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Custom schema migrations table&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ability to wait for database to become ready&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Database connection string loaded from environment variables&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Automatically load .env file&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;No separate configuration file&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Language/framework independent&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Drivers&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PostgreSQL&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MySQL&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SQLite&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CliÑkHouse&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;â&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;em&gt;If you notice any inaccuracies in this table, please &lt;a href="https://github.com/amacneil/dbmate/edit/main/README.md"&gt;propose a change&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Dbmate is written in Go, pull requests are welcome.&lt;/p&gt; 
&lt;p&gt;Tests are run against a real database using docker compose. To build a docker image and run the tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ make docker-all
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To start a development shell:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ make docker-sh
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>microsoft/typescript-go</title>
      <link>https://github.com/microsoft/typescript-go</link>
      <description>&lt;p&gt;Staging repo for development of native port of TypeScript&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TypeScript 7&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/typescript/typescript-native-port/"&gt;Not sure what this is? Read the announcement post!&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;p&gt;A preview build is available on npm as &lt;a href="https://www.npmjs.com/package/@typescript/native-preview"&gt;&lt;code&gt;@typescript/native-preview&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install @typescript/native-preview
npx tsgo # Use this as you would tsc.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A preview VS Code extension is &lt;a href="https://marketplace.visualstudio.com/items?itemName=TypeScriptTeam.native-preview"&gt;available on the VS Code marketplace&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To use this, set this in your VS Code settings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
    "typescript.experimental.useTsgo": true
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What Works So Far?&lt;/h2&gt; 
&lt;p&gt;This is still a work in progress and is not yet at full feature parity with TypeScript. Bugs may exist. Please check this list carefully before logging a new issue or assuming an intentional change.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Notes&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Program creation&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;Same files and module resolution as TS 5.8. Not all resolution modes supported yet.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Parsing/scanning&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;Exact same syntax errors as TS 5.8&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Commandline and &lt;code&gt;tsconfig.json&lt;/code&gt; parsing&lt;/td&gt; 
   &lt;td&gt;mostly done&lt;/td&gt; 
   &lt;td&gt;Missing --help, --init.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Type resolution&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;Same types as TS 5.8.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Type checking&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;Same errors, locations, and messages as TS 5.8. Types printback in errors may display differently.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;JavaScript-specific inference and JSDoc&lt;/td&gt; 
   &lt;td&gt;in progress&lt;/td&gt; 
   &lt;td&gt;Mostly complete, but intentionally lacking some features. Declaration emit not complete.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;JSX&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Declaration emit&lt;/td&gt; 
   &lt;td&gt;in progress&lt;/td&gt; 
   &lt;td&gt;Most common features are in place, but some edge cases and feature flags are still unhandled.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Emit (JS output)&lt;/td&gt; 
   &lt;td&gt;in progress&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;target: esnext&lt;/code&gt; well-supported, other targets may have gaps.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Watch mode&lt;/td&gt; 
   &lt;td&gt;prototype&lt;/td&gt; 
   &lt;td&gt;Watches files and rebuilds, but no incremental rechecking. Not optimized.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build mode / project references&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Incremental build&lt;/td&gt; 
   &lt;td&gt;done&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Language service (LSP)&lt;/td&gt; 
   &lt;td&gt;in progress&lt;/td&gt; 
   &lt;td&gt;Some functionality (errors, hover, go to def, refs, sig help). More features coming soon.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;API&lt;/td&gt; 
   &lt;td&gt;not ready&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Definitions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;done&lt;/strong&gt; aka "believed done": We're not currently aware of any deficits or major left work to do. OK to log bugs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;in progress&lt;/strong&gt;: currently being worked on; some features may work and some might not. OK to log panics, but nothing else please&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;prototype&lt;/strong&gt;: proof-of-concept only; do not log bugs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;not ready&lt;/strong&gt;: either haven't even started yet, or far enough from ready that you shouldn't bother messing with it yet&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Other Notes&lt;/h2&gt; 
&lt;p&gt;Long-term, we expect that this repo and its contents will be merged into &lt;code&gt;microsoft/TypeScript&lt;/code&gt;. As a result, the repo and issue tracker for typescript-go will eventually be closed, so treat discussions/issues accordingly.&lt;/p&gt; 
&lt;p&gt;For a list of intentional changes with respect to TypeScript 5.7, see CHANGES.md.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href="https://cla.opensource.microsoft.com"&gt;Contributor License Agreements&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href="https://www.microsoft.com/legal/intellectualproperty/trademarks/usage/general"&gt;Microsoft's Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>modelcontextprotocol/go-sdk</title>
      <link>https://github.com/modelcontextprotocol/go-sdk</link>
      <description>&lt;p&gt;The official Go SDK for Model Context Protocol servers and clients. Maintained in collaboration with Google.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP Go SDK&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://codespaces.new/modelcontextprotocol/go-sdk"&gt;&lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Open in GitHub Codespaces" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/modelcontextprotocol/go-sdk" alt="PkgGoDev" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains an implementation of the official Go software development kit (SDK) for the Model Context Protocol (MCP).&lt;/p&gt; 
&lt;h2&gt;Package / Feature documentation&lt;/h2&gt; 
&lt;p&gt;The SDK consists of several importable packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/mcp"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/mcp&lt;/code&gt;&lt;/a&gt; package defines the primary APIs for constructing and using MCP clients and servers.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/jsonrpc"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/jsonrpc&lt;/code&gt;&lt;/a&gt; package is for users implementing their own transports.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/auth"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/auth&lt;/code&gt;&lt;/a&gt; package provides some primitives for supporting OAuth.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/oauthex"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/oauthex&lt;/code&gt;&lt;/a&gt; package provides extensions to the OAuth protocol, such as ProtectedResourceMetadata.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The SDK endeavors to implement the full MCP spec. The &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/docs/"&gt;&lt;code&gt;docs/&lt;/code&gt;&lt;/a&gt; directory contains feature documentation, mapping the MCP spec to the packages above.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;To get started creating an MCP server, create an &lt;code&gt;mcp.Server&lt;/code&gt; instance, add features to it, and then run it over an &lt;code&gt;mcp.Transport&lt;/code&gt;. For example, this server adds a single simple tool, and then connects it to clients over stdin/stdout:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"context"
	"log"

	"github.com/modelcontextprotocol/go-sdk/mcp"
)

type Input struct {
	Name string `json:"name" jsonschema:"the name of the person to greet"`
}

type Output struct {
	Greeting string `json:"greeting" jsonschema:"the greeting to tell to the user"`
}

func SayHi(ctx context.Context, req *mcp.CallToolRequest, input Input) (
	*mcp.CallToolResult,
	Output,
	error,
) {
	return nil, Output{Greeting: "Hi " + input.Name}, nil
}

func main() {
	// Create a server with a single tool.
	server := mcp.NewServer(&amp;amp;mcp.Implementation{Name: "greeter", Version: "v1.0.0"}, nil)
	mcp.AddTool(server, &amp;amp;mcp.Tool{Name: "greet", Description: "say hi"}, SayHi)
	// Run the server over stdin/stdout, until the client disconnects.
	if err := server.Run(context.Background(), &amp;amp;mcp.StdioTransport{}); err != nil {
		log.Fatal(err)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To communicate with that server, create an &lt;code&gt;mcp.Client&lt;/code&gt; and connect it to the corresponding server, by running the server command and communicating over its stdin/stdout:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"context"
	"log"
	"os/exec"

	"github.com/modelcontextprotocol/go-sdk/mcp"
)

func main() {
	ctx := context.Background()

	// Create a new client, with no features.
	client := mcp.NewClient(&amp;amp;mcp.Implementation{Name: "mcp-client", Version: "v1.0.0"}, nil)

	// Connect to a server over stdin/stdout.
	transport := &amp;amp;mcp.CommandTransport{Command: exec.Command("myserver")}
	session, err := client.Connect(ctx, transport, nil)
	if err != nil {
		log.Fatal(err)
	}
	defer session.Close()

	// Call a tool on the server.
	params := &amp;amp;mcp.CallToolParams{
		Name:      "greet",
		Arguments: map[string]any{"name": "you"},
	}
	res, err := session.CallTool(ctx, params)
	if err != nil {
		log.Fatalf("CallTool failed: %v", err)
	}
	if res.IsError {
		log.Fatal("tool failed")
	}
	for _, c := range res.Content {
		log.Print(c.(*mcp.TextContent).Text)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/examples/"&gt;&lt;code&gt;examples/&lt;/code&gt;&lt;/a&gt; directory contains more example clients and servers.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions to the SDK! Please see See &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for details of how to contribute.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements / Alternatives&lt;/h2&gt; 
&lt;p&gt;Several third party Go MCP SDKs inspired the development and design of this official SDK, and continue to be viable alternatives, notably &lt;a href="https://github.com/mark3labs/mcp-go"&gt;mcp-go&lt;/a&gt;, originally authored by Ed Zynda. We are grateful to Ed as well as the other contributors to mcp-go, and to authors and contributors of other SDKs such as &lt;a href="https://github.com/metoro-io/mcp-golang"&gt;mcp-golang&lt;/a&gt; and &lt;a href="https://github.com/ThinkInAIXYZ/go-mcp"&gt;go-mcp&lt;/a&gt;. Thanks to their work, there is a thriving ecosystem of Go MCP clients and servers.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>temporalio/temporal</title>
      <link>https://github.com/temporalio/temporal</link>
      <description>&lt;p&gt;Temporal service&lt;/p&gt;&lt;hr&gt;&lt;div class="title-block" style="text-align: center;" align="center"&gt; 
 &lt;h1&gt;Temporalâdurable execution platform&lt;/h1&gt; 
 &lt;p&gt;&lt;img title="temporal logo" src="https://avatars.githubusercontent.com/u/56493103?s=320" width="320" height="320" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/temporalio/temporal/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/temporalio/temporal" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/temporalio/temporal/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/temporalio/temporal" alt="GitHub License" /&gt;&lt;/a&gt; &lt;a href="https://app.codecov.io/gh/temporalio/temporal"&gt;&lt;img src="https://img.shields.io/badge/codecov-report-blue" alt="Code Coverage" /&gt;&lt;/a&gt; &lt;a href="https://community.temporal.io"&gt;&lt;img src="https://img.shields.io/static/v1?label=community&amp;amp;message=get%20help&amp;amp;color=informational" alt="Community" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/temporalio/temporal"&gt;&lt;img src="https://goreportcard.com/badge/github.com/temporalio/temporal" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/temporalio/temporal/main/#introduction"&gt;Introduction&lt;/a&gt; &amp;nbsp;&amp;nbsp;â¢&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/temporalio/temporal/main/#getting-started"&gt;Getting Started&lt;/a&gt; &amp;nbsp;&amp;nbsp;â¢&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/temporalio/temporal/main/#contributing"&gt;Contributing&lt;/a&gt; &amp;nbsp;&amp;nbsp;â¢&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://docs.temporal.io/"&gt;Temporal Docs&lt;/a&gt; &amp;nbsp;&amp;nbsp;â¢&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://learn.temporal.io/courses/temporal_101/"&gt;Temporal 101&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Temporal is a durable execution platform that enables developers to build scalable applications without sacrificing productivity or reliability. The Temporal server executes units of application logic called Workflows in a resilient manner that automatically handles intermittent failures, and retries failed operations.&lt;/p&gt; 
&lt;p&gt;Temporal is a mature technology that originated as a fork of Uber's Cadence. It is developed by &lt;a href="https://temporal.io/"&gt;Temporal Technologies&lt;/a&gt;, a startup by the creators of Cadence.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/wIpz4ioK0gI" title="Getting to know Temporal"&gt;&lt;img src="https://github.com/temporalio/temporal/assets/251288/693d18b5-01de-4a3b-b47b-96347b84f610" alt="image" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Download and Start Temporal Server Locally&lt;/h3&gt; 
&lt;p&gt;Execute the following commands to start a pre-built image along with all the dependencies.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install temporal
temporal server start-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Refer to &lt;a href="https://docs.temporal.io/cli/#installation"&gt;Temporal CLI&lt;/a&gt; documentation for more installation options.&lt;/p&gt; 
&lt;h3&gt;Run the Samples&lt;/h3&gt; 
&lt;p&gt;Clone or download samples for &lt;a href="https://github.com/temporalio/samples-go"&gt;Go&lt;/a&gt; or &lt;a href="https://github.com/temporalio/samples-java"&gt;Java&lt;/a&gt; and run them with the local Temporal server. We have a number of &lt;a href="https://github.com/temporalio/samples-java#helloworld"&gt;HelloWorld type scenarios&lt;/a&gt; available, as well as more advanced ones. Note that the sets of samples are currently different between Go and Java.&lt;/p&gt; 
&lt;h3&gt;Use CLI&lt;/h3&gt; 
&lt;p&gt;Use &lt;a href="https://docs.temporal.io/cli/"&gt;Temporal CLI&lt;/a&gt; to interact with the running Temporal server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;temporal operator namespace list
temporal workflow list
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Use Temporal Web UI&lt;/h3&gt; 
&lt;p&gt;Try &lt;a href="https://docs.temporal.io/web-ui"&gt;Temporal Web UI&lt;/a&gt; by opening &lt;a href="http://localhost:8233"&gt;http://localhost:8233&lt;/a&gt; for viewing your sample workflows executing on Temporal.&lt;/p&gt; 
&lt;h2&gt;Repository&lt;/h2&gt; 
&lt;p&gt;This repository contains the source code of the Temporal server. To implement Workflows, Activities and Workers, use one of the &lt;a href="https://docs.temporal.io/dev-guide/"&gt;supported languages&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We'd love your help in making Temporal great.&lt;/p&gt; 
&lt;p&gt;Helpful links to get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/temporalio/proposals"&gt;work on or propose a new feature&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/temporalio/temporal/main/docs/architecture/README.md"&gt;learn about the Temporal Server architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/temporalio/temporal/main/CONTRIBUTING.md"&gt;learn how to build and run the Temporal Server locally&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/temporalio/temporal/main/docs/development/testing.md"&gt;learn about Temporal Server testing tools and best practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;join the Temporal community &lt;a href="https://community.temporal.io"&gt;forum&lt;/a&gt; and &lt;a href="https://t.mp/slack"&gt;Slack&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/temporalio/temporal/raw/main/LICENSE"&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aquasecurity/trivy</title>
      <link>https://github.com/aquasecurity/trivy</link>
      <description>&lt;p&gt;Find vulnerabilities, misconfigurations, secrets, SBOM in containers, Kubernetes, code repositories, clouds and more&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/logo.png" width="200" /&gt; 
 &lt;p&gt;&lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/release/aquasecurity/trivy.svg?logo=github" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml"&gt;&lt;img src="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/aquasecurity/trivy"&gt;&lt;img src="https://goreportcard.com/badge/github.com/aquasecurity/trivy" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License: Apache-2.0" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/aquasecurity/trivy/total?logo=github" alt="GitHub Downloads" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/docker/pulls/aquasec/trivy?logo=docker&amp;amp;label=docker%20pulls%20%2F%20trivy" alt="Docker Pulls" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trivy.dev/latest/docs/"&gt;ð Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Trivy (&lt;a href="https://raw.githubusercontent.com/aquasecurity/trivy/main/#how-to-pronounce-the-name-trivy"&gt;pronunciation&lt;/a&gt;) is a comprehensive and versatile security scanner. Trivy has &lt;em&gt;scanners&lt;/em&gt; that look for security issues, and &lt;em&gt;targets&lt;/em&gt; where it can find those issues.&lt;/p&gt; 
&lt;p&gt;Targets (what Trivy can scan):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Container Image&lt;/li&gt; 
 &lt;li&gt;Filesystem&lt;/li&gt; 
 &lt;li&gt;Git Repository (remote)&lt;/li&gt; 
 &lt;li&gt;Virtual Machine Image&lt;/li&gt; 
 &lt;li&gt;Kubernetes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Scanners (what Trivy can find there):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OS packages and software dependencies in use (SBOM)&lt;/li&gt; 
 &lt;li&gt;Known vulnerabilities (CVEs)&lt;/li&gt; 
 &lt;li&gt;IaC issues and misconfigurations&lt;/li&gt; 
 &lt;li&gt;Sensitive information and secrets&lt;/li&gt; 
 &lt;li&gt;Software licenses&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy supports most popular programming languages, operating systems, and platforms. For a complete list, see the &lt;a href="https://trivy.dev/latest/docs/coverage/"&gt;Scanning Coverage&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;To learn more, go to the &lt;a href="https://trivy.dev"&gt;Trivy homepage&lt;/a&gt; for feature highlights, or to the &lt;a href="https://trivy.dev/latest/docs/"&gt;Documentation site&lt;/a&gt; for detailed information.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Get Trivy&lt;/h3&gt; 
&lt;p&gt;Trivy is available in most common distribution channels. The full list of installation options is available in the &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;brew install trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;docker run aquasec/trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Download binary from &lt;a href="https://github.com/aquasecurity/trivy/releases/latest/"&gt;https://github.com/aquasecurity/trivy/releases/latest/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy is integrated with many popular platforms and applications. The complete list of integrations is available in the &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-action"&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-operator"&gt;Kubernetes operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-vscode-extension"&gt;VS Code plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Canary builds&lt;/h3&gt; 
&lt;p&gt;There are canary builds (&lt;a href="https://hub.docker.com/r/aquasec/trivy/tags?page=1&amp;amp;name=canary"&gt;Docker Hub&lt;/a&gt;, &lt;a href="https://github.com/aquasecurity/trivy/pkgs/container/trivy/75776514?tag=canary"&gt;GitHub&lt;/a&gt;, &lt;a href="https://gallery.ecr.aws/aquasecurity/trivy#canary"&gt;ECR&lt;/a&gt; images and &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/canary.yaml"&gt;binaries&lt;/a&gt;) as generated every push to main branch.&lt;/p&gt; 
&lt;p&gt;Please be aware: canary builds might have critical bugs, it's not recommended for use in production.&lt;/p&gt; 
&lt;h3&gt;General usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy &amp;lt;target&amp;gt; [--scanners &amp;lt;scanner1,scanner2&amp;gt;] &amp;lt;subject&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy image python:3.4-alpine
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov"&gt;https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy fs --scanners vuln,secret,misconfig myproject/
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov"&gt;https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy k8s --report summary cluster
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/trivy-k8s.png" alt="k8s summary" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How to pronounce the name "Trivy"?&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;tri&lt;/code&gt; is pronounced like &lt;strong&gt;tri&lt;/strong&gt;gger, &lt;code&gt;vy&lt;/code&gt; is pronounced like en&lt;strong&gt;vy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Want more? Check out Aqua&lt;/h2&gt; 
&lt;p&gt;If you liked Trivy, you will love Aqua which builds on top of Trivy to provide even more enhanced capabilities for a complete security management offering.&lt;br /&gt; You can find a high level comparison table specific to Trivy users &lt;a href="https://trivy.dev/latest/commercial/compare/"&gt;here&lt;/a&gt;. In addition check out the &lt;a href="https://aquasec.com"&gt;https://aquasec.com&lt;/a&gt; website for more information about our products and services. If you'd like to contact Aqua or request a demo, please use this form: &lt;a href="https://www.aquasec.com/demo"&gt;https://www.aquasec.com/demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Trivy is an &lt;a href="https://aquasec.com"&gt;Aqua Security&lt;/a&gt; open source project.&lt;br /&gt; Learn about our open source work and portfolio &lt;a href="https://www.aquasec.com/products/open-source-projects/"&gt;here&lt;/a&gt;.&lt;br /&gt; Contact us about any matter by opening a GitHub Discussion &lt;a href="https://github.com/aquasecurity/trivy/discussions"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please ensure to abide by our &lt;a href="https://github.com/aquasecurity/community/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; during all interactions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>googleapis/genai-toolbox</title>
      <link>https://github.com/googleapis/genai-toolbox</link>
      <description>&lt;p&gt;MCP Toolbox for Databases is an open source MCP server for databases.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/logo.png" alt="logo" /&gt;&lt;/p&gt; 
&lt;h1&gt;MCP Toolbox for Databases&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://googleapis.github.io/genai-toolbox/"&gt;&lt;img src="https://img.shields.io/badge/docs-MCP_Toolbox-blue" alt="Docs" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/Dmm69peqjh"&gt;&lt;img src="https://img.shields.io/badge/Discord-%235865F2.svg?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://medium.com/@mcp_toolbox"&gt;&lt;img src="https://img.shields.io/badge/Medium-12100E?style=flat&amp;amp;logo=medium&amp;amp;logoColor=white" alt="Medium" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/googleapis/genai-toolbox"&gt;&lt;img src="https://goreportcard.com/badge/github.com/googleapis/genai-toolbox" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] MCP Toolbox for Databases is currently in beta, and may see breaking changes until the first stable release (v1.0).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;MCP Toolbox for Databases is an open source MCP server for databases. It enables you to develop tools easier, faster, and more securely by handling the complexities such as connection pooling, authentication, and more.&lt;/p&gt; 
&lt;p&gt;This README provides a brief overview. For comprehensive details, see the &lt;a href="https://googleapis.github.io/genai-toolbox/"&gt;full documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This solution was originally named âGen AI Toolbox for Databasesâ as its initial development predated MCP, but was renamed to align with recently added MCP compatibility.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- TOC ignore:true --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- TOC --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#why-toolbox"&gt;Why Toolbox?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#general-architecture"&gt;General Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#getting-started"&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#installing-the-server"&gt;Installing the server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#running-the-server"&gt;Running the server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#integrating-your-application"&gt;Integrating your application&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#configuration"&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#sources"&gt;Sources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#toolsets"&gt;Toolsets&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#versioning"&gt;Versioning&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#pre-100-versioning"&gt;Pre-1.0.0 Versioning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#post-100-versioning"&gt;Post-1.0.0 Versioning&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- /TOC --&gt; 
&lt;h2&gt;Why Toolbox?&lt;/h2&gt; 
&lt;p&gt;Toolbox helps you build Gen AI tools that let your agents access data in your database. Toolbox provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Simplified development&lt;/strong&gt;: Integrate tools to your agent in less than 10 lines of code, reuse tools between multiple agents or frameworks, and deploy new versions of tools more easily.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Better performance&lt;/strong&gt;: Best practices such as connection pooling, authentication, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced security&lt;/strong&gt;: Integrated auth for more secure access to your data&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;End-to-end observability&lt;/strong&gt;: Out of the box metrics and tracing with built-in support for OpenTelemetry.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;â¡ Supercharge Your Workflow with an AI Database Assistant â¡&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Stop context-switching and let your AI assistant become a true co-developer. By &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/connect-ide/"&gt;connecting your IDE to your databases with MCP Toolbox&lt;/a&gt;, you can delegate complex and time-consuming database tasks, allowing you to build faster and focus on what matters. This isn't just about code completion; it's about giving your AI the context it needs to handle the entire development lifecycle.&lt;/p&gt; 
&lt;p&gt;Hereâs how it will save you time:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Query in Plain English&lt;/strong&gt;: Interact with your data using natural language right from your IDE. Ask complex questions like, &lt;em&gt;"How many orders were delivered in 2024, and what items were in them?"&lt;/em&gt; without writing any SQL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automate Database Management&lt;/strong&gt;: Simply describe your data needs, and let the AI assistant manage your database for you. It can handle generating queries, creating tables, adding indexes, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generate Context-Aware Code&lt;/strong&gt;: Empower your AI assistant to generate application code and tests with a deep understanding of your real-time database schema. This accelerates the development cycle by ensuring the generated code is directly usable.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Slash Development Overhead&lt;/strong&gt;: Radically reduce the time spent on manual setup and boilerplate. MCP Toolbox helps streamline lengthy database configurations, repetitive code, and error-prone schema migrations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/connect-ide/"&gt;how to connect your AI tools (IDEs) to Toolbox using MCP&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;General Architecture&lt;/h2&gt; 
&lt;p&gt;Toolbox sits between your application's orchestration framework and your database, providing a control plane that is used to modify, distribute, or invoke tools. It simplifies the management of your tools by providing you with a centralized location to store and update tools, allowing you to share tools between agents and applications and update those tools without necessarily redeploying your application.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/docs/en/getting-started/introduction/architecture.png" alt="architecture" /&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Installing the server&lt;/h3&gt; 
&lt;p&gt;For the latest version, check the &lt;a href="https://github.com/googleapis/genai-toolbox/releases"&gt;releases page&lt;/a&gt; and use the following instructions for your OS and CPU architecture.&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt;Binary&lt;/summary&gt; 
 &lt;p&gt;To install Toolbox as a binary:&lt;/p&gt; 
 &lt;!-- {x-release-please-start-version} --&gt; 
 &lt;blockquote&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Linux (AMD64)&lt;/summary&gt; 
   &lt;p&gt;To install Toolbox as a binary on Linux (AMD64):&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-sh"&gt;# see releases page for other versions
export VERSION=0.16.0
curl -L -o toolbox https://storage.googleapis.com/genai-toolbox/v$VERSION/linux/amd64/toolbox
chmod +x toolbox
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;macOS (Apple Silicon)&lt;/summary&gt; 
   &lt;p&gt;To install Toolbox as a binary on macOS (Apple Silicon):&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-sh"&gt;# see releases page for other versions
export VERSION=0.16.0
curl -L -o toolbox https://storage.googleapis.com/genai-toolbox/v$VERSION/darwin/arm64/toolbox
chmod +x toolbox
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;macOS (Intel)&lt;/summary&gt; 
   &lt;p&gt;To install Toolbox as a binary on macOS (Intel):&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-sh"&gt;# see releases page for other versions
export VERSION=0.16.0
curl -L -o toolbox https://storage.googleapis.com/genai-toolbox/v$VERSION/darwin/amd64/toolbox
chmod +x toolbox
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Windows (AMD64)&lt;/summary&gt; 
   &lt;p&gt;To install Toolbox as a binary on Windows (AMD64):&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-powershell"&gt;# see releases page for other versions
$VERSION = "0.16.0"
Invoke-WebRequest -Uri "https://storage.googleapis.com/genai-toolbox/v$VERSION/windows/amd64/toolbox.exe" -OutFile "toolbox.exe"
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Container image&lt;/summary&gt; You can also install Toolbox as a container: 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# see releases page for other versions
export VERSION=0.16.0
docker pull us-central1-docker.pkg.dev/database-toolbox/toolbox/toolbox:$VERSION
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Homebrew&lt;/summary&gt; 
 &lt;p&gt;To install Toolbox using Homebrew on macOS or Linux:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;brew install mcp-toolbox
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Compile from source&lt;/summary&gt; 
 &lt;p&gt;To install from source, ensure you have the latest version of &lt;a href="https://go.dev/doc/install"&gt;Go installed&lt;/a&gt;, and then run the following command:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;go install github.com/googleapis/genai-toolbox@v0.16.0
&lt;/code&gt;&lt;/pre&gt; 
 &lt;!-- {x-release-please-end} --&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Gemini CLI Extensions&lt;/summary&gt; 
 &lt;p&gt;To install Gemini CLI Extensions for MCP Toolbox, run the following command:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;gemini extensions install https://github.com/gemini-cli-extensions/mcp-toolbox
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Running the server&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#configuration"&gt;Configure&lt;/a&gt; a &lt;code&gt;tools.yaml&lt;/code&gt; to define your tools, and then execute &lt;code&gt;toolbox&lt;/code&gt; to start the server:&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt;Binary&lt;/summary&gt; 
 &lt;p&gt;To run Toolbox from binary:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;./toolbox --tools-file "tools.yaml"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;â &lt;strong&gt;NOTE:&lt;/strong&gt;&lt;br /&gt; Toolbox enables dynamic reloading by default. To disable, use the &lt;code&gt;--disable-reload&lt;/code&gt; flag.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Container image&lt;/summary&gt; 
 &lt;p&gt;To run the server after pulling the &lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#installing-the-server"&gt;container image&lt;/a&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;export VERSION=0.11.0 # Use the version you pulled
docker run -p 5000:5000 \
-v $(pwd)/tools.yaml:/app/tools.yaml \
us-central1-docker.pkg.dev/database-toolbox/toolbox/toolbox:$VERSION \
--tools-file "/app/tools.yaml"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;â &lt;strong&gt;NOTE:&lt;/strong&gt;&lt;br /&gt; The &lt;code&gt;-v&lt;/code&gt; flag mounts your local &lt;code&gt;tools.yaml&lt;/code&gt; into the container, and &lt;code&gt;-p&lt;/code&gt; maps the container's port &lt;code&gt;5000&lt;/code&gt; to your host's port &lt;code&gt;5000&lt;/code&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Source&lt;/summary&gt; 
 &lt;p&gt;To run the server directly from source, navigate to the project root directory and run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;go run .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;â &lt;strong&gt;NOTE:&lt;/strong&gt;&lt;br /&gt; This command runs the project from source, and is more suitable for development and testing. It does &lt;strong&gt;not&lt;/strong&gt; compile a binary into your &lt;code&gt;$GOPATH&lt;/code&gt;. If you want to compile a binary instead, refer the &lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/DEVELOPER.md#building-the-binary"&gt;Developer Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Homebrew&lt;/summary&gt; 
 &lt;p&gt;If you installed Toolbox using &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;, the &lt;code&gt;toolbox&lt;/code&gt; binary is available in your system path. You can start the server with the same command:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;toolbox --tools-file "tools.yaml"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Gemini CLI&lt;/summary&gt; 
 &lt;p&gt;Interact with your custom tools using natural language. Check &lt;a href="https://github.com/gemini-cli-extensions/mcp-toolbox"&gt;gemini-cli-extensions/mcp-toolbox&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;You can use &lt;code&gt;toolbox help&lt;/code&gt; for a full list of flags! To stop the server, send a terminate signal (&lt;code&gt;ctrl+c&lt;/code&gt; on most platforms).&lt;/p&gt; 
&lt;p&gt;For more detailed documentation on deploying to different environments, check out the resources in the &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/"&gt;How-to section&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Integrating your application&lt;/h3&gt; 
&lt;p&gt;Once your server is up and running, you can load the tools into your application. See below the list of Client SDKs for using various frameworks:&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt;Python (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-core/"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_core import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = await client.load_toolset("toolset_name")
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
   &lt;p&gt;For more detailed instructions on using the Toolbox Core SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python/tree/main/packages/toolbox-core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain / LangGraph&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-langchain/"&gt;Toolbox LangChain SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-langchain
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_langchain import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = client.load_toolset()
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox LangChain SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python/raw/main/packages/toolbox-langchain/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LlamaIndex&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-llamaindex/"&gt;Toolbox Llamaindex SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-llamaindex
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_llamaindex import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = client.load_toolset()
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Llamaindex SDK, see the &lt;a href="https://github.com/googleapis/genai-toolbox-llamaindex-python/raw/main/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;  
&lt;details&gt; 
 &lt;summary&gt;Javascript/Typescript (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-js"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const tools = await client.loadToolset('toolsetName');
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Core SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-js/raw/main/packages/toolbox-core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain / LangGraph&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const toolboxTools = await client.loadToolset('toolsetName');

// Define the basics of the tool: name, description, schema and core logic
const getTool = (toolboxTool) =&amp;gt; tool(currTool, {
    name: toolboxTool.getName(),
    description: toolboxTool.getDescription(),
    schema: toolboxTool.getParamSchema()
});

// Use these tools in your Langchain/Langraph applications
const tools = toolboxTools.map(getTool);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Genkit&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';
import { genkit } from 'genkit';

// Initialise genkit
const ai = genkit({
    plugins: [
        googleAI({
            apiKey: process.env.GEMINI_API_KEY || process.env.GOOGLE_API_KEY
        })
    ],
    model: googleAI.model('gemini-2.0-flash'),
});

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const toolboxTools = await client.loadToolset('toolsetName');

// Define the basics of the tool: name, description, schema and core logic
const getTool = (toolboxTool) =&amp;gt; ai.defineTool({
    name: toolboxTool.getName(),
    description: toolboxTool.getDescription(),
    schema: toolboxTool.getParamSchema()
}, toolboxTool)

// Use these tools in your Genkit applications
const tools = toolboxTools.map(getTool);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;  
&lt;details&gt; 
 &lt;summary&gt;Go (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-go"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "context"
)

func main() {
  // Make sure to add the error checks
  // update the url to point to your server
  URL := "http://127.0.0.1:5000";
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tools
  tools, err := client.LoadToolset("toolsetName", ctx)
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Go SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-go/raw/main/core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain Go&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "github.com/tmc/langchaingo/llms"
)

func main() {
  // Make sure to add the error checks
  // update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var paramsSchema map[string]any
  _ = json.Unmarshal(inputschema, &amp;amp;paramsSchema)

  // Use this tool with LangChainGo
  langChainTool := llms.Tool{
    Type: "function",
    Function: &amp;amp;llms.FunctionDefinition{
      Name:        tool.Name(),
      Description: tool.Description(),
      Parameters:  paramsSchema,
    },
  }
}

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Genkit&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main
import (
  "context"
  "encoding/json"

  "github.com/firebase/genkit/go/ai"
  "github.com/firebase/genkit/go/genkit"
  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "github.com/googleapis/mcp-toolbox-sdk-go/tbgenkit"
  "github.com/invopop/jsonschema"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()
  g, err := genkit.Init(ctx)

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Convert the tool using the tbgenkit package
  // Use this tool with Genkit Go
  genkitTool, err := tbgenkit.ToGenkitTool(tool, g)
  if err != nil {
    log.Fatalf("Failed to convert tool: %v\n", err)
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Go GenAI&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "google.golang.org/genai"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var schema *genai.Schema
  _ = json.Unmarshal(inputschema, &amp;amp;schema)

  funcDeclaration := &amp;amp;genai.FunctionDeclaration{
    Name:        tool.Name(),
    Description: tool.Description(),
    Parameters:  schema,
  }

  // Use this tool with Go GenAI
  genAITool := &amp;amp;genai.Tool{
    FunctionDeclarations: []*genai.FunctionDeclaration{funcDeclaration},
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;OpenAI Go&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  openai "github.com/openai/openai-go"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var paramsSchema openai.FunctionParameters
  _ = json.Unmarshal(inputschema, &amp;amp;paramsSchema)

  // Use this tool with OpenAI Go
  openAITool := openai.ChatCompletionToolParam{
    Function: openai.FunctionDefinitionParam{
      Name:        tool.Name(),
      Description: openai.String(tool.Description()),
      Parameters:  paramsSchema,
    },
  }

}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;   
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;The primary way to configure Toolbox is through the &lt;code&gt;tools.yaml&lt;/code&gt; file. If you have multiple files, you can tell toolbox which to load with the &lt;code&gt;--tools-file tools.yaml&lt;/code&gt; flag.&lt;/p&gt; 
&lt;p&gt;You can find more detailed reference documentation to all resource types in the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/"&gt;Resources&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Sources&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;sources&lt;/code&gt; section of your &lt;code&gt;tools.yaml&lt;/code&gt; defines what data sources your Toolbox should have access to. Most tools will have at least one source to execute against.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;sources:
  my-pg-source:
    kind: postgres
    host: 127.0.0.1
    port: 5432
    database: toolbox_db
    user: toolbox_user
    password: my-password
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring different types of sources, see the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/sources"&gt;Sources&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;tools&lt;/code&gt; section of a &lt;code&gt;tools.yaml&lt;/code&gt; define the actions an agent can take: what kind of tool it is, which source(s) it affects, what parameters it uses, etc.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;tools:
  search-hotels-by-name:
    kind: postgres-sql
    source: my-pg-source
    description: Search for hotels based on name.
    parameters:
      - name: name
        type: string
        description: The name of the hotel.
    statement: SELECT * FROM hotels WHERE name ILIKE '%' || $1 || '%';
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring different types of tools, see the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/tools"&gt;Tools&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Toolsets&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;toolsets&lt;/code&gt; section of your &lt;code&gt;tools.yaml&lt;/code&gt; allows you to define groups of tools that you want to be able to load together. This can be useful for defining different groups based on agent or application.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;toolsets:
    my_first_toolset:
        - my_first_tool
        - my_second_tool
    my_second_toolset:
        - my_second_tool
        - my_third_tool
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can load toolsets by name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# This will load all tools
all_tools = client.load_toolset()

# This will only load the tools listed in 'my_second_toolset'
my_second_toolset = client.load_toolset("my_second_toolset")
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;This project uses &lt;a href="https://semver.org/"&gt;semantic versioning&lt;/a&gt; (&lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt;). Since the project is in a pre-release stage (version &lt;code&gt;0.x.y&lt;/code&gt;), we follow the standard conventions for initial development:&lt;/p&gt; 
&lt;h3&gt;Pre-1.0.0 Versioning&lt;/h3&gt; 
&lt;p&gt;While the major version is &lt;code&gt;0&lt;/code&gt;, the public API should be considered unstable. The version will be incremented as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;0.MINOR.PATCH&lt;/code&gt;&lt;/strong&gt;: The &lt;strong&gt;MINOR&lt;/strong&gt; version is incremented when we add new functionality or make breaking, incompatible API changes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;0.MINOR.PATCH&lt;/code&gt;&lt;/strong&gt;: The &lt;strong&gt;PATCH&lt;/strong&gt; version is incremented for backward-compatible bug fixes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Post-1.0.0 Versioning&lt;/h3&gt; 
&lt;p&gt;Once the project reaches a stable &lt;code&gt;1.0.0&lt;/code&gt; release, the versioning will follow the more common convention:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt;&lt;/strong&gt;: Incremented for incompatible API changes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt;&lt;/strong&gt;: Incremented for new, backward-compatible functionality.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt;&lt;/strong&gt;: Incremented for backward-compatible bug fixes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The public API that this applies to is the CLI associated with Toolbox, the interactions with official SDKs, and the definitions in the &lt;code&gt;tools.yaml&lt;/code&gt; file.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome. Please, see the &lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. See &lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/CODE_OF_CONDUCT.md"&gt;Contributor Code of Conduct&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.gg/GQrFB3Ec3W"&gt;discord community&lt;/a&gt; to connect with our developers!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aldinokemal/go-whatsapp-web-multidevice</title>
      <link>https://github.com/aldinokemal/go-whatsapp-web-multidevice</link>
      <description>&lt;p&gt;GOWA - WhatsApp REST API with support for UI, Webhooks, and MCP. Built with Golang for efficient memory use.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;!-- markdownlint-disable-next-line MD033 --&gt; 
 &lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/src/views/assets/gowa.svg?sanitize=true" alt="GoWA Logo" width="200" height="200" /&gt; 
 &lt;h2&gt;Golang WhatsApp - Built with Go for efficient memory use&lt;/h2&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://www.patreon.com/c/aldinokemal"&gt;&lt;img src="https://img.shields.io/badge/Support%20on-Patreon-orange.svg?sanitize=true" alt="Patreon" /&gt;&lt;/a&gt; &lt;strong&gt;If you're using this tools to generate income, consider supporting its development by becoming a Patreon member!&lt;/strong&gt; Your support helps ensure the library stays maintained and receives regular updates!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/v/release/aldinokemal/go-whatsapp-web-multidevice" alt="release version" /&gt; &lt;img src="https://github.com/aldinokemal/go-whatsapp-web-multidevice/actions/workflows/build-docker-image.yaml/badge.svg?sanitize=true" alt="Build Image" /&gt; &lt;img src="https://github.com/aldinokemal/go-whatsapp-web-multidevice/actions/workflows/release.yml/badge.svg?sanitize=true" alt="Binary Release" /&gt;&lt;/p&gt; 
&lt;h2&gt;Support for &lt;code&gt;ARM&lt;/code&gt; &amp;amp; &lt;code&gt;AMD&lt;/code&gt; Architecture along with &lt;code&gt;MCP&lt;/code&gt; Support&lt;/h2&gt; 
&lt;p&gt;Download:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aldinokemal/go-whatsapp-web-multidevice/releases/latest"&gt;Release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/aldinokemal2104/go-whatsapp-web-multidevice/tags"&gt;Docker Hub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aldinokemal/go-whatsapp-web-multidevice/pkgs/container/go-whatsapp-web-multidevice"&gt;GitHub Container Registry&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support n8n package (n8n.io)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/@aldinokemal2104/n8n-nodes-gowa"&gt;n8n package&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Go to Settings -&amp;gt; Community Nodes -&amp;gt; Input &lt;code&gt;@aldinokemal2104/n8n-nodes-gowa&lt;/code&gt; -&amp;gt; Install&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Breaking Changes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;v6&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For REST mode, you need to run &lt;code&gt;&amp;lt;binary&amp;gt; rest&lt;/code&gt; instead of &lt;code&gt;&amp;lt;binary&amp;gt;&lt;/code&gt; 
    &lt;ul&gt; 
     &lt;li&gt;for example: &lt;code&gt;./whatsapp rest&lt;/code&gt; instead of &lt;del&gt;./whatsapp&lt;/del&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;For MCP mode, you need to run &lt;code&gt;&amp;lt;binary&amp;gt; mcp&lt;/code&gt; 
    &lt;ul&gt; 
     &lt;li&gt;for example: &lt;code&gt;./whatsapp mcp&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v7&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Starting version 7.x we are using goreleaser to build the binary, so you can download the binary from &lt;a href="https://github.com/aldinokemal/go-whatsapp-web-multidevice/releases/latest"&gt;release&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Feature&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Send WhatsApp message via http API, &lt;a href="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/docs/openapi.yaml"&gt;docs/openapi.yml&lt;/a&gt; for more details&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;MCP (Model Context Protocol) Server Support&lt;/strong&gt; - Integrate with AI agents and tools using standardized protocol&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Mention someone&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;@phoneNumber&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;example: &lt;code&gt;Hello @628974812XXXX, @628974812XXXX&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Post Whatsapp Status&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Send Stickers&lt;/strong&gt; - Automatically converts images to WebP sticker format&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Supports JPG, JPEG, PNG, WebP, and GIF formats&lt;/li&gt; 
   &lt;li&gt;Automatic resizing to 512x512 pixels&lt;/li&gt; 
   &lt;li&gt;Preserves transparency for PNG images&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Compress image before send&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Compress video before send&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Change OS name become your app (it's the device name when connect via mobile)&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--os=Chrome&lt;/code&gt; or &lt;code&gt;--os=MyApplication&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Basic Auth (able to add multi credentials)&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--basic-auth=kemal:secret,toni:password,userName:secretPassword&lt;/code&gt;, or you can simplify&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-b=kemal:secret,toni:password,userName:secretPassword&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Subpath deployment support&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--base-path="/gowa"&lt;/code&gt; (allows deployment under a specific path like &lt;code&gt;/gowa/sub/path&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Customizable port and debug mode&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--port 8000&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--debug true&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Auto reply message&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--autoreply="Don't reply this message"&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Auto mark read incoming messages&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--auto-mark-read=true&lt;/code&gt; (automatically marks incoming messages as read)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Webhook for received message&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--webhook="http://yourwebhook.site/handler"&lt;/code&gt;, or you can simplify&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-w="http://yourwebhook.site/handler"&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;for more detail, see &lt;a href="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/docs/webhook-payload.md"&gt;Webhook Payload Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Webhook Secret Our webhook will be sent to you with an HMAC header and a sha256 default key &lt;code&gt;secret&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;You may modify this by using the option below:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--webhook-secret="secret"&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Webhook Payload Documentation&lt;/strong&gt; For detailed webhook payload schemas, security implementation, and integration examples, see &lt;a href="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/docs/webhook-payload.md"&gt;Webhook Payload Documentation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;You can configure the application using either command-line flags (shown above) or environment variables. Configuration can be set in three ways (in order of priority):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Command-line flags (highest priority)&lt;/li&gt; 
 &lt;li&gt;Environment variables&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;.env&lt;/code&gt; file (lowest priority)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Environment Variables&lt;/h3&gt; 
&lt;p&gt;You can configure the application using environment variables. Configuration can be set in three ways (in order of priority):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Command-line flags (highest priority)&lt;/li&gt; 
 &lt;li&gt;Environment variables&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;.env&lt;/code&gt; file (lowest priority)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To use environment variables:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; in your project root (&lt;code&gt;cp src/.env.example src/.env&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Modify the values in &lt;code&gt;.env&lt;/code&gt; according to your needs&lt;/li&gt; 
 &lt;li&gt;Or set the same variables as system environment variables&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Available Environment Variables&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;APP_PORT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Application port&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;3000&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APP_PORT=8080&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;APP_DEBUG&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable debug logging&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APP_DEBUG=true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;APP_OS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;OS name (device name in WhatsApp)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Chrome&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APP_OS=MyApp&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;APP_BASIC_AUTH&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Basic authentication credentials&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APP_BASIC_AUTH=user1:pass1,user2:pass2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;APP_BASE_PATH&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Base path for subpath deployment&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APP_BASE_PATH=/gowa&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;DB_URI&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Database connection URI&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;file:storages/whatsapp.db?_foreign_keys=on&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;DB_URI=postgres://user:pass@host/db&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_AUTO_REPLY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Auto-reply message&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_AUTO_REPLY="Auto reply message"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_AUTO_MARK_READ&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Auto-mark incoming messages as read&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_AUTO_MARK_READ=true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_WEBHOOK&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Webhook URL(s) for events (comma-separated)&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_WEBHOOK=https://webhook.site/xxx&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_WEBHOOK_SECRET&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Webhook secret for validation&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;secret&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_WEBHOOK_SECRET=super-secret-key&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_ACCOUNT_VALIDATION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable account validation&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_ACCOUNT_VALIDATION=false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_CHAT_STORAGE&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable chat storage&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WHATSAPP_CHAT_STORAGE=false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Note: Command-line flags will override any values set in environment variables or &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For more command &lt;code&gt;./whatsapp --help&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;h3&gt;System Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Go 1.24.0 or higher&lt;/strong&gt; (for building from source)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;FFmpeg&lt;/strong&gt; (for media processing)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Platform Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux (x86_64, ARM64)&lt;/li&gt; 
 &lt;li&gt;macOS (Intel, Apple Silicon)&lt;/li&gt; 
 &lt;li&gt;Windows (x86_64) - WSL recommended&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Dependencies (without docker)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Mac OS: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;brew install ffmpeg&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;export CGO_CFLAGS_ALLOW="-Xpreprocessor"&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Linux: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;sudo apt update&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;sudo apt install ffmpeg&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Windows (not recomended, prefer using &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install"&gt;WSL&lt;/a&gt;): 
  &lt;ul&gt; 
   &lt;li&gt;install ffmpeg, &lt;a href="https://www.ffmpeg.org/download.html#build-windows"&gt;download here&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;add to ffmpeg to &lt;a href="https://www.google.com/search?q=windows+add+to+environment+path"&gt;environment variable&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;h3&gt;Basic&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone this repo: &lt;code&gt;git clone https://github.com/aldinokemal/go-whatsapp-web-multidevice&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open the folder that was cloned via cmd/terminal.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;cd src&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;go run . rest&lt;/code&gt; (for REST API mode)&lt;/li&gt; 
 &lt;li&gt;Open &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Docker (you don't need to install in required)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone this repo: &lt;code&gt;git clone https://github.com/aldinokemal/go-whatsapp-web-multidevice&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open the folder that was cloned via cmd/terminal.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;docker-compose up -d --build&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;open &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Build your own binary&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone this repo &lt;code&gt;git clone https://github.com/aldinokemal/go-whatsapp-web-multidevice&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open the folder that was cloned via cmd/terminal.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;cd src&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;run 
  &lt;ol&gt; 
   &lt;li&gt;Linux &amp;amp; MacOS: &lt;code&gt;go build -o whatsapp&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Windows (CMD / PowerShell): &lt;code&gt;go build -o whatsapp.exe&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;run 
  &lt;ol&gt; 
   &lt;li&gt;Linux &amp;amp; MacOS: &lt;code&gt;./whatsapp rest&lt;/code&gt; (for REST API mode) 
    &lt;ol&gt; 
     &lt;li&gt;run &lt;code&gt;./whatsapp --help&lt;/code&gt; for more detail flags&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;Windows: &lt;code&gt;.\whatsapp.exe rest&lt;/code&gt; (for REST API mode) 
    &lt;ol&gt; 
     &lt;li&gt;run &lt;code&gt;.\whatsapp.exe --help&lt;/code&gt; for more detail flags&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;open &lt;code&gt;http://localhost:3000&lt;/code&gt; in browser&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;MCP Server (Model Context Protocol)&lt;/h3&gt; 
&lt;p&gt;This application can also run as an MCP server, allowing AI agents and tools to interact with WhatsApp through a standardized protocol.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone this repo &lt;code&gt;git clone https://github.com/aldinokemal/go-whatsapp-web-multidevice&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open the folder that was cloned via cmd/terminal.&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;cd src&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;run &lt;code&gt;go run . mcp&lt;/code&gt; or build the binary and run &lt;code&gt;./whatsapp mcp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;The MCP server will start on &lt;code&gt;http://localhost:8080&lt;/code&gt; by default&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;MCP Server Options&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--host localhost&lt;/code&gt; - Set the host for MCP server (default: localhost)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--port 8080&lt;/code&gt; - Set the port for MCP server (default: 8080)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Available MCP Tools&lt;/h4&gt; 
&lt;p&gt;The WhatsApp MCP server provides comprehensive tools for AI agents to interact with WhatsApp through a standardized protocol. Below is the complete list of available tools:&lt;/p&gt; 
&lt;h5&gt;&lt;strong&gt;ð± Connection Management&lt;/strong&gt;&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_connection_status&lt;/code&gt; - Check whether the WhatsApp client is connected and logged in&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_login_qr&lt;/code&gt; - Initiate QR code based login flow with image output&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_login_with_code&lt;/code&gt; - Generate pairing code for multi-device login using phone number&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_logout&lt;/code&gt; - Sign out the current WhatsApp session&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_reconnect&lt;/code&gt; - Attempt to reconnect to WhatsApp using stored session&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;strong&gt;ð¬ Messaging &amp;amp; Communication&lt;/strong&gt;&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_send_text&lt;/code&gt; - Send text messages with reply and forwarding support&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_send_contact&lt;/code&gt; - Send contact cards with name and phone number&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_send_link&lt;/code&gt; - Send links with custom captions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_send_location&lt;/code&gt; - Send location coordinates (latitude/longitude)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_send_image&lt;/code&gt; - Send images with captions, compression, and view-once options&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_send_sticker&lt;/code&gt; - Send stickers with automatic WebP conversion (supports JPG/PNG/GIF)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;strong&gt;ð Chat &amp;amp; Contact Management&lt;/strong&gt;&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_list_contacts&lt;/code&gt; - Retrieve all contacts in your WhatsApp account&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_list_chats&lt;/code&gt; - Get recent chats with pagination and search filters&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_get_chat_messages&lt;/code&gt; - Fetch messages from specific chats with time/media filtering&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_download_message_media&lt;/code&gt; - Download images/videos from messages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;&lt;strong&gt;ð¥ Group Management&lt;/strong&gt;&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_group_create&lt;/code&gt; - Create new groups with optional initial participants&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_group_join_via_link&lt;/code&gt; - Join groups using invite links&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_group_leave&lt;/code&gt; - Leave groups by group ID&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_group_participants&lt;/code&gt; - List all participants in a group&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_group_manage_participants&lt;/code&gt; - Add, remove, promote, or demote group members&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_group_invite_link&lt;/code&gt; - Get or reset group invite links&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_group_info&lt;/code&gt; - Get detailed group information&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_group_set_name&lt;/code&gt; - Update group display name&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_group_set_topic&lt;/code&gt; - Update group description/topic&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_group_set_locked&lt;/code&gt; - Toggle admin-only group info editing&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_group_set_announce&lt;/code&gt; - Toggle announcement-only mode&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_group_join_requests&lt;/code&gt; - List pending join requests&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;whatsapp_group_manage_join_requests&lt;/code&gt; - Approve or reject join requests&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;MCP Endpoints&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;SSE endpoint: &lt;code&gt;http://localhost:8080/sse&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Message endpoint: &lt;code&gt;http://localhost:8080/message&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MCP Configuration&lt;/h3&gt; 
&lt;p&gt;Make sure you have the MCP server running: &lt;code&gt;./whatsapp mcp&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For AI tools that support MCP with SSE (like Cursor), add this configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "whatsapp": {
      "url": "http://localhost:8080/sse"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production Mode REST (docker)&lt;/h3&gt; 
&lt;p&gt;Using Docker Hub:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --detach --publish=3000:3000 --name=whatsapp --restart=always --volume=$(docker volume create --name=whatsapp):/app/storages aldinokemal2104/go-whatsapp-web-multidevice rest --autoreply="Dont't reply this message please"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using GitHub Container Registry:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --detach --publish=3000:3000 --name=whatsapp --restart=always --volume=$(docker volume create --name=whatsapp):/app/storages ghcr.io/aldinokemal/go-whatsapp-web-multidevice rest --autoreply="Dont't reply this message please"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production Mode REST (docker compose)&lt;/h3&gt; 
&lt;p&gt;create &lt;code&gt;docker-compose.yml&lt;/code&gt; file with the following configuration:&lt;/p&gt; 
&lt;p&gt;Using Docker Hub:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yml"&gt;services:
  whatsapp:
    image: aldinokemal2104/go-whatsapp-web-multidevice
    container_name: whatsapp
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - whatsapp:/app/storages
    command:
      - rest
      - --basic-auth=admin:admin
      - --port=3000
      - --debug=true
      - --os=Chrome
      - --account-validation=false

volumes:
  whatsapp:
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using GitHub Container Registry:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yml"&gt;services:
  whatsapp:
    image: ghcr.io/aldinokemal/go-whatsapp-web-multidevice
    container_name: whatsapp
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - whatsapp:/app/storages
    command:
      - rest
      - --basic-auth=admin:admin
      - --port=3000
      - --debug=true
      - --os=Chrome
      - --account-validation=false

volumes:
  whatsapp:
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or with env file (Docker Hub):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yml"&gt;services:
  whatsapp:
    image: aldinokemal2104/go-whatsapp-web-multidevice
    container_name: whatsapp
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - whatsapp:/app/storages
    environment:
      - APP_BASIC_AUTH=admin:admin
      - APP_PORT=3000
      - APP_DEBUG=true
      - APP_OS=Chrome
      - APP_ACCOUNT_VALIDATION=false

volumes:
  whatsapp:
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or with env file (GitHub Container Registry):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yml"&gt;services:
  whatsapp:
    image: ghcr.io/aldinokemal/go-whatsapp-web-multidevice
    container_name: whatsapp
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - whatsapp:/app/storages
    environment:
      - APP_BASIC_AUTH=admin:admin
      - APP_PORT=3000
      - APP_DEBUG=true
      - APP_OS=Chrome
      - APP_ACCOUNT_VALIDATION=false

volumes:
  whatsapp:
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production Mode (binary)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;download binary from &lt;a href="https://github.com/aldinokemal/go-whatsapp-web-multidevice/releases"&gt;release&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can fork or edit this source code !&lt;/p&gt; 
&lt;h2&gt;Current API&lt;/h2&gt; 
&lt;h3&gt;MCP (Model Context Protocol) API&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;MCP server provides standardized tools for AI agents to interact with WhatsApp&lt;/li&gt; 
 &lt;li&gt;Supports Server-Sent Events (SSE) transport&lt;/li&gt; 
 &lt;li&gt;Available tools: &lt;code&gt;whatsapp_send_text&lt;/code&gt;, &lt;code&gt;whatsapp_send_contact&lt;/code&gt;, &lt;code&gt;whatsapp_send_link&lt;/code&gt;, &lt;code&gt;whatsapp_send_location&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Compatible with MCP-enabled AI tools and agents&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;HTTP REST API&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://bump.sh/aldinokemal/doc/go-whatsapp-web-multidevice"&gt;API Specification Document&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Check &lt;a href="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/docs/openapi.yaml"&gt;docs/openapi.yml&lt;/a&gt; for detailed API specifications.&lt;/li&gt; 
 &lt;li&gt;Use &lt;a href="https://editor.swagger.io"&gt;SwaggerEditor&lt;/a&gt; to visualize the API.&lt;/li&gt; 
 &lt;li&gt;Generate HTTP clients using &lt;a href="https://openapi-generator.tech/#try"&gt;openapi-generator&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Menu&lt;/th&gt; 
   &lt;th&gt;Method&lt;/th&gt; 
   &lt;th&gt;URL&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Login with Scan QR&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/app/login&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Login With Pair Code&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/app/login-with-code&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Logout&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/app/logout&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Reconnect&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/app/reconnect&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Devices&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/app/devices&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;User Info&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/info&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;User Avatar&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/avatar&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;User Change Avatar&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/user/avatar&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;User Change PushName&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/user/pushname&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;User My Groups&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/my/groups&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;User My Newsletter&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/my/newsletters&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;User My Privacy Setting&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/my/privacy&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;User My Contacts&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/my/contacts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;User Check&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/check&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;User Business Profile&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/user/business-profile&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Send Message&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/message&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Send Image&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/image&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Send Audio&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/audio&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Send File&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/file&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Send Video&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/video&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Send Sticker&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/sticker&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Send Contact&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/contact&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Send Link&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/link&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Send Location&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/location&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Send Poll / Vote&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/poll&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Send Presence&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/presence&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Send Chat Presence (Typing Indicator)&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/send/chat-presence&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Revoke Message&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/message/:message_id/revoke&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;React Message&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/message/:message_id/reaction&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Delete Message&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/message/:message_id/delete&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Edit Message&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/message/:message_id/update&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Read Message (DM)&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/message/:message_id/read&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Star Message&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/message/:message_id/star&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Unstar Message&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/message/:message_id/unstar&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Join Group With Link&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/join-with-link&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Group Info From Link&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/group/info-from-link&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Group Info&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/group/info&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Leave Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/leave&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Create Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;List Participants in Group&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/group/participants&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Add Participants in Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/participants&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Remove Participant in Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/participants/remove&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Promote Participant in Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/participants/promote&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Demote Participant in Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/participants/demote&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Export Group Participants (CSV)&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/group/participants/export&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;List Requested Participants in Group&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/group/participant-requests&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Approve Requested Participant in Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/participant-requests/approve&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Reject Requested Participant in Group&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/participant-requests/reject&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Set Group Photo&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/photo&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Set Group Name&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/name&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Set Group Locked&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/locked&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Set Group Announce&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/announce&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Set Group Topic&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/group/topic&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Get Group Invite Link&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/group/invite-link&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Unfollow Newsletter&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/newsletter/unfollow&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Get Chat List&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/chats&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Get Chat Messages&lt;/td&gt; 
   &lt;td&gt;GET&lt;/td&gt; 
   &lt;td&gt;/chat/:chat_jid/messages&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Label Chat&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/chat/:chat_jid/label&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;â&lt;/td&gt; 
   &lt;td&gt;Pin Chat&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;/chat/:chat_jid/pin&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-txt"&gt;â = Available
â = Not Available Yet
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;User Interface&lt;/h2&gt; 
&lt;h3&gt;MCP UI&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Setup MCP (tested in cursor) &lt;img src="https://i.ibb.co/vCg4zNWt/mcpsetup.png" alt="Setup MCP" /&gt;&lt;/li&gt; 
 &lt;li&gt;Test MCP &lt;img src="https://i.ibb.co/B2LX38DW/mcptest.png" alt="Test MCP" /&gt;&lt;/li&gt; 
 &lt;li&gt;Successfully setup MCP &lt;img src="https://i.ibb.co/1fCx0Myc/mcpsuccess.png" alt="Success MCP" /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;HTTP REST API UI&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Image&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Homepage&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/homepage.png" alt="Homepage" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Login&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/login.png" alt="Login" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Login With Code&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/login-with-code.png" alt="Login With Code" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Message&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-message.png" alt="Send Message" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Image&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-image.png" alt="Send Image" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send File&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-file.png" alt="Send File" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Video&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-video.png" alt="Send Video" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Sticker&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-sticker.png" alt="Send Sticker" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Contact&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-contact.png" alt="Send Contact" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Location&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-location.png" alt="Send Location" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Audio&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-audio.png" alt="Send Audio" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Poll&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-poll.png" alt="Send Poll" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Presence&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-presence.png" alt="Send Presence" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send Link&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/send-link.png" alt="Send Link" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;My Group&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/group-list.png" alt="My Group" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Group Info From Link&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/group-info-from-link.png" alt="Group Info From Link" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Create Group&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/group-create.png" alt="Create Group" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Join Group with Link&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/group-join-link.png" alt="Join Group with Link" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Manage Participant&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/group-manage-participant.png" alt="Manage Participant" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;My Newsletter&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/newsletter-list.png" alt="My Newsletter" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;My Contacts&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/contact-list.png" alt="My Contacts" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Business Profile&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/aldinokemal/go-whatsapp-web-multidevice/main/gallery/business-profile.png" alt="Business Profile" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Mac OS NOTE&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Please do this if you have an error (invalid flag in pkg-config --cflags: -Xpreprocessor) &lt;code&gt;export CGO_CFLAGS_ALLOW="-Xpreprocessor"&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Important&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;This project is unofficial and not affiliated with WhatsApp.&lt;/li&gt; 
 &lt;li&gt;Please use official WhatsApp API to avoid any issues.&lt;/li&gt; 
 &lt;li&gt;We only able to run MCP or REST API, this is limitation from whatsmeow library. independent MCP will be available in the future.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>