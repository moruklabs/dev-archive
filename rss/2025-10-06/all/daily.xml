<rss version="2.0">
  <channel>
    <title>GitHub All Languages Daily Trending</title>
    <description>Daily Trending of All Languages in GitHub</description>
    <pubDate>Sun, 05 Oct 2025 01:31:21 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>paaatrick/playball</title>
      <link>https://github.com/paaatrick/playball</link>
      <description>&lt;p&gt;Watch MLB games from the comfort of your own terminal&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Playball!&lt;/h2&gt; 
&lt;p&gt;Watch MLB games from the comfort of your own terminal&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/paaatrick/playball/main/demo.gif" alt="screenshot" /&gt;&lt;/p&gt; 
&lt;h3&gt;Why?&lt;/h3&gt; 
&lt;p&gt;&lt;a href="http://www.mlb.com/mlb/gameday/#"&gt;MLB Gameday&lt;/a&gt; and &lt;a href="http://mlb.tv"&gt;MLB.tv&lt;/a&gt; are great, but sometimes you want to keep an eye on a game a bit more discreetly. &lt;code&gt;playball&lt;/code&gt; puts the game in a terminal window.&lt;/p&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;p&gt;Just want to try it out?&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npx playball
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install&lt;/h3&gt; 
&lt;p&gt;Ready for the big leagues? Install the package globally&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install -g playball
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run it&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ playball
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;$ docker build -t playball .
$ docker run -it --rm --name playball playball:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Build options&lt;/h4&gt; 
&lt;p&gt;Update the language encoding of by adding &lt;code&gt;--build-args&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ docker build --build-arg LANG=en_US.UTF-8 -t playball .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Keys&lt;/h3&gt; 
&lt;h4&gt;Global&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;key&lt;/th&gt; 
   &lt;th&gt;action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;q&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;quit&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;c&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;go to schedule view&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;s&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;go to standings view&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Schedule View&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;key&lt;/th&gt; 
   &lt;th&gt;action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;↓&lt;/kbd&gt;/&lt;kbd&gt;j&lt;/kbd&gt;, &lt;kbd&gt;↑&lt;/kbd&gt;/&lt;kbd&gt;k&lt;/kbd&gt;, &lt;kbd&gt;←&lt;/kbd&gt;/&lt;kbd&gt;h&lt;/kbd&gt;, &lt;kbd&gt;→&lt;/kbd&gt;/&lt;kbd&gt;l&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;change highlighted game&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;enter&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;view highlighted game&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;p&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;show previous day's schedule/results&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;n&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;show next day's schedule&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;t&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;return to today's schedule&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Game View&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;key&lt;/th&gt; 
   &lt;th&gt;action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;↓&lt;/kbd&gt;/&lt;kbd&gt;j&lt;/kbd&gt;, &lt;kbd&gt;↑&lt;/kbd&gt;/&lt;kbd&gt;k&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;scroll list of all plays&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;Playball can be configured using the &lt;code&gt;config&lt;/code&gt; subcommand. To list the current configuration values run the subcommand with no additional arguments:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;playball config
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should see output similar to:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;color.ball = green
color.favorite-star = yellow
color.in-play-no-out = blue
color.in-play-out = white
color.in-play-runs-bg = white
color.in-play-runs-fg = black
color.on-base = yellow
color.other-event = white
color.out = red
color.strike = red
color.strike-out = red
color.walk = green
favorites = 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get the value of a single setting pass the key as an additional argument:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;playball config color.strike
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To change a setting pass the key and value as arguments:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;playball config color.strike blue
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To revert a setting to its default value provide the key and the &lt;code&gt;--unset&lt;/code&gt; flag:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;playball config color.strike --unset
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This table summarizes the available settings:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;key&lt;/th&gt; 
   &lt;th&gt;description&lt;/th&gt; 
   &lt;th&gt;default&lt;/th&gt; 
   &lt;th&gt;allowed values&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color.ball&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of dots representing balls in top row of game view&lt;/td&gt; 
   &lt;td&gt;green&lt;/td&gt; 
   &lt;td&gt;One of the following: &lt;code&gt;black&lt;/code&gt;, &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;green&lt;/code&gt;, &lt;code&gt;yellow&lt;/code&gt;, &lt;code&gt;blue&lt;/code&gt;, &lt;code&gt;magenta&lt;/code&gt;, &lt;code&gt;cyan&lt;/code&gt;, &lt;code&gt;white&lt;/code&gt;, &lt;code&gt;grey&lt;/code&gt;. Any of those colors may be prefixed by &lt;code&gt;bright-&lt;/code&gt; or &lt;code&gt;light-&lt;/code&gt; (for example &lt;code&gt;bright-green&lt;/code&gt;). The exact color used will depend on your terminal settings. The value &lt;code&gt;default&lt;/code&gt; may be used to specify the default text color for your terminal. Finally hex colors (e.g &lt;code&gt;#FFA500&lt;/code&gt;) can be specified. If your terminal does not support true color, the closest supported color may be used.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color.favorite-star&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of star indiciating favorite team in schedule and standing views&lt;/td&gt; 
   &lt;td&gt;yellow&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;See above&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color.in-play-no-out&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of result where ball was put in play and no out was made (single, double, etc) in list of plays in game view&lt;/td&gt; 
   &lt;td&gt;blue&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;See above&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color.in-play-out&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of result where ball was put in play and an out was made (flyout, fielder's choice, etc) in list of plays in game view&lt;/td&gt; 
   &lt;td&gt;white&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;See above&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color.in-play-runs-bg&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Background color for score update in list of plays in game view&lt;/td&gt; 
   &lt;td&gt;white&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;See above&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color.in-play-runs-fg&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Foreground color for score update in list of plays in game view&lt;/td&gt; 
   &lt;td&gt;black&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;See above&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color.on-base&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of diamonds representing runners on base in top row of game view&lt;/td&gt; 
   &lt;td&gt;yellow&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;See above&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color.other-event&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of other events (mound visit, injury delay, etc) in list of plays in game view&lt;/td&gt; 
   &lt;td&gt;white&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;See above&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color.out&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of dots representing outs in top row of game view&lt;/td&gt; 
   &lt;td&gt;red&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;See above&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color.strike&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of dots representing strikes in top row of game view&lt;/td&gt; 
   &lt;td&gt;red&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;See above&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color.strike-out&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of result where play ends on a strike (strike out) in list of plays in game view&lt;/td&gt; 
   &lt;td&gt;red&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;See above&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color.walk&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of result where play ends on a ball (walk, hit by pitch) in list of plays in game view&lt;/td&gt; 
   &lt;td&gt;green&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;See above&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;favorites&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Teams to highlight in schedule and standings views&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Any one of the following: &lt;code&gt;ATL&lt;/code&gt;, &lt;code&gt;AZ&lt;/code&gt;, &lt;code&gt;BAL&lt;/code&gt;, &lt;code&gt;BOS&lt;/code&gt;, &lt;code&gt;CHC&lt;/code&gt;, &lt;code&gt;CIN&lt;/code&gt;, &lt;code&gt;CLE&lt;/code&gt;, &lt;code&gt;COL&lt;/code&gt;, &lt;code&gt;CWS&lt;/code&gt;, &lt;code&gt;DET&lt;/code&gt;, &lt;code&gt;HOU&lt;/code&gt;, &lt;code&gt;KC&lt;/code&gt;, &lt;code&gt;LAA&lt;/code&gt;, &lt;code&gt;LAD&lt;/code&gt;, &lt;code&gt;MIA&lt;/code&gt;, &lt;code&gt;MIL&lt;/code&gt;, &lt;code&gt;MIN&lt;/code&gt;, &lt;code&gt;NYM&lt;/code&gt;, &lt;code&gt;NYY&lt;/code&gt;, &lt;code&gt;OAK&lt;/code&gt;, &lt;code&gt;PHI&lt;/code&gt;, &lt;code&gt;PIT&lt;/code&gt;, &lt;code&gt;SD&lt;/code&gt;, &lt;code&gt;SEA&lt;/code&gt;, &lt;code&gt;SF&lt;/code&gt;, &lt;code&gt;STL&lt;/code&gt;, &lt;code&gt;TB&lt;/code&gt;, &lt;code&gt;TEX&lt;/code&gt;, &lt;code&gt;TOR&lt;/code&gt;, &lt;code&gt;WSH&lt;/code&gt;. Or a comma-separated list of multiple (e.g. &lt;code&gt;SEA,MIL&lt;/code&gt;).&lt;br /&gt;&lt;br /&gt;Note: in some terminals the list must be quoted: &lt;code&gt;playball config favorites "SEA,MIL"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;If enabled, the terminal title will be set to the score of the current game&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/paaatrick/playball.git
cd playball
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Contributions are welcome!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Infisical/infisical</title>
      <link>https://github.com/Infisical/infisical</link>
      <description>&lt;p&gt;Infisical is the open-source platform for secrets management, PKI, and SSH access.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img width="300" src="https://raw.githubusercontent.com/Infisical/infisical/main/img/logoname-white.svg#gh-dark-mode-only" alt="infisical" /&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;p align="center"&gt;&lt;b&gt;The open-source secret management platform&lt;/b&gt;: Sync secrets/configs across your team/infrastructure and prevent secret leaks.&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://infisical.com/slack"&gt;Slack&lt;/a&gt; | &lt;a href="https://infisical.com/"&gt;Infisical Cloud&lt;/a&gt; | &lt;a href="https://infisical.com/docs/self-hosting/overview"&gt;Self-Hosting&lt;/a&gt; | &lt;a href="https://infisical.com/docs/documentation/getting-started/introduction"&gt;Docs&lt;/a&gt; | &lt;a href="https://www.infisical.com"&gt;Website&lt;/a&gt; | &lt;a href="https://infisical.com/careers"&gt;Hiring (Remote/SF)&lt;/a&gt; &lt;/h4&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://github.com/Infisical/infisical/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="Infisical is released under the MIT license." /&gt; &lt;/a&gt; &lt;a href="https://github.com/infisical/infisical/raw/main/CONTRIBUTING.md"&gt; &lt;img src="https://img.shields.io/badge/PRs-Welcome-brightgreen" alt="PRs welcome!" /&gt; &lt;/a&gt; &lt;a href="https://github.com/Infisical/infisical/issues"&gt; &lt;img src="https://img.shields.io/github/commit-activity/m/infisical/infisical" alt="git commit activity" /&gt; &lt;/a&gt; &lt;a href="https://cloudsmith.io/~infisical/repos/"&gt; &lt;img src="https://img.shields.io/badge/Downloads-6.95M-orange" alt="Cloudsmith downloads" /&gt; &lt;/a&gt; &lt;a href="https://infisical.com/slack"&gt; &lt;img src="https://img.shields.io/badge/chat-on%20Slack-blueviolet" alt="Slack community channel" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/infisical"&gt; &lt;img src="https://img.shields.io/twitter/follow/infisical?label=Follow" alt="Infisical Twitter" /&gt; &lt;/a&gt; &lt;/h4&gt; 
&lt;img src="https://raw.githubusercontent.com/Infisical/infisical/main/img/infisical_github_repo2.png" width="100%" alt="Dashboard" /&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://infisical.com"&gt;Infisical&lt;/a&gt;&lt;/strong&gt; is the open source secret management platform that teams use to centralize their application configuration and secrets like API keys and database credentials as well as manage their internal PKI.&lt;/p&gt; 
&lt;p&gt;We're on a mission to make security tooling more accessible to everyone, not just security teams, and that means redesigning the entire developer experience from ground up.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Secrets Management:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/project"&gt;Dashboard&lt;/a&gt;&lt;/strong&gt;: Manage secrets across projects and environments (e.g. development, production, etc.) through a user-friendly interface.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/integrations/overview"&gt;Native Integrations&lt;/a&gt;&lt;/strong&gt;: Sync secrets to platforms like &lt;a href="https://infisical.com/docs/integrations/cicd/githubactions"&gt;GitHub&lt;/a&gt;, &lt;a href="https://infisical.com/docs/integrations/cloud/vercel"&gt;Vercel&lt;/a&gt;, &lt;a href="https://infisical.com/docs/integrations/cloud/aws-secret-manager"&gt;AWS&lt;/a&gt;, and use tools like &lt;a href="https://infisical.com/docs/integrations/frameworks/terraform"&gt;Terraform&lt;/a&gt;, &lt;a href="https://infisical.com/docs/integrations/platforms/ansible"&gt;Ansible&lt;/a&gt;, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/secret-versioning"&gt;Secret versioning&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/pit-recovery"&gt;Point-in-Time Recovery&lt;/a&gt;&lt;/strong&gt;: Keep track of every secret and project state; roll back when needed.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/secret-rotation/overview"&gt;Secret Rotation&lt;/a&gt;&lt;/strong&gt;: Rotate secrets at regular intervals for services like &lt;a href="https://infisical.com/docs/documentation/platform/secret-rotation/postgres-credentials"&gt;PostgreSQL&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/secret-rotation/mysql"&gt;MySQL&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/secret-rotation/aws-iam"&gt;AWS IAM&lt;/a&gt;, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/dynamic-secrets/overview"&gt;Dynamic Secrets&lt;/a&gt;&lt;/strong&gt;: Generate ephemeral secrets on-demand for services like &lt;a href="https://infisical.com/docs/documentation/platform/dynamic-secrets/postgresql"&gt;PostgreSQL&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/dynamic-secrets/mysql"&gt;MySQL&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/dynamic-secrets/rabbit-mq"&gt;RabbitMQ&lt;/a&gt;, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/cli/scanning-overview"&gt;Secret Scanning and Leak Prevention&lt;/a&gt;&lt;/strong&gt;: Prevent secrets from leaking to git.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/getting-started/kubernetes"&gt;Infisical Kubernetes Operator&lt;/a&gt;&lt;/strong&gt;: Deliver secrets to your Kubernetes workloads and automatically reload deployments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/infisical-agent/overview"&gt;Infisical Agent&lt;/a&gt;&lt;/strong&gt;: Inject secrets into applications without modifying any code logic.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Infisical (Internal) PKI:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/pki/private-ca"&gt;Private Certificate Authority&lt;/a&gt;&lt;/strong&gt;: Create CA hierarchies, configure &lt;a href="https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-issuing-certificates"&gt;certificate templates&lt;/a&gt; for policy enforcement, and start issuing X.509 certificates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/pki/certificates"&gt;Certificate Management&lt;/a&gt;&lt;/strong&gt;: Manage the certificate lifecycle from &lt;a href="https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-issuing-certificates"&gt;issuance&lt;/a&gt; to &lt;a href="https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-revoking-certificates"&gt;revocation&lt;/a&gt; with support for CRL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/pki/alerting"&gt;Alerting&lt;/a&gt;&lt;/strong&gt;: Configure alerting for expiring CA and end-entity certificates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/pki/pki-issuer"&gt;Infisical PKI Issuer for Kubernetes&lt;/a&gt;&lt;/strong&gt;: Deliver TLS certificates to your Kubernetes workloads with automatic renewal.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/pki/est"&gt;Enrollment over Secure Transport&lt;/a&gt;&lt;/strong&gt;: Enroll and manage certificates via EST protocol.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Infisical Key Management System (KMS):&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/kms"&gt;Cryptographic Keys&lt;/a&gt;&lt;/strong&gt;: Centrally manage keys across projects through a user-friendly interface or via the API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/kms#guide-to-encrypting-data"&gt;Encrypt and Decrypt Data&lt;/a&gt;&lt;/strong&gt;: Use symmetric keys to encrypt and decrypt data.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Infisical SSH&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/ssh"&gt;Signed SSH Certificates&lt;/a&gt;&lt;/strong&gt;: Issue ephemeral SSH credentials for secure, short-lived, and centralized access to infrastructure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;General Platform:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Authentication Methods&lt;/strong&gt;: Authenticate machine identities with Infisical using a cloud-native or platform agnostic authentication method (&lt;a href="https://infisical.com/docs/documentation/platform/identities/kubernetes-auth"&gt;Kubernetes Auth&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/identities/gcp-auth"&gt;GCP Auth&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/identities/azure-auth"&gt;Azure Auth&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/identities/aws-auth"&gt;AWS Auth&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/identities/oidc-auth/general"&gt;OIDC Auth&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/identities/universal-auth"&gt;Universal Auth&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/access-controls/overview"&gt;Access Controls&lt;/a&gt;&lt;/strong&gt;: Define advanced authorization controls for users and machine identities with &lt;a href="https://infisical.com/docs/documentation/platform/access-controls/role-based-access-controls"&gt;RBAC&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/access-controls/additional-privileges"&gt;additional privileges&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/access-controls/temporary-access"&gt;temporary access&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/access-controls/access-requests"&gt;access requests&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/pr-workflows"&gt;approval workflows&lt;/a&gt;, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/audit-logs"&gt;Audit logs&lt;/a&gt;&lt;/strong&gt;: Track every action taken on the platform.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/self-hosting/overview"&gt;Self-hosting&lt;/a&gt;&lt;/strong&gt;: Deploy Infisical on-prem or cloud with ease; keep data on your own infrastructure.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/sdks/overview"&gt;Infisical SDK&lt;/a&gt;&lt;/strong&gt;: Interact with Infisical via client SDKs (&lt;a href="https://infisical.com/docs/sdks/languages/node"&gt;Node&lt;/a&gt;, &lt;a href="https://github.com/Infisical/python-sdk-official?tab=readme-ov-file#infisical-python-sdk"&gt;Python&lt;/a&gt;, &lt;a href="https://infisical.com/docs/sdks/languages/go"&gt;Go&lt;/a&gt;, &lt;a href="https://infisical.com/docs/sdks/languages/ruby"&gt;Ruby&lt;/a&gt;, &lt;a href="https://infisical.com/docs/sdks/languages/java"&gt;Java&lt;/a&gt;, &lt;a href="https://infisical.com/docs/sdks/languages/csharp"&gt;.NET&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/cli/overview"&gt;Infisical CLI&lt;/a&gt;&lt;/strong&gt;: Interact with Infisical via CLI; useful for injecting secrets into local development and CI/CD pipelines.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/api-reference/overview/introduction"&gt;Infisical API&lt;/a&gt;&lt;/strong&gt;: Interact with Infisical via API.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Check out the &lt;a href="https://infisical.com/docs/getting-started/introduction"&gt;Quickstart Guides&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Use Infisical Cloud&lt;/th&gt; 
   &lt;th&gt;Deploy Infisical on premise&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;The fastest and most reliable way to &lt;br /&gt; get started with Infisical is signing up &lt;br /&gt; for free to &lt;a href="https://app.infisical.com/login"&gt;Infisical Cloud&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;&lt;br /&gt; View all &lt;a href="https://infisical.com/docs/self-hosting/overview"&gt;deployment options&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Run Infisical locally&lt;/h3&gt; 
&lt;p&gt;To set up and run Infisical locally, make sure you have Git and Docker installed on your system. Then run the command for your system:&lt;/p&gt; 
&lt;p&gt;Linux/macOS:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;git clone https://github.com/Infisical/infisical &amp;amp;&amp;amp; cd "$(basename $_ .git)" &amp;amp;&amp;amp; cp .env.example .env &amp;amp;&amp;amp; docker compose -f docker-compose.prod.yml up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Windows Command Prompt:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;git clone https://github.com/Infisical/infisical &amp;amp;&amp;amp; cd infisical &amp;amp;&amp;amp; copy .env.example .env &amp;amp;&amp;amp; docker compose -f docker-compose.prod.yml up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create an account at &lt;code&gt;http://localhost:80&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Scan and prevent secret leaks&lt;/h3&gt; 
&lt;p&gt;On top managing secrets with Infisical, you can also &lt;a href=""&gt;scan for over 140+ secret types&lt;/a&gt; in your files, directories and git repositories.&lt;/p&gt; 
&lt;p&gt;To scan your full git history, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;infisical scan --verbose
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install pre commit hook to scan each commit before you push to your repository&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;infisical scan install --pre-commit-hook
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Learn about Infisical's code scanning feature &lt;a href="https://infisical.com/docs/cli/scanning-overview"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Open-source vs. paid&lt;/h2&gt; 
&lt;p&gt;This repo available under the &lt;a href="https://github.com/Infisical/infisical/raw/main/LICENSE"&gt;MIT expat license&lt;/a&gt;, with the exception of the &lt;code&gt;ee&lt;/code&gt; directory which will contain premium enterprise features requiring a Infisical license.&lt;/p&gt; 
&lt;p&gt;If you are interested in managed Infisical Cloud of self-hosted Enterprise Offering, take a look at &lt;a href="https://infisical.com/"&gt;our website&lt;/a&gt; or &lt;a href="https://infisical.cal.com/vlad/infisical-demo"&gt;book a meeting with us&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;Please do not file GitHub issues or post on our public forum for security vulnerabilities, as they are public!&lt;/p&gt; 
&lt;p&gt;Infisical takes security issues very seriously. If you have any concerns about Infisical or believe you have uncovered a vulnerability, please get in touch via the e-mail address &lt;a href="mailto:security@infisical.com"&gt;security@infisical.com&lt;/a&gt;. In the message, try to provide a description of the issue and ideally a way of reproducing it. The security team will get back to you as soon as possible.&lt;/p&gt; 
&lt;p&gt;Note that this security address should be used only for undisclosed vulnerabilities. Please report any security problems to us before disclosing it publicly.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Whether it's big or small, we love contributions. Check out our guide to see how to &lt;a href="https://infisical.com/docs/contributing/getting-started"&gt;get started&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Not sure where to get started? You can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Join our &lt;a href="https://infisical.com/slack"&gt;Slack&lt;/a&gt;, and ask us any questions there.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;We are hiring!&lt;/h2&gt; 
&lt;p&gt;If you're reading this, there is a strong chance you like the products we created.&lt;/p&gt; 
&lt;p&gt;You might also make a great addition to our team. We're growing fast and would love for you to &lt;a href="https://infisical.com/careers"&gt;join us&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>juspay/hyperswitch</title>
      <link>https://github.com/juspay/hyperswitch</link>
      <description>&lt;p&gt;An open source payments switch written in Rust to make payments fast, reliable and affordable&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/hyperswitch-logo-dark.svg#gh-dark-mode-only" alt="Hyperswitch-Logo" width="40%" /&gt; &lt;img src="https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/hyperswitch-logo-light.svg#gh-light-mode-only" alt="Hyperswitch-Logo" width="40%" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Composable Open-Source Payments Infrastructure&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/gifs/quickstart.gif" alt="Quickstart demo" /&gt; &lt;/p&gt; 
&lt;!-- @import "[TOC]" {cmd="toc" depthFrom=1 depthTo=6 orderedList=false} --&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/juspay/hyperswitch/actions?query=workflow%3ACI+branch%3Amain"&gt; &lt;img src="https://github.com/juspay/hyperswitch/workflows/CI-push/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://github.com/juspay/hyperswitch/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/juspay/hyperswitch" /&gt; &lt;/a&gt; &lt;a href="https://github.com/juspay/hyperswitch/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/Made_in-Rust-orange" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.linkedin.com/company/hyperswitch/"&gt; &lt;img src="https://img.shields.io/badge/follow-hyperswitch-blue?logo=linkedin&amp;amp;labelColor=grey" /&gt; &lt;/a&gt; &lt;a href="https://x.com/hyperswitchio"&gt; &lt;img src="https://img.shields.io/badge/follow-%40hyperswitchio-white?logo=x&amp;amp;labelColor=grey" /&gt; &lt;/a&gt; &lt;a href="https://inviter.co/hyperswitch-slack"&gt; &lt;img src="https://img.shields.io/badge/chat-on_slack-blue?logo=slack&amp;amp;labelColor=grey&amp;amp;color=%233f0e40" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;📁 Table of Contents&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#-what-can-i-do-with-hyperswitch"&gt;What Can I Do with Hyperswitch?&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#-quickstart-local-setup"&gt;Quickstart (Local Setup)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#cloud-deployment"&gt;Cloud Deployment&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#hosted-sandbox-no-setup-required"&gt;Hosted Sandbox (No Setup Required)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#-why-hyperswitch"&gt;Why Hyperswitch?&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#architectural-overview"&gt;Architectural Overview&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#our-vision"&gt;Our Vision&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#community--contributions"&gt;Community &amp;amp; Contributions&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#feature-requests--bugs"&gt;Feature Requests &amp;amp; Bugs&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#versioning"&gt;Versioning&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#copyright-and-license"&gt;License&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#team-behind-hyperswitch"&gt;Team Behind Hyperswitch&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;summary&gt;&lt;h2&gt; What Can I Do with Hyperswitch?&lt;/h2&gt;&lt;/summary&gt; 
&lt;p&gt;Hyperswitch offers a modular, open-source payments infrastructure designed for flexibility and control. Apart from our Payment Suite offering, this solution allows businesses to pick and integrate only the modules they need on top of their existing payment stack — without unnecessary complexity or vendor lock-in.&lt;/p&gt; 
&lt;p&gt;Each module is independent and purpose-built to optimize different aspects of payment processing.&lt;/p&gt; 
&lt;h3&gt; Learn More About The Payment Modules &lt;/h3&gt; 
&lt;details&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cost Observability&lt;/strong&gt;&lt;br /&gt; Advanced observability tools to audit, monitor, and optimize your payment costs. Detect hidden fees, downgrades, and penalties with self-serve dashboards and actionable insights.&lt;br /&gt; &lt;em&gt;&lt;a href="https://docs.hyperswitch.io/about-hyperswitch/payments-modules/ai-powered-cost-observability"&gt;Read more&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Revenue Recovery&lt;/strong&gt;&lt;br /&gt; Combat passive churn with intelligent retry strategies tuned by card bin, region, method, and more. Offers fine-grained control over retry algorithms, penalty budgets, and recovery transparency.&lt;br /&gt; &lt;em&gt;&lt;a href="https://docs.hyperswitch.io/about-hyperswitch/payments-modules/revenue-recovery"&gt;Read more&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Vault&lt;/strong&gt;&lt;br /&gt; A PCI-compliant vault service to store cards, tokens, wallets, and bank credentials. Provides a unified, secure, and reusable store of customer-linked payment methods.&lt;br /&gt; &lt;em&gt;&lt;a href="https://docs.hyperswitch.io/about-hyperswitch/payments-modules/vault"&gt;Read more&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Intelligent Routing&lt;/strong&gt;&lt;br /&gt; Route each transaction to the PSP with the highest predicted auth rate. Reduce retries, avoid downtime, and minimize latency while maximizing first attempt success.&lt;br /&gt; &lt;em&gt;&lt;a href="https://docs.hyperswitch.io/about-hyperswitch/payments-modules/intelligent-routing"&gt;Read more&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reconciliation&lt;/strong&gt;&lt;br /&gt; Automate 2-way and 3-way reconciliation with backdated support, staggered scheduling, and customizable outputs. Reduces manual ops effort and increases audit confidence.&lt;br /&gt; &lt;em&gt;&lt;a href="https://docs.hyperswitch.io/about-hyperswitch/payments-modules/reconciliation"&gt;Read more&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Alternate Payment Methods&lt;/strong&gt;&lt;br /&gt; Drop-in widgets for PayPal, Apple Pay, Google Pay, Samsung Pay, Pay by Bank, and BNPL providers like Klarna. Maximizes conversions with seamless one-click checkout.&lt;br /&gt; &lt;em&gt;&lt;a href="https://docs.hyperswitch.io/about-hyperswitch/payments-modules/enable-alternate-payment-method-widgets"&gt;Read more&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;h3&gt; Local Setup via Docker &lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# One-click local setup

git clone --depth 1 --branch latest https://github.com/juspay/hyperswitch

cd hyperswitch

scripts/setup.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;This script: &lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Detects Docker/Podman&lt;/li&gt; 
  &lt;li&gt;Offers multiple deployment profiles: 
   &lt;ul&gt; 
    &lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt;: App server + Control Center&lt;/li&gt; 
    &lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt;: Includes monitoring + schedulers&lt;/li&gt; 
    &lt;li&gt;&lt;strong&gt;Minimal&lt;/strong&gt;: Standalone App server&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Provides access links when done&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;If you need further help, check out our &lt;a href="https://docs.hyperswitch.io/hyperswitch-open-source/overview/unified-local-setup-using-docker"&gt;video tutorial&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;👉 After setup, &lt;a href="https://docs.hyperswitch.io/hyperswitch-open-source/account-setup/using-hyperswitch-control-center#add-a-payment-processor"&gt;configure a connector&lt;/a&gt; and &lt;a href="https://docs.hyperswitch.io/hyperswitch-open-source/account-setup/test-a-payment"&gt;test a payment&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Hosted Sandbox (No Setup Required)&lt;/h3&gt; 
&lt;p&gt;Hyperswitch offers a fully hosted sandbox environment that requires no setup. You can explore the Control Center, configure payment connectors, and test payments directly from the UI.&lt;/p&gt; 
&lt;a href="https://app.hyperswitch.io"&gt; &lt;img src="https://github.com/juspay/hyperswitch/raw/main/docs/imgs/try-the-sandbox.png?raw=true" height="35" /&gt; &lt;/a&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt; What you can do in the Hosted Sandbox&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Access the full Control Center&lt;/li&gt; 
  &lt;li&gt;Configure payment connectors&lt;/li&gt; 
  &lt;li&gt;View logs, routing rules, and retry strategies&lt;/li&gt; 
  &lt;li&gt;Try payments directly from the UI&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;&lt;strong&gt;Cloud Deployment&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;You can deploy to AWS, GCP, or Azure using Helm or CDK scripts. Fastest path:&lt;/p&gt; 
&lt;p&gt;Click to deploy via AWS:&lt;/p&gt; 
&lt;a href="https://console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/new?stackName=HyperswitchBootstarp&amp;amp;templateURL=https://hyperswitch-synth.s3.eu-central-1.amazonaws.com/hs-starter-config.yaml"&gt; &lt;img src="https://github.com/juspay/hyperswitch/raw/main/docs/imgs/aws_button.png?raw=true" height="35" /&gt; &lt;/a&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Cloud Deployment Instructions&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Click the AWS deployment button above to launch the stack.&lt;/li&gt; 
  &lt;li&gt;Follow the guided steps in the AWS Console (approx. 30–45 mins).&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;✅ This setup provisions Hyperswitch on your cloud account using CloudFormation.&lt;/p&gt; 
 &lt;p&gt;📘 For full instructions and Helm-based deployments, check out the&lt;br /&gt; &lt;a href="https://docs.hyperswitch.io/hyperswitch-open-source/deploy-on-kubernetes-using-helm"&gt;Cloud Install Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#architectural-overview"&gt; &lt;h2 id="architectural-overview"&gt;Architectural Overview&lt;/h2&gt; &lt;/a&gt; 
&lt;img src="https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/features.png" /&gt; 
&lt;img src="https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/non-functional-features.png" /&gt; 
&lt;img src="https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/hyperswitch-architecture-v1.png" /&gt; 
&lt;h2&gt;Why Hyperswitch?&lt;/h2&gt; 
&lt;p&gt;Hyperswitch is a commercial open-source payments stack purpose-built for scale, flexibility, and developer experience. Designed with a modular architecture, Hyperswitch lets you pick only the components you need—whether it’s routing, retries, vaulting, or observability—without vendor lock-in or bloated integrations.&lt;/p&gt; 
&lt;p&gt;Built in Rust for performance and reliability, Hyperswitch supports global payment methods (cards, wallets, BNPL, UPI, Pay by Bank), exposes smart routing and retry logic, and provides a visual workflow builder in the Control Center. Whether you're integrating a full payment suite or augmenting an existing stack with a single module, Hyperswitch meets you where you are.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;“Linux for Payments”&lt;/strong&gt; — Hyperswitch is a well-architected reference for teams who want to own their payments stack.&lt;/p&gt; 
&lt;p&gt;We believe in:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt; Embracing Payment Diversity:&lt;/strong&gt; Innovation comes from enabling choice—across payment methods, processors, and flows.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt; Open Source by Default:&lt;/strong&gt; Transparency drives trust and builds better, reusable software.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt; Community-Driven Development:&lt;/strong&gt; Our roadmap is shaped by real-world use cases and contributors.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt; Systems-Level Engineering:&lt;/strong&gt; We hold ourselves to a high bar for reliability, security, and performance.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt; Maximizing Value Creation:&lt;/strong&gt; For developers, customers, and partners alike.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt; Community-Driven, Enterprise-Tested:&lt;/strong&gt; Hyperswitch is built in the open with real-world feedback from developers and contributors, and maintained by Juspay, the team powering payment infrastructure for 400+ leading enterprises worldwide.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributors from around the world to help build Hyperswitch. Whether you're fixing bugs, improving documentation, or adding new features, your help is appreciated.&lt;/p&gt; 
&lt;p&gt;Please read our &lt;a href="https://github.com/juspay/hyperswitch/raw/main/docs/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;Join the conversation on &lt;a href="https://inviter.co/hyperswitch-slack"&gt;Slack&lt;/a&gt; or explore open issues on &lt;a href="https://github.com/juspay/hyperswitch/issues"&gt;GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#feature-requests"&gt; &lt;h2 id="feature-requests"&gt;Feature requests &amp;amp; Bugs&lt;/h2&gt; &lt;/a&gt; 
&lt;p&gt;For new product features, enhancements, roadmap discussions, or to share queries and ideas, visit our &lt;a href="https://github.com/juspay/hyperswitch/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For reporting a bug, please read the issue guidelines and search for &lt;a href="https://github.com/juspay/hyperswitch/issues"&gt;existing and closed issues&lt;/a&gt;. If your problem or idea is not addressed yet, please &lt;a href="https://github.com/juspay/hyperswitch/issues/new/choose"&gt;open a new issue&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#versioning"&gt; &lt;h2 id="versioning"&gt;Versioning&lt;/h2&gt; &lt;/a&gt; 
&lt;p&gt;Check the &lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#copyright-and-license"&gt; &lt;h2 id="copyright-and-license"&gt;Copyright and License&lt;/h2&gt; &lt;/a&gt; 
&lt;p&gt;This product is licensed under the &lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/LICENSE"&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#team-behind-hyperswitch"&gt; &lt;h2 id="team-behind-hyperswitch"&gt;Team behind Hyperswitch&lt;/h2&gt; &lt;/a&gt; 
&lt;p&gt;The core team of 150+ engineers building Hyperswitch. Keep up the great work! 🥂&lt;/p&gt; 
&lt;a href="https://github.com/juspay/hyperswitch/graphs/contributors"&gt; &lt;img src="https://contributors-img.web.app/image?repo=juspay/hyperswitch" alt="Contributors" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>AykutSarac/jsoncrack.com</title>
      <link>https://github.com/AykutSarac/jsoncrack.com</link>
      <description>&lt;p&gt;✨ Innovative and open-source visualization application that transforms various data formats, such as JSON, YAML, XML, CSV and more, into interactive graphs.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://github.com/AykutSarac/jsoncrack.com"&gt; &lt;img src="https://raw.githubusercontent.com/AykutSarac/jsoncrack.com/main/public/assets/192.png" height="50" alt="Logo" /&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;JSON Crack&lt;/h1&gt; 
&lt;p align="center"&gt; The open-source JSON Editor. &lt;br /&gt; &lt;a href="https://jsoncrack.com"&gt;&lt;strong&gt;Learn more »&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://todiagram.com"&gt;ToDiagram&lt;/a&gt; · &lt;a href="https://discord.gg/yVyTtCRueq"&gt;Discord&lt;/a&gt; · &lt;a href="https://jsoncrack.com"&gt;Website&lt;/a&gt; · &lt;a href="https://github.com/AykutSarac/jsoncrack.com/issues"&gt;Issues&lt;/a&gt; · &lt;a href="https://marketplace.visualstudio.com/items?itemName=AykutSarac.jsoncrack-vscode"&gt;VS Code&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;!-- ABOUT THE PROJECT --&gt; 
&lt;h2&gt;About the Project&lt;/h2&gt; 
&lt;img width="100%" alt="booking-screen" src="https://raw.githubusercontent.com/AykutSarac/jsoncrack.com/main/public/assets/editor.webp" /&gt; 
&lt;h2&gt;Visualize JSON into interactive graphs&lt;/h2&gt; 
&lt;p&gt;JSON Crack is a tool for visualizing JSON data in a structured, interactive graphs, making it easier to explore, format, and validate JSON. It offers features like converting JSON to other formats (CSV, YAML), generating JSON Schema, executing queries, and exporting visualizations as images. Designed for both readability and usability.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Visualizer&lt;/strong&gt;: Instantly convert JSON, YAML, CSV, XML, and TOML into interactive graphs or trees in dark or light mode.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Convert&lt;/strong&gt;: Seamlessly transform data formats, like JSON to CSV or XML to JSON, for easy sharing.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Format &amp;amp; Validate&lt;/strong&gt;: Beautify and validate JSON, YAML, and CSV for clear and accurate data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code Generation&lt;/strong&gt;: Generate TypeScript interfaces, Golang structs, and JSON Schema.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSON Schema&lt;/strong&gt;: Create JSON Schema, mock data, and validate various data formats.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Tools&lt;/strong&gt;: Decode JWT, randomize data, and run jq or JSON path queries.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Export Image&lt;/strong&gt;: Download your visualization as PNG, JPEG, or SVG.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy&lt;/strong&gt;: All data processing is local; nothing is stored on our servers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Recognition&lt;/h2&gt; 
&lt;a href="https://news.ycombinator.com/item?id=32626873"&gt; &lt;img style="width: 250px; height: 54px;" width="250" height="54" alt="Featured on Hacker News" src="https://hackernews-badge.vercel.app/api?id=32626873" /&gt; &lt;/a&gt; 
&lt;p&gt;&lt;a href="https://producthunt.com/posts/JSON-Crack?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-jsoncrack" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=332281&amp;amp;theme=light" alt="JSON Crack | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Built With&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nextjs.org/?ref=jsoncrack.com"&gt;Next.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reactjs.org/?ref=jsoncrack.com"&gt;React.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reaflow.dev/?ref=jsoncrack.com"&gt;Reaflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/suren-atoyan/monaco-react"&gt;Monaco Editor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Stay Up-to-Date&lt;/h2&gt; 
&lt;p&gt;JSON Crack officially launched as v1.0 on the 17th of February 2022 and we've come a long way so far. Watch &lt;strong&gt;releases&lt;/strong&gt; of this repository to be notified of future updates:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/AykutSarac/jsoncrack.com"&gt;&lt;img src="https://img.shields.io/github/stars/AykutSarac/jsoncrack.com" alt="Star at GitHub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- GETTING STARTED --&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;To get a local copy up and running, please follow these simple steps.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;Here is what you need to be able to run JSON Crack.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js (Version: &amp;gt;=18.x)&lt;/li&gt; 
 &lt;li&gt;Pnpm &lt;em&gt;(recommended)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Setup&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Clone the repo into a public GitHub repository (or fork &lt;a href="https://github.com/AykutSarac/jsoncrack.com/fork"&gt;https://github.com/AykutSarac/jsoncrack.com/fork&lt;/a&gt;). If you plan to distribute the code, read the &lt;a href="https://raw.githubusercontent.com/AykutSarac/jsoncrack.com/main/LICENSE.md"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; for additional details.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/AykutSarac/jsoncrack.com.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Go to the project folder&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;cd jsoncrack.com
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install packages&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;pnpm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the project&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;pnpm dev

# Running on http://localhost:3000/
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;🐳 A &lt;a href="https://raw.githubusercontent.com/AykutSarac/jsoncrack.com/main/Dockerfile"&gt;&lt;code&gt;Dockerfile&lt;/code&gt;&lt;/a&gt; is provided in the root of the repository. If you want to run JSON Crack locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;# Build a Docker image with:
docker compose build

# Run locally with `docker-compose`
docker compose up

# Go to http://localhost:8888
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;The supported node limit can be changed by editing the &lt;code&gt;NEXT_PUBLIC_NODE_LIMIT&lt;/code&gt; value in the &lt;code&gt;.env&lt;/code&gt; file at the project root.&lt;/p&gt; 
&lt;!-- LICENSE --&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/AykutSarac/jsoncrack.com/main/LICENSE.md"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Stremio/stremio-web</title>
      <link>https://github.com/Stremio/stremio-web</link>
      <description>&lt;p&gt;Stremio - Freedom to Stream&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stremio - Freedom to Stream&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://github.com/stremio/stremio-web/workflows/Build/badge.svg?branch=development" alt="Build" /&gt; &lt;a href="https://stremio.github.io/stremio-web/development"&gt;&lt;img src="https://img.shields.io/website?label=Page&amp;amp;logo=github&amp;amp;up_message=online&amp;amp;down_message=offline&amp;amp;url=https%3A%2F%2Fstremio.github.io%2Fstremio-web%2F" alt="Github Page" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Stremio is a modern media center that's a one-stop solution for your video entertainment. You discover, watch and organize video content from easy to install addons.&lt;/p&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js 12 or higher&lt;/li&gt; 
 &lt;li&gt;npm 6 or higher&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Install dependencies&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start development server&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production build&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Board&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Stremio/stremio-web/development/screenshots/board.png" alt="Board" /&gt;&lt;/p&gt; 
&lt;h3&gt;Discover&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Stremio/stremio-web/development/screenshots/discover.png" alt="Discover" /&gt;&lt;/p&gt; 
&lt;h3&gt;Meta Details&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Stremio/stremio-web/development/screenshots/metadetails.png" alt="Meta Details" /&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Stremio is copyright 2017-2023 Smart code and available under GPLv2 license. See the &lt;a href="https://raw.githubusercontent.com/Stremio/stremio-web/development/LICENSE.md"&gt;LICENSE&lt;/a&gt; file in the project for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>simular-ai/Agent-S</title>
      <link>https://github.com/simular-ai/Agent-S</link>
      <description>&lt;p&gt;Agent S: an open agentic framework that uses computers like a human&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img src="https://raw.githubusercontent.com/simular-ai/Agent-S/main/images/agent_s.png" alt="Logo" style="vertical-align:middle" width="60" /&gt; Agent S: &lt;small&gt;Use Computer Like a Human&lt;/small&gt; &lt;/h1&gt; 
&lt;p align="center"&gt;&amp;nbsp; 🌐 &lt;a href="https://www.simular.ai/articles/agent-s3"&gt;[S3 blog]&lt;/a&gt;&amp;nbsp; 📄 &lt;a href="https://arxiv.org/abs/2510.02250"&gt;[S3 Paper]&lt;/a&gt;&amp;nbsp; 🎥 &lt;a href="https://www.youtube.com/watch?v=VHr0a3UBsh4"&gt;[S3 Video]&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;&amp;nbsp; 🌐 &lt;a href="https://www.simular.ai/articles/agent-s2-technical-review"&gt;[S2 blog]&lt;/a&gt;&amp;nbsp; 📄 &lt;a href="https://arxiv.org/abs/2504.00906"&gt;[S2 Paper (COLM 2025)]&lt;/a&gt;&amp;nbsp; 🎥 &lt;a href="https://www.youtube.com/watch?v=wUGVQl7c0eg"&gt;[S2 Video]&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;&amp;nbsp; 🌐 &lt;a href="https://www.simular.ai/agent-s"&gt;[S1 blog]&lt;/a&gt;&amp;nbsp; 📄 &lt;a href="https://arxiv.org/abs/2410.08164"&gt;[S1 Paper (ICLR 2025)]&lt;/a&gt;&amp;nbsp; 🎥 &lt;a href="https://www.youtube.com/watch?v=OBDE3Knte0g"&gt;[S1 Video]&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;&amp;nbsp; &lt;a href="https://trendshift.io/repositories/13151" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13151" alt="simular-ai%2FAgent-S | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://img.shields.io/badge/OS-Windows-blue?logo=windows&amp;amp;logoColor=white" alt="Windows" /&gt; &lt;img src="https://img.shields.io/badge/OS-macOS-black?logo=apple&amp;amp;logoColor=white" alt="macOS" /&gt; &lt;img src="https://img.shields.io/badge/OS-Linux-yellow?logo=linux&amp;amp;logoColor=black" alt="Linux" /&gt; &lt;a href="https://discord.gg/E2XfsK9fPV"&gt; &lt;img src="https://dcbadge.limes.pink/api/server/https://discord.gg/E2XfsK9fPV?style=flat" alt="Discord" /&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp; &lt;a href="https://pepy.tech/projects/gui-agents"&gt; &lt;img src="https://static.pepy.tech/badge/gui-agents" alt="PyPI Downloads" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;!-- Keep these links. Translations will automatically update with the README. --&gt; 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=de"&gt;Deutsch&lt;/a&gt; | 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=es"&gt;Español&lt;/a&gt; | 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=fr"&gt;français&lt;/a&gt; | 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=ja"&gt;日本語&lt;/a&gt; | 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=ko"&gt;한국어&lt;/a&gt; | 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=pt"&gt;Português&lt;/a&gt; | 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=ru"&gt;Русский&lt;/a&gt; | 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=zh"&gt;中文&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt;
  &amp;nbsp;&amp;nbsp; 
 &lt;p&gt;Skip the setup? Try Agent S in &lt;a href="https://cloud.simular.ai/"&gt;Simular Cloud&lt;/a&gt; &lt;/p&gt;
&lt;/div&gt; 
&lt;h2&gt;🥳 Updates&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/10/02&lt;/strong&gt;: Released the &lt;a href="https://arxiv.org/abs/2510.02250"&gt;Agent S3 paper&lt;/a&gt;, setting a new SOTA of &lt;strong&gt;69.9%&lt;/strong&gt; on OSWorld (approaching 72% human performance), with strong generalizability on WindowsAgentArena and AndroidWorld!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/08/01&lt;/strong&gt;: Agent S2.5 is released (gui-agents v0.2.5): simpler, better, and faster! New SOTA on &lt;a href="https://os-world.github.io"&gt;OSWorld-Verified&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/07/07&lt;/strong&gt;: The &lt;a href="https://arxiv.org/abs/2504.00906"&gt;Agent S2 paper&lt;/a&gt; is accepted to COLM 2025! See you in Montreal!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/04/27&lt;/strong&gt;: The Agent S paper won the Best Paper Award 🏆 at ICLR 2025 Agentic AI for Science Workshop!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/04/01&lt;/strong&gt;: Released the &lt;a href="https://arxiv.org/abs/2504.00906"&gt;Agent S2 paper&lt;/a&gt; with new SOTA results on OSWorld, WindowsAgentArena, and AndroidWorld!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/03/12&lt;/strong&gt;: Released Agent S2 along with v0.2.0 of &lt;a href="https://github.com/simular-ai/Agent-S"&gt;gui-agents&lt;/a&gt;, the new state-of-the-art for computer use agents (CUA), outperforming OpenAI's CUA/Operator and Anthropic's Claude 3.7 Sonnet Computer-Use!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/01/22&lt;/strong&gt;: The &lt;a href="https://arxiv.org/abs/2410.08164"&gt;Agent S paper&lt;/a&gt; is accepted to ICLR 2025!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/01/21&lt;/strong&gt;: Released v0.1.2 of &lt;a href="https://github.com/simular-ai/Agent-S"&gt;gui-agents&lt;/a&gt; library, with support for Linux and Windows!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2024/12/05&lt;/strong&gt;: Released v0.1.0 of &lt;a href="https://github.com/simular-ai/Agent-S"&gt;gui-agents&lt;/a&gt; library, allowing you to use Agent-S for Mac, OSWorld, and WindowsAgentArena with ease!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2024/10/10&lt;/strong&gt;: Released the &lt;a href="https://arxiv.org/abs/2410.08164"&gt;Agent S paper&lt;/a&gt; and codebase!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/#-introduction"&gt;💡 Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/#-current-results"&gt;🎯 Current Results&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/#%EF%B8%8F-installation--setup"&gt;🛠️ Installation &amp;amp; Setup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/#-usage"&gt;🚀 Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/#-acknowledgements"&gt;🤝 Acknowledgements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/#-citation"&gt;💬 Citation&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;💡 Introduction&lt;/h2&gt; 
&lt;p&gt;Welcome to &lt;strong&gt;Agent S&lt;/strong&gt;, an open-source framework designed to enable autonomous interaction with computers through Agent-Computer Interface. Our mission is to build intelligent GUI agents that can learn from past experiences and perform complex tasks autonomously on your computer.&lt;/p&gt; 
&lt;p&gt;Whether you're interested in AI, automation, or contributing to cutting-edge agent-based systems, we're excited to have you here!&lt;/p&gt; 
&lt;h2&gt;🎯 Current Results&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/simular-ai/Agent-S/main/images/s3_results.png" alt="Agent S3 Results" width="700" /&gt; &lt;/p&gt; 
&lt;p&gt;On OSWorld, Agent S3 alone reaches 62.6% in the 100-step setting, already exceeding the previous state of the art of 61.4% (Claude Sonnet 4.5). With the addition of Behavior Best-of-N, performance climbs even higher to 69.9%, bringing computer-use agents to within just a few points of human-level accuracy (72%).&lt;/p&gt; 
&lt;p&gt;Agent S3 also demonstrates strong zero-shot generalization. On WindowsAgentArena, accuracy rises from 50.2% using only Agent S3 to 56.6% by selecting from 3 rollouts. Similarly on AndroidWorld, performance improves from 68.1% to 71.6%&lt;/p&gt; 
&lt;h2&gt;🛠️ Installation &amp;amp; Setup&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Single Monitor&lt;/strong&gt;: Our agent is designed for single monitor screens&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: The agent runs Python code to control your computer - use with care&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Supported Platforms&lt;/strong&gt;: Linux, Mac, and Windows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;To install Agent S3 without cloning the repository, run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install gui-agents
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you would like to test Agent S3 while making changes, clone the repository and install using&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pip install -e .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Don't forget to also &lt;code&gt;brew install tesseract&lt;/code&gt;! Pytesseract requires this extra installation to work.&lt;/p&gt; 
&lt;h3&gt;API Configuration&lt;/h3&gt; 
&lt;h4&gt;Option 1: Environment Variables&lt;/h4&gt; 
&lt;p&gt;Add to your &lt;code&gt;.bashrc&lt;/code&gt; (Linux) or &lt;code&gt;.zshrc&lt;/code&gt; (MacOS):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export OPENAI_API_KEY=&amp;lt;YOUR_API_KEY&amp;gt;
export ANTHROPIC_API_KEY=&amp;lt;YOUR_ANTHROPIC_API_KEY&amp;gt;
export HF_TOKEN=&amp;lt;YOUR_HF_TOKEN&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Option 2: Python Script&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import os
os.environ["OPENAI_API_KEY"] = "&amp;lt;YOUR_API_KEY&amp;gt;"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Supported Models&lt;/h3&gt; 
&lt;p&gt;We support Azure OpenAI, Anthropic, Gemini, Open Router, and vLLM inference. See &lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/models.md"&gt;models.md&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Grounding Models (Required)&lt;/h3&gt; 
&lt;p&gt;For optimal performance, we recommend &lt;a href="https://huggingface.co/ByteDance-Seed/UI-TARS-1.5-7B"&gt;UI-TARS-1.5-7B&lt;/a&gt; hosted on Hugging Face Inference Endpoints or another provider. See &lt;a href="https://huggingface.co/learn/cookbook/en/enterprise_dedicated_endpoints"&gt;Hugging Face Inference Endpoints&lt;/a&gt; for setup instructions.&lt;/p&gt; 
&lt;h2&gt;🚀 Usage&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚡️ &lt;strong&gt;Recommended Setup:&lt;/strong&gt;&lt;br /&gt; For the best configuration, we recommend using &lt;strong&gt;OpenAI gpt-5-2025-08-07&lt;/strong&gt; as the main model, paired with &lt;strong&gt;UI-TARS-1.5-7B&lt;/strong&gt; for grounding.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;CLI&lt;/h3&gt; 
&lt;p&gt;Note, this is running Agent S3, our improved agent, without bBoN.&lt;/p&gt; 
&lt;p&gt;Run Agent S3 with the required parameters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;agent_s \
    --provider openai \
    --model gpt-5-2025-08-07 \
    --ground_provider huggingface \
    --ground_url http://localhost:8080 \
    --ground_model ui-tars-1.5-7b \
    --grounding_width 1920 \
    --grounding_height 1080
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Local Coding Environment (Optional)&lt;/h4&gt; 
&lt;p&gt;For tasks that require code execution (e.g., data processing, file manipulation, system automation), you can enable the local coding environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;agent_s \
    --provider openai \
    --model gpt-5-2025-08-07 \
    --ground_provider huggingface \
    --ground_url http://localhost:8080 \
    --ground_model ui-tars-1.5-7b \
    --grounding_width 1920 \
    --grounding_height 1080 \
    --enable_local_env
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;⚠️ &lt;strong&gt;WARNING&lt;/strong&gt;: The local coding environment executes arbitrary Python and Bash code locally on your machine. Only use this feature in trusted environments and with trusted inputs.&lt;/p&gt; 
&lt;h4&gt;Required Parameters&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--provider&lt;/code&gt;&lt;/strong&gt;: Main generation model provider (e.g., openai, anthropic, etc.) - Default: "openai"&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--model&lt;/code&gt;&lt;/strong&gt;: Main generation model name (e.g., gpt-5-2025-08-07) - Default: "gpt-5-2025-08-07"&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--ground_provider&lt;/code&gt;&lt;/strong&gt;: The provider for the grounding model - &lt;strong&gt;Required&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--ground_url&lt;/code&gt;&lt;/strong&gt;: The URL of the grounding model - &lt;strong&gt;Required&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--ground_model&lt;/code&gt;&lt;/strong&gt;: The model name for the grounding model - &lt;strong&gt;Required&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--grounding_width&lt;/code&gt;&lt;/strong&gt;: Width of the output coordinate resolution from the grounding model - &lt;strong&gt;Required&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--grounding_height&lt;/code&gt;&lt;/strong&gt;: Height of the output coordinate resolution from the grounding model - &lt;strong&gt;Required&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Optional Parameters&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--model_temperature&lt;/code&gt;&lt;/strong&gt;: The temperature to fix all model calls to (necessary to set to 1.0 for models like o3 but can be left blank for other models)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Grounding Model Dimensions&lt;/h4&gt; 
&lt;p&gt;The grounding width and height should match the output coordinate resolution of your grounding model:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;UI-TARS-1.5-7B&lt;/strong&gt;: Use &lt;code&gt;--grounding_width 1920 --grounding_height 1080&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UI-TARS-72B&lt;/strong&gt;: Use &lt;code&gt;--grounding_width 1000 --grounding_height 1000&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Optional Parameters&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--model_url&lt;/code&gt;&lt;/strong&gt;: Custom API URL for main generation model - Default: ""&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--model_api_key&lt;/code&gt;&lt;/strong&gt;: API key for main generation model - Default: ""&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--ground_api_key&lt;/code&gt;&lt;/strong&gt;: API key for grounding model endpoint - Default: ""&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--max_trajectory_length&lt;/code&gt;&lt;/strong&gt;: Maximum number of image turns to keep in trajectory - Default: 8&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--enable_reflection&lt;/code&gt;&lt;/strong&gt;: Enable reflection agent to assist the worker agent - Default: True&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--enable_local_env&lt;/code&gt;&lt;/strong&gt;: Enable local coding environment for code execution (WARNING: Executes arbitrary code locally) - Default: False&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Local Coding Environment Details&lt;/h4&gt; 
&lt;p&gt;The local coding environment enables Agent S3 to execute Python and Bash code directly on your machine. This is particularly useful for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Data Processing&lt;/strong&gt;: Manipulating spreadsheets, CSV files, or databases&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File Operations&lt;/strong&gt;: Bulk file processing, content extraction, or file organization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;System Automation&lt;/strong&gt;: Configuration changes, system setup, or automation scripts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code Development&lt;/strong&gt;: Writing, editing, or executing code files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Text Processing&lt;/strong&gt;: Document manipulation, content editing, or formatting&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When enabled, the agent can use the &lt;code&gt;call_code_agent&lt;/code&gt; action to execute code blocks for tasks that can be completed through programming rather than GUI interaction.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt;: The same Python interpreter used to run Agent S3 (automatically detected)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bash&lt;/strong&gt;: Available at &lt;code&gt;/bin/bash&lt;/code&gt; (standard on macOS and Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;System Permissions&lt;/strong&gt;: The agent runs with the same permissions as the user executing it&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Security Considerations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The local environment executes arbitrary code with the same permissions as the user running the agent&lt;/li&gt; 
 &lt;li&gt;Only enable this feature in trusted environments&lt;/li&gt; 
 &lt;li&gt;Be cautious when the agent generates code for system-level operations&lt;/li&gt; 
 &lt;li&gt;Consider running in a sandboxed environment for untrusted tasks&lt;/li&gt; 
 &lt;li&gt;Bash scripts are executed with a 30-second timeout to prevent hanging processes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;code&gt;gui_agents&lt;/code&gt; SDK&lt;/h3&gt; 
&lt;p&gt;First, we import the necessary modules. &lt;code&gt;AgentS3&lt;/code&gt; is the main agent class for Agent S3. &lt;code&gt;OSWorldACI&lt;/code&gt; is our grounding agent that translates agent actions into executable python code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import pyautogui
import io
from gui_agents.s3.agents.agent_s import AgentS3
from gui_agents.s3.agents.grounding import OSWorldACI
from gui_agents.s3.utils.local_env import LocalEnv  # Optional: for local coding environment

# Load in your API keys.
from dotenv import load_dotenv
load_dotenv()

current_platform = "linux"  # "darwin", "windows"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, we define our engine parameters. &lt;code&gt;engine_params&lt;/code&gt; is used for the main agent, and &lt;code&gt;engine_params_for_grounding&lt;/code&gt; is for grounding. For &lt;code&gt;engine_params_for_grounding&lt;/code&gt;, we support custom endpoints like HuggingFace TGI, vLLM, and Open Router.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;engine_params = {
  "engine_type": provider,
  "model": model,
  "base_url": model_url,           # Optional
  "api_key": model_api_key,        # Optional
  "temperature": model_temperature # Optional
}

# Load the grounding engine from a custom endpoint
ground_provider = "&amp;lt;your_ground_provider&amp;gt;"
ground_url = "&amp;lt;your_ground_url&amp;gt;"
ground_model = "&amp;lt;your_ground_model&amp;gt;"
ground_api_key = "&amp;lt;your_ground_api_key&amp;gt;"

# Set grounding dimensions based on your model's output coordinate resolution
# UI-TARS-1.5-7B: grounding_width=1920, grounding_height=1080
# UI-TARS-72B: grounding_width=1000, grounding_height=1000
grounding_width = 1920  # Width of output coordinate resolution
grounding_height = 1080  # Height of output coordinate resolution

engine_params_for_grounding = {
  "engine_type": ground_provider,
  "model": ground_model,
  "base_url": ground_url,
  "api_key": ground_api_key,  # Optional
  "grounding_width": grounding_width,
  "grounding_height": grounding_height,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, we define our grounding agent and Agent S3.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# Optional: Enable local coding environment
enable_local_env = False  # Set to True to enable local code execution
local_env = LocalEnv() if enable_local_env else None

grounding_agent = OSWorldACI(
    env=local_env,  # Pass local_env for code execution capability
    platform=current_platform,
    engine_params_for_generation=engine_params,
    engine_params_for_grounding=engine_params_for_grounding,
    width=1920,  # Optional: screen width
    height=1080  # Optional: screen height
)

agent = AgentS3(
    engine_params,
    grounding_agent,
    platform=current_platform,
    max_trajectory_length=8,  # Optional: maximum image turns to keep
    enable_reflection=True     # Optional: enable reflection agent
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, let's query the agent!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# Get screenshot.
screenshot = pyautogui.screenshot()
buffered = io.BytesIO() 
screenshot.save(buffered, format="PNG")
screenshot_bytes = buffered.getvalue()

obs = {
  "screenshot": screenshot_bytes,
}

instruction = "Close VS Code"
info, action = agent.predict(instruction=instruction, observation=obs)

exec(action[0])
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Refer to &lt;code&gt;gui_agents/s3/cli_app.py&lt;/code&gt; for more details on how the inference loop works.&lt;/p&gt; 
&lt;h3&gt;OSWorld&lt;/h3&gt; 
&lt;p&gt;To deploy Agent S3 in OSWorld, follow the &lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/osworld_setup/s3/OSWorld.md"&gt;OSWorld Deployment instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💬 Citations&lt;/h2&gt; 
&lt;p&gt;If you find this codebase useful, please cite:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@misc{Agent-S3,
      title={The Unreasonable Effectiveness of Scaling Agents for Computer Use}, 
      author={Gonzalo Gonzalez-Pumariega and Vincent Tu and Chih-Lun Lee and Jiachen Yang and Ang Li and Xin Eric Wang},
      year={2025},
      eprint={2510.02250},
      archivePrefix={arXiv},
      primaryClass={cs.AI},
      url={https://arxiv.org/abs/2510.02250}, 
}

@misc{Agent-S2,
      title={Agent S2: A Compositional Generalist-Specialist Framework for Computer Use Agents}, 
      author={Saaket Agashe and Kyle Wong and Vincent Tu and Jiachen Yang and Ang Li and Xin Eric Wang},
      year={2025},
      eprint={2504.00906},
      archivePrefix={arXiv},
      primaryClass={cs.AI},
      url={https://arxiv.org/abs/2504.00906}, 
}

@inproceedings{Agent-S,
    title={{Agent S: An Open Agentic Framework that Uses Computers Like a Human}},
    author={Saaket Agashe and Jiuzhou Han and Shuyu Gan and Jiachen Yang and Ang Li and Xin Eric Wang},
    booktitle={International Conference on Learning Representations (ICLR)},
    year={2025},
    url={https://arxiv.org/abs/2410.08164}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#simular-ai/Agent-S&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=simular-ai/Agent-S&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tigerbeetle/tigerbeetle</title>
      <link>https://github.com/tigerbeetle/tigerbeetle</link>
      <description>&lt;p&gt;The financial transactions database designed for mission critical safety and performance.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tigerbeetle&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;TigerBeetle is the financial transactions database designed for mission critical safety and performance to power the next 30 years of &lt;a href="https://docs.tigerbeetle.com/concepts/oltp"&gt;OLTP&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.tigerbeetle.com"&gt;https://docs.tigerbeetle.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=sC1B3d9C_sI"&gt;The Primeagen&lt;/a&gt; video introduction to our design decisions regarding performance, safety, and debit/credit primitives.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/redesign-oltp/"&gt;Redesigning OLTP for a New Order of Magnitude (QCon SF)&lt;/a&gt; talk with a deeper dive into TigerBeetle’s local storage engine and global consensus protocol.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/tigerbeetle/tigerbeetle/main/docs/TIGER_STYLE.md"&gt;TIGER_STYLE.md&lt;/a&gt;, the engineering methodology behind TigerBeetle.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://slack.tigerbeetle.com/join"&gt;Slack&lt;/a&gt;, say hello!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Start&lt;/h2&gt; 
&lt;p&gt;Run a single-replica cluster on Linux (or &lt;a href="https://docs.tigerbeetle.com/start/"&gt;other platforms&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ curl -Lo tigerbeetle.zip https://linux.tigerbeetle.com &amp;amp;&amp;amp; unzip tigerbeetle.zip
$ ./tigerbeetle version
$ ./tigerbeetle format --cluster=0 --replica=0 --replica-count=1 --development 0_0.tigerbeetle
$ ./tigerbeetle start --addresses=3000 --development 0_0.tigerbeetle
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Connect to the cluster and make a transfer:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ ./tigerbeetle repl --cluster=0 --addresses=3000
&amp;gt; create_accounts id=1 code=10 ledger=700,
                  id=2 code=10 ledger=700;
&amp;gt; create_transfers id=1 debit_account_id=1 credit_account_id=2 amount=10 ledger=700 code=10;
&amp;gt; lookup_accounts id=1, id=2;
{
  "id": "1",
  "user_data": "0",
  "ledger": "700",
  "code": "10",
  "flags": "",
  "debits_pending": "0",
  "debits_posted": "10",
  "credits_pending": "0",
  "credits_posted": "0"
}
{
  "id": "2",
  "user_data": "0",
  "ledger": "700",
  "code": "10",
  "flags": "",
  "debits_pending": "0",
  "debits_posted": "0",
  "credits_pending": "0",
  "credits_posted": "10"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Want to learn more? See &lt;a href="https://docs.tigerbeetle.com"&gt;https://docs.tigerbeetle.com&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kestra-io/kestra</title>
      <link>https://github.com/kestra-io/kestra</link>
      <description>&lt;p&gt;Orchestrate everything - from scripts to data, infra, AI, and business - as code, with UI and AI Copilot. Simple. Fast. Scalable.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.kestra.io"&gt; &lt;img src="https://kestra.io/banner.png" alt="Kestra workflow orchestrator" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align="center" style="border-bottom: none"&gt; Event-Driven Declarative Orchestration Platform &lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/kestra-io/kestra/releases"&gt;&lt;img src="https://img.shields.io/github/tag-pre/kestra-io/kestra.svg?color=blueviolet" alt="Last Version" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/kestra-io/kestra/raw/develop/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/kestra-io/kestra?color=blueviolet" alt="License" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/kestra-io/kestra/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/kestra-io/kestra?color=blueviolet&amp;amp;logo=github" alt="Github star" /&gt;&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;a href="https://kestra.io"&gt;&lt;img src="https://img.shields.io/badge/Website-kestra.io-192A4E?color=blueviolet" alt="Kestra infinitely scalable orchestration and scheduling platform" /&gt;&lt;/a&gt; 
 &lt;a href="https://kestra.io/slack"&gt;&lt;img src="https://img.shields.io/badge/Slack-Join%20Community-blueviolet?logo=slack" alt="Slack" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://twitter.com/kestra_io" style="margin: 0 10px;"&gt; &lt;img height="25" src="https://kestra.io/twitter.svg?sanitize=true" alt="twitter" width="35" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/kestra/" style="margin: 0 10px;"&gt; &lt;img height="25" src="https://kestra.io/linkedin.svg?sanitize=true" alt="linkedin" width="35" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/@kestra-io" style="margin: 0 10px;"&gt; &lt;img height="25" src="https://kestra.io/youtube.svg?sanitize=true" alt="youtube" width="35" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/2714" target="_blank"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/2714" alt="kestra-io%2Fkestra | Trendshift" width="250" height="55" /&gt; &lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/kestra?embed=true&amp;amp;utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-kestra" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=612077&amp;amp;theme=light&amp;amp;period=daily&amp;amp;t=1740737506162" alt="Kestra - All-in-one automation &amp;amp; orchestration platform | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://go.kestra.io/video/product-overview" target="_blank"&gt; &lt;img src="https://kestra.io/startvideo.png" alt="Get started in 3 minutes with Kestra" width="640px" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center" style="color:grey;"&gt;&lt;i&gt;Click on the image to learn how to get started with Kestra in 3 minutes.&lt;/i&gt;&lt;/p&gt; 
&lt;h2&gt;🌟 What is Kestra?&lt;/h2&gt; 
&lt;p&gt;Kestra is an open-source, event-driven orchestration platform that makes both &lt;strong&gt;scheduled&lt;/strong&gt; and &lt;strong&gt;event-driven&lt;/strong&gt; workflows easy. By bringing &lt;strong&gt;Infrastructure as Code&lt;/strong&gt; best practices to data, process, and microservice orchestration, you can build reliable &lt;a href="https://kestra.io/docs/getting-started"&gt;workflows&lt;/a&gt; directly from the UI in just a few lines of YAML.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Everything as Code and from the UI:&lt;/strong&gt; keep &lt;strong&gt;workflows as code&lt;/strong&gt; with a &lt;strong&gt;Git Version Control&lt;/strong&gt; integration, even when building them from the UI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Event-Driven &amp;amp; Scheduled Workflows:&lt;/strong&gt; automate both &lt;strong&gt;scheduled&lt;/strong&gt; and &lt;strong&gt;real-time&lt;/strong&gt; event-driven workflows via a simple &lt;code&gt;trigger&lt;/code&gt; definition.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative YAML Interface:&lt;/strong&gt; define workflows using a simple configuration in the &lt;strong&gt;built-in code editor&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rich Plugin Ecosystem:&lt;/strong&gt; hundreds of plugins built in to extract data from any database, cloud storage, or API, and &lt;strong&gt;run scripts in any language&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Intuitive UI &amp;amp; Code Editor:&lt;/strong&gt; build and visualize workflows directly from the UI with syntax highlighting, auto-completion and real-time syntax validation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable:&lt;/strong&gt; designed to handle millions of workflows, with high availability and fault tolerance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Version Control Friendly:&lt;/strong&gt; write your workflows from the built-in code Editor and push them to your preferred Git branch directly from Kestra, enabling best practices with CI/CD pipelines and version control systems.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Structure &amp;amp; Resilience&lt;/strong&gt;: tame chaos and bring resilience to your workflows with &lt;strong&gt;namespaces&lt;/strong&gt;, &lt;strong&gt;labels&lt;/strong&gt;, &lt;strong&gt;subflows&lt;/strong&gt;, &lt;strong&gt;retries&lt;/strong&gt;, &lt;strong&gt;timeout&lt;/strong&gt;, &lt;strong&gt;error handling&lt;/strong&gt;, &lt;strong&gt;inputs&lt;/strong&gt;, &lt;strong&gt;outputs&lt;/strong&gt; that generate artifacts in the UI, &lt;strong&gt;variables&lt;/strong&gt;, &lt;strong&gt;conditional branching&lt;/strong&gt;, &lt;strong&gt;advanced scheduling&lt;/strong&gt;, &lt;strong&gt;event triggers&lt;/strong&gt;, &lt;strong&gt;backfills&lt;/strong&gt;, &lt;strong&gt;dynamic tasks&lt;/strong&gt;, &lt;strong&gt;sequential and parallel tasks&lt;/strong&gt;, and skip tasks or triggers when needed by setting the flag &lt;code&gt;disabled&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🧑‍💻 The YAML definition gets automatically adjusted any time you make changes to a workflow from the UI or via an API call. Therefore, the orchestration logic is &lt;strong&gt;always managed declaratively in code&lt;/strong&gt;, even if you modify your workflows in other ways (UI, CI/CD, Terraform, API calls).&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://kestra.io/adding-tasks.gif" alt="Adding new tasks in the UI" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;h3&gt;Get Started Locally in 5 Minutes&lt;/h3&gt; 
&lt;h4&gt;Launch Kestra in Docker&lt;/h4&gt; 
&lt;p&gt;Make sure that Docker is running. Then, start Kestra in a single command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root \
  -v /var/run/docker.sock:/var/run/docker.sock \
  -v /tmp:/tmp kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows and use PowerShell:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root `
    -v "/var/run/docker.sock:/var/run/docker.sock" `
    -v "C:/Temp:/tmp" kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows and use Command Prompt (CMD):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cmd"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root ^
    -v "/var/run/docker.sock:/var/run/docker.sock" ^
    -v "C:/Temp:/tmp" kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows and use WSL (Linux-based environment in Windows):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root \
    -v "/var/run/docker.sock:/var/run/docker.sock" \
    -v "C:/Temp:/tmp" kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check our &lt;a href="https://kestra.io/docs/installation"&gt;Installation Guide&lt;/a&gt; for other deployment options (Docker Compose, Podman, Kubernetes, AWS, GCP, Azure, and more).&lt;/p&gt; 
&lt;p&gt;Access the Kestra UI at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt; and start building your first flow!&lt;/p&gt; 
&lt;h4&gt;Your First Hello World Flow&lt;/h4&gt; 
&lt;p&gt;Create a new flow with the following content:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;id: hello_world
namespace: dev

tasks:
  - id: say_hello
    type: io.kestra.plugin.core.log.Log
    message: "Hello, World!"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the flow and see the output in the UI!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🧩 Plugin Ecosystem&lt;/h2&gt; 
&lt;p&gt;Kestra's functionality is extended through a rich &lt;a href="https://kestra.io/plugins"&gt;ecosystem of plugins&lt;/a&gt; that empower you to run tasks anywhere and code in any language, including Python, Node.js, R, Go, Shell, and more. Here's how Kestra plugins enhance your workflows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run Anywhere:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Local or Remote Execution:&lt;/strong&gt; Execute tasks on your local machine, remote servers via SSH, or scale out to serverless containers using &lt;a href="https://kestra.io/docs/task-runners"&gt;Task Runners&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Docker and Kubernetes Support:&lt;/strong&gt; Seamlessly run Docker containers within your workflows or launch Kubernetes jobs to handle compute-intensive workloads.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Code in Any Language:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Scripting Support:&lt;/strong&gt; Write scripts in your preferred programming language. Kestra supports Python, Node.js, R, Go, Shell, and others, allowing you to integrate existing codebases and deployment patterns.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Flexible Automation:&lt;/strong&gt; Execute shell commands, run SQL queries against various databases, and make HTTP requests to interact with APIs.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Event-Driven and Real-Time Processing:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Real-Time Triggers:&lt;/strong&gt; React to events from external systems in real-time, such as file arrivals, new messages in message buses (Kafka, Redis, Pulsar, AMQP, MQTT, NATS, AWS SQS, Google Pub/Sub, Azure Event Hubs), and more.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Custom Events:&lt;/strong&gt; Define custom events to trigger flows based on specific conditions or external signals, enabling highly responsive workflows.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cloud Integrations:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;AWS, Google Cloud, Azure:&lt;/strong&gt; Integrate with a variety of cloud services to interact with storage solutions, messaging systems, compute resources, and more.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Big Data Processing:&lt;/strong&gt; Run big data processing tasks using tools like Apache Spark or interact with analytics platforms like Google BigQuery.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Monitoring and Notifications:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Stay Informed:&lt;/strong&gt; Send messages to Slack channels, email notifications, or trigger alerts in PagerDuty to keep your team updated on workflow statuses.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Kestra's plugin ecosystem is continually expanding, allowing you to tailor the platform to your specific needs. Whether you're orchestrating complex data pipelines, automating scripts across multiple environments, or integrating with cloud services, there's likely a plugin to assist. And if not, you can always &lt;a href="https://kestra.io/docs/plugin-developer-guide/"&gt;build your own plugins&lt;/a&gt; to extend Kestra's capabilities.&lt;/p&gt; 
&lt;p&gt;🧑‍💻 &lt;strong&gt;Note:&lt;/strong&gt; This is just a glimpse of what Kestra plugins can do. Explore the full list on our &lt;a href="https://kestra.io/plugins"&gt;Plugins Page&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📚 Key Concepts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Flows:&lt;/strong&gt; the core unit in Kestra, representing a workflow composed of tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tasks:&lt;/strong&gt; individual units of work, such as running a script, moving data, or calling an API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Namespaces:&lt;/strong&gt; logical grouping of flows for organization and isolation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Triggers:&lt;/strong&gt; schedule or events that initiate the execution of flows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Inputs &amp;amp; Variables:&lt;/strong&gt; parameters and dynamic data passed into flows and tasks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎨 Build Workflows Visually&lt;/h2&gt; 
&lt;p&gt;Kestra provides an intuitive UI that allows you to interactively build and visualize your workflows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Drag-and-Drop Interface:&lt;/strong&gt; add and rearrange tasks from the Topology Editor.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-Time Validation:&lt;/strong&gt; instant feedback on your workflow's syntax and structure to catch errors early.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auto-Completion:&lt;/strong&gt; smart suggestions as you type to write flow code quickly and without syntax errors.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Live Topology View:&lt;/strong&gt; see your workflow as a Directed Acyclic Graph (DAG) that updates in real-time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔧 Extensible and Developer-Friendly&lt;/h2&gt; 
&lt;h3&gt;Plugin Development&lt;/h3&gt; 
&lt;p&gt;Create custom plugins to extend Kestra's capabilities. Check out our &lt;a href="https://kestra.io/docs/plugin-developer-guide/"&gt;Plugin Developer Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h3&gt;Infrastructure as Code&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Version Control:&lt;/strong&gt; store your flows in Git repositories.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CI/CD Integration:&lt;/strong&gt; automate deployment of flows using CI/CD pipelines.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terraform Provider:&lt;/strong&gt; manage Kestra resources with the &lt;a href="https://kestra.io/docs/terraform/"&gt;official Terraform provider&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🌐 Join the Community&lt;/h2&gt; 
&lt;p&gt;Stay connected and get support:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Slack:&lt;/strong&gt; Join our &lt;a href="https://kestra.io/slack"&gt;Slack community&lt;/a&gt; to ask questions and share ideas.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LinkedIn:&lt;/strong&gt; Follow us on &lt;a href="https://www.linkedin.com/company/kestra/"&gt;LinkedIn&lt;/a&gt; — next to Slack and GitHub, this is our main channel to share updates and product announcements.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;YouTube:&lt;/strong&gt; Subscribe to our &lt;a href="https://www.youtube.com/@kestra-io"&gt;YouTube channel&lt;/a&gt; for educational video content. We publish new videos every week!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;X:&lt;/strong&gt; Follow us on &lt;a href="https://x.com/kestra_io"&gt;X&lt;/a&gt; if you're still active there.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions of all kinds!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Report Issues:&lt;/strong&gt; Found a bug or have a feature request? Open an &lt;a href="https://github.com/kestra-io/kestra/issues"&gt;issue on GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute Code:&lt;/strong&gt; Check out our &lt;a href="https://kestra.io/docs/getting-started/contributing"&gt;Contributor Guide&lt;/a&gt; for initial guidelines, and explore our &lt;a href="https://go.kestra.io/contributing"&gt;good first issues&lt;/a&gt; for beginner-friendly tasks to tackle first.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Develop Plugins:&lt;/strong&gt; Build and share plugins using our &lt;a href="https://kestra.io/docs/plugin-developer-guide/"&gt;Plugin Developer Guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute to our Docs:&lt;/strong&gt; Contribute edits or updates to keep our &lt;a href="https://github.com/kestra-io/docs"&gt;documentation&lt;/a&gt; top-notch.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;Kestra is licensed under the Apache 2.0 License © &lt;a href="https://kestra.io"&gt;Kestra Technologies&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⭐️ Stay Updated&lt;/h2&gt; 
&lt;p&gt;Give our repository a star to stay informed about the latest features and updates!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/kestra-io/kestra"&gt;&lt;img src="https://kestra.io/star.gif" alt="Star the Repo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Thank you for considering Kestra for your workflow orchestration needs. We can't wait to see what you'll build!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MudBlazor/MudBlazor</title>
      <link>https://github.com/MudBlazor/MudBlazor</link>
      <description>&lt;p&gt;Blazor Component Library based on Material Design principles with an emphasis on ease of use and extensibility&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="content/MudBlazor-GitHub-NoBg-Dark.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="content/MudBlazor-GitHub-NoBg.png" /&gt; 
  &lt;img alt="MudBlazor" src="https://raw.githubusercontent.com/MudBlazor/MudBlazor/dev/content/MudBlazor-GitHub-NoBg.png" /&gt; 
 &lt;/picture&gt; &lt;/h1&gt; 
&lt;h1&gt;Material Design components for Blazor&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/mudblazor/mudblazor/build-test-mudblazor.yml?branch=dev&amp;amp;logo=github&amp;amp;style=flat-square" alt="GitHub Workflow Status" /&gt; &lt;a href="https://app.codecov.io/github/MudBlazor/MudBlazor"&gt;&lt;img src="https://img.shields.io/codecov/c/github/MudBlazor/MudBlazor" alt="Codecov" /&gt;&lt;/a&gt; &lt;a href="https://sonarcloud.io/summary/overall?id=MudBlazor_MudBlazor"&gt;&lt;img src="https://sonarcloud.io/api/project_badges/measure?project=MudBlazor_MudBlazor&amp;amp;metric=alert_status" alt="Quality Gate Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mudblazor/MudBlazor/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/mudblazor/mudblazor?color=594ae2&amp;amp;logo=github&amp;amp;style=flat-square" alt="GitHub" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mudblazor/MudBlazor/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/mudblazor/mudblazor?color=594ae2&amp;amp;style=flat-square&amp;amp;logo=github" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mudblazor/mudblazor"&gt;&lt;img src="https://img.shields.io/github/last-commit/mudblazor/mudblazor?color=594ae2&amp;amp;style=flat-square&amp;amp;logo=github" alt="GitHub last commit" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mudblazor/mudblazor/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/mudblazor/mudblazor?color=594ae2&amp;amp;style=flat-square&amp;amp;logo=github" alt="Contributors" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mudblazor/mudblazor/discussions"&gt;&lt;img src="https://img.shields.io/github/discussions/mudblazor/mudblazor?color=594ae2&amp;amp;logo=github&amp;amp;style=flat-square" alt="Discussions" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/mudblazor"&gt;&lt;img src="https://img.shields.io/discord/786656789310865418?color=%237289da&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=%237289da&amp;amp;style=flat-square" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/MudBlazor"&gt;&lt;img src="https://img.shields.io/twitter/follow/MudBlazor?color=1DA1F2&amp;amp;label=Twitter&amp;amp;logo=Twitter&amp;amp;style=flat-square" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://www.nuget.org/packages/MudBlazor/"&gt;&lt;img src="https://img.shields.io/nuget/v/MudBlazor?color=ff4081&amp;amp;label=nuget%20version&amp;amp;logo=nuget&amp;amp;style=flat-square" alt="NuGet version" /&gt;&lt;/a&gt; &lt;a href="https://www.nuget.org/packages/MudBlazor/"&gt;&lt;img src="https://img.shields.io/nuget/dt/MudBlazor?color=ff4081&amp;amp;label=nuget%20downloads&amp;amp;logo=nuget&amp;amp;style=flat-square" alt="NuGet downloads" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;MudBlazor is an ambitious Material Design component library for Blazor. Accelerate your web application development and build intuitive user interfaces, leveraging the full power of C# to adapt and extend this open-source framework.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🌐 &lt;a href="https://mudblazor.com"&gt;Documentation&lt;/a&gt; ⚡ &lt;a href="https://try.mudblazor.com/"&gt;Interactive Playground&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;💎 Why Choose MudBlazor?&lt;/h2&gt; 
&lt;p&gt;🎨 Beautiful Material Design components.&lt;br /&gt; 💻 Fully written in C# with minimal JavaScript.&lt;br /&gt; 📖 Rich documentation with extensive examples.&lt;br /&gt; 📦 No third-party dependencies for maximum flexibility.&lt;br /&gt; ✅ Extensive test coverage for stability.&lt;/p&gt; 
&lt;h2&gt;📊 Repo Stats&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/db53a44092e88fc34a4c0f37db12773b6787ec7e.svg?sanitize=true" alt="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;We have ready-to-go templates at the &lt;a href="https://github.com/MudBlazor/Templates"&gt;Templates&lt;/a&gt; repository, or follow the quick install guide below:&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;Install Package:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dotnet add package MudBlazor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add to &lt;code&gt;_Imports.razor&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-razor"&gt;@using MudBlazor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add to &lt;code&gt;MainLayout.razor&lt;/code&gt; or &lt;code&gt;App.razor&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-razor"&gt;&amp;lt;MudThemeProvider/&amp;gt;
&amp;lt;MudPopoverProvider/&amp;gt;
&amp;lt;MudDialogProvider/&amp;gt;
&amp;lt;MudSnackbarProvider/&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add to your HTML &lt;code&gt;head&lt;/code&gt; section (&lt;code&gt;index.html&lt;/code&gt;/&lt;code&gt;_Layout.cshtml&lt;/code&gt;/&lt;code&gt;_Host.cshtml&lt;/code&gt;/&lt;code&gt;App.razor&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-razor"&gt;&amp;lt;link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&amp;amp;display=swap" rel="stylesheet" /&amp;gt;
&amp;lt;link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add to the default Blazor script at the end of the &lt;code&gt;body&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-razor"&gt;&amp;lt;script src="_content/MudBlazor/MudBlazor.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add to the relevant sections of &lt;code&gt;Program.cs&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-c#"&gt;using MudBlazor.Services;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-c#"&gt;builder.Services.AddMudServices();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Example Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-razor"&gt;&amp;lt;MudText Typo="Typo.h6"&amp;gt;
    MudBlazor is @Text
&amp;lt;/MudText&amp;gt;

&amp;lt;MudButton Variant="Variant.Filled" 
           Color="Color.Primary" 
           OnClick="ButtonOnClick"&amp;gt;
    @ButtonText
&amp;lt;/MudButton&amp;gt;

@code {
    string Text { get; set; } = "????";
    string ButtonText { get; set; } = "Click Me";
    int ClickCount { get; set; }

    void ButtonOnClick()
    {
        ClickCount += 1;
        Text = $"Awesome x {ClickCount}";
        ButtonText = "Click Me Again";
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details, see the &lt;a href="https://mudblazor.com/getting-started/installation"&gt;complete installation guide&lt;/a&gt; on our website.&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions from the community are what makes MudBlazor successful.&lt;/p&gt; 
&lt;p&gt;If you're comfortable with C#, Blazor, JavaScript, or CSS, we'd love your help!&lt;br /&gt; Whether it's fixing bugs, adding features, or improving documentation, every contribution counts.&lt;/p&gt; 
&lt;p&gt;We aim to review and merge non-breaking pull requests quickly.&lt;br /&gt; For larger features or changes, feel free to chat with us &lt;a href="https://discord.gg/mudblazor"&gt;on Discord&lt;/a&gt; to get feedback before diving in.&lt;/p&gt; 
&lt;p&gt;📚 Check out our &lt;a href="https://raw.githubusercontent.com/MudBlazor/MudBlazor/dev/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; to get started and learn more about how the project works.&lt;br /&gt; ✅ If a PR fixes something you reported, &lt;a href="https://raw.githubusercontent.com/MudBlazor/MudBlazor/dev/TESTING.md"&gt;locally test a preview version&lt;/a&gt; to ensure your app works as expected.&lt;/p&gt; 
&lt;h2&gt;⚙️ Version Support&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;MudBlazor&lt;/th&gt; 
   &lt;th align="center"&gt;.NET&lt;/th&gt; 
   &lt;th align="center"&gt;Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;5.x.x&lt;/td&gt; 
   &lt;td align="center"&gt;.NET 5&lt;/td&gt; 
   &lt;td align="center"&gt;Ended (Jan 2022)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;6.x.x&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://dotnet.microsoft.com/download/dotnet/6.0"&gt;.NET 6&lt;/a&gt;, &lt;a href="https://dotnet.microsoft.com/download/dotnet/7.0"&gt;.NET 7&lt;/a&gt;, &lt;a href="https://dotnet.microsoft.com/download/dotnet/8.0"&gt;.NET 8&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Ended (Jan 2025)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;7.x.x&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://dotnet.microsoft.com/download/dotnet/7.0"&gt;.NET 7&lt;/a&gt;, &lt;a href="https://dotnet.microsoft.com/download/dotnet/8.0"&gt;.NET 8&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Limited Support&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;8.x.x&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://dotnet.microsoft.com/download/dotnet/8.0"&gt;.NET 8&lt;/a&gt;, &lt;a href="https://dotnet.microsoft.com/download/dotnet/9.0"&gt;.NET 9&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt; Full Support&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Upgrading? Check our &lt;a href="https://github.com/MudBlazor/MudBlazor/raw/dev/MIGRATION.md"&gt;Migration Guide&lt;/a&gt; for help with breaking changes.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Static rendering is not supported - &lt;a href="https://learn.microsoft.com/aspnet/core/blazor/components/render-modes"&gt;Learn more&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;Older browsers may not be supported. Use a modern, up-to-date browser - &lt;a href="https://learn.microsoft.com/aspnet/core/blazor/supported-platforms"&gt;Blazor supported platforms&lt;/a&gt;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>google/tunix</title>
      <link>https://github.com/google/tunix</link>
      <description>&lt;p&gt;A JAX-native LLM Post-Training Library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tunix: A JAX-native LLM Post-Training Library&lt;/h1&gt; 
&lt;div align="left"&gt; 
 &lt;p&gt;&lt;a href="https://tunix.readthedocs.io/en/latest/index.html"&gt;&lt;img src="https://img.shields.io/badge/documentation-blue" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;Tunix(Tune-in-JAX)&lt;/strong&gt; is a JAX based library designed to streamline the post-training of Large Language Models. It provides efficient and scalable supports for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Supervised Fine-Tuning&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reinforcement Learning (RL)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Knowledge Distillation&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Tunix leverages the power of JAX for accelerated computation and seamless integration with JAX-based modeling framework &lt;a href="https://flax.readthedocs.io/en/latest/nnx_basics.html"&gt;Flax NNX&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Current Status: Early Development&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Tunix is in early development. We're actively working to expand its capabilities, usability and improve its performance. Stay tuned for upcoming updates and new features!&lt;/p&gt; 
&lt;h2&gt;Key Features &amp;amp; Highlights&lt;/h2&gt; 
&lt;p&gt;Tunix is still under development, here's a glimpse of the current features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Supervised Fine-Tuning:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Full Weights Fine-Tuning&lt;/li&gt; 
   &lt;li&gt;Parameter-Efficient Fine-Tuning (PEFT) with LoRA/Q-LoRA Layers&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reinforcement Learning (RL):&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Proximal Policy Optimization (PPO)&lt;/li&gt; 
   &lt;li&gt;Group Relative Policy Optimization (GRPO)&lt;/li&gt; 
   &lt;li&gt;Token-level Group Sequence Policy Optimization (GSPO-token)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Preference Fine-Tuning:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Preference alignments with Direct Preference Optimization (DPO)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Knowledge Distillation:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Logit Strategy: A classic approach where the student learns to match the teacher's output probability distribution.&lt;/li&gt; 
   &lt;li&gt;Attention Transfer &amp;amp; Projection Strategies: Methods to align the attention mechanisms between the student and teacher models.&lt;/li&gt; 
   &lt;li&gt;Feature Pooling &amp;amp; Projection Strategies: General techniques for matching intermediate feature representations, even between models of different architectures.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modularity:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Components are designed to be reusable and composable&lt;/li&gt; 
   &lt;li&gt;Easy to customize and extend&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Efficiency:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Native support of common model sharding strategies such as DP, FSDP and TP&lt;/li&gt; 
   &lt;li&gt;Designed for distributed training on accelerators (TPU)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Upcoming&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Agentic RL Training:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Async Rollout&lt;/li&gt; 
   &lt;li&gt;Multi-turn &amp;amp; multi-step support&lt;/li&gt; 
   &lt;li&gt;Tool usage&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Algorithms:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Addtional state-of-the-art RL and distillation algorithms&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalability:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Multi-host distributed training&lt;/li&gt; 
   &lt;li&gt;Optimized rollout with vLLM&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User Guides:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;More advanced RL recipe&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;You can install Tunix in several ways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;From PyPI (recommended):&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pip install "tunix[prod]"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Directly from GitHub (latest main branch)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pip install git+https://github.com/google/tunix
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;From source (editable install) If you plan to modify the codebase and run it in development mode:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/google/tunix.git
cd tunix
pip install -e ".[dev]"

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;To get started, we have a bunch of detailed examples and tutorials.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/tunix/raw/main/examples/qlora_demo.ipynb"&gt;PEFT Gemma with QLoRA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/tunix/raw/main/examples/grpo_demo.ipynb"&gt;Training Gemma on grade school Math problems using GRPO&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/tunix/raw/main/examples/logit_distillation.ipynb"&gt;Logit Distillation using Gemma models&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To setup Jupyter notebook on single host GCP TPU VM, please refer to the &lt;a href="https://github.com/google/tunix/raw/main/scripts/setup_notebook_tpu_single_host.sh"&gt;setup script&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We plan to provide clear, concise documentation and more examples in the near future.&lt;/p&gt; 
&lt;h2&gt;Contributing and Feedbacks&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! As Tunix is in early development, the contribution process is still being formalized. A rough draft of the contribution process is present &lt;a href="https://github.com/google/tunix/raw/main/CONTRIBUTING.md"&gt;here&lt;/a&gt;. In the meantime, you can make feature requests, report issues and ask questions in our &lt;a href="https://github.com/google/tunix/discussions"&gt;Tunix GitHub discussion forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Collaborations and Partnership&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/lmgame-org/GRL/raw/tunix_integration_dev/README.md"&gt;GRL&lt;/a&gt; (Game Reinforcement Learning), developed by &lt;a href="https://hao-ai-lab.github.io/"&gt;Hao AI Lab&lt;/a&gt; from UCSD, is an open-source framework for post-training large language models through multi-turn RL on challenging games. In collaboration with Tunix, GRL integrates seamless TPU support—letting users quickly run scalable, reproducible RL experiments (like PPO rollouts on Qwen2.5-0.5B-Instruct) on TPU v4 meshes with &lt;a href="https://github.com/lmgame-org/GRL/raw/tunix_integration_dev/README.md#5-launch-the-quick-test-defaults-to-qwen2505b-supports-4-tpu-v4-with-mesh-22"&gt;minimal setup&lt;/a&gt;. This partnership empowers the community to push LLM capabilities further, combining Tunix’s optimized TPU runtime with GRL’s flexible game RL pipeline for cutting-edge research and easy reproducibility.&lt;/p&gt; 
&lt;h2&gt;Stay Tuned!&lt;/h2&gt; 
&lt;p&gt;Thank you for your interest in Tunix. We're working hard to bring you a powerful and efficient library for LLM post-training. Please follow our progress and check back for updates!&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Thank you to all our wonderful contributors!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/google/tunix/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=google/tunix" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>signalapp/libsignal</title>
      <link>https://github.com/signalapp/libsignal</link>
      <description>&lt;p&gt;Home to the Signal Protocol as well as other cryptographic primitives which make Signal possible.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Overview&lt;/h1&gt; 
&lt;p&gt;libsignal contains platform-agnostic APIs used by the official Signal clients and servers, exposed as a Java, Swift, or TypeScript library. The underlying implementations are written in Rust:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;libsignal-protocol: Implements the Signal protocol, including the &lt;a href="https://signal.org/docs/"&gt;Double Ratchet algorithm&lt;/a&gt;. A replacement for &lt;a href="https://github.com/signalapp/libsignal-protocol-java"&gt;libsignal-protocol-java&lt;/a&gt; and &lt;a href="https://github.com/signalapp/libsignal-metadata-java"&gt;libsignal-metadata-java&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;signal-crypto: Cryptographic primitives such as AES-GCM. We use &lt;a href="https://github.com/RustCrypto"&gt;RustCrypto&lt;/a&gt;'s where we can but sometimes have differing needs.&lt;/li&gt; 
 &lt;li&gt;device-transfer: Support logic for Signal's device-to-device transfer feature.&lt;/li&gt; 
 &lt;li&gt;attest: Functionality for remote attestation of &lt;a href="https://www.intel.com/content/www/us/en/architecture-and-technology/software-guard-extensions.html"&gt;SGX enclaves&lt;/a&gt; and server-side &lt;a href="https://en.wikipedia.org/wiki/Hardware_security_module"&gt;HSMs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;zkgroup: Functionality for &lt;a href="https://signal.org/blog/signal-private-group-system/"&gt;zero-knowledge groups&lt;/a&gt; and related features available in Signal.&lt;/li&gt; 
 &lt;li&gt;zkcredential: An abstraction for the sort of zero-knowledge credentials used by zkgroup, based on the paper "&lt;a href="https://eprint.iacr.org/2019/1416.pdf"&gt;The Signal Private Group System&lt;/a&gt;" by Chase, Perrin, and Zaverucha.&lt;/li&gt; 
 &lt;li&gt;poksho: Utilities for implementing zero-knowledge proofs (such as those used by zkgroup); stands for "proof-of-knowledge, stateful-hash-object".&lt;/li&gt; 
 &lt;li&gt;account-keys: Functionality for consistently using &lt;a href="https://signal.org/blog/signal-pins/"&gt;PINs&lt;/a&gt; as passwords in Signal's Secure Value Recovery system, as well as other account-wide key operations.&lt;/li&gt; 
 &lt;li&gt;usernames: Functionality for username generation, hashing, and proofs.&lt;/li&gt; 
 &lt;li&gt;media: Utilities for manipulating media.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This repository is used by the Signal client apps (&lt;a href="https://github.com/signalapp/Signal-Android"&gt;Android&lt;/a&gt;, &lt;a href="https://github.com/signalapp/Signal-iOS"&gt;iOS&lt;/a&gt;, and &lt;a href="https://github.com/signalapp/Signal-Desktop"&gt;Desktop&lt;/a&gt;) as well as server-side. Use outside of Signal is unsupported. In particular, the products of this repository are the Java, Swift, and TypeScript libraries that wrap the underlying Rust implementations. All APIs and implementations are subject to change without notice, as are the JNI, C, and Node add-on "bridge" layers. However, backwards-incompatible changes to the Java, Swift, TypeScript, and non-bridge Rust APIs will be reflected in the version number on a best-effort basis, including increases to the minimum supported tools versions.&lt;/p&gt; 
&lt;h1&gt;Building&lt;/h1&gt; 
&lt;h3&gt;Toolchain Installation&lt;/h3&gt; 
&lt;p&gt;To build anything in this repository you must have &lt;a href="https://rust-lang.org"&gt;Rust&lt;/a&gt; installed, as well as Clang, libclang, &lt;a href="https://cmake.org"&gt;CMake&lt;/a&gt;, Make, protoc, and git.&lt;/p&gt; 
&lt;h4&gt;Linux/Debian&lt;/h4&gt; 
&lt;p&gt;On a Debian-like system, you can get these extra dependencies through &lt;code&gt;apt&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ apt-get install clang libclang-dev cmake make protobuf-compiler git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;macOS&lt;/h4&gt; 
&lt;p&gt;On macOS, we have a best-effort maintained script to set up the Rust toolchain you can run by:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ bin/mac_setup.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Rust&lt;/h2&gt; 
&lt;h3&gt;First Build and Test&lt;/h3&gt; 
&lt;p&gt;The build currently uses a specific version of the Rust nightly compiler, which will be downloaded automatically by cargo. To build and test the basic protocol libraries:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cargo build
...
$ cargo test
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Additional Rust Tools&lt;/h3&gt; 
&lt;p&gt;The basic tools above should get you set up for most libsignal Rust development.&lt;/p&gt; 
&lt;p&gt;Eventually, you may find that you need some additional Rust tools like &lt;code&gt;cbindgen&lt;/code&gt; to modify the bridges to the client libraries or &lt;code&gt;taplo&lt;/code&gt; for code formatting.&lt;/p&gt; 
&lt;p&gt;You should always install any Rust tools you need that may affect the build from cargo rather than from your system package manager (e.g. &lt;code&gt;apt&lt;/code&gt; or &lt;code&gt;brew&lt;/code&gt;). Package managers sometimes contain outdated versions of these tools that can break the build with incompatibility issues (especially cbindgen).&lt;/p&gt; 
&lt;p&gt;To install the main Rust extra dependencies matching the versions we use, you can run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cargo +stable install cbindgen cargo-fuzz
$ cargo +stable install --version "$(cat ../acknowledgments/cargo-about-version)" --locked cargo-about
$ cargo +stable install --version "$(cat ../.taplo-cli-version)" --locked taplo-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Java/Android&lt;/h2&gt; 
&lt;h3&gt;Toolchain Setup / Configuration&lt;/h3&gt; 
&lt;p&gt;To build for Android you must install several additional packages including a JDK, the Android NDK/SDK, and add the Android targets to the Rust compiler, using&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;rustup target add armv7-linux-androideabi aarch64-linux-android i686-linux-android x86_64-linux-android&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Our officially supported JDK version for Android builds is JDK 17, so be sure to install e.g. OpenJDK 17, and then point JAVA_HOME to it.&lt;/p&gt; 
&lt;p&gt;You can easily do this on macOS via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;export JAVA_HOME=$(/usr/libexec/java_home -v 17)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On Linux, the way you do this varies by distribution. For Debian based distributions like Ubuntu, you can use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;sudo update-alternatives --config java
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We also check-in a &lt;code&gt;.tools_version&lt;/code&gt; file for use with runtime version managers.&lt;/p&gt; 
&lt;h3&gt;Building and Testing&lt;/h3&gt; 
&lt;p&gt;To build the Java/Android &lt;code&gt;jar&lt;/code&gt; and &lt;code&gt;aar&lt;/code&gt;, and run the tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cd java
$ ./gradlew test
$ ./gradlew build # if you need AAR outputs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can pass &lt;code&gt;-P debugLevelLogs&lt;/code&gt; to Gradle to build without filtering out debug- and verbose-level logs from Rust, and &lt;code&gt;-P jniTypeTagging&lt;/code&gt; to enable additional checks in the Rust JNI bridging code.&lt;/p&gt; 
&lt;p&gt;Alternately, a build system using Docker is available:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cd java
$ make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When exposing new APIs to Java, you will need to run &lt;code&gt;rust/bridge/jni/bin/gen_java_decl.py&lt;/code&gt; in addition to rebuilding. This requires installing the &lt;code&gt;cbindgen&lt;/code&gt; Rust tool, as detailed above.&lt;/p&gt; 
&lt;h3&gt;Maven Central&lt;/h3&gt; 
&lt;p&gt;Signal publishes Java packages on &lt;a href="https://central.sonatype.org"&gt;Maven Central&lt;/a&gt; for its own use, under the names org.signal:libsignal-server, org.signal:libsignal-client, and org.signal:libsignal-android. libsignal-client and libsignal-server contain native libraries for Debian-flavored x86_64 Linux as well as Windows (x86_64) and macOS (x86_64 and arm64). libsignal-android contains native libraries for armeabi-v7a, arm64-v8a, x86, and x86_64 Android.&lt;/p&gt; 
&lt;p&gt;When building for Android you need &lt;em&gt;both&lt;/em&gt; libsignal-android and libsignal-client, but the Windows and macOS libraries in libsignal-client won't automatically be excluded from your final app. You can explicitly exclude them using &lt;code&gt;packagingOptions&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;android {
  // ...
  packagingOptions {
    resources {
      excludes += setOf("libsignal_jni*.dylib", "signal_jni*.dll")
    }
  }
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can additionally exclude &lt;code&gt;libsignal_jni_testing.so&lt;/code&gt; if you do not plan to use any of the APIs intended for client testing.&lt;/p&gt; 
&lt;h2&gt;Swift&lt;/h2&gt; 
&lt;p&gt;To learn about the Swift build process see &lt;a href="https://raw.githubusercontent.com/signalapp/libsignal/main/swift/"&gt;&lt;code&gt;swift/README.md&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Node&lt;/h2&gt; 
&lt;p&gt;You'll need Node installed to build. If you have &lt;a href="https://github.com/nvm-sh/nvm"&gt;nvm&lt;/a&gt;, you can run &lt;code&gt;nvm use&lt;/code&gt; to select an appropriate version automatically.&lt;/p&gt; 
&lt;p&gt;We use &lt;code&gt;npm&lt;/code&gt; as our package manager, and a Python script to control building the Rust library, accessible as &lt;code&gt;npm run build&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ cd node
$ nvm use
$ npm install
$ npm run build
$ npm run tsc
$ npm run test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When testing changes locally, you can use &lt;code&gt;npm run build&lt;/code&gt; to do an incremental rebuild of the Rust library. Alternately, &lt;code&gt;npm run build-with-debug-level-logs&lt;/code&gt; will rebuild without filtering out debug- and verbose-level logs.&lt;/p&gt; 
&lt;p&gt;When exposing new APIs to Node, you will need to run &lt;code&gt;rust/bridge/node/bin/gen_ts_decl.py&lt;/code&gt; in addition to rebuilding.&lt;/p&gt; 
&lt;h3&gt;NPM&lt;/h3&gt; 
&lt;p&gt;Signal publishes the NPM package &lt;code&gt;@signalapp/libsignal-client&lt;/code&gt; for its own use, including native libraries for Windows, macOS, and Debian-flavored Linux. Both x64 and arm64 builds are included for all three platforms, but the arm64 builds for Windows and Linux are considered experimental, since there are no official builds of Signal for those architectures.&lt;/p&gt; 
&lt;h1&gt;Contributions&lt;/h1&gt; 
&lt;p&gt;Signal does accept external contributions to this project. However unless the change is simple and easily understood, for example fixing a bug or portability issue, adding a new test, or improving performance, first open an issue to discuss your intended change as not all changes can be accepted.&lt;/p&gt; 
&lt;p&gt;Contributions that will not be used directly by one of Signal's official client apps may still be considered, but only if they do not pose an undue maintenance burden or conflict with the goals of the project.&lt;/p&gt; 
&lt;p&gt;Signing a &lt;a href="https://signal.org/cla/"&gt;CLA (Contributor License Agreement)&lt;/a&gt; is required for all contributions.&lt;/p&gt; 
&lt;h2&gt;Code Formatting and Acknowledgments&lt;/h2&gt; 
&lt;p&gt;You can run the styler on the entire project by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;just format-all
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can run more extensive tests as well as linters and clippy by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;just check-pre-commit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When making a PR that adjusts dependencies, you'll need to regenerate our acknowledgments files. See &lt;a href="https://raw.githubusercontent.com/signalapp/libsignal/main/acknowledgments/"&gt;&lt;code&gt;acknowledgments/README.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Legal things&lt;/h1&gt; 
&lt;h2&gt;Cryptography Notice&lt;/h2&gt; 
&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href="http://www.wassenaar.org/"&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2020-2024 Signal Messenger, LLC&lt;/p&gt; 
&lt;p&gt;Licensed under the GNU AGPLv3: &lt;a href="https://www.gnu.org/licenses/agpl-3.0.html"&gt;https://www.gnu.org/licenses/agpl-3.0.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/BitNet</title>
      <link>https://github.com/microsoft/BitNet</link>
      <description>&lt;p&gt;Official inference framework for 1-bit LLMs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;bitnet.cpp&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/version-1.0-blue" alt="version" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://huggingface.co/microsoft/BitNet-b1.58-2B-4T"&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/BitNet/main/assets/header_model_release.png" alt="BitNet Model on Hugging Face" width="800" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Try it out via this &lt;a href="https://bitnet-demo.azurewebsites.net/"&gt;demo&lt;/a&gt;, or build and run it on your own &lt;a href="https://github.com/microsoft/BitNet?tab=readme-ov-file#build-from-source"&gt;CPU&lt;/a&gt; or &lt;a href="https://github.com/microsoft/BitNet/raw/main/gpu/README.md"&gt;GPU&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;bitnet.cpp is the official inference framework for 1-bit LLMs (e.g., BitNet b1.58). It offers a suite of optimized kernels, that support &lt;strong&gt;fast&lt;/strong&gt; and &lt;strong&gt;lossless&lt;/strong&gt; inference of 1.58-bit models on CPU and GPU (NPU support will coming next).&lt;/p&gt; 
&lt;p&gt;The first release of bitnet.cpp is to support inference on CPUs. bitnet.cpp achieves speedups of &lt;strong&gt;1.37x&lt;/strong&gt; to &lt;strong&gt;5.07x&lt;/strong&gt; on ARM CPUs, with larger models experiencing greater performance gains. Additionally, it reduces energy consumption by &lt;strong&gt;55.4%&lt;/strong&gt; to &lt;strong&gt;70.0%&lt;/strong&gt;, further boosting overall efficiency. On x86 CPUs, speedups range from &lt;strong&gt;2.37x&lt;/strong&gt; to &lt;strong&gt;6.17x&lt;/strong&gt; with energy reductions between &lt;strong&gt;71.9%&lt;/strong&gt; to &lt;strong&gt;82.2%&lt;/strong&gt;. Furthermore, bitnet.cpp can run a 100B BitNet b1.58 model on a single CPU, achieving speeds comparable to human reading (5-7 tokens per second), significantly enhancing the potential for running LLMs on local devices. Please refer to the &lt;a href="https://arxiv.org/abs/2410.16144"&gt;technical report&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/microsoft/BitNet/main/assets/m2_performance.jpg" alt="m2_performance" width="800" /&gt; 
&lt;img src="https://raw.githubusercontent.com/microsoft/BitNet/main/assets/intel_performance.jpg" alt="m2_performance" width="800" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The tested models are dummy setups used in a research context to demonstrate the inference performance of bitnet.cpp.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;A demo of bitnet.cpp running a BitNet b1.58 3B model on Apple M2:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/7f46b736-edec-4828-b809-4be780a3e5b1"&gt;https://github.com/user-attachments/assets/7f46b736-edec-4828-b809-4be780a3e5b1&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What's New:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;05/20/2025 &lt;a href="https://github.com/microsoft/BitNet/raw/main/gpu/README.md"&gt;BitNet Official GPU inference kernel&lt;/a&gt; &lt;img src="https://img.shields.io/badge/NEW-red" alt="NEW" /&gt;&lt;/li&gt; 
 &lt;li&gt;04/14/2025 &lt;a href="https://huggingface.co/microsoft/BitNet-b1.58-2B-4T"&gt;BitNet Official 2B Parameter Model on Hugging Face&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;02/18/2025 &lt;a href="https://arxiv.org/abs/2502.11880"&gt;Bitnet.cpp: Efficient Edge Inference for Ternary LLMs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;11/08/2024 &lt;a href="https://arxiv.org/abs/2411.04965"&gt;BitNet a4.8: 4-bit Activations for 1-bit LLMs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;10/21/2024 &lt;a href="https://arxiv.org/abs/2410.16144"&gt;1-bit AI Infra: Part 1.1, Fast and Lossless BitNet b1.58 Inference on CPUs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;10/17/2024 bitnet.cpp 1.0 released.&lt;/li&gt; 
 &lt;li&gt;03/21/2024 &lt;a href="https://github.com/microsoft/unilm/raw/master/bitnet/The-Era-of-1-bit-LLMs__Training_Tips_Code_FAQ.pdf"&gt;The-Era-of-1-bit-LLMs__Training_Tips_Code_FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;02/27/2024 &lt;a href="https://arxiv.org/abs/2402.17764"&gt;The Era of 1-bit LLMs: All Large Language Models are in 1.58 Bits&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;10/17/2023 &lt;a href="https://arxiv.org/abs/2310.11453"&gt;BitNet: Scaling 1-bit Transformers for Large Language Models&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;This project is based on the &lt;a href="https://github.com/ggerganov/llama.cpp"&gt;llama.cpp&lt;/a&gt; framework. We would like to thank all the authors for their contributions to the open-source community. Also, bitnet.cpp's kernels are built on top of the Lookup Table methodologies pioneered in &lt;a href="https://github.com/microsoft/T-MAC/"&gt;T-MAC&lt;/a&gt;. For inference of general low-bit LLMs beyond ternary models, we recommend using T-MAC.&lt;/p&gt; 
&lt;h2&gt;Official Models&lt;/h2&gt; 
&lt;table&gt;  
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th rowspan="2"&gt;Model&lt;/th&gt; 
   &lt;th rowspan="2"&gt;Parameters&lt;/th&gt; 
   &lt;th rowspan="2"&gt;CPU&lt;/th&gt; 
   &lt;th colspan="3"&gt;Kernel&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th&gt;I2_S&lt;/th&gt; 
   &lt;th&gt;TL1&lt;/th&gt; 
   &lt;th&gt;TL2&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td rowspan="2"&gt;&lt;a href="https://huggingface.co/microsoft/BitNet-b1.58-2B-4T"&gt;BitNet-b1.58-2B-4T&lt;/a&gt;&lt;/td&gt; 
   &lt;td rowspan="2"&gt;2.4B&lt;/td&gt; 
   &lt;td&gt;x86&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ARM&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Supported Models&lt;/h2&gt; 
&lt;p&gt;❗️&lt;strong&gt;We use existing 1-bit LLMs available on &lt;a href="https://huggingface.co/"&gt;Hugging Face&lt;/a&gt; to demonstrate the inference capabilities of bitnet.cpp. We hope the release of bitnet.cpp will inspire the development of 1-bit LLMs in large-scale settings in terms of model size and training tokens.&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt;  
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th rowspan="2"&gt;Model&lt;/th&gt; 
   &lt;th rowspan="2"&gt;Parameters&lt;/th&gt; 
   &lt;th rowspan="2"&gt;CPU&lt;/th&gt; 
   &lt;th colspan="3"&gt;Kernel&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th&gt;I2_S&lt;/th&gt; 
   &lt;th&gt;TL1&lt;/th&gt; 
   &lt;th&gt;TL2&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td rowspan="2"&gt;&lt;a href="https://huggingface.co/1bitLLM/bitnet_b1_58-large"&gt;bitnet_b1_58-large&lt;/a&gt;&lt;/td&gt; 
   &lt;td rowspan="2"&gt;0.7B&lt;/td&gt; 
   &lt;td&gt;x86&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ARM&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td rowspan="2"&gt;&lt;a href="https://huggingface.co/1bitLLM/bitnet_b1_58-3B"&gt;bitnet_b1_58-3B&lt;/a&gt;&lt;/td&gt; 
   &lt;td rowspan="2"&gt;3.3B&lt;/td&gt; 
   &lt;td&gt;x86&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ARM&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td rowspan="2"&gt;&lt;a href="https://huggingface.co/HF1BitLLM/Llama3-8B-1.58-100B-tokens"&gt;Llama3-8B-1.58-100B-tokens&lt;/a&gt;&lt;/td&gt; 
   &lt;td rowspan="2"&gt;8.0B&lt;/td&gt; 
   &lt;td&gt;x86&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ARM&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td rowspan="2"&gt;&lt;a href="https://huggingface.co/collections/tiiuae/falcon3-67605ae03578be86e4e87026"&gt;Falcon3 Family&lt;/a&gt;&lt;/td&gt; 
   &lt;td rowspan="2"&gt;1B-10B&lt;/td&gt; 
   &lt;td&gt;x86&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ARM&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td rowspan="2"&gt;&lt;a href="https://huggingface.co/collections/tiiuae/falcon-edge-series-6804fd13344d6d8a8fa71130"&gt;Falcon-E Family&lt;/a&gt;&lt;/td&gt; 
   &lt;td rowspan="2"&gt;1B-3B&lt;/td&gt; 
   &lt;td&gt;x86&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ARM&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;python&amp;gt;=3.9&lt;/li&gt; 
 &lt;li&gt;cmake&amp;gt;=3.22&lt;/li&gt; 
 &lt;li&gt;clang&amp;gt;=18 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;For Windows users, install &lt;a href="https://visualstudio.microsoft.com/downloads/"&gt;Visual Studio 2022&lt;/a&gt;. In the installer, toggle on at least the following options(this also automatically installs the required additional tools like CMake):&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Desktop-development with C++&lt;/li&gt; 
     &lt;li&gt;C++-CMake Tools for Windows&lt;/li&gt; 
     &lt;li&gt;Git for Windows&lt;/li&gt; 
     &lt;li&gt;C++-Clang Compiler for Windows&lt;/li&gt; 
     &lt;li&gt;MS-Build Support for LLVM-Toolset (clang)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;For Debian/Ubuntu users, you can download with &lt;a href="https://apt.llvm.org/"&gt;Automatic installation script&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;conda (highly recommend)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Build from source&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] If you are using Windows, please remember to always use a Developer Command Prompt / PowerShell for VS2022 for the following commands. Please refer to the FAQs below if you see any issues.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repo&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone --recursive https://github.com/microsoft/BitNet.git
cd BitNet
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Install the dependencies&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# (Recommended) Create a new conda environment
conda create -n bitnet-cpp python=3.9
conda activate bitnet-cpp

pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Build the project&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Manually download the model and run with local path
huggingface-cli download microsoft/BitNet-b1.58-2B-4T-gguf --local-dir models/BitNet-b1.58-2B-4T
python setup_env.py -md models/BitNet-b1.58-2B-4T -q i2_s

&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;
usage: setup_env.py [-h] [--hf-repo {1bitLLM/bitnet_b1_58-large,1bitLLM/bitnet_b1_58-3B,HF1BitLLM/Llama3-8B-1.58-100B-tokens,tiiuae/Falcon3-1B-Instruct-1.58bit,tiiuae/Falcon3-3B-Instruct-1.58bit,tiiuae/Falcon3-7B-Instruct-1.58bit,tiiuae/Falcon3-10B-Instruct-1.58bit}] [--model-dir MODEL_DIR] [--log-dir LOG_DIR] [--quant-type {i2_s,tl1}] [--quant-embd]
                    [--use-pretuned]

Setup the environment for running inference

optional arguments:
  -h, --help            show this help message and exit
  --hf-repo {1bitLLM/bitnet_b1_58-large,1bitLLM/bitnet_b1_58-3B,HF1BitLLM/Llama3-8B-1.58-100B-tokens,tiiuae/Falcon3-1B-Instruct-1.58bit,tiiuae/Falcon3-3B-Instruct-1.58bit,tiiuae/Falcon3-7B-Instruct-1.58bit,tiiuae/Falcon3-10B-Instruct-1.58bit}, -hr {1bitLLM/bitnet_b1_58-large,1bitLLM/bitnet_b1_58-3B,HF1BitLLM/Llama3-8B-1.58-100B-tokens,tiiuae/Falcon3-1B-Instruct-1.58bit,tiiuae/Falcon3-3B-Instruct-1.58bit,tiiuae/Falcon3-7B-Instruct-1.58bit,tiiuae/Falcon3-10B-Instruct-1.58bit}
                        Model used for inference
  --model-dir MODEL_DIR, -md MODEL_DIR
                        Directory to save/load the model
  --log-dir LOG_DIR, -ld LOG_DIR
                        Directory to save the logging info
  --quant-type {i2_s,tl1}, -q {i2_s,tl1}
                        Quantization type
  --quant-embd          Quantize the embeddings to f16
  --use-pretuned, -p    Use the pretuned kernel parameters
&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Basic usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run inference with the quantized model
python run_inference.py -m models/BitNet-b1.58-2B-4T/ggml-model-i2_s.gguf -p "You are a helpful assistant" -cnv
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;
usage: run_inference.py [-h] [-m MODEL] [-n N_PREDICT] -p PROMPT [-t THREADS] [-c CTX_SIZE] [-temp TEMPERATURE] [-cnv]

Run inference

optional arguments:
  -h, --help            show this help message and exit
  -m MODEL, --model MODEL
                        Path to model file
  -n N_PREDICT, --n-predict N_PREDICT
                        Number of tokens to predict when generating text
  -p PROMPT, --prompt PROMPT
                        Prompt to generate text from
  -t THREADS, --threads THREADS
                        Number of threads to use
  -c CTX_SIZE, --ctx-size CTX_SIZE
                        Size of the prompt context
  -temp TEMPERATURE, --temperature TEMPERATURE
                        Temperature, a hyperparameter that controls the randomness of the generated text
  -cnv, --conversation  Whether to enable chat mode or not (for instruct models.)
                        (When this option is turned on, the prompt specified by -p will be used as the system prompt.)
&lt;/pre&gt; 
&lt;h3&gt;Benchmark&lt;/h3&gt; 
&lt;p&gt;We provide scripts to run the inference benchmark providing a model.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;usage: e2e_benchmark.py -m MODEL [-n N_TOKEN] [-p N_PROMPT] [-t THREADS]  
   
Setup the environment for running the inference  
   
required arguments:  
  -m MODEL, --model MODEL  
                        Path to the model file. 
   
optional arguments:  
  -h, --help  
                        Show this help message and exit. 
  -n N_TOKEN, --n-token N_TOKEN  
                        Number of generated tokens. 
  -p N_PROMPT, --n-prompt N_PROMPT  
                        Prompt to generate text from. 
  -t THREADS, --threads THREADS  
                        Number of threads to use. 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's a brief explanation of each argument:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-m&lt;/code&gt;, &lt;code&gt;--model&lt;/code&gt;: The path to the model file. This is a required argument that must be provided when running the script.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-n&lt;/code&gt;, &lt;code&gt;--n-token&lt;/code&gt;: The number of tokens to generate during the inference. It is an optional argument with a default value of 128.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-p&lt;/code&gt;, &lt;code&gt;--n-prompt&lt;/code&gt;: The number of prompt tokens to use for generating text. This is an optional argument with a default value of 512.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-t&lt;/code&gt;, &lt;code&gt;--threads&lt;/code&gt;: The number of threads to use for running the inference. It is an optional argument with a default value of 2.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;: Show the help message and exit. Use this argument to display usage information.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;python utils/e2e_benchmark.py -m /path/to/model -n 200 -p 256 -t 4  
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command would run the inference benchmark using the model located at &lt;code&gt;/path/to/model&lt;/code&gt;, generating 200 tokens from a 256 token prompt, utilizing 4 threads.&lt;/p&gt; 
&lt;p&gt;For the model layout that do not supported by any public model, we provide scripts to generate a dummy model with the given model layout, and run the benchmark on your machine:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python utils/generate-dummy-bitnet-model.py models/bitnet_b1_58-large --outfile models/dummy-bitnet-125m.tl1.gguf --outtype tl1 --model-size 125M

# Run benchmark with the generated model, use -m to specify the model path, -p to specify the prompt processed, -n to specify the number of token to generate
python utils/e2e_benchmark.py -m models/dummy-bitnet-125m.tl1.gguf -p 512 -n 128
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Convert from &lt;code&gt;.safetensors&lt;/code&gt; Checkpoints&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Prepare the .safetensors model file
huggingface-cli download microsoft/bitnet-b1.58-2B-4T-bf16 --local-dir ./models/bitnet-b1.58-2B-4T-bf16

# Convert to gguf model
python ./utils/convert-helper-bitnet.py ./models/bitnet-b1.58-2B-4T-bf16
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FAQ (Frequently Asked Questions)📌&lt;/h3&gt; 
&lt;h4&gt;Q1: The build dies with errors building llama.cpp due to issues with std::chrono in log.cpp?&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; This is an issue introduced in recent version of llama.cpp. Please refer to this &lt;a href="https://github.com/tinglou/llama.cpp/commit/4e3db1e3d78cc1bcd22bcb3af54bd2a4628dd323"&gt;commit&lt;/a&gt; in the &lt;a href="https://github.com/abetlen/llama-cpp-python/issues/1942"&gt;discussion&lt;/a&gt; to fix this issue.&lt;/p&gt; 
&lt;h4&gt;Q2: How to build with clang in conda environment on windows?&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Before building the project, verify your clang installation and access to Visual Studio tools by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;clang -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command checks that you are using the correct version of clang and that the Visual Studio tools are available. If you see an error message such as:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;'clang' is not recognized as an internal or external command, operable program or batch file.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It indicates that your command line window is not properly initialized for Visual Studio tools.&lt;/p&gt; 
&lt;p&gt;• If you are using Command Prompt, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"C:\Program Files\Microsoft Visual Studio\2022\Professional\Common7\Tools\VsDevCmd.bat" -startdir=none -arch=x64 -host_arch=x64
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;• If you are using Windows PowerShell, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Import-Module "C:\Program Files\Microsoft Visual Studio\2022\Professional\Common7\Tools\Microsoft.VisualStudio.DevShell.dll" Enter-VsDevShell 3f0e31ad -SkipAutomaticLocation -DevCmdArguments "-arch=x64 -host_arch=x64"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These steps will initialize your environment and allow you to use the correct Visual Studio tools.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>meshery/meshery</title>
      <link>https://github.com/meshery/meshery</link>
      <description>&lt;p&gt;Meshery, the cloud native manager&lt;/p&gt;&lt;hr&gt;&lt;p style="text-align:center;" align="center"&gt;&lt;a href="https://meshery.io"&gt;
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg" /&gt; 
   &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg?sanitize=true" alt="Meshery Logo" width="70%" /&gt;
  &lt;/picture&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://hub.docker.com/r/meshery/meshery" alt="Docker pulls"&gt; &lt;img src="https://img.shields.io/docker/pulls/meshery/meshery.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://github.com/issues?q=is%3Aopen%20is%3Aissue%20archived%3Afalse%20(org%3Ameshery%20OR%20org%3Aservice-mesh-performance%20OR%20org%3Aservice-mesh-patterns%20OR%20org%3Ameshery-extensions)%20label%3A%22help%20wanted%22%20" alt="GitHub issues by-label"&gt; &lt;img src="https://img.shields.io/github/issues/meshery/meshery/help%20wanted.svg?color=informational" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meshery/meshery/raw/master/LICENSE" alt="LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/meshery/meshery?color=brightgreen" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/meshery/meshery" alt="Artifact Hub Meshery"&gt; &lt;img src="https://img.shields.io/endpoint?color=brightgreen&amp;amp;label=Helm%20Chart&amp;amp;style=plastic&amp;amp;url=https%3A%2F%2Fartifacthub.io%2Fbadge%2Frepository%2Fartifact-hub" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/meshery/meshery" alt="Go Report Card"&gt; &lt;img src="https://goreportcard.com/badge/github.com/meshery/meshery" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meshery/meshery/actions" alt="Build Status"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/meshery/meshery/release-drafter.yml" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/3564" alt="CLI Best Practices"&gt; &lt;img src="https://bestpractices.coreinfrastructure.org/projects/3564/badge" /&gt;&lt;/a&gt; &lt;a href="https://meshery.io/community#discussion-forums" alt="Discussion Forum"&gt; &lt;img src="https://img.shields.io/discourse/users?label=discuss&amp;amp;logo=discourse&amp;amp;server=https%3A%2F%2Fmeshery.io/community" /&gt;&lt;/a&gt; &lt;a href="https://slack.meshery.io" alt="Join Slack"&gt; &lt;img src="https://img.shields.io/badge/Slack-@meshery.svg?logo=slack" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=mesheryio" alt="Twitter Follow"&gt; &lt;img src="https://img.shields.io/twitter/follow/mesheryio.svg?label=Follow+Meshery&amp;amp;style=social" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meshery/meshery/releases" alt="Meshery Downloads"&gt; &lt;img src="https://img.shields.io/github/downloads/meshery/meshery/total" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/meshery/meshery" alt="OpenSSF Scorecard"&gt; &lt;img src="https://api.scorecard.dev/projects/github.com/meshery/meshery/badge" /&gt;&lt;/a&gt; &lt;a href="https://trendshift.io/repositories/888" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/888" alt="meshery%2Fmeshery | Trendshift" style="width: 150px;" width="150px" /&gt;&lt;/a&gt; 
 &lt;!-- &lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery?ref=badge_shield" alt="License Scan Report"&gt;
  &lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery.svg?type=shield"/&gt;&lt;/a&gt;  
  --&gt; &lt;/p&gt; 
&lt;h5&gt;&lt;p align="center"&gt;&lt;i&gt;If you like Meshery, please &lt;a href="https://github.com/meshery/meshery/stargazers"&gt;★&lt;/a&gt; this repository to show your support! 🤩&lt;/i&gt;&lt;/p&gt;&lt;/h5&gt; 
&lt;p align="center"&gt; MESHERY IS A CLOUD NATIVE COMPUTING FOUNDATION PROJECT &lt;/p&gt; 
&lt;div align="center" width="100%"&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cncf-white.svg#gh-dark-mode-only" width="30%" align="center" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cncf-black.svg#gh-light-mode-only" width="30%" align="center" /&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; A self-service engineering platform, &lt;a href="https://meshery.io"&gt;Meshery&lt;/a&gt;, is the open source, cloud native manager that enables the design and management of all Kubernetes-based infrastructure and applications (multi-cloud). Among other features, As an extensible platform, Meshery offers visual and collaborative GitOps, freeing you from the chains of YAML while managing Kubernetes multi-cluster deployments. &lt;/p&gt; 
&lt;br /&gt; 
&lt;div align="center" width="100%"&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-dashboard-hero-image.png" width="800px" /&gt; 
 &lt;br /&gt;Try Meshery in your browser using the 
 &lt;a href="https://play.meshery.io"&gt;Cloud Native Playground&lt;/a&gt; (
 &lt;a href="https://www.youtube.com/watch?v=034nVaQUyME&amp;amp;list=PL3A-A6hPO2IO_yzN83wSJJUNQActzCJvO&amp;amp;index=9"&gt;teaser video&lt;/a&gt;) 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;!--
- [Functionality](#functionality)
  - [Meshery Architecture](#meshery-architecture)
  - [Join the Meshery community!](#join-the-meshery-community)
  - [Contributing](#contributing)
    - [Stargazers](#stargazers)
    - [License](#license)
--&gt; 
&lt;!-- &lt;p style="clear:both;"&gt;&amp;nbsp;&lt;/p&gt;
&lt;a href="https://meshery.io"&gt;&lt;picture&gt;
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg"&gt;
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg"&gt;
  &lt;img alt="Meshery - the Cloud Native Manager" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg" align="left" width="45%"&gt;
  &lt;/picture&gt;&lt;/a&gt; 
&lt;a href="https://meshery.io"&gt;
&lt;h3 style="margin:auto;"&gt;&lt;br /&gt;&lt;br /&gt;
  &lt;a href="https://docs.google.com/presentation/d/14kxjwYSJ_FyE3K_6CDEd6oq2kqwn0OSE8RDJ4H-KlKU/edit?usp=sharing"&gt;&lt;center&gt;&lt;i&gt;Project Overview Presentation&lt;/i&gt;&lt;/center&gt;&lt;/a&gt;
  &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;/h3&gt; --&gt; 
&lt;p style="clear:both;"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;Functionality&lt;/h1&gt; 
&lt;h2&gt;Infrastructure Lifecycle Management&lt;/h2&gt; 
&lt;p&gt;Meshery manages the configuration, deployment, and operation of your Cloud services and Kubernetes clusters while supporting hundreds of different types of cloud native infrastructure integrations. Meshery supports &lt;a href="https://raw.githubusercontent.com/meshery/meshery/master/https//meshery.io/integrations"&gt;300+ integrations&lt;/a&gt;.&lt;/p&gt; 
&lt;!--
&lt;a href="https://www.youtube.com/watch?v=034nVaQUyME"&gt;&lt;img alt="Meshery cloud native management" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshmap.gif"  style="margin-left:10px; margin-bottom:10px;" width="100%" align="center" /&gt;&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;--&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cloud-native-integrations.png"&gt;&lt;img alt="Meshery Integrations" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cloud-native-integrations.png" style="margin-right:10px;margin-bottom:10px;" width="100%" align="center" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Find infrastructure configuration patterns in Meshery's &lt;a href="https://meshery.io/catalog"&gt;catalog of curated design templates&lt;/a&gt; filled with configuration best practices.&lt;/p&gt; 
&lt;h2&gt;Multiple Kubernetes Clusters and Multiple Clouds&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://meshery.io/assets/images/screens/multi-cluster-management.gif" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" align="center" /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;Meshery provides a single pane of glass to manage multiple Kubernetes clusters across any infrastructure, including various cloud providers. Meshery enables consistent configuration, operation, and observability across your entire Kubernetes landscape.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;Dry-run your deployments&lt;/h4&gt;&lt;/summary&gt; Meshery leverages Kubernetes' built-in dry-run capabilities to allow you to simulate deployments without actually applying the changes to your cluster. This enables you to: 
 &lt;ul&gt; 
  &lt;li&gt;Validate configurations: Ensure your deployment specifications (e.g., YAML manifests, Helm charts, Meshery Designs) are syntactically correct and will be accepted by the Kubernetes API server. &amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Identify potential issues: Detect errors in your configurations, such as invalid resource definitions, missing fields, or API version mismatches, before they impact your live environment.&lt;/li&gt; 
  &lt;li&gt;Preview changes: Understand the objects that Kubernetes would create or modify during a real deployment.&lt;/li&gt; 
  &lt;li&gt;Integrate with CI/CD: Incorporate dry-run as a step in your continuous integration and continuous delivery pipelines to automate pre-deployment checks and prevent faulty deployments.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;By providing this dry-run functionality, Meshery helps you increase the reliability and stability of your Kubernetes deployments by catching potential problems early in the development and deployment process.&lt;/p&gt; 
 &lt;!-- 
Assess your cloud native infrastructure configuration against deployment and operational best practices with Meshery's configuration validator. Manage your workloads with confidence. Check your Kubernetes configuration for anti-patterns and avoid common pitfalls. --&gt; 
&lt;/details&gt; 
&lt;h3&gt;Visually and collaboratively manage your infrastructure&lt;/h3&gt; 
&lt;p&gt;Using a GitOps-centric approach, visually and collaboratively design and manage your infrastructure and microservices. Meshery intelligently infers the manner in which each resource &lt;a href="https://docs.meshery.io/concepts/logical/relationships"&gt;interrelates&lt;/a&gt; with each other. Meshery supports a broad variety of built-in relationships between components, which you can use to create your own custom relationships.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/edge_mount_relationship_pod_persistent_volume.svg?sanitize=true" width="50%" alt="Multi-cluster Kubernetes Manager" align="center" /&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;img alt="OPA Logo" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/opa-logo.svg?sanitize=true" style="margin-right:10px;" width="25px" align="left" /&gt;&lt;h4&gt;Context-Aware Policies For Applications&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img alt="Meshery and Open Policy Agent Integration" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-policies-2.png" style="margin:auto;text-align:center" width="50%" /&gt; 
 &lt;p&gt;Leverage built-in relationships to enforce configuration best practices consistently from code to Kubernetes. Customize Configure your infrastructure with confidence without needing to know or write Open Policy Agent's Rego query language.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Workspaces: Your team's Google Drive for cloud native projects&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/workspace.gif" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" /&gt; 
&lt;p&gt;Workspaces let you organize your work and serve as the central point of collaboration for you and your teams and point of access control to Environments and their resources.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;Manage your connections with Environments&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/environments.gif" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" /&gt; 
 &lt;p&gt;&lt;a href="https://docs.meshery.io/concepts/logical/environments"&gt;Environments&lt;/a&gt; make it easier for you to manage, share, and work with a collection of resources as a group, instead of dealing with all your Connections and Credentials on an individual basis.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;See changes to your infra before you merge&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-snapshot.png" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" align="center" /&gt; 
 &lt;p&gt;Get snapshots of your infrastructure directly in your PRs. Preview your deployment, view changes pull request-to-pull request and get infrastructure snapshots within your PRs by connecting Kanvas to your GitHub repositories.&lt;/p&gt; 
&lt;/details&gt; 
&lt;!-- &lt;h3&gt;Operate with configuration best practices&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Assess your configurations against deployment and operational best practices with Meshery's configuration validator.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;h3&gt;Control all of your infrastructure with mesheryctl&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Whether managing multiple Meshery deployments, importing designs, discoverying Kubernetes clusters, do so with ease using Meshery CLI in your terminal.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt; --&gt; 
&lt;h2&gt;Platform Engineering with Meshery's Extension Points&lt;/h2&gt; 
&lt;p&gt;Extend Meshery as your self-service engineering platform by taking advantage of its &lt;a href="https://docs.meshery.io/extensibility"&gt;vast set of extensibility features&lt;/a&gt;, including gRPC adapters, hot-loadable Reactjs packages and Golang plugins, subscriptions on NATS topics, consumable &lt;em&gt;and&lt;/em&gt; extendable API interfaces via REST and GraphQL.The great number of extension points in Meshery make it ideal as the foundation of your internal developer platform.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;Access the Cloud Native Patterns for Kubernetes&lt;/h4&gt;&lt;/summary&gt; 
 &lt;p&gt;Design and manage all of your cloud native infrastructure using the design configurator in Meshery or start from a template using the patterns from the &lt;a href="https://meshery.io/catalog"&gt;catalog&lt;/a&gt;. &lt;/p&gt;
&lt;/details&gt; 
&lt;p&gt;Meshery offers robust capabilities for managing multiple tenants within a shared Kubernetes infrastructure. Meshery provides the tools and integrations necessary to create a secure, isolated, and manageable multi-tenant environments, allowing multiple teams or organizations with granular control over their role-based access controls.&lt;/p&gt; 
&lt;p&gt;Meshery's "multi-player" functionality refers to its collaborative features that enable multiple users to interact with and manage cloud native infrastructure simultaneously. This is primarily facilitated through Kanvas, a Meshery extension visual designer and management interface.&lt;/p&gt; 
&lt;h2&gt;Performance Management&lt;/h2&gt; 
&lt;p&gt;Meshery offers load generation and performance characterization to help you assess and optimize the performance of your applications and infrastructure.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/performance-metrics.gif" alt="Multi-cluster Kubernetes Manager" width="50%" /&gt; 
&lt;p&gt;Create and reuse performance profiles for consistent characterization of the configuration of your infrastructure in context of how it performs.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h4&gt; Manage the performance of your infrastructure and its workloads&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-performance.gif" /&gt; 
 &lt;p&gt;Baseline and track your cloud native performance from release to release.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use performance profiles to track the historical performance of your workloads.&lt;/li&gt; 
  &lt;li&gt;Track your application performance from version to version.&lt;/li&gt; 
  &lt;li&gt;Understand behavioral differences between cloud native network functions.&lt;/li&gt; 
  &lt;li&gt;Compare performance across infrastructure deployments.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h4&gt;Load Generation and Microservice Performance Characteristization&lt;/h4&gt;&lt;/summary&gt; 
 &lt;picture align="left"&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg" width="18%" align="left" style="margin-left:10px;" /&gt; 
  &lt;img alt="Shows an illustrated light mode meshery logo in light color mode and a dark mode meshery logo dark color mode." src="https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg?sanitize=true" width="18%" align="left" style="margin-left:10px;" /&gt; 
 &lt;/picture&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Multiple Load Generators:&lt;/strong&gt; Meshery supports various load generators, including Fortio, Wrk2, and Nighthawk, allowing users to choose the tool that best suits your needs.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Configurable Performance Profiles:&lt;/strong&gt; Meshery provides a highly configurable set of load profiles with tunable facets, enabling users to generate TCP, gRPC, and HTTP load. You can customize parameters such as duration, concurrent threads, concurrent generators, and load generator type.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Statistical Analysis:&lt;/strong&gt; Meshery performs statistical analysis on the results of performance tests, presenting data in the form of histograms with latency buckets. Understand the distribution of response times and identify potential bottlenecks.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Comparison of Test Results:&lt;/strong&gt; Meshery enables you to compare the difference in request performance (latency and throughput) between independent performance tests. Save your load test configurations as Performance Profiles, making it easy to rerun tests with the same settings and track performance variations over time.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Kubernetes Cluster and Workload Metrics:&lt;/strong&gt; - Meshery connects to one or more Prometheus servers to gather both cluster and application metrics. Meshery also integrates with Grafana, allowing you to import your existing dashboards and visualize performance data.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;In an effort to produce infrastructure agnostic tooling, Meshery uses the &lt;a href="https://smp-spec.io"&gt;Cloud Native Performance&lt;/a&gt; specification as a common format to capture and measure your infrastructure's performance against a universal cloud native performance index. Meshery participates in advancing cloud native infrastructure adoption through the standardization of APIs. Meshery enables you to measure the value provided by Docker, Kubernetes, or other cloud native infrastructure in the context of the overhead incurred.&lt;/p&gt; 
 &lt;!-- 

SCREENSHOT / GIF NEEDED HERE

--&gt; 
&lt;/details&gt; 
&lt;h2&gt;&lt;a name="running"&gt;&lt;/a&gt;Get Started with Meshery&lt;/h2&gt; 
&lt;p style="clear:both;"&gt;&lt;/p&gt; 
&lt;!-- &lt;img alt="Control Kubernetes and your workloads with mesheryctl" src=".github/assets/images/readme/mesheryctl.png"  style="margin-left:10px; margin-bottom:10px;" width="50%" align="right" /&gt; --&gt; 
&lt;h3&gt;Using `mesheryctl`&lt;/h3&gt; 
&lt;p&gt;Meshery runs as a set of containers inside or outside of your Kubernetes clusters.&lt;/p&gt; 
&lt;pre&gt;curl -L https://meshery.io/install | bash -&lt;/pre&gt; 
&lt;p&gt;Use the &lt;a href="https://docs.meshery.io/installation/quick-start"&gt;quick start&lt;/a&gt; guide.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;See all supported platforms&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;See the &lt;a href="https://meshery.io/#getting-started"&gt;getting started&lt;/a&gt; section to quickly deploy Meshery on any of these supported platforms:&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Platform&lt;/th&gt; 
    &lt;th align="center"&gt;Supported?&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/docker"&gt;Docker&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/docker"&gt;Docker - Docker App&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/docker/docker-extensiongit"&gt;Docker - Docker Extension&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/kubernetes.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes"&gt;Kubernetes&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/aks.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/aks"&gt;Kubernetes - AKS&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Kubernetes - Docker Desktop&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/eks.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/eks"&gt;Kubernetes - EKS&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/gke.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/gke"&gt;Kubernetes - GKE&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/helm.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/helm"&gt;Kubernetes - Helm&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/kind.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/kind"&gt;Kubernetes - kind&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/minikube.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/minikube"&gt;Kubernetes - Minikube&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/openshift.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes"&gt;Kubernetes - OpenShift&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/kubernetes.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes"&gt;Kubernetes - Rancher&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/linux.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Linux&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/apple.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Mac&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/homebrew.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Mac - Homebrew&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/wsl2.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#windows"&gt;Windows&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/wsl2.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#windows"&gt;Scoop&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/wsl2.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/platforms/windows#wsl2"&gt;WSL2&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/raspberry-pi.png" width="20" height="20" vertical-align="middle" /&gt; Raspberry Pi&lt;/td&gt; 
    &lt;td align="center"&gt;In Progress&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;&lt;a href="https://docs.meshery.io/installation"&gt;Meshery documentation&lt;/a&gt; offers thorough installation guides for your platform of choice.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p style="clear:both;"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;h2&gt;Join the Meshery community&lt;/h2&gt; 
&lt;p&gt;&lt;a name="contributing"&gt;&lt;/a&gt;&lt;a name="community"&gt;&lt;/a&gt; Our projects are community-built and welcome collaboration. 👍 Be sure to see the &lt;a href="https://meshery.io/community"&gt;Contributor Journey Map&lt;/a&gt; and &lt;a href="https://meshery.io/community#handbook"&gt;Community Handbook&lt;/a&gt; for a tour of resources available to you and the &lt;a href="https://meshery.io/community/#handbook/repository-overview"&gt;Repository Overview&lt;/a&gt; for a cursory description of repository by technology and programming language. Jump into community &lt;a href="https://slack.meshery.io"&gt;Slack&lt;/a&gt; or &lt;a href="https://meshery.io/community#discussion-forums"&gt;discussion forum&lt;/a&gt; to participate.&lt;/p&gt; 
&lt;p style="clear:both;"&gt; &lt;/p&gt;
&lt;h3&gt;Find your MeshMate&lt;/h3&gt; 
&lt;p&gt;MeshMates are experienced Meshery community members, who will help you learn your way around, discover live projects, and expand your community network. Connect with a MeshMate today!&lt;/p&gt; 
&lt;p&gt;Learn more about the &lt;a href="https://meshery.io/community#meshmates"&gt;MeshMates&lt;/a&gt; program. &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;div style="display: flex; justify-content: center; align-items:center;"&gt; 
 &lt;div&gt; 
  &lt;a href="https://meshery.io/community"&gt;&lt;img alt="Meshery Community" src="https://docs.meshery.io/assets/img/readme/community.png" width="140px" style="margin-right:36px; margin-bottom:7px;" align="left" /&gt;&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;div style="width:60%; padding-left: 16px; padding-right: 16px"&gt; 
  &lt;p&gt; ✔️ &lt;em&gt;&lt;strong&gt;Join&lt;/strong&gt;&lt;/em&gt; any or all of the weekly meetings on &lt;a href="https://meshery.io/calendar"&gt;community calendar&lt;/a&gt;.&lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Watch&lt;/strong&gt;&lt;/em&gt; community &lt;a href="https://www.youtube.com/@mesheryio?sub_confirmation=1"&gt;meeting recordings&lt;/a&gt;.&lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Fill-in&lt;/strong&gt;&lt;/em&gt; a &lt;a href="https://meshery.io/newcomers"&gt;member form&lt;/a&gt; and gain access to community resources. &lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Discuss&lt;/strong&gt;&lt;/em&gt; in the &lt;a href="https://meshery.io/community#discussion-forums"&gt;community forum&lt;/a&gt;.&lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Explore more&lt;/strong&gt;&lt;/em&gt; in the &lt;a href="https://meshery.io/community#handbook"&gt;community handbook&lt;/a&gt;.&lt;br /&gt; &lt;/p&gt; 
 &lt;/div&gt;
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;div&gt; 
  &lt;a href="https://slack.meshery.io"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/slack.svg" width="110px" /&gt; 
    &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/slack.svg" width="110px" /&gt; 
    &lt;img alt="Shows an illustrated light mode meshery logo in light color mode and a dark mode meshery logo dark color mode." src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/slack.svg?sanitize=true" width="110px" align="left" /&gt; 
   &lt;/picture&gt; &lt;/a&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;p align="left"&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;Not sure where to start?&lt;/i&gt; Grab an open issue with the &lt;a href="https://github.com/issues?q=is%3Aopen%20is%3Aissue%20archived%3Afalse%20(org%3Ameshery%20OR%20org%3Aservice-mesh-performance%20OR%20org%3Aservice-mesh-patterns%20OR%20org%3Ameshery-extensions)%20label%3A%22help%20wanted%22%20"&gt;help-wanted label&lt;/a&gt;. &lt;/p&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please do! We're a warm and welcoming community of open source contributors. Please join. All types of contributions are welcome. Be sure to read the &lt;a href="https://docs.meshery.io/project/contributing"&gt;Contributor Guides&lt;/a&gt; for a tour of resources available to you and how to get started.&lt;/p&gt; 
&lt;!-- &lt;a href="https://youtu.be/MXQV-i-Hkf8"&gt;&lt;img alt="Deploying Linkerd with Meshery" src="https://docs.meshery.io/assets/img/readme/deploying-linkerd-with-meshery.png" width="100%" align="center" /&gt;&lt;/a&gt; --&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;h3&gt;Stargazers&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;i&gt;If you like Meshery, please &lt;a href="https://raw.githubusercontent.com/meshery/stargazers"&gt;★&lt;/a&gt; star this repository to show your support! 🤩&lt;/i&gt; &lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/meshery/stargazers"&gt; &lt;img align="center" src="https://api.star-history.com/svg?repos=meshery/meshery&amp;amp;type=Date" /&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;This repository and site are available as open-source under the terms of the &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Software Bill of Materials (SBOM)&lt;/h4&gt; 
&lt;p&gt;Meshery's &lt;a href="https://github.com/meshery/meshery/actions/workflows/bom.yaml"&gt;Software Bill of Materials&lt;/a&gt; (SBOM) is available as a build artifact.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>airweave-ai/airweave</title>
      <link>https://github.com/airweave-ai/airweave</link>
      <description>&lt;p&gt;Airweave lets agents search any app&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="frontend/public/logo-airweave-darkbg.svg" /&gt; 
 &lt;source media="(prefers-color-scheme: light)" srcset="frontend/public/logo-airweave-lightbg.svg" /&gt; 
 &lt;img width="1673" alt="airweave-lettermark" style="padding-bottom: 12px;" src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/public/logo-airweave-darkbg.svg?sanitize=true" /&gt; 
&lt;/picture&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;Make Any App Searchable for AI Agents&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://github.com/airweave-ai/airweave/actions/workflows/ruff.yml"&gt;&lt;img src="https://github.com/airweave-ai/airweave/actions/workflows/ruff.yml/badge.svg?sanitize=true" alt="Ruff" /&gt;&lt;/a&gt; &lt;a href="https://github.com/airweave-ai/airweave/actions/workflows/eslint.yml"&gt;&lt;img src="https://github.com/airweave-ai/airweave/actions/workflows/eslint.yml/badge.svg?sanitize=true" alt="ESLint" /&gt;&lt;/a&gt; &lt;a href="https://github.com/airweave-ai/airweave/actions/workflows/test-public-api.yml"&gt;&lt;img src="https://github.com/airweave-ai/airweave/actions/workflows/test-public-api.yml/badge.svg?sanitize=true" alt="System Tests" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/airweave-ai/airweave"&gt;&lt;img src="https://codecov.io/gh/airweave-ai/airweave/branch/main/graph/badge.svg?sanitize=true" alt="Codecov" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/gDuebsWGkn"&gt;&lt;img src="https://img.shields.io/discord/1323415085011701870?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Discord" /&gt;&lt;/a&gt; &lt;br /&gt;&lt;/p&gt; 
 &lt;div style="padding-top: 16px;"&gt; 
  &lt;a href="https://trendshift.io/repositories/13748" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13748" alt="airweave-ai%2Fairweave | Trendshift" style="width: 250px; height: 55px; margin-right: 24px;" width="250" height="55" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
  &lt;a href="https://www.ycombinator.com/launches/NX7-airweave-let-agents-search-any-app" target="_blank"&gt;&lt;img src="https://www.ycombinator.com/launches/NX7-airweave-let-agents-search-any-app/upvote_embed.svg?sanitize=true" alt="Launch YC: Airweave - Let Agents Search Any App" style="margin-left: 12px;" /&gt;&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;br /&gt; 
 &lt;p&gt;⭐ &lt;strong&gt;Help us reach more developers and grow the Airweave community. Star this repo!&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Airweave is a tool that lets agents search any app.&lt;/strong&gt; It connects to apps, productivity tools, databases, or document stores and transforms their contents into searchable knowledge bases, accessible through a standardized interface for agents.&lt;/p&gt; 
&lt;p&gt;The search interface is exposed via REST API or MCP. When using MCP, Airweave essentially builds a semantically searchable MCP server. The platform handles everything from auth and extraction to embedding and serving.&lt;/p&gt; 
&lt;p&gt;📺 Check out the quick demo below:&lt;/p&gt; 
&lt;p&gt;
 &lt;video width="100%" src="https://github.com/user-attachments/assets/995e4a36-3f88-4d8e-b401-6ca43db0c7bf" controls&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/airweave-ai/airweave/tree/main/examples"&gt;&lt;strong&gt;🔗 Example notebooks&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#airweave"&gt;Airweave&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-quick-start"&gt;🚀 Quick Start&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-supported-integrations"&gt;🔌 Supported Integrations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-usage"&gt;💻 Usage&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#frontend"&gt;Frontend&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#api"&gt;API&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-sdks"&gt;📦 SDKs&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#python"&gt;Python&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#typescriptjavascript"&gt;TypeScript/JavaScript&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-key-features"&gt;🔑 Key Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-tech-stack"&gt;🔧 Technology Stack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-contributing"&gt;👥 Contributing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-license"&gt;📄 License&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-connect"&gt;🔗 Connect&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;h3&gt;Managed Service: &lt;a href="https://app.airweave.ai/"&gt;Airweave Cloud&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;Self-hosted:&lt;/h3&gt; 
&lt;p&gt;Make sure docker and docker-compose are installed, then...&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Clone the repository
git clone https://github.com/airweave-ai/airweave.git
cd airweave

# 2. Build and run
chmod +x start.sh
./start.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That's it! Access the dashboard at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🔌 Supported Integrations&lt;/h2&gt; 
&lt;!-- START_APP_GRID --&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;div style="display: inline-block; text-align: center; padding: 4px;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/asana.svg?sanitize=true" alt="Asana" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/bitbucket.svg?sanitize=true" alt="Bitbucket" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/confluence.svg?sanitize=true" alt="Confluence" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/dropbox.svg?sanitize=true" alt="Dropbox" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/github.svg?sanitize=true" alt="Github" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/gmail.svg?sanitize=true" alt="Gmail" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/google_calendar.svg?sanitize=true" alt="Google Calendar" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/google_drive.svg?sanitize=true" alt="Google Drive" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/hubspot.svg?sanitize=true" alt="Hubspot" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/jira.svg?sanitize=true" alt="Jira" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/linear.svg?sanitize=true" alt="Linear" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/monday.svg?sanitize=true" alt="Monday" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/notion.svg?sanitize=true" alt="Notion" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/onedrive.svg?sanitize=true" alt="Onedrive" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/outlook_calendar.svg?sanitize=true" alt="Outlook Calendar" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/outlook_mail.svg?sanitize=true" alt="Outlook Mail" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/postgresql.svg?sanitize=true" alt="Postgresql" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/slack.svg?sanitize=true" alt="Slack" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/stripe.svg?sanitize=true" alt="Stripe" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/todoist.svg?sanitize=true" alt="Todoist" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;!-- END_APP_GRID --&gt; 
&lt;h2&gt;💻 Usage&lt;/h2&gt; 
&lt;h3&gt;Frontend&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Access the UI at &lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Connect sources, configure syncs, and query data&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;API&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Swagger docs: &lt;code&gt;http://localhost:8001/docs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Create connections, trigger syncs, and search data&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦 SDKs&lt;/h2&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install airweave-sdk
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from airweave import AirweaveSDK

client = AirweaveSDK(
    api_key="YOUR_API_KEY",
    base_url="http://localhost:8001"
)
client.collections.create(
    name="name",
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;TypeScript/JavaScript&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install @airweave/sdk
# or
yarn add @airweave/sdk
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { AirweaveSDKClient, AirweaveSDKEnvironment } from "@airweave/sdk";

const client = new AirweaveSDKClient({
    apiKey: "YOUR_API_KEY",
    environment: AirweaveSDKEnvironment.Local
});
await client.collections.create({
    name: "name",
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🔑 Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Data synchronization&lt;/strong&gt; from 25+ sources with minimal config&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Entity extraction&lt;/strong&gt; and transformation pipeline&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-tenant&lt;/strong&gt; architecture with OAuth2&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Incremental updates&lt;/strong&gt; using content hashing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Semantic search&lt;/strong&gt; for agent queries&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Versioning&lt;/strong&gt; for data changes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔧 Tech Stack&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Frontend&lt;/strong&gt;: React/TypeScript with ShadCN&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backend&lt;/strong&gt;: FastAPI (Python)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Databases&lt;/strong&gt;: PostgreSQL (metadata), Qdrant (vectors)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Deployment&lt;/strong&gt;: Docker Compose (dev), Kubernetes (prod)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;👥 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Please check &lt;a href="https://github.com/airweave-ai/airweave/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;Airweave is released under the &lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/LICENSE"&gt;MIT&lt;/a&gt; license.&lt;/p&gt; 
&lt;h2&gt;🔗 Connect&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://discord.com/invite/484HY9Ehxt"&gt;Discord&lt;/a&gt;&lt;/strong&gt; - Get help and discuss features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/airweave-ai/airweave/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/strong&gt; - Report bugs or request features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://x.com/airweave_ai"&gt;Twitter&lt;/a&gt;&lt;/strong&gt; - Follow for updates&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>dbt-labs/dbt-core</title>
      <link>https://github.com/dbt-labs/dbt-core</link>
      <description>&lt;p&gt;dbt enables data analysts and engineers to transform their data using the same practices that software engineers use to build applications.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/dbt-labs/dbt-core/fa1ea14ddfb1d5ae319d5141844910dd53ab2834/etc/dbt-core.svg?sanitize=true" alt="dbt logo" width="750" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/dbt-labs/dbt-core/actions/workflows/main.yml"&gt; &lt;img src="https://github.com/dbt-labs/dbt-core/actions/workflows/main.yml/badge.svg?event=push" alt="CI Badge" /&gt; &lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/11095"&gt;&lt;img src="https://www.bestpractices.dev/projects/11095/badge" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.getdbt.com/"&gt;dbt&lt;/a&gt;&lt;/strong&gt; enables data analysts and engineers to transform their data using the same practices that software engineers use to build applications.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/dbt-labs/dbt-core/raw/202cb7e51e218c7b29eb3b11ad058bd56b7739de/etc/dbt-transform.png" alt="architecture" /&gt;&lt;/p&gt; 
&lt;h2&gt;Understanding dbt&lt;/h2&gt; 
&lt;p&gt;Analysts using dbt can transform their data by simply writing select statements, while dbt handles turning these statements into tables and views in a data warehouse.&lt;/p&gt; 
&lt;p&gt;These select statements, or "models", form a dbt project. Models frequently build on top of one another – dbt makes it easy to &lt;a href="https://docs.getdbt.com/docs/ref"&gt;manage relationships&lt;/a&gt; between models, and &lt;a href="https://docs.getdbt.com/docs/documentation"&gt;visualize these relationships&lt;/a&gt;, as well as assure the quality of your transformations through &lt;a href="https://docs.getdbt.com/docs/testing"&gt;testing&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/dbt-labs/dbt-core/6c6649f9129d5d108aa3b0526f634cd8f3a9d1ed/etc/dbt-dag.png" alt="dbt dag" /&gt;&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.getdbt.com/docs/get-started/installation"&gt;Install dbt Core&lt;/a&gt; or explore the &lt;a href="https://docs.getdbt.com/docs/cloud/cloud-cli-installation"&gt;dbt Cloud CLI&lt;/a&gt;, a command-line interface powered by &lt;a href="https://docs.getdbt.com/docs/cloud/about-cloud/dbt-cloud-features"&gt;dbt Cloud&lt;/a&gt; that enhances collaboration.&lt;/li&gt; 
 &lt;li&gt;Read the &lt;a href="https://docs.getdbt.com/docs/introduction/"&gt;introduction&lt;/a&gt; and &lt;a href="https://docs.getdbt.com/docs/about/viewpoint/"&gt;viewpoint&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Join the dbt Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Be part of the conversation in the &lt;a href="http://community.getdbt.com/"&gt;dbt Community Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Read more on the &lt;a href="https://discourse.getdbt.com"&gt;dbt Community Discourse&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting bugs and contributing code&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Want to report a bug or request a feature? Let us know and open &lt;a href="https://github.com/dbt-labs/dbt-core/issues/new/choose"&gt;an issue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Want to help us build dbt? Check out the &lt;a href="https://github.com/dbt-labs/dbt-core/raw/HEAD/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;Everyone interacting in the dbt project's codebases, issue trackers, chat rooms, and mailing lists is expected to follow the &lt;a href="https://community.getdbt.com/code-of-conduct"&gt;dbt Code of Conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>glide-browser/glide</title>
      <link>https://github.com/glide-browser/glide</link>
      <description>&lt;p&gt;An extensible and keyboard-focused web browser&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;img src="https://raw.githubusercontent.com/glide-browser/glide/main/src/glide/docs/logo.png" alt="Glide" width="96" height="96" /&gt; 
 &lt;/picture&gt; 
 &lt;h1&gt;Glide Browser&lt;/h1&gt; 
 &lt;p&gt;An extensible and keyboard-focused web browser built on Firefox&lt;/p&gt; 
 &lt;p&gt; &lt;a href="https://glide-browser.app"&gt;Documentation&lt;/a&gt; · &lt;a href="https://glide-browser.app/#download"&gt;Download&lt;/a&gt; &lt;/p&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://glide-browser.app/hints"&gt;Navigate&lt;/a&gt; the web with just a keyboard&lt;/li&gt; 
 &lt;li&gt;Modal based &lt;a href="https://glide-browser.app/keys"&gt;keymaps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;TypeScript &lt;a href="https://glide-browser.app/config"&gt;config&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Web extensions &lt;a href="https://glide-browser.app/extensions"&gt;API&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;Fuzzy tab manager (try it with &lt;code&gt;&amp;lt;space&amp;gt;&amp;lt;space&amp;gt;&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Site specific &lt;a href="https://glide-browser.app/cookbook#set-a-pref-for-a-specific-website"&gt;settings&lt;/a&gt; / &lt;a href="https://glide-browser.app/cookbook#override-a-keymap-for-a-specific-website"&gt;keymaps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;... and more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/610e8121-8e25-484b-bf1c-8f9f3efd8605"&gt;https://github.com/user-attachments/assets/610e8121-8e25-484b-bf1c-8f9f3efd8605&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://glide-browser.app/contributing"&gt;Contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the Mozilla Public License Version 2.0. See &lt;a href="https://raw.githubusercontent.com/glide-browser/glide/main/LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MotiaDev/motia</title>
      <link>https://github.com/MotiaDev/motia</link>
      <description>&lt;p&gt;Multi-Language Backend Framework that unifies APIs, background jobs, workflows, and AI Agents into a single core primitive with built-in observability and state management.&lt;/p&gt;&lt;hr&gt;&lt;a href="https://motia.dev"&gt; &lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/github-readme-banner.png" alt="Motia Banner" width="100%" /&gt; &lt;/a&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/14032" style="margin-right:8px;"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/14032" alt="Motia" style="width: 250px; height: 55px; margin-right:8px;" width="250" height="55" /&gt; &lt;/a&gt; &lt;a href="https://vercel.com/blog/summer-2025-oss-program#motia" target="_blank" style="margin-left:8px;"&gt; &lt;img alt="Vercel OSS Program" src="https://vercel.com/oss/program-badge.svg?sanitize=true" style="width: 250px; height: 55px; margin-left:8px;" width="250" height="55" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt;🔥 The Unified Backend Framework That Eliminates Runtime Fragmentation 🔥&lt;/strong&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;em&gt;APIs, background jobs, queueing, streaming, states, workflows, AI agents, observability, scaling, and deployment all in one system. JavaScript, TypeScript, Python, and more in a single core primitive&lt;/em&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/package/motia"&gt; &lt;img src="https://img.shields.io/npm/v/motia?style=flat&amp;amp;logo=npm&amp;amp;logoColor=white&amp;amp;color=CB3837&amp;amp;labelColor=000000" alt="npm version" /&gt; &lt;/a&gt; &lt;a href="https://github.com/MotiaDev/motia/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-MIT-green?style=flat&amp;amp;logo=opensourceinitiative&amp;amp;logoColor=white&amp;amp;labelColor=000000" alt="license" /&gt; &lt;/a&gt; &lt;a href="https://github.com/MotiaDev/motia"&gt; &lt;img src="https://img.shields.io/github/stars/MotiaDev/motia?style=flat&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;color=yellow&amp;amp;labelColor=000000" alt="GitHub stars" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/motiadev" target="_blank"&gt; &lt;img src="https://img.shields.io/badge/Follow-@motiadev-1DA1F2?style=flat&amp;amp;logo=twitter&amp;amp;logoColor=white&amp;amp;labelColor=000000" alt="Twitter Follow" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/motia" target="_blank"&gt; &lt;img src="https://img.shields.io/discord/1322278831184281721?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=5865F2&amp;amp;label=Discord&amp;amp;labelColor=000000" alt="Discord" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.motia.dev/manifesto"&gt;💡 Motia Manifesto&lt;/a&gt; • &lt;a href="https://www.motia.dev/docs/getting-started/quick-start"&gt;🚀 Quick Start&lt;/a&gt; • &lt;a href="https://www.motia.dev/docs/concepts/steps/steps"&gt;📋 Defining Steps&lt;/a&gt; • &lt;a href="https://www.motia.dev/docs"&gt;📚 Docs&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎯 What is Motia?&lt;/h2&gt; 
&lt;p&gt;Backend development today is fragmented.&lt;/p&gt; 
&lt;p&gt;APIs live in one framework, background jobs in another, queues and schedulers elsewhere, and now AI agents and streaming systems have their own runtimes. Add observability and state management on top, and you're stitching together half a dozen tools before writing your first feature.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Motia unifies all of these concerns around one core primitive: the Step.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Just as React made frontend development simple by introducing components, Motia redefines backend development with Steps.&lt;/p&gt; 
&lt;p&gt;Every backend pattern, API endpoints, background jobs, queues, workflows, AI agents, streaming, observability, and state, is expressed with the same primitive.&lt;/p&gt; 
&lt;p&gt;To read more about this, check out our &lt;strong&gt;&lt;a href="https://motia.dev/manifesto"&gt;manifesto&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;The Core Primitive: the Step&lt;/h2&gt; 
&lt;p&gt;A Step is just a file with a &lt;code&gt;config&lt;/code&gt; and a &lt;code&gt;handler&lt;/code&gt;. Motia auto-discovers these files and connects them automatically.&lt;/p&gt; 
&lt;p&gt;Here's a simple example of two Steps working together: an API Step that emits an event, and an Event Step that processes it.&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;TypeScript&lt;/b&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-ts"&gt;// steps/send-message.step.ts
export const config = {
  name: 'SendMessage',
  type: 'api',
  path: '/messages',
  method: 'POST',
  emits: ['message.sent']
};

export const handler = async (req, { emit }) =&amp;gt; {
  await emit({
    topic: 'message.sent',
    data: { text: req.body.text }
  });
  return { status: 200, body: { ok: true } };
};
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code class="language-ts"&gt;// steps/process-message.step.ts
export const config = {
  name: 'ProcessMessage',
  type: 'event',
  subscribes: ['message.sent']
};

export const handler = async (input, { logger }) =&amp;gt; {
  logger.info('Processing message', input);
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details close&gt; 
 &lt;summary&gt;&lt;b&gt;Python&lt;/b&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;# send_message_step.py
config = {
    "name": "SendMessage",
    "type": "api",
    "path": "/messages",
    "method": "POST",
    "emits": ["message.sent"]
}

async def handler(req, context):
    await context.emit({
        "topic": "message.sent",
        "data": {"text": req.body["text"]}
    })
    return {"status": 200, "body": {"ok": True}}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;# process_message_step.py
config = {
    "name": "ProcessMessage",
    "type": "event",
    "subscribes": ["message.sent"]
}

async def handler(input, context):
    context.logger.info("Processing message", input)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;JavaScript&lt;/b&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;// steps/send-message.step.js
const config = {
  name: 'SendMessage',
  type: 'api',
  path: '/messages',
  method: 'POST',
  emits: ['message.sent']
};

const handler = async (req, { emit }) =&amp;gt; {
  await emit({
    topic: 'message.sent',
    data: { text: req.body.text }
  });
  return { status: 200, body: { ok: true } };
};

module.exports = { config, handler };
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;// steps/process-message.step.js
const config = {
  name: 'ProcessMessage',
  type: 'event',
  subscribes: ['message.sent']
};

const handler = async (input, { logger }) =&amp;gt; {
  logger.info('Processing message', input);
};

module.exports = { config, handler };
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;👉 With just two files, you've built an &lt;strong&gt;API endpoint&lt;/strong&gt;, a &lt;strong&gt;queue&lt;/strong&gt;, and a &lt;strong&gt;worker&lt;/strong&gt;. No extra frameworks required.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://motia.dev/docs/concepts/steps/steps"&gt;Learn more about Steps →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://motia.dev"&gt;&lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/github-readme-banner.gif" alt="Motia combines APIs, background queues, and AI agents into one system" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;💻 Remix your own Motia App in Replit&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://replit.com/@motiadev/motia"&gt;&lt;img src="https://img.shields.io/badge/Open%20in-Replit-blue?logo=replit&amp;amp;style=for-the-badge" alt="Open in Replit" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Quickstart&lt;/h2&gt; 
&lt;p&gt;Get Motia project up and running in &lt;strong&gt;under 60 seconds&lt;/strong&gt;:&lt;/p&gt; 
&lt;h3&gt;1. Bootstrap a New Motia Project&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx motia@latest create   # runs the interactive terminal
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Follow the prompts to pick a template, project name, and language. &lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/motia-terminal.gif" alt="motia-terminal" /&gt;&lt;/p&gt; 
&lt;h3&gt;2. Start the Workbench&lt;/h3&gt; 
&lt;p&gt;Inside your new project folder, launch the dev server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx motia dev # ➜ http://localhost:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;That's it!&lt;/strong&gt; You have:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ REST APIs with validation&lt;/li&gt; 
 &lt;li&gt;✅ Visual debugger &amp;amp; tracing&lt;/li&gt; 
 &lt;li&gt;✅ Multi-language support&lt;/li&gt; 
 &lt;li&gt;✅ Event-driven architecture&lt;/li&gt; 
 &lt;li&gt;✅ Zero configuration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/new-workbench.png" alt="new-workbench" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📖 &lt;strong&gt;&lt;a href="https://motia.dev/docs/getting-started/quick-start"&gt;Full tutorial in our docs →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🎯 Step Types&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Trigger&lt;/th&gt; 
   &lt;th&gt;Use Case&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;api&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;HTTP Request&lt;/td&gt; 
   &lt;td&gt;REST endpoints&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;event&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Topic subscription&lt;/td&gt; 
   &lt;td&gt;Background processing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;cron&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Schedule&lt;/td&gt; 
   &lt;td&gt;Recurring jobs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;noop&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Manual&lt;/td&gt; 
   &lt;td&gt;External processes&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📖 &lt;strong&gt;&lt;a href="https://motia.dev/docs/concepts/steps"&gt;Learn more about Steps →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎯 Examples&lt;/h2&gt; 
&lt;h3&gt;🏆 &lt;strong&gt;&lt;a href="https://chessarena.ai"&gt;ChessArena.ai&lt;/a&gt;&lt;/strong&gt; - Full-Featured Production App&lt;/h3&gt; 
&lt;p&gt;A complete chess platform benchmarking LLM performance with real-time evaluation.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://chessarena.ai"&gt;Live Website →&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://github.com/MotiaDev/chessarena-ai"&gt;Source Code →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src="https://github.com/MotiaDev/chessarena-ai/raw/main/public/images/chessarena.gif?raw=true" alt="ChessArena.ai in action (raw GIF)" /&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Built from scratch to production deployment, featuring:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔐 &lt;strong&gt;Authentication &amp;amp; user management&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;Multi-agent LLM evaluation&lt;/strong&gt; (OpenAI, Claude, Gemini, Grok)&lt;/li&gt; 
 &lt;li&gt;🐍 &lt;strong&gt;Python engine integration&lt;/strong&gt; (Stockfish chess evaluation)&lt;/li&gt; 
 &lt;li&gt;📊 &lt;strong&gt;Real-time streaming&lt;/strong&gt; with live move updates and scoring&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;strong&gt;Modern React UI&lt;/strong&gt; with interactive chess boards&lt;/li&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;Event-driven workflows&lt;/strong&gt; connecting TypeScript APIs to Python processors&lt;/li&gt; 
 &lt;li&gt;📈 &lt;strong&gt;Live leaderboards&lt;/strong&gt; with move-by-move quality scoring&lt;/li&gt; 
 &lt;li&gt;🚀 &lt;strong&gt;Production deployment&lt;/strong&gt; on Motia Cloud&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📚 &lt;strong&gt;More Examples&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples"&gt;View all 20+ examples →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/ai-deep-research-agent"&gt;AI Research Agent&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Web research with iterative analysis&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/streaming-ai-chatbot"&gt;Streaming Chatbot&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Real-time AI responses&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/gmail-workflow"&gt;Gmail Automation&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Smart email processing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/github-integration-workflow"&gt;GitHub PR Manager&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Automated PR workflows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/finance-agent"&gt;Finance Agent&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Real-time market analysis&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Features demonstrated:&lt;/strong&gt; Multi-language workflows • Real-time streaming • AI integration • Production deployment&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🌐 Language Support&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🚧 Beta&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Go&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🔄 Soon&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;📚 Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://motia.dev/docs"&gt;📖 Documentation&lt;/a&gt;&lt;/strong&gt; - Complete guides and API reference&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://discord.gg/motia"&gt;💬 Discord&lt;/a&gt;&lt;/strong&gt; - Community support and discussions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia/issues"&gt;🐛 GitHub Issues&lt;/a&gt;&lt;/strong&gt; - Bug reports and feature requests&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/orgs/MotiaDev/projects/2"&gt;🗺️ Roadmap&lt;/a&gt;&lt;/strong&gt; - Upcoming features and progress&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚧 Roadmap&lt;/h2&gt; 
&lt;p&gt;We have a public roadmap for Motia, you can view it &lt;a href="https://github.com/orgs/MotiaDev/projects/2/views/4"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Feel free to add comments to the issues, or create a new issue if you have a feature request.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Link&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python Types&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/485"&gt;#485&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Python types&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Streams: RBAC&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/495"&gt;#495&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for RBAC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Streams: Workbench UI&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/497"&gt;#497&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Workbench UI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Queue Strategies&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/476"&gt;#476&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Queue Strategies&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Reactive Steps&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/477"&gt;#477&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Reactive Steps&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Point in time triggers&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/480"&gt;#480&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Point in time triggers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Workbench plugins&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/481"&gt;#481&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Workbench plugins&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rewrite our Core in either Go or Rust&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/482"&gt;#482&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Rewrite our Core in either Go or Rust&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Decrease deployment time&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/483"&gt;#483&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Decrease deployment time&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Built-in database support&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/484"&gt;#484&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for built-in database&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Check our &lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia/raw/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;&lt;/strong&gt; to get started.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://motia.dev"&gt;🚀 Get Started&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href="https://motia.dev/docs"&gt;📖 Docs&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href="https://discord.gg/motia"&gt;💬 Discord&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://www.star-history.com/#motiadev/motia&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=motiadev/motia&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;sub&gt;⭐ &lt;strong&gt;Star us if you find Motia useful!&lt;/strong&gt;&lt;/sub&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>pathwaycom/pathway</title>
      <link>https://github.com/pathwaycom/pathway</link>
      <description>&lt;p&gt;Python ETL framework for stream processing, real-time analytics, LLM pipelines, and RAG.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://pathway.com/"&gt; &lt;img src="https://pathway.com/logo-light.svg?sanitize=true" /&gt; &lt;/a&gt; 
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;a href="https://trendshift.io/repositories/10388" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/10388" alt="pathwaycom%2Fpathway | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; 
 &lt;br /&gt;
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/pathwaycom/pathway/actions/workflows/ubuntu_test.yml"&gt; &lt;img src="https://github.com/pathwaycom/pathway/actions/workflows/ubuntu_test.yml/badge.svg?sanitize=true" alt="ubuntu" /&gt; &lt;br /&gt; &lt;/a&gt;&lt;a href="https://github.com/pathwaycom/pathway/actions/workflows/release.yml"&gt; &lt;img src="https://github.com/pathwaycom/pathway/actions/workflows/release.yml/badge.svg?sanitize=true" alt="Last release" /&gt;&lt;/a&gt; &lt;a href="https://badge.fury.io/py/pathway"&gt;&lt;img src="https://badge.fury.io/py/pathway.svg?sanitize=true" alt="PyPI version" height="18" /&gt;&lt;/a&gt; &lt;a href="https://badge.fury.io/py/pathway"&gt;&lt;img src="https://static.pepy.tech/badge/pathway" alt="PyPI downloads" height="18" /&gt;&lt;/a&gt; &lt;a href="https://github.com/pathwaycom/pathway/raw/main/LICENSE.txt"&gt; &lt;img src="https://img.shields.io/badge/license-BSL-green" alt="License: BSL" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://discord.gg/pathway"&gt; &lt;img src="https://img.shields.io/discord/1042405378304004156?logo=discord" alt="chat on Discord" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=pathway_com"&gt; &lt;img src="https://img.shields.io/twitter/follow/pathwaycom" alt="follow on Twitter" /&gt;&lt;/a&gt; &lt;a href="https://linkedin.com/company/pathway"&gt; &lt;img src="https://img.shields.io/badge/pathway-0077B5?style=social&amp;amp;logo=linkedin" alt="follow on LinkedIn" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dylanhogg/awesome-python/raw/main/README.md"&gt; &lt;img src="https://awesome.re/badge.svg?sanitize=true" alt="Awesome Python" /&gt;&lt;/a&gt; &lt;a href="https://gurubase.io/g/pathway"&gt; &lt;img src="https://img.shields.io/badge/Gurubase-Ask%20Pathway%20Guru-006BFF" alt="Pathway Guru" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/pathwaycom/pathway/main/#getting-started"&gt;Getting Started&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/pathwaycom/pathway/main/#deployment"&gt;Deployment&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/pathwaycom/pathway/main/#resources"&gt;Documentation and Support&lt;/a&gt; | &lt;a href="https://pathway.com/blog/"&gt;Blog&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/pathwaycom/pathway/main/#license"&gt;License&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;Pathway&lt;a id="pathway"&gt; Live Data Framework&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://pathway.com"&gt;Pathway&lt;/a&gt; is a Python ETL framework for stream processing, real-time analytics, LLM pipelines, and RAG.&lt;/p&gt; 
&lt;p&gt;Pathway comes with an &lt;strong&gt;easy-to-use Python API&lt;/strong&gt;, allowing you to seamlessly integrate your favorite Python ML libraries. Pathway code is versatile and robust: &lt;strong&gt;you can use it in both development and production environments, handling both batch and streaming data effectively&lt;/strong&gt;. The same code can be used for local development, CI/CD tests, running batch jobs, handling stream replays, and processing data streams.&lt;/p&gt; 
&lt;p&gt;Pathway is powered by a &lt;strong&gt;scalable Rust engine&lt;/strong&gt; based on Differential Dataflow and performs incremental computation. Your Pathway code, despite being written in Python, is run by the Rust engine, enabling multithreading, multiprocessing, and distributed computations. All the pipeline is kept in memory and can be easily deployed with &lt;strong&gt;Docker and Kubernetes&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;You can install Pathway with pip:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pip install -U pathway
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For any questions, you will find the community and team behind the project &lt;a href="https://discord.com/invite/pathway"&gt;on Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Use-cases and templates&lt;/h2&gt; 
&lt;p&gt;Ready to see what Pathway can do?&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pathway.com/developers/templates"&gt;Try one of our easy-to-run examples&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Available in both notebook and docker formats, these ready-to-launch examples can be launched in just a few clicks. Pick one and start your hands-on experience with Pathway today!&lt;/p&gt; 
&lt;h3&gt;Event processing and real-time analytics pipelines&lt;/h3&gt; 
&lt;p&gt;With its unified engine for batch and streaming and its full Python compatibility, Pathway makes data processing as easy as possible. It's the ideal solution for a wide range of data processing pipelines, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://pathway.com/developers/templates/kafka-etl"&gt;Showcase: Real-time ETL.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pathway.com/developers/templates/realtime-log-monitoring"&gt;Showcase: Event-driven pipelines with alerting.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pathway.com/developers/templates/linear_regression_with_kafka"&gt;Showcase: Realtime analytics.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pathway.com/developers/user-guide/connecting-to-data/switch-from-batch-to-streaming"&gt;Docs: Switch from batch to streaming.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;AI Pipelines&lt;/h3&gt; 
&lt;p&gt;Pathway provides dedicated LLM tooling to build live LLM and RAG pipelines. Wrappers for most common LLM services and utilities are included, making working with LLMs and RAGs pipelines incredibly easy. Check out our &lt;a href="https://pathway.com/developers/user-guide/llm-xpack/overview"&gt;LLM xpack documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Don't hesitate to try one of our runnable examples featuring LLM tooling. You can find such examples &lt;a href="https://pathway.com/developers/user-guide/llm-xpack/llm-examples"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://pathway.com/developers/templates/unstructured-to-structured"&gt;Template: Unstructured data to SQL on-the-fly.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pathway.com/developers/templates/private-rag-ollama-mistral"&gt;Template: Private RAG with Ollama and Mistral AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pathway.com/developers/templates/adaptive-rag"&gt;Template: Adaptive RAG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pathway.com/developers/templates/multimodal-rag"&gt;Template: Multimodal RAG with gpt-4o&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;A wide range of connectors&lt;/strong&gt;: Pathway comes with connectors that connect to external data sources such as Kafka, GDrive, PostgreSQL, or SharePoint. Its Airbyte connector allows you to connect to more than 300 different data sources. If the connector you want is not available, you can build your own custom connector using Pathway Python connector.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Stateless and stateful transformations&lt;/strong&gt;: Pathway supports stateful transformations such as joins, windowing, and sorting. It provides many transformations directly implemented in Rust. In addition to the provided transformation, you can use any Python function. You can implement your own or you can use any Python library to process your data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Persistence&lt;/strong&gt;: Pathway provides persistence to save the state of the computation. This allows you to restart your pipeline after an update or a crash. Your pipelines are in good hands with Pathway!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt;: Pathway handles the time for you, making sure all your computations are consistent. In particular, Pathway manages late and out-of-order points by updating its results whenever new (or late, in this case) data points come into the system. The free version of Pathway gives the "at least once" consistency while the enterprise version provides the "exactly once" consistency.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable Rust engine&lt;/strong&gt;: with Pathway Rust engine, you are free from the usual limits imposed by Python. You can easily do multithreading, multiprocessing, and distributed computations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LLM helpers&lt;/strong&gt;: Pathway provides an LLM extension with all the utilities to integrate LLMs with your data pipelines (LLM wrappers, parsers, embedders, splitters), including an in-memory real-time Vector Index, and integrations with LLamaIndex and LangChain. You can quickly build and deploy RAG applications with your live documents.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;a id="getting-started"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;a id="installation"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Pathway requires Python 3.10 or above.&lt;/p&gt; 
&lt;p&gt;You can install the current release of Pathway using &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ pip install -U pathway
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;⚠️ Pathway is available on MacOS and Linux. Users of other systems should run Pathway on a Virtual Machine.&lt;/p&gt; 
&lt;h3&gt;Example: computing the sum of positive values in real time.&lt;a id="example"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import pathway as pw

# Define the schema of your data (Optional)
class InputSchema(pw.Schema):
  value: int

# Connect to your data using connectors
input_table = pw.io.csv.read(
  "./input/",
  schema=InputSchema
)

#Define your operations on the data
filtered_table = input_table.filter(input_table.value&amp;gt;=0)
result_table = filtered_table.reduce(
  sum_value = pw.reducers.sum(filtered_table.value)
)

# Load your results to external systems
pw.io.jsonlines.write(result_table, "output.jsonl")

# Run the computation
pw.run()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run Pathway &lt;a href="https://colab.research.google.com/drive/1aBIJ2HCng-YEUOMrr0qtj0NeZMEyRz55?usp=sharing"&gt;in Google Colab&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can find more examples &lt;a href="https://github.com/pathwaycom/pathway/tree/main/examples"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;a id="deployment"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;Locally&lt;a id="running-pathway-locally"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;To use Pathway, you only need to import it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import pathway as pw
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, you can easily create your processing pipeline, and let Pathway handle the updates. Once your pipeline is created, you can launch the computation on streaming data with a one-line command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;pw.run()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can then run your Pathway project (say, &lt;code&gt;main.py&lt;/code&gt;) just like a normal Python script: &lt;code&gt;$ python main.py&lt;/code&gt;. Pathway comes with a monitoring dashboard that allows you to keep track of the number of messages sent by each connector and the latency of the system. The dashboard also includes log messages.&lt;/p&gt; 
&lt;img src="https://d14l3brkh44201.cloudfront.net/pathway-dashboard.png" width="1326" alt="Pathway dashboard" /&gt; 
&lt;p&gt;Alternatively, you can use the pathway'ish version:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ pathway spawn python main.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pathway natively supports multithreading. To launch your application with 3 threads, you can do as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ pathway spawn --threads 3 python main.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To jumpstart a Pathway project, you can use our &lt;a href="https://github.com/pathwaycom/cookiecutter-pathway"&gt;cookiecutter template&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Docker&lt;a id="docker"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;You can easily run Pathway using docker.&lt;/p&gt; 
&lt;h4&gt;Pathway image&lt;/h4&gt; 
&lt;p&gt;You can use the &lt;a href="https://hub.docker.com/r/pathwaycom/pathway"&gt;Pathway docker image&lt;/a&gt;, using a Dockerfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-dockerfile"&gt;FROM pathwaycom/pathway:latest

WORKDIR /app

COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

CMD [ "python", "./your-script.py" ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can then build and run the Docker image:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker build -t my-pathway-app .
docker run -it --rm --name my-pathway-app my-pathway-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Run a single Python script&lt;/h4&gt; 
&lt;p&gt;When dealing with single-file projects, creating a full-fledged &lt;code&gt;Dockerfile&lt;/code&gt; might seem unnecessary. In such scenarios, you can execute a Python script directly using the Pathway Docker image. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker run -it --rm --name my-pathway-app -v "$PWD":/app pathwaycom/pathway:latest python my-pathway-app.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Python docker image&lt;/h4&gt; 
&lt;p&gt;You can also use a standard Python image and install Pathway using pip with a Dockerfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-dockerfile"&gt;FROM --platform=linux/x86_64 python:3.10

RUN pip install -U pathway
COPY ./pathway-script.py pathway-script.py

CMD ["python", "-u", "pathway-script.py"]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Kubernetes and cloud&lt;a id="k8s"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Docker containers are ideally suited for deployment on the cloud with Kubernetes. If you want to scale your Pathway application, you may be interested in our Pathway for Enterprise. Pathway for Enterprise is specially tailored towards end-to-end data processing and real time intelligent analytics. It scales using distributed computing on the cloud and supports distributed Kubernetes deployment, with external persistence setup.&lt;/p&gt; 
&lt;p&gt;You can easily deploy Pathway using services like Render: see &lt;a href="https://pathway.com/developers/user-guide/deployment/render-deploy/"&gt;how to deploy Pathway in a few clicks&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are interested, don't hesitate to &lt;a href="mailto:contact@pathway.com"&gt;contact us&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Performance&lt;a id="performance"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Pathway is made to outperform state-of-the-art technologies designed for streaming and batch data processing tasks, including: Flink, Spark, and Kafka Streaming. It also makes it possible to implement a lot of algorithms/UDF's in streaming mode which are not readily supported by other streaming frameworks (especially: temporal joins, iterative graph algorithms, machine learning routines).&lt;/p&gt; 
&lt;p&gt;If you are curious, here are &lt;a href="https://github.com/pathwaycom/pathway-benchmarks"&gt;some benchmarks to play with&lt;/a&gt;.&lt;/p&gt; 
&lt;img src="https://github.com/pathwaycom/pathway-benchmarks/raw/main/images/bm-wordcount-lineplot.png" width="1326" alt="WordCount Graph" /&gt; 
&lt;h2&gt;Documentation and Support&lt;a id="resources"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;The entire documentation of Pathway is available at &lt;a href="https://pathway.com/developers/user-guide/introduction/welcome"&gt;pathway.com/developers/&lt;/a&gt;, including the &lt;a href="https://pathway.com/developers/api-docs/pathway"&gt;API Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you have any question, don't hesitate to &lt;a href="https://github.com/pathwaycom/pathway/issues"&gt;open an issue on GitHub&lt;/a&gt;, join us on &lt;a href="https://discord.com/invite/pathway"&gt;Discord&lt;/a&gt;, or send us an email at &lt;a href="mailto:contact@pathway.com"&gt;contact@pathway.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;a id="license"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Pathway is distributed on a &lt;a href="https://github.com/pathwaycom/pathway/raw/main/LICENSE.txt"&gt;BSL 1.1 License&lt;/a&gt; which allows for unlimited non-commercial use, as well as use of the Pathway package &lt;a href="https://pathway.com/license/"&gt;for most commercial purposes&lt;/a&gt;, free of charge. Code in this repository automatically converts to Open Source (Apache 2.0 License) after 4 years. Some &lt;a href="https://github.com/pathwaycom"&gt;public repos&lt;/a&gt; which are complementary to this one (examples, libraries, connectors, etc.) are licensed as Open Source, under the MIT license.&lt;/p&gt; 
&lt;h2&gt;Contribution guidelines&lt;a id="contribution-guidelines"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;If you develop a library or connector which you would like to integrate with this repo, we suggest releasing it first as a separate repo on a MIT/Apache 2.0 license.&lt;/p&gt; 
&lt;p&gt;For all concerns regarding core Pathway functionalities, Issues are encouraged. For further information, don't hesitate to engage with Pathway's &lt;a href="https://discord.gg/pathway"&gt;Discord community&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/agent-framework</title>
      <link>https://github.com/microsoft/agent-framework</link>
      <description>&lt;p&gt;A framework for building, orchestrating and deploying AI agents and multi-agent workflows with support for Python and .NET.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/agent-framework/main/docs/assets/readme-banner.png" alt="Microsoft Agent Framework" /&gt;&lt;/p&gt; 
&lt;h1&gt;Welcome to Microsoft Agent Framework!&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/b5zjErwbQM"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/b5zjErwbQM?style=flat" alt="Microsoft Azure AI Foundry Discord" /&gt;&lt;/a&gt; &lt;a href="https://learn.microsoft.com/en-us/agent-framework/"&gt;&lt;img src="https://img.shields.io/badge/MS%20Learn-Documentation-blue" alt="MS Learn Documentation" /&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/agent-framework/"&gt;&lt;img src="https://img.shields.io/pypi/v/agent-framework" alt="PyPI" /&gt;&lt;/a&gt; &lt;a href="https://www.nuget.org/profiles/MicrosoftAgentFramework/"&gt;&lt;img src="https://img.shields.io/nuget/v/Microsoft.Agents.AI" alt="NuGet" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Welcome to Microsoft's comprehensive multi-language framework for building, orchestrating, and deploying AI agents with support for both .NET and Python implementations. This framework provides everything from simple chat agents to complex multi-agent workflows with graph-based orchestration.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.youtube.com/watch?v=AAgdMhftj8w" title="Watch the full Agent Framework introduction (30 min)"&gt; &lt;img src="https://img.youtube.com/vi/AAgdMhftj8w/hqdefault.jpg" alt="Watch the full Agent Framework introduction (30 min)" width="480" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.youtube.com/watch?v=AAgdMhftj8w"&gt; Watch the full Agent Framework introduction (30 min) &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;📋 Getting Started&lt;/h2&gt; 
&lt;h3&gt;📦 Installation&lt;/h3&gt; 
&lt;p&gt;Python&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install agent-framework --pre
# This will install all sub-packages, see `python/packages` for individual packages.
# It may take a minute on first install on Windows.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;.NET&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dotnet add package Microsoft.Agents.AI
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;📚 Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://learn.microsoft.com/agent-framework/overview/agent-framework-overview"&gt;Overview&lt;/a&gt;&lt;/strong&gt; - High level overview of the framework&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://learn.microsoft.com/agent-framework/tutorials/quick-start"&gt;Quick Start&lt;/a&gt;&lt;/strong&gt; - Get started with a simple agent&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://learn.microsoft.com/agent-framework/tutorials/overview"&gt;Tutorials&lt;/a&gt;&lt;/strong&gt; - Step by step tutorials&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://learn.microsoft.com/en-us/agent-framework/user-guide/overview"&gt;User Guide&lt;/a&gt;&lt;/strong&gt; - In-depth user guide for building agents and workflows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://learn.microsoft.com/en-us/agent-framework/migration-guide/from-semantic-kernel"&gt;Migration from Semantic Kernel&lt;/a&gt;&lt;/strong&gt; - Guide to migrate from Semantic Kernel&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://learn.microsoft.com/en-us/agent-framework/migration-guide/from-autogen"&gt;Migration from AutoGen&lt;/a&gt;&lt;/strong&gt; - Guide to migrate from AutoGen&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;✨ &lt;strong&gt;Highlights&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Graph-based Workflows&lt;/strong&gt;: Connect agents and deterministic functions using data flows with streaming, checkpointing, human-in-the-loop, and time-travel capabilities 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/samples/getting_started/workflows/"&gt;Python workflows&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/samples/GettingStarted/Workflows/"&gt;.NET workflows&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AF Labs&lt;/strong&gt;: Experimental packages for cutting-edge features including benchmarking, reinforcement learning, and research initiatives 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/packages/lab/"&gt;Labs directory&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DevUI&lt;/strong&gt;: Interactive developer UI for agent development, testing, and debugging workflows 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/packages/devui/"&gt;DevUI package&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.youtube.com/watch?v=mOAaGY4WPvc"&gt; &lt;img src="https://img.youtube.com/vi/mOAaGY4WPvc/hqdefault.jpg" alt="See the DevUI in action" width="480" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.youtube.com/watch?v=mOAaGY4WPvc"&gt; See the DevUI in action (1 min) &lt;/a&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Python and C#/.NET Support&lt;/strong&gt;: Full framework support for both Python and C#/.NET implementations with consistent APIs 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/packages/"&gt;Python packages&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/src/"&gt;.NET source&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Observability&lt;/strong&gt;: Built-in OpenTelemetry integration for distributed tracing, monitoring, and debugging 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/samples/getting_started/observability/"&gt;Python observability&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/samples/GettingStarted/AgentOpenTelemetry/"&gt;.NET telemetry&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple Agent Provider Support&lt;/strong&gt;: Support for various LLM providers with more being added continuously 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/samples/getting_started/agents/"&gt;Python examples&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/samples/GettingStarted/AgentProviders/"&gt;.NET examples&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Middleware&lt;/strong&gt;: Flexible middleware system for request/response processing, exception handling, and custom pipelines 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/samples/getting_started/middleware/"&gt;Python middleware&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/samples/GettingStarted/Agents/Agent_Step14_Middleware/"&gt;.NET middleware&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💬 &lt;strong&gt;We want your feedback!&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;For bugs, please file a &lt;a href="https://github.com/microsoft/agent-framework/issues"&gt;GitHub issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;h3&gt;Basic Agent - Python&lt;/h3&gt; 
&lt;p&gt;Create a simple Azure Responses Agent that writes a haiku about the Microsoft Agent Framework&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# pip install agent-framework --pre
# Use `az login` to authenticate with Azure CLI
import os
import asyncio
from agent_framework.azure import AzureOpenAIResponsesClient
from azure.identity import AzureCliCredential


async def main():
    # Initialize a chat agent with Azure OpenAI Responses
    # the endpoint, deployment name, and api version can be set via environment variables
    # or they can be passed in directly to the AzureOpenAIResponsesClient constructor
    agent = AzureOpenAIResponsesClient(
        # endpoint=os.environ["AZURE_OPENAI_ENDPOINT"],
        # deployment_name=os.environ["AZURE_OPENAI_RESPONSES_DEPLOYMENT_NAME"],
        # api_version=os.environ["AZURE_OPENAI_API_VERSION"],
        # api_key=os.environ["AZURE_OPENAI_API_KEY"],  # Optional if using AzureCliCredential
        credential=AzureCliCredential(), # Optional, if using api_key
    ).create_agent(
        name="HaikuBot",
        instructions="You are an upbeat assistant that writes beautifully.",
    )

    print(await agent.run("Write a haiku about Microsoft Agent Framework."))

if __name__ == "__main__":
    asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Basic Agent - .NET&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-c#"&gt;// dotnet add package Microsoft.Agents.AI.OpenAI --prerelease
// dotnet add package Azure.AI.OpenAI
// dotnet add package Azure.Identity
// Use `az login` to authenticate with Azure CLI
using System;
using Azure.AI.OpenAI;
using Azure.Identity;
using Microsoft.Agents.AI;
using OpenAI;

var endpoint = Environment.GetEnvironmentVariable("AZURE_OPENAI_ENDPOINT")!;
var deploymentName = Environment.GetEnvironmentVariable("AZURE_OPENAI_DEPLOYMENT_NAME")!;

var agent = new AzureOpenAIClient(new Uri(endpoint), new AzureCliCredential())
    .GetOpenAIResponseClient(deploymentName)
    .CreateAIAgent(name: "HaikuBot", instructions: "You are an upbeat assistant that writes beautifully.");

Console.WriteLine(await agent.RunAsync("Write a haiku about Microsoft Agent Framework."));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;More Examples &amp;amp; Samples&lt;/h2&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/samples/getting_started/agents"&gt;Getting Started with Agents&lt;/a&gt;: basic agent creation and tool usage&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/samples/getting_started/chat_client"&gt;Chat Client Examples&lt;/a&gt;: direct chat client usage patterns&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/samples/getting_started/workflows"&gt;Getting Started with Workflows&lt;/a&gt;: basic workflow creation and integration with agents&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;.NET&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/samples/GettingStarted/Agents"&gt;Getting Started with Agents&lt;/a&gt;: basic agent creation and tool usage&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/samples/GettingStarted/AgentProviders"&gt;Agent Provider Samples&lt;/a&gt;: samples showing different agent providers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/samples/GettingStarted/Workflows"&gt;Workflow Samples&lt;/a&gt;: advanced multi-agent patterns and workflow orchestration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributor Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/DEV_SETUP.md"&gt;Python Development Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/docs/design"&gt;Design Documents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/docs/decisions"&gt;Architectural Decision Records&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Important Notes&lt;/h2&gt; 
&lt;p&gt;If you use the Microsoft Agent Framework to build applications that operate with third-party servers or agents, you do so at your own risk. We recommend reviewing all data being shared with third-party servers or agents and being cognizant of third-party practices for retention and location of data. It is your responsibility to manage whether your data will flow outside of your organization's Azure compliance and geographic boundaries and any related implications.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pathwaycom/llm-app</title>
      <link>https://github.com/pathwaycom/llm-app</link>
      <description>&lt;p&gt;Ready-to-run cloud templates for RAG, AI pipelines, and enterprise search with live data. 🐳Docker-friendly.⚡Always in sync with Sharepoint, Google Drive, S3, Kafka, PostgreSQL, real-time data APIs, and more.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;Pathway AI Pipelines&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/4400" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/4400" alt="pathwaycom%2Fllm-app | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&amp;amp;logo=linux&amp;amp;logoColor=black" alt="Linux" /&gt; &lt;img src="https://img.shields.io/badge/mac%20os-000000?style=for-the-badge&amp;amp;logo=apple&amp;amp;logoColor=white" alt="macOS" /&gt; &lt;a href="https://discord.gg/pathway"&gt;&lt;img src="https://img.shields.io/badge/Discord-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="chat on Discord" /&gt;&lt;/a&gt; &lt;a href="https://x.com/intent/follow?screen_name=pathway_com"&gt;&lt;img src="https://img.shields.io/badge/X-000000?style=for-the-badge&amp;amp;logo=x&amp;amp;logoColor=white" alt="follow on X" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Pathway's &lt;strong&gt;AI Pipelines&lt;/strong&gt; allow you to quickly put in production AI applications that offer &lt;strong&gt;high-accuracy RAG and AI enterprise search at scale&lt;/strong&gt; using the most &lt;strong&gt;up-to-date knowledge&lt;/strong&gt; available in your data sources. It provides you ready-to-deploy &lt;strong&gt;LLM (Large Language Model) App Templates&lt;/strong&gt;. You can test them on your own machine and deploy on-cloud (GCP, AWS, Azure, Render,...) or on-premises.&lt;/p&gt; 
&lt;p&gt;The apps connect and sync (all new data additions, deletions, updates) with data sources on your &lt;strong&gt;file system, Google Drive, Sharepoint, S3, Kafka, PostgreSQL, real-time data APIs&lt;/strong&gt;. They come with no infrastructure dependencies that would need a separate setup. They include &lt;strong&gt;built-in data indexing&lt;/strong&gt; enabling vector search, hybrid search, and full-text search - all done in-memory, with cache.&lt;/p&gt; 
&lt;h2&gt;Application Templates&lt;/h2&gt; 
&lt;p&gt;The application templates provided in this repo scale up to &lt;strong&gt;millions of pages of documents&lt;/strong&gt;. Some of them are optimized for simplicity, some are optimized for amazing accuracy. Pick the one that suits you best. You can use it out of the box, or change some steps of the pipeline - for example, if you would like to add a new data source, or change a Vector Index into a Hybrid Index, it's just a one-line change.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Application (template)&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/demo-question-answering/"&gt;&lt;code&gt;Question-Answering RAG App&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Basic end-to-end RAG app. A question-answering pipeline that uses the GPT model of choice to provide answers to queries to your documents (PDF, DOCX,...) on a live connected data source (files, Google Drive, Sharepoint,...). You can also try out a &lt;a href="https://pathway.com/solutions/rag-pipelines#try-it-out"&gt;demo REST endpoint&lt;/a&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/demo-document-indexing/"&gt;&lt;code&gt;Live Document Indexing (Vector Store / Retriever)&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A real-time document indexing pipeline for RAG that acts as a vector store service. It performs live indexing on your documents (PDF, DOCX,...) from a connected data source (files, Google Drive, Sharepoint,...). It can be used with any frontend, or integrated as a retriever backend for a &lt;a href="https://pathway.com/blog/langchain-integration"&gt;Langchain&lt;/a&gt; or &lt;a href="https://pathway.com/blog/llamaindex-pathway"&gt;Llamaindex&lt;/a&gt; application. You can also try out a &lt;a href="https://pathway.com/solutions/ai-contract-management#try-it-out"&gt;demo REST endpoint&lt;/a&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/gpt_4o_multimodal_rag/"&gt;&lt;code&gt;Multimodal RAG pipeline with GPT4o&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Multimodal RAG using GPT-4o in the parsing stage to index PDFs and other documents from a connected data source files, Google Drive, Sharepoint,...). It is perfect for extracting information from unstructured financial documents in your folders (including charts and tables), updating results as documents change or new ones arrive.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/unstructured_to_sql_on_the_fly/"&gt;&lt;code&gt;Unstructured-to-SQL pipeline + SQL question-answering&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A RAG example which connects to unstructured financial data sources (financial report PDFs), structures the data into SQL, and loads it into a PostgreSQL table. It also answers natural language user queries to these financial documents by translating them into SQL using an LLM and executing the query on the PostgreSQL table.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/adaptive-rag/"&gt;&lt;code&gt;Adaptive RAG App&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A RAG application using Adaptive RAG, a technique developed by Pathway to reduce token cost in RAG up to 4x while maintaining accuracy.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/private-rag/"&gt;&lt;code&gt;Private RAG App with Mistral and Ollama&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A fully private (local) version of the &lt;code&gt;demo-question-answering&lt;/code&gt; RAG pipeline using Pathway, Mistral, and Ollama.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/slides_ai_search/"&gt;&lt;code&gt;Slides AI Search App&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;An indexing pipeline for retrieving slides. It performs multi-modal of PowerPoint and PDF and maintains live index of your slides."&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;How do these AI Pipelines work?&lt;/h2&gt; 
&lt;p&gt;The apps can be run as &lt;strong&gt;Docker containers&lt;/strong&gt;, and expose an &lt;strong&gt;HTTP API&lt;/strong&gt; to connect the frontend. To allow quick testing and demos, some app templates also include an optional Streamlit UI which connects to this API.&lt;/p&gt; 
&lt;p&gt;The apps rely on the &lt;a href="https://github.com/pathwaycom/pathway"&gt;Pathway Live Data framework&lt;/a&gt; for data source synchronization and for serving API requests (Pathway is a standalone Python library with a Rust engine built into it). They bring you a &lt;strong&gt;simple and unified application logic&lt;/strong&gt; for back-end, embedding, retrieval, LLM tech stack. There is no need to integrate and maintain separate modules for your Gen AI app: &lt;del&gt;Vector Database (e.g. Pinecone/Weaviate/Qdrant) + Cache (e.g. Redis) + API Framework (e.g. Fast API)&lt;/del&gt;. Pathway's default choice of &lt;strong&gt;built-in vector index&lt;/strong&gt; is based on the lightning-fast &lt;a href="https://github.com/unum-cloud/usearch"&gt;usearch&lt;/a&gt; library, and &lt;strong&gt;hybrid full-text indexes&lt;/strong&gt; make use of &lt;a href="https://github.com/quickwit-oss/tantivy"&gt;Tantivy&lt;/a&gt; library. Everything works out of the box.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Each of the &lt;a href="https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/"&gt;App templates&lt;/a&gt; in this repo contains a README.md with instructions on how to run it.&lt;/p&gt; 
&lt;p&gt;You can also find &lt;a href="https://pathway.com/developers/templates/"&gt;more ready-to-run code templates&lt;/a&gt; on the Pathway website.&lt;/p&gt; 
&lt;h2&gt;Some visual highlights&lt;/h2&gt; 
&lt;p&gt;Effortlessly extract and organize table and chart data from PDFs, docs, and more with multimodal RAG - in real-time:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/pathwaycom/llm-app/raw/main/examples/pipelines/gpt_4o_multimodal_rag/gpt4o_with_pathway_comparison.gif" alt="Effortlessly extract and organize table and chart data from PDFs, docs, and more with multimodal RAG - in real-time" /&gt;&lt;/p&gt; 
&lt;p&gt;(Check out &lt;a href="https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/gpt_4o_multimodal_rag/"&gt;&lt;code&gt;Multimodal RAG pipeline with GPT4o&lt;/code&gt;&lt;/a&gt; to see the whole pipeline in the works. You may also check out the &lt;a href="https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/unstructured_to_sql_on_the_fly/"&gt;&lt;code&gt;Unstructured-to-SQL pipeline&lt;/code&gt;&lt;/a&gt; for a minimal example that works with non-multimodal models as well.)&lt;/p&gt; 
&lt;p&gt;Automated real-time knowledge mining and alerting:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/pathwaycom/llm-app/main/examples/pipelines/drive_alert/drive_alert_demo.gif" alt="Automated real-time knowledge mining and alerting" /&gt;&lt;/p&gt; 
&lt;p&gt;(Check out the &lt;a href="https://github.com/pathwaycom/llm-app/tree/main/examples/pipelines/drive_alert"&gt;&lt;code&gt;Alerting when answers change on Google Drive&lt;/code&gt;&lt;/a&gt; app example.)&lt;/p&gt; 
&lt;h3&gt;Do-it-Yourself Videos&lt;/h3&gt; 
&lt;p&gt;▶️ &lt;a href="https://www.youtube.com/watch?v=kcrJSk00duw"&gt;An introduction to building LLM apps with Pathway&lt;/a&gt; - by &lt;a href="https://scholar.google.com/citations?user=Yc94070AAAAJ"&gt;Jan Chorowski&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;▶️ &lt;a href="https://www.youtube.com/watch?v=k1XGo7ts4tI"&gt;Let's build a real-world LLM app in 11 minutes&lt;/a&gt; - by &lt;a href="https://substack.com/@paulabartabajo"&gt;Pau Labarta Bajo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;To provide feedback or report a bug, please &lt;a href="https://github.com/pathwaycom/pathway/issues"&gt;raise an issue on our issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Anyone who wishes to contribute to this project, whether documentation, features, bug fixes, code cleanup, testing, or code reviews, is very much encouraged to do so. If this is your first contribution to a GitHub project, here is a &lt;a href="https://docs.github.com/en/get-started/quickstart/contributing-to-projects"&gt;Get Started Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you'd like to make a contribution that needs some more work, just raise your hand on the &lt;a href="https://discord.com/invite/pathway"&gt;Pathway Discord server&lt;/a&gt; (#get-help) and let us know what you are planning!&lt;/p&gt; 
&lt;h2&gt;Supported and maintained by&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/pathwaycom/"&gt;&lt;img src="https://pathway.com/logo-light.svg?sanitize=true" alt="Pathway" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://pathway.com/solutions/llm-app"&gt; &lt;img src="https://img.shields.io/badge/See%20Pathway's%20offering%20for%20AI%20applications-0000FF" alt="See Pathway's offering for AI applications" /&gt; &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hsliuping/TradingAgents-CN</title>
      <link>https://github.com/hsliuping/TradingAgents-CN</link>
      <description>&lt;p&gt;基于多智能体LLM的中文金融交易框架 - TradingAgents中文增强版&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TradingAgents 中文增强版&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://www.python.org/"&gt;&lt;img src="https://img.shields.io/badge/Python-3.10%2B-blue.svg?sanitize=true" alt="Python" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/VERSION"&gt;&lt;img src="https://img.shields.io/badge/Version-cn--0.1.15-green.svg?sanitize=true" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/"&gt;&lt;img src="https://img.shields.io/badge/docs-%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3-green.svg?sanitize=true" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TauricResearch/TradingAgents"&gt;&lt;img src="https://img.shields.io/badge/%E5%9F%BA%E4%BA%8E-TauricResearch/TradingAgents-orange.svg?sanitize=true" alt="Original" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🚀 &lt;strong&gt;最新版本 cn-0.1.15&lt;/strong&gt;: 开发者体验与LLM生态系统大升级！新增千帆大模型支持、完整开发工具链、学术研究资料、企业级工作流规范！&lt;/p&gt; 
 &lt;p&gt;🎯 &lt;strong&gt;核心功能&lt;/strong&gt;: 原生OpenAI支持 | Google AI全面集成 | 自定义端点配置 | 智能模型选择 | 多LLM提供商支持 | 模型选择持久化 | Docker容器化部署 | 专业报告导出 | 完整A股支持 | 中文本地化&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;基于多智能体大语言模型的&lt;strong&gt;中文金融交易决策框架&lt;/strong&gt;。专为中文用户优化，提供完整的A股/港股/美股分析能力。&lt;/p&gt; 
&lt;h2&gt;🙏 致敬源项目&lt;/h2&gt; 
&lt;p&gt;感谢 &lt;a href="https://github.com/TauricResearch"&gt;Tauric Research&lt;/a&gt; 团队创造的革命性多智能体交易框架 &lt;a href="https://github.com/TauricResearch/TradingAgents"&gt;TradingAgents&lt;/a&gt;！&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🎯 我们的使命&lt;/strong&gt;: 为中国用户提供完整的中文化体验，支持A股/港股市场，集成国产大模型，推动AI金融技术在中文社区的普及应用。&lt;/p&gt; 
&lt;h2&gt;🆕 v0.1.15 重大更新&lt;/h2&gt; 
&lt;h3&gt;🤖 LLM生态系统大升级&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;千帆大模型支持&lt;/strong&gt;: 新增百度千帆(ERNIE)大模型完整集成&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LLM适配器重构&lt;/strong&gt;: 统一的OpenAI兼容适配器架构&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;多厂商支持&lt;/strong&gt;: 支持更多国产大模型提供商&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;集成指南&lt;/strong&gt;: 完整的LLM集成开发文档和测试工具&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📚 学术研究支持&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;TradingAgents论文&lt;/strong&gt;: 完整的中文翻译版本和深度解读&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;技术博客&lt;/strong&gt;: 详细的技术分析和实现原理解读&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;学术资料&lt;/strong&gt;: PDF论文和相关研究资料&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;引用支持&lt;/strong&gt;: 标准的学术引用格式和参考文献&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛠️ 开发者体验升级&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;开发工作流&lt;/strong&gt;: 标准化的开发流程和分支管理规范&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;安装验证&lt;/strong&gt;: 完整的安装测试和验证脚本&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;文档重构&lt;/strong&gt;: 结构化的文档系统和快速开始指南&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;PR模板&lt;/strong&gt;: 标准化的Pull Request模板和代码审查流程&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔧 企业级工具链&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;分支保护&lt;/strong&gt;: GitHub分支保护策略和安全规则&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;紧急程序&lt;/strong&gt;: 完整的紧急处理和故障恢复程序&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;测试框架&lt;/strong&gt;: 增强的测试覆盖和验证工具&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;部署指南&lt;/strong&gt;: 企业级部署和配置管理&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📋 v0.1.14 功能回顾&lt;/h2&gt; 
&lt;h3&gt;👥 用户权限管理系统&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;完整用户管理&lt;/strong&gt;: 新增用户注册、登录、权限控制功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;角色权限&lt;/strong&gt;: 支持多级用户角色和权限管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;会话管理&lt;/strong&gt;: 安全的用户会话和状态管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;用户活动日志&lt;/strong&gt;: 完整的用户操作记录和审计功能&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔐 Web用户认证系统&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;登录组件&lt;/strong&gt;: 现代化的用户登录界面&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;认证管理器&lt;/strong&gt;: 统一的用户认证和授权管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;安全增强&lt;/strong&gt;: 密码加密、会话安全等安全机制&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;用户仪表板&lt;/strong&gt;: 个性化的用户活动仪表板&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🗄️ 数据管理优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;MongoDB集成增强&lt;/strong&gt;: 改进的MongoDB连接和数据管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;数据目录重组&lt;/strong&gt;: 优化的数据存储结构和管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;数据迁移脚本&lt;/strong&gt;: 完整的数据迁移和备份工具&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;缓存优化&lt;/strong&gt;: 提升数据加载和分析结果缓存性能&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧪 测试覆盖增强&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;功能测试脚本&lt;/strong&gt;: 新增6个专项功能测试脚本&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;工具处理器测试&lt;/strong&gt;: Google工具处理器修复验证&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;引导自动隐藏测试&lt;/strong&gt;: UI交互功能测试&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;在线工具配置测试&lt;/strong&gt;: 工具配置和选择逻辑测试&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;真实场景测试&lt;/strong&gt;: 实际使用场景的端到端测试&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;美股独立性测试&lt;/strong&gt;: 美股分析功能独立性验证&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🆕 v0.1.13 重大更新&lt;/h2&gt; 
&lt;h3&gt;🤖 原生OpenAI端点支持&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;自定义OpenAI端点&lt;/strong&gt;: 支持配置任意OpenAI兼容的API端点&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;灵活模型选择&lt;/strong&gt;: 可以使用任何OpenAI格式的模型，不限于官方模型&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;智能适配器&lt;/strong&gt;: 新增原生OpenAI适配器，提供更好的兼容性和性能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;配置管理&lt;/strong&gt;: 统一的端点和模型配置管理系统&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧠 Google AI生态系统全面集成&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;三大Google AI包支持&lt;/strong&gt;: langchain-google-genai、google-generativeai、google-genai&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;9个验证模型&lt;/strong&gt;: gemini-2.5-pro, gemini-2.5-flash, gemini-2.0-flash等最新模型&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Google工具处理器&lt;/strong&gt;: 专门的Google AI工具调用处理器&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;智能降级机制&lt;/strong&gt;: 高级功能失败时自动降级到基础功能&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔧 LLM适配器架构优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GoogleOpenAIAdapter&lt;/strong&gt;: 新增Google AI的OpenAI兼容适配器&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;统一接口&lt;/strong&gt;: 所有LLM提供商使用统一的调用接口&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;错误处理增强&lt;/strong&gt;: 改进的异常处理和自动重试机制&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;性能监控&lt;/strong&gt;: 添加LLM调用性能监控和统计&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎨 Web界面智能优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;智能模型选择&lt;/strong&gt;: 根据可用性自动选择最佳模型&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KeyError修复&lt;/strong&gt;: 彻底解决模型选择中的KeyError问题&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UI响应优化&lt;/strong&gt;: 改进模型切换的响应速度和用户体验&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;错误提示&lt;/strong&gt;: 更友好的错误提示和解决建议&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🆕 v0.1.12 重大更新&lt;/h2&gt; 
&lt;h3&gt;🧠 智能新闻分析模块&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;智能新闻过滤器&lt;/strong&gt;: 基于AI的新闻相关性评分和质量评估&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;多层次过滤机制&lt;/strong&gt;: 基础过滤、增强过滤、集成过滤三级处理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;新闻质量评估&lt;/strong&gt;: 自动识别和过滤低质量、重复、无关新闻&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;统一新闻工具&lt;/strong&gt;: 整合多个新闻源，提供统一的新闻获取接口&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔧 技术修复和优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;DashScope适配器修复&lt;/strong&gt;: 解决工具调用兼容性问题&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DeepSeek死循环修复&lt;/strong&gt;: 修复新闻分析师的无限循环问题&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LLM工具调用增强&lt;/strong&gt;: 提升工具调用的可靠性和稳定性&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;新闻检索器优化&lt;/strong&gt;: 增强新闻数据获取和处理能力&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📚 完善测试和文档&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;全面测试覆盖&lt;/strong&gt;: 新增15+个测试文件，覆盖所有新功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;详细技术文档&lt;/strong&gt;: 新增8个技术分析报告和修复文档&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;用户指南完善&lt;/strong&gt;: 新增新闻过滤使用指南和最佳实践&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;演示脚本&lt;/strong&gt;: 提供完整的新闻过滤功能演示&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🗂️ 项目结构优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;文档分类整理&lt;/strong&gt;: 按功能将文档分类到docs子目录&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;示例代码归位&lt;/strong&gt;: 演示脚本统一到examples目录&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;根目录整洁&lt;/strong&gt;: 保持根目录简洁，提升项目专业度&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎯 核心特性&lt;/h2&gt; 
&lt;h3&gt;🤖 多智能体协作架构&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;专业分工&lt;/strong&gt;: 基本面、技术面、新闻面、社交媒体四大分析师&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;结构化辩论&lt;/strong&gt;: 看涨/看跌研究员进行深度分析&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;智能决策&lt;/strong&gt;: 交易员基于所有输入做出最终投资建议&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;风险管理&lt;/strong&gt;: 多层次风险评估和管理机制&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🖥️ Web界面展示&lt;/h2&gt; 
&lt;h3&gt;📸 界面截图&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🎨 &lt;strong&gt;现代化Web界面&lt;/strong&gt;: 基于Streamlit构建的响应式Web应用，提供直观的股票分析体验&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;🏠 主界面 - 分析配置&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003162925.png" alt="1755003162925" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002619976.png" alt="1755002619976" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;智能配置面板，支持多市场股票分析，5级研究深度选择&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;📊 实时分析进度&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002731483.png" alt="1755002731483" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;实时进度跟踪，可视化分析过程，智能时间预估&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;📈 分析结果展示&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002901204.png" alt="1755002901204" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002924844.png" alt="1755002924844" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002939905.png" alt="1755002939905" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002968608.png" alt="1755002968608" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002985903.png" alt="1755002985903" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003004403.png" alt="1755003004403" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003019759.png" alt="1755003019759" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003033939.png" alt="1755003033939" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003048242.png" alt="1755003048242" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003064598.png" alt="1755003064598" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003090603.png" alt="1755003090603" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;专业投资报告，多维度分析结果，一键导出功能&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;🎯 核心功能特色&lt;/h3&gt; 
&lt;h4&gt;📋 &lt;strong&gt;智能分析配置&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🌍 多市场支持&lt;/strong&gt;: 美股、A股、港股一站式分析&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 5级研究深度&lt;/strong&gt;: 从2分钟快速分析到25分钟全面研究&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🤖 智能体选择&lt;/strong&gt;: 市场技术、基本面、新闻、社交媒体分析师&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📅 灵活时间设置&lt;/strong&gt;: 支持历史任意时间点分析&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🚀 &lt;strong&gt;实时进度跟踪&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;📊 可视化进度&lt;/strong&gt;: 实时显示分析进展和剩余时间&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 智能步骤识别&lt;/strong&gt;: 自动识别当前分析阶段&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⏱️ 准确时间预估&lt;/strong&gt;: 基于历史数据的智能时间计算&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💾 状态持久化&lt;/strong&gt;: 页面刷新不丢失分析进度&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📈 &lt;strong&gt;专业结果展示&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 投资决策&lt;/strong&gt;: 明确的买入/持有/卖出建议&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 多维分析&lt;/strong&gt;: 技术面、基本面、新闻面综合评估&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔢 量化指标&lt;/strong&gt;: 置信度、风险评分、目标价位&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📄 专业报告&lt;/strong&gt;: 支持Markdown/Word/PDF格式导出&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🤖 &lt;strong&gt;多LLM模型管理&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 4大提供商&lt;/strong&gt;: DashScope、DeepSeek、Google AI、OpenRouter&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 60+模型选择&lt;/strong&gt;: 从经济型到旗舰级模型全覆盖&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💾 配置持久化&lt;/strong&gt;: URL参数存储，刷新保持设置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ 快速切换&lt;/strong&gt;: 5个热门模型一键选择按钮&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎮 Web界面操作指南&lt;/h3&gt; 
&lt;h4&gt;🚀 &lt;strong&gt;快速开始流程&lt;/strong&gt;&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;启动应用&lt;/strong&gt;: &lt;code&gt;python start_web.py&lt;/code&gt; 或 &lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;访问界面&lt;/strong&gt;: 浏览器打开 &lt;code&gt;http://localhost:8501&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;配置模型&lt;/strong&gt;: 侧边栏选择LLM提供商和模型&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;输入股票&lt;/strong&gt;: 输入股票代码（如 AAPL、000001、0700.HK）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;选择深度&lt;/strong&gt;: 根据需求选择1-5级研究深度&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;开始分析&lt;/strong&gt;: 点击"🚀 开始分析"按钮&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;查看结果&lt;/strong&gt;: 实时跟踪进度，查看分析报告&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;导出报告&lt;/strong&gt;: 一键导出专业格式报告&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;📊 &lt;strong&gt;支持的股票代码格式&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🇺🇸 美股&lt;/strong&gt;: &lt;code&gt;AAPL&lt;/code&gt;, &lt;code&gt;TSLA&lt;/code&gt;, &lt;code&gt;MSFT&lt;/code&gt;, &lt;code&gt;NVDA&lt;/code&gt;, &lt;code&gt;GOOGL&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🇨🇳 A股&lt;/strong&gt;: &lt;code&gt;000001&lt;/code&gt;, &lt;code&gt;600519&lt;/code&gt;, &lt;code&gt;300750&lt;/code&gt;, &lt;code&gt;002415&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🇭🇰 港股&lt;/strong&gt;: &lt;code&gt;0700.HK&lt;/code&gt;, &lt;code&gt;9988.HK&lt;/code&gt;, &lt;code&gt;3690.HK&lt;/code&gt;, &lt;code&gt;1810.HK&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🎯 &lt;strong&gt;研究深度说明&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;1级 (2-4分钟)&lt;/strong&gt;: 快速概览，基础技术指标&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2级 (4-6分钟)&lt;/strong&gt;: 标准分析，技术+基本面&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;3级 (6-10分钟)&lt;/strong&gt;: 深度分析，加入新闻情绪 ⭐ &lt;strong&gt;推荐&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4级 (10-15分钟)&lt;/strong&gt;: 全面分析，多轮智能体辩论&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;5级 (15-25分钟)&lt;/strong&gt;: 最深度分析，完整研究报告&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;💡 &lt;strong&gt;使用技巧&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 实时刷新&lt;/strong&gt;: 分析过程中可随时刷新页面，进度不丢失&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📱 移动适配&lt;/strong&gt;: 支持手机和平板设备访问&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎨 深色模式&lt;/strong&gt;: 自动适配系统主题设置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⌨️ 快捷键&lt;/strong&gt;: 支持Enter键快速提交分析&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📋 历史记录&lt;/strong&gt;: 自动保存最近的分析配置&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📖 &lt;strong&gt;详细指南&lt;/strong&gt;: 完整的Web界面使用说明请参考 &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/usage/web-interface-detailed-guide.md"&gt;🖥️ Web界面详细使用指南&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🎯 功能特性&lt;/h2&gt; 
&lt;h3&gt;🚀 智能新闻分析✨ &lt;strong&gt;v0.1.12重大升级&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能特性&lt;/th&gt; 
   &lt;th&gt;状态&lt;/th&gt; 
   &lt;th&gt;详细说明&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🧠 智能新闻分析&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🆕 v0.1.12&lt;/td&gt; 
   &lt;td&gt;AI新闻过滤，质量评估，相关性分析&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🔧 新闻过滤器&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🆕 v0.1.12&lt;/td&gt; 
   &lt;td&gt;多层次过滤，基础/增强/集成三级处理&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📰 统一新闻工具&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🆕 v0.1.12&lt;/td&gt; 
   &lt;td&gt;整合多源新闻，统一接口，智能检索&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🤖 多LLM提供商&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🆕 v0.1.11&lt;/td&gt; 
   &lt;td&gt;4大提供商，60+模型，智能分类管理&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;💾 模型选择持久化&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🆕 v0.1.11&lt;/td&gt; 
   &lt;td&gt;URL参数存储，刷新保持，配置分享&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🎯 快速选择按钮&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🆕 v0.1.11&lt;/td&gt; 
   &lt;td&gt;一键切换热门模型，提升操作效率&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📊 实时进度显示&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ v0.1.10&lt;/td&gt; 
   &lt;td&gt;异步进度跟踪，智能步骤识别，准确时间计算&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;💾 智能会话管理&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ v0.1.10&lt;/td&gt; 
   &lt;td&gt;状态持久化，自动降级，跨页面恢复&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🎯 一键查看报告&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ v0.1.10&lt;/td&gt; 
   &lt;td&gt;分析完成后一键查看，智能结果恢复&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🖥️ Streamlit界面&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ 完整支持&lt;/td&gt; 
   &lt;td&gt;现代化响应式界面，实时交互和数据可视化&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;⚙️ 配置管理&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ 完整支持&lt;/td&gt; 
   &lt;td&gt;Web端API密钥管理，模型选择，参数配置&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;🎨 CLI用户体验 ✨ &lt;strong&gt;v0.1.9优化&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能特性&lt;/th&gt; 
   &lt;th&gt;状态&lt;/th&gt; 
   &lt;th&gt;详细说明&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🖥️ 界面与日志分离&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ 完整支持&lt;/td&gt; 
   &lt;td&gt;用户界面清爽美观，技术日志独立管理&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🔄 智能进度显示&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ 完整支持&lt;/td&gt; 
   &lt;td&gt;多阶段进度跟踪，防止重复提示&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;⏱️ 时间预估功能&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ 完整支持&lt;/td&gt; 
   &lt;td&gt;智能分析阶段显示预计耗时&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🌈 Rich彩色输出&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ 完整支持&lt;/td&gt; 
   &lt;td&gt;彩色进度指示，状态图标，视觉效果提升&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;🧠 LLM模型支持 ✨ &lt;strong&gt;v0.1.13全面升级&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;模型提供商&lt;/th&gt; 
   &lt;th&gt;支持模型&lt;/th&gt; 
   &lt;th&gt;特色功能&lt;/th&gt; 
   &lt;th&gt;新增功能&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🇨🇳 阿里百炼&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;qwen-turbo/plus/max&lt;/td&gt; 
   &lt;td&gt;中文优化，成本效益高&lt;/td&gt; 
   &lt;td&gt;✅ 集成&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🇨🇳 DeepSeek&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;deepseek-chat&lt;/td&gt; 
   &lt;td&gt;工具调用，性价比极高&lt;/td&gt; 
   &lt;td&gt;✅ 集成&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🌍 Google AI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;9个验证模型&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;最新Gemini 2.5系列&lt;/td&gt; 
   &lt;td&gt;🆕 升级&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;├─&lt;strong&gt;最新旗舰&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;gemini-2.5-pro/flash&lt;/td&gt; 
   &lt;td&gt;最新旗舰，超快响应&lt;/td&gt; 
   &lt;td&gt;🆕 新增&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;├─&lt;strong&gt;稳定推荐&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;gemini-2.0-flash&lt;/td&gt; 
   &lt;td&gt;推荐使用，平衡性能&lt;/td&gt; 
   &lt;td&gt;🆕 新增&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;├─&lt;strong&gt;经典强大&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;gemini-1.5-pro/flash&lt;/td&gt; 
   &lt;td&gt;经典稳定，高质量分析&lt;/td&gt; 
   &lt;td&gt;✅ 集成&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;└─&lt;strong&gt;轻量快速&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;gemini-2.5-flash-lite&lt;/td&gt; 
   &lt;td&gt;轻量级任务，快速响应&lt;/td&gt; 
   &lt;td&gt;🆕 新增&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🌐 原生OpenAI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;自定义端点支持&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;任意OpenAI兼容端点&lt;/td&gt; 
   &lt;td&gt;🆕 新增&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🌐 OpenRouter&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;60+模型聚合平台&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;一个API访问所有主流模型&lt;/td&gt; 
   &lt;td&gt;✅ 集成&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;├─&lt;strong&gt;OpenAI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;o4-mini-high, o3-pro, GPT-4o&lt;/td&gt; 
   &lt;td&gt;最新o系列，推理专业版&lt;/td&gt; 
   &lt;td&gt;✅ 集成&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;├─&lt;strong&gt;Anthropic&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Claude 4 Opus/Sonnet/Haiku&lt;/td&gt; 
   &lt;td&gt;顶级性能，平衡版本&lt;/td&gt; 
   &lt;td&gt;✅ 集成&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;├─&lt;strong&gt;Meta&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Llama 4 Maverick/Scout&lt;/td&gt; 
   &lt;td&gt;最新Llama 4系列&lt;/td&gt; 
   &lt;td&gt;✅ 集成&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;└─&lt;strong&gt;自定义&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;任意OpenRouter模型ID&lt;/td&gt; 
   &lt;td&gt;无限扩展，个性化选择&lt;/td&gt; 
   &lt;td&gt;✅ 集成&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;🎯 快速选择&lt;/strong&gt;: 5个热门模型快速按钮 | &lt;strong&gt;💾 持久化&lt;/strong&gt;: URL参数存储，刷新保持 | &lt;strong&gt;🔄 智能切换&lt;/strong&gt;: 一键切换不同提供商&lt;/p&gt; 
&lt;h3&gt;📊 数据源与市场&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;市场类型&lt;/th&gt; 
   &lt;th&gt;数据源&lt;/th&gt; 
   &lt;th&gt;覆盖范围&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🇨🇳 A股&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Tushare, AkShare, 通达信&lt;/td&gt; 
   &lt;td&gt;沪深两市，实时行情，财报数据&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🇭🇰 港股&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;AkShare, Yahoo Finance&lt;/td&gt; 
   &lt;td&gt;港交所，实时行情，基本面&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🇺🇸 美股&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;FinnHub, Yahoo Finance&lt;/td&gt; 
   &lt;td&gt;NYSE, NASDAQ，实时数据&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📰 新闻&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Google News&lt;/td&gt; 
   &lt;td&gt;实时新闻，多语言支持&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;🤖 智能体团队&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;分析师团队&lt;/strong&gt;: 📈市场分析 | 💰基本面分析 | 📰新闻分析 | 💬情绪分析 &lt;strong&gt;研究团队&lt;/strong&gt;: 🐂看涨研究员 | 🐻看跌研究员 | 🎯交易决策员 &lt;strong&gt;管理层&lt;/strong&gt;: 🛡️风险管理员 | 👔研究主管&lt;/p&gt; 
&lt;h2&gt;🚀 快速开始&lt;/h2&gt; 
&lt;h3&gt;🐳 Docker部署 (推荐)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. 克隆项目
git clone https://github.com/hsliuping/TradingAgents-CN.git
cd TradingAgents-CN

# 2. 配置环境变量
cp .env.example .env
# 编辑 .env 文件，填入API密钥

# 3. 启动服务
# 首次启动或代码变更时（需要构建镜像）
docker-compose up -d --build

# 日常启动（镜像已存在，无代码变更）
docker-compose up -d

# 智能启动（自动判断是否需要构建）
# Windows环境
powershell -ExecutionPolicy Bypass -File scripts\smart_start.ps1

# Linux/Mac环境
chmod +x scripts/smart_start.sh &amp;amp;&amp;amp; ./scripts/smart_start.sh

# 4. 访问应用
# Web界面: http://localhost:8501
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💻 本地部署&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. 升级pip (重要！避免安装错误)
python -m pip install --upgrade pip

# 2. 安装依赖
pip install -e .

# 3. 启动应用
python start_web.py

# 4. 访问 http://localhost:8501
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;📊 开始分析&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;选择模型&lt;/strong&gt;: DeepSeek V3 / 通义千问 / Gemini&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;输入股票&lt;/strong&gt;: &lt;code&gt;000001&lt;/code&gt; (A股) / &lt;code&gt;AAPL&lt;/code&gt; (美股) / &lt;code&gt;0700.HK&lt;/code&gt; (港股)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;开始分析&lt;/strong&gt;: 点击"🚀 开始分析"按钮&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;实时跟踪&lt;/strong&gt;: 观察实时进度和分析步骤&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;查看报告&lt;/strong&gt;: 点击"📊 查看分析报告"按钮&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;导出报告&lt;/strong&gt;: 支持Word/PDF/Markdown格式&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🔐 用户权限管理&lt;/h2&gt; 
&lt;h3&gt;🔑 默认账号信息&lt;/h3&gt; 
&lt;p&gt;系统提供以下默认账号，首次启动时自动创建：&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;用户名&lt;/th&gt; 
   &lt;th&gt;密码&lt;/th&gt; 
   &lt;th&gt;角色&lt;/th&gt; 
   &lt;th&gt;权限说明&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;admin&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;admin123&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;管理员&lt;/td&gt; 
   &lt;td&gt;完整系统权限，用户管理，系统配置&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;user&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;user123&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;普通用户&lt;/td&gt; 
   &lt;td&gt;股票分析，报告查看，基础功能&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;安全提醒&lt;/strong&gt;: 首次登录后请立即修改默认密码！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;🛡️ 权限控制体系&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🔐 登录认证&lt;/strong&gt;: 基于用户名密码的安全认证&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;👥 角色管理&lt;/strong&gt;: 管理员、普通用户等多级权限&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⏰ 会话管理&lt;/strong&gt;: 自动超时保护，安全登出&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 操作日志&lt;/strong&gt;: 完整的用户活动记录&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛠️ 用户管理工具&lt;/h3&gt; 
&lt;p&gt;系统提供完整的命令行用户管理工具：&lt;/p&gt; 
&lt;h4&gt;Windows 用户&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;# 使用 PowerShell 脚本
.\scripts\user_manager.ps1 list                    # 列出所有用户
.\scripts\user_manager.ps1 change-password admin   # 修改密码
.\scripts\user_manager.ps1 create newuser trader  # 创建新用户
.\scripts\user_manager.ps1 delete olduser         # 删除用户

# 或使用批处理文件
.\scripts\user_manager.bat list
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Python 脚本（跨平台）&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 直接使用 Python 脚本
python scripts/user_password_manager.py list
python scripts/user_password_manager.py change-password admin
python scripts/user_password_manager.py create newuser --role trader
python scripts/user_password_manager.py delete olduser
python scripts/user_password_manager.py reset  # 重置为默认配置
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;📋 支持的用户操作&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;📝 列出用户&lt;/strong&gt;: 查看所有用户及其角色权限&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔑 修改密码&lt;/strong&gt;: 安全的密码更新机制&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;👤 创建用户&lt;/strong&gt;: 支持自定义角色和权限&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🗑️ 删除用户&lt;/strong&gt;: 安全的用户删除功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 重置配置&lt;/strong&gt;: 恢复默认用户设置&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📁 配置文件位置&lt;/h3&gt; 
&lt;p&gt;用户配置存储在：&lt;code&gt;web/config/users.json&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 &lt;strong&gt;详细文档&lt;/strong&gt;: 完整的用户管理指南请参考 &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/scripts/USER_MANAGEMENT.md"&gt;scripts/USER_MANAGEMENT.md&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;🚧 当前版本限制&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;❌ 暂不支持在线用户注册&lt;/li&gt; 
 &lt;li&gt;❌ 暂不支持Web界面的角色管理&lt;/li&gt; 
 &lt;li&gt;✅ 支持完整的命令行用户管理&lt;/li&gt; 
 &lt;li&gt;✅ 支持完整的权限控制框架&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎯 核心优势&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🧠 智能新闻分析&lt;/strong&gt;: v0.1.12新增AI驱动的新闻过滤和质量评估系统&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔧 多层次过滤&lt;/strong&gt;: 基础、增强、集成三级新闻过滤机制&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📰 统一新闻工具&lt;/strong&gt;: 整合多源新闻，提供统一的智能检索接口&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🆕 多LLM集成&lt;/strong&gt;: v0.1.11新增4大提供商，60+模型，一站式AI体验&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💾 配置持久化&lt;/strong&gt;: 模型选择真正持久化，URL参数存储，刷新保持&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 快速切换&lt;/strong&gt;: 5个热门模型快速按钮，一键切换不同AI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🆕 实时进度&lt;/strong&gt;: v0.1.10异步进度跟踪，告别黑盒等待&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💾 智能会话&lt;/strong&gt;: 状态持久化，页面刷新不丢失分析结果&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔐 用户权限&lt;/strong&gt;: v0.1.14新增完整的用户认证和权限管理体系&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🇨🇳 中国优化&lt;/strong&gt;: A股/港股数据 + 国产LLM + 中文界面&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🐳 容器化&lt;/strong&gt;: Docker一键部署，环境隔离，快速扩展&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📄 专业报告&lt;/strong&gt;: 多格式导出，自动生成投资建议&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛡️ 稳定可靠&lt;/strong&gt;: 多层数据源，智能降级，错误恢复&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔧 技术架构&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;核心技术&lt;/strong&gt;: Python 3.10+ | LangChain | Streamlit | MongoDB | Redis &lt;strong&gt;AI模型&lt;/strong&gt;: DeepSeek V3 | 阿里百炼 | Google AI | OpenRouter(60+模型) | OpenAI &lt;strong&gt;数据源&lt;/strong&gt;: Tushare | AkShare | FinnHub | Yahoo Finance &lt;strong&gt;部署&lt;/strong&gt;: Docker | Docker Compose | 本地部署&lt;/p&gt; 
&lt;h2&gt;📚 文档和支持&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;📖 完整文档&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/"&gt;docs/&lt;/a&gt; - 安装指南、使用教程、API文档&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚨 故障排除&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/troubleshooting/"&gt;troubleshooting/&lt;/a&gt; - 常见问题解决方案&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 更新日志&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/releases/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt; - 详细版本历史&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 快速开始&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/QUICKSTART.md"&gt;QUICKSTART.md&lt;/a&gt; - 5分钟快速部署指南&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🆚 中文增强特色&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;相比原版新增&lt;/strong&gt;: 智能新闻分析 | 多层次新闻过滤 | 新闻质量评估 | 统一新闻工具 | 多LLM提供商集成 | 模型选择持久化 | 快速切换按钮 | | 实时进度显示 | 智能会话管理 | 中文界面 | A股数据 | 国产LLM | Docker部署 | 专业报告导出 | 统一日志管理 | Web配置界面 | 成本优化&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docker部署包含的服务&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;Web应用&lt;/strong&gt;: TradingAgents-CN主程序&lt;/li&gt; 
 &lt;li&gt;🗄️ &lt;strong&gt;MongoDB&lt;/strong&gt;: 数据持久化存储&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Redis&lt;/strong&gt;: 高速缓存&lt;/li&gt; 
 &lt;li&gt;📊 &lt;strong&gt;MongoDB Express&lt;/strong&gt;: 数据库管理界面&lt;/li&gt; 
 &lt;li&gt;🎛️ &lt;strong&gt;Redis Commander&lt;/strong&gt;: 缓存管理界面&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;💻 方式二：本地部署&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;适用场景&lt;/strong&gt;: 开发环境、自定义配置、离线使用&lt;/p&gt; 
&lt;h3&gt;环境要求&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Python 3.10+ (推荐 3.11)&lt;/li&gt; 
 &lt;li&gt;4GB+ RAM (推荐 8GB+)&lt;/li&gt; 
 &lt;li&gt;稳定的网络连接&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;安装步骤&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. 克隆项目
git clone https://github.com/hsliuping/TradingAgents-CN.git
cd TradingAgents-CN

# 2. 创建虚拟环境
python -m venv env
# Windows
env\Scripts\activate
# Linux/macOS
source env/bin/activate

# 3. 升级pip
python -m pip install --upgrade pip

# 4. 安装所有依赖
pip install -r requirements.txt
#或者使用pip install -e .
pip install -e .

# 注意：requirements.txt已包含所有必需依赖：
# - 数据库支持 (MongoDB + Redis)
# - 多市场数据源 (Tushare, AKShare, FinnHub等)
# - Web界面和报告导出功能
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;配置API密钥&lt;/h3&gt; 
&lt;h4&gt;🇨🇳 推荐：使用阿里百炼（国产大模型）&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 复制配置模板
cp .env.example .env

# 编辑 .env 文件，配置以下必需的API密钥：
DASHSCOPE_API_KEY=your_dashscope_api_key_here
FINNHUB_API_KEY=your_finnhub_api_key_here

# 推荐：Tushare API（专业A股数据）
TUSHARE_TOKEN=your_tushare_token_here
TUSHARE_ENABLED=true

# 可选：其他AI模型API
GOOGLE_API_KEY=your_google_api_key_here
DEEPSEEK_API_KEY=your_deepseek_api_key_here

# 数据库配置（可选，提升性能）
# 本地部署使用标准端口
MONGODB_ENABLED=false  # 设为true启用MongoDB
REDIS_ENABLED=false    # 设为true启用Redis
MONGODB_HOST=localhost
MONGODB_PORT=27017     # 标准MongoDB端口
REDIS_HOST=localhost
REDIS_PORT=6379        # 标准Redis端口

# Docker部署时需要修改主机名
# MONGODB_HOST=mongodb
# REDIS_HOST=redis
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;📋 部署模式配置说明&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;本地部署模式&lt;/strong&gt;：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 数据库配置（本地部署）
MONGODB_ENABLED=true
REDIS_ENABLED=true
MONGODB_HOST=localhost      # 本地主机
MONGODB_PORT=27017         # 标准端口
REDIS_HOST=localhost       # 本地主机
REDIS_PORT=6379           # 标准端口
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Docker部署模式&lt;/strong&gt;：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 数据库配置（Docker部署）
MONGODB_ENABLED=true
REDIS_ENABLED=true
MONGODB_HOST=mongodb       # Docker容器服务名
MONGODB_PORT=27017        # 标准端口
REDIS_HOST=redis          # Docker容器服务名
REDIS_PORT=6379          # 标准端口
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 &lt;strong&gt;配置提示&lt;/strong&gt;：&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;本地部署：需要手动启动MongoDB和Redis服务&lt;/li&gt; 
  &lt;li&gt;Docker部署：数据库服务通过docker-compose自动启动&lt;/li&gt; 
  &lt;li&gt;端口冲突：如果本地已有数据库服务，可修改docker-compose.yml中的端口映射&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;🌍 可选：使用国外模型&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# OpenAI (需要科学上网)
OPENAI_API_KEY=your_openai_api_key

# Anthropic (需要科学上网)
ANTHROPIC_API_KEY=your_anthropic_api_key
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🗄️ 数据库配置（MongoDB + Redis）&lt;/h3&gt; 
&lt;h4&gt;高性能数据存储支持&lt;/h4&gt; 
&lt;p&gt;本项目支持 &lt;strong&gt;MongoDB&lt;/strong&gt; 和 &lt;strong&gt;Redis&lt;/strong&gt; 数据库，提供：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;📊 股票数据缓存&lt;/strong&gt;: 减少API调用，提升响应速度&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 智能降级机制&lt;/strong&gt;: MongoDB → API → 本地缓存的多层数据源&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ 高性能缓存&lt;/strong&gt;: Redis缓存热点数据，毫秒级响应&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛡️ 数据持久化&lt;/strong&gt;: MongoDB存储历史数据，支持离线分析&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;数据库部署方式&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;🐳 Docker部署（推荐）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;如果您使用Docker部署，数据库已自动包含在内：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Docker部署会自动启动所有服务，包括：
docker-compose up -d --build
# - Web应用 (端口8501)
# - MongoDB (端口27017)
# - Redis (端口6379)
# - 数据库管理界面 (端口8081, 8082)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💻 本地部署 - 数据库配置&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;如果您使用本地部署，可以选择以下方式：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;方式一：仅启动数据库服务&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 仅启动 MongoDB + Redis 服务（不启动Web应用）
docker-compose up -d mongodb redis mongo-express redis-commander

# 查看服务状态
docker-compose ps

# 停止服务
docker-compose down
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;方式二：完全本地安装&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 数据库依赖已包含在requirements.txt中，无需额外安装

# 启动 MongoDB (默认端口 27017)
mongod --dbpath ./data/mongodb

# 启动 Redis (默认端口 6379)
redis-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;重要说明&lt;/strong&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;🐳 Docker部署&lt;/strong&gt;: 数据库自动包含，无需额外配置&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;💻 本地部署&lt;/strong&gt;: 可选择仅启动数据库服务或完全本地安装&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;📋 推荐&lt;/strong&gt;: 使用Docker部署以获得最佳体验和一致性&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;数据库配置选项&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;环境变量配置&lt;/strong&gt;（推荐）：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# MongoDB 配置
MONGODB_HOST=localhost
MONGODB_PORT=27017
MONGODB_DATABASE=trading_agents
MONGODB_USERNAME=admin
MONGODB_PASSWORD=your_password

# Redis 配置
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password
REDIS_DB=0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;配置文件方式&lt;/strong&gt;：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# config/database_config.py
DATABASE_CONFIG = {
    'mongodb': {
        'host': 'localhost',
        'port': 27017,
        'database': 'trading_agents',
        'username': 'admin',
        'password': 'your_password'
    },
    'redis': {
        'host': 'localhost',
        'port': 6379,
        'password': 'your_redis_password',
        'db': 0
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;数据库功能特性&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;MongoDB 功能&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ 股票基础信息存储&lt;/li&gt; 
 &lt;li&gt;✅ 历史价格数据缓存&lt;/li&gt; 
 &lt;li&gt;✅ 分析结果持久化&lt;/li&gt; 
 &lt;li&gt;✅ 用户配置管理&lt;/li&gt; 
 &lt;li&gt;✅ 自动数据同步&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Redis 功能&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚡ 实时价格数据缓存&lt;/li&gt; 
 &lt;li&gt;⚡ API响应结果缓存&lt;/li&gt; 
 &lt;li&gt;⚡ 会话状态管理&lt;/li&gt; 
 &lt;li&gt;⚡ 热点数据预加载&lt;/li&gt; 
 &lt;li&gt;⚡ 分布式锁支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;智能降级机制&lt;/h4&gt; 
&lt;p&gt;系统采用多层数据源降级策略，确保高可用性：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;📊 数据获取流程：
1. 🔍 检查 Redis 缓存 (毫秒级)
2. 📚 查询 MongoDB 存储 (秒级)
3. 🌐 调用通达信API (秒级)
4. 💾 本地文件缓存 (备用)
5. ❌ 返回错误信息
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;配置降级策略&lt;/strong&gt;：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# 在 .env 文件中配置
ENABLE_MONGODB=true
ENABLE_REDIS=true
ENABLE_FALLBACK=true

# 缓存过期时间（秒）
REDIS_CACHE_TTL=300
MONGODB_CACHE_TTL=3600
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;性能优化建议&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;生产环境配置&lt;/strong&gt;：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# MongoDB 优化
MONGODB_MAX_POOL_SIZE=50
MONGODB_MIN_POOL_SIZE=5
MONGODB_MAX_IDLE_TIME=30000

# Redis 优化
REDIS_MAX_CONNECTIONS=20
REDIS_CONNECTION_POOL_SIZE=10
REDIS_SOCKET_TIMEOUT=5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;数据库管理工具&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 初始化数据库
python scripts/setup/init_database.py

# 系统状态检查
python scripts/validation/check_system_status.py

# 清理缓存工具
python scripts/maintenance/cleanup_cache.py --days 7
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;故障排除&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;常见问题解决&lt;/strong&gt;：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🪟 Windows 10 ChromaDB兼容性问题&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;问题现象&lt;/strong&gt;：在Windows 10上出现 &lt;code&gt;Configuration error: An instance of Chroma already exists for ephemeral with different settings&lt;/code&gt; 错误，而Windows 11正常。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;快速解决方案&lt;/strong&gt;：&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# 方案1：禁用内存功能（推荐）
# 在 .env 文件中添加：
MEMORY_ENABLED=false

# 方案2：使用专用修复脚本
powershell -ExecutionPolicy Bypass -File scripts\fix_chromadb_win10.ps1

# 方案3：管理员权限运行
# 右键PowerShell -&amp;gt; "以管理员身份运行"
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;详细解决方案&lt;/strong&gt;：参考 &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/troubleshooting/windows10-chromadb-fix.md"&gt;Windows 10兼容性指南&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;MongoDB连接失败&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Docker部署&lt;/strong&gt;：&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# 检查服务状态
docker-compose logs mongodb

# 重启服务
docker-compose restart mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;本地部署&lt;/strong&gt;：&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# 检查MongoDB进程
ps aux | grep mongod

# 重启MongoDB
sudo systemctl restart mongod  # Linux
brew services restart mongodb  # macOS
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Redis连接超时&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# 检查Redis状态
redis-cli ping

# 清理Redis缓存
redis-cli flushdb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;缓存问题&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# 检查系统状态和缓存
python scripts/validation/check_system_status.py

# 清理过期缓存
python scripts/maintenance/cleanup_cache.py --days 7
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 &lt;strong&gt;提示&lt;/strong&gt;: 即使不配置数据库，系统仍可正常运行，会自动降级到API直接调用模式。数据库配置是可选的性能优化功能。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 &lt;strong&gt;详细文档&lt;/strong&gt;: 更多数据库配置信息请参考 &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/database-architecture.md"&gt;数据库架构文档&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;📤 报告导出功能&lt;/h3&gt; 
&lt;h4&gt;新增功能：专业分析报告导出&lt;/h4&gt; 
&lt;p&gt;本项目现已支持将股票分析结果导出为多种专业格式：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;支持的导出格式&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;📄 Markdown (.md)&lt;/strong&gt; - 轻量级标记语言，适合技术用户和版本控制&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📝 Word (.docx)&lt;/strong&gt; - Microsoft Word文档，适合商务报告和进一步编辑&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 PDF (.pdf)&lt;/strong&gt; - 便携式文档格式，适合正式分享和打印&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;报告内容结构&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎯 &lt;strong&gt;投资决策摘要&lt;/strong&gt; - 买入/持有/卖出建议，置信度，风险评分&lt;/li&gt; 
 &lt;li&gt;📊 &lt;strong&gt;详细分析报告&lt;/strong&gt; - 技术分析，基本面分析，市场情绪，新闻事件&lt;/li&gt; 
 &lt;li&gt;⚠️ &lt;strong&gt;风险提示&lt;/strong&gt; - 完整的投资风险声明和免责条款&lt;/li&gt; 
 &lt;li&gt;📋 &lt;strong&gt;配置信息&lt;/strong&gt; - 分析参数，模型信息，生成时间&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;完成股票分析后，在结果页面底部找到"📤 导出报告"部分&lt;/li&gt; 
 &lt;li&gt;选择需要的格式：Markdown、Word或PDF&lt;/li&gt; 
 &lt;li&gt;点击导出按钮，系统自动生成并提供下载&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;安装导出依赖&lt;/strong&gt;：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 安装Python依赖
pip install markdown pypandoc

# 安装系统工具（用于PDF导出）
# Windows: choco install pandoc wkhtmltopdf
# macOS: brew install pandoc wkhtmltopdf
# Linux: sudo apt-get install pandoc wkhtmltopdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 &lt;strong&gt;详细文档&lt;/strong&gt;: 完整的导出功能使用指南请参考 &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/EXPORT_GUIDE.md"&gt;导出功能指南&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;🚀 启动应用&lt;/h3&gt; 
&lt;h4&gt;🐳 Docker启动（推荐）&lt;/h4&gt; 
&lt;p&gt;如果您使用Docker部署，应用已经自动启动：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 应用已在Docker中运行，直接访问：
# Web界面: http://localhost:8501
# 数据库管理: http://localhost:8081
# 缓存管理: http://localhost:8082

# 查看运行状态
docker-compose ps

# 查看日志
docker-compose logs -f web
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;💻 本地启动&lt;/h4&gt; 
&lt;p&gt;如果您使用本地部署：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. 激活虚拟环境
# Windows
.\env\Scripts\activate
# Linux/macOS
source env/bin/activate

# 2. 安装项目到虚拟环境（重要！）
pip install -e .

# 3. 启动Web管理界面
# 方法1：使用项目启动脚本（推荐）
python start_web.py

# 方法2：使用原始启动脚本
python web/run_web.py

# 方法3：直接使用streamlit（需要先安装项目）
streamlit run web/app.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;然后在浏览器中访问 &lt;code&gt;http://localhost:8501&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Web界面特色功能&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🇺🇸 &lt;strong&gt;美股分析&lt;/strong&gt;: 支持 AAPL, TSLA, NVDA 等美股代码&lt;/li&gt; 
 &lt;li&gt;🇨🇳 &lt;strong&gt;A股分析&lt;/strong&gt;: 支持 000001, 600519, 300750 等A股代码&lt;/li&gt; 
 &lt;li&gt;📊 &lt;strong&gt;实时数据&lt;/strong&gt;: 通达信API提供A股实时行情数据&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;智能体选择&lt;/strong&gt;: 可选择不同的分析师组合&lt;/li&gt; 
 &lt;li&gt;📤 &lt;strong&gt;报告导出&lt;/strong&gt;: 一键导出Markdown/Word/PDF格式专业分析报告&lt;/li&gt; 
 &lt;li&gt;🎯 &lt;strong&gt;5级研究深度&lt;/strong&gt;: 从快速分析(2-4分钟)到全面分析(15-25分钟)&lt;/li&gt; 
 &lt;li&gt;📊 &lt;strong&gt;智能分析师选择&lt;/strong&gt;: 市场技术、基本面、新闻、社交媒体分析师&lt;/li&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;实时进度显示&lt;/strong&gt;: 可视化分析过程，避免等待焦虑&lt;/li&gt; 
 &lt;li&gt;📈 &lt;strong&gt;结构化结果&lt;/strong&gt;: 投资建议、目标价位、置信度、风险评估&lt;/li&gt; 
 &lt;li&gt;🇨🇳 &lt;strong&gt;完全中文化&lt;/strong&gt;: 界面和分析结果全中文显示&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;研究深度级别说明&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;1级 - 快速分析&lt;/strong&gt; (2-4分钟): 日常监控，基础决策&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2级 - 基础分析&lt;/strong&gt; (4-6分钟): 常规投资，平衡速度&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;3级 - 标准分析&lt;/strong&gt; (6-10分钟): 重要决策，推荐默认&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4级 - 深度分析&lt;/strong&gt; (10-15分钟): 重大投资，详细研究&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;5级 - 全面分析&lt;/strong&gt; (15-25分钟): 最重要决策，最全面分析&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;💻 代码调用（适合开发者）&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from tradingagents.graph.trading_graph import TradingAgentsGraph
from tradingagents.default_config import DEFAULT_CONFIG

# 配置阿里百炼
config = DEFAULT_CONFIG.copy()
config["llm_provider"] = "dashscope"
config["deep_think_llm"] = "qwen-plus"      # 深度分析
config["quick_think_llm"] = "qwen-turbo"    # 快速任务

# 创建交易智能体
ta = TradingAgentsGraph(debug=True, config=config)

# 分析股票 (以苹果公司为例)
state, decision = ta.propagate("AAPL", "2024-01-15")

# 输出分析结果
print(f"推荐动作: {decision['action']}")
print(f"置信度: {decision['confidence']:.1%}")
print(f"风险评分: {decision['risk_score']:.1%}")
print(f"推理过程: {decision['reasoning']}")
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;快速启动脚本&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 阿里百炼演示（推荐中文用户）
python examples/dashscope/demo_dashscope_chinese.py

# 阿里百炼完整演示
python examples/dashscope/demo_dashscope.py

# 阿里百炼简化测试
python examples/dashscope/demo_dashscope_simple.py

# OpenAI演示（需要国外API）
python examples/openai/demo_openai.py

# 集成测试
python tests/integration/test_dashscope_integration.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;📁 数据目录配置&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;新功能&lt;/strong&gt;: 灵活配置数据存储路径，支持多种配置方式：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 查看当前数据目录配置
python -m cli.main data-config --show

# 设置自定义数据目录
python -m cli.main data-config --set /path/to/your/data

# 重置为默认配置
python -m cli.main data-config --reset
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;环境变量配置&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Windows
set TRADING_AGENTS_DATA_DIR=C:\MyTradingData

# Linux/macOS
export TRADING_AGENTS_DATA_DIR=/home/user/trading_data
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;程序化配置&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from tradingagents.config_manager import ConfigManager

# 设置数据目录
config_manager = ConfigManager()
config_manager.set_data_directory("/path/to/data")

# 获取配置
data_dir = config_manager.get_data_directory()
print(f"数据目录: {data_dir}")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;配置优先级&lt;/strong&gt;: 程序设置 &amp;gt; 环境变量 &amp;gt; 配置文件 &amp;gt; 默认值&lt;/p&gt; 
&lt;p&gt;详细说明请参考: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/data-directory-configuration.md"&gt;📁 数据目录配置指南&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;交互式分析&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 启动交互式命令行界面
python -m cli.main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🎯 &lt;strong&gt;快速导航&lt;/strong&gt; - 找到您需要的内容&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;🎯&lt;strong&gt;我想要...&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;📖&lt;strong&gt;推荐文档&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;⏱️&lt;strong&gt;阅读时间&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;快速上手&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/quick-start.md"&gt;🚀 快速开始&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;10分钟&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;了解架构&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/system-architecture.md"&gt;🏛️ 系统架构&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;15分钟&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;看代码示例&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;📚 基础示例&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;20分钟&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;解决问题&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/faq/faq.md"&gt;🆘 常见问题&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;5分钟&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;深度学习&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/#-%E8%AF%A6%E7%BB%86%E6%96%87%E6%A1%A3%E7%9B%AE%E5%BD%95"&gt;📁 完整文档目录&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2小时+&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 &lt;strong&gt;提示&lt;/strong&gt;: 我们的 &lt;code&gt;docs/&lt;/code&gt; 目录包含了 &lt;strong&gt;50,000+字&lt;/strong&gt; 的详细中文文档，这是与原版最大的区别！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;📚 完整文档体系 - 核心亮点&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;🌟 这是本项目与原版最大的区别！&lt;/strong&gt; 我们构建了业界最完整的中文金融AI框架文档体系，包含超过 &lt;strong&gt;50,000字&lt;/strong&gt; 的详细技术文档，&lt;strong&gt;20+&lt;/strong&gt; 个专业文档文件，&lt;strong&gt;100+&lt;/strong&gt; 个代码示例。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;🎯 为什么选择我们的文档？&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;对比维度&lt;/th&gt; 
   &lt;th&gt;原版 TradingAgents&lt;/th&gt; 
   &lt;th&gt;🚀&lt;strong&gt;中文增强版&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;文档语言&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;英文基础说明&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;完整中文体系&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;文档深度&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;简单介绍&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;深度技术剖析&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;架构说明&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;概念性描述&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;详细设计文档 + 架构图&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;使用指南&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;基础示例&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;从入门到专家的完整路径&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;故障排除&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;无&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;详细FAQ + 解决方案&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;代码示例&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;少量示例&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;100+ 实用示例&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;📖 文档导航 - 按学习路径组织&lt;/h3&gt; 
&lt;h4&gt;🚀 &lt;strong&gt;新手入门路径&lt;/strong&gt; (推荐从这里开始)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/project-overview.md"&gt;📋 项目概述&lt;/a&gt; - &lt;strong&gt;了解项目背景和核心价值&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/installation.md"&gt;⚙️ 详细安装&lt;/a&gt; - &lt;strong&gt;各平台详细安装指南&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/quick-start.md"&gt;🚀 快速开始&lt;/a&gt; - &lt;strong&gt;10分钟上手指南&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;📚 基础示例&lt;/a&gt; - &lt;strong&gt;8个实用的入门示例&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;🏗️ &lt;strong&gt;架构理解路径&lt;/strong&gt; (深入了解系统设计)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/system-architecture.md"&gt;🏛️ 系统架构&lt;/a&gt; - &lt;strong&gt;完整的系统架构设计&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/agent-architecture.md"&gt;🤖 智能体架构&lt;/a&gt; - &lt;strong&gt;多智能体协作机制&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/data-flow-architecture.md"&gt;📊 数据流架构&lt;/a&gt; - &lt;strong&gt;数据处理全流程&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/graph-structure.md"&gt;🔄 图结构设计&lt;/a&gt; - &lt;strong&gt;LangGraph工作流程&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;🤖 &lt;strong&gt;智能体深度解析&lt;/strong&gt; (了解每个智能体的设计)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/analysts.md"&gt;📈 分析师团队&lt;/a&gt; - &lt;strong&gt;四类专业分析师详解&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/researchers.md"&gt;🔬 研究员团队&lt;/a&gt; - &lt;strong&gt;看涨/看跌辩论机制&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/trader.md"&gt;💼 交易员智能体&lt;/a&gt; - &lt;strong&gt;交易决策制定流程&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/risk-management.md"&gt;🛡️ 风险管理&lt;/a&gt; - &lt;strong&gt;多层次风险评估&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/managers.md"&gt;👔 管理层智能体&lt;/a&gt; - &lt;strong&gt;协调和决策管理&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;📊 &lt;strong&gt;数据处理专题&lt;/strong&gt; (掌握数据处理技术)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/data-sources.md"&gt;🔌 数据源集成&lt;/a&gt; - &lt;strong&gt;多数据源API集成&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/data-processing.md"&gt;⚙️ 数据处理流程&lt;/a&gt; - &lt;strong&gt;数据清洗和转换&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/caching.md"&gt;💾 缓存策略&lt;/a&gt; - &lt;strong&gt;多层缓存优化性能&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;⚙️ &lt;strong&gt;配置和优化&lt;/strong&gt; (性能调优和定制)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/config-guide.md"&gt;📝 配置指南&lt;/a&gt; - &lt;strong&gt;详细配置选项说明&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/llm-config.md"&gt;🧠 LLM配置&lt;/a&gt; - &lt;strong&gt;大语言模型优化&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;💡 &lt;strong&gt;高级应用&lt;/strong&gt; (扩展开发和实战)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;📚 基础示例&lt;/a&gt; - &lt;strong&gt;8个实用基础示例&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/advanced-examples.md"&gt;🚀 高级示例&lt;/a&gt; - &lt;strong&gt;复杂场景和扩展开发&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;❓ &lt;strong&gt;问题解决&lt;/strong&gt; (遇到问题时查看)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/faq/faq.md"&gt;🆘 常见问题&lt;/a&gt; - &lt;strong&gt;详细FAQ和解决方案&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;📊 文档统计数据&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;📄 &lt;strong&gt;文档文件数&lt;/strong&gt;: 20+ 个专业文档&lt;/li&gt; 
 &lt;li&gt;📝 &lt;strong&gt;总字数&lt;/strong&gt;: 50,000+ 字详细内容&lt;/li&gt; 
 &lt;li&gt;💻 &lt;strong&gt;代码示例&lt;/strong&gt;: 100+ 个实用示例&lt;/li&gt; 
 &lt;li&gt;📈 &lt;strong&gt;架构图表&lt;/strong&gt;: 10+ 个专业图表&lt;/li&gt; 
 &lt;li&gt;🎯 &lt;strong&gt;覆盖范围&lt;/strong&gt;: 从入门到专家的完整路径&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎨 文档特色&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🇨🇳 完全中文化&lt;/strong&gt;: 专为中文用户优化的表达方式&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 图文并茂&lt;/strong&gt;: 丰富的架构图和流程图&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💻 代码丰富&lt;/strong&gt;: 每个概念都有对应的代码示例&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔍 深度剖析&lt;/strong&gt;: 不仅告诉你怎么做，还告诉你为什么这样做&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛠️ 实用导向&lt;/strong&gt;: 所有文档都面向实际应用场景&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📚 详细文档目录&lt;/h2&gt; 
&lt;h3&gt;📁 &lt;strong&gt;docs/ 目录结构&lt;/strong&gt; - 完整的知识体系&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;docs/
├── 📖 overview/              # 项目概览 - 新手必读
│   ├── project-overview.md   # 📋 项目详细介绍
│   ├── quick-start.md        # 🚀 10分钟快速上手
│   └── installation.md       # ⚙️ 详细安装指南
│
├── 🏗️ architecture/          # 系统架构 - 深度理解
│   ├── system-architecture.md    # 🏛️ 整体架构设计
│   ├── agent-architecture.md     # 🤖 智能体协作机制
│   ├── data-flow-architecture.md # 📊 数据流处理架构
│   └── graph-structure.md        # 🔄 LangGraph工作流
│
├── 🤖 agents/               # 智能体详解 - 核心组件
│   ├── analysts.md          # 📈 四类专业分析师
│   ├── researchers.md       # 🔬 看涨/看跌辩论机制
│   ├── trader.md           # 💼 交易决策制定
│   ├── risk-management.md  # 🛡️ 多层风险评估
│   └── managers.md         # 👔 管理层协调
│
├── 📊 data/                 # 数据处理 - 技术核心
│   ├── data-sources.md      # 🔌 多数据源集成
│   ├── data-processing.md   # ⚙️ 数据处理流程
│   └── caching.md          # 💾 缓存优化策略
│
├── ⚙️ configuration/        # 配置优化 - 性能调优
│   ├── config-guide.md      # 📝 详细配置说明
│   └── llm-config.md       # 🧠 LLM模型优化
│
├── 💡 examples/             # 示例教程 - 实战应用
│   ├── basic-examples.md    # 📚 8个基础示例
│   └── advanced-examples.md # 🚀 高级开发示例
│
└── ❓ faq/                  # 问题解决 - 疑难解答
    └── faq.md              # 🆘 常见问题FAQ
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;重点推荐文档&lt;/strong&gt; (必读精选)&lt;/h3&gt; 
&lt;h4&gt;🔥 &lt;strong&gt;最受欢迎的文档&lt;/strong&gt;&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/project-overview.md"&gt;📋 项目概述&lt;/a&gt;&lt;/strong&gt; - ⭐⭐⭐⭐⭐&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;了解项目的核心价值和技术特色，5分钟读懂整个框架&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/system-architecture.md"&gt;🏛️ 系统架构&lt;/a&gt;&lt;/strong&gt; - ⭐⭐⭐⭐⭐&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;深度解析多智能体协作机制，包含详细架构图&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;📚 基础示例&lt;/a&gt;&lt;/strong&gt; - ⭐⭐⭐⭐⭐&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;8个实用示例，从股票分析到投资组合优化&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;🚀 &lt;strong&gt;技术深度文档&lt;/strong&gt;&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/agent-architecture.md"&gt;🤖 智能体架构&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;多智能体设计模式和协作机制详解&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/data-flow-architecture.md"&gt;📊 数据流架构&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;数据获取、处理、缓存的完整流程&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/researchers.md"&gt;🔬 研究员团队&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;看涨/看跌研究员辩论机制的创新设计&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;💼 &lt;strong&gt;实用工具文档&lt;/strong&gt;&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/usage/web-interface-guide.md"&gt;🌐 Web界面指南&lt;/a&gt;&lt;/strong&gt; - ⭐⭐⭐⭐⭐&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;完整的Web界面使用教程，包含5级研究深度详细说明&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/usage/investment_analysis_guide.md"&gt;💰 投资分析指南&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;从基础到高级的完整投资分析教程&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/llm-config.md"&gt;🧠 LLM配置&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;多LLM模型配置和成本优化策略&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/caching.md"&gt;💾 缓存策略&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;多层缓存设计，显著降低API调用成本&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/faq/faq.md"&gt;🆘 常见问题&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;详细的FAQ和故障排除指南&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;📖 &lt;strong&gt;按模块浏览文档&lt;/strong&gt;&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;📖 概览文档&lt;/strong&gt; - 项目入门必读&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/project-overview.md"&gt;📋 项目概述&lt;/a&gt; - 详细的项目背景和特性介绍&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/quick-start.md"&gt;🚀 快速开始&lt;/a&gt; - 从安装到第一次运行的完整指南&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/installation.md"&gt;⚙️ 详细安装&lt;/a&gt; - 各平台详细安装说明&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;🏗️ 架构文档&lt;/strong&gt; - 深度理解系统设计&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/system-architecture.md"&gt;🏛️ 系统架构&lt;/a&gt; - 完整的系统架构设计&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/agent-architecture.md"&gt;🤖 智能体架构&lt;/a&gt; - 智能体设计模式和协作机制&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/data-flow-architecture.md"&gt;📊 数据流架构&lt;/a&gt; - 数据获取、处理和分发流程&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/graph-structure.md"&gt;🔄 图结构设计&lt;/a&gt; - LangGraph工作流程设计&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;🤖 智能体文档&lt;/strong&gt; - 核心组件详解&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/analysts.md"&gt;📈 分析师团队&lt;/a&gt; - 四类专业分析师详解&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/researchers.md"&gt;🔬 研究员团队&lt;/a&gt; - 看涨/看跌研究员和辩论机制&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/trader.md"&gt;💼 交易员智能体&lt;/a&gt; - 交易决策制定流程&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/risk-management.md"&gt;🛡️ 风险管理&lt;/a&gt; - 多层次风险评估体系&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/managers.md"&gt;👔 管理层智能体&lt;/a&gt; - 协调和决策管理&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;📊 数据处理&lt;/strong&gt; - 技术核心实现&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/data-sources.md"&gt;🔌 数据源集成&lt;/a&gt; - 支持的数据源和API集成&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/data-processing.md"&gt;⚙️ 数据处理流程&lt;/a&gt; - 数据清洗、转换和验证&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/caching.md"&gt;💾 缓存策略&lt;/a&gt; - 多层缓存优化性能&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;⚙️ 配置与部署&lt;/strong&gt; - 性能调优指南&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/config-guide.md"&gt;📝 配置指南&lt;/a&gt; - 详细的配置选项说明&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/llm-config.md"&gt;🧠 LLM配置&lt;/a&gt; - 大语言模型配置优化&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;💡 示例和教程&lt;/strong&gt; - 实战应用指南&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;📚 基础示例&lt;/a&gt; - 8个实用的基础示例&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/advanced-examples.md"&gt;🚀 高级示例&lt;/a&gt; - 复杂场景和扩展开发&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;❓ 帮助文档&lt;/strong&gt; - 问题解决方案&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/faq/faq.md"&gt;🆘 常见问题&lt;/a&gt; - 详细的FAQ和解决方案&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;💰 成本控制&lt;/h2&gt; 
&lt;h3&gt;典型使用成本&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;经济模式&lt;/strong&gt;: $0.01-0.05/次分析 (使用 gpt-4o-mini)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;标准模式&lt;/strong&gt;: $0.05-0.15/次分析 (使用 gpt-4o)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;高精度模式&lt;/strong&gt;: $0.10-0.30/次分析 (使用 gpt-4o + 多轮辩论)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;成本优化建议&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# 低成本配置示例
cost_optimized_config = {
    "deep_think_llm": "gpt-4o-mini",
    "quick_think_llm": "gpt-4o-mini", 
    "max_debate_rounds": 1,
    "online_tools": False  # 使用缓存数据
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🤝 贡献指南&lt;/h2&gt; 
&lt;p&gt;我们欢迎各种形式的贡献：&lt;/p&gt; 
&lt;h3&gt;贡献类型&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 &lt;strong&gt;Bug修复&lt;/strong&gt; - 发现并修复问题&lt;/li&gt; 
 &lt;li&gt;✨ &lt;strong&gt;新功能&lt;/strong&gt; - 添加新的功能特性&lt;/li&gt; 
 &lt;li&gt;📚 &lt;strong&gt;文档改进&lt;/strong&gt; - 完善文档和教程&lt;/li&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;本地化&lt;/strong&gt; - 翻译和本地化工作&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;strong&gt;代码优化&lt;/strong&gt; - 性能优化和代码重构&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;贡献流程&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork 本仓库&lt;/li&gt; 
 &lt;li&gt;创建特性分支 (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;提交更改 (&lt;code&gt;git commit -m 'Add some AmazingFeature'&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;推送到分支 (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;创建 Pull Request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;📋 查看贡献者&lt;/h3&gt; 
&lt;p&gt;查看所有贡献者和详细贡献内容：&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/CONTRIBUTORS.md"&gt;🤝 贡献者名单&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;📄 许可证&lt;/h2&gt; 
&lt;p&gt;本项目基于 Apache 2.0 许可证开源。详见 &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/LICENSE"&gt;LICENSE&lt;/a&gt; 文件。&lt;/p&gt; 
&lt;h3&gt;许可证说明&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ 商业使用&lt;/li&gt; 
 &lt;li&gt;✅ 修改和分发&lt;/li&gt; 
 &lt;li&gt;✅ 私人使用&lt;/li&gt; 
 &lt;li&gt;✅ 专利使用&lt;/li&gt; 
 &lt;li&gt;❗ 需要保留版权声明&lt;/li&gt; 
 &lt;li&gt;❗ 需要包含许可证副本&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🙏 致谢与感恩&lt;/h2&gt; 
&lt;h3&gt;🌟 向源项目开发者致敬&lt;/h3&gt; 
&lt;p&gt;我们向 &lt;a href="https://github.com/TauricResearch"&gt;Tauric Research&lt;/a&gt; 团队表达最深的敬意和感谢：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 愿景领导者&lt;/strong&gt;: 感谢您们在AI金融领域的前瞻性思考和创新实践&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💎 珍贵源码&lt;/strong&gt;: 感谢您们开源的每一行代码，它们凝聚着无数的智慧和心血&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🏗️ 架构大师&lt;/strong&gt;: 感谢您们设计了如此优雅、可扩展的多智能体框架&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💡 技术先驱&lt;/strong&gt;: 感谢您们将前沿AI技术与金融实务完美结合&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 持续贡献&lt;/strong&gt;: 感谢您们持续的维护、更新和改进工作&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🤝 社区贡献者致谢&lt;/h3&gt; 
&lt;p&gt;感谢所有为TradingAgents-CN项目做出贡献的开发者和用户！&lt;/p&gt; 
&lt;p&gt;详细的贡献者名单和贡献内容请查看：&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/CONTRIBUTORS.md"&gt;📋 贡献者名单&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;包括但不限于：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐳 &lt;strong&gt;Docker容器化&lt;/strong&gt; - 部署方案优化&lt;/li&gt; 
 &lt;li&gt;📄 &lt;strong&gt;报告导出功能&lt;/strong&gt; - 多格式输出支持&lt;/li&gt; 
 &lt;li&gt;🐛 &lt;strong&gt;Bug修复&lt;/strong&gt; - 系统稳定性提升&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;strong&gt;代码优化&lt;/strong&gt; - 用户体验改进&lt;/li&gt; 
 &lt;li&gt;📝 &lt;strong&gt;文档完善&lt;/strong&gt; - 使用指南和教程&lt;/li&gt; 
 &lt;li&gt;🌍 &lt;strong&gt;社区建设&lt;/strong&gt; - 问题反馈和推广&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌍 开源贡献&lt;/strong&gt;: 感谢您们选择Apache 2.0协议，给予开发者最大的自由&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📚 知识分享&lt;/strong&gt;: 感谢您们提供的详细文档和最佳实践指导&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;特别感谢&lt;/strong&gt;：&lt;a href="https://github.com/TauricResearch/TradingAgents"&gt;TradingAgents&lt;/a&gt; 项目为我们提供了坚实的技术基础。虽然Apache 2.0协议赋予了我们使用源码的权利，但我们深知每一行代码的珍贵价值，将永远铭记并感谢您们的无私贡献。&lt;/p&gt; 
&lt;h3&gt;🇨🇳 推广使命的初心&lt;/h3&gt; 
&lt;p&gt;创建这个中文增强版本，我们怀着以下初心：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🌉 技术传播&lt;/strong&gt;: 让优秀的TradingAgents技术在中国得到更广泛的应用&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎓 教育普及&lt;/strong&gt;: 为中国的AI金融教育提供更好的工具和资源&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🤝 文化桥梁&lt;/strong&gt;: 在中西方技术社区之间搭建交流合作的桥梁&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 创新推动&lt;/strong&gt;: 推动中国金融科技领域的AI技术创新和应用&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🌍 开源社区&lt;/h3&gt; 
&lt;p&gt;感谢所有为本项目贡献代码、文档、建议和反馈的开发者和用户。正是因为有了大家的支持，我们才能更好地服务中文用户社区。&lt;/p&gt; 
&lt;h3&gt;🤝 合作共赢&lt;/h3&gt; 
&lt;p&gt;我们承诺：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;尊重原创&lt;/strong&gt;: 始终尊重源项目的知识产权和开源协议&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;反馈贡献&lt;/strong&gt;: 将有价值的改进和创新反馈给源项目和开源社区&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;持续改进&lt;/strong&gt;: 不断完善中文增强版本，提供更好的用户体验&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;开放合作&lt;/strong&gt;: 欢迎与源项目团队和全球开发者进行技术交流与合作&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📈 版本历史&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.13&lt;/strong&gt; (2025-08-02): 🤖 原生OpenAI支持与Google AI生态系统全面集成 ✨ &lt;strong&gt;最新版本&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.12&lt;/strong&gt; (2025-07-29): 🧠 智能新闻分析模块与项目结构优化&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.11&lt;/strong&gt; (2025-07-27): 🤖 多LLM提供商集成与模型选择持久化&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.10&lt;/strong&gt; (2025-07-18): 🚀 Web界面实时进度显示与智能会话管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.9&lt;/strong&gt; (2025-07-16): 🎯 CLI用户体验重大优化与统一日志管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.8&lt;/strong&gt; (2025-07-15): 🎨 Web界面全面优化与用户体验提升&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.7&lt;/strong&gt; (2025-07-13): 🐳 容器化部署与专业报告导出&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.6&lt;/strong&gt; (2025-07-11): 🔧 阿里百炼修复与数据源升级&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.5&lt;/strong&gt; (2025-07-08): 📊 添加Deepseek模型支持&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.4&lt;/strong&gt; (2025-07-05): 🏗️ 架构优化与配置管理重构&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.3&lt;/strong&gt; (2025-06-28): 🇨🇳 A股市场完整支持&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.2&lt;/strong&gt; (2025-06-15): 🌐 Web界面和配置管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.1&lt;/strong&gt; (2025-06-01): 🧠 国产LLM集成&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📋 &lt;strong&gt;详细更新日志&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/releases/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📞 联系方式&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: &lt;a href="https://github.com/hsliuping/TradingAgents-CN/issues"&gt;提交问题和建议&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;邮箱&lt;/strong&gt;: &lt;a href="mailto:hsliup@163.com"&gt;hsliup@163.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;项目ＱＱ群：782124367&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;原项目&lt;/strong&gt;: &lt;a href="https://github.com/TauricResearch/TradingAgents"&gt;TauricResearch/TradingAgents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;文档&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/"&gt;完整文档目录&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⚠️ 风险提示&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;重要声明&lt;/strong&gt;: 本框架仅用于研究和教育目的，不构成投资建议。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📊 交易表现可能因多种因素而异&lt;/li&gt; 
 &lt;li&gt;🤖 AI模型的预测存在不确定性&lt;/li&gt; 
 &lt;li&gt;💰 投资有风险，决策需谨慎&lt;/li&gt; 
 &lt;li&gt;👨‍💼 建议咨询专业财务顾问&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;🌟 如果这个项目对您有帮助，请给我们一个 Star！&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/hsliuping/TradingAgents-CN"&gt;⭐ Star this repo&lt;/a&gt; | &lt;a href="https://github.com/hsliuping/TradingAgents-CN/fork"&gt;🍴 Fork this repo&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/"&gt;📖 Read the docs&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>