<rss version="2.0">
  <channel>
    <title>GitHub Java Daily Trending</title>
    <description>Daily Trending of Java in GitHub</description>
    <pubDate>Sun, 05 Oct 2025 01:35:22 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>quarkusio/quarkus</title>
      <link>https://github.com/quarkusio/quarkus</link>
      <description>&lt;p&gt;Quarkus: Supersonic Subatomic Java.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://quarkus.io/#gh-light-mode-only"&gt;&lt;img src="https://design.jboss.org/quarkus/logo/final/PNG/quarkus_logo_horizontal_rgb_1280px_default.png#gh-light-mode-only" alt="Quarkus" /&gt;&lt;/a&gt; &lt;a href="https://quarkus.io/#gh-dark-mode-only"&gt;&lt;img src="https://design.jboss.org/quarkus/logo/final/PNG/quarkus_logo_horizontal_rgb_1280px_reverse.png#gh-dark-mode-only" alt="Quarkus" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://search.maven.org/artifact/io.quarkus/quarkus-bom"&gt;&lt;img src="https://img.shields.io/maven-central/v/io.quarkus/quarkus-bom?logo=apache-maven&amp;amp;style=for-the-badge" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/quarkusio/quarkus/actions?query=workflow%3A%22Quarkus+CI%22"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/QuarkusIO/quarkus/ci-actions-incremental.yml?branch=main&amp;amp;logo=GitHub&amp;amp;style=for-the-badge" alt="GitHub Actions Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/quarkusio/quarkus/pulse"&gt;&lt;img src="https://img.shields.io/github/commit-activity/m/quarkusio/quarkus.svg?label=commits&amp;amp;style=for-the-badge&amp;amp;logo=git&amp;amp;logoColor=white" alt="Commits" /&gt;&lt;/a&gt; &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/github/license/quarkusio/quarkus?style=for-the-badge&amp;amp;logo=apache&amp;amp;color=brightgreen" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://quarkusio.zulipchat.com/"&gt;&lt;img src="https://img.shields.io/badge/zulip-join_chat-brightgreen.svg?style=for-the-badge&amp;amp;logo=zulip" alt="Project Chat" /&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/quarkusio/quarkus/-/tree/main/"&gt;&lt;img src="https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?style=for-the-badge&amp;amp;logo=gitpod&amp;amp;logoColor=white" alt="Gitpod Ready-to-Code" /&gt;&lt;/a&gt; &lt;a href="https://github.com/quarkusio/quarkus/actions/runs/113853915/"&gt;&lt;img src="https://img.shields.io/badge/JVM-17--21-brightgreen.svg?style=for-the-badge&amp;amp;logo=openjdk" alt="Supported JVM Versions" /&gt;&lt;/a&gt; &lt;a href="https://ge.quarkus.io/scans"&gt;&lt;img src="https://img.shields.io/badge/Revved%20up%20by-Develocity-007EC5?style=for-the-badge&amp;amp;logo=gradle" alt="Develocity" /&gt;&lt;/a&gt; &lt;a href="https://github.com/quarkusio/quarkus/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/quarkusio/quarkus?style=for-the-badge" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://gurubase.io/g/quarkus"&gt;&lt;img src="https://img.shields.io/badge/Gurubase-Ask%20Quarkus%20Guru-007EC5?style=for-the-badge" alt="Gurubase" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Quarkus - Supersonic Subatomic Java&lt;/h1&gt; 
&lt;p&gt;Quarkus is a Cloud Native, (Linux) Container First framework for writing Java applications.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Container First&lt;/strong&gt;: Minimal footprint Java applications optimal for running in containers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cloud Native&lt;/strong&gt;: Embraces &lt;a href="https://12factor.net"&gt;12 factor architecture&lt;/a&gt; in environments like Kubernetes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unify imperative and reactive&lt;/strong&gt;: Brings under one programming model non-blocking and imperative styles of development.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Standards-based&lt;/strong&gt;: Based on the standards and frameworks you love and use (RESTEasy and JAX-RS, Hibernate ORM and JPA, Netty, Eclipse Vert.x, Eclipse MicroProfile, Apache Camel...).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Microservice First&lt;/strong&gt;: Brings lightning fast startup time and code turnaround to Java apps.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Developer Joy&lt;/strong&gt;: Development centric experience without compromise to bring your amazing apps to life in no time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;All under ONE framework.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://quarkus.io"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quarkusio/quarkus/wiki"&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Migration Guides&lt;/h2&gt; 
&lt;p&gt;We collect all the migration notes in our &lt;a href="https://github.com/quarkusio/quarkus/wiki/Migration-Guides"&gt;migration guides&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Release Planning&lt;/h2&gt; 
&lt;p&gt;Interested in when the next release is coming? Check our &lt;a href="https://github.com/quarkusio/quarkus/wiki/Release-Planning"&gt;release planning&lt;/a&gt; document for details.&lt;/p&gt; 
&lt;h2&gt;How to build Quarkus&lt;/h2&gt; 
&lt;p&gt;The build instructions are available in the &lt;a href="https://raw.githubusercontent.com/quarkusio/quarkus/main/CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LawnchairLauncher/lawnchair</title>
      <link>https://github.com/LawnchairLauncher/lawnchair</link>
      <description>&lt;p&gt;No clever tagline needed.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lawnchair 15&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/LawnchairLauncher/lawnchair/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/LawnchairLauncher/lawnchair/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Build debug APK" /&gt;&lt;/a&gt; &lt;a href="https://github.com/LawnchairLauncher/lawnchair/actions/workflows/release_update.yml"&gt;&lt;img src="https://github.com/LawnchairLauncher/lawnchair/actions/workflows/release_update.yml/badge.svg?sanitize=true" alt="Build release APK" /&gt;&lt;/a&gt; &lt;a href="https://lawnchair.crowdin.com/lawnchair"&gt;&lt;img src="https://badges.crowdin.net/e/188ba69d884418987f0b7f1dd55e3a4e/localized.svg?sanitize=true" alt="Crowdin" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/lawnchair"&gt;&lt;img src="https://img.shields.io/opencollective/all/lawnchair?label=financial%20contributors&amp;amp;logo=open-collective" alt="OpenCollective" /&gt;&lt;/a&gt; &lt;a href="https://t.me/lccommunity"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Ftg.sumanjay.workers.dev%2Flccommunity" alt="Telegram" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/3x8qNWxgGZ"&gt;&lt;img src="https://img.shields.io/discord/803299970169700402?label=server&amp;amp;logo=discord" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://github.com/LawnchairLauncher/lawnchair/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/LawnchairLauncher/lawnchair/total.svg?label=GitHub%20Downloads&amp;amp;logo=github" alt="GitHub Downloads" /&gt;&lt;/a&gt; &lt;a href="https://play.google.com/store/apps/details?id=app.lawnchair.play"&gt;&lt;img src="https://img.shields.io/endpoint?color=green&amp;amp;logo=googleplay&amp;amp;logoColor=green&amp;amp;url=https%3A%2F%2Fplay.cuzi.workers.dev%2Fplay%3Fi%3Dapp.lawnchair.play%26l%3DPlay%2520Store%2520Installs%26m%3D%24shortinstalls" alt="Play Store Installs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;picture&gt; 
 &lt;!-- Avoid image being clickable with slight workaround --&gt; 
 &lt;!-- ❤️ Credit to Raine for the original mockup on the Lawnchair Discord --&gt; 
 &lt;!-- ❤️ Credit to Lawrence Kayku for the current mockup on Unsplash 
            https://unsplash.com/photos/photography-of-green-leaves-ZVKr8wADhpc 
    --&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/device-frame.png" width="250px" /&gt; 
 &lt;img alt="Google Pixel running Lawnchair Launcher with green wallpaper" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/device-frame.png" width="250px" /&gt; 
&lt;/picture&gt; 
&lt;p&gt;Lawnchair is a free, open-source home app for Android. Taking Launcher3—Android’s default home app—as a starting point, it ports Pixel Launcher features and introduces rich customization options.&lt;/p&gt; 
&lt;p&gt;This branch houses the codebase of Lawnchair 15, which is currently in beta and is based on Launcher3 from Android 15. For Lawnchair 9 to 14, see the branches with the &lt;code&gt;9-&lt;/code&gt; to &lt;code&gt;14-&lt;/code&gt; prefixes, respectively.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Material You Theming:&lt;/strong&gt; Adapts to your wallpaper and system theme.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;At a Glance Widget:&lt;/strong&gt; Displays information &lt;em&gt;at a glance&lt;/em&gt; with support for &lt;a href="https://github.com/KieronQuinn/Smartspacer"&gt;Smartspacer&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;QuickSwitch Support:&lt;/strong&gt; Integrates with Android Recents on Android 10 and newer. (requires root)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Global Search:&lt;/strong&gt; Allows quick access to apps, contacts, and web results from the home screen.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customization Options:&lt;/strong&gt; Provides options to tweak icons, fonts, and colors to your liking.&lt;/li&gt; 
 &lt;li&gt;And more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p align="left"&gt; &lt;a href="https://play.google.com/store/apps/details?id=app.lawnchair.play"&gt; 
  &lt;picture&gt; 
   &lt;!-- Avoid image being clickable with slight workaround --&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/badge-google-play.png" height="60" /&gt; 
   &lt;img alt="Get it on Google Play" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/badge-google-play.png" height="60" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://apt.izzysoft.de/fdroid/index/apk/app.lawnchair"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/badge-izzyondroid.png" height="60" /&gt; 
   &lt;img alt="Get it on IzzyOnDroid" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/badge-izzyondroid.png" height="60" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://apps.obtainium.imranr.dev/redirect?r=obtainium://add/https://github.com/LawnchairLauncher/lawnchair/"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/badge-obtainium.png" height="60" /&gt; 
   &lt;img alt="Get it on Obtainium" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/badge-obtainium.png" height="60" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://github.com/LawnchairLauncher/lawnchair/releases"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/badge-github.png" height="60" /&gt; 
   &lt;img alt="Get it on GitHub" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/badge-github.png" height="60" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Lawnchair on Play Store will install as a different app from other sources. Some features may be restricted to comply with Google Play's publishing rules.&lt;/p&gt; 
&lt;h3&gt;Development builds&lt;/h3&gt; 
&lt;p&gt;Interested in keeping yourself up-to-date with every Lawnchair development? Try our development builds!&lt;/p&gt; 
&lt;p&gt;These builds offer the latest features and bug fixes at a cost of being slower and introducing new bugs. Ensure that you make backups before installing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Download:&lt;/strong&gt; &lt;a href="https://apps.obtainium.imranr.dev/redirect?r=obtainium://app/%7B%22id%22%3A%22app.lawnchair.nightly%22%2C%22url%22%3A%22https%3A%2F%2Fgithub.com%2Flawnchairlauncher%2Flawnchair%22%2C%22author%22%3A%22Lawnchair%20Launcher%22%2C%22name%22%3A%22Lawnchair%20(Debug)%22%2C%22preferredApkIndex%22%3A0%2C%22additionalSettings%22%3A%22%7B%5C%22includePrereleases%5C%22%3Atrue%2C%5C%22fallbackToOlderReleases%5C%22%3Afalse%2C%5C%22filterReleaseTitlesByRegEx%5C%22%3A%5C%22Lawnchair%20Nightly%5C%22%2C%5C%22filterReleaseNotesByRegEx%5C%22%3A%5C%22%5C%22%2C%5C%22verifyLatestTag%5C%22%3Afalse%2C%5C%22dontSortReleasesList%5C%22%3Afalse%2C%5C%22useLatestAssetDateAsReleaseDate%5C%22%3Afalse%2C%5C%22trackOnly%5C%22%3Afalse%2C%5C%22versionExtractionRegEx%5C%22%3A%5C%22%5C%22%2C%5C%22matchGroupToUse%5C%22%3A%5C%22%5C%22%2C%5C%22versionDetection%5C%22%3Afalse%2C%5C%22releaseDateAsVersion%5C%22%3Atrue%2C%5C%22useVersionCodeAsOSVersion%5C%22%3Afalse%2C%5C%22apkFilterRegEx%5C%22%3A%5C%22%5C%22%2C%5C%22invertAPKFilter%5C%22%3Afalse%2C%5C%22autoApkFilterByArch%5C%22%3Atrue%2C%5C%22appName%5C%22%3A%5C%22%5C%22%2C%5C%22shizukuPretendToBeGooglePlay%5C%22%3Afalse%2C%5C%22exemptFromBackgroundUpdates%5C%22%3Afalse%2C%5C%22skipUpdateNotifications%5C%22%3Afalse%2C%5C%22about%5C%22%3A%5C%22Lawnchair%20is%20a%20free%2C%20open-source%20home%20app%20for%20Android.%20(NOTE%3A%20This%20is%20the%20debug%20version%20of%20Lawnchair%2C%20for%20the%20beta%2Fstable%20versions%20see%20%5C%5C%5C%22Lawnchair%5C%5C%5C%22)%5C%22%7D%22%7D"&gt;Obtainium&lt;/a&gt; • &lt;a href="https://github.com/LawnchairLauncher/lawnchair/releases/tag/nightly"&gt;GitHub&lt;/a&gt; • &lt;a href="https://nightly.link/LawnchairLauncher/lawnchair/workflows/ci/15-dev"&gt;nightly.link&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Verification&lt;/h3&gt; 
&lt;p&gt;Verify the integrity of your Lawnchair download using these SHA-256 hashes:&lt;/p&gt; 
&lt;h6&gt;Google Play&lt;/h6&gt; 
&lt;pre&gt;&lt;code&gt;47:AC:92:63:1C:60:35:13:CC:8D:26:DD:9C:FF:E0:71:9A:8B:36:55:44:DC:CE:C2:09:58:24:EC:25:61:20:A7
&lt;/code&gt;&lt;/pre&gt; 
&lt;h6&gt;Elsewhere&lt;/h6&gt; 
&lt;pre&gt;&lt;code&gt;74:7C:36:45:B3:57:25:8B:2E:23:E8:51:E5:3C:96:74:7F:E0:AD:D0:07:E5:BA:2C:D9:7E:8C:85:57:2E:4D:C5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please visit the &lt;a href="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/CONTRIBUTING.md"&gt;Lawnchair Contributing Guidelines&lt;/a&gt; for information and tips on contributing to Lawnchair.&lt;/p&gt; 
&lt;h2&gt;Supporting Lawnchair&lt;/h2&gt; 
&lt;p&gt;If you love what we do, consider &lt;a href="https://opencollective.com/lawnchair"&gt;supporting us on Open Collective&lt;/a&gt;! Your contributions help keep Lawnchair independent and enable us to develop faster.&lt;/p&gt; 
&lt;p&gt;A huge thank you to our &lt;strong&gt;Core Backers ($5+)&lt;/strong&gt;: &lt;em&gt;(These backers directly fund our Project Velocity Fund)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/lawnchair"&gt;&lt;img src="https://opencollective.com/lawnchair/tiers/backer.svg?avatarHeight=64&amp;amp;width=890&amp;amp;button=false" alt="Core Backers" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/lawnchair"&gt;Become a supporter&lt;/a&gt; to help us cover our operational costs, or become a Core Backer to be featured here!&lt;/p&gt; 
&lt;h2&gt;Quick links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://lawnchair.app"&gt;Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://t.me/lawnchairci"&gt;News on Telegram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.com/invite/3x8qNWxgGZ"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/lawnchairapp"&gt;Lawnchair on X (formerly Twitter)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://xdaforums.com/t/lawnchair-customizable-pixel-launcher.3627137/"&gt;&lt;em&gt;XDA&lt;/em&gt; thread&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can view all our links in the &lt;a href="https://github.com/LawnchairLauncher/lawnchair/wiki"&gt;Lawnchair Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- Download link --&gt;</description>
    </item>
    
    <item>
      <title>openjdk/jdk</title>
      <link>https://github.com/openjdk/jdk</link>
      <description>&lt;p&gt;JDK main-line development https://openjdk.org/projects/jdk&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to the JDK!&lt;/h1&gt; 
&lt;p&gt;For build instructions please see the &lt;a href="https://openjdk.org/groups/build/doc/building.html"&gt;online documentation&lt;/a&gt;, or either of these files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openjdk/jdk/master/doc/building.html"&gt;doc/building.html&lt;/a&gt; (html version)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openjdk/jdk/master/doc/building.md"&gt;doc/building.md&lt;/a&gt; (markdown version)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://openjdk.org/"&gt;https://openjdk.org/&lt;/a&gt; for more information about the OpenJDK Community and the JDK and see &lt;a href="https://bugs.openjdk.org"&gt;https://bugs.openjdk.org&lt;/a&gt; for JDK issue tracking.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ashishps1/awesome-system-design-resources</title>
      <link>https://github.com/ashishps1/awesome-system-design-resources</link>
      <description>&lt;p&gt;Learn System Design concepts and prepare for interviews using free resources.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ashishps1/awesome-system-design-resources/main/diagrams/system-design-github-logo.png" width="350" height="200" /&gt; &lt;/p&gt; 
&lt;p&gt;This repository contains free resources to learn System Design concepts and prepare for interviews.&lt;/p&gt; 
&lt;p&gt;👉 Subscribe to my &lt;a href="https://bit.ly/amghsd"&gt;AlgoMaster Newsletter&lt;/a&gt; and get a &lt;strong&gt;FREE System Design Interview Handbook&lt;/strong&gt; in your inbox.&lt;/p&gt; 
&lt;p&gt;✅ If you are new to System Design, start here: &lt;a href="https://blog.algomaster.io/p/30-system-design-concepts"&gt;System Design was HARD until I Learned these 30 Concepts&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📌 System Design Key Concepts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/scalability"&gt;Scalability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/system-design-what-is-availability"&gt;Availability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/cap-theorem-explained"&gt;CAP Theorem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/what-are-acid-transactions-in-databases"&gt;ACID Transactions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/consistent-hashing-explained"&gt;Consistent Hashing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/rate-limiting-algorithms-explained-with-code"&gt;Rate Limiting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/system-design-how-to-avoid-single-point-of-failures"&gt;SPOF&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/blog/what-is-fault-tolerance/"&gt;Fault Tolerance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@sourabhatta1819/consensus-in-distributed-system-ac79f8ba2b8c"&gt;Consensus Algorithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://highscalability.com/blog/2023/7/16/gossip-protocol-explained.html"&gt;Gossip Protocol&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/service-discovery-in-distributed-systems"&gt;Service Discovery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://abdulrwahab.medium.com/api-architecture-best-practices-for-designing-rest-apis-bf907025f5f"&gt;API Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/learn/what-is-disaster-recovery"&gt;Disaster Recovery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.dynatrace.com/news/blog/what-is-distributed-tracing/"&gt;Distributed Tracing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🛠️ System Design Building Blocks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/whats-an-api"&gt;APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/content-delivery-networks"&gt;Content Delivery Network (CDN)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/proxy-vs-reverse-proxy-explained"&gt;Proxy vs Reverse Proxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cloudflare.com/learning/dns/what-is-dns/"&gt;Domain Name System (DNS)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/4d7d6f8a-6803-4c7b-85ca-864c87c2cbf2"&gt;Caching&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/top-5-caching-strategies-explained"&gt;Caching Strategies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/distributed-caching"&gt;Distributed Caching&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/what-is-an-api-gateway"&gt;API Gateway&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/load-balancing-algorithms-explained-with-code"&gt;Load Balancing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/15-types-of-databases"&gt;Databases Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/sql-vs-nosql-7-key-differences"&gt;SQL vs NoSQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/a-detailed-guide-on-database-indexes"&gt;Database Indexes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://systemdesign.one/consistency-patterns/"&gt;Consistency Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/heartbeats-in-distributed-systems"&gt;HeartBeats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/geekculture/design-patterns-for-microservices-circuit-breaker-pattern-276249ffab33"&gt;Circuit Breaker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/idempotency-in-distributed-systems"&gt;Idempotency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/system-design-how-to-scale-a-database"&gt;Database Scaling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redis.com/blog/what-is-data-replication/"&gt;Data Replication&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/489440f1-9c80-4241-9ec8-de156964c3b9"&gt;Data Redundancy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/what-is-database-sharding"&gt;Database Sharding&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.mongodb.com/developer/products/mongodb/active-active-application-architectures/"&gt;Database Architectures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.druva.com/glossary/what-is-a-failover-definition-and-related-faqs"&gt;Failover&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/bloom-filters"&gt;Bloom Filters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/message-queues"&gt;Message Queues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/websockets"&gt;WebSockets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/what-are-checksums"&gt;Checksums&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://newsletter.systemdesign.one/p/netflix-microservices"&gt;Microservices Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html"&gt;Distributed Locking&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⚖️ System Design Tradeoffs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/system-design-top-15-trade-offs"&gt;Top 15 Tradeoffs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/system-design-vertical-vs-horizontal-scaling"&gt;Vertical vs Horizontal Scaling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/concurrency-vs-parallelism"&gt;Concurrency vs Parallelism&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/long-polling-vs-websockets"&gt;Long Polling vs WebSockets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/batch-processing-vs-stream-processing"&gt;Batch vs Stream Processing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/stateful-vs-stateless-architecture"&gt;Stateful vs Stateless Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/strong-vs-eventual-consistency"&gt;Strong vs Eventual Consistency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/59cae60d-9717-4e20-a59e-759e370db4e5"&gt;Read-Through vs Write-Through Cache&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/af5fe2fe-9a4f-4708-af43-184945a243af"&gt;Push vs Pull Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/106604fb-b746-41de-88fb-60e932b2ff68"&gt;REST vs RPC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/aec1cebf-6060-45a7-8e00-47364ca70761"&gt;Synchronous vs. asynchronous communications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aws.amazon.com/compare/the-difference-between-throughput-and-latency/"&gt;Latency vs Throughput&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🖇️ System Design Architectural Patterns&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/client-server-architecture-explained"&gt;Client-Server Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/hashmapinc/the-what-why-and-how-of-a-microservices-architecture-4179579423a9"&gt;Microservices Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/2edeb23b-cfa5-4b24-845e-3f6f7a39d162"&gt;Serverless Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.confluent.io/learn/event-driven-architecture/"&gt;Event-Driven Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.spiceworks.com/tech/networking/articles/what-is-peer-to-peer/"&gt;Peer-to-Peer (P2P) Architecture&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;✅ &lt;a href="https://blog.algomaster.io/p/how-to-answer-a-system-design-interview-problem"&gt;How to Answer a System Design Interview Problem&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;💻 System Design Interview Problems&lt;/h2&gt; 
&lt;h3&gt;Easy&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/design-a-url-shortener"&gt;Design URL Shortener like TinyURL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8zX0rue2Hic"&gt;Design Content Delivery Network (CDN)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=NtMvNh0WFVM"&gt;Design Parking Garage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=D0kDMUgo27c"&gt;Design Vending Machine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=rnZmdmlR-2M"&gt;Design Distributed Key-Value Store&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iuqZvajTOyA"&gt;Design Distributed Cache&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uj_4vxm9u90"&gt;Design Authentication System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QpLy0_c_RXk"&gt;Design Unified Payments Interface (UPI)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Medium&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/design-a-chat-application-like-whatsapp"&gt;Design WhatsApp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/design-spotify-system-design-interview"&gt;Design Spotify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/design-a-distributed-job-scheduler"&gt;Design Distributed Job Scheduler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/design-a-scalable-notification-service"&gt;Design a Scalable Notification Service&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VJpfO6KdyWE"&gt;Design Instagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=tndzLznxq40"&gt;Design Tinder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9-hjBGxuiEs"&gt;Design Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=wYk0xPP_P_8"&gt;Design Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KYExYE_9nIY"&gt;Design Reddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=psQzyFfsUGU"&gt;Design Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jPKTo1iGQiE"&gt;Design Youtube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=CeGtqouT8eA"&gt;Design Google Search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=EpASu_1dUdE"&gt;Design E-commerce Store like Amazon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Z-0g_aJL5Fw"&gt;Design TikTok&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lEL4F_0J3l8"&gt;Design Shopify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YyOXt2MEkv4"&gt;Design Airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=us0qySiUsGU"&gt;Design Autocomplete for Search Engines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mhUQe4BKZXs"&gt;Design Rate Limiter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iJLL-KPqBpM"&gt;Design Distributed Message Queue like Kafka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qsGcfVGvFSs"&gt;Design Flight Booking System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=07jkn4jUtso"&gt;Design Online Code Editor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=kIcq1_pBQSY"&gt;Design an Analytics Platform (Metrics &amp;amp; Logging)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=olfaBgJrUBI"&gt;Design Payment System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4ijjIUeq6hE"&gt;Design a Digital Wallet&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hard&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=M4lR_Va97cQ"&gt;Design Location Based Service like Yelp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=umWABit-wbk"&gt;Design Uber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iRhSAR3ldTw"&gt;Design Food Delivery App like Doordash&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2auwirNBvGg"&gt;Design Google Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jk3yvVfNvds"&gt;Design Google Maps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=G32ThJakeHk"&gt;Design Zoom&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://systemdesign.one/distributed-counter-system-design/"&gt;Design Distributed Counter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=U0xTu6E2CT8"&gt;Design File Sharing System like Dropbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lBAwJgoO3Ek"&gt;Design Ticket Booking System like BookMyShow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BKZxZwUgL3Y"&gt;Design Distributed Web Crawler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=q0KGYwNbf-0"&gt;Design Code Deployment System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=UmWtcgC96X8"&gt;Design Distributed Cloud Storage like S3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=v7x75aN9liM"&gt;Design Distributed Locking Service&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://systemdesign.one/slack-architecture/"&gt;Design Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://systemdesign.one/live-comment-system-design/"&gt;Design Live Comments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📇 Courses&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://algomaster.io/learn/system-design/what-is-system-design"&gt;Learn System Design - AlgoMaster.io&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📚 Books&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/9352135245"&gt;Designing Data-Intensive Applications&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📩 Newsletters&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/"&gt;AlgoMaster Newsletter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📺 YouTube Channels&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@TechDummiesNarendraL"&gt;Tech Dummies Narendra L&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@gkcs"&gt;Gaurav Sen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@codeKarle"&gt;codeKarle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@ByteByteGo"&gt;ByteByteGo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@SystemDesignInterview"&gt;System Design Interview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@sudocode"&gt;sudoCODE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@SuccessinTech/videos"&gt;Success in Tech&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📜 Must-Read Engineering Articles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.com/blog/how-discord-stores-trillions-of-messages"&gt;How Discord stores trillions of messages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://netflixtechblog.com/building-in-video-search-936766f0017c"&gt;Building In-Video Search at Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.canva.dev/blog/engineering/from-zero-to-50-million-uploads-per-day-scaling-media-at-canva/"&gt;How Canva scaled Media uploads from Zero to 50 Million per Day&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/avoiding-double-payments-in-a-distributed-payments-system-2981f6b070bb"&gt;How Airbnb avoids double payments in a Distributed Payments System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stripe.com/blog/payment-api-design"&gt;Stripe’s payments APIs - The first 10 years&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://slack.engineering/real-time-messaging/"&gt;Real time messaging at Slack&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🗞️ Must-Read Distributed Systems Papers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://lamport.azurewebsites.net/pubs/lamport-paxos.pdf"&gt;Paxos: The Part-Time Parliament&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://research.google.com/archive/mapreduce-osdi04.pdf"&gt;MapReduce: Simplified Data Processing on Large Clusters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://static.googleusercontent.com/media/research.google.com/en//archive/gfs-sosp2003.pdf"&gt;The Google File System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf"&gt;Dynamo: Amazon’s Highly Available Key-value Store&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://notes.stephenholiday.com/Kafka.pdf"&gt;Kafka: a Distributed Messaging System for Log Processing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://static.googleusercontent.com/media/research.google.com/en//archive/spanner-osdi2012.pdf"&gt;Spanner: Google’s Globally-Distributed Database&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://static.googleusercontent.com/media/research.google.com/en//archive/bigtable-osdi06.pdf"&gt;Bigtable: A Distributed Storage System for Structured Data&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usenix.org/legacy/event/usenix10/tech/full_papers/Hunt.pdf"&gt;ZooKeeper: Wait-free coordination for Internet-scale systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cs.umb.edu/~poneil/lsmtree.pdf"&gt;The Log-Structured Merge-Tree (LSM-Tree)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://static.googleusercontent.com/media/research.google.com/en//archive/chubby-osdi06.pdf"&gt;The Chubby lock service for loosely-coupled distributed systems&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;i&gt;If you find this resource helpful, please give it a star ⭐️ and share it with others!&lt;/i&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>provectus/kafka-ui</title>
      <link>https://github.com/provectus/kafka-ui</link>
      <description>&lt;p&gt;Open-Source Web UI for Apache Kafka Management&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;img src="https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/kafka-ui-logo.png" alt="UI for Apache Kafka logo" /&gt; UI for Apache Kafka&amp;nbsp;&lt;/h2&gt; 
&lt;h4&gt;Versatile, fast and lightweight web UI for managing Apache Kafka® clusters. Built by developers, for developers.&lt;/h4&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://github.com/provectus/kafka-ui/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;img src="https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/free-open-source.svg?sanitize=true" alt="UI for Apache Kafka Price Free" /&gt; &lt;a href="https://github.com/provectus/kafka-ui/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/provectus/kafka-ui" alt="Release version" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/4DWzD7pGE5"&gt;&lt;img src="https://img.shields.io/discord/897805035122077716" alt="Chat with us" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/provectuslabs/kafka-ui"&gt;&lt;img src="https://img.shields.io/docker/pulls/provectuslabs/kafka-ui" alt="Docker pulls" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://docs.kafka-ui.provectus.io/"&gt;DOCS&lt;/a&gt; • &lt;a href="https://docs.kafka-ui.provectus.io/configuration/quick-start"&gt;QUICK START&lt;/a&gt; • &lt;a href="https://discord.gg/4DWzD7pGE5"&gt;COMMUNITY DISCORD&lt;/a&gt; &lt;br /&gt; &lt;a href="https://aws.amazon.com/marketplace/pp/prodview-ogtt5hfhzkq6a"&gt;AWS Marketplace&lt;/a&gt; • &lt;a href="https://www.producthunt.com/products/ui-for-apache-kafka/reviews/new"&gt;ProductHunt&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://repobeats.axiom.co/api/embed/2e8a7c2d711af9daddd34f9791143e7554c35d0f.svg?sanitize=true" /&gt; &lt;/p&gt; 
&lt;h4&gt;UI for Apache Kafka is a free, open-source web UI to monitor and manage Apache Kafka clusters.&lt;/h4&gt; 
&lt;p&gt;UI for Apache Kafka is a simple tool that makes your data flows observable, helps find and troubleshoot issues faster and deliver optimal performance. Its lightweight dashboard makes it easy to track key metrics of your Kafka clusters - Brokers, Topics, Partitions, Production, and Consumption.&lt;/p&gt; 
&lt;h3&gt;DISCLAIMER&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;UI for Apache Kafka is a free tool built and supported by the open-source community. Curated by Provectus, it will remain free and open-source, without any paid features or subscription plans to be added in the future. Looking for the help of Kafka experts? Provectus can help you design, build, deploy, and manage Apache Kafka clusters and streaming applications. Discover &lt;a href="https://provectus.com/professional-services-apache-kafka/"&gt;Professional Services for Apache Kafka&lt;/a&gt;, to unlock the full potential of Kafka in your enterprise! &lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Set up UI for Apache Kafka with just a couple of easy commands to visualize your Kafka data in a comprehensible way. You can run the tool locally or in the cloud.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/Interface.gif" alt="Interface" /&gt;&lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Cluster Management&lt;/strong&gt; — monitor and manage all your clusters in one place&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Monitoring with Metrics Dashboard&lt;/strong&gt; — track key Kafka metrics with a lightweight dashboard&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;View Kafka Brokers&lt;/strong&gt; — view topic and partition assignments, controller status&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;View Kafka Topics&lt;/strong&gt; — view partition count, replication status, and custom configuration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;View Consumer Groups&lt;/strong&gt; — view per-partition parked offsets, combined and per-partition lag&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Browse Messages&lt;/strong&gt; — browse messages with JSON, plain text, and Avro encoding&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Topic Configuration&lt;/strong&gt; — create and configure new topics with dynamic configuration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable Authentification&lt;/strong&gt; — &lt;a href="https://docs.kafka-ui.provectus.io/configuration/authentication"&gt;secure&lt;/a&gt; your installation with optional Github/Gitlab/Google OAuth 2.0&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom serialization/deserialization plugins&lt;/strong&gt; - &lt;a href="https://docs.kafka-ui.provectus.io/configuration/serialization-serde"&gt;use&lt;/a&gt; a ready-to-go serde for your data like AWS Glue or Smile, or code your own!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Role based access control&lt;/strong&gt; - &lt;a href="https://docs.kafka-ui.provectus.io/configuration/rbac-role-based-access-control"&gt;manage permissions&lt;/a&gt; to access the UI with granular precision&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data masking&lt;/strong&gt; - &lt;a href="https://docs.kafka-ui.provectus.io/configuration/data-masking"&gt;obfuscate&lt;/a&gt; sensitive data in topic messages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;The Interface&lt;/h1&gt; 
&lt;p&gt;UI for Apache Kafka wraps major functions of Apache Kafka with an intuitive user interface.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/Interface.gif" alt="Interface" /&gt;&lt;/p&gt; 
&lt;h2&gt;Topics&lt;/h2&gt; 
&lt;p&gt;UI for Apache Kafka makes it easy for you to create topics in your browser by several clicks, pasting your own parameters, and viewing topics in the list.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/Create_topic_kafka-ui.gif" alt="Create Topic" /&gt;&lt;/p&gt; 
&lt;p&gt;It's possible to jump from connectors view to corresponding topics and from a topic to consumers (back and forth) for more convenient navigation. connectors, overview topic settings.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/Connector_Topic_Consumer.gif" alt="Connector_Topic_Consumer" /&gt;&lt;/p&gt; 
&lt;h3&gt;Messages&lt;/h3&gt; 
&lt;p&gt;Let's say we want to produce messages for our topic. With the UI for Apache Kafka we can send or write data/messages to the Kafka topics without effort by specifying parameters, and viewing messages in the list.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/Create_message_kafka-ui.gif" alt="Produce Message" /&gt;&lt;/p&gt; 
&lt;h2&gt;Schema registry&lt;/h2&gt; 
&lt;p&gt;There are 3 supported types of schemas: Avro®, JSON Schema, and Protobuf schemas.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/Create_schema.gif" alt="Create Schema Registry" /&gt;&lt;/p&gt; 
&lt;p&gt;Before producing avro/protobuf encoded messages, you have to add a schema for the topic in Schema Registry. Now all these steps are easy to do with a few clicks in a user-friendly interface.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/provectus/kafka-ui/master/documentation/images/Schema_Topic.gif" alt="Avro Schema Topic" /&gt;&lt;/p&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;p&gt;To run UI for Apache Kafka, you can use either a pre-built Docker image or build it (or a jar file) yourself.&lt;/p&gt; 
&lt;h2&gt;Quick start (Demo run)&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;docker run -it -p 8080:8080 -e DYNAMIC_CONFIG_ENABLED=true provectuslabs/kafka-ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then access the web UI at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The command is sufficient to try things out. When you're done trying things out, you can proceed with a &lt;a href="https://docs.kafka-ui.provectus.io/quick-start/persistent-start"&gt;persistent installation&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Persistent installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;services:
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://docs.kafka-ui.provectus.io/configuration/quick-start"&gt;configuration&lt;/a&gt; page to proceed with further app configuration.&lt;/p&gt; 
&lt;h2&gt;Some useful configuration related links&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.kafka-ui.provectus.io/configuration/configuration-wizard"&gt;Web UI Cluster Configuration Wizard&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.kafka-ui.provectus.io/configuration/configuration-file"&gt;Configuration file explanation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.kafka-ui.provectus.io/configuration/compose-examples"&gt;Docker Compose examples&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.kafka-ui.provectus.io/configuration/misc-configuration-properties"&gt;Misc configuration properties&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Helm charts&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.kafka-ui.provectus.io/configuration/helm-charts/quick-start"&gt;Quick start&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Building from sources&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.kafka-ui.provectus.io/development/building/prerequisites"&gt;Quick start&lt;/a&gt; with building&lt;/p&gt; 
&lt;h2&gt;Liveliness and readiness probes&lt;/h2&gt; 
&lt;p&gt;Liveliness and readiness endpoint is at &lt;code&gt;/actuator/health&lt;/code&gt;.&lt;br /&gt; Info endpoint (build info) is located at &lt;code&gt;/actuator/info&lt;/code&gt;.&lt;/p&gt; 
&lt;h1&gt;Configuration options&lt;/h1&gt; 
&lt;p&gt;All of the environment variables/config properties could be found &lt;a href="https://docs.kafka-ui.provectus.io/configuration/misc-configuration-properties"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;Please refer to &lt;a href="https://docs.kafka-ui.provectus.io/development/contributing"&gt;contributing guide&lt;/a&gt;, we'll guide you from there.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>apache/beam</title>
      <link>https://github.com/apache/beam</link>
      <description>&lt;p&gt;Apache Beam is a unified programming model for Batch and Streaming data processing.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Beam&lt;/h1&gt; 
&lt;p&gt;&lt;a href="http://beam.apache.org/"&gt;Apache Beam&lt;/a&gt; is a unified model for defining both batch and streaming data-parallel processing pipelines, as well as a set of language-specific SDKs for constructing pipelines and Runners for executing them on distributed processing backends, including &lt;a href="http://flink.apache.org/"&gt;Apache Flink&lt;/a&gt;, &lt;a href="http://spark.apache.org/"&gt;Apache Spark&lt;/a&gt;, &lt;a href="http://cloud.google.com/dataflow/"&gt;Google Cloud Dataflow&lt;/a&gt;, and &lt;a href="https://hazelcast.com/"&gt;Hazelcast Jet&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;&lt;a href="http://search.maven.org/#search%7Cgav%7C1%7Cg:%22org.apache.beam%22"&gt;&lt;img src="https://maven-badges.herokuapp.com/maven-central/org.apache.beam/beam-sdks-java-core/badge.svg?sanitize=true" alt="Maven Version" /&gt;&lt;/a&gt; &lt;a href="https://badge.fury.io/py/apache-beam"&gt;&lt;img src="https://badge.fury.io/py/apache-beam.svg?sanitize=true" alt="PyPI version" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/apache/beam/sdks/v2/go"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/apache/beam/sdks/v2/go.svg?sanitize=true" alt="Go version" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/apache/beam"&gt;&lt;img src="https://codecov.io/gh/apache/beam/branch/master/graph/badge.svg?sanitize=true" alt="Python coverage" /&gt;&lt;/a&gt; &lt;a href="https://github.com/apache/beam/actions?query=workflow%3A%22Build+python+source+distribution+and+wheels%22+branch%3Amaster+event%3Aschedule"&gt;&lt;img src="https://github.com/apache/beam/actions/workflows/build_wheels.yml/badge.svg?event=schedule&amp;amp;&amp;amp;?branch=master" alt="Build python source distribution and wheels" /&gt;&lt;/a&gt; &lt;a href="https://github.com/apache/beam/actions?query=workflow%3A%22Python+Tests%22+branch%3Amaster+event%3Aschedule"&gt;&lt;img src="https://github.com/apache/beam/actions/workflows/python_tests.yml/badge.svg?event=schedule&amp;amp;&amp;amp;?branch=master" alt="Python tests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/apache/beam/actions?query=workflow%3A%22Java+Tests%22+branch%3Amaster+event%3Aschedule"&gt;&lt;img src="https://github.com/apache/beam/actions/workflows/java_tests.yml/badge.svg?event=schedule&amp;amp;&amp;amp;?branch=master" alt="Java tests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/apache/beam/actions?query=workflow%3A%22Go+Tests%22+branch%3Amaster+event%3Aschedule"&gt;&lt;img src="https://github.com/apache/beam/actions/workflows/go_tests.yml/badge.svg?event=schedule&amp;amp;&amp;amp;?branch=master" alt="Go tests" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Beam provides a general approach to expressing &lt;a href="https://en.wikipedia.org/wiki/Embarrassingly_parallel"&gt;embarrassingly parallel&lt;/a&gt; data processing pipelines and supports three categories of users, each of which have relatively disparate backgrounds and needs.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;em&gt;End Users&lt;/em&gt;: Writing pipelines with an existing SDK, running it on an existing runner. These users want to focus on writing their application logic and have everything else just work.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;SDK Writers&lt;/em&gt;: Developing a Beam SDK targeted at a specific user community (Java, Python, Scala, Go, R, graphical, etc). These users are language geeks and would prefer to be shielded from all the details of various runners and their implementations.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Runner Writers&lt;/em&gt;: Have an execution environment for distributed processing and would like to support programs written against the Beam Model. Would prefer to be shielded from details of multiple SDKs.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;The Beam Model&lt;/h3&gt; 
&lt;p&gt;The model behind Beam evolved from several internal Google data processing projects, including &lt;a href="http://research.google.com/archive/mapreduce.html"&gt;MapReduce&lt;/a&gt;, &lt;a href="http://research.google.com/pubs/pub35650.html"&gt;FlumeJava&lt;/a&gt;, and &lt;a href="http://research.google.com/pubs/pub41378.html"&gt;Millwheel&lt;/a&gt;. This model was originally known as the “&lt;a href="http://www.vldb.org/pvldb/vol8/p1792-Akidau.pdf"&gt;Dataflow Model&lt;/a&gt;”.&lt;/p&gt; 
&lt;p&gt;To learn more about the Beam Model (though still under the original name of Dataflow), see the World Beyond Batch: &lt;a href="https://www.oreilly.com/ideas/the-world-beyond-batch-streaming-101"&gt;Streaming 101&lt;/a&gt; and &lt;a href="https://www.oreilly.com/ideas/the-world-beyond-batch-streaming-102"&gt;Streaming 102&lt;/a&gt; posts on O’Reilly’s Radar site, and the &lt;a href="http://www.vldb.org/pvldb/vol8/p1792-Akidau.pdf"&gt;VLDB 2015 paper&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The key concepts in the Beam programming model are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;PCollection&lt;/code&gt;: represents a collection of data, which could be bounded or unbounded in size.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PTransform&lt;/code&gt;: represents a computation that transforms input PCollections into output PCollections.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Pipeline&lt;/code&gt;: manages a directed acyclic graph of PTransforms and PCollections that is ready for execution.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PipelineRunner&lt;/code&gt;: specifies where and how the pipeline should execute.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;SDKs&lt;/h3&gt; 
&lt;p&gt;Beam supports multiple language-specific SDKs for writing pipelines against the Beam Model.&lt;/p&gt; 
&lt;p&gt;Currently, this repository contains SDKs for Java, Python and Go.&lt;/p&gt; 
&lt;p&gt;Have ideas for new SDKs or DSLs? See the &lt;a href="https://github.com/apache/beam/issues?q=is%3Aopen+is%3Aissue+label%3Asdk-ideas"&gt;sdk-ideas label&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Specific SDK Readmes&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/apache/beam/master/sdks/python/README.md"&gt;Python SDK readme&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Runners&lt;/h3&gt; 
&lt;p&gt;Beam supports executing programs on multiple distributed processing backends through PipelineRunners. Currently, the following PipelineRunners are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;DirectRunner&lt;/code&gt; runs the pipeline on your local machine.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;PrismRunner&lt;/code&gt; runs the pipeline on your local machine using Beam Portability.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;DataflowRunner&lt;/code&gt; submits the pipeline to the &lt;a href="http://cloud.google.com/dataflow/"&gt;Google Cloud Dataflow&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;FlinkRunner&lt;/code&gt; runs the pipeline on an Apache Flink cluster. The code has been donated from &lt;a href="https://github.com/dataArtisans/flink-dataflow"&gt;dataArtisans/flink-dataflow&lt;/a&gt; and is now part of Beam.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;SparkRunner&lt;/code&gt; runs the pipeline on an Apache Spark cluster.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;JetRunner&lt;/code&gt; runs the pipeline on a Hazelcast Jet cluster. The code has been donated from &lt;a href="https://github.com/hazelcast/hazelcast-jet"&gt;hazelcast/hazelcast-jet&lt;/a&gt; and is now part of Beam.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;Twister2Runner&lt;/code&gt; runs the pipeline on a Twister2 cluster. The code has been donated from &lt;a href="https://github.com/DSC-SPIDAL/twister2"&gt;DSC-SPIDAL/twister2&lt;/a&gt; and is now part of Beam.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Have ideas for new Runners? See the &lt;a href="https://github.com/apache/beam/issues?q=is%3Aopen+is%3Aissue+label%3Arunner-ideas"&gt;runner-ideas label&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Instructions for building and testing Beam itself are in the &lt;a href="https://raw.githubusercontent.com/apache/beam/master/CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📚 Learn More&lt;/h2&gt; 
&lt;p&gt;Here are some resources actively maintained by the Beam community to help you get started:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;b&gt;Resource&lt;/b&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;b&gt;Details&lt;/b&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://beam.apache.org" target="_blank" rel="noopener noreferrer"&gt;Apache Beam Website&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Our website discussing the project, and it's specifics.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://beam.apache.org/get-started/quickstart-java" target="_blank" rel="noopener noreferrer"&gt;Java Quickstart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A guide to getting started with the Java SDK.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://beam.apache.org/get-started/quickstart-py" target="_blank" rel="noopener noreferrer"&gt;Python Quickstart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A guide to getting started with the Python SDK.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://beam.apache.org/get-started/quickstart-go" target="_blank" rel="noopener noreferrer"&gt;Go Quickstart &lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A guide to getting started with the Go SDK.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://tour.beam.apache.org/" target="_blank" rel="noopener noreferrer"&gt;Tour of Beam &lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A comprehensive, interactive learning experience covering Beam concepts in depth.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.cloudskillsboost.google/course_templates/724" target="_blank" rel="noopener noreferrer"&gt;Beam Quest &lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A certification granted by Google Cloud, certifying proficiency in Beam.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://metrics.beam.apache.org/" target="_blank" rel="noopener noreferrer"&gt;Community Metrics &lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Beam's Git Community Metrics.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;p&gt;To get involved with Apache Beam:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://beam.apache.org/community/contact-us/#:~:text=Subscribe%20and%20Unsubscribe"&gt;Subscribe to&lt;/a&gt; or e-mail the &lt;a href="http://mail-archives.apache.org/mod_mbox/beam-user/"&gt;user@beam.apache.org&lt;/a&gt; list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://beam.apache.org/community/contact-us/#:~:text=Subscribe%20and%20Unsubscribe"&gt;Subscribe to&lt;/a&gt; or e-mail the &lt;a href="http://mail-archives.apache.org/mod_mbox/beam-dev/"&gt;dev@beam.apache.org&lt;/a&gt; list.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://s.apache.org/slack-invite"&gt;Join ASF Slack&lt;/a&gt; on &lt;a href="https://s.apache.org/beam-slack-channel"&gt;#beam channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apache/beam/issues/new/choose"&gt;Report an issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Card-Forge/forge</title>
      <link>https://github.com/Card-Forge/forge</link>
      <description>&lt;p&gt;An unofficial rules engine for the world's greatest card game.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;⚔️ Forge: The Magic: The Gathering Rules Engine&lt;/h1&gt; 
&lt;p&gt;Join the &lt;strong&gt;Forge community&lt;/strong&gt; on &lt;a href="https://discord.gg/HcPJNyD66a"&gt;Discord&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Card-Forge/forge/actions/workflows/test-build.yaml"&gt;&lt;img src="https://github.com/Card-Forge/forge/actions/workflows/test-build.yaml/badge.svg?sanitize=true" alt="Test build" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;✨ Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Forge&lt;/strong&gt; is a dynamic and open-source &lt;strong&gt;Rules Engine&lt;/strong&gt; tailored for &lt;strong&gt;Magic: The Gathering&lt;/strong&gt; enthusiasts. Developed by a community of passionate programmers, Forge allows players to explore the rich universe of MTG through a flexible, engaging platform.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Forge operates independently and is not affiliated with Wizards of the Coast.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🌟 Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 Cross-Platform Support:&lt;/strong&gt; Play on &lt;strong&gt;Windows, Mac, Linux,&lt;/strong&gt; and &lt;strong&gt;Android&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔧 Extensible Architecture:&lt;/strong&gt; Built in &lt;strong&gt;Java&lt;/strong&gt;, Forge encourages developers to contribute by adding features and cards.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎮 Versatile Gameplay:&lt;/strong&gt; Dive into single-player modes or challenge opponents online!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛠️ Installation Guide&lt;/h2&gt; 
&lt;h3&gt;📥 Desktop Installation&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Latest Releases:&lt;/strong&gt; Download the latest version &lt;a href="https://github.com/Card-Forge/forge/releases/latest"&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Snapshot Build:&lt;/strong&gt; For the latest development version, grab the &lt;code&gt;forge-gui-desktop&lt;/code&gt; tarball from our &lt;a href="https://github.com/Card-Forge/forge/releases/tag/daily-snapshots"&gt;Snapshot Build&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Extract to a new folder to prevent version conflicts.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User Data Management:&lt;/strong&gt; Previous players’ data is preserved during upgrades.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Java Requirement:&lt;/strong&gt; Ensure you have &lt;strong&gt;Java 17 or later&lt;/strong&gt; installed.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;📱 Android Installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;(Note: &lt;strong&gt;Android 11&lt;/strong&gt; is the minimum requirements with at least &lt;strong&gt;6GB RAM&lt;/strong&gt; to run smoothly. You need to enable &lt;strong&gt;"Install unknown apps"&lt;/strong&gt; for Forge to initialize and update itself)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Download the &lt;strong&gt;APK&lt;/strong&gt; from the &lt;a href="https://github.com/Card-Forge/forge/releases/tag/daily-snapshots"&gt;Snapshot Build&lt;/a&gt;. On the first launch, Forge will automatically download all necessary assets.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎮 Modes of Play&lt;/h2&gt; 
&lt;p&gt;Forge offers various exciting gameplay options:&lt;/p&gt; 
&lt;h3&gt;🌍 Adventure Mode&lt;/h3&gt; 
&lt;p&gt;Embark on a thrilling single-player journey where you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Explore an overworld map.&lt;/li&gt; 
 &lt;li&gt;Challenge diverse AI opponents.&lt;/li&gt; 
 &lt;li&gt;Collect cards and items to boost your abilities.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img width="1282" height="752" alt="Shandalar World" src="https://github.com/user-attachments/assets/9af31471-d688-442f-9418-9807d8635b72" /&gt; 
&lt;h3&gt;🔍 Quest Modes&lt;/h3&gt; 
&lt;p&gt;Engage in focused gameplay without the overworld exploration—perfect for quick sessions!&lt;/p&gt; 
&lt;img width="1282" height="752" alt="Quest Duels" src="https://github.com/user-attachments/assets/b9613b1c-e8c3-4320-8044-6922c519aad4" /&gt; 
&lt;h3&gt;🤖 AI Formats&lt;/h3&gt; 
&lt;p&gt;Test your skills against AI in multiple formats:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Sealed&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Draft&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Commander&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cube&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For comprehensive gameplay instructions, visit our &lt;a href="https://github.com/Card-Forge/forge/wiki/Gameplay-Guide"&gt;Gameplay Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;img width="1282" height="752" alt="Sealed" src="https://github.com/user-attachments/assets/ae603dbd-4421-4753-a333-87cb0a28d772" /&gt; 
&lt;hr /&gt; 
&lt;h2&gt;💬 Support &amp;amp; Community&lt;/h2&gt; 
&lt;p&gt;Need help? Join our vibrant Discord community!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📜 Read the &lt;strong&gt;#rules&lt;/strong&gt; and explore the &lt;strong&gt;FAQ&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;❓ Ask your questions in the &lt;strong&gt;#help&lt;/strong&gt; channel for assistance.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🤝 Contributing to Forge&lt;/h2&gt; 
&lt;p&gt;We love community contributions! Interested in helping? Check out our &lt;a href="https://raw.githubusercontent.com/Card-Forge/forge/master/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt; for details on how to get started.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;ℹ️ About Forge&lt;/h2&gt; 
&lt;p&gt;Forge aims to deliver an immersive and customizable Magic: The Gathering experience for fans around the world.&lt;/p&gt; 
&lt;h3&gt;📊 Repository Statistics&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Metric&lt;/th&gt; 
   &lt;th&gt;Count&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;⭐ Stars:&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Card-Forge/forge/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/Card-Forge/forge?style=flat-square" alt="GitHub stars" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🍴 Forks:&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Card-Forge/forge/network"&gt;&lt;img src="https://img.shields.io/github/forks/Card-Forge/forge?style=flat-square" alt="GitHub forks" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;👥 Contributors:&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Card-Forge/forge/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/Card-Forge/forge?style=flat-square" alt="GitHub contributors" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;📄 License:&lt;/strong&gt; &lt;a href="https://raw.githubusercontent.com/Card-Forge/forge/master/LICENSE"&gt;GPL-3.0&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center" style="display: flex; align-items: center; justify-content: center;"&gt; 
 &lt;div style="margin-left: auto;"&gt; 
  &lt;a href="https://raw.githubusercontent.com/Card-Forge/forge/master/#top"&gt; &lt;img src="https://img.shields.io/badge/Back%20to%20Top-000000?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="Back to Top" /&gt; &lt;/a&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>apache/logging-log4j2</title>
      <link>https://github.com/apache/logging-log4j2</link>
      <description>&lt;p&gt;Apache Log4j is a versatile, feature-rich, efficient logging API and backend for Java.&lt;/p&gt;&lt;hr&gt;&lt;div class="paragraph"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/apache/logging-log4j2/actions/workflows/build.yaml"&gt;&lt;span class="image"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/apache/logging-log4j2/build.yaml?branch=2.x&amp;amp;label=build%20%282.x%29" alt="Build (2.x)" /&gt;&lt;/span&gt;&lt;/a&gt; &lt;a href="https://search.maven.org/artifact/org.apache.logging.log4j/log4j-api"&gt;&lt;span class="image"&gt;&lt;img src="https://img.shields.io/maven-central/v/org.apache.logging.log4j/log4j-api?versionPrefix=2." alt="Maven Central (2.x)" /&gt;&lt;/span&gt;&lt;/a&gt; &lt;a href="https://github.com/apache/logging-log4j2/security/code-scanning"&gt;&lt;span class="image"&gt;&lt;img src="https://github.com/apache/logging-log4j2/actions/workflows/codeql-analysis.yaml/badge.svg?branch=2.x" alt="CodeQL (2.x)" /&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class="paragraph"&gt; 
 &lt;p&gt;Apache Log4j is a versatile, industrial-grade Java logging framework composed of an API, its implementation, and components to assist the deployment for various use cases. For further information (support, download, etc.) see &lt;a href="https://logging.apache.org/log4j"&gt;the project website&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="development"&gt;Development&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Looking for &lt;strong&gt;build instructions&lt;/strong&gt;, branching scheme, and other developer resources? See &lt;a href="https://logging.apache.org/log4j/2.x/development.html"&gt;the Development page&lt;/a&gt; at the website.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>google/guava</title>
      <link>https://github.com/google/guava</link>
      <description>&lt;p&gt;Google core libraries for Java&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Guava: Google Core Libraries for Java&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/google/guava/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/google/guava" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google/guava/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/google/guava/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/7197"&gt;&lt;img src="https://www.bestpractices.dev/projects/7197/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Guava is a set of core Java libraries from Google that includes new collection types (such as multimap and multiset), immutable collections, a graph library, and utilities for concurrency, I/O, hashing, primitives, strings, and more! It is widely used on most Java projects within Google, and widely used by many other companies as well.&lt;/p&gt; 
&lt;p&gt;Guava comes in two flavors:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The JRE flavor requires JDK 1.8 or higher.&lt;/li&gt; 
 &lt;li&gt;If you need support for Android, use &lt;a href="https://github.com/google/guava/wiki/Android"&gt;the Android flavor&lt;/a&gt;. You can find the Android Guava source in the &lt;a href="https://github.com/google/guava/tree/master/android"&gt;&lt;code&gt;android&lt;/code&gt; directory&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adding Guava to your build&lt;/h2&gt; 
&lt;p&gt;Guava's Maven group ID is &lt;code&gt;com.google.guava&lt;/code&gt;, and its artifact ID is &lt;code&gt;guava&lt;/code&gt;. Guava provides two different "flavors": one for use on a (Java 8+) JRE and one for use on Android or by any library that wants to be compatible with Android. These flavors are specified in the Maven version field as either &lt;code&gt;33.5.0-jre&lt;/code&gt; or &lt;code&gt;33.5.0-android&lt;/code&gt;. For more about depending on Guava, see &lt;a href="https://github.com/google/guava/wiki/UseGuavaInYourBuild"&gt;using Guava in your build&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To add a dependency on Guava using Maven, use the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;com.google.guava&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;guava&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;33.5.0-jre&amp;lt;/version&amp;gt;
  &amp;lt;!-- or, for Android: --&amp;gt;
  &amp;lt;version&amp;gt;33.5.0-android&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To add a dependency using Gradle:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-gradle"&gt;dependencies {
  // Pick one:

  // 1. Use Guava in your implementation only:
  implementation("com.google.guava:guava:33.5.0-jre")

  // 2. Use Guava types in your public API:
  api("com.google.guava:guava:33.5.0-jre")

  // 3. Android - Use Guava in your implementation only:
  implementation("com.google.guava:guava:33.5.0-android")

  // 4. Android - Use Guava types in your public API:
  api("com.google.guava:guava:33.5.0-android")
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on when to use &lt;code&gt;api&lt;/code&gt; and when to use &lt;code&gt;implementation&lt;/code&gt;, consult the &lt;a href="https://docs.gradle.org/current/userguide/java_library_plugin.html#sec:java_library_separation"&gt;Gradle documentation on API and implementation separation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Snapshots and Documentation&lt;/h2&gt; 
&lt;p&gt;Snapshots of Guava built from the &lt;code&gt;master&lt;/code&gt; branch are available through Maven using version &lt;code&gt;999.0.0-HEAD-jre-SNAPSHOT&lt;/code&gt;, or &lt;code&gt;999.0.0-HEAD-android-SNAPSHOT&lt;/code&gt; for the Android flavor.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://guava.dev/releases/snapshot-jre/api/docs/"&gt;Snapshot API Javadoc&lt;/a&gt; as well as &lt;a href="https://guava.dev/releases/snapshot-jre/api/diffs/"&gt;Snapshot API Diffs&lt;/a&gt; are also available.&lt;/p&gt; 
&lt;p&gt;Another easy way to get to the Javadoc is to open &lt;a href="https://guava.dev/api"&gt;guava.dev/api&lt;/a&gt;. You can also jump right to a specific class by appending the class name to guava.dev. For example, &lt;a href="https://guava.dev/ImmutableList"&gt;guava.dev/ImmutableList&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Learn about Guava&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Our users' guide, &lt;a href="https://github.com/google/guava/wiki/Home"&gt;Guava Explained&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tfnico.com/presentations/google-guava"&gt;A nice collection&lt;/a&gt; of other helpful links&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/guava"&gt;GitHub project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/guava/issues/new"&gt;Issue tracker: Report a defect or feature request&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/ask?tags=guava+java"&gt;StackOverflow: Ask "how-to" and "why-didn't-it-work" questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://groups.google.com/group/guava-announce"&gt;guava-announce: Announcements of releases and upcoming significant changes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://groups.google.com/group/guava-discuss"&gt;guava-discuss: For open-ended questions and discussion&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;IMPORTANT WARNINGS&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;APIs marked with the &lt;code&gt;@Beta&lt;/code&gt; annotation at the class or method level are subject to change. They can be modified in any way, or even removed, at any time. If your code is a library itself (i.e., it is used on the CLASSPATH of users outside your own control), you should not use beta APIs unless you &lt;a href="https://github.com/google/guava/wiki/UseGuavaInYourBuild#what-if-i-want-to-use-beta-apis-from-a-library-that-people-use-as-a-dependency"&gt;repackage&lt;/a&gt; them. &lt;strong&gt;If your code is a library, we strongly recommend using the &lt;a href="https://github.com/google/guava-beta-checker"&gt;Guava Beta Checker&lt;/a&gt; to ensure that you do not use any &lt;code&gt;@Beta&lt;/code&gt; APIs!&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;APIs without &lt;code&gt;@Beta&lt;/code&gt; will remain binary-compatible for the indefinite future. (Previously, we sometimes removed such APIs after a deprecation period. The last release to remove non-&lt;code&gt;@Beta&lt;/code&gt; APIs was Guava 21.0.) Even &lt;code&gt;@Deprecated&lt;/code&gt; APIs will remain (again, unless they are &lt;code&gt;@Beta&lt;/code&gt;). We have no plans to start removing things again, but officially, we're leaving our options open in case of surprises (like, say, a serious security problem).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Guava has one dependency that is needed for linkage at runtime: &lt;code&gt;com.google.guava:failureaccess:1.0.3&lt;/code&gt;. It also has &lt;a href="https://github.com/google/guava/wiki/UseGuavaInYourBuild#what-about-guavas-own-dependencies"&gt;some annotation-only dependencies&lt;/a&gt;, which we discuss in more detail at that link.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Serialized forms of ALL objects are subject to change unless noted otherwise. Do not persist these and assume they can be read by a future version of the library.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Our classes are not designed to protect against a malicious caller. You should not use them for communication between trusted and untrusted code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For the mainline flavor, we test the libraries using OpenJDK 8, 11, and 17 on Linux, with some additional testing on newer JDKs and on Windows. Some features, especially in &lt;code&gt;com.google.common.io&lt;/code&gt;, may not work correctly in non-Linux environments. For the Android flavor, our unit tests also run on API level 23 (Marshmallow).&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- References --&gt;</description>
    </item>
    
    <item>
      <title>languagetool-org/languagetool</title>
      <link>https://github.com/languagetool-org/languagetool</link>
      <description>&lt;p&gt;Style and Grammar Checker for 25+ Languages&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;LanguageTool&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;LanguageTool&lt;/strong&gt; is an Open Source proofreading software for English, Spanish, French, German, Portuguese, Polish, Dutch, and &lt;a href="https://languagetool.org/languages/"&gt;more than 20 other languages&lt;/a&gt;. It finds many errors that a simple spell checker cannot detect.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://forum.languagetool.org"&gt;LanguageTool Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.languagetool.org/http-server"&gt;How to run your own LanguageTool server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://languagetool.org/http-api/swagger-ui/#!/default/post_check"&gt;HTTP API documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.languagetool.org/public-http-api"&gt;How to use our public server via HTTP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.languagetool.org/java-api"&gt;How to use LanguageTool from Java&lt;/a&gt; (&lt;a href="https://languagetool.org/development/api/index.html?org/languagetool/JLanguageTool.html"&gt;Javadoc&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, please see our homepage at &lt;a href="https://languagetool.org"&gt;https://languagetool.org&lt;/a&gt;, &lt;a href="https://github.com/languagetool-org/languagetool/raw/master/languagetool-standalone/README.md"&gt;this README&lt;/a&gt;, and &lt;a href="https://github.com/languagetool-org/languagetool/raw/master/languagetool-standalone/CHANGES.md"&gt;CHANGES&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The LanguageTool core (this repo) is freely available under the LGPL 2.1 or later.&lt;/p&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;p&gt;Try one of the following projects for a community-contributed Docker file:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meyayl/docker-languagetool"&gt;https://github.com/meyayl/docker-languagetool&lt;/a&gt; (&lt;a href="https://hub.docker.com/r/meyay/languagetool"&gt;Docker Hub&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Erikvl87/docker-languagetool"&gt;https://github.com/Erikvl87/docker-languagetool&lt;/a&gt; (&lt;a href="https://hub.docker.com/r/erikvl87/languagetool"&gt;Docker Hub&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/silvio/docker-languagetool"&gt;https://github.com/silvio/docker-languagetool&lt;/a&gt; (&lt;a href="https://hub.docker.com/r/silviof/docker-languagetool"&gt;Docker Hub&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://dev.languagetool.org/development-overview"&gt;The development overview&lt;/a&gt; describes how you can contribute error detection rules.&lt;/p&gt; 
&lt;p&gt;For more technical details, see &lt;a href="https://dev.languagetool.org"&gt;our dev pages&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Scripted installation and building&lt;/h2&gt; 
&lt;p&gt;To install or build using a script, simply type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -L https://raw.githubusercontent.com/languagetool-org/languagetool/master/install.sh | sudo bash &amp;lt;options&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you wish to have more options, download the &lt;code&gt;install.sh&lt;/code&gt; script. Usage options follow:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo bash install.sh &amp;lt;options&amp;gt;

Usage: install.sh &amp;lt;option&amp;gt; &amp;lt;package&amp;gt;
Options:
   -h --help                   Show help
   -b --build                  Builds packages from the bleeding edge development copy of LanguageTool
   -c --command &amp;lt;command&amp;gt;      Specifies post-installation command to run (default gui when screen is detected)
   -q --quiet                  Shut up LanguageTool installer! Only tell me important stuff!
   -t --text &amp;lt;file&amp;gt;            Specifies what text to be spellchecked by LanguageTool command line (default spellcheck.txt)
   -d --depth &amp;lt;value&amp;gt;          Specifies the depth to clone when building LanguageTool yourself (default 1).
   -p --package &amp;lt;package&amp;gt;      Specifies package to install when building (default all)
   -o --override &amp;lt;OS&amp;gt;          Override automatic OS detection with &amp;lt;OS&amp;gt;
   -a --accept                 Accept the oracle license at http://java.com/license. Only run this if you have seen the license and agree to its terms!
   -r --remove &amp;lt;all/partial&amp;gt;   Removes LanguageTool install. &amp;lt;all&amp;gt; uninstalls the dependencies that were auto-installed. (default partial)

Packages(only if -b is specified):
   standalone                  Installs standalone package
   wikipedia                   Installs Wikipedia package
   office-extension            Installs the LibreOffice/OpenOffice extension package

Commands:
   GUI                         Runs GUI version of LanguageTool
   commandline                 Runs command line version of LanguageTool
   server                      Runs server version of LanguageTool
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Alternate way to build from source&lt;/h2&gt; 
&lt;p&gt;Before start: you will need to clone from GitHub and install Java 17 and Apache Maven.&lt;/p&gt; 
&lt;p&gt;Warning: a complete clone requires downloading more than 500 MB and needs more than 1500 MB on disk. This can be reduced if you only need the last few revisions of the master branch by creating a shallow clone:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone --depth 5 https://github.com/languagetool-org/languagetool.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A shallow clone downloads less than 60 MB and needs less than 200 MB on disk.&lt;/p&gt; 
&lt;p&gt;In the root project folder, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mvn clean test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(sometimes you can skip Maven step for repeated builds)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./build.sh languagetool-standalone package -DskipTests
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Test the result in &lt;code&gt;languagetool-standalone/target/&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./build.sh languagetool-wikipedia package -DskipTests
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Test the result in &lt;code&gt;languagetool-wikipedia/target&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Now you can use the bleeding edge development copy of LanguageTool &lt;code&gt;*.jar&lt;/code&gt; files, be aware that it might contain regressions.&lt;/p&gt; 
&lt;h3&gt;How to run under Mac M1 or M2&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Brew for Rosetta: &lt;code&gt;arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install openjdk for Rosetta: &lt;code&gt;arch -x86_64 brew install openjdk&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install Maven for Rosetta: &lt;code&gt;arch -x86_64 brew install maven&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Now run build scripts&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Unless otherwise noted, this software - the LanguageTool core - is distributed under the LGPL, see file &lt;a href="https://github.com/languagetool-org/languagetool/raw/master/COPYING.txt"&gt;COPYING.txt&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kestra-io/kestra</title>
      <link>https://github.com/kestra-io/kestra</link>
      <description>&lt;p&gt;Orchestrate everything - from scripts to data, infra, AI, and business - as code, with UI and AI Copilot. Simple. Fast. Scalable.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.kestra.io"&gt; &lt;img src="https://kestra.io/banner.png" alt="Kestra workflow orchestrator" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align="center" style="border-bottom: none"&gt; Event-Driven Declarative Orchestration Platform &lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/kestra-io/kestra/releases"&gt;&lt;img src="https://img.shields.io/github/tag-pre/kestra-io/kestra.svg?color=blueviolet" alt="Last Version" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/kestra-io/kestra/raw/develop/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/kestra-io/kestra?color=blueviolet" alt="License" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/kestra-io/kestra/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/kestra-io/kestra?color=blueviolet&amp;amp;logo=github" alt="Github star" /&gt;&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;a href="https://kestra.io"&gt;&lt;img src="https://img.shields.io/badge/Website-kestra.io-192A4E?color=blueviolet" alt="Kestra infinitely scalable orchestration and scheduling platform" /&gt;&lt;/a&gt; 
 &lt;a href="https://kestra.io/slack"&gt;&lt;img src="https://img.shields.io/badge/Slack-Join%20Community-blueviolet?logo=slack" alt="Slack" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://twitter.com/kestra_io" style="margin: 0 10px;"&gt; &lt;img height="25" src="https://kestra.io/twitter.svg?sanitize=true" alt="twitter" width="35" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/kestra/" style="margin: 0 10px;"&gt; &lt;img height="25" src="https://kestra.io/linkedin.svg?sanitize=true" alt="linkedin" width="35" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/@kestra-io" style="margin: 0 10px;"&gt; &lt;img height="25" src="https://kestra.io/youtube.svg?sanitize=true" alt="youtube" width="35" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/2714" target="_blank"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/2714" alt="kestra-io%2Fkestra | Trendshift" width="250" height="55" /&gt; &lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/kestra?embed=true&amp;amp;utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-kestra" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=612077&amp;amp;theme=light&amp;amp;period=daily&amp;amp;t=1740737506162" alt="Kestra - All-in-one automation &amp;amp; orchestration platform | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://go.kestra.io/video/product-overview" target="_blank"&gt; &lt;img src="https://kestra.io/startvideo.png" alt="Get started in 3 minutes with Kestra" width="640px" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center" style="color:grey;"&gt;&lt;i&gt;Click on the image to learn how to get started with Kestra in 3 minutes.&lt;/i&gt;&lt;/p&gt; 
&lt;h2&gt;🌟 What is Kestra?&lt;/h2&gt; 
&lt;p&gt;Kestra is an open-source, event-driven orchestration platform that makes both &lt;strong&gt;scheduled&lt;/strong&gt; and &lt;strong&gt;event-driven&lt;/strong&gt; workflows easy. By bringing &lt;strong&gt;Infrastructure as Code&lt;/strong&gt; best practices to data, process, and microservice orchestration, you can build reliable &lt;a href="https://kestra.io/docs/getting-started"&gt;workflows&lt;/a&gt; directly from the UI in just a few lines of YAML.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Everything as Code and from the UI:&lt;/strong&gt; keep &lt;strong&gt;workflows as code&lt;/strong&gt; with a &lt;strong&gt;Git Version Control&lt;/strong&gt; integration, even when building them from the UI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Event-Driven &amp;amp; Scheduled Workflows:&lt;/strong&gt; automate both &lt;strong&gt;scheduled&lt;/strong&gt; and &lt;strong&gt;real-time&lt;/strong&gt; event-driven workflows via a simple &lt;code&gt;trigger&lt;/code&gt; definition.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative YAML Interface:&lt;/strong&gt; define workflows using a simple configuration in the &lt;strong&gt;built-in code editor&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rich Plugin Ecosystem:&lt;/strong&gt; hundreds of plugins built in to extract data from any database, cloud storage, or API, and &lt;strong&gt;run scripts in any language&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Intuitive UI &amp;amp; Code Editor:&lt;/strong&gt; build and visualize workflows directly from the UI with syntax highlighting, auto-completion and real-time syntax validation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable:&lt;/strong&gt; designed to handle millions of workflows, with high availability and fault tolerance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Version Control Friendly:&lt;/strong&gt; write your workflows from the built-in code Editor and push them to your preferred Git branch directly from Kestra, enabling best practices with CI/CD pipelines and version control systems.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Structure &amp;amp; Resilience&lt;/strong&gt;: tame chaos and bring resilience to your workflows with &lt;strong&gt;namespaces&lt;/strong&gt;, &lt;strong&gt;labels&lt;/strong&gt;, &lt;strong&gt;subflows&lt;/strong&gt;, &lt;strong&gt;retries&lt;/strong&gt;, &lt;strong&gt;timeout&lt;/strong&gt;, &lt;strong&gt;error handling&lt;/strong&gt;, &lt;strong&gt;inputs&lt;/strong&gt;, &lt;strong&gt;outputs&lt;/strong&gt; that generate artifacts in the UI, &lt;strong&gt;variables&lt;/strong&gt;, &lt;strong&gt;conditional branching&lt;/strong&gt;, &lt;strong&gt;advanced scheduling&lt;/strong&gt;, &lt;strong&gt;event triggers&lt;/strong&gt;, &lt;strong&gt;backfills&lt;/strong&gt;, &lt;strong&gt;dynamic tasks&lt;/strong&gt;, &lt;strong&gt;sequential and parallel tasks&lt;/strong&gt;, and skip tasks or triggers when needed by setting the flag &lt;code&gt;disabled&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🧑‍💻 The YAML definition gets automatically adjusted any time you make changes to a workflow from the UI or via an API call. Therefore, the orchestration logic is &lt;strong&gt;always managed declaratively in code&lt;/strong&gt;, even if you modify your workflows in other ways (UI, CI/CD, Terraform, API calls).&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://kestra.io/adding-tasks.gif" alt="Adding new tasks in the UI" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;h3&gt;Get Started Locally in 5 Minutes&lt;/h3&gt; 
&lt;h4&gt;Launch Kestra in Docker&lt;/h4&gt; 
&lt;p&gt;Make sure that Docker is running. Then, start Kestra in a single command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root \
  -v /var/run/docker.sock:/var/run/docker.sock \
  -v /tmp:/tmp kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows and use PowerShell:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root `
    -v "/var/run/docker.sock:/var/run/docker.sock" `
    -v "C:/Temp:/tmp" kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows and use Command Prompt (CMD):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cmd"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root ^
    -v "/var/run/docker.sock:/var/run/docker.sock" ^
    -v "C:/Temp:/tmp" kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows and use WSL (Linux-based environment in Windows):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root \
    -v "/var/run/docker.sock:/var/run/docker.sock" \
    -v "C:/Temp:/tmp" kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check our &lt;a href="https://kestra.io/docs/installation"&gt;Installation Guide&lt;/a&gt; for other deployment options (Docker Compose, Podman, Kubernetes, AWS, GCP, Azure, and more).&lt;/p&gt; 
&lt;p&gt;Access the Kestra UI at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt; and start building your first flow!&lt;/p&gt; 
&lt;h4&gt;Your First Hello World Flow&lt;/h4&gt; 
&lt;p&gt;Create a new flow with the following content:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;id: hello_world
namespace: dev

tasks:
  - id: say_hello
    type: io.kestra.plugin.core.log.Log
    message: "Hello, World!"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the flow and see the output in the UI!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🧩 Plugin Ecosystem&lt;/h2&gt; 
&lt;p&gt;Kestra's functionality is extended through a rich &lt;a href="https://kestra.io/plugins"&gt;ecosystem of plugins&lt;/a&gt; that empower you to run tasks anywhere and code in any language, including Python, Node.js, R, Go, Shell, and more. Here's how Kestra plugins enhance your workflows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run Anywhere:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Local or Remote Execution:&lt;/strong&gt; Execute tasks on your local machine, remote servers via SSH, or scale out to serverless containers using &lt;a href="https://kestra.io/docs/task-runners"&gt;Task Runners&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Docker and Kubernetes Support:&lt;/strong&gt; Seamlessly run Docker containers within your workflows or launch Kubernetes jobs to handle compute-intensive workloads.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Code in Any Language:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Scripting Support:&lt;/strong&gt; Write scripts in your preferred programming language. Kestra supports Python, Node.js, R, Go, Shell, and others, allowing you to integrate existing codebases and deployment patterns.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Flexible Automation:&lt;/strong&gt; Execute shell commands, run SQL queries against various databases, and make HTTP requests to interact with APIs.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Event-Driven and Real-Time Processing:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Real-Time Triggers:&lt;/strong&gt; React to events from external systems in real-time, such as file arrivals, new messages in message buses (Kafka, Redis, Pulsar, AMQP, MQTT, NATS, AWS SQS, Google Pub/Sub, Azure Event Hubs), and more.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Custom Events:&lt;/strong&gt; Define custom events to trigger flows based on specific conditions or external signals, enabling highly responsive workflows.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cloud Integrations:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;AWS, Google Cloud, Azure:&lt;/strong&gt; Integrate with a variety of cloud services to interact with storage solutions, messaging systems, compute resources, and more.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Big Data Processing:&lt;/strong&gt; Run big data processing tasks using tools like Apache Spark or interact with analytics platforms like Google BigQuery.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Monitoring and Notifications:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Stay Informed:&lt;/strong&gt; Send messages to Slack channels, email notifications, or trigger alerts in PagerDuty to keep your team updated on workflow statuses.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Kestra's plugin ecosystem is continually expanding, allowing you to tailor the platform to your specific needs. Whether you're orchestrating complex data pipelines, automating scripts across multiple environments, or integrating with cloud services, there's likely a plugin to assist. And if not, you can always &lt;a href="https://kestra.io/docs/plugin-developer-guide/"&gt;build your own plugins&lt;/a&gt; to extend Kestra's capabilities.&lt;/p&gt; 
&lt;p&gt;🧑‍💻 &lt;strong&gt;Note:&lt;/strong&gt; This is just a glimpse of what Kestra plugins can do. Explore the full list on our &lt;a href="https://kestra.io/plugins"&gt;Plugins Page&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📚 Key Concepts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Flows:&lt;/strong&gt; the core unit in Kestra, representing a workflow composed of tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tasks:&lt;/strong&gt; individual units of work, such as running a script, moving data, or calling an API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Namespaces:&lt;/strong&gt; logical grouping of flows for organization and isolation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Triggers:&lt;/strong&gt; schedule or events that initiate the execution of flows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Inputs &amp;amp; Variables:&lt;/strong&gt; parameters and dynamic data passed into flows and tasks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎨 Build Workflows Visually&lt;/h2&gt; 
&lt;p&gt;Kestra provides an intuitive UI that allows you to interactively build and visualize your workflows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Drag-and-Drop Interface:&lt;/strong&gt; add and rearrange tasks from the Topology Editor.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-Time Validation:&lt;/strong&gt; instant feedback on your workflow's syntax and structure to catch errors early.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auto-Completion:&lt;/strong&gt; smart suggestions as you type to write flow code quickly and without syntax errors.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Live Topology View:&lt;/strong&gt; see your workflow as a Directed Acyclic Graph (DAG) that updates in real-time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔧 Extensible and Developer-Friendly&lt;/h2&gt; 
&lt;h3&gt;Plugin Development&lt;/h3&gt; 
&lt;p&gt;Create custom plugins to extend Kestra's capabilities. Check out our &lt;a href="https://kestra.io/docs/plugin-developer-guide/"&gt;Plugin Developer Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h3&gt;Infrastructure as Code&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Version Control:&lt;/strong&gt; store your flows in Git repositories.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CI/CD Integration:&lt;/strong&gt; automate deployment of flows using CI/CD pipelines.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terraform Provider:&lt;/strong&gt; manage Kestra resources with the &lt;a href="https://kestra.io/docs/terraform/"&gt;official Terraform provider&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🌐 Join the Community&lt;/h2&gt; 
&lt;p&gt;Stay connected and get support:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Slack:&lt;/strong&gt; Join our &lt;a href="https://kestra.io/slack"&gt;Slack community&lt;/a&gt; to ask questions and share ideas.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LinkedIn:&lt;/strong&gt; Follow us on &lt;a href="https://www.linkedin.com/company/kestra/"&gt;LinkedIn&lt;/a&gt; — next to Slack and GitHub, this is our main channel to share updates and product announcements.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;YouTube:&lt;/strong&gt; Subscribe to our &lt;a href="https://www.youtube.com/@kestra-io"&gt;YouTube channel&lt;/a&gt; for educational video content. We publish new videos every week!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;X:&lt;/strong&gt; Follow us on &lt;a href="https://x.com/kestra_io"&gt;X&lt;/a&gt; if you're still active there.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions of all kinds!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Report Issues:&lt;/strong&gt; Found a bug or have a feature request? Open an &lt;a href="https://github.com/kestra-io/kestra/issues"&gt;issue on GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute Code:&lt;/strong&gt; Check out our &lt;a href="https://kestra.io/docs/getting-started/contributing"&gt;Contributor Guide&lt;/a&gt; for initial guidelines, and explore our &lt;a href="https://go.kestra.io/contributing"&gt;good first issues&lt;/a&gt; for beginner-friendly tasks to tackle first.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Develop Plugins:&lt;/strong&gt; Build and share plugins using our &lt;a href="https://kestra.io/docs/plugin-developer-guide/"&gt;Plugin Developer Guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute to our Docs:&lt;/strong&gt; Contribute edits or updates to keep our &lt;a href="https://github.com/kestra-io/docs"&gt;documentation&lt;/a&gt; top-notch.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;Kestra is licensed under the Apache 2.0 License © &lt;a href="https://kestra.io"&gt;Kestra Technologies&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⭐️ Stay Updated&lt;/h2&gt; 
&lt;p&gt;Give our repository a star to stay informed about the latest features and updates!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/kestra-io/kestra"&gt;&lt;img src="https://kestra.io/star.gif" alt="Star the Repo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Thank you for considering Kestra for your workflow orchestration needs. We can't wait to see what you'll build!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>elastic/elasticsearch</title>
      <link>https://github.com/elastic/elasticsearch</link>
      <description>&lt;p&gt;Free and Open Source, Distributed, RESTful Search Engine&lt;/p&gt;&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>strimzi/strimzi-kafka-operator</title>
      <link>https://github.com/strimzi/strimzi-kafka-operator</link>
      <description>&lt;p&gt;Apache Kafka® running on Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://strimzi.io/"&gt;&lt;img src="https://raw.githubusercontent.com/strimzi/strimzi-kafka-operator/main/documentation/logo/strimzi.png" alt="Strimzi" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Run Apache Kafka on Kubernetes and OpenShift&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://scorecard.dev/viewer/?uri=github.com/strimzi/strimzi-kafka-operator"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/strimzi/strimzi-kafka-operator/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://dev.azure.com/cncf/strimzi/_build/latest?definitionId=16&amp;amp;branchName=main"&gt;&lt;img src="https://dev.azure.com/cncf/strimzi/_apis/build/status/build?branchName=main" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/strimzi/strimzi-kafka-operator/releases/latest"&gt;&lt;img src="https://img.shields.io/github/release/strimzi/strimzi-kafka-operator.svg?sanitize=true" alt="GitHub release" /&gt;&lt;/a&gt; &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/badge/license-Apache--2.0-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/strimziio"&gt;&lt;img src="https://img.shields.io/twitter/follow/strimziio?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/search?repo=strimzi-kafka-operator"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/strimzi-kafka-operator" alt="Artifact Hub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Strimzi provides a way to run an &lt;a href="https://kafka.apache.org" title="Apache Kafka"&gt;Apache Kafka®&lt;/a&gt; cluster on &lt;a href="https://kubernetes.io/" title="Kubernetes"&gt;Kubernetes&lt;/a&gt; or &lt;a href="https://www.openshift.com/" title="OpenShift"&gt;OpenShift&lt;/a&gt; in various deployment configurations. See our &lt;a href="https://strimzi.io" title="Strimzi"&gt;website&lt;/a&gt; for more details about the project.&lt;/p&gt; 
&lt;h2&gt;Quick Starts&lt;/h2&gt; 
&lt;p&gt;To get up and running quickly, check our &lt;a href="https://strimzi.io/quickstarts/"&gt;Quick Start for Minikube, OKD (OpenShift Origin) and Kubernetes Kind&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation for the current &lt;em&gt;main&lt;/em&gt; branch as well as all releases can be found on our &lt;a href="https://strimzi.io" title="Strimzi"&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The roadmap of the Strimzi Operator project is maintained as &lt;a href="https://github.com/orgs/strimzi/projects/4"&gt;GitHub Project&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting help&lt;/h2&gt; 
&lt;p&gt;If you encounter any issues while using Strimzi, you can get help using:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://slack.cncf.io/"&gt;#strimzi channel on CNCF Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lists.cncf.io/g/cncf-strimzi-users/topics"&gt;Strimzi Users mailing list&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/strimzi/strimzi-kafka-operator/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Strimzi Community Meetings&lt;/h2&gt; 
&lt;p&gt;You can join our regular community meetings:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Thursday 8:00 AM UTC (every 4 weeks starting from 4th June 2020) - &lt;a href="https://www.thetimezoneconverter.com/?t=8%3A00&amp;amp;tz=UTC"&gt;convert to your timezone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Thursday 4:00 PM UTC (every 4 weeks starting from 18th June 2020) - &lt;a href="https://www.thetimezoneconverter.com/?t=16%3A00&amp;amp;tz=UTC"&gt;convert to your timezone&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.google.com/document/d/1V1lMeMwn6d2x1LKxyydhjo2c_IFANveelLD880A6bYc/edit#heading=h.vgkvn1hr5uor"&gt;Meeting minutes, agenda and Zoom link&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/playlist?list=PLpI4X8PMthYfONZopcRd4X_stq1C14Rtn"&gt;Recordings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://calendar.google.com/calendar/embed?src=c_m9pusj5ce1b4hr8c92hsq50i00%40group.calendar.google.com"&gt;Calendar&lt;/a&gt; (&lt;a href="https://calendar.google.com/calendar/u/0?cid=Y19tOXB1c2o1Y2UxYjRocjhjOTJoc3E1MGkwMEBncm91cC5jYWxlbmRhci5nb29nbGUuY29t"&gt;Subscribe to the calendar&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;You can contribute by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Raising any issues you find using Strimzi&lt;/li&gt; 
 &lt;li&gt;Fixing issues by opening Pull Requests&lt;/li&gt; 
 &lt;li&gt;Improving documentation&lt;/li&gt; 
 &lt;li&gt;Talking about Strimzi&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All bugs, tasks or enhancements are tracked as &lt;a href="https://github.com/strimzi/strimzi-kafka-operator/issues"&gt;GitHub issues&lt;/a&gt;. Issues which might be a good start for new contributors are marked with &lt;a href="https://github.com/strimzi/strimzi-kafka-operator/labels/good-start"&gt;"good-start"&lt;/a&gt; label.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://github.com/strimzi/strimzi-kafka-operator/raw/main/development-docs/DEV_GUIDE.md"&gt;Dev guide&lt;/a&gt; describes how to build Strimzi. Before submitting a patch, please make sure to understand, how to test your changes before opening a PR &lt;a href="https://github.com/strimzi/strimzi-kafka-operator/raw/main/development-docs/TESTING.md"&gt;Test guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://strimzi.io/contributing/guide/"&gt;Documentation Contributor Guide&lt;/a&gt; describes how to contribute to Strimzi documentation.&lt;/p&gt; 
&lt;p&gt;If you want to get in touch with us first before contributing, you can use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://slack.cncf.io/"&gt;#strimzi channel on CNCF Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lists.cncf.io/g/cncf-strimzi-dev/topics"&gt;Strimzi Dev mailing list&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Strimzi is licensed under the &lt;a href="https://raw.githubusercontent.com/strimzi/strimzi-kafka-operator/main/LICENSE"&gt;Apache License&lt;/a&gt;, Version 2.0&lt;/p&gt; 
&lt;h2&gt;Container signatures&lt;/h2&gt; 
&lt;p&gt;From the 0.38.0 release, Strimzi containers are signed using the &lt;a href="https://github.com/sigstore/cosign"&gt;&lt;code&gt;cosign&lt;/code&gt; tool&lt;/a&gt;. Strimzi currently does not use the keyless signing and the transparency log. To verify the container, you can copy the following public key into a file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;-----BEGIN PUBLIC KEY-----
MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAET3OleLR7h0JqatY2KkECXhA9ZAkC
TRnbE23Wb5AzJPnpevvQ1QUEQQ5h/I4GobB7/jkGfqYkt6Ct5WOU2cc6HQ==
-----END PUBLIC KEY-----
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And use it to verify the signature:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cosign verify --key strimzi.pub quay.io/strimzi/operator:latest --insecure-ignore-tlog=true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Software Bill of Materials (SBOM)&lt;/h2&gt; 
&lt;p&gt;From the 0.38.0 release, Strimzi publishes the software bill of materials (SBOM) of our containers. The SBOMs are published as an archive with &lt;code&gt;SPDX-JSON&lt;/code&gt; and &lt;code&gt;Syft-Table&lt;/code&gt; formats signed using cosign. For releases, they are also pushed into the container registry. To verify the SBOM signatures, please use the Strimzi public key:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;-----BEGIN PUBLIC KEY-----
MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAET3OleLR7h0JqatY2KkECXhA9ZAkC
TRnbE23Wb5AzJPnpevvQ1QUEQQ5h/I4GobB7/jkGfqYkt6Ct5WOU2cc6HQ==
-----END PUBLIC KEY-----
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can use it to verify the signature of the SBOM files with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cosign verify-blob --key cosign.pub --bundle &amp;lt;SBOM-file&amp;gt;.bundle --insecure-ignore-tlog=true &amp;lt;SBOM-file&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;p&gt;Strimzi is a &lt;a href="http://cncf.io"&gt;Cloud Native Computing Foundation&lt;/a&gt; incubating project.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/strimzi/strimzi-kafka-operator/main/documentation/logo/cncf-color.png" alt="CNCF &gt;&lt;" /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>spring-projects/spring-boot</title>
      <link>https://github.com/spring-projects/spring-boot</link>
      <description>&lt;p&gt;Spring Boot helps you to create Spring-powered, production-grade applications and services with absolute minimum fuss.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Spring Boot &lt;span class="image"&gt;&lt;a class="image" href="https://github.com/spring-projects/spring-boot/actions/workflows/build-and-deploy-snapshot.yml?query=branch%3Amain"&gt;&lt;img src="https://github.com/spring-projects/spring-boot/actions/workflows/build-and-deploy-snapshot.yml/badge.svg?branch=main" alt="Build Status" /&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="image"&gt;&lt;a class="image" href="https://ge.spring.io/scans?&amp;amp;search.rootProjectNames=Spring%20Boot%20Build&amp;amp;search.rootProjectNames=spring-boot-build"&gt;&lt;img src="https://img.shields.io/badge/Revved%20up%20by-Develocity-06A0CE?logo=Gradle&amp;amp;labelColor=02303A" alt="Revved up by Develocity" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;div id="preamble"&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Spring Boot helps you to create Spring-powered, production-grade applications and services with absolute minimum fuss. It takes an opinionated view of the Spring platform so that new and existing users can quickly get to the bits they need.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;You can use Spring Boot to create stand-alone Java applications that can be started using &lt;code&gt;java -jar&lt;/code&gt; or more traditional WAR deployments. We also provide a command-line tool that runs Spring scripts.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Our primary goals are:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="ulist"&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;Provide a radically faster and widely accessible getting started experience for all Spring development.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Be opinionated, but get out of the way quickly as requirements start to diverge from the defaults.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Provide a range of non-functional features common to large classes of projects (for example, embedded servers, security, metrics, health checks, externalized configuration).&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Absolutely no code generation and no requirement for XML configuration.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_installation_and_getting_started"&gt;Installation and Getting Started&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;The &lt;a href="https://docs.spring.io/spring-boot"&gt;reference documentation&lt;/a&gt; includes detailed &lt;a href="https://docs.spring.io/spring-boot/installing.html"&gt;installation instructions&lt;/a&gt; as well as a comprehensive &lt;a href="https://docs.spring.io/spring-boot/tutorial/first-application/index.html"&gt;&lt;code&gt;getting started&lt;/code&gt;&lt;/a&gt; guide.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Here is a quick teaser of a complete Spring Boot application in Java:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="listingblock"&gt; 
   &lt;div class="content"&gt; 
    &lt;pre class="highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;import org.springframework.boot.*;
import org.springframework.boot.autoconfigure.*;
import org.springframework.web.bind.annotation.*;

@RestController
@SpringBootApplication
public class Example {

	@RequestMapping("/")
	String home() {
		return "Hello World!";
	}

	public static void main(String[] args) {
		SpringApplication.run(Example.class, args);
	}

}&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_getting_help"&gt;Getting Help&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Are you having trouble with Spring Boot? We want to help!&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="ulist"&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;Check the &lt;a href="https://docs.spring.io/spring-boot/"&gt;reference documentation&lt;/a&gt;, especially the &lt;a href="https://docs.spring.io/spring-boot/how-to/index.html"&gt;How-to’s&lt;/a&gt; — they provide solutions to the most common questions.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Learn the Spring basics — Spring Boot builds on many other Spring projects; check the &lt;a href="https://spring.io"&gt;spring.io&lt;/a&gt; website for a wealth of reference documentation. If you are new to Spring, try one of the &lt;a href="https://spring.io/guides"&gt;guides&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;If you are upgrading, read the &lt;a href="https://github.com/spring-projects/spring-boot/wiki"&gt;release notes&lt;/a&gt; for upgrade instructions and "new and noteworthy" features.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Ask a question — we monitor &lt;a href="https://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; for questions tagged with &lt;a href="https://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Report bugs with Spring Boot at &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;github.com/spring-projects/spring-boot/issues&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_contributing"&gt;Contributing&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;We welcome contributions of all kinds! Please read our &lt;a href="https://raw.githubusercontent.com/spring-projects/spring-boot/main/CONTRIBUTING.adoc"&gt;contribution guidelines&lt;/a&gt; before submitting a pull request.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_reporting_issues"&gt;Reporting Issues&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Spring Boot uses GitHub’s integrated issue tracking system to record bugs and feature requests. If you want to raise an issue, please follow the recommendations below:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="ulist"&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;Before you log a bug, please search the &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;issue tracker&lt;/a&gt; to see if someone has already reported the problem.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;If the issue doesn’t already exist, &lt;a href="https://github.com/spring-projects/spring-boot/issues/new"&gt;create a new issue&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Please provide as much information as possible with the issue report. We like to know the Spring Boot version, operating system, and JVM version you’re using.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;If you need to paste code or include a stack trace, use Markdown. ``` escapes before and after your text.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;If possible, try to create a test case or project that replicates the problem and attach it to the issue.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_building_from_source"&gt;Building from Source&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;You don’t need to build from source to use Spring Boot (binaries in &lt;a href="https://repo.spring.io"&gt;repo.spring.io&lt;/a&gt;), but if you want to try out the latest and greatest, Spring Boot can be built and published to your local Maven cache using the &lt;a href="https://docs.gradle.org/current/userguide/gradle_wrapper.html"&gt;Gradle wrapper&lt;/a&gt;. You also need JDK 24.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="listingblock"&gt; 
   &lt;div class="content"&gt; 
    &lt;pre class="highlight"&gt;&lt;code class="language-shell" data-lang="shell"&gt;$ ./gradlew publishToMavenLocal&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;This will build all of the jars and documentation and publish them to your local Maven cache. It won’t run any of the tests. If you want to build everything, use the &lt;code&gt;build&lt;/code&gt; task:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="listingblock"&gt; 
   &lt;div class="content"&gt; 
    &lt;pre class="highlight"&gt;&lt;code class="language-shell" data-lang="shell"&gt;$ ./gradlew build&lt;/code&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_modules"&gt;Modules&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;There are several modules in Spring Boot. Here is a quick overview:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot"&gt;spring-boot&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;The main library providing features that support the other parts of Spring Boot. These include:&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class="ulist"&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;The &lt;code&gt;SpringApplication&lt;/code&gt; class, providing static convenience methods that can be used to write a stand-alone Spring Application. Its sole job is to create and refresh an appropriate Spring &lt;code&gt;ApplicationContext&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Embedded web applications with a choice of container (Tomcat, Jetty).&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;First-class externalized configuration support.&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Convenience &lt;code&gt;ApplicationContext&lt;/code&gt; initializers, including support for sensible logging defaults.&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_autoconfigure"&gt;spring-boot-autoconfigure&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;Spring Boot can configure large parts of typical applications based on the content of their classpath. A single &lt;code&gt;@EnableAutoConfiguration&lt;/code&gt; annotation triggers auto-configuration of the Spring context.&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;Auto-configuration attempts to deduce which beans a user might need. For example, if &lt;code&gt;HSQLDB&lt;/code&gt; is on the classpath, and the user has not configured any database connections, then they probably want an in-memory database to be defined. Auto-configuration will always back away as the user starts to define their own beans.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_starters"&gt;spring-boot-starters&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;Starters are a set of convenient dependency descriptors that you can include in your application. You get a one-stop shop for all the Spring and related technology you need without having to hunt through sample code and copy-paste loads of dependency descriptors. For example, if you want to get started using Spring and JPA for database access, include the &lt;code&gt;spring-boot-starter-data-jpa&lt;/code&gt; dependency in your project, and you are good to go.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_actuator"&gt;spring-boot-actuator&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;Actuator endpoints let you monitor and interact with your application. Spring Boot Actuator provides the infrastructure required for actuator endpoints. It contains annotation support for actuator endpoints. This module provides many endpoints, including the &lt;code&gt;HealthEndpoint&lt;/code&gt;, &lt;code&gt;EnvironmentEndpoint&lt;/code&gt;, &lt;code&gt;BeansEndpoint&lt;/code&gt;, and many more.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_actuator_autoconfigure"&gt;spring-boot-actuator-autoconfigure&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;This provides auto-configuration for actuator endpoints based on the content of the classpath and a set of properties. For instance, if Micrometer is on the classpath, it will auto-configure the &lt;code&gt;MetricsEndpoint&lt;/code&gt;. It contains configuration to expose endpoints over HTTP or JMX. Just like Spring Boot AutoConfigure, this will back away as the user starts to define their own beans.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_test"&gt;spring-boot-test&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;This module contains core items and annotations that can be helpful when testing your application.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_test_autoconfigure"&gt;spring-boot-test-autoconfigure&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;Like other Spring Boot auto-configuration modules, spring-boot-test-autoconfigure provides auto-configuration for tests based on the classpath. It includes many annotations that can automatically configure a slice of your application that needs to be tested.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_loader"&gt;spring-boot-loader&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;Spring Boot Loader provides the secret sauce that allows you to build a single jar file that can be launched using &lt;code&gt;java -jar&lt;/code&gt;. Generally, you will not need to use &lt;code&gt;spring-boot-loader&lt;/code&gt; directly but work with the &lt;a href="https://raw.githubusercontent.com/spring-projects/spring-boot/main/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin"&gt;Gradle&lt;/a&gt; or &lt;a href="https://raw.githubusercontent.com/spring-projects/spring-boot/main/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin"&gt;Maven&lt;/a&gt; plugin instead.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="sect2"&gt; 
   &lt;h3 id="_spring_boot_devtools"&gt;spring-boot-devtools&lt;/h3&gt; 
   &lt;div class="paragraph"&gt; 
    &lt;p&gt;The spring-boot-devtools module provides additional development-time features, such as automatic restarts, for a smoother application development experience. Developer tools are automatically disabled when running a fully packaged application.&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_guides"&gt;Guides&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;The &lt;a href="https://spring.io/"&gt;spring.io&lt;/a&gt; site contains several guides that show how to use Spring Boot step-by-step:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="ulist"&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;&lt;a href="https://spring.io/guides/gs/spring-boot/"&gt;Building an Application with Spring Boot&lt;/a&gt; is an introductory guide that shows you how to create an application, run it, and add some management services.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;&lt;a href="https://spring.io/guides/gs/actuator-service/"&gt;Building a RESTful Web Service with Spring Boot Actuator&lt;/a&gt; is a guide to creating a REST web service and also shows how the server can be configured.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_license"&gt;License&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Spring Boot is Open Source software released under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0.html"&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>apache/cassandra</title>
      <link>https://github.com/apache/cassandra</link>
      <description>&lt;p&gt;Apache Cassandra®&lt;/p&gt;&lt;hr&gt;&lt;div class="paragraph"&gt; 
 &lt;p&gt;&lt;span class="image"&gt;&lt;a class="image" href="https://github.com/apache/cassandra/raw/trunk/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="image"&gt;&lt;a class="image" href="https://ci-cassandra.apache.org/job/Cassandra-trunk/"&gt;&lt;img src="https://ci-cassandra.apache.org/job/Cassandra-trunk/badge/icon" alt="Build Status" /&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="image"&gt;&lt;a class="image" href="https://cassandra.apache.org/_/download.html"&gt;&lt;img src="https://img.shields.io/badge/Official-Downloads-brightgreen" alt="Official Downloads" /&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="image"&gt;&lt;a class="image" href="https://hub.docker.com/r/_/cassandra"&gt;&lt;img src="https://img.shields.io/docker/pulls/_/cassandra" alt="Docker Pulls" /&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="image"&gt;&lt;a class="image" href="https://infra.apache.org/slack.html"&gt;&lt;img src="https://img.shields.io/badge/Slack-4A154B?style=flat&amp;amp;logo=slack&amp;amp;logoColor=white" alt="Slack" /&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="image"&gt;&lt;a class="image" href="https://bsky.app/profile/cassandra.apache.org"&gt;&lt;img src="https://img.shields.io/badge/Bluesky-0285FF?logo=bluesky&amp;amp;logoColor=fff&amp;amp;color=0285FF" alt="Bluesky" /&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="image"&gt;&lt;a class="image" href="https://www.linkedin.com/company/apache-cassandra/"&gt;&lt;img src="https://img.shields.io/badge/-LinkedIn-blue?style=flat-square&amp;amp;logo=Linkedin&amp;amp;logoColor=white&amp;amp;link=https://www.linkedin.com/company/apache-cassandra/" alt="LinkedIn" /&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class="image"&gt;&lt;a class="image" href="https://www.youtube.com/c/PlanetCassandra"&gt;&lt;img src="https://img.shields.io/badge/YouTube-FF0000?style=flat&amp;amp;logo=youtube&amp;amp;logoColor=white" alt="Youtube" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_apache_cassandra"&gt;Apache Cassandra&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Apache Cassandra is a highly-scalable partitioned row store. Rows are organized into tables with a required primary key.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;&lt;a href="https://cwiki.apache.org/confluence/display/CASSANDRA2/Partitioners"&gt;Partitioning&lt;/a&gt; means that Cassandra can distribute your data across multiple machines in an application-transparent matter. Cassandra will automatically repartition as machines are added and removed from the cluster.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;&lt;a href="https://cwiki.apache.org/confluence/display/CASSANDRA2/DataModel"&gt;Row store&lt;/a&gt; means that like relational databases, Cassandra organizes data by rows and columns. The Cassandra Query Language (CQL) is a close relative of SQL.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;For more information, see &lt;a href="http://cassandra.apache.org/"&gt;the Apache Cassandra web site&lt;/a&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Issues should be reported on &lt;a href="https://issues.apache.org/jira/projects/CASSANDRA/issues/"&gt;The Cassandra Jira&lt;/a&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_requirements"&gt;Requirements&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="ulist"&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;Java: see supported versions in build.xml (search for property "java.supported").&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Python: for &lt;code&gt;cqlsh&lt;/code&gt;, see &lt;code&gt;bin/cqlsh&lt;/code&gt; (search for function "is_supported_version").&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class="sect1"&gt; 
 &lt;h2 id="_getting_started"&gt;Getting started&lt;/h2&gt; 
 &lt;div class="sectionbody"&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;This short guide will walk you through getting a basic one node cluster up and running, and demonstrate some simple reads and writes. For a more-complete guide, please see the Apache Cassandra website’s &lt;a href="https://cassandra.apache.org/doc/latest/cassandra/getting_started/index.html"&gt;Getting Started Guide&lt;/a&gt;.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;First, we’ll unpack our archive:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="literalblock"&gt; 
   &lt;div class="content"&gt; 
    &lt;pre&gt;$ tar -zxvf apache-cassandra-$VERSION.tar.gz
$ cd apache-cassandra-$VERSION&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;After that we start the server. Running the startup script with the -f argument will cause Cassandra to remain in the foreground and log to standard out; it can be stopped with ctrl-C.&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="literalblock"&gt; 
   &lt;div class="content"&gt; 
    &lt;pre&gt;$ bin/cassandra -f&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Now let’s try to read and write some data using the Cassandra Query Language:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="literalblock"&gt; 
   &lt;div class="content"&gt; 
    &lt;pre&gt;$ bin/cqlsh&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;The command line client is interactive so if everything worked you should be sitting in front of a prompt:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="listingblock"&gt; 
   &lt;div class="content"&gt; 
    &lt;pre&gt;Connected to Test Cluster at localhost:9160.
[cqlsh 6.3.0 | Cassandra 5.0-SNAPSHOT | CQL spec 3.4.8 | Native protocol v5]
Use HELP for help.
cqlsh&amp;gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;As the banner says, you can use 'help;' or '?' to see what CQL has to offer, and 'quit;' or 'exit;' when you’ve had enough fun. But lets try something slightly more interesting:&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="listingblock"&gt; 
   &lt;div class="content"&gt; 
    &lt;pre&gt;cqlsh&amp;gt; CREATE KEYSPACE schema1
       WITH replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };
cqlsh&amp;gt; USE schema1;
cqlsh:Schema1&amp;gt; CREATE TABLE users (
                 user_id varchar PRIMARY KEY,
                 first varchar,
                 last varchar,
                 age int
               );
cqlsh:Schema1&amp;gt; INSERT INTO users (user_id, first, last, age)
               VALUES ('jsmith', 'John', 'Smith', 42);
cqlsh:Schema1&amp;gt; SELECT * FROM users;
 user_id | age | first | last
---------+-----+-------+-------
  jsmith |  42 |  john | smith
cqlsh:Schema1&amp;gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;If your session looks similar to what’s above, congrats, your single node cluster is operational!&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;For more on what commands are supported by CQL, see &lt;a href="https://cassandra.apache.org/doc/trunk/cassandra/developing/cql/index.html"&gt;the CQL reference&lt;/a&gt;. A reasonable way to think of it is as, "SQL minus joins and subqueries, plus collections."&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="paragraph"&gt; 
   &lt;p&gt;Wondering where to go from here?&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;div class="ulist"&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;Join us in #cassandra on the &lt;a href="https://s.apache.org/slack-invite"&gt;ASF Slack&lt;/a&gt; and ask questions.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Subscribe to the Users mailing list by sending a mail to &lt;a href="mailto:user-subscribe@cassandra.apache.org"&gt;user-subscribe@cassandra.apache.org&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Subscribe to the Developer mailing list by sending a mail to &lt;a href="mailto:dev-subscribe@cassandra.apache.org"&gt;dev-subscribe@cassandra.apache.org&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Visit the &lt;a href="http://cassandra.apache.org/community/"&gt;community section&lt;/a&gt; of the Cassandra website for more information on getting involved.&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Visit the &lt;a href="http://cassandra.apache.org/doc/latest/development/index.html"&gt;development section&lt;/a&gt; of the Cassandra website for more information on how to contribute.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>sparrowwallet/sparrow</title>
      <link>https://github.com/sparrowwallet/sparrow</link>
      <description>&lt;p&gt;Desktop Bitcoin Wallet focused on security and privacy. Free and open source.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Sparrow Bitcoin Wallet&lt;/h1&gt; 
&lt;p&gt;Sparrow is a modern desktop Bitcoin wallet application supporting most hardware wallets and built on common standards such as PSBT, with an emphasis on transparency and usability.&lt;/p&gt; 
&lt;p&gt;More information (and release binaries) can be found at &lt;a href="https://sparrowwallet.com"&gt;https://sparrowwallet.com&lt;/a&gt;. Release binaries are also available directly from &lt;a href="https://github.com/sparrowwallet/sparrow/releases"&gt;GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://sparrowwallet.com/assets/images/control-your-sends.png" alt="Sparrow Wallet" /&gt;&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;To clone this project, use&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;git clone --recursive git@github.com:sparrowwallet/sparrow.git&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;or for those without SSH credentials:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;git clone --recursive https://github.com/sparrowwallet/sparrow.git&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;In order to build, Sparrow requires Java 22 or higher to be installed. The release binaries are built with &lt;a href="https://github.com/adoptium/temurin22-binaries/releases/tag/jdk-22.0.2%2B9"&gt;Eclipse Temurin 22.0.2+9&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Other packages may also be necessary to build depending on the platform. On Debian/Ubuntu systems:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;sudo apt install -y rpm fakeroot binutils&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The Sparrow binaries can be built from source using&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;./gradlew jpackage&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Note that to build the Windows installer, you will need to install &lt;a href="https://github.com/wixtoolset/wix3/releases"&gt;WiX&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When updating to the latest HEAD&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;git pull --recurse-submodules&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The release binaries are reproducible from v1.5.0 onwards (pre codesigning and installer packaging). More detailed &lt;a href="https://raw.githubusercontent.com/sparrowwallet/sparrow/master/docs/reproducible.md"&gt;instructions on reproducing the binaries&lt;/a&gt; are provided.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Video documentation of your build process uploaded to &lt;a href="https://bitcoinbinary.org/"&gt;bitcoinbinary.org&lt;/a&gt; is appreciated. Alternatively check the site if you wish to see if someone else already verified the provided binaries.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Running&lt;/h2&gt; 
&lt;p&gt;If you prefer to run Sparrow directly from source, it can be launched from within the project directory with&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;./sparrow&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Java 22 or higher must be installed.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Sparrow has a number of command line options, for example to change its home folder or use testnet:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./sparrow -h

Usage: sparrow [options]
  Options:
    --dir, -d
      Path to Sparrow home folder
    --help, -h
      Show usage
    --level, -l
      Set log level
      Possible Values: [ERROR, WARN, INFO, DEBUG, TRACE]      
    --network, -n
      Network to use
      Possible Values: [mainnet, testnet, regtest, signet, testnet4]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that testnet currently refers to testnet3.&lt;/p&gt; 
&lt;p&gt;As a fallback, the network (mainnet, testnet, testnet4, regtest or signet) can also be set using an environment variable &lt;code&gt;SPARROW_NETWORK&lt;/code&gt;. For example:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;export SPARROW_NETWORK=testnet&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;A final fallback which can be useful when running the Sparrow binary is to create a file called &lt;code&gt;network-testnet&lt;/code&gt; in the Sparrow home folder (see below) to configure the testnet network.&lt;/p&gt; 
&lt;p&gt;Note that if you are connecting to an Electrum server when using testnet, that server will need to be running on testnet configuration as well.&lt;/p&gt; 
&lt;p&gt;When not explicitly configured using the command line argument above, Sparrow stores its mainnet config file, log file and wallets in a home folder location appropriate to the operating system:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Platform&lt;/th&gt; 
   &lt;th&gt;Location&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OSX&lt;/td&gt; 
   &lt;td&gt;~/.sparrow&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;~/.sparrow&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;%APPDATA%/Sparrow&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Testnet3, testnet4, regtest and signet configurations (along with their wallets) are stored in subfolders to allow easy switching between networks.&lt;/p&gt; 
&lt;h2&gt;Reporting Issues&lt;/h2&gt; 
&lt;p&gt;Please use the &lt;a href="https://github.com/sparrowwallet/sparrow/issues"&gt;Issues&lt;/a&gt; tab above to report an issue. If possible, look in the sparrow.log file in the configuration directory for information helpful in debugging.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Sparrow is licensed under the Apache 2 software licence.&lt;/p&gt; 
&lt;h2&gt;GPG Key&lt;/h2&gt; 
&lt;p&gt;The Sparrow release binaries here and on &lt;a href="https://sparrowwallet.com/download/"&gt;sparrowwallet.com&lt;/a&gt; are signed using &lt;a href="https://keybase.io/craigraw"&gt;craigraw's GPG key&lt;/a&gt;:&lt;br /&gt; Fingerprint: D4D0D3202FC06849A257B38DE94618334C674B40&lt;br /&gt; 64-bit: E946 1833 4C67 4B40&lt;/p&gt; 
&lt;h2&gt;Credit&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://www.yourkit.com/images/yklogo.png" alt="Yourkit" /&gt;&lt;/p&gt; 
&lt;p&gt;Sparrow Wallet uses the &lt;a href="https://www.yourkit.com/java/profiler/"&gt;Yourkit Java Profiler&lt;/a&gt; to profile and improve performance. YourKit supports open source projects with useful tools for monitoring and profiling Java and .NET applications.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PaperMC/Paper</title>
      <link>https://github.com/PaperMC/Paper</link>
      <description>&lt;p&gt;The most widely used, high performance Minecraft server that aims to fix gameplay and mechanics inconsistencies&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Paper &lt;a href="https://github.com/PaperMC/Paper/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/PaperMC/Paper/build.yml?branch=main" alt="Paper Build Status" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/papermc"&gt;&lt;img src="https://img.shields.io/discord/289587909051416579.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/PaperMC"&gt;&lt;img src="https://img.shields.io/github/sponsors/papermc?label=GitHub%20Sponsors" alt="GitHub Sponsors" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/papermc"&gt;&lt;img src="https://img.shields.io/opencollective/all/papermc?label=OpenCollective%20Sponsors" alt="Open Collective" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;The most widely used, high-performance Minecraft server that aims to fix gameplay and mechanics inconsistencies.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Support and Project Discussion:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://forums.papermc.io/"&gt;Our forums&lt;/a&gt; or &lt;a href="https://discord.gg/papermc"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How To (Server Admins)&lt;/h2&gt; 
&lt;p&gt;Paperclip is a jar file that you can download and run just like a normal jar file.&lt;/p&gt; 
&lt;p&gt;Download Paper from our &lt;a href="https://papermc.io/downloads/paper"&gt;downloads page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Run the Paperclip jar directly from your server. Just like old times&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation on using Paper: &lt;a href="https://docs.papermc.io"&gt;docs.papermc.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;For a sneak peek at upcoming features, &lt;a href="https://github.com/PaperMC/Paper/projects"&gt;see here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How To (Plugin Developers)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;See our API &lt;a href="https://raw.githubusercontent.com/PaperMC/Paper/main/paper-api"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See upcoming, pending, and recently added API &lt;a href="https://github.com/orgs/PaperMC/projects/2/views/4"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Paper API javadocs here: &lt;a href="https://papermc.io/javadocs/"&gt;papermc.io/javadocs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Repository (for paper-api)&lt;/h4&gt; 
&lt;h5&gt;Maven&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;repository&amp;gt;
    &amp;lt;id&amp;gt;papermc&amp;lt;/id&amp;gt;
    &amp;lt;url&amp;gt;https://repo.papermc.io/repository/maven-public/&amp;lt;/url&amp;gt;
&amp;lt;/repository&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;io.papermc.paper&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;paper-api&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.21.9-R0.1-SNAPSHOT&amp;lt;/version&amp;gt;
    &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Gradle&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;repositories {
    maven {
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.9-R0.1-SNAPSHOT")
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(21))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How To (Compiling Jar From Source)&lt;/h2&gt; 
&lt;p&gt;To compile Paper, you need JDK 21 and an internet connection.&lt;/p&gt; 
&lt;p&gt;Clone this repo, run &lt;code&gt;./gradlew applyPatches&lt;/code&gt;, then &lt;code&gt;./gradlew createMojmapBundlerJar&lt;/code&gt; from your terminal. You can find the compiled jar in the &lt;code&gt;paper-server/build/libs&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;To get a full list of tasks, run &lt;code&gt;./gradlew tasks&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;How To (Pull Request)&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/PaperMC/Paper/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Old Versions (1.21.3 and below)&lt;/h2&gt; 
&lt;p&gt;For branches of versions 1.8-1.21.3, please see our &lt;a href="https://github.com/PaperMC/Paper-archive"&gt;archive repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support Us&lt;/h2&gt; 
&lt;p&gt;First of all, thank you for considering helping out, we really appreciate that!&lt;/p&gt; 
&lt;p&gt;PaperMC has various recurring expenses, mostly related to infrastructure. Paper uses &lt;a href="https://opencollective.com/"&gt;Open Collective&lt;/a&gt; via the &lt;a href="https://opencollective.com/opensource"&gt;Open Source Collective fiscal host&lt;/a&gt; to manage expenses. Open Collective allows us to be extremely transparent, so you can always see how your donations are used. You can read more about financially supporting PaperMC &lt;a href="https://papermc.io/sponsors"&gt;on our website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can find our collective &lt;a href="https://opencollective.com/papermc"&gt;here&lt;/a&gt;, or you can donate via GitHub Sponsors &lt;a href="https://github.com/sponsors/PaperMC"&gt;here&lt;/a&gt;, which will also go towards the collective.&lt;/p&gt; 
&lt;h2&gt;Special Thanks To:&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.yourkit.com/"&gt;&lt;img src="https://www.yourkit.com/images/yklogo.png" alt="YourKit-Logo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.yourkit.com/"&gt;YourKit&lt;/a&gt;, makers of the outstanding java profiler, support open source projects of all kinds with their full featured &lt;a href="https://www.yourkit.com/java/profiler"&gt;Java&lt;/a&gt; and &lt;a href="https://www.yourkit.com/.net/profiler"&gt;.NET&lt;/a&gt; application profilers. We thank them for granting Paper an OSS license so that we can make our software the best it can be.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.jetbrains.com"&gt;&lt;img src="https://user-images.githubusercontent.com/21148213/121807008-8ffc6700-cc52-11eb-96a7-2f6f260f8fda.png" alt="" width="150" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.jetbrains.com/"&gt;JetBrains&lt;/a&gt;, creators of the IntelliJ IDEA, supports Paper with one of their &lt;a href="https://www.jetbrains.com/opensource/"&gt;Open Source Licenses&lt;/a&gt;. IntelliJ IDEA is the recommended IDE for working with Paper, and most of the Paper team uses it.&lt;/p&gt; 
&lt;p&gt;All our sponsors!&lt;br /&gt; &lt;a href="https://papermc.io/sponsors"&gt;&lt;img src="https://raw.githubusercontent.com/PaperMC/papermc.io/data/sponsors.png" alt="Sponsor Image" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ReactiveX/RxJava</title>
      <link>https://github.com/ReactiveX/RxJava</link>
      <description>&lt;p&gt;RxJava – Reactive Extensions for the JVM – a library for composing asynchronous and event-based programs using observable sequences for the Java VM.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RxJava: Reactive Extensions for the JVM&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/ReactiveX/RxJava/actions?query=workflow%3ASnapshot"&gt;&lt;img src="https://github.com/ReactiveX/RxJava/workflows/Snapshot/badge.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/ReactiveX/RxJava/branch/3.x"&gt;&lt;img src="http://codecov.io/github/ReactiveX/RxJava/coverage.svg?branch=3.x" alt="codecov.io" /&gt;&lt;/a&gt; &lt;a href="https://maven-badges.herokuapp.com/maven-central/io.reactivex.rxjava3/rxjava"&gt;&lt;img src="https://maven-badges.herokuapp.com/maven-central/io.reactivex.rxjava3/rxjava/badge.svg?sanitize=true" alt="Maven Central" /&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/ReactiveX/RxJava"&gt;&lt;img src="https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod" alt="Contribute with Gitpod" /&gt;&lt;/a&gt; &lt;a href="https://securityscorecards.dev/viewer/?uri=github.com/ReactiveX/RxJava"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/ReactiveX/RxJava/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;RxJava is a Java VM implementation of &lt;a href="http://reactivex.io"&gt;Reactive Extensions&lt;/a&gt;: a library for composing asynchronous and event-based programs by using observable sequences.&lt;/p&gt; 
&lt;p&gt;It extends the &lt;a href="http://en.wikipedia.org/wiki/Observer_pattern"&gt;observer pattern&lt;/a&gt; to support sequences of data/events and adds operators that allow you to compose sequences together declaratively while abstracting away concerns about things like low-level threading, synchronization, thread-safety and concurrent data structures.&lt;/p&gt; 
&lt;h4&gt;Version 3.x (&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/"&gt;Javadoc&lt;/a&gt;)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Single dependency: &lt;a href="https://github.com/reactive-streams/reactive-streams-jvm"&gt;Reactive-Streams&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Java 8+ or Android API 21+ required.&lt;/li&gt; 
 &lt;li&gt;Java 8 lambda-friendly API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ReactiveX/RxAndroid"&gt;Android&lt;/a&gt; desugar friendly.&lt;/li&gt; 
 &lt;li&gt;Fixed API mistakes and many limits of RxJava 2.&lt;/li&gt; 
 &lt;li&gt;Intended to be a replacement for RxJava 2 with relatively few binary incompatible changes.&lt;/li&gt; 
 &lt;li&gt;Non-opinionated about the source of concurrency (threads, pools, event loops, fibers, actors, etc.).&lt;/li&gt; 
 &lt;li&gt;Async or synchronous execution.&lt;/li&gt; 
 &lt;li&gt;Virtual time and schedulers for parameterized concurrency.&lt;/li&gt; 
 &lt;li&gt;Test and diagnostic support via test schedulers, test consumers and plugin hooks.&lt;/li&gt; 
 &lt;li&gt;Interop with newer JDK versions via 3rd party libraries, such as 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/akarnokd/RxJavaJdk9Interop#rxjavajdk9interop"&gt;Java 9 Flow API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/akarnokd/RxJavaFiberInterop#rxjavafiberinterop"&gt;Java 21 Virtual Threads&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn more about RxJava in general on the &lt;a href="https://github.com/ReactiveX/RxJava/wiki"&gt;Wiki Home&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; Please read the &lt;a href="https://github.com/ReactiveX/RxJava/wiki/What's-different-in-3.0"&gt;What's different in 3.0&lt;/a&gt; for details on the changes and migration information when upgrading from 2.x.&lt;/p&gt; 
&lt;h4&gt;Version 2.x&lt;/h4&gt; 
&lt;p&gt;The &lt;a href="https://github.com/ReactiveX/RxJava/tree/2.x"&gt;2.x version&lt;/a&gt; is end-of-life as of &lt;strong&gt;February 28, 2021&lt;/strong&gt;. No further development, support, maintenance, PRs and updates will happen. The &lt;a href="https://raw.githubusercontent.com/ReactiveX/RxJava/3.x/%5BJavadoc%5D(http://reactivex.io/RxJava/2.x/javadoc/)"&gt;Javadoc&lt;/a&gt; of the very last version, &lt;strong&gt;2.2.21&lt;/strong&gt;, will remain accessible.&lt;/p&gt; 
&lt;h4&gt;Version 1.x&lt;/h4&gt; 
&lt;p&gt;The &lt;a href="https://github.com/ReactiveX/RxJava/tree/1.x"&gt;1.x version&lt;/a&gt; is end-of-life as of &lt;strong&gt;March 31, 2018&lt;/strong&gt;. No further development, support, maintenance, PRs and updates will happen. The &lt;a href="https://raw.githubusercontent.com/ReactiveX/RxJava/3.x/%5BJavadoc%5D(http://reactivex.io/RxJava/1.x/javadoc/)"&gt;Javadoc&lt;/a&gt; of the very last version, &lt;strong&gt;1.3.8&lt;/strong&gt;, will remain accessible.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Setting up the dependency&lt;/h3&gt; 
&lt;p&gt;The first step is to include RxJava 3 into your project, for example, as a Gradle compile dependency:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;implementation "io.reactivex.rxjava3:rxjava:3.x.y"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(Please replace &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; with the latest version numbers: &lt;a href="https://maven-badges.herokuapp.com/maven-central/io.reactivex.rxjava3/rxjava"&gt;&lt;img src="https://maven-badges.herokuapp.com/maven-central/io.reactivex.rxjava3/rxjava/badge.svg?sanitize=true" alt="Maven Central" /&gt;&lt;/a&gt; )&lt;/p&gt; 
&lt;h3&gt;Hello World&lt;/h3&gt; 
&lt;p&gt;The second is to write the &lt;strong&gt;Hello World&lt;/strong&gt; program:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;package rxjava.examples;

import io.reactivex.rxjava3.core.*;

public class HelloWorld {
    public static void main(String[] args) {
        Flowable.just("Hello world").subscribe(System.out::println);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that RxJava 3 components now live under &lt;code&gt;io.reactivex.rxjava3&lt;/code&gt; and the base classes and interfaces live under &lt;code&gt;io.reactivex.rxjava3.core&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Base classes&lt;/h3&gt; 
&lt;p&gt;RxJava 3 features several base classes you can discover operators on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Flowable.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Flowable&lt;/code&gt;&lt;/a&gt;: 0..N flows, supporting Reactive-Streams and backpressure&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Observable.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Observable&lt;/code&gt;&lt;/a&gt;: 0..N flows, no backpressure,&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Single.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Single&lt;/code&gt;&lt;/a&gt;: a flow of exactly 1 item or an error,&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Completable.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Completable&lt;/code&gt;&lt;/a&gt;: a flow without items but only a completion or error signal,&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Maybe.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Maybe&lt;/code&gt;&lt;/a&gt;: a flow with no items, exactly one item or an error.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Some terminology&lt;/h3&gt; 
&lt;h4&gt;Upstream, downstream&lt;/h4&gt; 
&lt;p&gt;The dataflows in RxJava consist of a source, zero or more intermediate steps followed by a data consumer or combinator step (where the step is responsible to consume the dataflow by some means):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;source.operator1().operator2().operator3().subscribe(consumer);

source.flatMap(value -&amp;gt; source.operator1().operator2().operator3());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here, if we imagine ourselves on &lt;code&gt;operator2&lt;/code&gt;, looking to the left towards the source is called the &lt;strong&gt;upstream&lt;/strong&gt;. Looking to the right towards the subscriber/consumer is called the &lt;strong&gt;downstream&lt;/strong&gt;. This is often more apparent when each element is written on a separate line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;source
  .operator1()
  .operator2()
  .operator3()
  .subscribe(consumer)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Objects in motion&lt;/h4&gt; 
&lt;p&gt;In RxJava's documentation, &lt;strong&gt;emission&lt;/strong&gt;, &lt;strong&gt;emits&lt;/strong&gt;, &lt;strong&gt;item&lt;/strong&gt;, &lt;strong&gt;event&lt;/strong&gt;, &lt;strong&gt;signal&lt;/strong&gt;, &lt;strong&gt;data&lt;/strong&gt; and &lt;strong&gt;message&lt;/strong&gt; are considered synonyms and represent the object traveling along the dataflow.&lt;/p&gt; 
&lt;h4&gt;Backpressure&lt;/h4&gt; 
&lt;p&gt;When the dataflow runs through asynchronous steps, each step may perform different things with different speed. To avoid overwhelming such steps, which usually would manifest itself as increased memory usage due to temporary buffering or the need for skipping/dropping data, so-called backpressure is applied, which is a form of flow control where the steps can express how many items are they ready to process. This allows constraining the memory usage of the dataflows in situations where there is generally no way for a step to know how many items the upstream will send to it.&lt;/p&gt; 
&lt;p&gt;In RxJava, the dedicated &lt;code&gt;Flowable&lt;/code&gt; class is designated to support backpressure and &lt;code&gt;Observable&lt;/code&gt; is dedicated to the non-backpressured operations (short sequences, GUI interactions, etc.). The other types, &lt;code&gt;Single&lt;/code&gt;, &lt;code&gt;Maybe&lt;/code&gt; and &lt;code&gt;Completable&lt;/code&gt; don't support backpressure nor should they; there is always room to store one item temporarily.&lt;/p&gt; 
&lt;h4&gt;Assembly time&lt;/h4&gt; 
&lt;p&gt;The preparation of dataflows by applying various intermediate operators happens in the so-called &lt;strong&gt;assembly time&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;Integer&amp;gt; flow = Flowable.range(1, 5)
.map(v -&amp;gt; v * v)
.filter(v -&amp;gt; v % 3 == 0)
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At this point, the data is not flowing yet and no side-effects are happening.&lt;/p&gt; 
&lt;h4&gt;Subscription time&lt;/h4&gt; 
&lt;p&gt;This is a temporary state when &lt;code&gt;subscribe()&lt;/code&gt; is called on a flow that establishes the chain of processing steps internally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;flow.subscribe(System.out::println)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is when the &lt;strong&gt;subscription side-effects&lt;/strong&gt; are triggered (see &lt;code&gt;doOnSubscribe&lt;/code&gt;). Some sources block or start emitting items right away in this state.&lt;/p&gt; 
&lt;h4&gt;Runtime&lt;/h4&gt; 
&lt;p&gt;This is the state when the flows are actively emitting items, errors or completion signals:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;
Observable.create(emitter -&amp;gt; {
     while (!emitter.isDisposed()) {
         long time = System.currentTimeMillis();
         emitter.onNext(time);
         if (time % 2 != 0) {
             emitter.onError(new IllegalStateException("Odd millisecond!"));
             break;
         }
     }
})
.subscribe(System.out::println, Throwable::printStackTrace);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Practically, this is when the body of the given example above executes.&lt;/p&gt; 
&lt;h3&gt;Simple background computation&lt;/h3&gt; 
&lt;p&gt;One of the common use cases for RxJava is to run some computation, network request on a background thread and show the results (or error) on the UI thread:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;import io.reactivex.rxjava3.schedulers.Schedulers;

Flowable.fromCallable(() -&amp;gt; {
    Thread.sleep(1000); //  imitate expensive computation
    return "Done";
})
  .subscribeOn(Schedulers.io())
  .observeOn(Schedulers.single())
  .subscribe(System.out::println, Throwable::printStackTrace);

Thread.sleep(2000); // &amp;lt;--- wait for the flow to finish
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This style of chaining methods is called a &lt;strong&gt;fluent API&lt;/strong&gt; which resembles the &lt;strong&gt;builder pattern&lt;/strong&gt;. However, RxJava's reactive types are immutable; each of the method calls returns a new &lt;code&gt;Flowable&lt;/code&gt; with added behavior. To illustrate, the example can be rewritten as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;String&amp;gt; source = Flowable.fromCallable(() -&amp;gt; {
    Thread.sleep(1000); //  imitate expensive computation
    return "Done";
});

Flowable&amp;lt;String&amp;gt; runBackground = source.subscribeOn(Schedulers.io());

Flowable&amp;lt;String&amp;gt; showForeground = runBackground.observeOn(Schedulers.single());

showForeground.subscribe(System.out::println, Throwable::printStackTrace);

Thread.sleep(2000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Typically, you can move computations or blocking IO to some other thread via &lt;code&gt;subscribeOn&lt;/code&gt;. Once the data is ready, you can make sure they get processed on the foreground or GUI thread via &lt;code&gt;observeOn&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Schedulers&lt;/h3&gt; 
&lt;p&gt;RxJava operators don't work with &lt;code&gt;Thread&lt;/code&gt;s or &lt;code&gt;ExecutorService&lt;/code&gt;s directly but with so-called &lt;code&gt;Scheduler&lt;/code&gt;s that abstract away sources of concurrency behind a uniform API. RxJava 3 features several standard schedulers accessible via &lt;code&gt;Schedulers&lt;/code&gt; utility class.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Schedulers.computation()&lt;/code&gt;: Run computation intensive work on a fixed number of dedicated threads in the background. Most asynchronous operators use this as their default &lt;code&gt;Scheduler&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Schedulers.io()&lt;/code&gt;: Run I/O-like or blocking operations on a dynamically changing set of threads.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Schedulers.single()&lt;/code&gt;: Run work on a single thread in a sequential and FIFO manner.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Schedulers.trampoline()&lt;/code&gt;: Run work in a sequential and FIFO manner in one of the participating threads, usually for testing purposes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These are available on all JVM platforms but some specific platforms, such as Android, have their own typical &lt;code&gt;Scheduler&lt;/code&gt;s defined: &lt;code&gt;AndroidSchedulers.mainThread()&lt;/code&gt;, &lt;code&gt;SwingScheduler.instance()&lt;/code&gt; or &lt;code&gt;JavaFXScheduler.platform()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In addition, there is an option to wrap an existing &lt;code&gt;Executor&lt;/code&gt; (and its subtypes such as &lt;code&gt;ExecutorService&lt;/code&gt;) into a &lt;code&gt;Scheduler&lt;/code&gt; via &lt;code&gt;Schedulers.from(Executor)&lt;/code&gt;. This can be used, for example, to have a larger but still fixed pool of threads (unlike &lt;code&gt;computation()&lt;/code&gt; and &lt;code&gt;io()&lt;/code&gt; respectively).&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;Thread.sleep(2000);&lt;/code&gt; at the end is no accident. In RxJava the default &lt;code&gt;Scheduler&lt;/code&gt;s run on daemon threads, which means once the Java main thread exits, they all get stopped and background computations may never happen. Sleeping for some time in this example situations lets you see the output of the flow on the console with time to spare.&lt;/p&gt; 
&lt;h3&gt;Concurrency within a flow&lt;/h3&gt; 
&lt;p&gt;Flows in RxJava are sequential in nature split into processing stages that may run &lt;strong&gt;concurrently&lt;/strong&gt; with each other:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable.range(1, 10)
  .observeOn(Schedulers.computation())
  .map(v -&amp;gt; v * v)
  .blockingSubscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example flow squares the numbers from 1 to 10 on the &lt;strong&gt;computation&lt;/strong&gt; &lt;code&gt;Scheduler&lt;/code&gt; and consumes the results on the "main" thread (more precisely, the caller thread of &lt;code&gt;blockingSubscribe&lt;/code&gt;). However, the lambda &lt;code&gt;v -&amp;gt; v * v&lt;/code&gt; doesn't run in parallel for this flow; it receives the values 1 to 10 on the same computation thread one after the other.&lt;/p&gt; 
&lt;h3&gt;Parallel processing&lt;/h3&gt; 
&lt;p&gt;Processing the numbers 1 to 10 in parallel is a bit more involved:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable.range(1, 10)
  .flatMap(v -&amp;gt;
      Flowable.just(v)
        .subscribeOn(Schedulers.computation())
        .map(w -&amp;gt; w * w)
  )
  .blockingSubscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Practically, parallelism in RxJava means running independent flows and merging their results back into a single flow. The operator &lt;code&gt;flatMap&lt;/code&gt; does this by first mapping each number from 1 to 10 into its own individual &lt;code&gt;Flowable&lt;/code&gt;, runs them and merges the computed squares.&lt;/p&gt; 
&lt;p&gt;Note, however, that &lt;code&gt;flatMap&lt;/code&gt; doesn't guarantee any order and the items from the inner flows may end up interleaved. There are alternative operators:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;concatMap&lt;/code&gt; that maps and runs one inner flow at a time and&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;concatMapEager&lt;/code&gt; which runs all inner flows "at once" but the output flow will be in the order those inner flows were created.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Alternatively, the &lt;code&gt;Flowable.parallel()&lt;/code&gt; operator and the &lt;code&gt;ParallelFlowable&lt;/code&gt; type help achieve the same parallel processing pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable.range(1, 10)
  .parallel()
  .runOn(Schedulers.computation())
  .map(v -&amp;gt; v * v)
  .sequential()
  .blockingSubscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Dependent sub-flows&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;flatMap&lt;/code&gt; is a powerful operator and helps in a lot of situations. For example, given a service that returns a &lt;code&gt;Flowable&lt;/code&gt;, we'd like to call another service with values emitted by the first service:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;Inventory&amp;gt; inventorySource = warehouse.getInventoryAsync();

inventorySource
    .flatMap(inventoryItem -&amp;gt; erp.getDemandAsync(inventoryItem.getId())
            .map(demand -&amp;gt; "Item " + inventoryItem.getName() + " has demand " + demand))
    .subscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Continuations&lt;/h3&gt; 
&lt;p&gt;Sometimes, when an item has become available, one would like to perform some dependent computations on it. This is sometimes called &lt;strong&gt;continuations&lt;/strong&gt; and, depending on what should happen and what types are involved, may involve various operators to accomplish.&lt;/p&gt; 
&lt;h4&gt;Dependent&lt;/h4&gt; 
&lt;p&gt;The most typical scenario is to given a value, invoke another service, await and continue with its result:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;service.apiCall()
.flatMap(value -&amp;gt; service.anotherApiCall(value))
.flatMap(next -&amp;gt; service.finalCall(next))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is often the case also that later sequences would require values from earlier mappings. This can be achieved by moving the outer &lt;code&gt;flatMap&lt;/code&gt; into the inner parts of the previous &lt;code&gt;flatMap&lt;/code&gt; for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;service.apiCall()
.flatMap(value -&amp;gt;
    service.anotherApiCall(value)
    .flatMap(next -&amp;gt; service.finalCallBoth(value, next))
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here, the original &lt;code&gt;value&lt;/code&gt; will be available inside the inner &lt;code&gt;flatMap&lt;/code&gt;, courtesy of lambda variable capture.&lt;/p&gt; 
&lt;h4&gt;Non-dependent&lt;/h4&gt; 
&lt;p&gt;In other scenarios, the result(s) of the first source/dataflow is irrelevant and one would like to continue with a quasi independent another source. Here, &lt;code&gt;flatMap&lt;/code&gt; works as well:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Observable continued = sourceObservable.flatMapSingle(ignored -&amp;gt; someSingleSource)
continued.map(v -&amp;gt; v.toString())
  .subscribe(System.out::println, Throwable::printStackTrace);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;however, the continuation in this case stays &lt;code&gt;Observable&lt;/code&gt; instead of the likely more appropriate &lt;code&gt;Single&lt;/code&gt;. (This is understandable because from the perspective of &lt;code&gt;flatMapSingle&lt;/code&gt;, &lt;code&gt;sourceObservable&lt;/code&gt; is a multi-valued source and thus the mapping may result in multiple values as well).&lt;/p&gt; 
&lt;p&gt;Often though there is a way that is somewhat more expressive (and also lower overhead) by using &lt;code&gt;Completable&lt;/code&gt; as the mediator and its operator &lt;code&gt;andThen&lt;/code&gt; to resume with something else:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;sourceObservable
  .ignoreElements()           // returns Completable
  .andThen(someSingleSource)
  .map(v -&amp;gt; v.toString())
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The only dependency between the &lt;code&gt;sourceObservable&lt;/code&gt; and the &lt;code&gt;someSingleSource&lt;/code&gt; is that the former should complete normally in order for the latter to be consumed.&lt;/p&gt; 
&lt;h4&gt;Deferred-dependent&lt;/h4&gt; 
&lt;p&gt;Sometimes, there is an implicit data dependency between the previous sequence and the new sequence that, for some reason, was not flowing through the "regular channels". One would be inclined to write such continuations as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;AtomicInteger count = new AtomicInteger();

Observable.range(1, 10)
  .doOnNext(ignored -&amp;gt; count.incrementAndGet())
  .ignoreElements()
  .andThen(Single.just(count.get()))
  .subscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unfortunately, this prints &lt;code&gt;0&lt;/code&gt; because &lt;code&gt;Single.just(count.get())&lt;/code&gt; is evaluated at &lt;strong&gt;assembly time&lt;/strong&gt; when the dataflow hasn't even run yet. We need something that defers the evaluation of this &lt;code&gt;Single&lt;/code&gt; source until &lt;strong&gt;runtime&lt;/strong&gt; when the main source completes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;AtomicInteger count = new AtomicInteger();

Observable.range(1, 10)
  .doOnNext(ignored -&amp;gt; count.incrementAndGet())
  .ignoreElements()
  .andThen(Single.defer(() -&amp;gt; Single.just(count.get())))
  .subscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;AtomicInteger count = new AtomicInteger();

Observable.range(1, 10)
  .doOnNext(ignored -&amp;gt; count.incrementAndGet())
  .ignoreElements()
  .andThen(Single.fromCallable(() -&amp;gt; count.get()))
  .subscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Type conversions&lt;/h3&gt; 
&lt;p&gt;Sometimes, a source or service returns a different type than the flow that is supposed to work with it. For example, in the inventory example above, &lt;code&gt;getDemandAsync&lt;/code&gt; could return a &lt;code&gt;Single&amp;lt;DemandRecord&amp;gt;&lt;/code&gt;. If the code example is left unchanged, this will result in a compile-time error (however, often with a misleading error message about lack of overload).&lt;/p&gt; 
&lt;p&gt;In such situations, there are usually two options to fix the transformation: 1) convert to the desired type or 2) find and use an overload of the specific operator supporting the different type.&lt;/p&gt; 
&lt;h4&gt;Converting to the desired type&lt;/h4&gt; 
&lt;p&gt;Each reactive base class features operators that can perform such conversions, including the protocol conversions, to match some other type. The following matrix shows the available conversion options:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Flowable&lt;/th&gt; 
   &lt;th&gt;Observable&lt;/th&gt; 
   &lt;th&gt;Single&lt;/th&gt; 
   &lt;th&gt;Maybe&lt;/th&gt; 
   &lt;th&gt;Completable&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Flowable&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toObservable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;first&lt;/code&gt;, &lt;code&gt;firstOrError&lt;/code&gt;, &lt;code&gt;single&lt;/code&gt;, &lt;code&gt;singleOrError&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;lastOrError&lt;/code&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;firstElement&lt;/code&gt;, &lt;code&gt;singleElement&lt;/code&gt;, &lt;code&gt;lastElement&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ignoreElements&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Observable&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toFlowable&lt;/code&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;first&lt;/code&gt;, &lt;code&gt;firstOrError&lt;/code&gt;, &lt;code&gt;single&lt;/code&gt;, &lt;code&gt;singleOrError&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;lastOrError&lt;/code&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;firstElement&lt;/code&gt;, &lt;code&gt;singleElement&lt;/code&gt;, &lt;code&gt;lastElement&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ignoreElements&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Single&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toFlowable&lt;/code&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toObservable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toMaybe&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ignoreElement&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Maybe&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toFlowable&lt;/code&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toObservable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toSingle&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ignoreElement&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Completable&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toFlowable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toObservable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toSingle&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toMaybe&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt;: When turning a multi-valued source into a single-valued source, one should decide which of the many source values should be considered as the result.&lt;/p&gt; 
&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt;: Turning an &lt;code&gt;Observable&lt;/code&gt; into &lt;code&gt;Flowable&lt;/code&gt; requires an additional decision: what to do with the potential unconstrained flow of the source &lt;code&gt;Observable&lt;/code&gt;? There are several strategies available (such as buffering, dropping, keeping the latest) via the &lt;code&gt;BackpressureStrategy&lt;/code&gt; parameter or via standard &lt;code&gt;Flowable&lt;/code&gt; operators such as &lt;code&gt;onBackpressureBuffer&lt;/code&gt;, &lt;code&gt;onBackpressureDrop&lt;/code&gt;, &lt;code&gt;onBackpressureLatest&lt;/code&gt; which also allow further customization of the backpressure behavior.&lt;/p&gt; 
&lt;p&gt;&lt;sup&gt;3&lt;/sup&gt;: When there is only (at most) one source item, there is no problem with backpressure as it can be always stored until the downstream is ready to consume.&lt;/p&gt; 
&lt;h4&gt;Using an overload with the desired type&lt;/h4&gt; 
&lt;p&gt;Many frequently used operator has overloads that can deal with the other types. These are usually named with the suffix of the target type:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Operator&lt;/th&gt; 
   &lt;th&gt;Overloads&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;flatMap&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;flatMapSingle&lt;/code&gt;, &lt;code&gt;flatMapMaybe&lt;/code&gt;, &lt;code&gt;flatMapCompletable&lt;/code&gt;, &lt;code&gt;flatMapIterable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;concatMap&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;concatMapSingle&lt;/code&gt;, &lt;code&gt;concatMapMaybe&lt;/code&gt;, &lt;code&gt;concatMapCompletable&lt;/code&gt;, &lt;code&gt;concatMapIterable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;switchMap&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;switchMapSingle&lt;/code&gt;, &lt;code&gt;switchMapMaybe&lt;/code&gt;, &lt;code&gt;switchMapCompletable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The reason these operators have a suffix instead of simply having the same name with different signature is type erasure. Java doesn't consider signatures such as &lt;code&gt;operator(Function&amp;lt;T, Single&amp;lt;R&amp;gt;&amp;gt;)&lt;/code&gt; and &lt;code&gt;operator(Function&amp;lt;T, Maybe&amp;lt;R&amp;gt;&amp;gt;)&lt;/code&gt; different (unlike C#) and due to erasure, the two &lt;code&gt;operator&lt;/code&gt;s would end up as duplicate methods with the same signature.&lt;/p&gt; 
&lt;h3&gt;Operator naming conventions&lt;/h3&gt; 
&lt;p&gt;Naming in programming is one of the hardest things as names are expected to be not long, expressive, capturing and easily memorable. Unfortunately, the target language (and pre-existing conventions) may not give too much help in this regard (unusable keywords, type erasure, type ambiguities, etc.).&lt;/p&gt; 
&lt;h4&gt;Unusable keywords&lt;/h4&gt; 
&lt;p&gt;In the original Rx.NET, the operator that emits a single item and then completes is called &lt;code&gt;Return(T)&lt;/code&gt;. Since the Java convention is to have a lowercase letter start a method name, this would have been &lt;code&gt;return(T)&lt;/code&gt; which is a keyword in Java and thus not available. Therefore, RxJava chose to name this operator &lt;code&gt;just(T)&lt;/code&gt;. The same limitation exists for the operator &lt;code&gt;Switch&lt;/code&gt;, which had to be named &lt;code&gt;switchOnNext&lt;/code&gt;. Yet another example is &lt;code&gt;Catch&lt;/code&gt; which was named &lt;code&gt;onErrorResumeNext&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Type erasure&lt;/h4&gt; 
&lt;p&gt;Many operators that expect the user to provide some function returning a reactive type can't be overloaded because the type erasure around a &lt;code&gt;Function&amp;lt;T, X&amp;gt;&lt;/code&gt; turns such method signatures into duplicates. RxJava chose to name such operators by appending the type as suffix as well:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;R&amp;gt; flatMap(Function&amp;lt;? super T, ? extends Publisher&amp;lt;? extends R&amp;gt;&amp;gt; mapper)

Flowable&amp;lt;R&amp;gt; flatMapMaybe(Function&amp;lt;? super T, ? extends MaybeSource&amp;lt;? extends R&amp;gt;&amp;gt; mapper)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Type ambiguities&lt;/h4&gt; 
&lt;p&gt;Even though certain operators have no problems from type erasure, their signature may turn up being ambiguous, especially if one uses Java 8 and lambdas. For example, there are several overloads of &lt;code&gt;concatWith&lt;/code&gt; taking the various other reactive base types as arguments (for providing convenience and performance benefits in the underlying implementation):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;T&amp;gt; concatWith(Publisher&amp;lt;? extends T&amp;gt; other);

Flowable&amp;lt;T&amp;gt; concatWith(SingleSource&amp;lt;? extends T&amp;gt; other);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Both &lt;code&gt;Publisher&lt;/code&gt; and &lt;code&gt;SingleSource&lt;/code&gt; appear as functional interfaces (types with one abstract method) and may encourage users to try to provide a lambda expression:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;someSource.concatWith(s -&amp;gt; Single.just(2))
.subscribe(System.out::println, Throwable::printStackTrace);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unfortunately, this approach doesn't work and the example does not print &lt;code&gt;2&lt;/code&gt; at all. In fact, since version 2.1.10, it doesn't even compile because at least 4 &lt;code&gt;concatWith&lt;/code&gt; overloads exist and the compiler finds the code above ambiguous.&lt;/p&gt; 
&lt;p&gt;The user in such situations probably wanted to defer some computation until the &lt;code&gt;someSource&lt;/code&gt; has completed, thus the correct unambiguous operator should have been &lt;code&gt;defer&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;someSource.concatWith(Single.defer(() -&amp;gt; Single.just(2)))
.subscribe(System.out::println, Throwable::printStackTrace);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Sometimes, a suffix is added to avoid logical ambiguities that may compile but produce the wrong type in a flow:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;T&amp;gt; merge(Publisher&amp;lt;? extends Publisher&amp;lt;? extends T&amp;gt;&amp;gt; sources);

Flowable&amp;lt;T&amp;gt; mergeArray(Publisher&amp;lt;? extends T&amp;gt;... sources);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This can get also ambiguous when functional interface types get involved as the type argument &lt;code&gt;T&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Error handling&lt;/h4&gt; 
&lt;p&gt;Dataflows can fail, at which point the error is emitted to the consumer(s). Sometimes though, multiple sources may fail at which point there is a choice whether or not wait for all of them to complete or fail. To indicate this opportunity, many operator names are suffixed with the &lt;code&gt;DelayError&lt;/code&gt; words (while others feature a &lt;code&gt;delayError&lt;/code&gt; or &lt;code&gt;delayErrors&lt;/code&gt; boolean flag in one of their overloads):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;T&amp;gt; concat(Publisher&amp;lt;? extends Publisher&amp;lt;? extends T&amp;gt;&amp;gt; sources);

Flowable&amp;lt;T&amp;gt; concatDelayError(Publisher&amp;lt;? extends Publisher&amp;lt;? extends T&amp;gt;&amp;gt; sources);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, suffixes of various kinds may appear together:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;T&amp;gt; concatArrayEagerDelayError(Publisher&amp;lt;? extends T&amp;gt;... sources);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Base class vs base type&lt;/h4&gt; 
&lt;p&gt;The base classes can be considered heavy due to the sheer number of static and instance methods on them. RxJava 3's design was heavily influenced by the &lt;a href="https://github.com/reactive-streams/reactive-streams-jvm#reactive-streams"&gt;Reactive Streams&lt;/a&gt; specification, therefore, the library features a class and an interface per each reactive type:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Class&lt;/th&gt; 
   &lt;th&gt;Interface&lt;/th&gt; 
   &lt;th&gt;Consumer&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;0..N backpressured&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Flowable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Publisher&lt;/code&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Subscriber&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;0..N unbounded&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ObservableSource&lt;/code&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observer&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1 element or error&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Single&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;SingleSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;SingleObserver&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;0..1 element or error&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Maybe&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;MaybeSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;MaybeObserver&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;0 element or error&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Completable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CompletableSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CompletableObserver&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt;The &lt;code&gt;org.reactivestreams.Publisher&lt;/code&gt; is part of the external Reactive Streams library. It is the main type to interact with other reactive libraries through a standardized mechanism governed by the &lt;a href="https://github.com/reactive-streams/reactive-streams-jvm#specification"&gt;Reactive Streams specification&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt;The naming convention of the interface was to append &lt;code&gt;Source&lt;/code&gt; to the semi-traditional class name. There is no &lt;code&gt;FlowableSource&lt;/code&gt; since &lt;code&gt;Publisher&lt;/code&gt; is provided by the Reactive Streams library (and subtyping it wouldn't have helped with interoperation either). These interfaces are, however, not standard in the sense of the Reactive Streams specification and are currently RxJava specific only.&lt;/p&gt; 
&lt;h3&gt;R8 and ProGuard settings&lt;/h3&gt; 
&lt;p&gt;By default, RxJava itself doesn't require any ProGuard/R8 settings and should work without problems. Unfortunately, the Reactive Streams dependency since version 1.0.3 has embedded Java 9 class files in its JAR that can cause warnings with the plain ProGuard:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Warning: org.reactivestreams.FlowAdapters$FlowPublisherFromReactive: can't find superclass or interface java.util.concurrent.Flow$Publisher
Warning: org.reactivestreams.FlowAdapters$FlowToReactiveProcessor: can't find superclass or interface java.util.concurrent.Flow$Processor
Warning: org.reactivestreams.FlowAdapters$FlowToReactiveSubscriber: can't find superclass or interface java.util.concurrent.Flow$Subscriber
Warning: org.reactivestreams.FlowAdapters$FlowToReactiveSubscription: can't find superclass or interface java.util.concurrent.Flow$Subscription
Warning: org.reactivestreams.FlowAdapters: can't find referenced class java.util.concurrent.Flow$Publisher
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is recommended one sets up the following &lt;code&gt;-dontwarn&lt;/code&gt; entry in the application's &lt;code&gt;proguard-ruleset&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;-dontwarn java.util.concurrent.Flow*
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For R8, the RxJava jar includes the &lt;code&gt;META-INF/proguard/rxjava3.pro&lt;/code&gt; with the same no-warning clause and should apply automatically.&lt;/p&gt; 
&lt;h3&gt;Further reading&lt;/h3&gt; 
&lt;p&gt;For further details, consult the &lt;a href="https://github.com/ReactiveX/RxJava/wiki"&gt;wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Communication&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Google Group: &lt;a href="http://groups.google.com/d/forum/rxjava"&gt;RxJava&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href="http://twitter.com/RxJava"&gt;@RxJava&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ReactiveX/RxJava/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;StackOverflow: &lt;a href="http://stackoverflow.com/questions/tagged/rx-java"&gt;rx-java&lt;/a&gt;, &lt;a href="http://stackoverflow.com/questions/tagged/rx-java2"&gt;rx-java2&lt;/a&gt; and &lt;a href="http://stackoverflow.com/questions/tagged/rx-java3"&gt;rx-java3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitter.im/ReactiveX/RxJava"&gt;Gitter.im&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;Version 3.x is in development. Bugfixes will be applied to both 2.x and 3.x branches, but new features will only be added to 3.x.&lt;/p&gt; 
&lt;p&gt;Minor 3.x increments (such as 3.1, 3.2, etc) will occur when non-trivial new functionality is added or significant enhancements or bug fixes occur that may have behavioral changes that may affect some edge cases (such as dependence on behavior resulting from a bug). An example of an enhancement that would classify as this is adding reactive pull backpressure support to an operator that previously did not support it. This should be backwards compatible but does behave differently.&lt;/p&gt; 
&lt;p&gt;Patch 3.x.y increments (such as 3.0.0 -&amp;gt; 3.0.1, 3.3.1 -&amp;gt; 3.3.2, etc) will occur for bug fixes and trivial functionality (like adding a method overload). New functionality marked with an &lt;a href="https://github.com/ReactiveX/RxJava/raw/3.x/src/main/java/io/reactivex/rxjava3/annotations/Beta.java"&gt;&lt;code&gt;@Beta&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://github.com/ReactiveX/RxJava/raw/3.x/src/main/java/io/reactivex/rxjava3/annotations/Experimental.java"&gt;&lt;code&gt;@Experimental&lt;/code&gt;&lt;/a&gt; annotation can also be added in the patch releases to allow rapid exploration and iteration of unstable new functionality.&lt;/p&gt; 
&lt;h4&gt;@Beta&lt;/h4&gt; 
&lt;p&gt;APIs marked with the &lt;a href="https://github.com/ReactiveX/RxJava/raw/3.x/src/main/java/io/reactivex/rxjava3/annotations/Beta.java"&gt;&lt;code&gt;@Beta&lt;/code&gt;&lt;/a&gt; annotation at the class or method level are subject to change. They can be modified in any way, or even removed, at any time. If your code is a library itself (i.e. it is used on the CLASSPATH of users outside your control), you should not use beta APIs, unless you repackage them (e.g. using ProGuard, shading, etc).&lt;/p&gt; 
&lt;h4&gt;@Experimental&lt;/h4&gt; 
&lt;p&gt;APIs marked with the &lt;a href="https://github.com/ReactiveX/RxJava/raw/3.x/src/main/java/io/reactivex/rxjava3/annotations/Experimental.java"&gt;&lt;code&gt;@Experimental&lt;/code&gt;&lt;/a&gt; annotation at the class or method level will almost certainly change. They can be modified in any way, or even removed, at any time. You should not use or rely on them in any production code. They are purely to allow broad testing and feedback.&lt;/p&gt; 
&lt;h4&gt;@Deprecated&lt;/h4&gt; 
&lt;p&gt;APIs marked with the &lt;code&gt;@Deprecated&lt;/code&gt; annotation at the class or method level will remain supported until the next major release, but it is recommended to stop using them.&lt;/p&gt; 
&lt;h4&gt;io.reactivex.rxjava3.internal.*&lt;/h4&gt; 
&lt;p&gt;All code inside the &lt;code&gt;io.reactivex.rxjava3.internal.*&lt;/code&gt; packages are considered private API and should not be relied upon at all. It can change at any time.&lt;/p&gt; 
&lt;h2&gt;Full Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ReactiveX/RxJava/wiki"&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/"&gt;Javadoc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/snapshot/"&gt;Latest snaphot Javadoc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Javadoc of a specific &lt;a href="https://github.com/ReactiveX/RxJava/tags"&gt;release version&lt;/a&gt;: &lt;code&gt;http://reactivex.io/RxJava/3.x/javadoc/3.x.y/&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Binaries&lt;/h2&gt; 
&lt;p&gt;Binaries and dependency information for Maven, Ivy, Gradle and others can be found at &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cio.reactivex.rxjava3"&gt;http://search.maven.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Example for Gradle:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;implementation 'io.reactivex.rxjava3:rxjava:x.y.z'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and for Maven:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;io.reactivex.rxjava3&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;rxjava&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;x.y.z&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and for Ivy:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency org="io.reactivex.rxjava3" name="rxjava" rev="x.y.z" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Snapshots&lt;/h3&gt; 
&lt;p&gt;Snapshots after May 19st, 2025 are available via &lt;a href="https://central.sonatype.com/repository/maven-snapshots/io/reactivex/rxjava3/rxjava/"&gt;https://central.sonatype.com/repository/maven-snapshots/io/reactivex/rxjava3/rxjava/&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;repositories {
  maven { url 'https://central.sonatype.com/repository/maven-snapshots' }
}

dependencies {
  implementation 'io.reactivex.rxjava3:rxjava:3.0.0-SNAPSHOT'
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;JavaDoc snapshots are available at &lt;a href="https://reactivex.io/RxJava/3.x/javadoc/snapshot"&gt;https://reactivex.io/RxJava/3.x/javadoc/snapshot&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;p&gt;To build:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:ReactiveX/RxJava.git
$ cd RxJava/
$ ./gradlew build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Further details on building can be found on the &lt;a href="https://github.com/ReactiveX/RxJava/wiki/Getting-Started"&gt;Getting Started&lt;/a&gt; page of the wiki.&lt;/p&gt; 
&lt;h2&gt;Bugs and Feedback&lt;/h2&gt; 
&lt;p&gt;For bugs, questions and discussions please use the &lt;a href="https://github.com/ReactiveX/RxJava/issues"&gt;Github Issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;LICENSE&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright (c) 2016-present, RxJava Contributors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>vespa-engine/vespa</title>
      <link>https://github.com/vespa-engine/vespa</link>
      <description>&lt;p&gt;AI + Data, online. https://vespa.ai&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="https://assets.vespa.ai/logos/Vespa-logo-green-RGB.svg" /&gt; 
 &lt;source media="(prefers-color-scheme: light)" srcset="https://assets.vespa.ai/logos/Vespa-logo-dark-RGB.svg" /&gt; 
 &lt;img alt="#Vespa" width="200" src="https://assets.vespa.ai/logos/Vespa-logo-dark-RGB.svg?sanitize=true" style="margin-bottom: 25px;" /&gt; 
&lt;/picture&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://buildkite.com/vespaai/vespa-engine-vespa"&gt;&lt;img src="https://badge.buildkite.com/34f7cb35b91da4f929794c5fd7aa722fc15ca0224ad240270b.svg?sanitize=true" alt="Build status" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/license/vespa-engine/vespa" alt="GitHub License" /&gt; &lt;img src="https://img.shields.io/maven-metadata/v?metadataUrl=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Fyahoo%2Fvespa%2Fparent%2Fmaven-metadata.xml" alt="Maven metadata URL" /&gt;&lt;/p&gt; 
&lt;p&gt;Search, make inferences in and organize vectors, tensors, text and structured data, at serving time and any scale.&lt;/p&gt; 
&lt;p&gt;This repository contains all the code required to build and run all of Vespa yourself, and where you can see all development as it happens. All the content in this repository is licensed under the Apache 2.0 license.&lt;/p&gt; 
&lt;p&gt;A new release of Vespa is made from this repository's master branch every morning CET Monday through Thursday.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Home page: &lt;a href="https://vespa.ai"&gt;https://vespa.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://docs.vespa.ai"&gt;https://docs.vespa.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Continuous build: &lt;a href="https://factory.vespa.ai"&gt;https://factory.vespa.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run applications in the cloud for free: &lt;a href="https://vespa.ai/free-trial/"&gt;vespa.ai/free-trial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vespa-engine/vespa/master/#background"&gt;Background&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vespa-engine/vespa/master/#install"&gt;Install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vespa-engine/vespa/master/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vespa-engine/vespa/master/#contribute"&gt;Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vespa-engine/vespa/master/#building"&gt;Building&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vespa-engine/vespa/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Background&lt;/h2&gt; 
&lt;p&gt;Use cases such as search, recommendation and personalization need to select a subset of data in a large corpus, evaluate machine-learned models over the selected data, organize and aggregate it and return it, typically in less than 100 milliseconds, all while the data corpus is continuously changing.&lt;/p&gt; 
&lt;p&gt;This is hard to do, especially with large data sets that need to be distributed over multiple nodes and evaluated in parallel. Vespa is a platform that performs these operations for you with high availability and performance. It has been in development for many years and is used on several large internet services and apps which serve hundreds of thousands of queries from Vespa per second.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;Deploy your Vespa applications to the cloud service: &lt;a href="https://console.vespa-cloud.com/"&gt;console.vespa-cloud.com&lt;/a&gt;, or run your own Vespa instance: &lt;a href="https://docs.vespa.ai/en/getting-started.html"&gt;https://docs.vespa.ai/en/getting-started.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The application created in the getting started guides linked above is fully functional and production-ready, but you may want to &lt;a href="https://docs.vespa.ai/en/multinode-systems.html"&gt;add more nodes&lt;/a&gt; for redundancy.&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://docs.vespa.ai/en/developer-guide.html"&gt;developing applications&lt;/a&gt; on adding your own Java components to your Vespa application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.vespa.ai/en/api.html"&gt;Vespa APIs&lt;/a&gt; is useful to understand how to interface with Vespa&lt;/li&gt; 
 &lt;li&gt;Explore the &lt;a href="https://github.com/vespa-engine/sample-apps/tree/master"&gt;sample applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow the &lt;a href="https://blog.vespa.ai/"&gt;Vespa Blog&lt;/a&gt; for feature updates / use cases&lt;/li&gt; 
 &lt;li&gt;Join the &lt;a href="https://slack.vespa.ai/"&gt;Vespa Slack community&lt;/a&gt; to ask questions and share feedback&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Full documentation is at &lt;a href="https://docs.vespa.ai"&gt;https://docs.vespa.ai&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! See &lt;a href="https://raw.githubusercontent.com/vespa-engine/vespa/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; to learn how to contribute.&lt;/p&gt; 
&lt;p&gt;If you want to contribute to the documentation, see &lt;a href="https://github.com/vespa-engine/documentation"&gt;https://github.com/vespa-engine/documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;You do not need to build Vespa to use it, but if you want to contribute you need to be able to build the code. This section explains how to build and test Vespa. To understand where to make changes, see &lt;a href="https://raw.githubusercontent.com/vespa-engine/vespa/master/Code-map.md"&gt;Code-map.md&lt;/a&gt;. Some suggested improvements with pointers to code are in &lt;a href="https://raw.githubusercontent.com/vespa-engine/vespa/master/TODO.md"&gt;TODO.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Development environment&lt;/h3&gt; 
&lt;p&gt;C++ and Java building is supported on AlmaLinux 8. The Java source can also be built on any platform having Java 17 and Maven 3.8+ installed. Use the following guide to set up a complete development environment using Docker for building Vespa, running unit tests and running system tests: &lt;a href="https://github.com/vespa-engine/docker-image-dev#vespa-development-on-almalinux-8"&gt;Vespa development on AlmaLinux 8&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Java environment for Mac&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install &lt;a href="https://openjdk.org/projects/jdk/17/"&gt;JDK17&lt;/a&gt;, &lt;a href="https://bitbucket.org/mjensen/mvnvm/src/master/"&gt;Maven Version Manager&lt;/a&gt; and &lt;a href="https://www.jenv.be"&gt;jEnv&lt;/a&gt; through &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install jenv mvnvm openjdk@17
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;On ARM Macs (M1, M2 etc.), install intel compatibility since &lt;a href="https://github.com/grpc/grpc-java/issues/7690"&gt;grpc isn't properly maintained&lt;/a&gt;:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;softwareupdate --install-rosetta
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;For the system Java wrappers to find this JDK, symlink it with&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo ln -sfn /opt/homebrew/opt/openjdk@17/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-17.jdk
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Follow "Configure your shell" in &lt;a href="https://www.jenv.be"&gt;https://www.jenv.be&lt;/a&gt;. Configuration is shell specific. For &lt;code&gt;zsh&lt;/code&gt; use the below commands:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;echo 'export PATH="$HOME/.jenv/bin:$PATH"' &amp;gt;&amp;gt; ~/.zshrc
echo 'eval "$(jenv init -)"' &amp;gt;&amp;gt; ~/.zshrc
eval "$(jenv init -)"
jenv enable-plugin export
exec $SHELL -l
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Add JDK17 to jEnv&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;jenv add $(/usr/libexec/java_home -v 17)
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="6"&gt; 
 &lt;li&gt;Verify configuration with Maven by executing below command in the root of the source code. Output should refer to the JDK and Maven version specified in the &lt;a href="https://raw.githubusercontent.com/vespa-engine/vespa/master/.java-version"&gt;.java-version&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/vespa-engine/vespa/master/mvnvm.properties"&gt;mvnvm.properties&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;mvn -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build Java modules&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;export MAVEN_OPTS="-Xms128m -Xmx1024m"
./bootstrap.sh java
mvn install --threads 1C
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use this if you only need to build the Java modules, otherwise follow the complete development guide above.&lt;/p&gt; 
&lt;h3&gt;Run tests for shell scripts (on Mac)&lt;/h3&gt; 
&lt;p&gt;Shell scripts are tested with &lt;a href="https://bats-core.readthedocs.io/en/stable/"&gt;BATS&lt;/a&gt;. To run the tests locally, install the testing framework and its plugins.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install node
sudo npm install -g bats bats-assert bats-support bats-mock
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Export the &lt;code&gt;BATS_PLUGIN_PATH&lt;/code&gt; environment variable to point to the global npm modules directory, which contains the BATS plugins:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export BATS_PLUGIN_PATH="$(npm root -g)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run all tests with the following command (from the root of the repository):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bats -r .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run a specific test, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bats test_dir/test_name.bats
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Tests can also be run in IntelliJ IDEA with the &lt;a href="https://plugins.jetbrains.com/plugin/13841-bashsupport-pro"&gt;BashSupport Pro&lt;/a&gt; plugin. Ensure the &lt;code&gt;BATS_PLUGIN_PATH&lt;/code&gt; environment variable is exported before launching the IDE to avoid setting it in each run configuration.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Code licensed under the Apache 2.0 license. See &lt;a href="https://raw.githubusercontent.com/vespa-engine/vespa/master/LICENSE"&gt;LICENSE&lt;/a&gt; for terms.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dbeaver/dbeaver</title>
      <link>https://github.com/dbeaver/dbeaver</link>
      <description>&lt;p&gt;Free universal database tool and SQL client&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://twitter.com/dbeaver_news"&gt;&lt;img src="https://img.shields.io/twitter/url/https/twitter.com/dbeaver_news.svg?style=social&amp;amp;label=Follow%20%40dbeaver_news" alt="Twitter URL" /&gt;&lt;/a&gt; &lt;a href="https://app.codacy.com/gh/dbeaver/dbeaver/dashboard?utm_source=gh&amp;amp;utm_medium=referral&amp;amp;utm_content=&amp;amp;utm_campaign=Badge_grade"&gt;&lt;img src="https://app.codacy.com/project/badge/Grade/fa0bb9cf5a904c7d87424f8f6351ba92" alt="Codacy Badge" /&gt;&lt;/a&gt; &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/github/license/cronn-de/jira-sync.svg?sanitize=true" alt="Apache 2.0" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dbeaver/dbeaver/issues?q=is%3Aissue+is%3Aopen+label%3A%22wait%20for%20review%22"&gt;&lt;img src="https://img.shields.io/github/issues/dbeaver/dbeaver/wait%20for%20review" alt="Tickets in review" /&gt;&lt;/a&gt; &lt;img src="https://github.com/dbeaver/dbeaver/wiki/images/dbeaver-icon-64x64.png" align="right" /&gt;&lt;/p&gt; 
&lt;h1&gt;DBeaver&lt;/h1&gt; 
&lt;p&gt;Free multi-platform database tool for developers, SQL programmers, database administrators and analysts.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Has a lot of &lt;a href="https://github.com/dbeaver/dbeaver/wiki"&gt;features&lt;/a&gt; including schema editor, SQL editor, data editor, AI integration, ER diagrams, data export/import/migration, SQL execution plans, database administration tools, database dashboards, Spatial data viewer, proxy and SSH tunnelling, custom database drivers editor, etc.&lt;/li&gt; 
 &lt;li&gt;Out of the box supports more than &lt;a href="https://raw.githubusercontent.com/dbeaver/dbeaver/devel/#supported-databases"&gt;100 database drivers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Supports any database which has JDBC or ODBC driver (basically - almost all existing databases).&lt;/li&gt; 
 &lt;li&gt;Supports smart AI completion and code generation with OpenAI or Copilot&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://dbeaver.io/product/dbeaver-sql-editor.png"&gt;&lt;img src="https://dbeaver.io/product/dbeaver-sql-editor.png" width="400" /&gt;&lt;/a&gt; &lt;a href="https://dbeaver.io/product/dbeaver-gis-viewer.png"&gt;&lt;img src="https://dbeaver.io/product/dbeaver-gis-viewer.png" width="400" /&gt;&lt;/a&gt; &lt;a href="https://dbeaver.io/product/dbeaver-data-editor.png"&gt;&lt;img src="https://dbeaver.io/product/dbeaver-data-editor.png" width="400" /&gt;&lt;/a&gt; &lt;a href="https://dbeaver.io/product/dbeaver-erd.png"&gt;&lt;img src="https://dbeaver.io/product/dbeaver-erd.png" width="400" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;You can download prebuilt binaries from &lt;a href="https://dbeaver.io/download" target="_blank"&gt;official website&lt;/a&gt; or directly from &lt;a href="https://github.com/dbeaver/dbeaver/releases"&gt;GitHub releases&lt;/a&gt;.&lt;br /&gt; You can also download &lt;a href="https://dbeaver.io/files/ea" target="_blank"&gt;Early Access&lt;/a&gt; version. We publish daily.&lt;/p&gt; 
&lt;h2&gt;Running&lt;/h2&gt; 
&lt;p&gt;Just run an installer (or unzip an archive) and run &lt;code&gt;dbeaver&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note: DBeaver needs Java to run. &lt;a href="https://adoptium.net/temurin/releases/?package=jre" target="_blank"&gt;OpenJDK 21&lt;/a&gt; is included in all DBeaver distributions. You can change default JDK version by replacing directory &lt;code&gt;jre&lt;/code&gt; in dbeaver installation folder.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dbeaver.com/docs/dbeaver/"&gt;Full product documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dbeaver/dbeaver/wiki"&gt;WIKI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dbeaver/dbeaver/issues"&gt;Issue tracker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dbeaver/dbeaver/wiki/Build-from-sources"&gt;Building from sources&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;DBeaver is written mostly on Java. However, it also uses a set of native OS-specific components for desktop UI, high performance database drivers and networking.&lt;/li&gt; 
 &lt;li&gt;Basic frameworks: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/OSGi"&gt;OSGI&lt;/a&gt; platform for plugins and dependency management. Community version consists of 130+ plugins.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/eclipse-platform/eclipse.platform.ui/raw/master/docs/Rich_Client_Platform.md"&gt;Eclipse RCP&lt;/a&gt; platform for rich user interface build.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Java_Database_Connectivity"&gt;JDBC&lt;/a&gt; for basic database connectivity API.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/JSQLParser/JSqlParser"&gt;JSQLParser&lt;/a&gt; and &lt;a href="https://github.com/antlr/antlr4"&gt;Antlr4&lt;/a&gt; for SQL grammar and semantic parser.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;For networking and additional functionality we use wide range of open source libraries such as &lt;a href="https://github.com/hierynomus/sshj"&gt;SSHJ&lt;/a&gt;, &lt;a href="https://github.com/apache/poi"&gt;Apache POI&lt;/a&gt;, &lt;a href="https://github.com/jfree/jfreechart"&gt;JFreeChart&lt;/a&gt;, &lt;a href="https://github.com/locationtech/jts"&gt;JTS&lt;/a&gt;, &lt;a href="https://github.com/apache/commons-jexl"&gt;Apache JEXL&lt;/a&gt; etc.&lt;/li&gt; 
 &lt;li&gt;We separate model plugins from desktop UI plugins. This allows us to use the same set of "back-end" plugins in both DBeaver and &lt;a href="https://github.com/dbeaver/cloudbeaver"&gt;CloudBeaver&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Dependencies: being an OSGI application we use P2 repositories for third party dependencies. For additional Maven dependencies we use our own &lt;a href="https://github.com/dbeaver/dbeaver-deps-ce"&gt;DBeaver P2 repo&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported databases&lt;/h2&gt; 
&lt;h3&gt;Community version&lt;/h3&gt; 
&lt;p&gt;Out of the box DBeaver supports following database drivers: MySQL, MariaDB, Oracle, DB2, PostgreSQL, SQL Server, Sybase, Apache Hive, Drill, Presto, Trino, Phoenix, Exasol, Informix, Teradata, Vertica, Netezza, Firebird, Derby, H2, H2GIS, WMI, Snowflake, Greenplum, Redshift, Athena, SAP HANA, MaxDB, NuoDB, MS Access, SQLite, CSV, DBF, Firebird, TimescaleDB, Yellowbrick, CockroachDB, OrientDB, MonetDB, Google BigQuery, Google Spanner, Apache Hive/Impala/Spark, Apache Ignite, MapD, Azure SQL, CrateDB, Elasticsearch, Ocient, Ingres, OmniSci, Yugabyte, IRIS, Data Virtuality, Denodo, Virtuoso, Machbase, DuckDB, Babelfish, OceanBase, Salesforce, EnterpriseDB, Apache Druid, Apache Kylin, Databricks, OpenSearch, TiDB, TDEngine, Materialize, JDBCX, Dameng, Altibase, StarRocks, CUBRID, GaussDB, DolphinDB, LibSQL, GBase 8s, Databend, Cloudberry, Teiid, Kingbase.&lt;/p&gt; 
&lt;h3&gt;PRO versions&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://dbeaver.com/download/"&gt;Commercial versions&lt;/a&gt; extends functionality of many popular drivers and also support non-JDBC datasources such as: ODBC, MongoDB, Cassandra, Couchbase, CouchDB, Redis, InfluxDB, Firestore, BigTable, DynamoDB, Kafka KSQL, Neo4j, AWS Neptune, AWS Timestream, Azure CosmosDB, Yugabyte, Salesforce, etc.&lt;br /&gt; Also, we support flat files as databases: CSV, XLSX, Json, XML, Parquet.&lt;br /&gt; You can find the list of all databases supported in commercial versions &lt;a href="https://dbeaver.com/databases/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Feedback&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;For bug reports and feature requests - please &lt;a href="https://github.com/dbeaver/dbeaver/issues"&gt;create a ticket&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;To promote &lt;a href="https://github.com/dbeaver/dbeaver/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc+label%3A%22wait+for+votes%22"&gt;a ticket&lt;/a&gt; to a higher priority - please vote for it with 👍 under the ticket description.&lt;/li&gt; 
 &lt;li&gt;If you have any questions, ideas, etc - please &lt;a href="https://github.com/dbeaver/dbeaver/discussions"&gt;start a discussion&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Pull requests are welcome. See our &lt;a href="https://github.com/dbeaver/dbeaver/wiki/Contribute-your-code"&gt;guide for contributors&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Visit &lt;a href="https://dbeaver.com"&gt;https://dbeaver.com&lt;/a&gt; for more information.&lt;/li&gt; 
 &lt;li&gt;Follow us on &lt;a href="https://x.com/dbeaver_news/"&gt;X&lt;/a&gt; and watch educational video on &lt;a href="https://www.youtube.com/@DBeaver_video"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Thanks for using DBeaver! Star if you like it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution: help the Beaver!&lt;/h2&gt; 
&lt;p&gt;Hooray, we have reached 40k+ stars on GitHub and continue to grow!&lt;br /&gt; That's really cool, and we are glad that you like DBeaver.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We are actively looking for new source code contributors. We have added labels “Good first issue” and “Help wanted” to some tickets. If you want to be a part of our development team, just be brave and take a ticket. &lt;a href="https://dbeaver.com/help-dbeaver/"&gt;We are happy to reward&lt;/a&gt; our most active contributors every major sprint.&lt;/li&gt; 
 &lt;li&gt;You can buy &lt;a href="https://dbeaver.com/buy/"&gt;one of our commercial versions&lt;/a&gt;. They include NoSQL databases support, additional extensions, and official online support. Also, licensed users have priorities in bug fixes and the development of new features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thank you!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dbeaver/dbeaver/graphs/contributors"&gt;DBeaver Team&lt;/a&gt; (contributors)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://github.com/dbeaver/cloudbeaver/"&gt;&lt;img src="https://github.com/dbeaver/cloudbeaver/wiki/images/cloudbeaver-logo.png" width="250" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/dbeaver/cloudbeaver"&gt;CloudBeaver&lt;/a&gt; is a web-based database management tool built on the DBeaver platform. It brings the capabilities of DBeaver to the browser, enabling database management from any device with an internet connection and eliminating the need for local installation. Supporting any database, CloudBeaver incorporates most of DBeaver's features and includes advanced access management for secure collaboration. Designed with a user-friendly interface, CloudBeaver simplifies complex database operations and is suitable for both individual developers and organizations. Its scalable architecture accommodates various needs, making it a convenient solution for managing databases anytime and anywhere through web-based accessibility.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>checkstyle/checkstyle</title>
      <link>https://github.com/checkstyle/checkstyle</link>
      <description>&lt;p&gt;Checkstyle is a development tool to help programmers write Java code that adheres to a coding standard. By default it supports the Google Java Style Guide and Sun Code Conventions, but is highly configurable. It can be invoked with an ANT task and a command line program.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Checkstyle - Java Code Quality Tool&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/checkstyle/resources/master/img/checkstyle-logos/checkstyle-logo-260x99.png" alt="" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;em&gt;Checkstyle is a tool that ensures adherence to a code standard or a set of best practices.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://ci.appveyor.com/project/checkstyle/checkstyle/history"&gt;&lt;img src="https://ci.appveyor.com/api/projects/status/rw6bw3dl9kph6ucc?svg=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://circleci.com/gh/checkstyle/checkstyle/tree/master"&gt;&lt;img src="https://circleci.com/gh/checkstyle/checkstyle/tree/master.svg?style=svg" alt="" /&gt;&lt;/a&gt; &lt;a href="https://cirrus-ci.com/github/checkstyle/checkstyle"&gt;&lt;img src="https://api.cirrus-ci.com/github/checkstyle/checkstyle.svg?branch=master" alt="" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/github/checkstyle/checkstyle?branch=master"&gt;&lt;img src="https://codecov.io/github/checkstyle/checkstyle/coverage.svg?branch=master" alt="" /&gt;&lt;/a&gt; &lt;a href="https://snyk.io/test/github/checkstyle/checkstyle?targetFile=pom.xml"&gt;&lt;img src="https://snyk.io/test/github/checkstyle/checkstyle/badge.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://checkstyle.semaphoreci.com/projects/checkstyle"&gt;&lt;img src="https://checkstyle.semaphoreci.com/badges/checkstyle/branches/master.svg?style=shields" alt="" /&gt;&lt;/a&gt; &lt;a href="https://dev.azure.com/romanivanovjr/romanivanovjr/_build/latest?definitionId=1&amp;amp;branchName=master"&gt;&lt;img src="https://dev.azure.com/romanivanovjr/romanivanovjr/_apis/build/status/checkstyle.checkstyle?branchName=master" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/checkstyle/checkstyle/actions/workflows/error-prone.yml"&gt;&lt;img src="https://github.com/checkstyle/checkstyle/actions/workflows/error-prone.yml/badge.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/checkstyle/checkstyle/actions/workflows/pitest.yml"&gt;&lt;img src="https://github.com/checkstyle/checkstyle/actions/workflows/pitest.yml/badge.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/checkstyle/checkstyle/actions/workflows/checker-framework.yml"&gt;&lt;img src="https://github.com/checkstyle/checkstyle/actions/workflows/checker-framework.yml/badge.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dependabot"&gt;&lt;img src="https://img.shields.io/badge/dependabot-025E8C?style=for-the-badge&amp;amp;logo=dependabot" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/checkstyle/checkstyle/actions/workflows/releasenotes-gen.yml"&gt;&lt;img src="https://github.com/checkstyle/checkstyle/actions/workflows/releasenotes-gen.yml/badge.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/checkstyle/checkstyle/actions/workflows/no-old-refs.yml"&gt;&lt;img src="https://github.com/checkstyle/checkstyle/actions/workflows/no-old-refs.yml/badge.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/checkstyle/checkstyle/actions/workflows/run-link-check.yml"&gt;&lt;img src="https://github.com/checkstyle/checkstyle/actions/workflows/run-link-check.yml/badge.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/checkstyle/checkstyle/actions/workflows/set-milestone-on-referenced-issue.yml"&gt;&lt;img src="https://github.com/checkstyle/checkstyle/actions/workflows/set-milestone-on-referenced-issue.yml/badge.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://search.maven.org/search?q=g:%22com.puppycrawl.tools%22%20AND%20a:%22checkstyle%22"&gt;&lt;img src="https://img.shields.io/maven-central/v/com.puppycrawl.tools/checkstyle.svg?label=Maven%20Central" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The latest release version can be found at &lt;a href="https://github.com/checkstyle/checkstyle/releases/"&gt;GitHub releases&lt;/a&gt; or at &lt;a href="https://repo1.maven.org/maven2/com/puppycrawl/tools/checkstyle/"&gt;Maven repo&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Each-commit builds of maven artifacts can be found at &lt;a href="https://oss.sonatype.org/content/repositories/snapshots/com/puppycrawl/tools/checkstyle/"&gt;Maven Snapshot repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Documentation is available in HTML format, see &lt;a href="https://checkstyle.org/checks.html"&gt;https://checkstyle.org/checks.html&lt;/a&gt; .&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/checkstyle/checkstyle/master/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/checkstyle/checkstyle/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/checkstyle/checkstyle/master/#feedback-and-support"&gt;Feedback and Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/checkstyle/checkstyle/master/#javadoc"&gt;Javadoc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/checkstyle/checkstyle/master/#sponsor-checkstyle"&gt;Sponsor Checkstyle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/checkstyle/checkstyle/master/#licensing"&gt;Licensing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download our &lt;a href="https://github.com/checkstyle/checkstyle/releases/"&gt;Latest Release&lt;/a&gt; from GitHub or Add Checkstyle to your build from &lt;a href="https://mvnrepository.com/artifact/com.puppycrawl.tools/checkstyle"&gt;Maven Central&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Read our Documentation for &lt;a href="https://checkstyle.org/cmdline.html"&gt;usage&lt;/a&gt; and &lt;a href="https://checkstyle.org/config.html"&gt;configuration&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ cat config.xml
&amp;lt;?xml version="1.0"?&amp;gt;
&amp;lt;!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "https://checkstyle.org/dtds/configuration_1_3.dtd"&amp;gt;
&amp;lt;module name="Checker"&amp;gt;
  &amp;lt;module name="TreeWalker"&amp;gt;
    &amp;lt;module name="FallThrough"/&amp;gt;
  &amp;lt;/module&amp;gt;
&amp;lt;/module&amp;gt;

$ cat Test.java
class Test {
  public void foo() {
    int i = 0;
    while (i &amp;gt;= 0) {
      switch (i) {
        case 1:
        case 2:
          i++;
        case 3: // violation 'fall from previous branch of the switch'
          i++;
      }
    }
  }
}

$ java -jar checkstyle-10.18.1-all.jar -c config.xml Test.java
Starting audit...
[ERROR] Test.java:9:9: Fall through from previous branch of switch statement [FallThrough]
Audit done.
Checkstyle ends with 1 errors.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Thanks for your interest in contributing to CheckStyle! Please see the &lt;a href="https://github.com/checkstyle/checkstyle/raw/master/.github/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; for information on how to contribute to the project. This includes creating issues, submitting pull requests, and setting up your development environment.&lt;/p&gt; 
&lt;h2&gt;Build Instructions&lt;/h2&gt; 
&lt;p&gt;Please see the &lt;a href="https://checkstyle.org/contributing.html#Build"&gt;CheckStyle Documentation&lt;/a&gt; for information on how to build the project.&lt;/p&gt; 
&lt;h2&gt;Feedback and Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visit our &lt;a href="https://github.com/checkstyle/checkstyle/discussions"&gt;Discussions Page&lt;/a&gt;, where you can ask questions and discuss the project with other users and contributors. This is our preferred method of communication for topics like usage and configuration questions, debugging, and other feedback.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/checkstyle"&gt;Stack Overflow&lt;/a&gt; is another place to ask questions about Checkstyle usage.&lt;/li&gt; 
 &lt;li&gt;If you are interested in contributing to the project, you can join our &lt;a href="https://discord.com/channels/845645228467159061/1216455699488313554"&gt;Discord Contributors Chat&lt;/a&gt; &lt;a href="https://discord.gg/FsUsYC2ura"&gt;with invite link&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Our &lt;a href="https://groups.google.com/forum/?hl=en#!forum/checkstyle"&gt;Google Groups Forum&lt;/a&gt; is a mailing list for discussion and support; however, we may be slow to respond there.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Javadoc&lt;/h2&gt; 
&lt;p&gt;Take a look at our &lt;a href="https://checkstyle.org/apidocs/index.html"&gt;javadoc&lt;/a&gt; to see our API documentation.&lt;/p&gt; 
&lt;h2&gt;Sponsor Checkstyle&lt;/h2&gt; 
&lt;p&gt;Checkstyle is an open-source project that is developed and maintained by volunteers. If you find Checkstyle useful, please consider sponsoring the project. Your support helps us to maintain and improve Checkstyle.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://liberapay.com/checkstyle/"&gt;Liberapay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://opencollective.com/checkstyle/"&gt;OpenCollective&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/checkstyle/"&gt;&lt;img src="https://opencollective.com/checkstyle/backers/badge.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/checkstyle/"&gt;&lt;img src="https://opencollective.com/checkstyle/sponsors/badge.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;Checkstyle is licensed under the &lt;a href="https://raw.githubusercontent.com/checkstyle/checkstyle/master/LICENSE"&gt;GNU LGPL v2.1 License&lt;/a&gt;. Checkstyle uses libraries:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.antlr.org/"&gt;ANTLR&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://commons.apache.org/"&gt;Apache Commons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/guava/"&gt;Google Guava&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/remkop/picocli/"&gt;Picocli&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development Tools Powered by&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://jb.gg/OpenSource"&gt;&lt;img src="https://resources.jetbrains.com/storage/products/company/brand/logos/jetbrains.svg?sanitize=true" alt="JetBrains logo." /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.ej-technologies.com/jprofiler"&gt;&lt;img src="https://www.ej-technologies.com/images/product_banners/jprofiler_medium.png" alt="JProfiler logo." /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DhanushNehru/Hacktoberfest2025</title>
      <link>https://github.com/DhanushNehru/Hacktoberfest2025</link>
      <description>&lt;p&gt;Hacktoberfest 2025 OPEN FIRST Pull Request - SUPPORT OPEN SOURCE - Don't forget to spread love and if you like give us a ⭐️&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Hacktoberfest&lt;/h1&gt; 
&lt;h2&gt;Open Source Programs&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://discord.com/invite/Yn9g6KuWyA"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join%20Server-blue?logo=discord&amp;amp;style=for-the-badge" alt="Join Our Discord" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/@dhanushnehru?sub_confirmation=1"&gt;&lt;img src="https://img.shields.io/badge/YouTube-Subscribe-red?logo=youtube&amp;amp;style=for-the-badge" alt="Subscribe on YouTube" /&gt;&lt;/a&gt; &lt;a href="https://dhanushn.substack.com/"&gt;&lt;img src="https://img.shields.io/badge/Newsletter-Subscribe-orange?style=for-the-badge" alt="Subscribe to Newsletter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Hacktoberfest 2025 OPEN FIRST Pull Request - SUPPORT OPEN SOURCE&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/DhanushNehru/Hacktoberfest/raw/main/.github/logo.png" alt="HacktoberFest 2025" /&gt;&lt;/p&gt; 
&lt;h2&gt;This Project Is Perfect For Your First Pull Request&lt;/h2&gt; 
&lt;p&gt;🗣 &lt;strong&gt;Hacktoberfest encourages participation in the open-source community, which grows bigger every year. Complete the challenge as a part of your opensource journey.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;📢 &lt;strong&gt;Register &lt;a href="https://hacktoberfest.com"&gt;here&lt;/a&gt; for Hacktoberfest and make four pull requests (PRs) between October 1st-31st to grab free SWAGS 🔥.&lt;/strong&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://img.shields.io/badge/hacktoberfest-2024-greenviolet" alt="Hacktober Badge" /&gt; 
 &lt;img src="https://img.shields.io/static/v1?label=%F0%9F%8C%9F&amp;amp;message=If%20Useful&amp;amp;style=style=flat&amp;amp;color=BC4E99" alt="Star Badge" /&gt; 
 &lt;a href="https://github.com/DhanushNehru"&gt;&lt;img src="https://img.shields.io/badge/Contributions-welcome-violet.svg?style=flat&amp;amp;logo=git" alt="Contributions" /&gt;&lt;/a&gt; 
 &lt;p&gt;&lt;a href="https://github.com/DhanushNehru/hacktoberfest/pulls"&gt;&lt;img src="https://img.shields.io/github/issues-pr/DhanushNehru/Hacktoberfest" alt="Pull Requests Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/DhanushNehru/hacktoberfest/graphs/contributors"&gt;&lt;img alt="GitHub contributors" src="https://img.shields.io/github/contributors/DhanushNehru/hacktoberfest?color=2b9348" /&gt;&lt;/a&gt; &lt;a href="https://github.com/DhanushNehru/hacktoberfest/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/DhanushNehru/hacktoberfest?color=2b9348" alt="License Badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;⭐ How to get started with open source?&lt;/h2&gt; 
&lt;img src="https://github.com/Vi1234sh12/Face-X/raw/master/.github/Assests/isometric.png" height="290px" align="right" /&gt; 
&lt;p&gt;You can refer to the following articles on the basics of Git and Github.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/SYtPC9tHYyQ"&gt;Watch this video to get started, if you have no clue about open source&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://help.github.com/en/github/getting-started-with-github/fork-a-repo"&gt;Forking a Repo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://help.github.com/en/desktop/contributing-to-projects/creating-a-pull-request"&gt;Cloning a Repo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://opensource.com/article/19/7/create-pull-request-github"&gt;How to create a Pull Request&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://towardsdatascience.com/getting-started-with-git-and-github-6fcd0f2d4ac6"&gt;Getting started with Git and GitHub&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;INSTRUCTIONS-&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Fork&lt;/strong&gt; this Repository using the button at the top on the right corner.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Clone&lt;/strong&gt; your forked repository to your PC ( git clone "url from clone option.)&lt;/li&gt; 
 &lt;li&gt;Create a new branch for your modifications (ie. &lt;code&gt;git branch new-user and check it out &lt;/code&gt;git checkout new-user&lt;code&gt;or simply do&lt;/code&gt;git checkout -b new-user`)&lt;/li&gt; 
 &lt;li&gt;Add your profile image in &lt;code&gt;static/images/&lt;/code&gt; ( use drag and drop option or upload by commands.)&lt;/li&gt; 
 &lt;li&gt;Add your profile data in &lt;code&gt;content/participant/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Add your files (&lt;code&gt;git add -A&lt;/code&gt;), commit (&lt;code&gt;git commit -m "added myself"&lt;/code&gt;) and push (&lt;code&gt;git push origin new-user&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Create a pull request&lt;/li&gt; 
 &lt;li&gt;Star this repository&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;⭐ How to make a pull request (PR)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Start by making a Fork of the &lt;a href="https://github.com/DhanushNehru/Hacktoberfest"&gt;&lt;strong&gt;Hacktoberfest&lt;/strong&gt;&lt;/a&gt; repository. Click on the &lt;a href="https://github.com/DhanushNehru/Hacktoberfest/fork"&gt;&lt;img src="https://i.imgur.com/G4z1kEe.png" height="21" width="21" /&gt;&lt;/a&gt;Fork symbol at the top right corner.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Clone your new fork of the repository in the terminal/CLI on your computer with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/&amp;lt;your-github-username&amp;gt;/Hacktoberfest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Navigate to the newly created PetMe project directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd Hacktoberfest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Set upstream command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote add upstream https://github.com/DhanushNehru.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Create a new branch:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git checkout -b YourBranchName
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Sync your fork or your local repository with the origin repository:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In your forked repository, click on "Fetch upstream"&lt;/li&gt; 
 &lt;li&gt;Click "Fetch and merge"&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; Make your changes to the source code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; Stage your changes and commit:&lt;/p&gt; 
&lt;p&gt;⚠️ &lt;strong&gt;Make sure&lt;/strong&gt; not to commit &lt;code&gt;package.json&lt;/code&gt; or &lt;code&gt;package-lock.json&lt;/code&gt; file&lt;/p&gt; 
&lt;p&gt;⚠️ &lt;strong&gt;Make sure&lt;/strong&gt; not to run the commands &lt;code&gt;git add .&lt;/code&gt; or &lt;code&gt;git add *&lt;/code&gt;. Instead, stage your changes for each file/folder&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git add public
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git commit -m "&amp;lt;your_commit_message&amp;gt;"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;9.&lt;/strong&gt; Push your local commits to the remote repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git push origin YourBranchName
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;10.&lt;/strong&gt; Create a &lt;a href="https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request"&gt;Pull Request&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;11.&lt;/strong&gt; &lt;strong&gt;Congratulations!&lt;/strong&gt; You've made your first contribution to [&lt;strong&gt;Hacktoberfest&lt;/strong&gt;]&lt;/p&gt; 
&lt;h1&gt;How To Make Your First Pull Request&lt;/h1&gt; 
&lt;p&gt;Replace &lt;code&gt;&amp;lt;YOUR-USERNAME&amp;gt;&lt;/code&gt; with your GitHub username in this guide.&lt;/p&gt; 
&lt;h2&gt;1. Add your profile picture to the folder&lt;/h2&gt; 
&lt;p&gt;Add a picture of your choice in &lt;code&gt;static/images/&lt;/code&gt;. Accepted files are &lt;strong&gt;png&lt;/strong&gt; and &lt;strong&gt;jpg&lt;/strong&gt;, should be squared and minimum size 544x544 pixels. Ex.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;static/images/&amp;lt;YOUR-USERNAME&amp;gt;.png
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2. Add your profile information&lt;/h2&gt; 
&lt;p&gt;Create a markdown file in your folder following the convention &lt;code&gt;content/participant/&amp;lt;YOUR-USERNAME&amp;gt;.md&lt;/code&gt;. Ex.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;content/participant/&amp;lt;YOUR-USERNAME&amp;gt;.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Copy the next template into your file, delete the boilerplate data and fill the information with yours.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;---
name: YOURNAME
institution/company: INSTITUTION_NAME
github: USERNAME
---
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align="center"&gt; 
 &lt;h2&gt; OR &lt;/h2&gt; 
&lt;/div&gt; 
&lt;h2&gt;3. Create / Upload Your Code / Algorithms&lt;/h2&gt; 
&lt;p&gt;Create/Upload your code in the folder following the convention &lt;code&gt;Add Code Here&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Choose an extract language folder &lt;code&gt;drop your code&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Below is &lt;code&gt;an example&lt;/code&gt; to add file properly&lt;/li&gt; 
 &lt;li&gt;You can follow up &lt;code&gt;any languages&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;Add Code Here/PYTHON/&amp;lt;YOUR-FILERNAME&amp;gt;.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;Add Code Here/C++/&amp;lt;YOUR-FILERNAME&amp;gt;.cpp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can follow any pathway a &lt;code&gt;code&lt;/code&gt; or &lt;code&gt;profile information&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;4. Wait for Pull Request to merge&lt;/h2&gt; 
&lt;h2&gt;5. Celebrate - you've done your first pull request!!&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-py"&gt;'''
Always make more than 4 pull requests.
Let's say you have made only 4 pull requests to different projects,
but one project is excluded from hackoctoberfest event then your pull request will not be counted and 
then you have the remaining 3 valid pull requests if these projects are not excluded.
If you fail to make 4 pull requests then you can't get swags or t-shirts.
I will recommend you make a pull request to your own repo which is very very safe for you.
Keep in mind that the repo has hacktoberfest topic.
'''
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ashishps1/awesome-low-level-design</title>
      <link>https://github.com/ashishps1/awesome-low-level-design</link>
      <description>&lt;p&gt;Learn Low Level Design (LLD) and prepare for interviews using free resources.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/images/lld-repo-logo.png" width="350" height="200" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://blog.algomaster.io/"&gt;Join Free Newsletter&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;This repository contains resources to learn Low Level Design (LLD) / Object Oriented Design (OOD) and prepare for interviews.&lt;/p&gt; 
&lt;p&gt;👉 For a better and more comprehensive experience, checkout the &lt;a href="https://algomaster.io/learn/lld"&gt;LLD page at AlgoMaster.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📌 Fundamental Concepts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/basic-oop-concepts-explained-with-code"&gt;Basics OOP Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://algomaster.io/learn/lld/dry"&gt;DRY Principle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://algomaster.io/learn/lld/yagni"&gt;YAGNI Principle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://algomaster.io/learn/lld/kiss"&gt;KISS Principle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/backticks-tildes/the-s-o-l-i-d-principles-in-pictures-b34ce2f1e898"&gt;SOLID Principles with Pictures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/solid-principles-explained-with-code"&gt;SOLID Principles with Code&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⚙️ Design Patterns&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Creational Patterns&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Structural Patterns&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Behavioral Patterns&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/singleton"&gt;Singleton&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/adapter"&gt;Adapter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/iterator"&gt;Iterator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/factory-method"&gt;Factory Method&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/bridge"&gt;Bridge&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/observer"&gt;Observer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/abstract-factory"&gt;Abstract Factory&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/composite"&gt;Composite&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/strategy"&gt;Strategy&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/builder"&gt;Builder&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/decorator"&gt;Decorator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/command"&gt;Command&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/prototype"&gt;Prototype&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/facade"&gt;Facade&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/state"&gt;State&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/flyweight"&gt;Flyweight&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/template-method"&gt;Template Method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/proxy"&gt;Proxy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/visitor"&gt;Visitor&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/mediator"&gt;Mediator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/memento"&gt;Memento&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/chain-of-responsibility"&gt;Chain of Responsibility&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🗂️ UML&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/uml-class-diagram-explained-with-examples"&gt;Class Diagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/119449cd-b003-46da-9e4d-0eb356d216d8"&gt;Use Case Diagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/4dd99bdc-5c35-4a80-bc53-1777cb57aa05"&gt;Sequence Diagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.visual-paradigm.com/guide/uml-unified-modeling-language/what-is-activity-diagram/"&gt;Activity Diagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.visual-paradigm.com/guide/uml-unified-modeling-language/what-is-state-machine-diagram/"&gt;State Machine Diagram&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;✅ &lt;a href="https://blog.algomaster.io/p/how-to-answer-a-lld-interview-problem"&gt;How to Answer a LLD Interview Problem&lt;/a&gt;&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/images/interview-template.png" width="350" height="250" /&gt; 
&lt;h2&gt;💻 Low Level Design Interview Problems&lt;/h2&gt; 
&lt;h3&gt;Easy Problems&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/parking-lot.md"&gt;Design Parking Lot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/stack-overflow.md"&gt;Design Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/vending-machine.md"&gt;Design a Vending Machine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/logging-framework.md"&gt;Design Logging Framework&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/traffic-signal.md"&gt;Design Traffic Signal Control System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/coffee-vending-machine.md"&gt;Design Coffee Vending Machine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/task-management-system.md"&gt;Design a Task Management System&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Medium Problems&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/atm.md"&gt;Design ATM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/linkedin.md"&gt;Design LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/lru-cache.md"&gt;Design LRU Cache&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/tic-tac-toe.md"&gt;Design Tic Tac Toe Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/pub-sub-system.md"&gt;Design Pub Sub System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/elevator-system.md"&gt;Design an Elevator System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/car-rental-system.md"&gt;Design Car Rental System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/online-auction-system.md"&gt;Design an Online Auction System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/hotel-management-system.md"&gt;Design Hotel Management System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/digital-wallet-service.md"&gt;Design a Digital Wallet Service&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/airline-management-system.md"&gt;Design Airline Management System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/library-management-system.md"&gt;Design a Library Management System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/social-networking-service.md"&gt;Design a Social Network like Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/restaurant-management-system.md"&gt;Design Restaurant Management System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/concert-ticket-booking-system.md"&gt;Design a Concert Ticket Booking System&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hard Problems&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/cricinfo.md"&gt;Design CricInfo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/splitwise.md"&gt;Design Splitwise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/chess-game.md"&gt;Design Chess Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/snake-and-ladder.md"&gt;Design a Snake and Ladder game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/ride-sharing-service.md"&gt;Design Ride-Sharing Service like Uber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/course-registration-system.md"&gt;Design Course Registration System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/movie-ticket-booking-system.md"&gt;Design Movie Ticket Booking System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/online-shopping-service.md"&gt;Design Online Shopping System like Amazon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/online-stock-brokerage-system.md"&gt;Design Online Stock Brokerage System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/music-streaming-service.md"&gt;Design Music Streaming Service like Spotify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/food-delivery-service.md"&gt;Design Online Food Delivery Service like Swiggy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📇 Courses&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://algomaster.io/learn/lld/what-is-lld"&gt;Master LLD Interviews - AlgoMaster.io&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📚 Books&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/9385889753"&gt;Head First Design Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/B001GSTOAM"&gt;Clean Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/0134757599"&gt;Refactoring: Improving the Design of Existing Code&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📩 Newsletter&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/"&gt;AlgoMaster Newsletter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Additional resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/learn/object-oriented-design"&gt;Coursera - Object-Oriented Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/learn/design-patterns"&gt;Coursera - Design Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DovAmir/awesome-design-patterns"&gt;Github - Awesome Design Patterns&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! If you'd like to add a new problem, improve existing content, or fix errors:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create a feature branch: &lt;code&gt;git checkout -b feature/your-feature-name&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Commit your changes: &lt;code&gt;git commit -m 'Add some feature'&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Push to the branch: &lt;code&gt;git push origin feature/your-feature-name&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Submit a pull request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please make sure to update Readme files and documentation as appropriate.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;i&gt;If you find this resource helpful, please give it a star and share it with others!&lt;/i&gt; &lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>