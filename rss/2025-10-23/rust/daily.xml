<rss version="2.0">
  <channel>
    <title>GitHub Rust Daily Trending</title>
    <description>Daily Trending of Rust in GitHub</description>
    <pubDate>Wed, 22 Oct 2025 01:38:58 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>apache/datafusion</title>
      <link>https://github.com/apache/datafusion</link>
      <description>&lt;p&gt;Apache DataFusion SQL Query Engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache DataFusion&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://crates.io/crates/datafusion"&gt;&lt;img src="https://img.shields.io/crates/v/datafusion.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/apache/datafusion/raw/main/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/badge/license-Apache%20v2-blue.svg?sanitize=true" alt="Apache licensed" /&gt;&lt;/a&gt; &lt;a href="https://github.com/apache/datafusion/actions?query=branch%3Amain"&gt;&lt;img src="https://github.com/apache/datafusion/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/commit-activity/m/apache/datafusion" alt="Commit Activity" /&gt; &lt;a href="https://github.com/apache/datafusion/issues"&gt;&lt;img src="https://img.shields.io/github/issues-raw/apache/datafusion" alt="Open Issues" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/Qw5gKqHxUM"&gt;&lt;img src="https://img.shields.io/badge/Chat-Discord-purple" alt="Discord chat" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/apache-datafusion/"&gt;&lt;img src="https://img.shields.io/badge/Follow-Linkedin-blue" alt="Linkedin" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/crates/msrv/datafusion?label=Min%20Rust%20Version" alt="Crates.io MSRV" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://datafusion.apache.org/"&gt;Website&lt;/a&gt; | &lt;a href="https://docs.rs/datafusion/latest/datafusion/"&gt;API Docs&lt;/a&gt; | &lt;a href="https://discord.com/channels/885562378132000778/885562378132000781"&gt;Chat&lt;/a&gt;&lt;/p&gt; 
&lt;a href="https://datafusion.apache.org/"&gt; &lt;img src="https://github.com/apache/datafusion/raw/HEAD/docs/source/_static/images/2x_bgwhite_original.png" width="512" alt="logo" /&gt; &lt;/a&gt; 
&lt;p&gt;DataFusion is an extensible query engine written in &lt;a href="http://rustlang.org"&gt;Rust&lt;/a&gt; that uses &lt;a href="https://arrow.apache.org"&gt;Apache Arrow&lt;/a&gt; as its in-memory format.&lt;/p&gt; 
&lt;p&gt;This crate provides libraries and binaries for developers building fast and feature rich database and analytic systems, customized to particular workloads. See &lt;a href="https://datafusion.apache.org/user-guide/introduction.html#use-cases"&gt;use cases&lt;/a&gt; for examples. The following related subprojects target end users:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apache/datafusion-python/"&gt;DataFusion Python&lt;/a&gt; offers a Python interface for SQL and DataFrame queries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apache/datafusion-comet/"&gt;DataFusion Comet&lt;/a&gt; is an accelerator for Apache Spark based on DataFusion.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;"Out of the box," DataFusion offers [SQL] and [&lt;code&gt;Dataframe&lt;/code&gt;] APIs, excellent &lt;a href="https://benchmark.clickhouse.com/"&gt;performance&lt;/a&gt;, built-in support for CSV, Parquet, JSON, and Avro, extensive customization, and a great community.&lt;/p&gt; 
&lt;p&gt;DataFusion features a full query planner, a columnar, streaming, multi-threaded, vectorized execution engine, and partitioned data sources. You can customize DataFusion at almost all points including additional data sources, query languages, functions, custom operators and more. See the &lt;a href="https://datafusion.apache.org/contributor-guide/architecture.html"&gt;Architecture&lt;/a&gt; section for more details.&lt;/p&gt; 
&lt;p&gt;Here are links to some important information&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://datafusion.apache.org/"&gt;Project Site&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://datafusion.apache.org/user-guide/cli/installation.html"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://datafusion.apache.org/user-guide/example-usage.html"&gt;Rust Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://datafusion.apache.org/user-guide/dataframe.html"&gt;Rust DataFrame API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.rs/datafusion/latest/datafusion"&gt;Rust API docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apache/datafusion/tree/main/datafusion-examples"&gt;Rust Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://arrow.apache.org/datafusion-python/"&gt;Python DataFrame API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.rs/datafusion/latest/datafusion/index.html#architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What can you do with this crate?&lt;/h2&gt; 
&lt;p&gt;DataFusion is great for building projects such as domain specific query engines, new database platforms and data pipelines, query languages and more. It lets you start quickly from a fully working engine, and then customize those features specific to your use. &lt;a href="https://datafusion.apache.org/user-guide/introduction.html#known-users"&gt;Click Here&lt;/a&gt; to see a list known users.&lt;/p&gt; 
&lt;h2&gt;Contributing to DataFusion&lt;/h2&gt; 
&lt;p&gt;Please see the &lt;a href="https://datafusion.apache.org/contributor-guide"&gt;contributor guide&lt;/a&gt; and &lt;a href="https://datafusion.apache.org/contributor-guide/communication.html"&gt;communication&lt;/a&gt; pages for more information.&lt;/p&gt; 
&lt;h2&gt;Crate features&lt;/h2&gt; 
&lt;p&gt;This crate has several &lt;a href="https://doc.rust-lang.org/cargo/reference/features.html"&gt;features&lt;/a&gt; which can be specified in your &lt;code&gt;Cargo.toml&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Default features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;nested_expressions&lt;/code&gt;: functions for working with nested type function such as &lt;code&gt;array_to_string&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;compression&lt;/code&gt;: reading files compressed with &lt;code&gt;xz2&lt;/code&gt;, &lt;code&gt;bzip2&lt;/code&gt;, &lt;code&gt;flate2&lt;/code&gt;, and &lt;code&gt;zstd&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;crypto_expressions&lt;/code&gt;: cryptographic functions such as &lt;code&gt;md5&lt;/code&gt; and &lt;code&gt;sha256&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;datetime_expressions&lt;/code&gt;: date and time functions such as &lt;code&gt;to_timestamp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;encoding_expressions&lt;/code&gt;: &lt;code&gt;encode&lt;/code&gt; and &lt;code&gt;decode&lt;/code&gt; functions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;parquet&lt;/code&gt;: support for reading the &lt;a href="https://parquet.apache.org/"&gt;Apache Parquet&lt;/a&gt; format&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sql&lt;/code&gt;: Support for sql parsing / planning&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;regex_expressions&lt;/code&gt;: regular expression functions, such as &lt;code&gt;regexp_match&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;unicode_expressions&lt;/code&gt;: Include unicode aware functions such as &lt;code&gt;character_length&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;unparser&lt;/code&gt;: enables support to reverse LogicalPlans back into SQL&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;recursive_protection&lt;/code&gt;: uses &lt;a href="https://docs.rs/recursive/latest/recursive/"&gt;recursive&lt;/a&gt; for stack overflow protection.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Optional features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;avro&lt;/code&gt;: support for reading the &lt;a href="https://avro.apache.org/"&gt;Apache Avro&lt;/a&gt; format&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;backtrace&lt;/code&gt;: include backtrace information in error messages&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;parquet_encryption&lt;/code&gt;: support for using &lt;a href="https://parquet.apache.org/docs/file-format/data-pages/encryption/"&gt;Parquet Modular Encryption&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pyarrow&lt;/code&gt;: conversions between PyArrow and DataFusion types&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;serde&lt;/code&gt;: enable arrow-schema's &lt;code&gt;serde&lt;/code&gt; feature&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;DataFusion API Evolution and Deprecation Guidelines&lt;/h2&gt; 
&lt;p&gt;Public methods in Apache DataFusion evolve over time: while we try to maintain a stable API, we also improve the API over time. As a result, we typically deprecate methods before removing them, according to the &lt;a href="https://datafusion.apache.org/contributor-guide/api-health.html"&gt;deprecation guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Dependencies and &lt;code&gt;Cargo.lock&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Following the &lt;a href="https://blog.rust-lang.org/2023/08/29/committing-lockfiles.html"&gt;guidance&lt;/a&gt; on committing &lt;code&gt;Cargo.lock&lt;/code&gt; files, this project commits its &lt;code&gt;Cargo.lock&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;CI uses the committed &lt;code&gt;Cargo.lock&lt;/code&gt; file, and dependencies are updated regularly using &lt;a href="https://docs.github.com/en/code-security/dependabot/working-with-dependabot"&gt;Dependabot&lt;/a&gt; PRs.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>clockworklabs/SpacetimeDB</title>
      <link>https://github.com/clockworklabs/SpacetimeDB</link>
      <description>&lt;p&gt;Multiplayer at the speed of light&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://spacetimedb.com#gh-dark-mode-only" target="_blank"&gt; &lt;img width="320" src="https://raw.githubusercontent.com/clockworklabs/SpacetimeDB/master/images/dark/logo.svg?sanitize=true" alt="SpacetimeDB Logo" /&gt; &lt;/a&gt; &lt;a href="https://spacetimedb.com#gh-light-mode-only" target="_blank"&gt; &lt;img width="320" src="https://raw.githubusercontent.com/clockworklabs/SpacetimeDB/master/images/light/logo.svg?sanitize=true" alt="SpacetimeDB Logo" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://spacetimedb.com#gh-dark-mode-only" target="_blank"&gt; &lt;img width="250" src="https://raw.githubusercontent.com/clockworklabs/SpacetimeDB/master/images/dark/logo-text.svg?sanitize=true" alt="SpacetimeDB" /&gt; &lt;/a&gt; &lt;a href="https://spacetimedb.com#gh-light-mode-only" target="_blank"&gt; &lt;img width="250" src="https://raw.githubusercontent.com/clockworklabs/SpacetimeDB/master/images/light/logo-text.svg?sanitize=true" alt="SpacetimeDB" /&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h3 align="center"&gt; Multiplayer at the speed of light. &lt;/h3&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/clockworklabs/spacetimedb"&gt;&lt;img src="https://img.shields.io/github/v/release/clockworklabs/spacetimedb?color=%23ff00a0&amp;amp;include_prereleases&amp;amp;label=version&amp;amp;sort=semver&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/clockworklabs/spacetimedb"&gt;&lt;img src="https://img.shields.io/badge/built_with-Rust-dca282.svg?style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/clockworklabs/spacetimedb/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/clockworklabs/spacetimedb/ci.yml?style=flat-square&amp;amp;branch=master" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://status.spacetimedb.com"&gt;&lt;img src="https://img.shields.io/uptimerobot/ratio/7/m784409192-e472ca350bb615372ededed7?label=cloud%20uptime&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://hub.docker.com/r/clockworklabs/spacetimedb"&gt;&lt;img src="https://img.shields.io/docker/pulls/clockworklabs/spacetimedb?style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/clockworklabs/spacetimedb/raw/master/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/badge/license-BSL_1.1-00bfff.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://crates.io/crates/spacetimedb"&gt;&lt;img src="https://img.shields.io/crates/d/spacetimedb?color=e45928&amp;amp;label=Rust%20Crate&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.nuget.org/packages/SpacetimeDB.Runtime"&gt;&lt;img src="https://img.shields.io/nuget/dt/spacetimedb.runtime?color=0b6cff&amp;amp;label=NuGet%20Package&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://discord.gg/spacetimedb"&gt;&lt;img src="https://img.shields.io/discord/1037340874172014652?label=discord&amp;amp;style=flat-square&amp;amp;color=5a66f6" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://twitter.com/spacetime_db"&gt;&lt;img src="https://img.shields.io/badge/twitter-Follow_us-1d9bf0.svg?style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://clockworklabs.io/join"&gt;&lt;img src="https://img.shields.io/badge/careers-Join_us-86f7b7.svg?style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.linkedin.com/company/clockworklabs/"&gt;&lt;img src="https://img.shields.io/badge/linkedin-Connect_with_us-0a66c2.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://discord.gg/spacetimedb"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/clockworklabs/SpacetimeDB/master/images/social/discord.svg?sanitize=true" alt="Discord" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://twitter.com/spacetime_db"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/clockworklabs/SpacetimeDB/master/images/social/twitter.svg?sanitize=true" alt="Twitter" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/clockworklabs/spacetimedb"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/clockworklabs/SpacetimeDB/master/images/social/github.svg?sanitize=true" alt="GitHub" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://twitch.tv/SpacetimeDB"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/clockworklabs/SpacetimeDB/master/images/social/twitch.svg?sanitize=true" alt="Twitch" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://youtube.com/@SpacetimeDB"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/clockworklabs/SpacetimeDB/master/images/social/youtube.svg?sanitize=true" alt="YouTube" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.linkedin.com/company/clockwork-labs/"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/clockworklabs/SpacetimeDB/master/images/social/linkedin.svg?sanitize=true" alt="LinkedIn" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://stackoverflow.com/questions/tagged/spacetimedb"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/clockworklabs/SpacetimeDB/master/images/social/stackoverflow.svg?sanitize=true" alt="StackOverflow" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;What is &lt;a href="https://spacetimedb.com"&gt;SpacetimeDB&lt;/a&gt;?&lt;/h2&gt; 
&lt;p&gt;You can think of SpacetimeDB as both a database and server combined into one.&lt;/p&gt; 
&lt;p&gt;It is a relational database system that lets you upload your application logic directly into the database by way of fancy stored procedures called "modules."&lt;/p&gt; 
&lt;p&gt;Instead of deploying a web or game server that sits in between your clients and your database, your clients connect directly to the database and execute your application logic inside the database itself. You can write all of your permission and authorization logic right inside your module just as you would in a normal server.&lt;/p&gt; 
&lt;p&gt;This means that you can write your entire application in a single language, Rust, and deploy it as a single binary. No more microservices, no more containers, no more Kubernetes, no more Docker, no more VMs, no more DevOps, no more infrastructure, no more ops, no more servers.&lt;/p&gt; 
&lt;figure&gt; 
 &lt;img src="https://raw.githubusercontent.com/clockworklabs/SpacetimeDB/master/images/basic-architecture-diagram.png" alt="SpacetimeDB Architecture" style="width:100%" /&gt; 
 &lt;figcaption align="center"&gt; 
  &lt;p align="center"&gt;&lt;b&gt;SpacetimeDB application architecture&lt;/b&gt;&lt;br /&gt;&lt;sup&gt;&lt;sub&gt;(elements in white are provided by SpacetimeDB)&lt;/sub&gt;&lt;/sup&gt;&lt;/p&gt; 
 &lt;/figcaption&gt; 
&lt;/figure&gt; 
&lt;p&gt;It's actually similar to the idea of smart contracts, except that SpacetimeDB is a database, has nothing to do with blockchain, and is orders of magnitude faster than any smart contract system.&lt;/p&gt; 
&lt;p&gt;So fast, in fact, that the entire backend of our MMORPG &lt;a href="https://bitcraftonline.com"&gt;BitCraft Online&lt;/a&gt; is just a SpacetimeDB module. We don't have any other servers or services running, which means that everything in the game, all of the chat messages, items, resources, terrain, and even the locations of the players are stored and processed by the database before being synchronized out to all of the clients in real-time.&lt;/p&gt; 
&lt;p&gt;SpacetimeDB is optimized for maximum speed and minimum latency rather than batch processing or OLAP workloads. It is designed to be used for real-time applications like games, chat, and collaboration tools.&lt;/p&gt; 
&lt;p&gt;This speed and latency is achieved by holding all of application state in memory, while persisting the data in a write-ahead-log (WAL) which is used to recover application state.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;You can run SpacetimeDB as a standalone database server via the &lt;code&gt;spacetime&lt;/code&gt; CLI tool. Install instructions for supported platforms are outlined below. The same install instructions can be found on our website at &lt;a href="https://spacetimedb.com/install"&gt;https://spacetimedb.com/install&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Install on macOS&lt;/h4&gt; 
&lt;p&gt;Installing on macOS is as simple as running our install script. After that you can use the spacetime command to manage versions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSf https://install.spacetimedb.com | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Install on Linux&lt;/h4&gt; 
&lt;p&gt;Installing on Linux is as simple as running our install script. After that you can use the spacetime command to manage versions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSf https://install.spacetimedb.com | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Install on Windows&lt;/h4&gt; 
&lt;p&gt;Installing on Windows is as simple as pasting the above snippet into PowerShell. If you would like to use WSL instead, please follow the Linux install instructions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ps1"&gt;iwr https://windows.spacetimedb.com -useb | iex
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Installing from Source&lt;/h4&gt; 
&lt;p&gt;A quick note on installing from source: we recommend that you don't install from source unless there is a feature that is available in &lt;code&gt;master&lt;/code&gt; that hasn't been released yet, otherwise follow the official installation instructions.&lt;/p&gt; 
&lt;h5&gt;MacOS + Linux&lt;/h5&gt; 
&lt;p&gt;Installing on macOS + Linux is pretty straightforward. First we are going to build all of the binaries that we need:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install rustup, you can skip this step if you have cargo and the wasm32-unknown-unknown target already installed.
curl https://sh.rustup.rs -sSf | sh
# Clone SpacetimeDB
git clone https://github.com/clockworklabs/SpacetimeDB
# Build and install the CLI
cd SpacetimeDB
cargo build --locked --release -p spacetimedb-standalone -p spacetimedb-update -p spacetimedb-cli

# Create directories
mkdir -p ~/.local/bin
export STDB_VERSION="$(./target/release/spacetimedb-cli --version | sed -n 's/.*spacetimedb tool version \([0-9.]*\);.*/\1/p')"
mkdir -p ~/.local/share/spacetime/bin/$STDB_VERSION

# Install the update binary
cp target/release/spacetimedb-update ~/.local/bin/spacetime
cp target/release/spacetimedb-cli ~/.local/share/spacetime/bin/$STDB_VERSION
cp target/release/spacetimedb-standalone ~/.local/share/spacetime/bin/$STDB_VERSION
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At this stage you'll need to add ~/.local/bin to your path if you haven't already.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# Please add the following line to your shell configuration and open a new shell session:
export PATH="$HOME/.local/bin:$PATH"

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then finally set your SpacetimeDB version:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
# Then, in a new shell, set the current version:
spacetime version use $STDB_VERSION

# If STDB_VERSION is not set anymore then you can use the following command to list your versions:
spacetime version list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can verify that the correct version has been installed via &lt;code&gt;spacetime --version&lt;/code&gt;.&lt;/p&gt; 
&lt;h5&gt;Windows&lt;/h5&gt; 
&lt;p&gt;Building on windows is a bit more complicated. You'll need a slightly different version of perl compared to what comes pre-bundled in most Windows terminals. We recommend &lt;a href="https://strawberryperl.com/"&gt;Strawberry Perl&lt;/a&gt;. You may also need access to an &lt;code&gt;openssl&lt;/code&gt; binary which actually comes pre-installed with &lt;a href="https://git-scm.com/downloads/win"&gt;Git for Windows&lt;/a&gt;. Also, you'll need to install &lt;a href="https://rustup.rs/"&gt;rustup&lt;/a&gt; for Windows.&lt;/p&gt; 
&lt;p&gt;In a Git for Windows shell you should have something that looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ which perl
/c/Strawberry/perl/bin/perl
$ which openssl
/mingw64/bin/openssl
$ which cargo 
/c/Users/&amp;lt;user&amp;gt;/.cargo/bin/cargo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If that looks correct then you're ready to proceed!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;# Clone SpacetimeDB
git clone https://github.com/clockworklabs/SpacetimeDB

# Build and install the CLI
cd SpacetimeDB
cargo build --locked --release -p spacetimedb-standalone -p spacetimedb-update -p spacetimedb-cli

# Create directories
$stdbDir = "$HOME\AppData\Local\SpacetimeDB"
$stdbVersion = &amp;amp; ".\target\release\spacetimedb-cli" --version | Select-String -Pattern 'spacetimedb tool version ([0-9.]+);' | ForEach-Object { $_.Matches.Groups[1].Value }
New-Item -ItemType Directory -Path "$stdbDir\bin\$stdbVersion" -Force | Out-Null

# Install the update binary
Copy-Item "target\release\spacetimedb-update.exe" "$stdbDir\spacetime.exe"
Copy-Item "target\release\spacetimedb-cli.exe" "$stdbDir\bin\$stdbVersion\"
Copy-Item "target\release\spacetimedb-standalone.exe" "$stdbDir\bin\$stdbVersion\"

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now add the directory we just created to your path. We recommend adding it to the system path because then it will be available to all of your applications (including Unity3D). After you do this, restart your shell!&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;%USERPROFILE%\AppData\Local\SpacetimeDB
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then finally, open a new shell and use the installed SpacetimeDB version:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;spacetime version use $stdbVersion

# If stdbVersion is no longer set, list versions using the following command:
spacetime version list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can verify that the correct version has been installed via &lt;code&gt;spacetime --version&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you're using Git for Windows you can follow these instructions instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone SpacetimeDB
git clone https://github.com/clockworklabs/SpacetimeDB
# Build and install the CLI
cd SpacetimeDB
# Build the CLI binaries - this takes a while on windows so go grab a coffee :)
cargo build --locked --release -p spacetimedb-standalone -p spacetimedb-update -p spacetimedb-cli

# Create directories
export STDB_VERSION="$(./target/release/spacetimedb-cli --version | sed -n 's/.*spacetimedb tool version \([0-9.]*\);.*/\1/p')"
mkdir -p ~/AppData/Local/SpacetimeDB/bin/$STDB_VERSION

# Install the update binary
cp target/release/spacetimedb-update ~/AppData/Local/SpacetimeDB/spacetime
cp target/release/spacetimedb-cli ~/AppData/Local/SpacetimeDB/bin/$STDB_VERSION
cp target/release/spacetimedb-standalone ~/AppData/Local/SpacetimeDB/bin/$STDB_VERSION

# Now add the directory we just created to your path. We recommend adding it to the system path because then it will be available to all of your applications (including Unity3D). After you do this, restart your shell!
# %USERPROFILE%\AppData\Local\SpacetimeDB

# Set the current version
spacetime version use $STDB_VERSION
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can verify that the correct version has been installed via &lt;code&gt;spacetime --version&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Running with Docker&lt;/h4&gt; 
&lt;p&gt;If you prefer to run Spacetime in a container, you can use the following command to start a new instance.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm --pull always -p 3000:3000 clockworklabs/spacetime start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For more information about SpacetimeDB, getting started guides, game development guides, and reference material please see our &lt;a href="https://spacetimedb.com/docs"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;We've prepared several getting started guides in each of our supported languages to help you get up and running with SpacetimeDB as quickly as possible. You can find them on our &lt;a href="https://spacetimedb.com/docs"&gt;docs page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In summary there are only 4 steps to getting started with SpacetimeDB.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the &lt;code&gt;spacetime&lt;/code&gt; CLI tool.&lt;/li&gt; 
 &lt;li&gt;Start a SpacetimeDB standalone node with &lt;code&gt;spacetime start&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Write and upload a module in one of our supported module languages.&lt;/li&gt; 
 &lt;li&gt;Connect to the database with one of our client libraries.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You can see a summary of the supported languages below with a link to the getting started guide for each.&lt;/p&gt; 
&lt;h2&gt;Language Support&lt;/h2&gt; 
&lt;p&gt;You can write SpacetimeDB modules in several popular languages, with more to come in the future!&lt;/p&gt; 
&lt;h4&gt;Serverside Libraries&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://spacetimedb.com/docs/modules/rust/quickstart"&gt;Rust&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spacetimedb.com/docs/modules/c-sharp/quickstart"&gt;C#&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Client Libraries&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://spacetimedb.com/docs/sdks/rust/quickstart"&gt;Rust&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spacetimedb.com/docs/sdks/c-sharp/quickstart"&gt;C#&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spacetimedb.com/docs/sdks/typescript/quickstart"&gt;Typescript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;SpacetimeDB is licensed under the BSL 1.1 license. This is not an open source or free software license, however, it converts to the AGPL v3.0 license with a linking exception after a few years.&lt;/p&gt; 
&lt;p&gt;Note that the AGPL v3.0 does not typically include a linking exception. We have added a custom linking exception to the AGPL license for SpacetimeDB. Our motivation for choosing a free software license is to ensure that contributions made to SpacetimeDB are propagated back to the community. We are expressly not interested in forcing users of SpacetimeDB to open source their own code if they link with SpacetimeDB, so we needed to include a linking exception.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>leptos-rs/leptos</title>
      <link>https://github.com/leptos-rs/leptos</link>
      <description>&lt;p&gt;Build fast web applications with Rust.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source srcset="https://raw.githubusercontent.com/leptos-rs/leptos/main/docs/logos/Leptos_logo_pref_dark_RGB.svg" media="(prefers-color-scheme: dark)" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/leptos-rs/leptos/main/docs/logos/Leptos_logo_RGB.svg?sanitize=true" alt="Leptos Logo" /&gt; 
&lt;/picture&gt; 
&lt;p&gt;&lt;a href="https://crates.io/crates/leptos"&gt;&lt;img src="https://img.shields.io/crates/v/leptos.svg?sanitize=true" alt="crates.io" /&gt;&lt;/a&gt; &lt;a href="https://docs.rs/leptos"&gt;&lt;img src="https://docs.rs/leptos/badge.svg?sanitize=true" alt="docs.rs" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/crates/msrv/leptos" alt="Crates.io MSRV" /&gt; &lt;a href="https://discord.gg/YdRAhS7eQB"&gt;&lt;img src="https://img.shields.io/discord/1031524867910148188?color=%237289DA&amp;amp;label=discord" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://matrix.to/#/#leptos:matrix.org"&gt;&lt;img src="https://img.shields.io/badge/Matrix-leptos-grey?logo=matrix&amp;amp;labelColor=white&amp;amp;logoColor=black" alt="Matrix" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://leptos.dev"&gt;Website&lt;/a&gt; | &lt;a href="https://leptos-rs.github.io/leptos/"&gt;Book&lt;/a&gt; | &lt;a href="https://docs.rs/leptos/latest/leptos/"&gt;Docs.rs&lt;/a&gt; | &lt;a href="https://codesandbox.io/p/sandbox/leptos-rtfggt?file=%2Fsrc%2Fmain.rs%3A1%2C1"&gt;Playground&lt;/a&gt; | &lt;a href="https://discord.gg/YdRAhS7eQB"&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can find a list of useful libraries and example projects at &lt;a href="https://github.com/leptos-rs/awesome-leptos"&gt;&lt;code&gt;awesome-leptos&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Leptos&lt;/h1&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;use leptos::*;

#[component]
pub fn SimpleCounter(initial_value: i32) -&amp;gt; impl IntoView {
    // create a reactive signal with the initial value
    let (value, set_value) = signal(initial_value);

    // create event handlers for our buttons
    // note that `value` and `set_value` are `Copy`, so it's super easy to move them into closures
    let clear = move |_| set_value(0);
    let decrement = move |_| set_value.update(|value| *value -= 1);
    let increment = move |_| set_value.update(|value| *value += 1);

    // create user interfaces with the declarative `view!` macro
    view! {
        &amp;lt;div&amp;gt;
            &amp;lt;button on:click=clear&amp;gt;Clear&amp;lt;/button&amp;gt;
            &amp;lt;button on:click=decrement&amp;gt;-1&amp;lt;/button&amp;gt;
            // text nodes can be quoted or unquoted
            &amp;lt;span&amp;gt;"Value: " {value} "!"&amp;lt;/span&amp;gt;
            &amp;lt;button on:click=increment&amp;gt;+1&amp;lt;/button&amp;gt;
        &amp;lt;/div&amp;gt;
    }
}

// we also support a builder syntax rather than the JSX-like `view` macro
#[component]
pub fn SimpleCounterWithBuilder(initial_value: i32) -&amp;gt; impl IntoView {
    use leptos::html::*;

    let (value, set_value) = signal(initial_value);
    let clear = move |_| set_value(0);
    let decrement = move |_| set_value.update(|value| *value -= 1);
    let increment = move |_| set_value.update(|value| *value += 1);

    // the `view` macro above expands to this builder syntax
    div().child((
        button().on(ev::click, clear).child("Clear"),
        button().on(ev::click, decrement).child("-1"),
        span().child(("Value: ", value, "!")),
        button().on(ev::click, increment).child("+1")
    ))
}

// Easy to use with Trunk (trunkrs.dev) or with a simple wasm-bindgen setup
pub fn main() {
    mount_to_body(|| view! {
        &amp;lt;SimpleCounter initial_value=3 /&amp;gt;
    })
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;About the Framework&lt;/h2&gt; 
&lt;p&gt;Leptos is a full-stack, isomorphic Rust web framework leveraging fine-grained reactivity to build declarative user interfaces.&lt;/p&gt; 
&lt;h2&gt;What does that mean?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Full-stack&lt;/strong&gt;: Leptos can be used to build apps that run in the browser (client-side rendering), on the server (server-side rendering), or by rendering HTML on the server and then adding interactivity in the browser (server-side rendering with hydration). This includes support for HTTP streaming of both data (&lt;a href="https://docs.rs/leptos/latest/leptos/struct.Resource.html"&gt;&lt;code&gt;Resource&lt;/code&gt;s&lt;/a&gt;) and HTML (out-of-order or in-order streaming of &lt;a href="https://docs.rs/leptos/latest/leptos/fn.Suspense.html"&gt;&lt;code&gt;&amp;lt;Suspense/&amp;gt;&lt;/code&gt;&lt;/a&gt; components.)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Isomorphic&lt;/strong&gt;: Leptos provides primitives to write isomorphic &lt;a href="https://docs.rs/leptos_server/0.2.5/leptos_server/index.html"&gt;server functions&lt;/a&gt;, i.e., functions that can be called with the “same shape” on the client or server, but only run on the server. This means you can write your server-only logic (database requests, authentication etc.) alongside the client-side components that will consume it, and call server functions as if they were running in the browser, without needing to create and maintain a separate REST or other API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web&lt;/strong&gt;: Leptos is built on the Web platform and Web standards. The &lt;a href="https://docs.rs/leptos_router/latest/leptos_router/"&gt;router&lt;/a&gt; is designed to use Web fundamentals (like links and forms) and build on top of them rather than trying to replace them.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Framework&lt;/strong&gt;: Leptos provides most of what you need to build a modern web app: a reactive system, templating library, and a router that works on both the server and client side.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fine-grained reactivity&lt;/strong&gt;: The entire framework is built from reactive primitives. This allows for extremely performant code with minimal overhead: when a reactive signal’s value changes, it can update a single text node, toggle a single class, or remove an element from the DOM without any other code running. (So, no virtual DOM overhead!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative&lt;/strong&gt;: Tell Leptos how you want the page to look, and let the framework tell the browser how to do it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Learn more&lt;/h2&gt; 
&lt;p&gt;Here are some resources for learning more about Leptos:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://leptos-rs.github.io/leptos/"&gt;Book&lt;/a&gt; (work in progress)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leptos-rs/leptos/tree/main/examples"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.rs/leptos/latest/leptos/"&gt;API Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leptos-rs/leptos/tree/main/docs/COMMON_BUGS.md"&gt;Common Bugs&lt;/a&gt; (and how to fix them!)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;cargo-leptos&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/leptos-rs/cargo-leptos"&gt;&lt;code&gt;cargo-leptos&lt;/code&gt;&lt;/a&gt; is a build tool that's designed to make it easy to build apps that run on both the client and the server, with seamless integration. The best way to get started with a real Leptos project right now is to use &lt;code&gt;cargo-leptos&lt;/code&gt; and our starter templates for &lt;a href="https://github.com/leptos-rs/start"&gt;Actix&lt;/a&gt; or &lt;a href="https://github.com/leptos-rs/start-axum"&gt;Axum&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo install cargo-leptos --locked
cargo leptos new --git https://github.com/leptos-rs/start-axum
cd [your project name]
cargo leptos watch
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open browser to &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;FAQs&lt;/h2&gt; 
&lt;h3&gt;What’s up with the name?&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Leptos&lt;/em&gt; (λεπτός) is an ancient Greek word meaning “thin, light, refined, fine-grained.” To me, a classicist and not a dog owner, it evokes the lightweight reactive system that powers the framework. I've since learned the same word is at the root of the medical term “leptospirosis,” a blood infection that affects humans and animals... My bad. No dogs were harmed in the creation of this framework.&lt;/p&gt; 
&lt;h3&gt;Is it production ready?&lt;/h3&gt; 
&lt;p&gt;People usually mean one of three things by this question.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Are the APIs stable?&lt;/strong&gt; i.e., will I have to rewrite my whole app from Leptos 0.1 to 0.2 to 0.3 to 0.4, or can I write it now and benefit from new features and updates as new versions come?&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The APIs are basically settled. We’re adding new features, but we’re very happy with where the type system and patterns have landed. I would not expect major breaking changes to your code to adapt to future releases, in terms of architecture.&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Are there bugs?&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Yes, I’m sure there are. You can see from the state of our issue tracker over time that there aren’t that &lt;em&gt;many&lt;/em&gt; bugs and they’re usually resolved pretty quickly. But for sure, there may be moments where you encounter something that requires a fix at the framework level, which may not be immediately resolved.&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;strong&gt;Am I a consumer or a contributor?&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This may be the big one: “production ready” implies a certain orientation to a library: that you can basically use it, without any special knowledge of its internals or ability to contribute. Everyone has this at some level in their stack: for example I (@gbj) don’t have the capacity or knowledge to contribute to something like &lt;code&gt;wasm-bindgen&lt;/code&gt; at this point: I simply rely on it to work.&lt;/p&gt; 
&lt;p&gt;There are several people in the community using Leptos right now for many websites at work, who have also become significant contributors. There may be missing features that you need, and you may end up building them! But, if you're willing to contribute a few missing pieces along the way, the framework is most definitely usable for production applications, especially given the ecosystem of libraries that have sprung up around it.&lt;/p&gt; 
&lt;h3&gt;Can I use this for native GUI?&lt;/h3&gt; 
&lt;p&gt;Sure! Obviously the &lt;code&gt;view&lt;/code&gt; macro is for generating DOM nodes but you can use the reactive system to drive any native GUI toolkit that uses the same kind of object-oriented, event-callback-based framework as the DOM pretty easily. The principles are the same:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use signals, derived signals, and memos to create your reactive system&lt;/li&gt; 
 &lt;li&gt;Create GUI widgets&lt;/li&gt; 
 &lt;li&gt;Use event listeners to update signals&lt;/li&gt; 
 &lt;li&gt;Create effects to update the UI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The 0.7 update originally set out to create a "generic rendering" approach that would allow us to reuse most of the same view logic to do all of the above. Unfortunately, this has had to be shelved for now due to difficulties encountered by the Rust compiler when building larger-scale applications with the number of generics spread throughout the codebase that this required. It's an approach I'm looking forward to exploring again in the future; feel free to reach out if you're interested in this kind of work.&lt;/p&gt; 
&lt;h3&gt;How is this different from Yew?&lt;/h3&gt; 
&lt;p&gt;Yew is the most-used library for Rust web UI development, but there are several differences between Yew and Leptos, in philosophy, approach, and performance.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;VDOM vs. fine-grained:&lt;/strong&gt; Yew is built on the virtual DOM (VDOM) model: state changes cause components to re-render, generating a new virtual DOM tree. Yew diffs this against the previous VDOM, and applies those patches to the actual DOM. Component functions rerun whenever state changes. Leptos takes an entirely different approach. Components run once, creating (and returning) actual DOM nodes and setting up a reactive system to update those DOM nodes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance:&lt;/strong&gt; This has huge performance implications: Leptos is simply much faster at both creating and updating the UI than Yew is.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Server integration:&lt;/strong&gt; Yew was created in an era in which browser-rendered single-page apps (SPAs) were the dominant paradigm. While Leptos supports client-side rendering, it also focuses on integrating with the server side of your application via server functions and multiple modes of serving HTML, including out-of-order streaming.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;How is this different from Dioxus?&lt;/h3&gt; 
&lt;p&gt;Like Leptos, Dioxus is a framework for building UIs using web technologies. However, there are significant differences in approach and features.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;VDOM vs. fine-grained:&lt;/strong&gt; While Dioxus has a performant virtual DOM (VDOM), it still uses coarse-grained/component-scoped reactivity: changing a stateful value reruns the component function and diffs the old UI against the new one. Leptos components use a different mental model, creating (and returning) actual DOM nodes and setting up a reactive system to update those DOM nodes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web vs. desktop priorities:&lt;/strong&gt; Dioxus uses Leptos server functions in its fullstack mode, but does not have the same &lt;code&gt;&amp;lt;Suspense&amp;gt;&lt;/code&gt;-based support for things like streaming HTML rendering, or share the same focus on holistic web performance. Leptos tends to prioritize holistic web performance (streaming HTML rendering, smaller WASM binary sizes, etc.), whereas Dioxus has an unparalleled experience when building desktop apps, because your application logic runs as a native Rust binary.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;How is this different from Sycamore?&lt;/h3&gt; 
&lt;p&gt;Sycamore and Leptos are both heavily influenced by SolidJS. At this point, Leptos has a larger community and ecosystem and is more actively developed. Other differences:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Templating DSLs:&lt;/strong&gt; Sycamore uses a custom templating language for its views, while Leptos uses a JSX-like template format.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;'static&lt;/code&gt; signals:&lt;/strong&gt; One of Leptos’s main innovations was the creation of &lt;code&gt;Copy + 'static&lt;/code&gt; signals, which have excellent ergonomics. Sycamore is in the process of adopting the same pattern, but this is not yet released.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Perseus vs. server functions:&lt;/strong&gt; The Perseus metaframework provides an opinionated way to build Sycamore apps that include server functionality. Leptos instead provides primitives like server functions in the core of the framework.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>sharkdp/bat</title>
      <link>https://github.com/sharkdp/bat</link>
      <description>&lt;p&gt;A cat(1) clone with wings.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/sharkdp/bat/master/doc/logo-header.svg?sanitize=true" alt="bat - a cat clone with wings" /&gt;&lt;br /&gt; &lt;a href="https://github.com/sharkdp/bat/actions?query=workflow%3ACICD"&gt;&lt;img src="https://github.com/sharkdp/bat/workflows/CICD/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/crates/l/bat.svg?sanitize=true" alt="license" /&gt; &lt;a href="https://crates.io/crates/bat"&gt;&lt;img src="https://img.shields.io/crates/v/bat.svg?colorB=319e8c" alt="Version info" /&gt;&lt;/a&gt;&lt;br /&gt; A &lt;i&gt;cat(1)&lt;/i&gt; clone with syntax highlighting and Git integration. &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#syntax-highlighting"&gt;Key Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#how-to-use"&gt;How To Use&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#installation"&gt;Installation&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#customization"&gt;Customization&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#project-goals-and-alternatives"&gt;Project goals, alternatives&lt;/a&gt;&lt;br /&gt; [English] [&lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/doc/README-zh.md"&gt;中文&lt;/a&gt;] [&lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/doc/README-ja.md"&gt;日本語&lt;/a&gt;] [&lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/doc/README-ko.md"&gt;한국어&lt;/a&gt;] [&lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/doc/README-ru.md"&gt;Русский&lt;/a&gt;] &lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;A special &lt;em&gt;thank you&lt;/em&gt; goes to our biggest &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/doc/sponsors.md"&gt;sponsors&lt;/a&gt;:&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt; &lt;a href="https://www.warp.dev/bat"&gt; &lt;img src="https://raw.githubusercontent.com/sharkdp/bat/master/doc/sponsors/warp-logo.png" width="200" alt="Warp" /&gt; &lt;br /&gt; &lt;strong&gt;Warp, the intelligent terminal&lt;/strong&gt; &lt;br /&gt; &lt;sub&gt;Available on MacOS, Linux, Windows&lt;/sub&gt; &lt;/a&gt; &lt;/p&gt;
&lt;p&gt; &lt;a href="https://graphite.dev/?utm_source=github&amp;amp;utm_medium=repo&amp;amp;utm_campaign=bat"&gt; &lt;img src="https://raw.githubusercontent.com/sharkdp/bat/master/doc/sponsors/graphite-logo.jpeg" width="200" alt="Graphite" /&gt; &lt;br /&gt; &lt;strong&gt;Graphite is the AI developer productivity platform helping&lt;br /&gt;teams on GitHub ship higher quality software, faster&lt;/strong&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;Syntax highlighting&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; supports syntax highlighting for a large number of programming and markup languages:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://imgur.com/rGsdnDe.png" alt="Syntax highlighting example" /&gt;&lt;/p&gt; 
&lt;h3&gt;Git integration&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; communicates with &lt;code&gt;git&lt;/code&gt; to show modifications with respect to the index (see left side bar):&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/2lSW4RE.png" alt="Git integration example" /&gt;&lt;/p&gt; 
&lt;h3&gt;Show non-printable characters&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;-A&lt;/code&gt;/&lt;code&gt;--show-all&lt;/code&gt; option to show and highlight non-printable characters:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/WndGp9H.png" alt="Non-printable character example" /&gt;&lt;/p&gt; 
&lt;h3&gt;Automatic paging&lt;/h3&gt; 
&lt;p&gt;By default, &lt;code&gt;bat&lt;/code&gt; pipes its own output to a pager (e.g. &lt;code&gt;less&lt;/code&gt;) if the output is too large for one screen. If you would rather &lt;code&gt;bat&lt;/code&gt; work like &lt;code&gt;cat&lt;/code&gt; all the time (never page output), you can set &lt;code&gt;--paging=never&lt;/code&gt; as an option, either on the command line or in your configuration file. If you intend to alias &lt;code&gt;cat&lt;/code&gt; to &lt;code&gt;bat&lt;/code&gt; in your shell configuration, you can use &lt;code&gt;alias cat='bat --paging=never'&lt;/code&gt; to preserve the default behavior.&lt;/p&gt; 
&lt;h4&gt;File concatenation&lt;/h4&gt; 
&lt;p&gt;Even with a pager set, you can still use &lt;code&gt;bat&lt;/code&gt; to concatenate files &lt;span&gt;😉&lt;/span&gt;. Whenever &lt;code&gt;bat&lt;/code&gt; detects a non-interactive terminal (i.e. when you pipe into another process or into a file), &lt;code&gt;bat&lt;/code&gt; will act as a drop-in replacement for &lt;code&gt;cat&lt;/code&gt; and fall back to printing the plain file contents, regardless of the &lt;code&gt;--pager&lt;/code&gt; option's value.&lt;/p&gt; 
&lt;h2&gt;How to use&lt;/h2&gt; 
&lt;p&gt;Display a single file on the terminal&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat README.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Display multiple files at once&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat src/*.rs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read from stdin, determine the syntax automatically (note, highlighting will only work if the syntax can be determined from the first line of the file, usually through a shebang such as &lt;code&gt;#!/bin/sh&lt;/code&gt;)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -s https://sh.rustup.rs | bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read from stdin, specify the language explicitly&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yaml2json .travis.yml | json_pp | bat -l json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Show and highlight non-printable characters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat -A /etc/hosts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use it as a &lt;code&gt;cat&lt;/code&gt; replacement:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat &amp;gt; note.md  # quickly create a new file

bat header.md content.md footer.md &amp;gt; document.md

bat -n main.rs  # show line numbers (only)

bat f - g  # output 'f', then stdin, then 'g'.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Integration with other tools&lt;/h3&gt; 
&lt;h4&gt;&lt;code&gt;fzf&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;You can use &lt;code&gt;bat&lt;/code&gt; as a previewer for &lt;a href="https://github.com/junegunn/fzf"&gt;&lt;code&gt;fzf&lt;/code&gt;&lt;/a&gt;. To do this, use &lt;code&gt;bat&lt;/code&gt;'s &lt;code&gt;--color=always&lt;/code&gt; option to force colorized output. You can also use &lt;code&gt;--line-range&lt;/code&gt; option to restrict the load times for long files:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fzf --preview "bat --color=always --style=numbers --line-range=:500 {}"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information, see &lt;a href="https://github.com/junegunn/fzf#preview-window"&gt;&lt;code&gt;fzf&lt;/code&gt;'s &lt;code&gt;README&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;find&lt;/code&gt; or &lt;code&gt;fd&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;You can use the &lt;code&gt;-exec&lt;/code&gt; option of &lt;code&gt;find&lt;/code&gt; to preview all search results with &lt;code&gt;bat&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;find … -exec bat {} +
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you happen to use &lt;a href="https://github.com/sharkdp/fd"&gt;&lt;code&gt;fd&lt;/code&gt;&lt;/a&gt;, you can use the &lt;code&gt;-X&lt;/code&gt;/&lt;code&gt;--exec-batch&lt;/code&gt; option to do the same:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fd … -X bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;ripgrep&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;With &lt;a href="https://github.com/eth-p/bat-extras/raw/master/doc/batgrep.md"&gt;&lt;code&gt;batgrep&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;bat&lt;/code&gt; can be used as the printer for &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;&lt;code&gt;ripgrep&lt;/code&gt;&lt;/a&gt; search results.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;batgrep needle src/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;tail -f&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; can be combined with &lt;code&gt;tail -f&lt;/code&gt; to continuously monitor a given file with syntax highlighting.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;tail -f /var/log/pacman.log | bat --paging=never -l log
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that we have to switch off paging in order for this to work. We have also specified the syntax explicitly (&lt;code&gt;-l log&lt;/code&gt;), as it can not be auto-detected in this case.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;git&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;You can combine &lt;code&gt;bat&lt;/code&gt; with &lt;code&gt;git show&lt;/code&gt; to view an older version of a given file with proper syntax highlighting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git show v0.6.0:src/main.rs | bat -l rs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;git diff&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;You can combine &lt;code&gt;bat&lt;/code&gt; with &lt;code&gt;git diff&lt;/code&gt; to view lines around code changes with proper syntax highlighting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;batdiff() {
    git diff --name-only --relative --diff-filter=d -z | xargs -0 bat --diff
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you prefer to use this as a separate tool, check out &lt;code&gt;batdiff&lt;/code&gt; in &lt;a href="https://github.com/eth-p/bat-extras"&gt;&lt;code&gt;bat-extras&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are looking for more support for git and diff operations, check out &lt;a href="https://github.com/dandavison/delta"&gt;&lt;code&gt;delta&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;xclip&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;The line numbers and Git modification markers in the output of &lt;code&gt;bat&lt;/code&gt; can make it hard to copy the contents of a file. To prevent this, you can call &lt;code&gt;bat&lt;/code&gt; with the &lt;code&gt;-p&lt;/code&gt;/&lt;code&gt;--plain&lt;/code&gt; option or simply pipe the output into &lt;code&gt;xclip&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat main.cpp | xclip
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; will detect that the output is being redirected and print the plain file contents.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;man&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; can be used as a colorizing pager for &lt;code&gt;man&lt;/code&gt;, by setting the &lt;code&gt;MANPAGER&lt;/code&gt; environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export MANPAGER="sh -c 'awk '\''{ gsub(/\x1B\[[0-9;]*m/, \"\", \$0); gsub(/.\x08/, \"\", \$0); print }'\'' | bat -p -lman'"
man 2 select
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(replace &lt;code&gt;bat&lt;/code&gt; with &lt;code&gt;batcat&lt;/code&gt; if you are on Debian or Ubuntu)&lt;/p&gt; 
&lt;p&gt;If you prefer to have this bundled in a new command, you can also use &lt;a href="https://github.com/eth-p/bat-extras/raw/master/doc/batman.md"&gt;&lt;code&gt;batman&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; This will &lt;a href="https://github.com/sharkdp/bat/issues/1145"&gt;not work&lt;/a&gt; out of the box with Mandoc's &lt;code&gt;man&lt;/code&gt; implementation.&lt;/p&gt; 
 &lt;p&gt;Please either use &lt;code&gt;batman&lt;/code&gt;, or convert the shell script to a &lt;a href="https://en.wikipedia.org/wiki/Shebang_(Unix)"&gt;shebang executable&lt;/a&gt; and point &lt;code&gt;MANPAGER&lt;/code&gt; to that.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Note that the &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/assets/syntaxes/02_Extra/Manpage.sublime-syntax"&gt;Manpage syntax&lt;/a&gt; is developed in this repository and still needs some work.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;prettier&lt;/code&gt; / &lt;code&gt;shfmt&lt;/code&gt; / &lt;code&gt;rustfmt&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;The &lt;a href="https://github.com/eth-p/bat-extras/raw/master/doc/prettybat.md"&gt;&lt;code&gt;prettybat&lt;/code&gt;&lt;/a&gt; script is a wrapper that will format code and print it with &lt;code&gt;bat&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;Warp&lt;/code&gt;&lt;/h4&gt; 
&lt;a href="https://app.warp.dev/drive/folder/-Bat-Warp-Pack-lxhe7HrEwgwpG17mvrFSz1"&gt; &lt;img src="https://raw.githubusercontent.com/sharkdp/bat/master/doc/sponsors/warp-pack-header.png" alt="Warp" /&gt; &lt;/a&gt; 
&lt;h4&gt;Highlighting &lt;code&gt;--help&lt;/code&gt; messages&lt;/h4&gt; 
&lt;p&gt;You can use &lt;code&gt;bat&lt;/code&gt; to colorize help text: &lt;code&gt;$ cp --help | bat -plhelp&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You can also use a wrapper around this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# in your .bashrc/.zshrc/*rc
alias bathelp='bat --plain --language=help'
help() {
    "$@" --help 2&amp;gt;&amp;amp;1 | bathelp
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can do &lt;code&gt;$ help cp&lt;/code&gt; or &lt;code&gt;$ help git commit&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;When you are using &lt;code&gt;zsh&lt;/code&gt;, you can also use global aliases to override &lt;code&gt;-h&lt;/code&gt; and &lt;code&gt;--help&lt;/code&gt; entirely:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;alias -g -- -h='-h 2&amp;gt;&amp;amp;1 | bat --language=help --style=plain'
alias -g -- --help='--help 2&amp;gt;&amp;amp;1 | bat --language=help --style=plain'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For &lt;code&gt;fish&lt;/code&gt;, you can use abbreviations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-fish"&gt;abbr -a --position anywhere -- --help '--help | bat -plhelp'
abbr -a --position anywhere -- -h '-h | bat -plhelp'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This way, you can keep on using &lt;code&gt;cp --help&lt;/code&gt;, but get colorized help pages.&lt;/p&gt; 
&lt;p&gt;Be aware that in some cases, &lt;code&gt;-h&lt;/code&gt; may not be a shorthand of &lt;code&gt;--help&lt;/code&gt; (for example with &lt;code&gt;ls&lt;/code&gt;). In cases where you need to use &lt;code&gt;-h&lt;/code&gt; as a command argument you can prepend &lt;code&gt;\&lt;/code&gt; to the argument (eg. &lt;code&gt;ls \-h&lt;/code&gt;) to escape the aliasing defined above.&lt;/p&gt; 
&lt;p&gt;Please report any issues with the help syntax in &lt;a href="https://github.com/victor-gp/cmd-help-sublime-syntax"&gt;this repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;!--

Installation instructions need to:
* be for widely used systems
* be non-obvious
* be from somewhat official sources

--&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/bat-cat/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/bat-cat.svg?columns=3&amp;amp;exclude_unsupported=1" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;On Ubuntu (using &lt;code&gt;apt&lt;/code&gt;)&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;... and other Debian-based Linux distributions.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; is available on &lt;a href="https://packages.ubuntu.com/search?keywords=bat&amp;amp;exact=1"&gt;Ubuntu since 20.04 ("Focal")&lt;/a&gt; and &lt;a href="https://packages.debian.org/bullseye/bat"&gt;Debian since August 2021 (Debian 11 - "Bullseye")&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If your Ubuntu/Debian installation is new enough you can simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: If you install &lt;code&gt;bat&lt;/code&gt; this way, please note that the executable may be installed as &lt;code&gt;batcat&lt;/code&gt; instead of &lt;code&gt;bat&lt;/code&gt; (due to &lt;a href="https://github.com/sharkdp/bat/issues/982"&gt;a name clash with another package&lt;/a&gt;). You can set up a &lt;code&gt;bat -&amp;gt; batcat&lt;/code&gt; symlink or alias to prevent any issues that may come up because of this and to be consistent with other distributions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mkdir -p ~/.local/bin
ln -s /usr/bin/batcat ~/.local/bin/bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;an example alias for &lt;code&gt;batcat&lt;/code&gt; as &lt;code&gt;bat&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;alias bat="batcat"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Ubuntu (using most recent &lt;code&gt;.deb&lt;/code&gt; packages)&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;... and other Debian-based Linux distributions.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;If the package has not yet been promoted to your Ubuntu/Debian installation, or you want the most recent release of &lt;code&gt;bat&lt;/code&gt;, download the latest &lt;code&gt;.deb&lt;/code&gt; package from the &lt;a href="https://github.com/sharkdp/bat/releases"&gt;release page&lt;/a&gt; and install it via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo dpkg -i bat_0.18.3_amd64.deb  # adapt version number and architecture
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Alpine Linux&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://pkgs.alpinelinux.org/packages?name=bat"&gt;the &lt;code&gt;bat&lt;/code&gt; package&lt;/a&gt; from the official sources, provided you have the appropriate repository enabled:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;apk add bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Arch Linux&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://www.archlinux.org/packages/extra/x86_64/bat/"&gt;the &lt;code&gt;bat&lt;/code&gt; package&lt;/a&gt; from the official sources:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pacman -S bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Fedora&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://koji.fedoraproject.org/koji/packageinfo?packageID=27506"&gt;the &lt;code&gt;bat&lt;/code&gt; package&lt;/a&gt; from the official &lt;a href="https://docs.fedoraproject.org/en-US/modularity/using-modules/"&gt;Fedora Modular&lt;/a&gt; repository.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dnf install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Gentoo Linux&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://packages.gentoo.org/packages/sys-apps/bat"&gt;the &lt;code&gt;bat&lt;/code&gt; package&lt;/a&gt; from the official sources:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;emerge sys-apps/bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On FreeBSD&lt;/h3&gt; 
&lt;p&gt;You can install a precompiled &lt;a href="https://www.freshports.org/textproc/bat"&gt;&lt;code&gt;bat&lt;/code&gt; package&lt;/a&gt; with pkg:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pkg install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or build it on your own from the FreeBSD ports:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd /usr/ports/textproc/bat
make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On OpenBSD&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;bat&lt;/code&gt; package using &lt;a href="https://man.openbsd.org/pkg_add.1"&gt;&lt;code&gt;pkg_add(1)&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pkg_add bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Via nix&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;bat&lt;/code&gt; using the &lt;a href="https://nixos.org/nix"&gt;nix package manager&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nix-env -i bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On openSUSE&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;bat&lt;/code&gt; with zypper:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;zypper install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Via snap package&lt;/h3&gt; 
&lt;p&gt;There is currently no recommended snap package available. Existing packages may be available, but are not officially supported and may contain &lt;a href="https://github.com/sharkdp/bat/issues/1519"&gt;issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;On macOS (or Linux) via Homebrew&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;bat&lt;/code&gt; with &lt;a href="https://formulae.brew.sh/formula/bat"&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On macOS via MacPorts&lt;/h3&gt; 
&lt;p&gt;Or install &lt;code&gt;bat&lt;/code&gt; with &lt;a href="https://ports.macports.org/port/bat/summary"&gt;MacPorts&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;port install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On Windows&lt;/h3&gt; 
&lt;p&gt;There are a few options to install &lt;code&gt;bat&lt;/code&gt; on Windows. Once you have installed &lt;code&gt;bat&lt;/code&gt;, take a look at the &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#using-bat-on-windows"&gt;"Using &lt;code&gt;bat&lt;/code&gt; on Windows"&lt;/a&gt; section.&lt;/p&gt; 
&lt;h4&gt;Prerequisites&lt;/h4&gt; 
&lt;p&gt;You will need to install the &lt;a href="https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist#latest-microsoft-visual-c-redistributable-version"&gt;Visual C++ Redistributable&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;With WinGet&lt;/h4&gt; 
&lt;p&gt;You can install &lt;code&gt;bat&lt;/code&gt; via &lt;a href="https://learn.microsoft.com/en-us/windows/package-manager/winget"&gt;WinGet&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;winget install sharkdp.bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;With Chocolatey&lt;/h4&gt; 
&lt;p&gt;You can install &lt;code&gt;bat&lt;/code&gt; via &lt;a href="https://chocolatey.org/packages/Bat"&gt;Chocolatey&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;choco install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;With Scoop&lt;/h4&gt; 
&lt;p&gt;You can install &lt;code&gt;bat&lt;/code&gt; via &lt;a href="https://scoop.sh/"&gt;scoop&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;scoop install bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;From prebuilt binaries:&lt;/h4&gt; 
&lt;p&gt;You can download prebuilt binaries from the &lt;a href="https://github.com/sharkdp/bat/releases"&gt;Release page&lt;/a&gt;,&lt;/p&gt; 
&lt;p&gt;You will need to install the &lt;a href="https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads"&gt;Visual C++ Redistributable&lt;/a&gt; package.&lt;/p&gt; 
&lt;h3&gt;From binaries&lt;/h3&gt; 
&lt;p&gt;Check out the &lt;a href="https://github.com/sharkdp/bat/releases"&gt;Release page&lt;/a&gt; for prebuilt versions of &lt;code&gt;bat&lt;/code&gt; for many different architectures. Statically-linked binaries are also available: look for archives with &lt;code&gt;musl&lt;/code&gt; in the file name.&lt;/p&gt; 
&lt;h3&gt;From source&lt;/h3&gt; 
&lt;p&gt;If you want to build &lt;code&gt;bat&lt;/code&gt; from source, you need Rust 1.79.0 or higher. You can then use &lt;code&gt;cargo&lt;/code&gt; to build everything:&lt;/p&gt; 
&lt;h4&gt;From local source&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo install --path . --locked
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] The &lt;code&gt;--path .&lt;/code&gt; above specifies the directory of the source code and NOT where &lt;code&gt;bat&lt;/code&gt; will be installed. For more information see the docs for &lt;a href="https://doc.rust-lang.org/cargo/commands/cargo-install.html"&gt;&lt;code&gt;cargo install&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;From &lt;code&gt;crates.io&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cargo install --locked bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that additional files like the man page or shell completion files can not be installed automatically in both these ways. If installing from a local source, they will be generated by &lt;code&gt;cargo&lt;/code&gt; and should be available in the cargo target folder under &lt;code&gt;build&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Furthermore, shell completions are also available by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat --completion &amp;lt;shell&amp;gt;
# see --help for supported shells
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Customization&lt;/h2&gt; 
&lt;h3&gt;Highlighting theme&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;bat --list-themes&lt;/code&gt; to get a list of all available themes for syntax highlighting. By default, &lt;code&gt;bat&lt;/code&gt; uses &lt;code&gt;Monokai Extended&lt;/code&gt; or &lt;code&gt;Monokai Extended Light&lt;/code&gt; for dark and light themes respectively. To select the &lt;code&gt;TwoDark&lt;/code&gt; theme, call &lt;code&gt;bat&lt;/code&gt; with the &lt;code&gt;--theme=TwoDark&lt;/code&gt; option or set the &lt;code&gt;BAT_THEME&lt;/code&gt; environment variable to &lt;code&gt;TwoDark&lt;/code&gt;. Use &lt;code&gt;export BAT_THEME="TwoDark"&lt;/code&gt; in your shell's startup file to make the change permanent. Alternatively, use &lt;code&gt;bat&lt;/code&gt;'s &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#configuration-file"&gt;configuration file&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to preview the different themes on a custom file, you can use the following command (you need &lt;a href="https://github.com/junegunn/fzf"&gt;&lt;code&gt;fzf&lt;/code&gt;&lt;/a&gt; for this):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat --list-themes | fzf --preview="bat --theme={} --color=always /path/to/file"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; automatically picks a fitting theme depending on your terminal's background color. You can use the &lt;code&gt;--theme-dark&lt;/code&gt; / &lt;code&gt;--theme-light&lt;/code&gt; options or the &lt;code&gt;BAT_THEME_DARK&lt;/code&gt; / &lt;code&gt;BAT_THEME_LIGHT&lt;/code&gt; environment variables to customize the themes used. This is especially useful if you frequently switch between dark and light mode.&lt;/p&gt; 
&lt;p&gt;You can also use a custom theme by following the &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#adding-new-themes"&gt;'Adding new themes' section below&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;8-bit themes&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; has three themes that always use &lt;a href="https://en.wikipedia.org/wiki/ANSI_escape_code#Colors"&gt;8-bit colors&lt;/a&gt;, even when truecolor support is available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ansi&lt;/code&gt; looks decent on any terminal. It uses 3-bit colors: black, red, green, yellow, blue, magenta, cyan, and white.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;base16&lt;/code&gt; is designed for &lt;a href="https://github.com/tinted-theming/home"&gt;base16&lt;/a&gt; terminal themes. It uses 4-bit colors (3-bit colors plus bright variants) in accordance with the &lt;a href="https://github.com/tinted-theming/home/raw/main/styling.md"&gt;base16 styling guidelines&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;base16-256&lt;/code&gt; is designed for &lt;a href="https://github.com/tinted-theming/tinted-shell"&gt;tinted-shell&lt;/a&gt;. It replaces certain bright colors with 8-bit colors from 16 to 21. &lt;strong&gt;Do not&lt;/strong&gt; use this simply because you have a 256-color terminal but are not using tinted-shell.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Although these themes are more restricted, they have three advantages over truecolor themes. They:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enjoy maximum compatibility. Some terminal utilities do not support more than 3-bit colors.&lt;/li&gt; 
 &lt;li&gt;Adapt to terminal theme changes. Even for already printed output.&lt;/li&gt; 
 &lt;li&gt;Visually harmonize better with other terminal software.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Output style&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;--style&lt;/code&gt; option to control the appearance of &lt;code&gt;bat&lt;/code&gt;'s output. You can use &lt;code&gt;--style=numbers,changes&lt;/code&gt;, for example, to show only Git changes and line numbers but no grid and no file header. Set the &lt;code&gt;BAT_STYLE&lt;/code&gt; environment variable to make these changes permanent or use &lt;code&gt;bat&lt;/code&gt;'s &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#configuration-file"&gt;configuration file&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!tip] If you specify a default style in &lt;code&gt;bat&lt;/code&gt;'s config file, you can change which components are displayed during a single run of &lt;code&gt;bat&lt;/code&gt; using the &lt;code&gt;--style&lt;/code&gt; command-line argument. By prefixing a component with &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;, it can be added or removed from the current style.&lt;/p&gt; 
 &lt;p&gt;For example, if your config contains &lt;code&gt;--style=full,-snip&lt;/code&gt;, you can run bat with &lt;code&gt;--style=-grid,+snip&lt;/code&gt; to remove the grid and add back the &lt;code&gt;snip&lt;/code&gt; component. Or, if you want to override the styles completely, you use &lt;code&gt;--style=numbers&lt;/code&gt; to only show the line numbers.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Adding new syntaxes / language definitions&lt;/h3&gt; 
&lt;p&gt;Should you find that a particular syntax is not available within &lt;code&gt;bat&lt;/code&gt;, you can follow these instructions to easily add new syntaxes to your current &lt;code&gt;bat&lt;/code&gt; installation.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; uses the excellent &lt;a href="https://github.com/trishume/syntect/"&gt;&lt;code&gt;syntect&lt;/code&gt;&lt;/a&gt; library for syntax highlighting. &lt;code&gt;syntect&lt;/code&gt; can read any &lt;a href="https://www.sublimetext.com/docs/3/syntax.html"&gt;Sublime Text &lt;code&gt;.sublime-syntax&lt;/code&gt; file&lt;/a&gt; and theme.&lt;/p&gt; 
&lt;p&gt;A good resource for finding Sublime Syntax packages is &lt;a href="https://packagecontrol.io/"&gt;Package Control&lt;/a&gt;. Once you found a syntax:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create a folder with syntax definition files:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;mkdir -p "$(bat --config-dir)/syntaxes"
cd "$(bat --config-dir)/syntaxes"

# Put new '.sublime-syntax' language definition files
# in this folder (or its subdirectories), for example:
git clone https://github.com/tellnobody1/sublime-purescript-syntax
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Now use the following command to parse these files into a binary cache:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;bat cache --build
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Finally, use &lt;code&gt;bat --list-languages&lt;/code&gt; to check if the new languages are available.&lt;/p&gt; &lt;p&gt;If you ever want to go back to the default settings, call:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;bat cache --clear
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you think that a specific syntax should be included in &lt;code&gt;bat&lt;/code&gt; by default, please consider opening a "syntax request" ticket after reading the policies and instructions &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/doc/assets.md"&gt;here&lt;/a&gt;: &lt;a href="https://github.com/sharkdp/bat/issues/new?labels=syntax-request&amp;amp;template=syntax_request.md"&gt;Open Syntax Request&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Adding new themes&lt;/h3&gt; 
&lt;p&gt;This works very similar to how we add new syntax definitions.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Themes are stored in &lt;a href="https://www.sublimetext.com/docs/color_schemes_tmtheme.html"&gt;&lt;code&gt;.tmTheme&lt;/code&gt; files&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;First, create a folder with the new syntax highlighting themes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mkdir -p "$(bat --config-dir)/themes"
cd "$(bat --config-dir)/themes"

# Download a theme in '.tmTheme' format, for example:
git clone https://github.com/greggb/sublime-snazzy

# Update the binary cache
bat cache --build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, use &lt;code&gt;bat --list-themes&lt;/code&gt; to check if the new themes are available.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] &lt;code&gt;bat&lt;/code&gt; uses the name of the &lt;code&gt;.tmTheme&lt;/code&gt; file for the theme's name.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Adding or changing file type associations&lt;/h3&gt; 
&lt;p&gt;You can add new (or change existing) file name patterns using the &lt;code&gt;--map-syntax&lt;/code&gt; command line option. The option takes an argument of the form &lt;code&gt;pattern:syntax&lt;/code&gt; where &lt;code&gt;pattern&lt;/code&gt; is a glob pattern that is matched against the file name and the absolute file path. The &lt;code&gt;syntax&lt;/code&gt; part is the full name of a supported language (use &lt;code&gt;bat --list-languages&lt;/code&gt; for an overview).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You probably want to use this option as &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#configuration-file"&gt;an entry in &lt;code&gt;bat&lt;/code&gt;'s configuration file&lt;/a&gt; for persistence instead of passing it on the command line as a one-off. Generally you'd just use &lt;code&gt;-l&lt;/code&gt; if you want to manually specify a language for a file.&lt;/p&gt; 
&lt;p&gt;Example: To use "INI" syntax highlighting for all files with a &lt;code&gt;.conf&lt;/code&gt; file extension, use&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;--map-syntax='*.conf:INI'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: To open all files called &lt;code&gt;.ignore&lt;/code&gt; (exact match) with the "Git Ignore" syntax, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;--map-syntax='.ignore:Git Ignore'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: To open all &lt;code&gt;.conf&lt;/code&gt; files in subfolders of &lt;code&gt;/etc/apache2&lt;/code&gt; with the "Apache Conf" syntax, use (this mapping is already built in):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;--map-syntax='/etc/apache2/**/*.conf:Apache Conf'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using a different pager&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; uses the pager that is specified in the &lt;code&gt;PAGER&lt;/code&gt; environment variable. If this variable is not set, &lt;code&gt;less&lt;/code&gt; is used by default. You can also use bat's built-in pager with &lt;code&gt;--pager=builtin&lt;/code&gt; or by setting the &lt;code&gt;BAT_PAGER&lt;/code&gt; environment variable to "builtin".&lt;/p&gt; 
&lt;p&gt;If you want to use a different pager, you can either modify the &lt;code&gt;PAGER&lt;/code&gt; variable or set the &lt;code&gt;BAT_PAGER&lt;/code&gt; environment variable to override what is specified in &lt;code&gt;PAGER&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If &lt;code&gt;PAGER&lt;/code&gt; is &lt;code&gt;more&lt;/code&gt; or &lt;code&gt;most&lt;/code&gt;, &lt;code&gt;bat&lt;/code&gt; will silently use &lt;code&gt;less&lt;/code&gt; instead to ensure support for colors.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to pass command-line arguments to the pager, you can also set them via the &lt;code&gt;PAGER&lt;/code&gt;/&lt;code&gt;BAT_PAGER&lt;/code&gt; variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export BAT_PAGER="less -RFK"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Instead of using environment variables, you can also use &lt;code&gt;bat&lt;/code&gt;'s &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#configuration-file"&gt;configuration file&lt;/a&gt; to configure the pager (&lt;code&gt;--pager&lt;/code&gt; option).&lt;/p&gt; 
&lt;h3&gt;Using &lt;code&gt;less&lt;/code&gt; as a pager&lt;/h3&gt; 
&lt;p&gt;When using &lt;code&gt;less&lt;/code&gt; as a pager, &lt;code&gt;bat&lt;/code&gt; will automatically pass extra options along to &lt;code&gt;less&lt;/code&gt; to improve the experience. Specifically, &lt;code&gt;-R&lt;/code&gt;/&lt;code&gt;--RAW-CONTROL-CHARS&lt;/code&gt;, &lt;code&gt;-F&lt;/code&gt;/&lt;code&gt;--quit-if-one-screen&lt;/code&gt;, &lt;code&gt;-K&lt;/code&gt;/&lt;code&gt;--quit-on-intr&lt;/code&gt; and under certain conditions, &lt;code&gt;-X&lt;/code&gt;/&lt;code&gt;--no-init&lt;/code&gt; and/or &lt;code&gt;-S&lt;/code&gt;/&lt;code&gt;--chop-long-lines&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] These options will not be added if:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The pager is not named &lt;code&gt;less&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;The &lt;code&gt;--pager&lt;/code&gt; argument contains any command-line arguments (e.g. &lt;code&gt;--pager="less -R"&lt;/code&gt;).&lt;/li&gt; 
  &lt;li&gt;The &lt;code&gt;BAT_PAGER&lt;/code&gt; environment variable contains any command-line arguments (e.g. &lt;code&gt;export BAT_PAGER="less -R"&lt;/code&gt;)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;The &lt;code&gt;--quit-if-one-screen&lt;/code&gt; option will not be added when:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The &lt;code&gt;--paging=always&lt;/code&gt; argument is used.&lt;/li&gt; 
  &lt;li&gt;The &lt;code&gt;BAT_PAGING&lt;/code&gt; environment is set to &lt;code&gt;always&lt;/code&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The &lt;code&gt;-R&lt;/code&gt;/&lt;code&gt;--RAW-CONTROL-CHARS&lt;/code&gt; option is needed to interpret ANSI colors correctly.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;-F&lt;/code&gt;/&lt;code&gt;--quit-if-one-screen&lt;/code&gt; option instructs &lt;code&gt;less&lt;/code&gt; to exit immediately if the output size is smaller than the vertical size of the terminal. This is convenient for small files because you do not have to press &lt;code&gt;q&lt;/code&gt; to quit the pager.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;-K&lt;/code&gt;/&lt;code&gt;--quit-on-intr&lt;/code&gt; option instructs &lt;code&gt;less&lt;/code&gt; to exit immediately when an interrupt signal is received. This is useful to ensure that &lt;code&gt;less&lt;/code&gt; quits together with &lt;code&gt;bat&lt;/code&gt; on SIGINT.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;-X&lt;/code&gt;/&lt;code&gt;--no-init&lt;/code&gt; option is added to versions of &lt;code&gt;less&lt;/code&gt; older than version 530 (older than 558 on Windows) to fix a bug with the &lt;code&gt;-F&lt;/code&gt;/&lt;code&gt;--quit-if-one-screen&lt;/code&gt; feature. Unfortunately, it also breaks mouse-wheel support in &lt;code&gt;less&lt;/code&gt;. If you want to enable mouse-wheel scrolling on older versions of &lt;code&gt;less&lt;/code&gt; and do not mind losing the quit-if-one-screen feature, you can set the pager (via &lt;code&gt;--pager&lt;/code&gt; or &lt;code&gt;BAT_PAGER&lt;/code&gt;) to &lt;code&gt;less -R&lt;/code&gt;. For &lt;code&gt;less&lt;/code&gt; 530 or newer, it should work out of the box.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;-S&lt;/code&gt;/&lt;code&gt;--chop-long-lines&lt;/code&gt; option is added when &lt;code&gt;bat&lt;/code&gt;'s &lt;code&gt;-S&lt;/code&gt;/&lt;code&gt;--chop-long-lines&lt;/code&gt; option is used. This tells &lt;code&gt;less&lt;/code&gt; to truncate any lines larger than the terminal width.&lt;/p&gt; 
&lt;h3&gt;Indentation&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; expands tabs to 4 spaces by itself, not relying on the pager. To change this, simply add the &lt;code&gt;--tabs&lt;/code&gt; argument with the number of spaces you want to be displayed.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Defining tab stops for the pager (via the &lt;code&gt;--pager&lt;/code&gt; argument by &lt;code&gt;bat&lt;/code&gt;, or via the &lt;code&gt;LESS&lt;/code&gt; environment variable for &lt;code&gt;less&lt;/code&gt;) won't be taken into account because the pager will already get expanded spaces instead of tabs. This behaviour is added to avoid indentation issues caused by the sidebar. Calling &lt;code&gt;bat&lt;/code&gt; with &lt;code&gt;--tabs=0&lt;/code&gt; will override it and let tabs be consumed by the pager.&lt;/p&gt; 
&lt;h3&gt;Dark mode&lt;/h3&gt; 
&lt;p&gt;If you make use of the dark mode feature in &lt;strong&gt;macOS&lt;/strong&gt;, you might want to configure &lt;code&gt;bat&lt;/code&gt; to use a different theme based on the OS theme. The following snippet uses the &lt;code&gt;default&lt;/code&gt; theme when in the &lt;em&gt;dark mode&lt;/em&gt; and the &lt;code&gt;GitHub&lt;/code&gt; theme when in the &lt;em&gt;light mode&lt;/em&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;alias cat="bat --theme auto:system --theme-dark default --theme-light GitHub"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The same dark mode feature is now available in &lt;strong&gt;GNOME&lt;/strong&gt; and affects the &lt;code&gt;org.gnome.desktop.interface color-scheme&lt;/code&gt; setting. The following code converts the above to use said setting.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# .bashrc
sys_color_scheme_is_dark() {
    condition=$(gsettings get org.gnome.desktop.interface color-scheme)
    condition=$(echo "$condition" | tr -d "[:space:]'")
    if [ $condition == "prefer-dark" ]; then
        return 0
    else
        return 1
    fi
}

bat_alias_wrapper() {
    #get color scheme
    sys_color_scheme_is_dark
    if [[ $? -eq 0 ]]; then
        # bat command with dark color scheme
        bat --theme=default "$@"
    else
        # bat command with light color scheme
        bat --theme=GitHub "$@"
    fi
}
alias cat='bat_alias_wrapper'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuration file&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; can also be customized with a configuration file. The location of the file is dependent on your operating system. To get the default path for your system, call&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat --config-file
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can use &lt;code&gt;BAT_CONFIG_PATH&lt;/code&gt; or &lt;code&gt;BAT_CONFIG_DIR&lt;/code&gt; environment variables to point &lt;code&gt;bat&lt;/code&gt; to a non-default location of the configuration file or the configuration directory respectively:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export BAT_CONFIG_PATH="/path/to/bat/bat.conf"
export BAT_CONFIG_DIR="/path/to/bat"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A default configuration file can be created with the &lt;code&gt;--generate-config-file&lt;/code&gt; option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat --generate-config-file
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is also now a systemwide configuration file, which is located under &lt;code&gt;/etc/bat/config&lt;/code&gt; on Linux and Mac OS and &lt;code&gt;C:\ProgramData\bat\config&lt;/code&gt; on windows. If the system wide configuration file is present, the content of the user configuration will simply be appended to it.&lt;/p&gt; 
&lt;h3&gt;Format&lt;/h3&gt; 
&lt;p&gt;The configuration file is a simple list of command line arguments. Use &lt;code&gt;bat --help&lt;/code&gt; to see a full list of possible options and values. In addition, you can add comments by prepending a line with the &lt;code&gt;#&lt;/code&gt; character.&lt;/p&gt; 
&lt;p&gt;Example configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Set the theme to "TwoDark"
--theme="TwoDark"

# Show line numbers, Git modifications and file header (but no grid)
--style="numbers,changes,header"

# Use italic text on the terminal (not supported on all terminals)
--italic-text=always

# Use C++ syntax for Arduino .ino files
--map-syntax "*.ino:C++"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using &lt;code&gt;bat&lt;/code&gt; on Windows&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; mostly works out-of-the-box on Windows, but a few features may need extra configuration.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;You will need to install the &lt;a href="https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads"&gt;Visual C++ Redistributable&lt;/a&gt; package.&lt;/p&gt; 
&lt;h3&gt;Paging&lt;/h3&gt; 
&lt;p&gt;Windows only includes a very limited pager in the form of &lt;code&gt;more&lt;/code&gt;. You can download a Windows binary for &lt;code&gt;less&lt;/code&gt; &lt;a href="http://www.greenwoodsoftware.com/less/download.html"&gt;from its homepage&lt;/a&gt; or &lt;a href="https://chocolatey.org/packages/Less"&gt;through Chocolatey&lt;/a&gt;. To use it, place the binary in a directory in your &lt;code&gt;PATH&lt;/code&gt; or &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#using-a-different-pager"&gt;define an environment variable&lt;/a&gt;. The &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#on-windows"&gt;Chocolatey package&lt;/a&gt; installs &lt;code&gt;less&lt;/code&gt; automatically.&lt;/p&gt; 
&lt;h3&gt;Colors&lt;/h3&gt; 
&lt;p&gt;Windows 10 natively supports colors in both &lt;code&gt;conhost.exe&lt;/code&gt; (Command Prompt) and PowerShell since &lt;a href="https://en.wikipedia.org/wiki/Windows_10_version_history#Version_1511_(November_Update)"&gt;v1511&lt;/a&gt;, as well as in newer versions of bash. On earlier versions of Windows, you can use &lt;a href="http://cmder.app/"&gt;Cmder&lt;/a&gt;, which includes &lt;a href="https://conemu.github.io/"&gt;ConEmu&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Old versions of &lt;code&gt;less&lt;/code&gt; do not correctly interpret colors on Windows. To fix this, you can add the optional Unix tools to your PATH when installing Git. If you don’t have any other pagers installed, you can disable paging entirely by passing &lt;code&gt;--paging=never&lt;/code&gt; or by setting &lt;code&gt;BAT_PAGER&lt;/code&gt; to an empty string.&lt;/p&gt; 
&lt;h3&gt;Cygwin&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; on Windows does not natively support Cygwin's unix-style paths (&lt;code&gt;/cygdrive/*&lt;/code&gt;). When passed an absolute cygwin path as an argument, &lt;code&gt;bat&lt;/code&gt; will encounter the following error: &lt;code&gt;The system cannot find the path specified. (os error 3)&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This can be solved by creating a wrapper or adding the following function to your &lt;code&gt;.bash_profile&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bat() {
    local index
    local args=("$@")
    for index in $(seq 0 ${#args[@]}) ; do
        case "${args[index]}" in
        -*) continue;;
        *)  [ -e "${args[index]}" ] &amp;amp;&amp;amp; args[index]="$(cygpath --windows "${args[index]}")";;
        esac
    done
    command bat "${args[@]}"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;h3&gt;Garbled output&lt;/h3&gt; 
&lt;p&gt;If an input file contains color codes or other ANSI escape sequences or control characters, &lt;code&gt;bat&lt;/code&gt; will have problems performing syntax highlighting and text wrapping, and thus the output can become garbled.&lt;/p&gt; 
&lt;p&gt;If your version of &lt;code&gt;bat&lt;/code&gt; supports the &lt;code&gt;--strip-ansi=auto&lt;/code&gt; option, it can be used to remove such sequences before syntax highlighting. Alternatively, you may disable both syntax highlighting and wrapping by passing the &lt;code&gt;--color=never --wrap=never&lt;/code&gt; options to &lt;code&gt;bat&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] The &lt;code&gt;auto&lt;/code&gt; option of &lt;code&gt;--strip-ansi&lt;/code&gt; avoids removing escape sequences when the syntax is plain text.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Terminals &amp;amp; colors&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; handles terminals &lt;em&gt;with&lt;/em&gt; and &lt;em&gt;without&lt;/em&gt; truecolor support. However, the colors in most syntax highlighting themes are not optimized for 8-bit colors. It is therefore strongly recommended that you use a terminal with 24-bit truecolor support (&lt;code&gt;terminator&lt;/code&gt;, &lt;code&gt;konsole&lt;/code&gt;, &lt;code&gt;iTerm2&lt;/code&gt;, ...), or use one of the basic &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/#8-bit-themes"&gt;8-bit themes&lt;/a&gt; designed for a restricted set of colors. See &lt;a href="https://gist.github.com/XVilka/8346728"&gt;this article&lt;/a&gt; for more details and a full list of terminals with truecolor support.&lt;/p&gt; 
&lt;p&gt;Make sure that your truecolor terminal sets the &lt;code&gt;COLORTERM&lt;/code&gt; variable to either &lt;code&gt;truecolor&lt;/code&gt; or &lt;code&gt;24bit&lt;/code&gt;. Otherwise, &lt;code&gt;bat&lt;/code&gt; will not be able to determine whether or not 24-bit escape sequences are supported (and fall back to 8-bit colors).&lt;/p&gt; 
&lt;h3&gt;Line numbers and grid are hardly visible&lt;/h3&gt; 
&lt;p&gt;Please try a different theme (see &lt;code&gt;bat --list-themes&lt;/code&gt; for a list). The &lt;code&gt;OneHalfDark&lt;/code&gt; and &lt;code&gt;OneHalfLight&lt;/code&gt; themes provide grid and line colors that are brighter.&lt;/p&gt; 
&lt;h3&gt;File encodings&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; natively supports UTF-8 as well as UTF-16. For every other file encoding, you may need to convert to UTF-8 first because the encodings can typically not be auto-detected. You can &lt;code&gt;iconv&lt;/code&gt; to do so. Example: if you have a PHP file in Latin-1 (ISO-8859-1) encoding, you can call:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;iconv -f ISO-8859-1 -t UTF-8 my-file.php | bat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: you might have to use the &lt;code&gt;-l&lt;/code&gt;/&lt;code&gt;--language&lt;/code&gt; option if the syntax can not be auto-detected by &lt;code&gt;bat&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Recursive clone to retrieve all submodules
git clone --recursive https://github.com/sharkdp/bat

# Build (debug version)
cd bat
cargo build --bins

# Run unit tests and integration tests
cargo test

# Install (release version)
cargo install --path . --locked

# Build a bat binary with modified syntaxes and themes
bash assets/create.sh
cargo install --path . --locked --force
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to build an application that uses &lt;code&gt;bat&lt;/code&gt;'s pretty-printing features as a library, check out the &lt;a href="https://docs.rs/bat/"&gt;the API documentation&lt;/a&gt;. Note that you have to use either &lt;code&gt;regex-onig&lt;/code&gt; or &lt;code&gt;regex-fancy&lt;/code&gt; as a feature when you depend on &lt;code&gt;bat&lt;/code&gt; as a library.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Take a look at the &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; guide.&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sharkdp"&gt;sharkdp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eth-p"&gt;eth-p&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/keith-hall"&gt;keith-hall&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Enselic"&gt;Enselic&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security vulnerabilities&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/SECURITY.md"&gt;&lt;code&gt;SECURITY.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Project goals and alternatives&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; tries to achieve the following goals:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Provide beautiful, advanced syntax highlighting&lt;/li&gt; 
 &lt;li&gt;Integrate with Git to show file modifications&lt;/li&gt; 
 &lt;li&gt;Be a drop-in replacement for (POSIX) &lt;code&gt;cat&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Offer a user-friendly command-line interface&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are a lot of alternatives, if you are looking for similar programs. See &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/doc/alternatives.md"&gt;this document&lt;/a&gt; for a comparison.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) 2018-2025 &lt;a href="https://github.com/sharkdp/bat"&gt;bat-developers&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; is made available under the terms of either the MIT License or the Apache License 2.0, at your option.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/sharkdp/bat/master/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; files for license details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>abenz1267/walker</title>
      <link>https://github.com/abenz1267/walker</link>
      <description>&lt;p&gt;Multi-Purpose Launcher with a lot of features. Highly Customizable and fast.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Walker - A Modern Application Launcher&lt;/h1&gt; 
&lt;p&gt;A fast, customizable application launcher built with GTK4 and Rust, designed for Linux desktop environments. Walker provides a clean, modern interface for launching applications, running commands, performing calculations, and more.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://benz.gitbook.io/walker/"&gt;GitBook Documentation/Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/mGQWBQHASt"&gt;&lt;img src="https://img.shields.io/discord/1402235361463242964?logo=discord" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://www.gnu.org/licenses/gpl-3.0"&gt;&lt;img src="https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true" alt="License: GPL v3" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/abenz1267/walker/refs/heads/master/resources/screenshot.png" alt="screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;The following Elephant providers are implemented by default:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Desktop Applications&lt;/strong&gt;: Launch installed GUI applications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Calculator&lt;/strong&gt;: Perform mathematical calculations with &lt;code&gt;=&lt;/code&gt; prefix&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File Browser&lt;/strong&gt;: Navigate and open files with &lt;code&gt;/&lt;/code&gt; prefix&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Command Runner&lt;/strong&gt;: Execute shell commands&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Websearch&lt;/strong&gt;: Search the web with custom-defined engines&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Clipboard History&lt;/strong&gt;: Access clipboard history with &lt;code&gt;:&lt;/code&gt; prefix&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Symbol Picker&lt;/strong&gt;: Insert special symbols with &lt;code&gt;.&lt;/code&gt; prefix&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Provider List&lt;/strong&gt;: Switch between providers with &lt;code&gt;;&lt;/code&gt; prefix&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Menu Integration&lt;/strong&gt;: Create custom menus with elephant and let walker display them&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dmenu&lt;/strong&gt;: Your good old dmenu ... with seamless menus!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Arch Linux Packages&lt;/strong&gt;: Search through available packages (official and aur), install or delete a target! List all exlusively installed packages.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Todo List&lt;/strong&gt;: create simple todo items with basic time tracking, scheduling and notifications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bluetooth&lt;/strong&gt;: basic bluetooth management&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Build from Source&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone the repository
git clone https://github.com/abenz1267/walker.git
cd walker

# Build with Cargo
cargo build --release

# Run Walker
./target/release/walker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Dependencies&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;GTK4 (version 4.6+)&lt;/li&gt; 
 &lt;li&gt;gtk4-layer-shell&lt;/li&gt; 
 &lt;li&gt;Protocol Buffers compiler&lt;/li&gt; 
 &lt;li&gt;cairo&lt;/li&gt; 
 &lt;li&gt;poppler-glib&lt;/li&gt; 
 &lt;li&gt;make sure &lt;a href="https://github.com/abenz1267/elephant"&gt;elephant&lt;/a&gt; is running before starting Walker&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;h3&gt; Install using Nix &lt;/h3&gt; &lt;/summary&gt; 
 &lt;h4&gt;1. Add flake inputs&lt;/h4&gt; 
 &lt;p&gt;Add walker and elephant to the inputs of your configs &lt;code&gt;flake.nix&lt;/code&gt; and set walker to follow elephant&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-nix"&gt;elephant.url = "github:abenz1267/elephant";

walker = {
  url = "github:abenz1267/walker";
  inputs.elephant.follows = "elephant";
};
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;2. Install walker&lt;/h4&gt; 
 &lt;p&gt;You have 3 options for installing walker.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Option A&lt;/strong&gt; (Home Manager Module): Import the home-manager module to your home-manager config and enable walker.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-nix"&gt;imports = [inputs.walker.homeManagerModules.default];

programs.walker.enable = true;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Option B&lt;/strong&gt; (NixOS Module): Import the nixos module in your NixOS config and enable walker&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-nix"&gt;imports = [inputs.walker.nixosModules.default];

programs.walker.enable = true;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Note: this option doesn't support the &lt;code&gt;runAsService&lt;/code&gt; option; It is recommended that you launch the elephant and walker services using your desktop instead.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Option C&lt;/strong&gt; (Package): Add &lt;code&gt;inputs.walker.packages.&amp;lt;system&amp;gt;.default&lt;/code&gt; to your system packages or home-manager packages. replace &lt;code&gt;&amp;lt;system&amp;gt;&lt;/code&gt; with your system architecture. Note: This option doesn't support configuration using nix.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-nix"&gt;home.packages = [inputs.walker.packages.&amp;lt;system&amp;gt;.default];
&lt;/code&gt;&lt;/pre&gt; 
 &lt;pre&gt;&lt;code class="language-nix"&gt;environment.systemPackages = [inputs.walker.packages.&amp;lt;system&amp;gt;.default];
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;3. Configure walker&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-nix"&gt;programs.walker = {
  enable = true;
  runAsService = true; # Note: this option isn't supported in the NixOS module only in the home-manager module

  # All options from the config.toml can be used here https://github.com/abenz1267/walker/blob/master/resources/config.toml
  config = {
    theme = "your theme name";
    placeholders."default" = { input = "Search"; list = "Example"; };
    providers.prefixes = [
      {provider = "websearch"; prefix = "+";}
      {provider = "providerlist"; prefix = "_";}
    ];
    keybinds.quick_activate = ["F1" "F2" "F3"];
  };
  
  # Set `programs.walker.config.theme="your theme name"` to choose the default theme
  themes = {
    "your theme name" = {
      # Check out the default css theme as an example https://github.com/abenz1267/walker/blob/master/resources/themes/default/style.css
      style = " /* css */ ";

      # Check out the default layouts for examples https://github.com/abenz1267/walker/tree/master/resources/themes/default
      layouts = {
        "layout" = " &amp;lt;!-- xml --&amp;gt; ";
        "item_calc" = " &amp;lt;!-- xml --&amp;gt; ";
        # other provider layouts
      };
    };
    "other theme name" = {
        # ...
    };
    # more themes
  };
};
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Optionally, there is 2 binary caches which can be used by adding the following to you config:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-nix"&gt;nix.settings = {
  extra-substituters = ["https://walker.cachix.org" "https://walker-git.cachix.org"];
  extra-trusted-public-keys = ["walker.cachix.org-1:fG8q+uAaMqhsMxWjwvk0IMb4mFPFLqHjuvfwQxE4oJM=" "walker-git.cachix.org-1:vmC0ocfPWh0S/vRAQGtChuiZBTAe4wiKDeyyXM0/7pM="];
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Basic Usage&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Make sure &lt;code&gt;elephant&lt;/code&gt; is running and you have providers installed. &lt;code&gt;elephant-providerlist&lt;/code&gt; and f.e. &lt;code&gt;elephant-desktopapplications&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Launch Walker with &lt;code&gt;walker&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In order to improve startup performance, run a Walker service with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;walker --gapplication-service
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the service is running, you can either open Walker with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;walker
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or for an even faster launch make a socket call, f.e. with &lt;code&gt;openbsd-netcat&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nc -U /run/user/1000/walker/walker.sock
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The downside of the socket call is that it does not handle any commandline options, so it's just a faster alternative to a simple &lt;code&gt;walker&lt;/code&gt; call.&lt;/p&gt; 
&lt;h2&gt;Keybinds&lt;/h2&gt; 
&lt;p&gt;The following modifier keys are valid: &lt;code&gt;ctrl&lt;/code&gt;, &lt;code&gt;alt&lt;/code&gt;, &lt;code&gt;shift&lt;/code&gt;, &lt;code&gt;super&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To get a full list of possible key values, look here: &lt;a href="https://github.com/gtk-rs/gtk4-rs/raw/0.9/gdk4/sys/src/lib.rs#L302"&gt;GDK key-values&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;F.e. &lt;code&gt;pub const GDK_KEY_semicolon: c_int = 59;&lt;/code&gt; means that &lt;code&gt;ctrl semicolon&lt;/code&gt; would be a valid keybind.&lt;/p&gt; 
&lt;h2&gt;Config&lt;/h2&gt; 
&lt;p&gt;Configuration should be done in &lt;code&gt;~/.config/walker&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href="https://raw.githubusercontent.com/abenz1267/walker/refs/heads/master/resources/config.toml"&gt;default config&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Theming&lt;/h2&gt; 
&lt;p&gt;You can customize Walker's appearance by creating a custom theme. Checkout &lt;code&gt;resources/themes/default&lt;/code&gt; for the default theme. Themes inherit the default theme by default, so if you just want to change the CSS, you can just create &lt;code&gt;themes/yours/style.css&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can customize rendering of list items for each provider individually, f.e. "item_files.xml" will define the layout for items sourced from the &lt;code&gt;files&lt;/code&gt; provider.&lt;/p&gt; 
&lt;p&gt;Please refer to &lt;a href="https://docs.gtk.org/gtk4/"&gt;the GTK4 docs&lt;/a&gt; to checkout how to write &lt;code&gt;*.xml&lt;/code&gt; files for GTK4.&lt;/p&gt; 
&lt;p&gt;You can set the default theme in your &lt;code&gt;config.toml&lt;/code&gt; f.e. &lt;code&gt;theme = "yours"&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please do not make PRs to fix single typos. Fix all or nothing.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the GNU General Public License v3.0 - see the &lt;a href="https://raw.githubusercontent.com/abenz1267/walker/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linera-io/linera-protocol</title>
      <link>https://github.com/linera-io/linera-protocol</link>
      <description>&lt;p&gt;Main repository for the Linera protocol&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://github.com/linera-io/linera-protocol/assets/1105398/fe08c941-93af-4114-bb83-bcc0eaec95f9" width="250" height="85" /&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/linera-io/linera-protocol/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/linera-io/linera-protocol" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://github.com/linera-io/linera-protocol/actions/workflows/docker-compose.yml"&gt;&lt;img src="https://github.com/linera-io/linera-protocol/actions/workflows/docker-compose.yml/badge.svg?sanitize=true" alt="Build Status for Docker" /&gt;&lt;/a&gt; &lt;a href="https://github.com/linera-io/linera-protocol/actions/workflows/rust.yml"&gt;&lt;img src="https://github.com/linera-io/linera-protocol/actions/workflows/rust.yml/badge.svg?sanitize=true" alt="Build Status for Rust" /&gt;&lt;/a&gt; &lt;a href="https://github.com/linera-io/linera-protocol/actions/workflows/documentation.yml"&gt;&lt;img src="https://github.com/linera-io/linera-protocol/actions/workflows/documentation.yml/badge.svg?sanitize=true" alt="Build Status for Documentation" /&gt;&lt;/a&gt; &lt;a href="https://x.com/linera_io"&gt;&lt;img src="https://img.shields.io/twitter/follow/linera_io" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/linera"&gt;&lt;img src="https://img.shields.io/discord/984941796272521226" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- [![Build Status for Kubernetes](https://github.com/linera-io/linera-protocol/actions/workflows/kubernetes.yml/badge.svg)](https://github.com/linera-io/linera-protocol/actions/workflows/kubernetes.yml) --&gt; 
&lt;p&gt;&lt;a href="https://linera.io"&gt;Linera&lt;/a&gt; is a decentralized blockchain infrastructure designed for highly scalable, secure, low-latency Web3 applications.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit our &lt;a href="https://linera.dev"&gt;developer page&lt;/a&gt; and read our &lt;a href="https://linera.io/whitepaper"&gt;whitepaper&lt;/a&gt; to learn more about the Linera protocol.&lt;/p&gt; 
&lt;h2&gt;Repository Structure&lt;/h2&gt; 
&lt;p&gt;The main crates and directories of this repository can be summarized as follows: (listed from low to high levels in the dependency graph)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_base/index.html"&gt;&lt;code&gt;linera-base&lt;/code&gt;&lt;/a&gt; Base definitions, including cryptography.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_version/index.html"&gt;&lt;code&gt;linera-version&lt;/code&gt;&lt;/a&gt; A library to manage version info in binaries and services.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_views/index.html"&gt;&lt;code&gt;linera-views&lt;/code&gt;&lt;/a&gt; A library mapping complex data structures onto a key-value store. The corresponding procedural macros are implemented in &lt;code&gt;linera-views-derive&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_execution/index.html"&gt;&lt;code&gt;linera-execution&lt;/code&gt;&lt;/a&gt; Persistent data and the corresponding logic for runtime and execution of Linera applications.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_chain/index.html"&gt;&lt;code&gt;linera-chain&lt;/code&gt;&lt;/a&gt; Persistent data and the corresponding logic for chains of blocks, certificates, and cross-chain messaging.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_storage/index.html"&gt;&lt;code&gt;linera-storage&lt;/code&gt;&lt;/a&gt; Defines the storage abstractions for the protocol on top of &lt;code&gt;linera-chain&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_core/index.html"&gt;&lt;code&gt;linera-core&lt;/code&gt;&lt;/a&gt; The core Linera protocol, including client and server logic, node synchronization, etc.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_rpc/index.html"&gt;&lt;code&gt;linera-rpc&lt;/code&gt;&lt;/a&gt; Defines the data-type for RPC messages (currently all client ↔ proxy ↔ chain ↔ chain interactions), and track the corresponding data schemas.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_client/index.html"&gt;&lt;code&gt;linera-client&lt;/code&gt;&lt;/a&gt; Library for writing Linera clients. Used for the command-line client and the node service in &lt;code&gt;linera-service&lt;/code&gt;, as well as the Web client in &lt;a href="https://github.com/linera-io/linera-web/"&gt;&lt;code&gt;linera-web&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_service/index.html"&gt;&lt;code&gt;linera-service&lt;/code&gt;&lt;/a&gt; Executable for clients (aka CLI wallets), proxy (aka validator frontend) and servers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://linera-io.github.io/linera-protocol/linera_sdk/index.html"&gt;&lt;code&gt;linera-sdk&lt;/code&gt;&lt;/a&gt; The library to develop Linera applications written in Rust for the Wasm virtual machine. The corresponding procedural macros are implemented in &lt;code&gt;linera-sdk-derive&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/linera-io/linera-protocol/main/examples"&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt; Examples of Linera applications written in Rust.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/linera-io/linera-protocol/main/INSTALL.md"&gt;&lt;code&gt;INSTALL.md&lt;/code&gt;&lt;/a&gt; for software requirements to develop in this repo.&lt;/p&gt; 
&lt;h2&gt;Quickstart with the Linera CLI tool&lt;/h2&gt; 
&lt;p&gt;The following commands set up a local test network and run some transfers between the microchains owned by a single wallet.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Make sure to compile the Linera binaries and add them in the $PATH.
# cargo build -p linera-storage-service -p linera-service --bins
export PATH="$PWD/target/debug:$PATH"

# Import the optional helper function `linera_spawn`.
source /dev/stdin &amp;lt;&amp;lt;&amp;lt;"$(linera net helper 2&amp;gt;/dev/null)"

# Run a local test network with the default parameters and a number of microchains
# owned by the default wallet. This also defines `LINERA_TMP_DIR`.
linera_spawn \
linera net up --with-faucet --faucet-port 8080

# Remember the URL of the faucet.
FAUCET_URL=http://localhost:8080

# If you're using a testnet, start here and run this instead:
#   LINERA_TMP_DIR=$(mktemp -d)
#   FAUCET_URL=https://faucet.testnet-XXX.linera.net  # for some value XXX

# Set the path of the future wallet.
export LINERA_WALLET="$LINERA_TMP_DIR/wallet.json"
export LINERA_KEYSTORE="$LINERA_TMP_DIR/keystore.json"
export LINERA_STORAGE="rocksdb:$LINERA_TMP_DIR/client.db"

# Initialize a new user wallet.
linera wallet init --faucet $FAUCET_URL

# Request chains.
INFO1=($(linera wallet request-chain --faucet $FAUCET_URL))
INFO2=($(linera wallet request-chain --faucet $FAUCET_URL))
CHAIN1="${INFO1[0]}"
ACCOUNT1="${INFO1[1]}"
CHAIN2="${INFO2[0]}"
ACCOUNT2="${INFO2[1]}"

# Show the different chains tracked by the wallet.
linera wallet show

# Query the chain balance of some of the chains.
linera query-balance "$CHAIN1"
linera query-balance "$CHAIN2"

# Transfer 10 units then 5 back.
linera transfer 10 --from "$CHAIN1" --to "$CHAIN2"
linera transfer 5 --from "$CHAIN2" --to "$CHAIN1"

# Query balances again.
linera query-balance "$CHAIN1"
linera query-balance "$CHAIN2"

# Now let's fund the user balances.
linera transfer 5 --from "$CHAIN1" --to "$CHAIN1:$ACCOUNT1"
linera transfer 2 --from "$CHAIN1:$ACCOUNT1" --to "$CHAIN2:$ACCOUNT2"

# Query user balances again.
linera query-balance "$CHAIN1:$ACCOUNT1"
linera query-balance "$CHAIN2:$ACCOUNT2"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More complex examples may be found in our &lt;a href="https://linera.dev"&gt;developer manual&lt;/a&gt; as well as the &lt;a href="https://raw.githubusercontent.com/linera-io/linera-protocol/main/examples"&gt;example applications&lt;/a&gt; in this repository.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from the community! If you'd like to contribute to the Linera protocol:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create a feature branch (&lt;code&gt;git checkout -b feature/amazing-feature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Commit your changes (&lt;code&gt;git commit -m 'Add some amazing feature'&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Push to the branch (&lt;code&gt;git push origin feature/amazing-feature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Open a Pull Request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For detailed guidelines, see our &lt;a href="https://raw.githubusercontent.com/linera-io/linera-protocol/main/CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BurntSushi/ripgrep</title>
      <link>https://github.com/BurntSushi/ripgrep</link>
      <description>&lt;p&gt;ripgrep recursively searches directories for a regex pattern while respecting your gitignore&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;ripgrep (rg)&lt;/h2&gt; 
&lt;p&gt;ripgrep is a line-oriented search tool that recursively searches the current directory for a regex pattern. By default, ripgrep will respect gitignore rules and automatically skip hidden files/directories and binary files. (To disable all automatic filtering by default, use &lt;code&gt;rg -uuu&lt;/code&gt;.) ripgrep has first class support on Windows, macOS and Linux, with binary downloads available for &lt;a href="https://github.com/BurntSushi/ripgrep/releases"&gt;every release&lt;/a&gt;. ripgrep is similar to other popular search tools like The Silver Searcher, ack and grep.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/BurntSushi/ripgrep/actions"&gt;&lt;img src="https://github.com/BurntSushi/ripgrep/workflows/ci/badge.svg?sanitize=true" alt="Build status" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/ripgrep"&gt;&lt;img src="https://img.shields.io/crates/v/ripgrep.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://repology.org/project/ripgrep/badges"&gt;&lt;img src="https://repology.org/badge/tiny-repos/ripgrep.svg?sanitize=true" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Dual-licensed under MIT or the &lt;a href="https://unlicense.org"&gt;UNLICENSE&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;CHANGELOG&lt;/h3&gt; 
&lt;p&gt;Please see the &lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/CHANGELOG.md"&gt;CHANGELOG&lt;/a&gt; for a release history.&lt;/p&gt; 
&lt;h3&gt;Documentation quick links&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/GUIDE.md"&gt;User Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/FAQ.md"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.rs/regex/1/regex/#syntax"&gt;Regex syntax&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/GUIDE.md#configuration-file"&gt;Configuration files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/FAQ.md#complete"&gt;Shell completions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/#building"&gt;Building&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/#translations"&gt;Translations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Screenshot of search results&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://burntsushi.net/stuff/ripgrep1.png"&gt;&lt;img src="https://burntsushi.net/stuff/ripgrep1.png" alt="A screenshot of a sample search with ripgrep" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Quick examples comparing tools&lt;/h3&gt; 
&lt;p&gt;This example searches the entire &lt;a href="https://github.com/BurntSushi/linux"&gt;Linux kernel source tree&lt;/a&gt; (after running &lt;code&gt;make defconfig &amp;amp;&amp;amp; make -j8&lt;/code&gt;) for &lt;code&gt;[A-Z]+_SUSPEND&lt;/code&gt;, where all matches must be words. Timings were collected on a system with an Intel i9-12900K 5.2 GHz.&lt;/p&gt; 
&lt;p&gt;Please remember that a single benchmark is never enough! See my &lt;a href="https://blog.burntsushi.net/ripgrep/"&gt;blog post on ripgrep&lt;/a&gt; for a very detailed comparison with more benchmarks and analysis.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tool&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Line count&lt;/th&gt; 
   &lt;th&gt;Time&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ripgrep (Unicode)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;rg -n -w '[A-Z]+_SUSPEND'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;536&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;0.082s&lt;/strong&gt; (1.00x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/p-ranav/hypergrep"&gt;hypergrep&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;hgrep -n -w '[A-Z]+_SUSPEND'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;536&lt;/td&gt; 
   &lt;td&gt;0.167s (2.04x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.kernel.org/pub/software/scm/git/docs/git-grep.html"&gt;git grep&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git grep -P -n -w '[A-Z]+_SUSPEND'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;536&lt;/td&gt; 
   &lt;td&gt;0.273s (3.34x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ggreer/the_silver_searcher"&gt;The Silver Searcher&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ag -w '[A-Z]+_SUSPEND'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;534&lt;/td&gt; 
   &lt;td&gt;0.443s (5.43x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Genivia/ugrep"&gt;ugrep&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ugrep -r --ignore-files --no-hidden -I -w '[A-Z]+_SUSPEND'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;536&lt;/td&gt; 
   &lt;td&gt;0.639s (7.82x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.kernel.org/pub/software/scm/git/docs/git-grep.html"&gt;git grep&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;LC_ALL=C git grep -E -n -w '[A-Z]+_SUSPEND'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;536&lt;/td&gt; 
   &lt;td&gt;0.727s (8.91x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.kernel.org/pub/software/scm/git/docs/git-grep.html"&gt;git grep (Unicode)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;LC_ALL=en_US.UTF-8 git grep -E -n -w '[A-Z]+_SUSPEND'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;536&lt;/td&gt; 
   &lt;td&gt;2.670s (32.70x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/beyondgrep/ack3"&gt;ack&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ack -w '[A-Z]+_SUSPEND'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;2677&lt;/td&gt; 
   &lt;td&gt;2.935s (35.94x)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Here's another benchmark on the same corpus as above that disregards gitignore files and searches with a whitelist instead. The corpus is the same as in the previous benchmark, and the flags passed to each command ensure that they are doing equivalent work:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tool&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Line count&lt;/th&gt; 
   &lt;th&gt;Time&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ripgrep&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;rg -uuu -tc -n -w '[A-Z]+_SUSPEND'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;447&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;0.063s&lt;/strong&gt; (1.00x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Genivia/ugrep"&gt;ugrep&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ugrep -r -n --include='*.c' --include='*.h' -w '[A-Z]+_SUSPEND'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;447&lt;/td&gt; 
   &lt;td&gt;0.607s (9.62x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.gnu.org/software/grep/"&gt;GNU grep&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;grep -E -r -n --include='*.c' --include='*.h' -w '[A-Z]+_SUSPEND'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;447&lt;/td&gt; 
   &lt;td&gt;0.674s (10.69x)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Now we'll move to searching on single large file. Here is a straight-up comparison between ripgrep, ugrep and GNU grep on a file cached in memory (~13GB, &lt;a href="http://opus.nlpl.eu/download.php?f=OpenSubtitles/v2018/mono/OpenSubtitles.raw.en.gz"&gt;&lt;code&gt;OpenSubtitles.raw.en.gz&lt;/code&gt;&lt;/a&gt;, decompressed):&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tool&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Line count&lt;/th&gt; 
   &lt;th&gt;Time&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ripgrep (Unicode)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;rg -w 'Sherlock [A-Z]\w+'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;7882&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1.042s&lt;/strong&gt; (1.00x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Genivia/ugrep"&gt;ugrep&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ugrep -w 'Sherlock [A-Z]\w+'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;7882&lt;/td&gt; 
   &lt;td&gt;1.339s (1.28x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.gnu.org/software/grep/"&gt;GNU grep (Unicode)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;LC_ALL=en_US.UTF-8 egrep -w 'Sherlock [A-Z]\w+'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;7882&lt;/td&gt; 
   &lt;td&gt;6.577s (6.31x)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;In the above benchmark, passing the &lt;code&gt;-n&lt;/code&gt; flag (for showing line numbers) increases the times to &lt;code&gt;1.664s&lt;/code&gt; for ripgrep and &lt;code&gt;9.484s&lt;/code&gt; for GNU grep. ugrep times are unaffected by the presence or absence of &lt;code&gt;-n&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Beware of performance cliffs though:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tool&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Line count&lt;/th&gt; 
   &lt;th&gt;Time&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ripgrep (Unicode)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;rg -w '[A-Z]\w+ Sherlock [A-Z]\w+'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;485&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1.053s&lt;/strong&gt; (1.00x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.gnu.org/software/grep/"&gt;GNU grep (Unicode)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;LC_ALL=en_US.UTF-8 grep -E -w '[A-Z]\w+ Sherlock [A-Z]\w+'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;485&lt;/td&gt; 
   &lt;td&gt;6.234s (5.92x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Genivia/ugrep"&gt;ugrep&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ugrep -w '[A-Z]\w+ Sherlock [A-Z]\w+'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;485&lt;/td&gt; 
   &lt;td&gt;28.973s (27.51x)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;And performance can drop precipitously across the board when searching big files for patterns without any opportunities for literal optimizations:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tool&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Line count&lt;/th&gt; 
   &lt;th&gt;Time&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ripgrep&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;rg '[A-Za-z]{30}'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;6749&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;15.569s&lt;/strong&gt; (1.00x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Genivia/ugrep"&gt;ugrep&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ugrep -E '[A-Za-z]{30}'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;6749&lt;/td&gt; 
   &lt;td&gt;21.857s (1.40x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.gnu.org/software/grep/"&gt;GNU grep&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;LC_ALL=C grep -E '[A-Za-z]{30}'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;6749&lt;/td&gt; 
   &lt;td&gt;32.409s (2.08x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.gnu.org/software/grep/"&gt;GNU grep (Unicode)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;LC_ALL=en_US.UTF-8 grep -E '[A-Za-z]{30}'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;6795&lt;/td&gt; 
   &lt;td&gt;8m30s (32.74x)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Finally, high match counts also tend to both tank performance and smooth out the differences between tools (because performance is dominated by how quickly one can handle a match and not the algorithm used to detect the match, generally speaking):&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tool&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Line count&lt;/th&gt; 
   &lt;th&gt;Time&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ripgrep&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;rg the&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;83499915&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;6.948s&lt;/strong&gt; (1.00x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Genivia/ugrep"&gt;ugrep&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ugrep the&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;83499915&lt;/td&gt; 
   &lt;td&gt;11.721s (1.69x)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.gnu.org/software/grep/"&gt;GNU grep&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;LC_ALL=C grep the&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;83499915&lt;/td&gt; 
   &lt;td&gt;15.217s (2.19x)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Why should I use ripgrep?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;It can replace many use cases served by other search tools because it contains most of their features and is generally faster. (See &lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/FAQ.md#posix4ever"&gt;the FAQ&lt;/a&gt; for more details on whether ripgrep can truly replace grep.)&lt;/li&gt; 
 &lt;li&gt;Like other tools specialized to code search, ripgrep defaults to &lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/GUIDE.md#recursive-search"&gt;recursive search&lt;/a&gt; and does &lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/GUIDE.md#automatic-filtering"&gt;automatic filtering&lt;/a&gt;. Namely, ripgrep won't search files ignored by your &lt;code&gt;.gitignore&lt;/code&gt;/&lt;code&gt;.ignore&lt;/code&gt;/&lt;code&gt;.rgignore&lt;/code&gt; files, it won't search hidden files and it won't search binary files. Automatic filtering can be disabled with &lt;code&gt;rg -uuu&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;ripgrep can &lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/GUIDE.md#manual-filtering-file-types"&gt;search specific types of files&lt;/a&gt;. For example, &lt;code&gt;rg -tpy foo&lt;/code&gt; limits your search to Python files and &lt;code&gt;rg -Tjs foo&lt;/code&gt; excludes JavaScript files from your search. ripgrep can be taught about new file types with custom matching rules.&lt;/li&gt; 
 &lt;li&gt;ripgrep supports many features found in &lt;code&gt;grep&lt;/code&gt;, such as showing the context of search results, searching multiple patterns, highlighting matches with color and full Unicode support. Unlike GNU grep, ripgrep stays fast while supporting Unicode (which is always on).&lt;/li&gt; 
 &lt;li&gt;ripgrep has optional support for switching its regex engine to use PCRE2. Among other things, this makes it possible to use look-around and backreferences in your patterns, which are not supported in ripgrep's default regex engine. PCRE2 support can be enabled with &lt;code&gt;-P/--pcre2&lt;/code&gt; (use PCRE2 always) or &lt;code&gt;--auto-hybrid-regex&lt;/code&gt; (use PCRE2 only if needed). An alternative syntax is provided via the &lt;code&gt;--engine (default|pcre2|auto)&lt;/code&gt; option.&lt;/li&gt; 
 &lt;li&gt;ripgrep has &lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/GUIDE.md#replacements"&gt;rudimentary support for replacements&lt;/a&gt;, which permit rewriting output based on what was matched.&lt;/li&gt; 
 &lt;li&gt;ripgrep supports &lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/GUIDE.md#file-encoding"&gt;searching files in text encodings&lt;/a&gt; other than UTF-8, such as UTF-16, latin-1, GBK, EUC-JP, Shift_JIS and more. (Some support for automatically detecting UTF-16 is provided. Other text encodings must be specifically specified with the &lt;code&gt;-E/--encoding&lt;/code&gt; flag.)&lt;/li&gt; 
 &lt;li&gt;ripgrep supports searching files compressed in a common format (brotli, bzip2, gzip, lz4, lzma, xz, or zstandard) with the &lt;code&gt;-z/--search-zip&lt;/code&gt; flag.&lt;/li&gt; 
 &lt;li&gt;ripgrep supports &lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/GUIDE.md#preprocessor"&gt;arbitrary input preprocessing filters&lt;/a&gt; which could be PDF text extraction, less supported decompression, decrypting, automatic encoding detection and so on.&lt;/li&gt; 
 &lt;li&gt;ripgrep can be configured via a &lt;a href="https://raw.githubusercontent.com/BurntSushi/ripgrep/master/GUIDE.md#configuration-file"&gt;configuration file&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In other words, use ripgrep if you like speed, filtering by default, fewer bugs and Unicode support.&lt;/p&gt; 
&lt;h3&gt;Why shouldn't I use ripgrep?&lt;/h3&gt; 
&lt;p&gt;Despite initially not wanting to add every feature under the sun to ripgrep, over time, ripgrep has grown support for most features found in other file searching tools. This includes searching for results spanning across multiple lines, and opt-in support for PCRE2, which provides look-around and backreference support.&lt;/p&gt; 
&lt;p&gt;At this point, the primary reasons not to use ripgrep probably consist of one or more of the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You need a portable and ubiquitous tool. While ripgrep works on Windows, macOS and Linux, it is not ubiquitous and it does not conform to any standard such as POSIX. The best tool for this job is good old grep.&lt;/li&gt; 
 &lt;li&gt;There still exists some other feature (or bug) not listed in this README that you rely on that's in another tool that isn't in ripgrep.&lt;/li&gt; 
 &lt;li&gt;There is a performance edge case where ripgrep doesn't do well where another tool does do well. (Please file a bug report!)&lt;/li&gt; 
 &lt;li&gt;ripgrep isn't possible to install on your machine or isn't available for your platform. (Please file a bug report!)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Is it really faster than everything else?&lt;/h3&gt; 
&lt;p&gt;Generally, yes. A large number of benchmarks with detailed analysis for each is &lt;a href="https://blog.burntsushi.net/ripgrep/"&gt;available on my blog&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Summarizing, ripgrep is fast because:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It is built on top of &lt;a href="https://github.com/rust-lang/regex"&gt;Rust's regex engine&lt;/a&gt;. Rust's regex engine uses finite automata, SIMD and aggressive literal optimizations to make searching very fast. (PCRE2 support can be opted into with the &lt;code&gt;-P/--pcre2&lt;/code&gt; flag.)&lt;/li&gt; 
 &lt;li&gt;Rust's regex library maintains performance with full Unicode support by building UTF-8 decoding directly into its deterministic finite automaton engine.&lt;/li&gt; 
 &lt;li&gt;It supports searching with either memory maps or by searching incrementally with an intermediate buffer. The former is better for single files and the latter is better for large directories. ripgrep chooses the best searching strategy for you automatically.&lt;/li&gt; 
 &lt;li&gt;Applies your ignore patterns in &lt;code&gt;.gitignore&lt;/code&gt; files using a &lt;a href="https://docs.rs/regex/1/regex/struct.RegexSet.html"&gt;&lt;code&gt;RegexSet&lt;/code&gt;&lt;/a&gt;. That means a single file path can be matched against multiple glob patterns simultaneously.&lt;/li&gt; 
 &lt;li&gt;It uses a lock-free parallel recursive directory iterator, courtesy of &lt;a href="https://docs.rs/crossbeam"&gt;&lt;code&gt;crossbeam&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://docs.rs/ignore"&gt;&lt;code&gt;ignore&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Feature comparison&lt;/h3&gt; 
&lt;p&gt;Andy Lester, author of &lt;a href="https://beyondgrep.com/"&gt;ack&lt;/a&gt;, has published an excellent table comparing the features of ack, ag, git-grep, GNU grep and ripgrep: &lt;a href="https://beyondgrep.com/feature-comparison/"&gt;https://beyondgrep.com/feature-comparison/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Note that ripgrep has grown a few significant new features recently that are not yet present in Andy's table. This includes, but is not limited to, configuration files, passthru, support for searching compressed files, multiline search and opt-in fancy regex support via PCRE2.&lt;/p&gt; 
&lt;h3&gt;Playground&lt;/h3&gt; 
&lt;p&gt;If you'd like to try ripgrep before installing, there's an unofficial &lt;a href="https://codapi.org/ripgrep/"&gt;playground&lt;/a&gt; and an &lt;a href="https://codapi.org/try/ripgrep/"&gt;interactive tutorial&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you have any questions about these, please open an issue in the &lt;a href="https://github.com/nalgeon/tryxinyminutes"&gt;tutorial repo&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;The binary name for ripgrep is &lt;code&gt;rg&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/BurntSushi/ripgrep/releases"&gt;Archives of precompiled binaries for ripgrep are available for Windows, macOS and Linux.&lt;/a&gt;&lt;/strong&gt; Linux and Windows binaries are static executables. Users of platforms not explicitly mentioned below are advised to download one of these archives.&lt;/p&gt; 
&lt;p&gt;If you're a &lt;strong&gt;macOS Homebrew&lt;/strong&gt; or a &lt;strong&gt;Linuxbrew&lt;/strong&gt; user, then you can install ripgrep from homebrew-core:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ brew install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;MacPorts&lt;/strong&gt; user, then you can install ripgrep from the &lt;a href="https://www.macports.org/ports.php?by=name&amp;amp;substr=ripgrep"&gt;official ports&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo port install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Windows Chocolatey&lt;/strong&gt; user, then you can install ripgrep from the &lt;a href="https://chocolatey.org/packages/ripgrep"&gt;official repo&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ choco install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Windows Scoop&lt;/strong&gt; user, then you can install ripgrep from the &lt;a href="https://github.com/ScoopInstaller/Main/raw/master/bucket/ripgrep.json"&gt;official bucket&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ scoop install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Windows Winget&lt;/strong&gt; user, then you can install ripgrep from the &lt;a href="https://github.com/microsoft/winget-pkgs/tree/master/manifests/b/BurntSushi/ripgrep"&gt;winget-pkgs&lt;/a&gt; repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ winget install BurntSushi.ripgrep.MSVC
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're an &lt;strong&gt;Arch Linux&lt;/strong&gt; user, then you can install ripgrep from the official repos:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo pacman -S ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Gentoo&lt;/strong&gt; user, you can install ripgrep from the &lt;a href="https://packages.gentoo.org/packages/sys-apps/ripgrep"&gt;official repo&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo emerge sys-apps/ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Fedora&lt;/strong&gt; user, you can install ripgrep from official repositories.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo dnf install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're an &lt;strong&gt;openSUSE&lt;/strong&gt; user, ripgrep is included in &lt;strong&gt;openSUSE Tumbleweed&lt;/strong&gt; and &lt;strong&gt;openSUSE Leap&lt;/strong&gt; since 15.1.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo zypper install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;CentOS Stream 10&lt;/strong&gt; user, you can install ripgrep from the &lt;a href="https://docs.fedoraproject.org/en-US/epel/getting-started/"&gt;EPEL&lt;/a&gt; repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo dnf config-manager --set-enabled crb
$ sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-10.noarch.rpm
$ sudo dnf install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Red Hat 10&lt;/strong&gt; user, you can install ripgrep from the &lt;a href="https://docs.fedoraproject.org/en-US/epel/getting-started/"&gt;EPEL&lt;/a&gt; repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo subscription-manager repos --enable codeready-builder-for-rhel-10-$(arch)-rpms
$ sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-10.noarch.rpm
$ sudo dnf install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Rocky Linux 10&lt;/strong&gt; user, you can install ripgrep from the &lt;a href="https://docs.fedoraproject.org/en-US/epel/getting-started/"&gt;EPEL&lt;/a&gt; repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-10.noarch.rpm
$ sudo dnf install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Nix&lt;/strong&gt; user, you can install ripgrep from &lt;a href="https://github.com/NixOS/nixpkgs/raw/master/pkgs/by-name/ri/ripgrep/package.nix"&gt;nixpkgs&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ nix-env --install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Flox&lt;/strong&gt; user, you can install ripgrep as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ flox install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Guix&lt;/strong&gt; user, you can install ripgrep from the official package collection:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ guix install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Debian&lt;/strong&gt; user (or a user of a Debian derivative like &lt;strong&gt;Ubuntu&lt;/strong&gt;), then ripgrep can be installed using a binary &lt;code&gt;.deb&lt;/code&gt; file provided in each &lt;a href="https://github.com/BurntSushi/ripgrep/releases"&gt;ripgrep release&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ curl -LO https://github.com/BurntSushi/ripgrep/releases/download/14.1.1/ripgrep_14.1.1-1_amd64.deb
$ sudo dpkg -i ripgrep_14.1.1-1_amd64.deb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you run Debian stable, ripgrep is &lt;a href="https://tracker.debian.org/pkg/rust-ripgrep"&gt;officially maintained by Debian&lt;/a&gt;, although its version may be older than the &lt;code&gt;deb&lt;/code&gt; package available in the previous step.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're an &lt;strong&gt;Ubuntu Cosmic (18.10)&lt;/strong&gt; (or newer) user, ripgrep is &lt;a href="https://launchpad.net/ubuntu/+source/rust-ripgrep"&gt;available&lt;/a&gt; using the same packaging as Debian:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(N.B. Various snaps for ripgrep on Ubuntu are also available, but none of them seem to work right and generate a number of very strange bug reports that I don't know how to fix and don't have the time to fix. Therefore, it is no longer a recommended installation option.)&lt;/p&gt; 
&lt;p&gt;If you're an &lt;strong&gt;ALT&lt;/strong&gt; user, you can install ripgrep from the &lt;a href="https://packages.altlinux.org/en/search?name=ripgrep"&gt;official repo&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;FreeBSD&lt;/strong&gt; user, then you can install ripgrep from the &lt;a href="https://www.freshports.org/textproc/ripgrep/"&gt;official ports&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo pkg install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're an &lt;strong&gt;OpenBSD&lt;/strong&gt; user, then you can install ripgrep from the &lt;a href="https://openports.se/textproc/ripgrep"&gt;official ports&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ doas pkg_add ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;NetBSD&lt;/strong&gt; user, then you can install ripgrep from &lt;a href="https://pkgsrc.se/textproc/ripgrep"&gt;pkgsrc&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo pkgin install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Haiku x86_64&lt;/strong&gt; user, then you can install ripgrep from the &lt;a href="https://github.com/haikuports/haikuports/tree/master/sys-apps/ripgrep"&gt;official ports&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo pkgman install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Haiku x86_gcc2&lt;/strong&gt; user, then you can install ripgrep from the same port as Haiku x86_64 using the x86 secondary architecture build:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo pkgman install ripgrep_x86
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Void Linux&lt;/strong&gt; user, then you can install ripgrep from the &lt;a href="https://voidlinux.org/packages/?arch=x86_64&amp;amp;q=ripgrep"&gt;official repository&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo xbps-install -Syv ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're a &lt;strong&gt;Rust programmer&lt;/strong&gt;, ripgrep can be installed with &lt;code&gt;cargo&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Note that the minimum supported version of Rust for ripgrep is &lt;strong&gt;1.85.0&lt;/strong&gt;, although ripgrep may work with older versions.&lt;/li&gt; 
 &lt;li&gt;Note that the binary may be bigger than expected because it contains debug symbols. This is intentional. To remove debug symbols and therefore reduce the file size, run &lt;code&gt;strip&lt;/code&gt; on the binary.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;$ cargo install ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, one can use &lt;a href="https://github.com/cargo-bins/cargo-binstall"&gt;&lt;code&gt;cargo binstall&lt;/code&gt;&lt;/a&gt; to install a ripgrep binary directly from GitHub:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ cargo binstall ripgrep
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building&lt;/h3&gt; 
&lt;p&gt;ripgrep is written in Rust, so you'll need to grab a &lt;a href="https://www.rust-lang.org/"&gt;Rust installation&lt;/a&gt; in order to compile it. ripgrep compiles with Rust 1.85.0 (stable) or newer. In general, ripgrep tracks the latest stable release of the Rust compiler.&lt;/p&gt; 
&lt;p&gt;To build ripgrep:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/BurntSushi/ripgrep
$ cd ripgrep
$ cargo build --release
$ ./target/release/rg --version
0.1.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; In the past, ripgrep supported a &lt;code&gt;simd-accel&lt;/code&gt; Cargo feature when using a Rust nightly compiler. This only benefited UTF-16 transcoding. Since it required unstable features, this build mode was prone to breakage. Because of that, support for it has been removed. If you want SIMD optimizations for UTF-16 transcoding, then you'll have to petition the &lt;a href="https://github.com/hsivonen/encoding_rs"&gt;&lt;code&gt;encoding_rs&lt;/code&gt;&lt;/a&gt; project to use stable APIs.&lt;/p&gt; 
&lt;p&gt;Finally, optional PCRE2 support can be built with ripgrep by enabling the &lt;code&gt;pcre2&lt;/code&gt; feature:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ cargo build --release --features 'pcre2'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Enabling the PCRE2 feature works with a stable Rust compiler and will attempt to automatically find and link with your system's PCRE2 library via &lt;code&gt;pkg-config&lt;/code&gt;. If one doesn't exist, then ripgrep will build PCRE2 from source using your system's C compiler and then statically link it into the final executable. Static linking can be forced even when there is an available PCRE2 system library by either building ripgrep with the MUSL target or by setting &lt;code&gt;PCRE2_SYS_STATIC=1&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;ripgrep can be built with the MUSL target on Linux by first installing the MUSL library on your system (consult your friendly neighborhood package manager). Then you just need to add MUSL support to your Rust toolchain and rebuild ripgrep, which yields a fully static executable:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ rustup target add x86_64-unknown-linux-musl
$ cargo build --release --target x86_64-unknown-linux-musl
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Applying the &lt;code&gt;--features&lt;/code&gt; flag from above works as expected. If you want to build a static executable with MUSL and with PCRE2, then you will need to have &lt;code&gt;musl-gcc&lt;/code&gt; installed, which might be in a separate package from the actual MUSL library, depending on your Linux distribution.&lt;/p&gt; 
&lt;h3&gt;Running tests&lt;/h3&gt; 
&lt;p&gt;ripgrep is relatively well-tested, including both unit tests and integration tests. To run the full test suite, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ cargo test --all
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;from the repository root.&lt;/p&gt; 
&lt;h3&gt;Related tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dandavison/delta"&gt;delta&lt;/a&gt; is a syntax highlighting pager that supports the &lt;code&gt;rg --json&lt;/code&gt; output format. So all you need to do to make it work is &lt;code&gt;rg --json pattern | delta&lt;/code&gt;. See &lt;a href="https://dandavison.github.io/delta/grep.html"&gt;delta's manual section on grep&lt;/a&gt; for more details.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Vulnerability reporting&lt;/h3&gt; 
&lt;p&gt;For reporting a security vulnerability, please &lt;a href="https://blog.burntsushi.net/about/"&gt;contact Andrew Gallant&lt;/a&gt;. The contact page has my email address and PGP public key if you wish to send an encrypted message.&lt;/p&gt; 
&lt;h3&gt;Translations&lt;/h3&gt; 
&lt;p&gt;The following is a list of known translations of ripgrep's documentation. These are unofficially maintained and may not be up to date.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chinanf-boy/ripgrep-zh#%E6%9B%B4%E6%96%B0-"&gt;Chinese&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/UltiRequiem/traducciones/tree/master/ripgrep"&gt;Spanish&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>denoland/deno</title>
      <link>https://github.com/denoland/deno</link>
      <description>&lt;p&gt;A modern runtime for JavaScript and TypeScript.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Deno&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://crates.io/crates/deno"&gt;&lt;img src="https://img.shields.io/crates/v/deno.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=deno_land"&gt;&lt;img src="https://img.shields.io/twitter/follow/deno_land.svg?style=social&amp;amp;label=Follow" alt="Twitter badge" /&gt;&lt;/a&gt; &lt;a href="https://bsky.app/profile/deno.land"&gt;&lt;img src="https://img.shields.io/badge/Follow-whitesmoke?logo=bluesky" alt="Bluesky badge" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/deno"&gt;&lt;img src="https://img.shields.io/discord/684898665143206084?logo=discord&amp;amp;style=social" alt="Discord badge" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/@deno_land"&gt;&lt;img src="https://img.shields.io/youtube/channel/subscribers/UCqC2G2M-rg4fzg1esKFLFIw?style=social" alt="YouTube badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;img align="right" src="https://deno.land/logo.svg?sanitize=true" height="150px" alt="the deno mascot dinosaur standing in the rain" /&gt; 
&lt;p&gt;&lt;a href="https://deno.com"&gt;Deno&lt;/a&gt; (&lt;a href="https://ipa-reader.com/?text=%CB%88di%CB%90no%CA%8A"&gt;/ˈdiːnoʊ/&lt;/a&gt;, pronounced &lt;code&gt;dee-no&lt;/code&gt;) is a JavaScript, TypeScript, and WebAssembly runtime with secure defaults and a great developer experience. It's built on &lt;a href="https://v8.dev/"&gt;V8&lt;/a&gt;, &lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt;, and &lt;a href="https://tokio.rs/"&gt;Tokio&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Learn more about the Deno runtime &lt;a href="https://docs.deno.com/runtime/manual"&gt;in the documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Install the Deno runtime on your system using one of the commands below. Note that there are a number of ways to install Deno - a comprehensive list of installation options can be found &lt;a href="https://docs.deno.com/runtime/manual/getting_started/installation"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Shell (Mac, Linux):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -fsSL https://deno.land/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;PowerShell (Windows):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;irm https://deno.land/install.ps1 | iex
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://formulae.brew.sh/formula/deno"&gt;Homebrew&lt;/a&gt; (Mac):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install deno
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://chocolatey.org/packages/deno"&gt;Chocolatey&lt;/a&gt; (Windows):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;choco install deno
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://winstall.app/apps/DenoLand.Deno"&gt;WinGet&lt;/a&gt; (Windows):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;winget install --id=DenoLand.Deno
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build and install from source&lt;/h3&gt; 
&lt;p&gt;Complete instructions for building Deno from source can be found &lt;a href="https://github.com/denoland/deno/raw/main/.github/CONTRIBUTING.md#building-from-source"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Your first Deno program&lt;/h2&gt; 
&lt;p&gt;Deno can be used for many different applications, but is most commonly used to build web servers. Create a file called &lt;code&gt;server.ts&lt;/code&gt; and include the following TypeScript code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;Deno.serve((_req: Request) =&amp;gt; {
  return new Response("Hello, world!");
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run your server with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;deno run --allow-net server.ts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This should start a local web server on &lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Learn more about writing and running Deno programs &lt;a href="https://docs.deno.com/runtime/manual"&gt;in the docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Additional resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.deno.com"&gt;Deno Docs&lt;/a&gt;&lt;/strong&gt;: official guides and reference docs for the Deno runtime, &lt;a href="https://deno.com/deploy"&gt;Deno Deploy&lt;/a&gt;, and beyond.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://jsr.io/@std"&gt;Deno Standard Library&lt;/a&gt;&lt;/strong&gt;: officially supported common utilities for Deno programs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://jsr.io/"&gt;JSR&lt;/a&gt;&lt;/strong&gt;: The open-source package registry for modern JavaScript and TypeScript&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://deno.com/blog"&gt;Developer Blog&lt;/a&gt;&lt;/strong&gt;: Product updates, tutorials, and more from the Deno team.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We appreciate your help! To contribute, please read our &lt;a href="https://raw.githubusercontent.com/denoland/deno/main/.github/CONTRIBUTING.md"&gt;contributing instructions&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>influxdata/influxdb</title>
      <link>https://github.com/influxdata/influxdb</link>
      <description>&lt;p&gt;Scalable datastore for metrics, events, and real-time analytics&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="assets/influxdb-logo.png" /&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="assets/influxdb-logo-dark.png" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/influxdata/influxdb/main/assets/influxdb-logo.png" alt="InfluxDB Logo" width="600" /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt; &lt;/p&gt;
&lt;/div&gt; 
&lt;p&gt;InfluxDB Core is a database built to collect, process, transform, and store event and time series data. It is ideal for use cases that require real-time ingest and fast query response times to build user interfaces, monitoring, and automation solutions.&lt;/p&gt; 
&lt;p&gt;Common use cases include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monitoring sensor data&lt;/li&gt; 
 &lt;li&gt;Server monitoring&lt;/li&gt; 
 &lt;li&gt;Application performance monitoring&lt;/li&gt; 
 &lt;li&gt;Network monitoring&lt;/li&gt; 
 &lt;li&gt;Financial market and trading analytics&lt;/li&gt; 
 &lt;li&gt;Behavioral analytics&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;InfluxDB is optimized for scenarios where near real-time data monitoring is essential and queries need to return quickly to support user experiences such as dashboards and interactive user interfaces.&lt;/p&gt; 
&lt;p&gt;InfluxDB 3 Core’s feature highlights include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Diskless architecture with object storage support (or local disk with no dependencies)&lt;/li&gt; 
 &lt;li&gt;Fast query response times (under 10ms for last-value queries, or 30ms for distinct metadata)&lt;/li&gt; 
 &lt;li&gt;Embedded Python VM for plugins and triggers&lt;/li&gt; 
 &lt;li&gt;Parquet file persistence&lt;/li&gt; 
 &lt;li&gt;Compatibility with InfluxDB 1.x and 2.x write APIs&lt;/li&gt; 
 &lt;li&gt;Compatability with InfluxDB 1.x query API (InfluxQL)&lt;/li&gt; 
 &lt;li&gt;SQL query engine with support for FlightSQL and HTTP query API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Status&lt;/h2&gt; 
&lt;p&gt;InfluxDB 3 Core is GA as of April 15, 2025! We plan to have monthly point releases for the following six months, with patch releases as needed. We will move to a quarterly cadence after that for 3-4 releases, after which we'll reevaluate our release schedule.&lt;/p&gt; 
&lt;p&gt;Join the &lt;a href="https://discord.gg/vZe2w2Ds8B"&gt;InfluxDB3 Discord&lt;/a&gt; or the public channels below to share your feedback, feature requests, and bug reports.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://www.influxdata.com/blog/influxdb-3-oss-ga/"&gt;InfluxDB 3 Core &amp;amp; Enterprise GA release announcement here&lt;/a&gt; or dig into the &lt;a href="https://docs.influxdata.com/influxdb3/core/get-started/"&gt;InfluxDB 3 getting started guide here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Learn InfluxDB&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.influxdata.com/"&gt;Documentation&lt;/a&gt; | &lt;a href="https://community.influxdata.com/"&gt;Community Forum&lt;/a&gt; | &lt;a href="https://www.influxdata.com/slack/"&gt;Community Slack&lt;/a&gt; | &lt;a href="https://www.influxdata.com/blog/"&gt;Blog&lt;/a&gt; | &lt;a href="https://university.influxdata.com/"&gt;InfluxDB University&lt;/a&gt; | &lt;a href="https://www.youtube.com/@influxdata8893"&gt;YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Try &lt;strong&gt;InfluxDB Cloud&lt;/strong&gt; for free and get started fast with no local setup required. Click &lt;a href="https://cloud2.influxdata.com/signup"&gt;here&lt;/a&gt; to start building your application on InfluxDB Cloud.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;We have nightly and versioned Docker images, Debian packages, RPM packages, and tarballs of InfluxDB available on the &lt;a href="https://portal.influxdata.com/downloads/"&gt;InfluxData downloads page&lt;/a&gt;. We also provide the InfluxDB command line interface (CLI) client as a separate binary available at the same location.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For v1 installation, use the &lt;a href="https://github.com/influxdata/influxdb/tree/master-1.x"&gt;main 1.x branch&lt;/a&gt; or &lt;a href="https://docs.influxdata.com/influxdb/v1/introduction/install/#installing-influxdb-oss"&gt;install InfluxDB OSS directly&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For v2 installation, use the &lt;a href="https://github.com/influxdata/influxdb/tree/main-2.x"&gt;main 2.x branch&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For InfluxDB 3 Core see the &lt;a href="https://docs.influxdata.com/influxdb3/core/get-started/"&gt;InfluxDB 3 Core getting started guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For InfluxDB 3 Enterprise see the &lt;a href="https://docs.influxdata.com/influxdb3/enterprise/get-started/"&gt;InfluxDB 3 Enterprise getting started guide&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are interested in building from source, see the &lt;a href="https://raw.githubusercontent.com/influxdata/influxdb/main/CONTRIBUTING.md#building-from-source"&gt;building from source&lt;/a&gt; guide for contributors.&lt;/p&gt; 
&lt;p&gt;To begin using InfluxDB, visit our &lt;a href="https://docs.influxdata.com/influxdb/v1/introduction/get-started/"&gt;Getting Started with InfluxDB&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The open source software we build is licensed under the permissive MIT or Apache 2 licenses at the user's choosing. We’ve long held the view that our open source code should be truly open and our commercial code should be separate and closed.&lt;/p&gt; 
&lt;h2&gt;Interested in joining the team building InfluxDB?&lt;/h2&gt; 
&lt;p&gt;Check out current job openings at &lt;a href="https://www.influxdata.com/careers"&gt;www.influxdata.com/careers&lt;/a&gt; today!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>typst/typst</title>
      <link>https://github.com/typst/typst</link>
      <description>&lt;p&gt;A new markup-based typesetting system that is powerful and easy to learn.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img alt="Typst" src="https://user-images.githubusercontent.com/17899797/226108480-722b770e-6313-40d7-84f2-26bebb55a281.png" /&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://typst.app/docs/"&gt; &lt;img alt="Documentation" src="https://img.shields.io/website?down_message=offline&amp;amp;label=docs&amp;amp;up_color=007aff&amp;amp;up_message=online&amp;amp;url=https%3A%2F%2Ftypst.app%2Fdocs" /&gt;&lt;/a&gt; &lt;a href="https://typst.app/"&gt; &lt;img alt="Typst App" src="https://img.shields.io/website?down_message=offline&amp;amp;label=typst.app&amp;amp;up_color=239dad&amp;amp;up_message=online&amp;amp;url=https%3A%2F%2Ftypst.app" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/2uDybryKPe"&gt; &lt;img alt="Discord Server" src="https://img.shields.io/discord/1054443721975922748?color=5865F2&amp;amp;label=discord&amp;amp;labelColor=555" /&gt;&lt;/a&gt; &lt;a href="https://github.com/typst/typst/raw/main/LICENSE"&gt; &lt;img alt="Apache-2 License" src="https://img.shields.io/badge/license-Apache%202-brightgreen" /&gt;&lt;/a&gt; &lt;a href="https://typst.app/jobs/"&gt; &lt;img alt="Jobs at Typst" src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ftypst.app%2Fassets%2Fdata%2Fshields.json&amp;amp;query=%24.jobs.text&amp;amp;label=jobs&amp;amp;color=%23A561FF&amp;amp;cacheSeconds=1800" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Typst is a new markup-based typesetting system that is designed to be as powerful as LaTeX while being much easier to learn and use. Typst has:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Built-in markup for the most common formatting tasks&lt;/li&gt; 
 &lt;li&gt;Flexible functions for everything else&lt;/li&gt; 
 &lt;li&gt;A tightly integrated scripting system&lt;/li&gt; 
 &lt;li&gt;Math typesetting, bibliography management, and more&lt;/li&gt; 
 &lt;li&gt;Fast compile times thanks to incremental compilation&lt;/li&gt; 
 &lt;li&gt;Friendly error messages in case something goes wrong&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This repository contains the Typst compiler and its CLI, which is everything you need to compile Typst documents locally. For the best writing experience, consider signing up to our &lt;a href="https://typst.app/"&gt;collaborative online editor&lt;/a&gt; for free.&lt;/p&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;A &lt;a href="https://typst.app/docs/tutorial/"&gt;gentle introduction&lt;/a&gt; to Typst is available in our documentation. However, if you want to see the power of Typst encapsulated in one image, here it is:&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="Example" width="900" src="https://user-images.githubusercontent.com/17899797/228031796-ced0e452-fcee-4ae9-92da-b9287764ff25.png" /&gt; &lt;/p&gt; 
&lt;p&gt;Let's dissect what's going on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;We use &lt;em&gt;set rules&lt;/em&gt; to configure element properties like the size of pages or the numbering of headings. By setting the page height to &lt;code&gt;auto&lt;/code&gt;, it scales to fit the content. Set rules accommodate the most common configurations. If you need full control, you can also use &lt;a href="https://typst.app/docs/reference/styling/#show-rules"&gt;show rules&lt;/a&gt; to completely redefine the appearance of an element.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;We insert a heading with the &lt;code&gt;= Heading&lt;/code&gt; syntax. One equals sign creates a top level heading, two create a subheading and so on. Typst has more lightweight markup like this, see the &lt;a href="https://typst.app/docs/reference/syntax/"&gt;syntax&lt;/a&gt; reference for a full list.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://typst.app/docs/reference/math/"&gt;Mathematical equations&lt;/a&gt; are enclosed in dollar signs. By adding extra spaces around the contents of an equation, we can put it into a separate block. Multi-letter identifiers are interpreted as Typst definitions and functions unless put into quotes. This way, we don't need backslashes for things like &lt;code&gt;floor&lt;/code&gt; and &lt;code&gt;sqrt&lt;/code&gt;. And &lt;code&gt;phi.alt&lt;/code&gt; applies the &lt;code&gt;alt&lt;/code&gt; modifier to the &lt;code&gt;phi&lt;/code&gt; to select a particular symbol variant.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Now, we get to some &lt;a href="https://typst.app/docs/reference/scripting/"&gt;scripting&lt;/a&gt;. To input code into a Typst document, we can write a hash followed by an expression. We define two variables and a recursive function to compute the n-th fibonacci number. Then, we display the results in a center-aligned table. The table function takes its cells row-by-row. Therefore, we first pass the formulas &lt;code&gt;$F_1$&lt;/code&gt; to &lt;code&gt;$F_8$&lt;/code&gt; and then the computed fibonacci numbers. We apply the spreading operator (&lt;code&gt;..&lt;/code&gt;) to both because they are arrays and we want to pass the arrays' items as individual arguments.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Text version of the code example.&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-typst"&gt;#set page(width: 10cm, height: auto)
#set heading(numbering: "1.")

= Fibonacci sequence
The Fibonacci sequence is defined through the
recurrence relation $F_n = F_(n-1) + F_(n-2)$.
It can also be expressed in _closed form:_

$ F_n = round(1 / sqrt(5) phi.alt^n), quad
  phi.alt = (1 + sqrt(5)) / 2 $

#let count = 8
#let nums = range(1, count + 1)
#let fib(n) = (
  if n &amp;lt;= 2 { 1 }
  else { fib(n - 1) + fib(n - 2) }
)

The first #count numbers of the sequence are:

#align(center, table(
  columns: count,
  ..nums.map(n =&amp;gt; $F_#n$),
  ..nums.map(n =&amp;gt; str(fib(n))),
))
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Typst's CLI is available from different sources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;You can get sources and pre-built binaries for the latest release of Typst from the &lt;a href="https://github.com/typst/typst/releases/"&gt;releases page&lt;/a&gt;. Download the archive for your platform and place it in a directory that is in your &lt;code&gt;PATH&lt;/code&gt;. To stay up to date with future releases, you can simply run &lt;code&gt;typst update&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can install Typst through different package managers. Note that the versions in the package managers might lag behind the latest release.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Linux: 
    &lt;ul&gt; 
     &lt;li&gt;View &lt;a href="https://repology.org/project/typst/versions"&gt;Typst on Repology&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;View &lt;a href="https://snapcraft.io/typst"&gt;Typst's Snap&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;macOS: &lt;code&gt;brew install typst&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Windows: &lt;code&gt;winget install --id Typst.Typst&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you have a &lt;a href="https://rustup.rs/"&gt;Rust&lt;/a&gt; toolchain installed, you can install&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;the latest released Typst version with &lt;code&gt;cargo install --locked typst-cli&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;a development version with &lt;code&gt;cargo install --git https://github.com/typst/typst --locked typst-cli&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Nix users can&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;use the &lt;code&gt;typst&lt;/code&gt; package with &lt;code&gt;nix-shell -p typst&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;build and run a development version with &lt;code&gt;nix run github:typst/typst -- --version&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Docker users can run a prebuilt image with &lt;code&gt;docker run ghcr.io/typst/typst:latest --help&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Once you have installed Typst, you can use it like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Creates `file.pdf` in working directory.
typst compile file.typ

# Creates PDF file at the desired path.
typst compile path/to/source.typ path/to/output.pdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also watch source files and automatically recompile on changes. This is faster than compiling from scratch each time because Typst has incremental compilation.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Watches source files and recompiles on changes.
typst watch file.typ
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Typst further allows you to add custom font paths for your project and list all of the fonts it discovered:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Adds additional directories to search for fonts.
typst compile --font-path path/to/fonts file.typ

# Lists all of the discovered fonts in the system and the given directory.
typst fonts --font-path path/to/fonts

# Or via environment variable (Linux syntax).
TYPST_FONT_PATHS=path/to/fonts typst fonts
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For other CLI subcommands and options, see below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Prints available subcommands and options.
typst help

# Prints detailed usage of a subcommand.
typst help watch
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you prefer an integrated IDE-like experience with autocompletion and instant preview, you can also check out our &lt;a href="https://typst.app/"&gt;free web app&lt;/a&gt;. Alternatively, there is a community-created language server called &lt;a href="https://myriad-dreamin.github.io/tinymist/"&gt;Tinymist&lt;/a&gt; which is integrated into various editor extensions.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The main places where the community gathers are our &lt;a href="https://forum.typst.app/"&gt;Forum&lt;/a&gt; and our &lt;a href="https://discord.gg/2uDybryKPe"&gt;Discord server&lt;/a&gt;. The Forum is a great place to ask questions, help others, and share cool things you created with Typst. The Discord server is more suitable for quicker questions, discussions about contributing, or just to chat. We'd be happy to see you there!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://typst.app/universe/"&gt;Typst Universe&lt;/a&gt; is where the community shares templates and packages. If you want to share your own creations, you can submit them to our &lt;a href="https://github.com/typst/packages/"&gt;package repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you had a bad experience in our community, please &lt;a href="https://typst.app/contact"&gt;reach out to us&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We love to see contributions from the community. If you experience bugs, feel free to open an issue. If you would like to implement a new feature or bug fix, please follow the steps outlined in the &lt;a href="https://github.com/typst/typst/raw/main/CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To build Typst yourself, first ensure that you have the &lt;a href="https://rustup.rs/"&gt;latest stable Rust&lt;/a&gt; installed. Then, clone this repository and build the CLI with the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/typst/typst
cd typst
cargo build --release
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The optimized binary will be stored in &lt;code&gt;target/release/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Another good way to contribute is by &lt;a href="https://github.com/typst/packages/"&gt;sharing packages&lt;/a&gt; with the community.&lt;/p&gt; 
&lt;h2&gt;Pronunciation and Spelling&lt;/h2&gt; 
&lt;p&gt;IPA: /taɪpst/. "Ty" like in &lt;strong&gt;Ty&lt;/strong&gt;pesetting and "pst" like in Hi&lt;strong&gt;pst&lt;/strong&gt;er. When writing about Typst, capitalize its name as a proper noun, with a capital "T".&lt;/p&gt; 
&lt;h2&gt;Design Principles&lt;/h2&gt; 
&lt;p&gt;All of Typst has been designed with three key goals in mind: Power, simplicity, and performance. We think it's time for a system that matches the power of LaTeX, is easy to learn and use, all while being fast enough to realize instant preview. To achieve these goals, we follow three core design principles:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Simplicity through Consistency:&lt;/strong&gt; If you know how to do one thing in Typst, you should be able to transfer that knowledge to other things. If there are multiple ways to do the same thing, one of them should be at a different level of abstraction than the other. E.g. it's okay that &lt;code&gt;= Introduction&lt;/code&gt; and &lt;code&gt;#heading[Introduction]&lt;/code&gt; do the same thing because the former is just syntax sugar for the latter.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Power through Composability:&lt;/strong&gt; There are two ways to make something flexible: Have a knob for everything or have a few knobs that you can combine in many ways. Typst is designed with the second way in mind. We provide systems that you can compose in ways we've never even thought of. TeX is also in the second category, but it's a bit low-level and therefore people use LaTeX instead. But there, we don't really have that much composability. Instead, there's a package for everything (&lt;code&gt;\usepackage{knob}&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Performance through Incrementality:&lt;/strong&gt; All Typst language features must accommodate for incremental compilation. Luckily we have &lt;a href="https://github.com/typst/comemo/"&gt;&lt;code&gt;comemo&lt;/code&gt;&lt;/a&gt;, a system for incremental compilation which does most of the hard work in the background.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;We'd like to thank everyone who is supporting Typst's development, be it via &lt;a href="https://github.com/sponsors/typst/"&gt;GitHub sponsors&lt;/a&gt; or elsewhere. In particular, special thanks[^1] go to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://posit.co/blog/posit-and-typst/"&gt;Posit&lt;/a&gt; for financing a full-time compiler engineer&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nlnet.nl/"&gt;NLnet&lt;/a&gt; for supporting work on Typst via multiple grants through the &lt;a href="https://nlnet.nl/core"&gt;NGI Zero Core&lt;/a&gt; fund: 
  &lt;ul&gt; 
   &lt;li&gt;Work on &lt;a href="https://nlnet.nl/project/Typst-HTML/"&gt;HTML export&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Work on &lt;a href="https://nlnet.nl/project/Typst-Accessibility/"&gt;PDF accessibility&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.science-startups.berlin/"&gt;Science &amp;amp; Startups&lt;/a&gt; for having financed Typst development from January through June 2023 via the Berlin Startup Scholarship&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zerodha.tech/blog/1-5-million-pdfs-in-25-minutes/"&gt;Zerodha&lt;/a&gt; for their generous one-time sponsorship&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;[^1]: This list only includes contributions for our open-source work that exceed or are expected to exceed €10K.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aws/amazon-q-developer-cli</title>
      <link>https://github.com/aws/amazon-q-developer-cli</link>
      <description>&lt;p&gt;✨ Agentic chat experience in your terminal. Build applications using natural language.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Amazon Q CLI&lt;/h1&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;DMG&lt;/strong&gt;: &lt;a href="https://desktop-release.q.us-east-1.amazonaws.com/latest/Amazon%20Q.dmg"&gt;Download now&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;HomeBrew&lt;/strong&gt;: &lt;code&gt;brew install --cask amazon-q &lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-installing.html#command-line-installing-ubuntu"&gt;Ubuntu/Debian&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-installing.html#command-line-installing-appimage"&gt;AppImage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-installing.html#command-line-installing-alternative-linux"&gt;Alternative Linux builds&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Thank you so much for considering to contribute to Amazon Q.&lt;/p&gt; 
&lt;p&gt;Before getting started, see our &lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/CONTRIBUTING.md#security-issue-notifications"&gt;contributing docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;MacOS 
  &lt;ul&gt; 
   &lt;li&gt;Xcode 13 or later&lt;/li&gt; 
   &lt;li&gt;Brew&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;1. Clone repo&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/aws/amazon-q-developer-cli.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;2. Install the Rust toolchain using &lt;a href="https://rustup.rs"&gt;Rustup&lt;/a&gt;:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
rustup default stable
rustup toolchain install nightly
cargo install typos-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;3. Develop locally&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;To compile and run: &lt;code&gt;cargo run --bin chat_cli&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;To run tests: &lt;code&gt;cargo test&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;To run lints: &lt;code&gt;cargo clippy&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;To format rust files: &lt;code&gt;cargo +nightly fmt&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;To run subcommands: &lt;code&gt;cargo run --bin chat_cli -- {subcommand}&lt;/code&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;Login would then be: &lt;code&gt;cargo run --bin chat_cli -- login&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Layout&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/crates/chat-cli/"&gt;&lt;code&gt;chat_cli&lt;/code&gt;&lt;/a&gt; - the &lt;code&gt;q&lt;/code&gt; CLI, allows users to interface with Amazon Q Developer from the command line&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/scripts/"&gt;&lt;code&gt;scripts/&lt;/code&gt;&lt;/a&gt; - Contains ops and build related scripts&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/crates/"&gt;&lt;code&gt;crates/&lt;/code&gt;&lt;/a&gt; - Contains all rust crates&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/docs/"&gt;&lt;code&gt;docs/&lt;/code&gt;&lt;/a&gt; - Contains technical documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For security related concerns, see &lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/SECURITY.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;This repo is dual licensed under MIT and Apache 2.0 licenses.&lt;/p&gt; 
&lt;p&gt;Those licenses can be found &lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/LICENSE.MIT"&gt;here&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/LICENSE.APACHE"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;“Amazon Web Services” and all related marks, including logos, graphic designs, and service names, are trademarks or trade dress of AWS in the U.S. and other countries. AWS’s trademarks and trade dress may not be used in connection with any product or service that is not AWS’s, in any manner that is likely to cause confusion among customers, or in any manner that disparages or discredits AWS.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tree-sitter/tree-sitter</title>
      <link>https://github.com/tree-sitter/tree-sitter</link>
      <description>&lt;p&gt;An incremental parsing system for programming tools&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tree-sitter&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://zenodo.org/badge/latestdoi/14164618"&gt;&lt;img src="https://zenodo.org/badge/14164618.svg?sanitize=true" alt="DOI" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/w7nTvsVJhm"&gt;&lt;img src="https://img.shields.io/discord/1063097320771698699?logo=discord&amp;amp;label=discord" alt="discord" /&gt;&lt;/a&gt; &lt;a href="https://matrix.to/#/#tree-sitter-chat:matrix.org"&gt;&lt;img src="https://img.shields.io/matrix/tree-sitter-chat%3Amatrix.org?logo=matrix&amp;amp;label=matrix" alt="matrix" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Tree-sitter is a parser generator tool and an incremental parsing library. It can build a concrete syntax tree for a source file and efficiently update the syntax tree as the source file is edited. Tree-sitter aims to be:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;General&lt;/strong&gt; enough to parse any programming language&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt; enough to parse on every keystroke in a text editor&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Robust&lt;/strong&gt; enough to provide useful results even in the presence of syntax errors&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dependency-free&lt;/strong&gt; so that the runtime library (which is written in pure C) can be embedded in any application&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://tree-sitter.github.io"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/tree-sitter/tree-sitter/master/lib/binding_rust/README.md"&gt;Rust binding&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/tree-sitter/tree-sitter/master/lib/binding_web/README.md"&gt;Wasm binding&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/tree-sitter/tree-sitter/master/crates/cli/README.md"&gt;Command-line interface&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>solana-labs/solana</title>
      <link>https://github.com/solana-labs/solana</link>
      <description>&lt;p&gt;Web-Scale Blockchain for fast, secure, scalable, decentralized apps and marketplaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PLEASE READ: This repo is now a public archive&lt;/h1&gt; 
&lt;p&gt;This repo still exists in archived form, feel free to fork any reference implementations it still contains.&lt;/p&gt; 
&lt;p&gt;See Agave, the Solana validator implementation from Anza: &lt;a href="https://github.com/anza-xyz/agave"&gt;https://github.com/anza-xyz/agave&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;a href="https://solana.com"&gt; &lt;img alt="Solana" src="https://i.imgur.com/IKyzQ6T.png" width="250" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://crates.io/crates/solana-core"&gt;&lt;img src="https://img.shields.io/crates/v/solana-core.svg?sanitize=true" alt="Solana crate" /&gt;&lt;/a&gt; &lt;a href="https://docs.rs/solana-core"&gt;&lt;img src="https://docs.rs/solana-core/badge.svg?sanitize=true" alt="Solana documentation" /&gt;&lt;/a&gt; &lt;a href="https://buildkite.com/solana-labs/solana/builds?branch=master"&gt;&lt;img src="https://badge.buildkite.com/8cc350de251d61483db98bdfc895b9ea0ac8ffa4a32ee850ed.svg?branch=master" alt="Build status" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/solana-labs/solana"&gt;&lt;img src="https://codecov.io/gh/solana-labs/solana/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Building&lt;/h1&gt; 
&lt;h2&gt;&lt;strong&gt;1. Install rustc, cargo and rustfmt.&lt;/strong&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ curl https://sh.rustup.rs -sSf | sh
$ source $HOME/.cargo/env
$ rustup component add rustfmt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When building the master branch, please make sure you are using the latest stable rust version by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ rustup update
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When building a specific release branch, you should check the rust version in &lt;code&gt;ci/rust-version.sh&lt;/code&gt; and if necessary, install that version by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ rustup install VERSION
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that if this is not the latest rust version on your machine, cargo commands may require an &lt;a href="https://rust-lang.github.io/rustup/overrides.html"&gt;override&lt;/a&gt; in order to use the correct version.&lt;/p&gt; 
&lt;p&gt;On Linux systems you may need to install libssl-dev, pkg-config, zlib1g-dev, protobuf etc.&lt;/p&gt; 
&lt;p&gt;On Ubuntu:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ sudo apt-get update
$ sudo apt-get install libssl-dev libudev-dev pkg-config zlib1g-dev llvm clang cmake make libprotobuf-dev protobuf-compiler
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On Fedora:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ sudo dnf install openssl-devel systemd-devel pkg-config zlib-devel llvm clang cmake make protobuf-devel protobuf-compiler perl-core
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;strong&gt;2. Download the source code.&lt;/strong&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ git clone https://github.com/solana-labs/solana.git
$ cd solana
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;strong&gt;3. Build.&lt;/strong&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ ./cargo build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Testing&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Run the test suite:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ ./cargo test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Starting a local testnet&lt;/h3&gt; 
&lt;p&gt;Start your own testnet locally, instructions are in the &lt;a href="https://docs.solanalabs.com/clusters/benchmark"&gt;online docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Accessing the remote development cluster&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;devnet&lt;/code&gt; - stable public cluster for development accessible via devnet.solana.com. Runs 24/7. Learn more about the &lt;a href="https://docs.solanalabs.com/clusters"&gt;public clusters&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Benchmarking&lt;/h1&gt; 
&lt;p&gt;First, install the nightly build of rustc. &lt;code&gt;cargo bench&lt;/code&gt; requires the use of the unstable features only available in the nightly build.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ rustup install nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the benchmarks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ cargo +nightly bench
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Release Process&lt;/h1&gt; 
&lt;p&gt;The release process for this project is described &lt;a href="https://raw.githubusercontent.com/solana-labs/solana/master/RELEASE.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Code coverage&lt;/h1&gt; 
&lt;p&gt;To generate code coverage statistics:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ scripts/coverage.sh
$ open target/cov/lcov-local/index.html
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Why coverage? While most see coverage as a code quality metric, we see it primarily as a developer productivity metric. When a developer makes a change to the codebase, presumably it's a &lt;em&gt;solution&lt;/em&gt; to some problem. Our unit-test suite is how we encode the set of &lt;em&gt;problems&lt;/em&gt; the codebase solves. Running the test suite should indicate that your change didn't &lt;em&gt;infringe&lt;/em&gt; on anyone else's solutions. Adding a test &lt;em&gt;protects&lt;/em&gt; your solution from future changes. Say you don't understand why a line of code exists, try deleting it and running the unit-tests. The nearest test failure should tell you what problem was solved by that code. If no test fails, go ahead and submit a Pull Request that asks, "what problem is solved by this code?" On the other hand, if a test does fail and you can think of a better way to solve the same problem, a Pull Request with your solution would most certainly be welcome! Likewise, if rewriting a test can better communicate what code it's protecting, please send us that patch!&lt;/p&gt; 
&lt;h1&gt;Disclaimer&lt;/h1&gt; 
&lt;p&gt;All claims, content, designs, algorithms, estimates, roadmaps, specifications, and performance measurements described in this project are done with the Solana Labs, Inc. (“SL”) good faith efforts. It is up to the reader to check and validate their accuracy and truthfulness. Furthermore, nothing in this project constitutes a solicitation for investment.&lt;/p&gt; 
&lt;p&gt;Any content produced by SL or developer resources that SL provides are for educational and inspirational purposes only. SL does not encourage, induce or sanction the deployment, integration or use of any such applications (including the code comprising the Solana blockchain protocol) in violation of applicable laws or regulations and hereby prohibits any such deployment, integration or use. This includes the use of any such applications by the reader (a) in violation of export control or sanctions laws of the United States or any other applicable jurisdiction, (b) if the reader is located in or ordinarily resident in a country or territory subject to comprehensive sanctions administered by the U.S. Office of Foreign Assets Control (OFAC), or (c) if the reader is or is working on behalf of a Specially Designated National (SDN) or a person subject to similar blocking or denied party prohibitions.&lt;/p&gt; 
&lt;p&gt;The reader should be aware that U.S. export control and sanctions laws prohibit U.S. persons (and other persons that are subject to such laws) from transacting with persons in certain countries and territories or that are on the SDN list. Accordingly, there is a risk to individuals that other persons using any of the code contained in this repo, or a derivation thereof, may be sanctioned persons and that transactions with such persons would be a violation of U.S. export controls and sanctions law.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nkaz001/hftbacktest</title>
      <link>https://github.com/nkaz001/hftbacktest</link>
      <description>&lt;p&gt;Free, open source, a high frequency trading and market making backtesting and trading bot, which accounts for limit orders, queue positions, and latencies, utilizing full tick data for trades and order books(Level-2 and Level-3), with real-world crypto trading examples for Binance and Bybit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;=========== HftBacktest&lt;/h1&gt; 
&lt;p&gt;|codeql| |python| |pypi| |downloads| |rustc| |crates| |license| |docs| |roadmap| |github|&lt;/p&gt; 
&lt;h1&gt;High-Frequency Trading Backtesting Tool&lt;/h1&gt; 
&lt;p&gt;This framework is designed for developing high frequency trading and market making strategies. It focuses on accounting for both feed and order latencies, as well as the order queue position for order fill simulation. The framework aims to provide more accurate market replay-based backtesting, based on full order book and trade tick feed data.&lt;/p&gt; 
&lt;h1&gt;Key Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Working in &lt;code&gt;Numba &amp;lt;https://numba.pydata.org/&amp;gt;&lt;/code&gt;_ JIT function (Python).&lt;/li&gt; 
 &lt;li&gt;Complete tick-by-tick simulation with a customizable time interval or based on the feed and order receipt.&lt;/li&gt; 
 &lt;li&gt;Full order book reconstruction based on Level-2 Market-By-Price and Level-3 Market-By-Order feeds.&lt;/li&gt; 
 &lt;li&gt;Backtest accounting for both feed and order latency, using provided models or your own custom model.&lt;/li&gt; 
 &lt;li&gt;Order fill simulation that takes into account the order queue position, using provided models or your own custom model.&lt;/li&gt; 
 &lt;li&gt;Backtesting of multi-asset and multi-exchange models&lt;/li&gt; 
 &lt;li&gt;Deployment of a live trading bot for quick prototyping and testing using the same algorithm code: currently for Binance Futures and Bybit. (Rust-only)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;p&gt;See &lt;code&gt;full document here &amp;lt;https://hftbacktest.readthedocs.io/&amp;gt;&lt;/code&gt;_.&lt;/p&gt; 
&lt;p&gt;Tutorials you’ll likely find interesting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;High-Frequency Grid Trading - Simplified from GLFT &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/High-Frequency%20Grid%20Trading%20-%20Simplified%20from%20GLFT.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Market Making with Alpha - Order Book Imbalance &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Market%20Making%20with%20Alpha%20-%20Order%20Book%20Imbalance.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Market Making with Alpha - APT &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Market%20Making%20with%20Alpha%20-%20APT.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Accelerated Backtesting &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Accelerated%20Backtesting.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Pricing Framework &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Pricing%20Framework.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Why Accurate Backtesting Matters — Not Just Conservative Approach&lt;/h1&gt; 
&lt;p&gt;Trading is a highly competitive field where only the small edges usually exist, but they can still make a significant difference. Because of this, backtesting must accurately simulate real-world conditions.: It should neither rely on an overly pessimistic approach that hides these small edges and profit opportunities, nor on an overly optimistic one that overstates them through unrealistic simulation. Or at the very least, you should clearly understand what differs from live trading and by how much, since sometimes fully accurate backtesting is not practical due to the time it requires.&lt;/p&gt; 
&lt;p&gt;This is not about overfitting at the start—before you even consider issues like overfitting, you need confidence that your backtesting truly reflects real-world execution. For example, if you run a live trading strategy in January 2025, the backtest for that exact period should produce results that closely align with the actual results. Once you’ve validated that your backtesting can accurately reproduce live trading results, then you can proceed to deeper research, optimization, and considerations around overfitting.&lt;/p&gt; 
&lt;p&gt;Accurate backtesting is the foundation. Without it, all further analysis—whether conservative or aggressive—becomes unreliable.&lt;/p&gt; 
&lt;h1&gt;Getting started&lt;/h1&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;hftbacktest supports Python 3.11+. You can install hftbacktest using &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt; 
&lt;p&gt;.. code-block:: console&lt;/p&gt; 
&lt;p&gt;pip install hftbacktest&lt;/p&gt; 
&lt;p&gt;Or you can clone the latest development version from the Git repository with:&lt;/p&gt; 
&lt;p&gt;.. code-block:: console&lt;/p&gt; 
&lt;p&gt;git clone &lt;a href="https://github.com/nkaz001/hftbacktest"&gt;https://github.com/nkaz001/hftbacktest&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Data Source &amp;amp; Format&lt;/h2&gt; 
&lt;p&gt;Please see &lt;code&gt;Data &amp;lt;https://hftbacktest.readthedocs.io/en/latest/data.html&amp;gt;&lt;/code&gt;_ or &lt;code&gt;Data Preparation &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Data%20Preparation.html&amp;gt;&lt;/code&gt;_.&lt;/p&gt; 
&lt;p&gt;You can also find some data &lt;code&gt;here &amp;lt;https://reach.stratosphere.capital/data/usdm/&amp;gt;&lt;/code&gt;_, hosted by the supporter.&lt;/p&gt; 
&lt;h2&gt;A Quick Example&lt;/h2&gt; 
&lt;p&gt;Get a glimpse of what backtesting with hftbacktest looks like with these code snippets:&lt;/p&gt; 
&lt;p&gt;.. code-block:: python&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@njit
def market_making_algo(hbt):
    asset_no = 0
    tick_size = hbt.depth(asset_no).tick_size
    lot_size = hbt.depth(asset_no).lot_size

    # in nanoseconds
    while hbt.elapse(10_000_000) == 0:
        hbt.clear_inactive_orders(asset_no)

        a = 1
        b = 1
        c = 1
        hs = 1

        # Alpha, it can be a combination of several indicators.
        forecast = 0
        # In HFT, it can be various measurements of short-term market movements,
        # such as the high-low range in the last X minutes.
        volatility = 0
        # Delta risk, it can be a combination of several risks.
        position = hbt.position(asset_no)
        risk = (c + volatility) * position
        half_spread = (c + volatility) * hs

        max_notional_position = 1000
        notional_qty = 100

        depth = hbt.depth(asset_no)

        mid_price = (depth.best_bid + depth.best_ask) / 2.0

        # fair value pricing = mid_price + a * forecast
        #                      or underlying(correlated asset) + adjustment(basis + cost + etc) + a * forecast
        # risk skewing = -b * risk
        reservation_price = mid_price + a * forecast - b * risk
        new_bid = reservation_price - half_spread
        new_ask = reservation_price + half_spread

        new_bid_tick = min(np.round(new_bid / tick_size), depth.best_bid_tick)
        new_ask_tick = max(np.round(new_ask / tick_size), depth.best_ask_tick)

        order_qty = np.round(notional_qty / mid_price / lot_size) * lot_size

        # Elapses a process time.
        if not hbt.elapse(1_000_000) != 0:
            return False

        last_order_id = -1
        update_bid = True
        update_ask = True
        buy_limit_exceeded = position * mid_price &amp;gt; max_notional_position
        sell_limit_exceeded = position * mid_price &amp;lt; -max_notional_position
        orders = hbt.orders(asset_no)
        order_values = orders.values()
        while order_values.has_next():
            order = order_values.get()
            if order.side == BUY:
                if order.price_tick == new_bid_tick or buy_limit_exceeded:
                    update_bid = False
                if order.cancellable and (update_bid or buy_limit_exceeded):
                    hbt.cancel(asset_no, order.order_id, False)
                    last_order_id = order.order_id
            elif order.side == SELL:
                if order.price_tick == new_ask_tick or sell_limit_exceeded:
                    update_ask = False
                if order.cancellable and (update_ask or sell_limit_exceeded):
                    hbt.cancel(asset_no, order.order_id, False)
                    last_order_id = order.order_id

        # It can be combined with a grid trading strategy by submitting multiple orders to capture better spreads and
        # have queue position.
        # This approach requires more sophisticated logic to efficiently manage resting orders in the order book.
        if update_bid:
            # There is only one order at a given price, with new_bid_tick used as the order ID.
            order_id = new_bid_tick
            hbt.submit_buy_order(asset_no, order_id, new_bid_tick * tick_size, order_qty, GTX, LIMIT, False)
            last_order_id = order_id
        if update_ask:
            # There is only one order at a given price, with new_ask_tick used as the order ID.
            order_id = new_ask_tick
            hbt.submit_sell_order(asset_no, order_id, new_ask_tick * tick_size, order_qty, GTX, LIMIT, False)
            last_order_id = order_id

        # All order requests are considered to be requested at the same time.
        # Waits until one of the order responses is received.
        if last_order_id &amp;gt;= 0:
            # Waits for the order response for a maximum of 5 seconds.
            timeout = 5_000_000_000
            if not hbt.wait_order_response(asset_no, last_order_id, timeout):
                return False

    return True
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Tutorials&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Data Preparation &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Data%20Preparation.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Getting Started &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Getting%20Started.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Working with Market Depth and Trades &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Working%20with%20Market%20Depth%20and%20Trades.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Integrating Custom Data &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Integrating%20Custom%20Data.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Making Multiple Markets - Introduction &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Making%20Multiple%20Markets%20-%20Introduction.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;High-Frequency Grid Trading &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/High-Frequency%20Grid%20Trading.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;High-Frequency Grid Trading - Comparison Across Other Exchanges &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/High-Frequency%20Grid%20Trading%20-%20Comparison%20Across%20Other%20Exchanges.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;High-Frequency Grid Trading - Simplified from GLFT &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/High-Frequency%20Grid%20Trading%20-%20Simplified%20from%20GLFT.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Impact of Order Latency &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Impact%20of%20Order%20Latency.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Order Latency Data &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Order%20Latency%20Data.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Guéant–Lehalle–Fernandez-Tapia Market Making Model and Grid Trading &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/GLFT%20Market%20Making%20Model%20and%20Grid%20Trading.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Making Multiple Markets &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Making%20Multiple%20Markets.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Risk Mitigation through Price Protection in Extreme Market Conditions &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Risk%20Mitigation%20through%20Price%20Protection%20in%20Extreme%20Market%20Conditions.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Level-3 Backtesting &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Level-3%20Backtesting.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Market Making with Alpha - Order Book Imbalance &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Market%20Making%20with%20Alpha%20-%20Order%20Book%20Imbalance.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Market Making with Alpha - Basis &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Market%20Making%20with%20Alpha%20-%20Basis.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Market Making with Alpha - APT &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Market%20Making%20with%20Alpha%20-%20APT.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Queue-Based Market Making in Large Tick Size Assets &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Queue-Based%20Market%20Making%20in%20Large%20Tick%20Size%20Assets.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Fusing Depth Data &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Fusing%20Depth%20Data.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Accelerated Backtesting &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Accelerated%20Backtesting.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Pricing Framework &amp;lt;https://hftbacktest.readthedocs.io/en/latest/tutorials/Pricing%20Framework.html&amp;gt;&lt;/code&gt;_&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Examples&lt;/h1&gt; 
&lt;p&gt;You can find more examples in &lt;code&gt;examples &amp;lt;https://github.com/nkaz001/hftbacktest/tree/master/examples&amp;gt;&lt;/code&gt;_ directory and &lt;code&gt;Rust examples &amp;lt;https://github.com/nkaz001/hftbacktest/blob/master/hftbacktest/examples/&amp;gt;&lt;/code&gt;_.&lt;/p&gt; 
&lt;h2&gt;The complete process of backtesting Binance Futures&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;high-frequency gridtrading &amp;lt;https://github.com/nkaz001/hftbacktest/blob/master/hftbacktest/examples/gridtrading.ipynb&amp;gt;&lt;/code&gt;_: The complete process of backtesting Binance Futures using a high-frequency grid trading strategy implemented in Rust.&lt;/p&gt; 
&lt;h1&gt;Migration to V2&lt;/h1&gt; 
&lt;p&gt;Please see the &lt;code&gt;migration guide &amp;lt;https://hftbacktest.readthedocs.io/en/latest/migration2.html&amp;gt;&lt;/code&gt;_.&lt;/p&gt; 
&lt;h1&gt;Roadmap&lt;/h1&gt; 
&lt;p&gt;Please see the &lt;code&gt;roadmap &amp;lt;https://github.com/nkaz001/hftbacktest/blob/master/ROADMAP.md&amp;gt;&lt;/code&gt;_.&lt;/p&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;Thank you for considering contributing to hftbacktest! Welcome any and all help to improve the project. If you have an idea for an enhancement or a bug fix, please open an issue or discussion on GitHub to discuss it.&lt;/p&gt; 
&lt;p&gt;The following items are examples of contributions you can make to this project:&lt;/p&gt; 
&lt;p&gt;Please see the &lt;code&gt;roadmap &amp;lt;https://github.com/nkaz001/hftbacktest/blob/master/ROADMAP.md&amp;gt;&lt;/code&gt;_.&lt;/p&gt; 
&lt;p&gt;.. |python| image:: &lt;a href="https://shields.io/badge/python-3.11+-blue"&gt;https://shields.io/badge/python-3.11+-blue&lt;/a&gt; :alt: Python Version :target: &lt;a href="https://www.python.org/"&gt;https://www.python.org/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. |codeql| image:: &lt;a href="https://github.com/nkaz001/hftbacktest/actions/workflows/codeql.yml/badge.svg?branch=master&amp;amp;event=push"&gt;https://github.com/nkaz001/hftbacktest/actions/workflows/codeql.yml/badge.svg?branch=master&amp;amp;event=push&lt;/a&gt; :alt: CodeQL :target: &lt;a href="https://github.com/nkaz001/hftbacktest/actions/workflows/codeql.yml"&gt;https://github.com/nkaz001/hftbacktest/actions/workflows/codeql.yml&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. |pypi| image:: &lt;a href="https://badge.fury.io/py/hftbacktest.svg"&gt;https://badge.fury.io/py/hftbacktest.svg&lt;/a&gt; :alt: Package Version :target: &lt;a href="https://pypi.org/project/hftbacktest"&gt;https://pypi.org/project/hftbacktest&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. |downloads| image:: &lt;a href="https://static.pepy.tech/badge/hftbacktest"&gt;https://static.pepy.tech/badge/hftbacktest&lt;/a&gt; :alt: Downloads :target: &lt;a href="https://pepy.tech/project/hftbacktest"&gt;https://pepy.tech/project/hftbacktest&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. |crates| image:: &lt;a href="https://img.shields.io/crates/v/hftbacktest.svg"&gt;https://img.shields.io/crates/v/hftbacktest.svg&lt;/a&gt; :alt: Rust crates.io version :target: &lt;a href="https://crates.io/crates/hftbacktest"&gt;https://crates.io/crates/hftbacktest&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. |license| image:: &lt;a href="https://img.shields.io/badge/License-MIT-green.svg"&gt;https://img.shields.io/badge/License-MIT-green.svg&lt;/a&gt; :alt: License :target: &lt;a href="https://github.com/nkaz001/hftbacktest/raw/master/LICENSE"&gt;https://github.com/nkaz001/hftbacktest/blob/master/LICENSE&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;.. |docs| image:: &lt;a href="https://readthedocs.org/projects/hftbacktest/badge/?version=latest"&gt;https://readthedocs.org/projects/hftbacktest/badge/?version=latest&lt;/a&gt; :target: &lt;a href="https://hftbacktest.readthedocs.io/en/latest/?badge=latest"&gt;https://hftbacktest.readthedocs.io/en/latest/?badge=latest&lt;/a&gt; :alt: Documentation Status&lt;/p&gt; 
&lt;p&gt;.. |roadmap| image:: &lt;a href="https://img.shields.io/badge/Roadmap-gray"&gt;https://img.shields.io/badge/Roadmap-gray&lt;/a&gt; :target: &lt;a href="https://github.com/nkaz001/hftbacktest/raw/master/ROADMAP.md"&gt;https://github.com/nkaz001/hftbacktest/blob/master/ROADMAP.md&lt;/a&gt; :alt: Roadmap&lt;/p&gt; 
&lt;p&gt;.. |github| image:: &lt;a href="https://img.shields.io/github/stars/nkaz001/hftbacktest?style=social"&gt;https://img.shields.io/github/stars/nkaz001/hftbacktest?style=social&lt;/a&gt; :target: &lt;a href="https://github.com/nkaz001/hftbacktest"&gt;https://github.com/nkaz001/hftbacktest&lt;/a&gt; :alt: Github&lt;/p&gt; 
&lt;p&gt;.. |rustc| image:: &lt;a href="https://shields.io/badge/rustc-1.90-blue"&gt;https://shields.io/badge/rustc-1.90-blue&lt;/a&gt; :alt: Rust Version :target: &lt;a href="https://www.rust-lang.org/"&gt;https://www.rust-lang.org/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alacritty/alacritty</title>
      <link>https://github.com/alacritty/alacritty</link>
      <description>&lt;p&gt;A cross-platform, OpenGL terminal emulator.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img width="200" alt="Alacritty Logo" src="https://raw.githubusercontent.com/alacritty/alacritty/master/extra/logo/compat/alacritty-term%2Bscanlines.png" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Alacritty - A fast, cross-platform, OpenGL terminal emulator&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img alt="Alacritty - A fast, cross-platform, OpenGL terminal emulator" src="https://raw.githubusercontent.com/alacritty/alacritty/master/extra/promo/alacritty-readme.png" /&gt; &lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Alacritty is a modern terminal emulator that comes with sensible defaults, but allows for extensive &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/#configuration"&gt;configuration&lt;/a&gt;. By integrating with other applications, rather than reimplementing their functionality, it manages to provide a flexible set of &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/docs/features.md"&gt;features&lt;/a&gt; with high performance. The supported platforms currently consist of BSD, Linux, macOS and Windows.&lt;/p&gt; 
&lt;p&gt;The software is considered to be at a &lt;strong&gt;beta&lt;/strong&gt; level of readiness; there are a few missing features and bugs to be fixed, but it is already used by many as a daily driver.&lt;/p&gt; 
&lt;p&gt;Precompiled binaries are available from the &lt;a href="https://github.com/alacritty/alacritty/releases"&gt;GitHub releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Join &lt;a href="https://web.libera.chat/gamja/?channels=#alacritty"&gt;&lt;code&gt;#alacritty&lt;/code&gt;&lt;/a&gt; on libera.chat if you have questions or looking for a quick help.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;You can find an overview over the features available in Alacritty &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/docs/features.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Further information&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://jwilm.io/blog/announcing-alacritty/"&gt;Announcing Alacritty, a GPU-Accelerated Terminal Emulator&lt;/a&gt; January 6, 2017&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qHOdYO3WUTk"&gt;A talk about Alacritty at the Rust Meetup January 2017&lt;/a&gt; January 19, 2017&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jwilm.io/blog/alacritty-lands-scrollback/"&gt;Alacritty Lands Scrollback, Publishes Benchmarks&lt;/a&gt; September 17, 2018&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Alacritty can be installed by using various package managers on Linux, BSD, macOS and Windows.&lt;/p&gt; 
&lt;p&gt;Prebuilt binaries for macOS and Windows can also be downloaded from the &lt;a href="https://github.com/alacritty/alacritty/releases"&gt;GitHub releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For everyone else, the detailed instructions to install Alacritty can be found &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/INSTALL.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;At least OpenGL ES 2.0&lt;/li&gt; 
 &lt;li&gt;[Windows] ConPTY support (Windows 10 version 1809 or higher)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;You can find the documentation for Alacritty's configuration in &lt;code&gt;man 5 alacritty&lt;/code&gt;, or by looking at &lt;a href="https://alacritty.org/config-alacritty.html"&gt;the website&lt;/a&gt; if you do not have the manpages installed.&lt;/p&gt; 
&lt;p&gt;Alacritty doesn't create the config file for you, but it looks for one in the following locations:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/alacritty/alacritty.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$XDG_CONFIG_HOME/alacritty.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/.config/alacritty/alacritty.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/.alacritty.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/etc/alacritty/alacritty.toml&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;On Windows, the config file will be looked for in:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;%APPDATA%\alacritty\alacritty.toml&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;A guideline about contributing to Alacritty can be found in the &lt;a href="https://raw.githubusercontent.com/alacritty/alacritty/master/CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Is it really the fastest terminal emulator?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Benchmarking terminal emulators is complicated. Alacritty uses &lt;a href="https://github.com/alacritty/vtebench"&gt;vtebench&lt;/a&gt; to quantify terminal emulator throughput and manages to consistently score better than the competition using it. If you have found an example where this is not the case, please report a bug.&lt;/p&gt; 
&lt;p&gt;Other aspects like latency or framerate and frame consistency are more difficult to quantify. Some terminal emulators also intentionally slow down to save resources, which might be preferred by some users.&lt;/p&gt; 
&lt;p&gt;If you have doubts about Alacritty's performance or usability, the best way to quantify terminal emulators is always to test them with &lt;strong&gt;your&lt;/strong&gt; specific usecases.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Why isn't feature X implemented?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Alacritty has many great features, but not every feature from every other terminal. This could be for a number of reasons, but sometimes it's just not a good fit for Alacritty. This means you won't find things like tabs or splits (which are best left to a window manager or &lt;a href="https://github.com/tmux/tmux"&gt;terminal multiplexer&lt;/a&gt;) nor niceties like a GUI config editor.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Alacritty is released under the &lt;a href="https://github.com/alacritty/alacritty/raw/master/LICENSE-APACHE"&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>servo/servo</title>
      <link>https://github.com/servo/servo</link>
      <description>&lt;p&gt;Servo aims to empower developers with a lightweight, high-performance alternative for embedding web technologies in applications.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Servo Parallel Browser Engine Project&lt;/h1&gt; 
&lt;p&gt;Servo is a prototype web browser engine written in the &lt;a href="https://github.com/rust-lang/rust"&gt;Rust&lt;/a&gt; language. It is currently developed on 64-bit macOS, 64-bit Linux, 64-bit Windows, 64-bit OpenHarmony, and Android.&lt;/p&gt; 
&lt;p&gt;Servo welcomes contribution from everyone. Check out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href="https://book.servo.org"&gt;Servo Book&lt;/a&gt; for documentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://servo.org/"&gt;servo.org&lt;/a&gt; for news and guides&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Coordination of Servo development happens:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Here in the Github Issues&lt;/li&gt; 
 &lt;li&gt;On the &lt;a href="https://servo.zulipchat.com/"&gt;Servo Zulip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;In video calls advertised in the &lt;a href="https://github.com/servo/project/issues"&gt;Servo Project&lt;/a&gt; repo.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;For more detailed build instructions, see the Servo book under &lt;a href="https://book.servo.org/hacking/setting-up-your-environment.html"&gt;Setting up your environment&lt;/a&gt;, &lt;a href="https://book.servo.org/hacking/building-servo.html"&gt;Building Servo&lt;/a&gt;, &lt;a href="https://book.servo.org/hacking/building-for-android.html"&gt;Building for Android&lt;/a&gt; and &lt;a href="https://book.servo.org/hacking/building-for-openharmony.html"&gt;Building for OpenHarmony&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and install &lt;a href="https://developer.apple.com/xcode/"&gt;Xcode&lt;/a&gt; and &lt;a href="https://brew.sh/"&gt;&lt;code&gt;brew&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Install &lt;code&gt;uv&lt;/code&gt;: &lt;code&gt;curl -LsSf https://astral.sh/uv/install.sh | sh&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install &lt;code&gt;rustup&lt;/code&gt;: &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Restart your shell to make sure &lt;code&gt;cargo&lt;/code&gt; is available&lt;/li&gt; 
 &lt;li&gt;Install the other dependencies: &lt;code&gt;./mach bootstrap&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Build servoshell: &lt;code&gt;./mach build&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;code&gt;curl&lt;/code&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Arch: &lt;code&gt;sudo pacman -S --needed curl&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Debian, Ubuntu: &lt;code&gt;sudo apt install curl&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Fedora: &lt;code&gt;sudo dnf install curl&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Gentoo: &lt;code&gt;sudo emerge net-misc/curl&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install &lt;code&gt;uv&lt;/code&gt;: &lt;code&gt;curl -LsSf https://astral.sh/uv/install.sh | sh&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install &lt;code&gt;rustup&lt;/code&gt;: &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Restart your shell to make sure &lt;code&gt;cargo&lt;/code&gt; is available&lt;/li&gt; 
 &lt;li&gt;Install the other dependencies: &lt;code&gt;./mach bootstrap&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Build servoshell: &lt;code&gt;./mach build&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download &lt;a href="https://docs.astral.sh/uv/getting-started/installation/#standalone-installer"&gt;&lt;code&gt;uv&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://chocolatey.org/install#individual"&gt;&lt;code&gt;choco&lt;/code&gt;&lt;/a&gt;, and &lt;a href="https://win.rustup.rs/"&gt;&lt;code&gt;rustup&lt;/code&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Be sure to select &lt;em&gt;Quick install via the Visual Studio Community installer&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;In the Visual Studio Installer, ensure the following components are installed: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Windows 10/11 SDK (anything &amp;gt;= 10.0.19041.0)&lt;/strong&gt; (&lt;code&gt;Microsoft.VisualStudio.Component.Windows{10, 11}SDK.{&amp;gt;=19041}&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;MSVC v143 - VS 2022 C++ x64/x86 build tools (Latest)&lt;/strong&gt; (&lt;code&gt;Microsoft.VisualStudio.Component.VC.Tools.x86.x64&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;C++ ATL for latest v143 build tools (x86 &amp;amp; x64)&lt;/strong&gt; (&lt;code&gt;Microsoft.VisualStudio.Component.VC.ATL&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Restart your shell to make sure &lt;code&gt;cargo&lt;/code&gt; is available&lt;/li&gt; 
 &lt;li&gt;Install the other dependencies: &lt;code&gt;.\mach bootstrap&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Build servoshell: &lt;code&gt;.\mach build&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Android&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ensure that the following environment variables are set: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;ANDROID_SDK_ROOT&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;ANDROID_NDK_ROOT&lt;/code&gt;: &lt;code&gt;$ANDROID_SDK_ROOT/ndk/28.2.13676358/&lt;/code&gt; &lt;code&gt;ANDROID_SDK_ROOT&lt;/code&gt; can be any directory (such as &lt;code&gt;~/android-sdk&lt;/code&gt;). All of the Android build dependencies will be installed there.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Install the latest version of the &lt;a href="https://developer.android.com/studio#command-tools"&gt;Android command-line tools&lt;/a&gt; to &lt;code&gt;$ANDROID_SDK_ROOT/cmdline-tools/latest&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Run the following command to install the necessary components: &lt;pre&gt;&lt;code class="language-shell"&gt;sudo $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --install \
 "build-tools;34.0.0" \
 "emulator" \
 "ndk;28.2.13676358" \
 "platform-tools" \
 "platforms;android-33" \
 "system-images;android-33;google_apis;x86_64"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Follow the instructions above for the platform you are building on&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;OpenHarmony&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow the instructions above for the platform you are building on to prepare the environment.&lt;/li&gt; 
 &lt;li&gt;Depending on the target distribution (e.g. &lt;code&gt;HarmonyOS NEXT&lt;/code&gt; vs pure &lt;code&gt;OpenHarmony&lt;/code&gt;) the build configuration will differ slightly.&lt;/li&gt; 
 &lt;li&gt;Ensure that the following environment variables are set 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;DEVECO_SDK_HOME&lt;/code&gt; (Required when targeting &lt;code&gt;HarmonyOS NEXT&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;OHOS_BASE_SDK_HOME&lt;/code&gt; (Required when targeting &lt;code&gt;OpenHarmony&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;OHOS_SDK_NATIVE&lt;/code&gt; (e.g. &lt;code&gt;${DEVECO_SDK_HOME}/default/openharmony/native&lt;/code&gt; or &lt;code&gt;${OHOS_BASE_SDK_HOME}/${API_VERSION}/native&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;SERVO_OHOS_SIGNING_CONFIG&lt;/code&gt;: Path to json file containing a valid signing configuration for the demo app.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Review the detailed instructions at &lt;a href="https://book.servo.org/hacking/building-for-openharmony.html"&gt;Building for OpenHarmony&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The target distribution can be modified by passing &lt;code&gt;--flavor=&amp;lt;default|harmonyos&amp;gt;&lt;/code&gt; to &lt;code&gt;mach &amp;lt;build|package|install&amp;gt;&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>vectordotdev/vector</title>
      <link>https://github.com/vectordotdev/vector</link>
      <description>&lt;p&gt;A high-performance observability data pipeline.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/vectordotdev/vector/actions/workflows/nightly.yml"&gt;&lt;img src="https://github.com/vectordotdev/vector/actions/workflows/nightly.yml/badge.svg?sanitize=true" alt="Nightly" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vectordotdev/vector/actions/workflows/e2e.yml"&gt;&lt;img src="https://github.com/vectordotdev/vector/actions/workflows/e2e.yml/badge.svg?sanitize=true" alt="E2E Test Suite" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vectordotdev/vector/actions/workflows/component_features.yml"&gt;&lt;img src="https://github.com/vectordotdev/vector/actions/workflows/component_features.yml/badge.svg?sanitize=true" alt="Component Features" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/vectordotdev/vector/master/website/static/img/diagram.svg?sanitize=true" alt="Vector" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt; &lt;a href="https://vector.dev/docs/setup/quickstart/"&gt;Quickstart&lt;/a&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://vector.dev/docs/"&gt;Docs&lt;/a&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://vector.dev/guides/"&gt;Guides&lt;/a&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://vector.dev/components/"&gt;Integrations&lt;/a&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://chat.vector.dev"&gt;Chat&lt;/a&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://vector.dev/releases/latest/download/"&gt;Download&lt;/a&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://rust-doc.vector.dev/"&gt;Rust Crate Docs&lt;/a&gt; &lt;/strong&gt; &lt;/p&gt; 
&lt;h2&gt;What is Vector?&lt;/h2&gt; 
&lt;p&gt;Vector is a high-performance, end-to-end (agent &amp;amp; aggregator) observability data pipeline that puts you in control of your observability data. &lt;a href="https://vector.dev/docs/reference/configuration/sources/"&gt;Collect&lt;/a&gt;, &lt;a href="https://vector.dev/docs/reference/configuration/transforms/"&gt;transform&lt;/a&gt;, and &lt;a href="https://vector.dev/docs/reference/configuration/sinks/"&gt;route&lt;/a&gt; all your logs and metrics to any vendors you want today and any other vendors you may want tomorrow. Vector enables dramatic cost reduction, novel data enrichment, and data security where you need it, not where it is most convenient for your vendors. Additionally, it is open source and up to 10x faster than every alternative in the space.&lt;/p&gt; 
&lt;p&gt;To get started, follow our &lt;a href="https://vector.dev/docs/setup/quickstart/"&gt;&lt;strong&gt;quickstart guide&lt;/strong&gt;&lt;/a&gt; or &lt;a href="https://vector.dev/docs/setup/installation/"&gt;&lt;strong&gt;install Vector&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Vector is maintained by Datadog's &lt;a href="https://opensource.datadoghq.com/about/#the-community-open-source-engineering-team"&gt;Community Open Source Engineering team&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Principles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Reliable&lt;/strong&gt; - Built in &lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt;, Vector's primary design goal is reliability.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;End-to-end&lt;/strong&gt; - Deploys as an &lt;a href="https://vector.dev/docs/setup/deployment/roles/#agent"&gt;agent&lt;/a&gt; or &lt;a href="https://vector.dev/docs/setup/deployment/roles/#aggregator"&gt;aggregator&lt;/a&gt;. Vector is a complete platform.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unified&lt;/strong&gt; - &lt;a href="https://vector.dev/docs/architecture/data-model/log/"&gt;Logs&lt;/a&gt;, &lt;a href="https://vector.dev/docs/architecture/data-model/metric/"&gt;metrics&lt;/a&gt; (beta), and traces (coming soon). One tool for all of your data.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Use cases&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Reduce total observability costs.&lt;/li&gt; 
 &lt;li&gt;Transition vendors without disrupting workflows.&lt;/li&gt; 
 &lt;li&gt;Enhance data quality and improve insights.&lt;/li&gt; 
 &lt;li&gt;Consolidate agents and eliminate agent fatigue.&lt;/li&gt; 
 &lt;li&gt;Improve overall observability performance and reliability.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Vector is relied on by startups and enterprises like &lt;strong&gt;Atlassian&lt;/strong&gt;, &lt;strong&gt;T-Mobile&lt;/strong&gt;, &lt;strong&gt;Comcast&lt;/strong&gt;, &lt;strong&gt;Zendesk&lt;/strong&gt;, &lt;strong&gt;Discord&lt;/strong&gt;, &lt;strong&gt;Fastly&lt;/strong&gt;, &lt;strong&gt;CVS&lt;/strong&gt;, &lt;strong&gt;Trivago&lt;/strong&gt;, &lt;strong&gt;Tuple&lt;/strong&gt;, &lt;strong&gt;Douban&lt;/strong&gt;, &lt;strong&gt;Visa&lt;/strong&gt;, &lt;strong&gt;Mambu&lt;/strong&gt;, &lt;strong&gt;Blockfi&lt;/strong&gt;, &lt;strong&gt;Claranet&lt;/strong&gt;, &lt;strong&gt;Instacart&lt;/strong&gt;, &lt;strong&gt;Forcepoint&lt;/strong&gt;, and &lt;a href="https://github.com/vectordotdev/vector/issues/790"&gt;many more&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Vector is &lt;strong&gt;downloaded over 100,000 times per day&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Vector's largest user &lt;strong&gt;processes over 500TB daily&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Vector has &lt;strong&gt;over 500 contributors&lt;/strong&gt; and growing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;All user documentation is available at &lt;strong&gt;&lt;a href="https://vector.dev/docs"&gt;vector.dev/docs&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Other Resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://calendar.vector.dev"&gt;&lt;strong&gt;Vector Calendar&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Policies&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/vectordotdev/vector/raw/master/CODE_OF_CONDUCT.md"&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/vectordotdev/vector/raw/master/CONTRIBUTING.md"&gt;&lt;strong&gt;Contributing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/vectordotdev/vector/raw/master/PRIVACY.md"&gt;&lt;strong&gt;Privacy&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/vectordotdev/vector/raw/master/RELEASES.md"&gt;&lt;strong&gt;Releases&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/vectordotdev/vector/raw/master/VERSIONING.md"&gt;&lt;strong&gt;Versioning&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/vectordotdev/vector/security/policy"&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Comparisons&lt;/h2&gt; 
&lt;h3&gt;Performance&lt;/h3&gt; 
&lt;p&gt;The following performance tests demonstrate baseline performance between common protocols with the exception of the Regex Parsing test.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Test&lt;/th&gt; 
   &lt;th&gt;Vector&lt;/th&gt; 
   &lt;th&gt;Filebeat&lt;/th&gt; 
   &lt;th&gt;FluentBit&lt;/th&gt; 
   &lt;th&gt;FluentD&lt;/th&gt; 
   &lt;th&gt;Logstash&lt;/th&gt; 
   &lt;th&gt;SplunkUF&lt;/th&gt; 
   &lt;th&gt;SplunkHF&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vectordotdev/vector-test-harness/tree/master/cases/tcp_to_blackhole_performance"&gt;TCP to Blackhole&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;&lt;strong&gt;86mib/s&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
   &lt;td&gt;64.4mib/s&lt;/td&gt; 
   &lt;td&gt;27.7mib/s&lt;/td&gt; 
   &lt;td&gt;40.6mib/s&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vectordotdev/vector-test-harness/tree/master/cases/file_to_tcp_performance"&gt;File to TCP&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;&lt;strong&gt;76.7mib/s&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;7.8mib/s&lt;/td&gt; 
   &lt;td&gt;35mib/s&lt;/td&gt; 
   &lt;td&gt;26.1mib/s&lt;/td&gt; 
   &lt;td&gt;3.1mib/s&lt;/td&gt; 
   &lt;td&gt;40.1mib/s&lt;/td&gt; 
   &lt;td&gt;39mib/s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vectordotdev/vector-test-harness/tree/master/cases/regex_parsing_performance"&gt;Regex Parsing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;13.2mib/s&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;&lt;strong&gt;20.5mib/s&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;2.6mib/s&lt;/td&gt; 
   &lt;td&gt;4.6mib/s&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
   &lt;td&gt;7.8mib/s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vectordotdev/vector-test-harness/tree/master/cases/tcp_to_http_performance"&gt;TCP to HTTP&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;&lt;strong&gt;26.7mib/s&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
   &lt;td&gt;19.6mib/s&lt;/td&gt; 
   &lt;td&gt;&amp;lt;1mib/s&lt;/td&gt; 
   &lt;td&gt;2.7mib/s&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
   &lt;td&gt;n/a&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vectordotdev/vector-test-harness/tree/master/cases/tcp_to_tcp_performance"&gt;TCP to TCP&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;69.9mib/s&lt;/td&gt; 
   &lt;td&gt;5mib/s&lt;/td&gt; 
   &lt;td&gt;67.1mib/s&lt;/td&gt; 
   &lt;td&gt;3.9mib/s&lt;/td&gt; 
   &lt;td&gt;10mib/s&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;&lt;strong&gt;70.4mib/s&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;7.6mib/s&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;To learn more about our performance tests, please see the &lt;a href="https://github.com/vectordotdev/vector-test-harness/"&gt;Vector test harness&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Correctness&lt;/h3&gt; 
&lt;p&gt;The following correctness tests are not exhaustive, but they demonstrate fundamental differences in quality and attention to detail:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Test&lt;/th&gt; 
   &lt;th&gt;Vector&lt;/th&gt; 
   &lt;th&gt;Filebeat&lt;/th&gt; 
   &lt;th&gt;FluentBit&lt;/th&gt; 
   &lt;th&gt;FluentD&lt;/th&gt; 
   &lt;th&gt;Logstash&lt;/th&gt; 
   &lt;th&gt;Splunk UF&lt;/th&gt; 
   &lt;th&gt;Splunk HF&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vectordotdev/vector-test-harness/tree/master/cases/disk_buffer_persistence_correctness"&gt;Disk Buffer Persistence&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;⚠&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vectordotdev/vector-test-harness/tree/master/cases/file_rotate_create_correctness"&gt;File Rotate (create)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vectordotdev/vector-test-harness/tree/master/cases/file_rotate_truncate_correctness"&gt;File Rotate (copytruncate)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vectordotdev/vector-test-harness/tree/master/cases/file_truncate_correctness"&gt;File Truncation&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vectordotdev/vector-test-harness/tree/master/cases/sighup_correctness"&gt;Process (SIGHUP)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;⚠&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vectordotdev/vector-test-harness/tree/master/cases/wrapped_json_correctness"&gt;JSON (wrapped)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;To learn more about our correctness tests, please see the &lt;a href="https://github.com/vectordotdev/vector-test-harness/"&gt;Vector test harness&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;p&gt;Vector is an end-to-end, unified, open data platform.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Vector&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;Beats&lt;/th&gt; 
   &lt;th&gt;Fluentbit&lt;/th&gt; 
   &lt;th&gt;Fluentd&lt;/th&gt; 
   &lt;th&gt;Logstash&lt;/th&gt; 
   &lt;th&gt;Splunk UF&lt;/th&gt; 
   &lt;th&gt;Splunk HF&lt;/th&gt; 
   &lt;th&gt;Telegraf&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;End-to-end&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Agent&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Aggregator&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Unified&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Logs&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Metrics&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;⚠&lt;/td&gt; 
   &lt;td&gt;⚠&lt;/td&gt; 
   &lt;td&gt;⚠&lt;/td&gt; 
   &lt;td&gt;⚠&lt;/td&gt; 
   &lt;td&gt;⚠&lt;/td&gt; 
   &lt;td&gt;⚠&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Traces&lt;/td&gt; 
   &lt;td&gt;🚧&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Open&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Open-source&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Vendor-neutral&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Reliability&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Memory-safe&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Delivery guarantees&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multi-core&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;✓&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
   &lt;td&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;⚠ = Not interoperable, metrics are represented as structured logs&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; Developed with ❤️ by &lt;strong&gt;&lt;a href="https://datadoghq.com"&gt;Datadog&lt;/a&gt;&lt;/strong&gt; - &lt;a href="https://github.com/vectordotdev/vector/security/policy"&gt;Security Policy&lt;/a&gt; - &lt;a href="https://github.com/vectordotdev/vector/raw/master/PRIVACY.md"&gt;Privacy Policy&lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tokio-rs/tokio</title>
      <link>https://github.com/tokio-rs/tokio</link>
      <description>&lt;p&gt;A runtime for writing reliable asynchronous applications with Rust. Provides I/O, networking, scheduling, timers, ...&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tokio&lt;/h1&gt; 
&lt;p&gt;A runtime for writing reliable, asynchronous, and slim applications with the Rust programming language. It is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Tokio's zero-cost abstractions give you bare-metal performance.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reliable&lt;/strong&gt;: Tokio leverages Rust's ownership, type system, and concurrency model to reduce bugs and ensure thread safety.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Tokio has a minimal footprint, and handles backpressure and cancellation naturally.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://crates.io/crates/tokio"&gt;&lt;img src="https://img.shields.io/crates/v/tokio.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tokio-rs/tokio/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="MIT licensed" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tokio-rs/tokio/actions?query=workflow%3ACI+branch%3Amaster"&gt;&lt;img src="https://github.com/tokio-rs/tokio/workflows/CI/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/tokio"&gt;&lt;img src="https://img.shields.io/discord/500028886025895936.svg?logo=discord&amp;amp;style=flat-square" alt="Discord chat" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://tokio.rs"&gt;Website&lt;/a&gt; | &lt;a href="https://tokio.rs/tokio/tutorial"&gt;Guides&lt;/a&gt; | &lt;a href="https://docs.rs/tokio/latest/tokio"&gt;API Docs&lt;/a&gt; | &lt;a href="https://discord.gg/tokio"&gt;Chat&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Tokio is an event-driven, non-blocking I/O platform for writing asynchronous applications with the Rust programming language. At a high level, it provides a few major components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A multithreaded, work-stealing based task &lt;a href="https://docs.rs/tokio/latest/tokio/runtime/index.html"&gt;scheduler&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;A reactor backed by the operating system's event queue (epoll, kqueue, IOCP, etc.).&lt;/li&gt; 
 &lt;li&gt;Asynchronous &lt;a href="https://docs.rs/tokio/latest/tokio/net/index.html"&gt;TCP and UDP&lt;/a&gt; sockets.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These components provide the runtime components necessary for building an asynchronous application.&lt;/p&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;A basic TCP echo server with Tokio.&lt;/p&gt; 
&lt;p&gt;Make sure you activated the full features of the tokio crate on Cargo.toml:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[dependencies]
tokio = { version = "1.48.0", features = ["full"] }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, on your main.rs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust,no_run"&gt;use tokio::net::TcpListener;
use tokio::io::{AsyncReadExt, AsyncWriteExt};

#[tokio::main]
async fn main() -&amp;gt; Result&amp;lt;(), Box&amp;lt;dyn std::error::Error&amp;gt;&amp;gt; {
    let listener = TcpListener::bind("127.0.0.1:8080").await?;

    loop {
        let (mut socket, _) = listener.accept().await?;

        tokio::spawn(async move {
            let mut buf = [0; 1024];

            // In a loop, read data from the socket and write the data back.
            loop {
                let n = match socket.read(&amp;amp;mut buf).await {
                    // socket closed
                    Ok(0) =&amp;gt; return,
                    Ok(n) =&amp;gt; n,
                    Err(e) =&amp;gt; {
                        eprintln!("failed to read from socket; err = {:?}", e);
                        return;
                    }
                };

                // Write the data back
                if let Err(e) = socket.write_all(&amp;amp;buf[0..n]).await {
                    eprintln!("failed to write to socket; err = {:?}", e);
                    return;
                }
            }
        });
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More examples can be found &lt;a href="https://github.com/tokio-rs/tokio/tree/master/examples"&gt;here&lt;/a&gt;. For a larger "real world" example, see the &lt;a href="https://github.com/tokio-rs/mini-redis/"&gt;mini-redis&lt;/a&gt; repository.&lt;/p&gt; 
&lt;p&gt;To see a list of the available features flags that can be enabled, check our &lt;a href="https://docs.rs/tokio/#feature-flags"&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Help&lt;/h2&gt; 
&lt;p&gt;First, see if the answer to your question can be found in the &lt;a href="https://tokio.rs/tokio/tutorial"&gt;Guides&lt;/a&gt; or the &lt;a href="https://docs.rs/tokio/latest/tokio"&gt;API documentation&lt;/a&gt;. If the answer is not there, there is an active community in the &lt;a href="https://discord.gg/tokio"&gt;Tokio Discord server&lt;/a&gt;. We would be happy to try to answer your question. You can also ask your question on &lt;a href="https://github.com/tokio-rs/tokio/discussions"&gt;the discussions page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;🎈&lt;/span&gt; Thanks for your help improving the project! We are so happy to have you! We have a &lt;a href="https://github.com/tokio-rs/tokio/raw/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to help you get involved in the Tokio project.&lt;/p&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;p&gt;In addition to the crates in this repository, the Tokio project also maintains several other libraries, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/tokio-rs/axum"&gt;&lt;code&gt;axum&lt;/code&gt;&lt;/a&gt;: A web application framework that focuses on ergonomics and modularity.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/hyperium/hyper"&gt;&lt;code&gt;hyper&lt;/code&gt;&lt;/a&gt;: A fast and correct HTTP/1.1 and HTTP/2 implementation for Rust.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/hyperium/tonic"&gt;&lt;code&gt;tonic&lt;/code&gt;&lt;/a&gt;: A gRPC over HTTP/2 implementation focused on high performance, interoperability, and flexibility.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/seanmonstar/warp"&gt;&lt;code&gt;warp&lt;/code&gt;&lt;/a&gt;: A super-easy, composable, web server framework for warp speeds.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/tower-rs/tower"&gt;&lt;code&gt;tower&lt;/code&gt;&lt;/a&gt;: A library of modular and reusable components for building robust networking clients and servers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/tokio-rs/tracing"&gt;&lt;code&gt;tracing&lt;/code&gt;&lt;/a&gt; (formerly &lt;code&gt;tokio-trace&lt;/code&gt;): A framework for application-level tracing and async-aware diagnostics.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/tokio-rs/mio"&gt;&lt;code&gt;mio&lt;/code&gt;&lt;/a&gt;: A low-level, cross-platform abstraction over OS I/O APIs that powers &lt;code&gt;tokio&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/tokio-rs/bytes"&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;: Utilities for working with bytes, including efficient byte buffers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/tokio-rs/loom"&gt;&lt;code&gt;loom&lt;/code&gt;&lt;/a&gt;: A testing tool for concurrent Rust code.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;The Tokio repository contains multiple crates. Each crate has its own changelog.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;tokio&lt;/code&gt; - &lt;a href="https://github.com/tokio-rs/tokio/raw/master/tokio/CHANGELOG.md"&gt;view changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tokio-util&lt;/code&gt; - &lt;a href="https://github.com/tokio-rs/tokio/raw/master/tokio-util/CHANGELOG.md"&gt;view changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tokio-stream&lt;/code&gt; - &lt;a href="https://github.com/tokio-rs/tokio/raw/master/tokio-stream/CHANGELOG.md"&gt;view changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tokio-macros&lt;/code&gt; - &lt;a href="https://github.com/tokio-rs/tokio/raw/master/tokio-macros/CHANGELOG.md"&gt;view changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tokio-test&lt;/code&gt; - &lt;a href="https://github.com/tokio-rs/tokio/raw/master/tokio-test/CHANGELOG.md"&gt;view changelog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Rust Versions&lt;/h2&gt; 
&lt;!--
When updating this, also update:
- .github/workflows/ci.yml
- CONTRIBUTING.md
- README.md
- tokio/README.md
- tokio/Cargo.toml
- tokio-util/Cargo.toml
- tokio-test/Cargo.toml
- tokio-stream/Cargo.toml
--&gt; 
&lt;p&gt;Tokio will keep a rolling MSRV (minimum supported rust version) policy of &lt;strong&gt;at least&lt;/strong&gt; 6 months. When increasing the MSRV, the new Rust version must have been released at least six months ago. The current MSRV is 1.71.&lt;/p&gt; 
&lt;p&gt;Note that the MSRV is not increased automatically, and only as part of a minor release. The MSRV history for past minor releases can be found below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;1.48 to now - Rust 1.71&lt;/li&gt; 
 &lt;li&gt;1.39 to 1.47 - Rust 1.70&lt;/li&gt; 
 &lt;li&gt;1.30 to 1.38 - Rust 1.63&lt;/li&gt; 
 &lt;li&gt;1.27 to 1.29 - Rust 1.56&lt;/li&gt; 
 &lt;li&gt;1.17 to 1.26 - Rust 1.49&lt;/li&gt; 
 &lt;li&gt;1.15 to 1.16 - Rust 1.46&lt;/li&gt; 
 &lt;li&gt;1.0 to 1.14 - Rust 1.45&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that although we try to avoid the situation where a dependency transitively increases the MSRV of Tokio, we do not guarantee that this does not happen. However, every minor release will have some set of versions of dependencies that works with the MSRV of that minor release.&lt;/p&gt; 
&lt;h2&gt;Release schedule&lt;/h2&gt; 
&lt;p&gt;Tokio doesn't follow a fixed release schedule, but we typically make one minor release each month. We make patch releases for bugfixes as necessary.&lt;/p&gt; 
&lt;h2&gt;Bug patching policy&lt;/h2&gt; 
&lt;p&gt;For the purposes of making patch releases with bugfixes, we have designated certain minor releases as LTS (long term support) releases. Whenever a bug warrants a patch release with a fix for the bug, it will be backported and released as a new patch release for each LTS minor version. Our current LTS releases are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;1.43.x&lt;/code&gt; - LTS release until March 2026. (MSRV 1.70)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.47.x&lt;/code&gt; - LTS release until September 2026. (MSRV 1.70)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each LTS release will continue to receive backported fixes for at least a year. If you wish to use a fixed minor release in your project, we recommend that you use an LTS release.&lt;/p&gt; 
&lt;p&gt;To use a fixed minor version, you can specify the version with a tilde. For example, to specify that you wish to use the newest &lt;code&gt;1.43.x&lt;/code&gt; patch release, you can use the following dependency specification:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;tokio = { version = "~1.43", features = [...] }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Previous LTS releases&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;1.8.x&lt;/code&gt; - LTS release until February 2022.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.14.x&lt;/code&gt; - LTS release until June 2022.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.18.x&lt;/code&gt; - LTS release until June 2023.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.20.x&lt;/code&gt; - LTS release until September 2023.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.25.x&lt;/code&gt; - LTS release until March 2024.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.32.x&lt;/code&gt; - LTS release until September 2024.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.36.x&lt;/code&gt; - LTS release until March 2025.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;1.38.x&lt;/code&gt; - LTS release until July 2025.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://github.com/tokio-rs/tokio/raw/master/LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contribution&lt;/h3&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Tokio by you, shall be licensed as MIT, without any additional terms or conditions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>starship/starship</title>
      <link>https://github.com/starship/starship</link>
      <description>&lt;p&gt;☄🌌️ The minimal, blazing-fast, and infinitely customizable prompt for any shell!&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img width="400" src="https://raw.githubusercontent.com/starship/starship/master/media/logo.png" alt="Starship – Cross-shell prompt" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/starship/starship/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/starship/starship/workflow.yml?branch=master&amp;amp;label=workflow&amp;amp;style=flat-square" alt="GitHub Actions workflow status" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/starship"&gt;&lt;img src="https://img.shields.io/crates/v/starship?style=flat-square" alt="Crates.io version" /&gt;&lt;/a&gt; &lt;a href="https://repology.org/project/starship/versions"&gt;&lt;img src="https://img.shields.io/repology/repositories/starship?label=in%20repositories&amp;amp;style=flat-square" alt="Packaging status" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="https://discord.gg/starship"&gt;&lt;img src="https://img.shields.io/discord/567163873606500352?label=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Chat on Discord" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/StarshipPrompt"&gt;&lt;img src="https://img.shields.io/badge/twitter-@StarshipPrompt-1DA1F3?style=flat-square" alt="Follow @StarshipPrompt on Twitter" /&gt;&lt;/a&gt; &lt;a href="https://stand-with-ukraine.pp.ua"&gt;&lt;img src="https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/badges/StandWithUkraineFlat.svg?sanitize=true" alt="Stand With Ukraine" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://starship.rs"&gt;Website&lt;/a&gt; · &lt;a href="#🚀-installation"&gt;Installation&lt;/a&gt; · &lt;a href="https://starship.rs/config/"&gt;Configuration&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/starship/starship/raw/master/README.md"&gt;&lt;img height="20" src="https://raw.githubusercontent.com/starship/starship/master/media/flag-us.png" alt="English" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/starship/starship/raw/master/docs/de-DE/guide/README.md"&gt;&lt;img height="20" src="https://raw.githubusercontent.com/starship/starship/master/media/flag-de.png" alt="Deutsch" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/starship/starship/raw/master/docs/es-ES/guide/README.md"&gt;&lt;img height="20" src="https://raw.githubusercontent.com/starship/starship/master/media/flag-es.png" alt="Español" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/starship/starship/raw/master/docs/fr-FR/guide/README.md"&gt;&lt;img height="20" src="https://raw.githubusercontent.com/starship/starship/master/media/flag-fr.png" alt="Français" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/starship/starship/raw/master/docs/id-ID/guide/README.md"&gt;&lt;img height="20" src="https://raw.githubusercontent.com/starship/starship/master/media/flag-id.png" alt="Bahasa Indonesia" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/starship/starship/raw/master/docs/it-IT/guide/README.md"&gt;&lt;img height="20" src="https://raw.githubusercontent.com/starship/starship/master/media/flag-it.png" alt="Italiano" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/starship/starship/raw/master/docs/ja-JP/guide/README.md"&gt;&lt;img height="20" src="https://raw.githubusercontent.com/starship/starship/master/media/flag-jp.png" alt="日本語" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/starship/starship/raw/master/docs/pt-BR/guide/README.md"&gt;&lt;img height="20" src="https://raw.githubusercontent.com/starship/starship/master/media/flag-br.png" alt="Português do Brasil" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/starship/starship/raw/master/docs/ru-RU/guide/README.md"&gt;&lt;img height="20" src="https://raw.githubusercontent.com/starship/starship/master/media/flag-ru.png" alt="Русский" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/starship/starship/raw/master/docs/uk-UA/guide/README.md"&gt;&lt;img height="20" src="https://raw.githubusercontent.com/starship/starship/master/media/flag-ua.png" alt="Українська" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/starship/starship/raw/master/docs/vi-VN/guide/README.md"&gt;&lt;img height="20" src="https://raw.githubusercontent.com/starship/starship/master/media/flag-vn.png" alt="Tiếng Việt" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/starship/starship/raw/master/docs/zh-CN/guide/README.md"&gt;&lt;img height="20" src="https://raw.githubusercontent.com/starship/starship/master/media/flag-cn.png" alt="简体中文" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/starship/starship/raw/master/docs/zh-TW/guide/README.md"&gt;&lt;img height="20" src="https://raw.githubusercontent.com/starship/starship/master/media/flag-tw.png" alt="繁體中文" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/starship/starship/master/media/demo.gif" alt="Starship with iTerm2 and the Snazzy theme" width="50%" align="right" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The minimal, blazing-fast, and infinitely customizable prompt for any shell!&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Fast:&lt;/strong&gt; it's fast – &lt;em&gt;really really&lt;/em&gt; fast! 🚀&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customizable:&lt;/strong&gt; configure every aspect of your prompt.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Universal:&lt;/strong&gt; works on any shell, on any operating system.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Intelligent:&lt;/strong&gt; shows relevant information at a glance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Feature rich:&lt;/strong&gt; support for all your favorite tools.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy:&lt;/strong&gt; quick to install –&amp;nbsp;start using it in minutes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;a href="https://starship.rs/config/"&gt;&lt;strong&gt;Explore the Starship docs&amp;nbsp;&amp;nbsp;▶&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a name="🚀-installation"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Installation&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;a href="https://www.nerdfonts.com/"&gt;Nerd Font&lt;/a&gt; installed and enabled in your terminal (for example, try the &lt;a href="https://www.nerdfonts.com/font-downloads"&gt;FiraCode Nerd Font&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Step 1. Install Starship&lt;/h3&gt; 
&lt;p&gt;Select your operating system from the list below to view installation instructions:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Android&lt;/summary&gt; 
 &lt;p&gt;Install Starship using any of the following package managers:&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Repository&lt;/th&gt; 
    &lt;th&gt;Instructions&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href="https://github.com/termux/termux-packages/tree/master/packages/starship"&gt;Termux&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;pkg install starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;BSD&lt;/summary&gt; 
 &lt;p&gt;Install Starship using any of the following package managers:&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Distribution&lt;/th&gt; 
    &lt;th&gt;Repository&lt;/th&gt; 
    &lt;th&gt;Instructions&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;strong&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;strong&gt;&lt;a href="https://crates.io/crates/starship"&gt;crates.io&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;cargo install starship --locked&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;FreeBSD&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://www.freshports.org/shells/starship"&gt;FreshPorts&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;pkg install starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;NetBSD&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://pkgsrc.se/shells/starship"&gt;pkgsrc&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;pkgin install starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Linux&lt;/summary&gt; 
 &lt;p&gt;Install the latest version for your system:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;curl -sS https://starship.rs/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Alternatively, install Starship using any of the following package managers:&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Distribution&lt;/th&gt; 
    &lt;th&gt;Repository&lt;/th&gt; 
    &lt;th&gt;Instructions&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;strong&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;strong&gt;&lt;a href="https://crates.io/crates/starship"&gt;crates.io&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;cargo install starship --locked&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://anaconda.org/conda-forge/starship"&gt;conda-forge&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;conda install -c conda-forge starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;em&gt;Any&lt;/em&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://formulae.brew.sh/formula/starship"&gt;Linuxbrew&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;brew install starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Alpine Linux 3.13+&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://pkgs.alpinelinux.org/packages?name=starship"&gt;Alpine Linux Packages&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;apk add starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Arch Linux&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://archlinux.org/packages/extra/x86_64/starship"&gt;Arch Linux Extra&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;pacman -S starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;CentOS 7+&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://copr.fedorainfracloud.org/coprs/atim/starship"&gt;Copr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;dnf copr enable atim/starship&lt;/code&gt; &lt;br /&gt; &lt;code&gt;dnf install starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Debian 13+&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://sources.debian.org/src/starship/1.22.1-1/"&gt;Debian Main&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;apt install starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Fedora 40+&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://copr.fedorainfracloud.org/coprs/atim/starship"&gt;Copr&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;dnf copr enable atim/starship&lt;/code&gt; &lt;br /&gt; &lt;code&gt;dnf install starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Gentoo&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://packages.gentoo.org/packages/app-shells/starship"&gt;Gentoo Packages&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;emerge app-shells/starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Manjaro&lt;/td&gt; 
    &lt;td&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;pacman -S starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;NixOS&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://github.com/NixOS/nixpkgs/raw/master/pkgs/by-name/st/starship/package.nix"&gt;nixpkgs&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;nix-env -iA nixpkgs.starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;openSUSE&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://software.opensuse.org/package/starship"&gt;OSS&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;zypper in starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Ubuntu 25.04+&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://packages.ubuntu.com/source/plucky/starship"&gt;Ubuntu Universe&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;apt install starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Void Linux&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://github.com/void-linux/void-packages/tree/master/srcpkgs/starship"&gt;Void Linux Packages&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;xbps-install -S starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;macOS&lt;/summary&gt; 
 &lt;p&gt;Install the latest version for your system:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;curl -sS https://starship.rs/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Alternatively, install Starship using any of the following package managers:&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Repository&lt;/th&gt; 
    &lt;th&gt;Instructions&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;strong&gt;&lt;a href="https://crates.io/crates/starship"&gt;crates.io&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;cargo install starship --locked&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href="https://anaconda.org/conda-forge/starship"&gt;conda-forge&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;conda install -c conda-forge starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href="https://formulae.brew.sh/formula/starship"&gt;Homebrew&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;brew install starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href="https://ports.macports.org/port/starship"&gt;MacPorts&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;port install starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Windows&lt;/summary&gt; 
 &lt;p&gt;Install the latest version for your system with the MSI-installers from the &lt;a href="https://github.com/starship/starship/releases/latest"&gt;releases section&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;Install Starship using any of the following package managers:&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Repository&lt;/th&gt; 
    &lt;th&gt;Instructions&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;strong&gt;&lt;a href="https://crates.io/crates/starship"&gt;crates.io&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;cargo install starship --locked&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href="https://community.chocolatey.org/packages/starship"&gt;Chocolatey&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;choco install starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href="https://anaconda.org/conda-forge/starship"&gt;conda-forge&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;conda install -c conda-forge starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href="https://github.com/ScoopInstaller/Main/raw/master/bucket/starship.json"&gt;Scoop&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;scoop install starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href="https://github.com/microsoft/winget-pkgs/tree/master/manifests/s/Starship/Starship"&gt;winget&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;winget install --id Starship.Starship&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h3&gt;Step 2. Set up your shell to use Starship&lt;/h3&gt; 
&lt;p&gt;Configure your shell to initialize starship. Select yours from the list below:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Bash&lt;/summary&gt; 
 &lt;p&gt;Add the following to the end of &lt;code&gt;~/.bashrc&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;eval "$(starship init bash)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Cmd&lt;/summary&gt; 
 &lt;p&gt;You need to use &lt;a href="https://chrisant996.github.io/clink/clink.html"&gt;Clink&lt;/a&gt; (v1.2.30+) with Cmd. Create a file at this path &lt;code&gt;%LocalAppData%\clink\starship.lua&lt;/code&gt; with the following contents:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-lua"&gt;load(io.popen('starship init cmd'):read("*a"))()
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Elvish&lt;/summary&gt; 
 &lt;p&gt;Add the following to the end of &lt;code&gt;~/.elvish/rc.elv&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;eval (starship init elvish)
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Note: Only Elvish v0.18+ is supported&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Fish&lt;/summary&gt; 
 &lt;p&gt;Add the following to the end of &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-fish"&gt;starship init fish | source
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Ion&lt;/summary&gt; 
 &lt;p&gt;Add the following to the end of &lt;code&gt;~/.config/ion/initrc&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;eval $(starship init ion)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Nushell&lt;/summary&gt; 
 &lt;p&gt;Add the following to the end of your Nushell configuration (find it by running &lt;code&gt;$nu.config-path&lt;/code&gt; in Nushell):&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;mkdir ($nu.data-dir | path join "vendor/autoload")
starship init nu | save -f ($nu.data-dir | path join "vendor/autoload/starship.nu")
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Note: Only Nushell v0.96+ is supported&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;PowerShell&lt;/summary&gt; 
 &lt;p&gt;Add the following to the end of your PowerShell configuration (find it by running &lt;code&gt;$PROFILE&lt;/code&gt;):&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-powershell"&gt;Invoke-Expression (&amp;amp;starship init powershell)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Tcsh&lt;/summary&gt; 
 &lt;p&gt;Add the following to the end of &lt;code&gt;~/.tcshrc&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;eval `starship init tcsh`
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Xonsh&lt;/summary&gt; 
 &lt;p&gt;Add the following to the end of &lt;code&gt;~/.xonshrc&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;execx($(starship init xonsh))
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Zsh&lt;/summary&gt; 
 &lt;p&gt;Add the following to the end of &lt;code&gt;~/.zshrc&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;eval "$(starship init zsh)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Step 3. Configure Starship&lt;/h3&gt; 
&lt;p&gt;Start a new shell instance, and you should see your beautiful new shell prompt. If you're happy with the defaults, enjoy!&lt;/p&gt; 
&lt;p&gt;If you're looking to further customize Starship:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://starship.rs/config/"&gt;Configuration&lt;/a&gt;&lt;/strong&gt; – learn how to configure Starship to tweak your prompt to your liking&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://starship.rs/presets/"&gt;Presets&lt;/a&gt;&lt;/strong&gt; – get inspired by the pre-built configuration of others&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We are always looking for contributors of &lt;strong&gt;all skill levels&lt;/strong&gt;! If you're looking to ease your way into the project, try out a &lt;a href="https://github.com/starship/starship/labels/%22%F0%9F%8C%B1%20good%20first%20issue%22"&gt;good first issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are fluent in a non-English language, we greatly appreciate any help keeping our docs translated and up-to-date in other languages. If you would like to help, translations can be contributed on the &lt;a href="https://translate.starship.rs/"&gt;Starship Crowdin&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are interested in helping contribute to starship, please take a look at our &lt;a href="https://github.com/starship/starship/raw/master/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;. Also, feel free to drop into our &lt;a href="https://discord.gg/8Jzqu3T"&gt;Discord server&lt;/a&gt; and say hi. 👋&lt;/p&gt; 
&lt;h2&gt;💭 Inspired By&lt;/h2&gt; 
&lt;p&gt;Please check out these previous works that helped inspire the creation of starship. 🙏&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/denysdovhan/spaceship-prompt"&gt;denysdovhan/spaceship-prompt&lt;/a&gt;&lt;/strong&gt; – A ZSH prompt for astronauts.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/denysdovhan/robbyrussell-node"&gt;denysdovhan/robbyrussell-node&lt;/a&gt;&lt;/strong&gt; – Cross-shell robbyrussell theme written in JavaScript.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/reujab/silver"&gt;reujab/silver&lt;/a&gt;&lt;/strong&gt; – A cross-shell customizable powerline-like prompt with icons.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;❤️ Sponsors&lt;/h2&gt; 
&lt;p&gt;Support this project by &lt;a href="https://github.com/sponsors/starship"&gt;becoming a sponsor&lt;/a&gt;. Your name or logo will show up here with a link to your website.&lt;/p&gt; 
&lt;h2&gt;🔒 Code Signing Policy&lt;/h2&gt; 
&lt;p&gt;Free code signing provided by &lt;a href="https://signpath.io"&gt;SignPath.io&lt;/a&gt;, certificate by &lt;a href="https://signpath.org"&gt;SignPath Foundation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Code Signing Roles:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Reviewers: &lt;a href="https://github.com/orgs/starship/teams/astronauts"&gt;Astronauts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Approvers and Authors: &lt;a href="https://github.com/orgs/starship/teams/mission-control"&gt;Mission Control&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This program will not transfer any information to other networked systems unless specifically requested by the user or the person installing or operating it.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;br /&gt; &lt;img width="100" src="https://raw.githubusercontent.com/starship/starship/master/media/icon.png" alt="Starship rocket icon" /&gt; &lt;/p&gt; 
&lt;h2&gt;📝 License&lt;/h2&gt; 
&lt;p&gt;Copyright © 2019-present, &lt;a href="https://github.com/starship/starship/graphs/contributors"&gt;Starship Contributors&lt;/a&gt;.&lt;br /&gt; This project is &lt;a href="https://github.com/starship/starship/raw/master/LICENSE"&gt;ISC&lt;/a&gt; licensed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>atuinsh/atuin</title>
      <link>https://github.com/atuinsh/atuin</link>
      <description>&lt;p&gt;✨ Magical shell history&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/atuinsh/atuin/assets/53315310/13216a1d-1ac0-4c99-b0eb-d88290fe0efd" /&gt; 
  &lt;img alt="Text changing depending on mode. Light: 'So light!' Dark: 'So dark!'" src="https://github.com/atuinsh/atuin/assets/53315310/08bc86d4-a781-4aaa-8d7e-478ae6bcd129" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;em&gt;magical shell history&lt;/em&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/atuinsh/atuin/actions?query=workflow%3ARust"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/atuinsh/atuin/rust.yml?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/atuin"&gt;&lt;img src="https://img.shields.io/crates/v/atuin.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/atuin"&gt;&lt;img src="https://img.shields.io/crates/d/atuin.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://github.com/atuinsh/atuin/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/crates/l/atuin.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/Fq8bJSKPHh"&gt;&lt;img src="https://img.shields.io/discord/954121165239115808" /&gt;&lt;/a&gt; &lt;a rel="me" href="https://hachyderm.io/@atuin"&gt;&lt;img src="https://img.shields.io/mastodon/follow/109944632283122560?domain=https%3A%2F%2Fhachyderm.io&amp;amp;style=social" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/atuinsh"&gt;&lt;img src="https://img.shields.io/twitter/follow/atuinsh?style=social" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/atuinsh/atuin/main/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/atuinsh/atuin/main/docs/zh-CN/README.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Atuin replaces your existing shell history with a SQLite database, and records additional context for your commands. Additionally, it provides optional and &lt;em&gt;fully encrypted&lt;/em&gt; synchronisation of your history between machines, via an Atuin server.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/atuinsh/atuin/main/demo.gif" alt="animated" width="80%" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;em&gt;exit code, duration, time and command shown&lt;/em&gt; &lt;/p&gt; 
&lt;p&gt;As well as the search UI, it can do things like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# search for all successful `make` commands, recorded after 3pm yesterday
atuin search --exit 0 --after "yesterday 3pm" make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may use either the server I host, or host your own! Or just don't use sync at all. As all history sync is encrypted, I couldn't access your data even if I wanted to. And I &lt;strong&gt;really&lt;/strong&gt; don't want to.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;rebind &lt;code&gt;ctrl-r&lt;/code&gt; and &lt;code&gt;up&lt;/code&gt; (configurable) to a full screen history search UI&lt;/li&gt; 
 &lt;li&gt;store shell history in a sqlite database&lt;/li&gt; 
 &lt;li&gt;back up and sync &lt;strong&gt;encrypted&lt;/strong&gt; shell history&lt;/li&gt; 
 &lt;li&gt;the same history across terminals, across sessions, and across machines&lt;/li&gt; 
 &lt;li&gt;log exit code, cwd, hostname, session, command duration, etc&lt;/li&gt; 
 &lt;li&gt;calculate statistics such as "most used command"&lt;/li&gt; 
 &lt;li&gt;old history file is not replaced&lt;/li&gt; 
 &lt;li&gt;quick-jump to previous items with &lt;kbd&gt;Alt-&amp;lt;num&amp;gt;&lt;/kbd&gt;&lt;/li&gt; 
 &lt;li&gt;switch filter modes via ctrl-r; search history just from the current session, directory, or globally&lt;/li&gt; 
 &lt;li&gt;enter to execute a command, tab to edit&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/atuinsh/atuin/main/#quickstart"&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.atuin.sh/guide/installation/"&gt;Install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.atuin.sh/guide/sync/"&gt;Setting up sync&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.atuin.sh/guide/import/"&gt;Import history&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.atuin.sh/guide/basic-usage/"&gt;Basic usage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Shells&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;zsh&lt;/li&gt; 
 &lt;li&gt;bash&lt;/li&gt; 
 &lt;li&gt;fish&lt;/li&gt; 
 &lt;li&gt;nushell&lt;/li&gt; 
 &lt;li&gt;xonsh&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;h3&gt;Forum&lt;/h3&gt; 
&lt;p&gt;Atuin has a community forum, please ask here for help and support: &lt;a href="https://forum.atuin.sh/"&gt;https://forum.atuin.sh/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Discord&lt;/h3&gt; 
&lt;p&gt;Atuin also has a community Discord, available &lt;a href="https://discord.gg/jR3tfchVvW"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Quickstart&lt;/h1&gt; 
&lt;p&gt;This will sign you up for the Atuin Cloud sync server. Everything is end-to-end encrypted, so your secrets are safe!&lt;/p&gt; 
&lt;p&gt;Read more in the &lt;a href="https://docs.atuin.sh"&gt;docs&lt;/a&gt; for an offline setup, self hosted server, and more.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;curl --proto '=https' --tlsv1.2 -LsSf https://setup.atuin.sh | sh

atuin register -u &amp;lt;USERNAME&amp;gt; -e &amp;lt;EMAIL&amp;gt;
atuin import auto
atuin sync
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then restart your shell!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;For Bash users&lt;/strong&gt;: The above sets up &lt;code&gt;bash-preexec&lt;/code&gt; for necessary hooks, but &lt;code&gt;bash-preexec&lt;/code&gt; has limitations. For details, please see the &lt;a href="https://docs.atuin.sh/guide/installation/#installing-the-shell-plugin"&gt;Bash&lt;/a&gt; section of the shell plugin documentation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Security&lt;/h1&gt; 
&lt;p&gt;If you find any security issues, we'd appreciate it if you could alert &lt;a href="mailto:ellie@atuin.sh"&gt;ellie@atuin.sh&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Contributors&lt;/h1&gt; 
&lt;a href="https://github.com/atuinsh/atuin/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=atuinsh/atuin&amp;amp;max=300" /&gt; &lt;/a&gt; 
&lt;p&gt;Made with &lt;a href="https://contrib.rocks"&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>paritytech/polkadot-sdk</title>
      <link>https://github.com/paritytech/polkadot-sdk</link>
      <description>&lt;p&gt;The Parity Polkadot Blockchain SDK&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/docs/images/Polkadot_Logo_Horizontal_Pink_White.png#gh-dark-mode-only" alt="SDK Logo" /&gt; &lt;img src="https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/docs/images/Polkadot_Logo_Horizontal_Pink_Black.png#gh-light-mode-only" alt="SDK Logo" /&gt;&lt;/p&gt; 
 &lt;h1&gt;Polkadot SDK&lt;/h1&gt; 
 &lt;p&gt;&lt;img src="https://img.shields.io/github/stars/paritytech/polkadot-sdk" alt="GitHub stars" /&gt;&amp;nbsp;&amp;nbsp;&lt;img src="https://img.shields.io/github/forks/paritytech/polkadot-sdk" alt="GitHub forks" /&gt;&lt;/p&gt; 
 &lt;!-- markdownlint-disable-next-line MD013 --&gt; 
 &lt;p&gt;&lt;a href="https://substrate.stackexchange.com/"&gt;&lt;img src="https://img.shields.io/badge/StackExchange-Community%20&amp;amp;%20Support-222222?logo=stackexchange" alt="StackExchange" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;img src="https://img.shields.io/github/contributors/paritytech/polkadot-sdk" alt="GitHub contributors" /&gt;&amp;nbsp;&amp;nbsp;&lt;img src="https://img.shields.io/github/commit-activity/m/paritytech/polkadot-sdk" alt="GitHub commit activity" /&gt;&amp;nbsp;&amp;nbsp;&lt;img src="https://img.shields.io/github/last-commit/paritytech/polkadot-sdk" alt="GitHub last commit" /&gt;&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;The Polkadot SDK repository provides all the components needed to start building on the &lt;a href="https://polkadot.com/"&gt;Polkadot&lt;/a&gt; network, a multi-chain blockchain platform that enables different blockchains to interoperate and share information in a secure and scalable way.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;h2&gt;⚡ Quickstart&lt;/h2&gt; 
&lt;p&gt;If you want to get an example node running quickly you can execute the following getting started script:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/scripts/getting-started.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;👩🏽‍💻 Building&lt;/h2&gt; 
&lt;p&gt;In order to build this project you need to install some dependencies, follow the instructions in &lt;a href="https://docs.polkadot.com/develop/parachains/install-polkadot-sdk"&gt;this guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.polkadot.com"&gt;Polkadot Documentation Portal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://paritytech.github.io/polkadot-sdk/master/polkadot_sdk_docs/index.html"&gt;🦀 rust-docs&lt;/a&gt;: Where we keep track of the API docs of our Rust crates. Includes: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://paritytech.github.io/polkadot-sdk/master/polkadot_sdk_docs/polkadot_sdk/index.html"&gt;Introduction&lt;/a&gt; to each component of the Polkadot SDK: Substrate, FRAME, Cumulus, and XCM&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://paritytech.github.io/polkadot-sdk/master/polkadot_sdk_docs/guides/index.html"&gt;Guides&lt;/a&gt;, namely how to build your first FRAME pallet&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://paritytech.github.io/polkadot-sdk/master/polkadot_sdk_docs/polkadot_sdk/templates/index.html"&gt;Templates&lt;/a&gt; for starting a new project.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://paritytech.github.io/polkadot-sdk/master/polkadot_sdk_docs/external_resources/index.html"&gt;External Resources&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Have a question? You can ask in the Polkadot SDK Developers Chat. Messages from either of these channels are bridged to the other, so you can use whichever one you like. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://t.me/substratedevs"&gt;Telegram&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://matrix.to/#/#substratedevs:matrix.org"&gt;Matrix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://discord.com/channels/722223075629727774/997505821955076196"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://substrate.stackexchange.com/"&gt;Polkadot and Substrate StackExchange&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Releases&lt;/h2&gt; 
&lt;!-- markdownlint-disable-next-line MD013 --&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/paritytech/release-registry/main/badges/polkadot-sdk-latest.svg?sanitize=true" alt="Current Stable Release" /&gt;&amp;nbsp;&amp;nbsp;&lt;img src="https://raw.githubusercontent.com/paritytech/release-registry/main/badges/polkadot-sdk-next.svg?sanitize=true" alt="Next Stable Release" /&gt;&lt;/p&gt; 
&lt;p&gt;The Polkadot SDK is released every three months as a &lt;code&gt;Polkadot stableYYMM&lt;/code&gt; release. Each stable release is supported for one year with patches. See the next upcoming versions in the &lt;a href="https://github.com/paritytech/release-registry/"&gt;Release Registry&lt;/a&gt; and more docs in &lt;a href="https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/docs/RELEASE.md"&gt;RELEASE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can use &lt;a href="https://github.com/paritytech/psvm"&gt;&lt;code&gt;psvm&lt;/code&gt;&lt;/a&gt; to update all dependencies to a specific version without needing to manually select the correct version for each crate.&lt;/p&gt; 
&lt;h2&gt;🛠️ Tooling&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/paritytech/psvm"&gt;Polkadot SDK Version Manager&lt;/a&gt;: A simple tool to manage and update the Polkadot SDK dependencies in any Cargo.toml file. It will automatically update the Polkadot SDK dependencies to their correct crates.io version.&lt;/p&gt; 
&lt;h2&gt;🔐 Security&lt;/h2&gt; 
&lt;p&gt;The security policy and procedures can be found in &lt;a href="https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/docs/contributor/SECURITY.md"&gt;docs/contributor/SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🤍 Contributing &amp;amp; Code of Conduct&lt;/h2&gt; 
&lt;p&gt;Ensure you follow our &lt;a href="https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/docs/contributor/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;. In every interaction and contribution, this project adheres to the &lt;a href="https://raw.githubusercontent.com/paritytech/polkadot-sdk/master/docs/contributor/CODE_OF_CONDUCT.md"&gt;Contributor Covenant Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;👾 Ready to Contribute?&lt;/h3&gt; 
&lt;p&gt;Take a look at the issues labeled with &lt;a href="https://github.com/paritytech/polkadot-sdk/labels/C1-mentor"&gt;&lt;code&gt;mentor&lt;/code&gt;&lt;/a&gt; (or alternatively &lt;a href="https://mentor.tasty.limo/"&gt;this&lt;/a&gt; page, created by one of the maintainers) label to get started! We always recognize valuable contributions by proposing an on-chain tip to the Polkadot network as a token of our appreciation.&lt;/p&gt; 
&lt;h2&gt;Polkadot Fellowship&lt;/h2&gt; 
&lt;p&gt;Development in this repo usually goes hand in hand with the &lt;code&gt;fellowship&lt;/code&gt; organization. In short, this repository provides all the SDK pieces needed to build both Polkadot and its parachains. But, the actual Polkadot runtime lives in the &lt;code&gt;fellowship/runtimes&lt;/code&gt; repository. Read more about the fellowship, this separation, the RFC process &lt;a href="https://polkadot-fellows.github.io/dashboard/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;This repository is the amalgamation of 3 separate repositories that used to make up Polkadot SDK, namely Substrate, Polkadot and Cumulus. Read more about the merge and its history &lt;a href="https://polkadot-public.notion.site/Polkadot-SDK-FAQ-fbc4cecc2c46443fb37b9eeec2f0d85f"&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>firecracker-microvm/firecracker</title>
      <link>https://github.com/firecracker-microvm/firecracker</link>
      <description>&lt;p&gt;Secure and fast microVMs for serverless computing.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="docs/images/fc_logo_full_transparent-bg_white-fg.png" /&gt; 
 &lt;source media="(prefers-color-scheme: light)" srcset="docs/images/fc_logo_full_transparent-bg.png" /&gt; 
 &lt;img alt="Firecracker Logo Title" width="750" src="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/images/fc_logo_full_transparent-bg.png" /&gt; 
&lt;/picture&gt; 
&lt;p&gt;Our mission is to enable secure, multi-tenant, minimal-overhead execution of container and function workloads.&lt;/p&gt; 
&lt;p&gt;Read more about the Firecracker Charter &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CHARTER.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;What is Firecracker?&lt;/h2&gt; 
&lt;p&gt;Firecracker is an open source virtualization technology that is purpose-built for creating and managing secure, multi-tenant container and function-based services that provide serverless operational models. Firecracker runs workloads in lightweight virtual machines, called microVMs, which combine the security and isolation properties provided by hardware virtualization technology with the speed and flexibility of containers.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;The main component of Firecracker is a virtual machine monitor (VMM) that uses the Linux Kernel Virtual Machine (KVM) to create and run microVMs. Firecracker has a minimalist design. It excludes unnecessary devices and guest-facing functionality to reduce the memory footprint and attack surface area of each microVM. This improves security, decreases the startup time, and increases hardware utilization. Firecracker has also been integrated in container runtimes, for example &lt;a href="https://github.com/kata-containers/kata-containers"&gt;Kata Containers&lt;/a&gt; and &lt;a href="https://github.com/liquidmetal-dev/flintlock"&gt;Flintlock&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Firecracker was developed at Amazon Web Services to accelerate the speed and efficiency of services like &lt;a href="https://aws.amazon.com/lambda/"&gt;AWS Lambda&lt;/a&gt; and &lt;a href="https://aws.amazon.com/fargate/"&gt;AWS Fargate&lt;/a&gt;. Firecracker is open sourced under &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/LICENSE"&gt;Apache version 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To read more about Firecracker, check out &lt;a href="https://firecracker-microvm.github.io"&gt;firecracker-microvm.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;To get started with Firecracker, download the latest &lt;a href="https://github.com/firecracker-microvm/firecracker/releases"&gt;release&lt;/a&gt; binaries or build it from source.&lt;/p&gt; 
&lt;p&gt;You can build Firecracker on any Unix/Linux system that has Docker running (we use a development container) and &lt;code&gt;bash&lt;/code&gt; installed, as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/firecracker-microvm/firecracker
cd firecracker
tools/devtool build
toolchain="$(uname -m)-unknown-linux-musl"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Firecracker binary will be placed at &lt;code&gt;build/cargo_target/${toolchain}/debug/firecracker&lt;/code&gt;. For more information on building, testing, and running Firecracker, go to the &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/getting-started.md"&gt;quickstart guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The overall security of Firecracker microVMs, including the ability to meet the criteria for safe multi-tenant computing, depends on a well configured Linux host operating system. A configuration that we believe meets this bar is included in &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/prod-host-setup.md"&gt;the production host setup document&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Firecracker is already running production workloads within AWS, but it's still Day 1 on the journey guided by our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CHARTER.md"&gt;mission&lt;/a&gt;. There's a lot more to build and we welcome all contributions.&lt;/p&gt; 
&lt;p&gt;To contribute to Firecracker, check out the development setup section in the &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/getting-started.md"&gt;getting started guide&lt;/a&gt; and then the Firecracker &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;New Firecracker versions are released via the GitHub repository &lt;a href="https://github.com/firecracker-microvm/firecracker/releases"&gt;releases&lt;/a&gt; page, typically every two or three months. A history of changes is recorded in our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CHANGELOG.md"&gt;changelog&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Firecracker release policy is detailed &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/RELEASE_POLICY.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Design&lt;/h2&gt; 
&lt;p&gt;Firecracker's overall architecture is described in &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/design.md"&gt;the design document&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features &amp;amp; Capabilities&lt;/h2&gt; 
&lt;p&gt;Firecracker consists of a single micro Virtual Machine Manager process that exposes an API endpoint to the host once started. The API is &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/src/firecracker/swagger/firecracker.yaml"&gt;specified in OpenAPI format&lt;/a&gt;. Read more about it in the &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/api_requests"&gt;API docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;strong&gt;API endpoint&lt;/strong&gt; can be used to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Configure the microvm by: 
  &lt;ul&gt; 
   &lt;li&gt;Setting the number of vCPUs (the default is 1).&lt;/li&gt; 
   &lt;li&gt;Setting the memory size (the default is 128 MiB).&lt;/li&gt; 
   &lt;li&gt;Configuring a &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/cpu_templates/cpu-templates.md"&gt;CPU template&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Add one or more network interfaces to the microVM.&lt;/li&gt; 
 &lt;li&gt;Add one or more read-write or read-only disks to the microVM, each represented by a file-backed block device.&lt;/li&gt; 
 &lt;li&gt;Trigger a block device re-scan while the guest is running. This enables the guest OS to pick up size changes to the block device's backing file.&lt;/li&gt; 
 &lt;li&gt;Change the backing file for a block device, before or after the guest boots.&lt;/li&gt; 
 &lt;li&gt;Configure rate limiters for virtio devices which can limit the bandwidth, operations per second, or both.&lt;/li&gt; 
 &lt;li&gt;Configure the logging and metric system.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[BETA]&lt;/code&gt; Configure the data tree of the guest-facing metadata service. The service is only available to the guest if this resource is configured.&lt;/li&gt; 
 &lt;li&gt;Add a &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/vsock.md"&gt;vsock socket&lt;/a&gt; to the microVM.&lt;/li&gt; 
 &lt;li&gt;Add a &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/entropy.md"&gt;entropy device&lt;/a&gt; to the microVM.&lt;/li&gt; 
 &lt;li&gt;Start the microVM using a given kernel image, root file system, and boot arguments.&lt;/li&gt; 
 &lt;li&gt;[x86_64 only] Stop the microVM.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Built-in Capabilities&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Demand fault paging and CPU oversubscription enabled by default.&lt;/li&gt; 
 &lt;li&gt;Advanced, thread-specific seccomp filters for enhanced security.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/docs/jailer.md"&gt;Jailer&lt;/a&gt; process for starting Firecracker in production scenarios; applies a cgroup/namespace isolation barrier and then drops privileges.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tested platforms&lt;/h2&gt; 
&lt;p&gt;We test all combinations of:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Instance&lt;/th&gt; 
   &lt;th align="left"&gt;Host OS &amp;amp; Kernel&lt;/th&gt; 
   &lt;th align="left"&gt;Guest Rootfs&lt;/th&gt; 
   &lt;th align="left"&gt;Guest Kernel&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m5n.metal (Intel Cascade Lake)&lt;/td&gt; 
   &lt;td align="left"&gt;al2 linux_5.10&lt;/td&gt; 
   &lt;td align="left"&gt;ubuntu 24.04&lt;/td&gt; 
   &lt;td align="left"&gt;linux_5.10&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m6i.metal (Intel Ice Lake)&lt;/td&gt; 
   &lt;td align="left"&gt;al2023 linux_6.1&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;linux_6.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m7i.metal-24xl (Intel Sapphire Rapids)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m7i.metal-48xl (Intel Sapphire Rapids)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m6a.metal (AMD Milan)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m7a.metal-48xl (AMD Genoa)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m6g.metal (Graviton 2)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m7g.metal (Graviton 3)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m8g.metal-24xl (Graviton 4)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;m8g.metal-48xl (Graviton 4)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Known issues and Limitations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;pl031&lt;/code&gt; RTC device on aarch64 does not support interrupts, so guest programs which use an RTC alarm (e.g. &lt;code&gt;hwclock&lt;/code&gt;) will not work.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;p&gt;Firecracker's performance characteristics are listed as part of the &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/SPECIFICATION.md"&gt;specification documentation&lt;/a&gt;. All specifications are a part of our commitment to supporting container and function workloads in serverless operational models, and are therefore enforced via continuous integration testing.&lt;/p&gt; 
&lt;h2&gt;Policy for Security Disclosures&lt;/h2&gt; 
&lt;p&gt;The security of Firecracker is our top priority. If you suspect you have uncovered a vulnerability, contact us privately, as outlined in our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/SECURITY.md"&gt;security policy document&lt;/a&gt;; we will immediately prioritize your disclosure.&lt;/p&gt; 
&lt;h2&gt;FAQ &amp;amp; Contact&lt;/h2&gt; 
&lt;p&gt;Frequently asked questions are collected in our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/FAQ.md"&gt;FAQ doc&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can get in touch with the Firecracker community in the following ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Security-related issues, see our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/SECURITY.md"&gt;security policy document&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Chat with us on our &lt;a href="https://join.slack.com/t/firecracker-microvm/shared_invite/zt-2tc0mfxpc-tU~HYAYSzLDl5XGGJU3YIg"&gt;Slack workspace&lt;/a&gt; &lt;em&gt;Note: most of the maintainers are on a European time zone.&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Open a GitHub issue in this repository.&lt;/li&gt; 
 &lt;li&gt;Email the maintainers at &lt;a href="mailto:firecracker-maintainers@amazon.com"&gt;firecracker-maintainers@amazon.com&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When communicating within the Firecracker community, please mind our &lt;a href="https://raw.githubusercontent.com/firecracker-microvm/firecracker/main/CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dani-garcia/vaultwarden</title>
      <link>https://github.com/dani-garcia/vaultwarden</link>
      <description>&lt;p&gt;Unofficial Bitwarden compatible server written in Rust, formerly known as bitwarden_rs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/dani-garcia/vaultwarden/main/resources/vaultwarden-logo-auto.svg?sanitize=true" alt="Vaultwarden Logo" /&gt;&lt;/p&gt; 
&lt;p&gt;An alternative server implementation of the Bitwarden Client API, written in Rust and compatible with &lt;a href="https://bitwarden.com/download/"&gt;official Bitwarden clients&lt;/a&gt; [&lt;a href="https://raw.githubusercontent.com/dani-garcia/vaultwarden/main/#disclaimer"&gt;disclaimer&lt;/a&gt;], perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://github.com/dani-garcia/vaultwarden/releases/latest"&gt;&lt;img src="https://img.shields.io/github/release/dani-garcia/vaultwarden.svg?style=for-the-badge&amp;amp;logo=vaultwarden&amp;amp;color=005AA4" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/pkgs/container/vaultwarden"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4&amp;amp;url=https%3A%2F%2Fipitio.github.io%2Fbackage%2Fdani-garcia%2Fvaultwarden%2Fvaultwarden.json&amp;amp;query=%24.downloads&amp;amp;label=ghcr.io%20pulls&amp;amp;cacheSeconds=14400" alt="ghcr.io Pulls" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/vaultwarden/server"&gt;&lt;img src="https://img.shields.io/docker/pulls/vaultwarden/server.svg?style=for-the-badge&amp;amp;logo=docker&amp;amp;logoColor=fff&amp;amp;color=005AA4&amp;amp;label=docker.io%20pulls" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://quay.io/repository/vaultwarden/server"&gt;&lt;img src="https://img.shields.io/badge/quay.io-download-005AA4?style=for-the-badge&amp;amp;logo=redhat&amp;amp;cacheSeconds=14400" alt="Quay.io" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors-anon/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=vaultwarden&amp;amp;color=005AA4" alt="Contributors" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4" alt="Forks" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4" alt="Stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/issues"&gt;&lt;img src="https://img.shields.io/github/issues/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4&amp;amp;cacheSeconds=300" alt="Issues Open" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/issues?q=is%3Aissue+is%3Aclosed"&gt;&lt;img src="https://img.shields.io/github/issues-closed/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4&amp;amp;cacheSeconds=300" alt="Issues Closed" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/raw/main/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/github/license/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=vaultwarden&amp;amp;color=944000&amp;amp;cacheSeconds=14400" alt="AGPL-3.0 Licensed" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://deps.rs/repo/github/dani-garcia/vaultwarden"&gt;&lt;img src="https://img.shields.io/badge/dynamic/xml?url=https%3A%2F%2Fdeps.rs%2Frepo%2Fgithub%2Fdani-garcia%2Fvaultwarden%2Fstatus.svg&amp;amp;query=%2F*%5Blocal-name()%3D'svg'%5D%2F*%5Blocal-name()%3D'g'%5D%5B2%5D%2F*%5Blocal-name()%3D'text'%5D%5B4%5D&amp;amp;style=flat-square&amp;amp;logo=rust&amp;amp;label=dependencies&amp;amp;color=005AA4" alt="Dependency Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/actions/workflows/release.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/dani-garcia/vaultwarden/release.yml?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;label=Release%20Workflow" alt="GHA Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/actions/workflows/build.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/dani-garcia/vaultwarden/build.yml?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;label=Build%20Workflow" alt="GHA Build" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://matrix.to/#/#vaultwarden:matrix.org"&gt;&lt;img src="https://img.shields.io/matrix/vaultwarden:matrix.org.svg?style=flat-square&amp;amp;logo=matrix&amp;amp;logoColor=fff&amp;amp;color=953B00&amp;amp;cacheSeconds=14400" alt="Matrix Chat" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/discussions"&gt;&lt;img src="https://img.shields.io/github/discussions/dani-garcia/vaultwarden?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=953B00&amp;amp;cacheSeconds=300" alt="GitHub Discussions" /&gt;&lt;/a&gt; &lt;a href="https://vaultwarden.discourse.group/"&gt;&lt;img src="https://img.shields.io/discourse/topics?server=https%3A%2F%2Fvaultwarden.discourse.group%2F&amp;amp;style=flat-square&amp;amp;logo=discourse&amp;amp;color=953B00" alt="Discourse Discussions" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] &lt;strong&gt;When using this server, please report any bugs or suggestions directly to us (see &lt;a href="https://raw.githubusercontent.com/dani-garcia/vaultwarden/main/#get-in-touch"&gt;Get in touch&lt;/a&gt;), regardless of whatever clients you are using (mobile, desktop, browser...). DO NOT use the official Bitwarden support channels.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;A nearly complete implementation of the Bitwarden Client API is provided, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/managing-items/"&gt;Personal Vault&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/about-send/"&gt;Send&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/attachments/"&gt;Attachments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/website-icons/"&gt;Website icons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/personal-api-key/"&gt;Personal API Key&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/getting-started-organizations/"&gt;Organizations&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://bitwarden.com/help/about-collections/"&gt;Collections&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/sharing/"&gt;Password Sharing&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/user-types-access-control/"&gt;Member Roles&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/about-groups/"&gt;Groups&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/event-logs/"&gt;Event Logs&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/admin-reset/"&gt;Admin Password Reset&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/directory-sync/"&gt;Directory Connector&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/policies/"&gt;Policies&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/bitwarden-field-guide-two-step-login/"&gt;Multi/Two Factor Authentication&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://bitwarden.com/help/setup-two-step-login-authenticator/"&gt;Authenticator&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/setup-two-step-login-email/"&gt;Email&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/setup-two-step-login-fido/"&gt;FIDO2 WebAuthn&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/setup-two-step-login-yubikey/"&gt;YubiKey&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/setup-two-step-login-duo/"&gt;Duo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/emergency-access/"&gt;Emergency Access&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Enabling-admin-page"&gt;Vaultwarden Admin Backend&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dani-garcia/bw_web_builds"&gt;Modified Web Vault client&lt;/a&gt; (Bundled within our containers)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The web-vault requires the use a secure context for the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API"&gt;Web Crypto API&lt;/a&gt;. That means it will only work via &lt;code&gt;http://localhost:8000&lt;/code&gt; (using the port from the example below) or if you &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Enabling-HTTPS"&gt;enable HTTPS&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The recommended way to install and use Vaultwarden is via our container images which are published to &lt;a href="https://github.com/dani-garcia/vaultwarden/pkgs/container/vaultwarden"&gt;ghcr.io&lt;/a&gt;, &lt;a href="https://hub.docker.com/r/vaultwarden/server"&gt;docker.io&lt;/a&gt; and &lt;a href="https://quay.io/repository/vaultwarden/server"&gt;quay.io&lt;/a&gt;. See &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Which-container-image-to-use"&gt;which container image to use&lt;/a&gt; for an explanation of the provided tags.&lt;/p&gt; 
&lt;p&gt;There are also &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Third-party-packages"&gt;community driven packages&lt;/a&gt; which can be used, but those might be lagging behind the latest version or might deviate in the way Vaultwarden is configured, as described in our &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can also &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Building-binary"&gt;build Vaultwarden&lt;/a&gt; yourself.&lt;/p&gt; 
&lt;p&gt;While Vaultwarden is based upon the &lt;a href="https://rocket.rs"&gt;Rocket web framework&lt;/a&gt; which has built-in support for TLS our recommendation would be that you setup a reverse proxy (see &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Proxy-examples"&gt;proxy examples&lt;/a&gt;).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] &lt;strong&gt;For more detailed examples on how to install, use and configure Vaultwarden you can check our &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki"&gt;Wiki&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Docker/Podman CLI&lt;/h3&gt; 
&lt;p&gt;Pull the container image and mount a volume from the host for persistent storage.&lt;br /&gt; You can replace &lt;code&gt;docker&lt;/code&gt; with &lt;code&gt;podman&lt;/code&gt; if you prefer to use podman.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker pull vaultwarden/server:latest
docker run --detach --name vaultwarden \
  --env DOMAIN="https://vw.domain.tld" \
  --volume /vw-data/:/data/ \
  --restart unless-stopped \
  --publish 127.0.0.1:8000:80 \
  vaultwarden/server:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will preserve any persistent data under &lt;code&gt;/vw-data/&lt;/code&gt;, you can adapt the path to whatever suits you.&lt;/p&gt; 
&lt;h3&gt;Docker Compose&lt;/h3&gt; 
&lt;p&gt;To use Docker compose you need to create a &lt;code&gt;compose.yaml&lt;/code&gt; which will hold the configuration to run the Vaultwarden container.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      DOMAIN: "https://vw.domain.tld"
    volumes:
      - ./vw-data/:/data/
    ports:
      - 127.0.0.1:8000:80
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h2&gt;Get in touch&lt;/h2&gt; 
&lt;p&gt;Have a question, suggestion or need help? Join our community on &lt;a href="https://matrix.to/#/#vaultwarden:matrix.org"&gt;Matrix&lt;/a&gt;, &lt;a href="https://github.com/dani-garcia/vaultwarden/discussions"&gt;GitHub Discussions&lt;/a&gt; or &lt;a href="https://vaultwarden.discourse.group/"&gt;Discourse Forums&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Encountered a bug or crash? Please search our issue tracker and discussions to see if it's already been reported. If not, please &lt;a href="https://github.com/dani-garcia/vaultwarden/discussions"&gt;start a new discussion&lt;/a&gt; or &lt;a href="https://github.com/dani-garcia/vaultwarden/issues/"&gt;create a new issue&lt;/a&gt;. Ensure you're using the latest version of Vaultwarden and there aren't any similar issues open or closed!&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks for your contribution to the project!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/dani-garcia/vaultwarden/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors-anon/dani-garcia/vaultwarden?style=for-the-badge&amp;amp;logo=vaultwarden&amp;amp;color=005AA4" alt="Contributors Count" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/graphs/contributors"&gt;&lt;img src="https://contributors-img.web.app/image?repo=dani-garcia/vaultwarden" alt="Contributors Avatars" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;This project is not associated with &lt;a href="https://bitwarden.com/"&gt;Bitwarden&lt;/a&gt; or Bitwarden, Inc.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;However, one of the active maintainers for Vaultwarden is employed by Bitwarden and is allowed to contribute to the project on their own time. These contributions are independent of Bitwarden and are reviewed by other maintainers.&lt;/p&gt; 
&lt;p&gt;The maintainers work together to set the direction for the project, focusing on serving the self-hosting community, including individuals, families, and small organizations, while ensuring the project's sustainability.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; We cannot be held liable for any data loss that may occur while using Vaultwarden. This includes passwords, attachments, and other information handled by the application. We highly recommend performing regular backups of your files and database. However, should you experience data loss, we encourage you to contact us immediately.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Bitwarden_RS&lt;/h2&gt; 
&lt;p&gt;This project was known as Bitwarden_RS and has been renamed to separate itself from the official Bitwarden server in the hopes of avoiding confusion and trademark/branding issues.&lt;br /&gt; Please see &lt;a href="https://github.com/dani-garcia/vaultwarden/discussions/1642"&gt;#1642 - v1.21.0 release and project rename to Vaultwarden&lt;/a&gt; for more explanation.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>