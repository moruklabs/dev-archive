<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Weekly Trending</title>
    <description>Weekly Trending of TypeScript in GitHub</description>
    <pubDate>Thu, 16 Oct 2025 01:49:27 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>daytonaio/daytona</title>
      <link>https://github.com/daytonaio/daytona</link>
      <description>&lt;p&gt;Daytona is a Secure and Elastic Infrastructure for Running AI-Generated Code&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://www.daytona.io/docs"&gt;&lt;img src="https://img.shields.io/github/v/release/daytonaio/docs?label=Docs&amp;amp;color=23cc71" alt="Documentation" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/License-AGPL--3-blue" alt="License" /&gt; &lt;a href="https://goreportcard.com/report/github.com/daytonaio/daytona"&gt;&lt;img src="https://goreportcard.com/badge/github.com/daytonaio/daytona" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/daytonaio/daytona/issues"&gt;&lt;img src="https://img.shields.io/github/issues/daytonaio/daytona" alt="Issues - daytona" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/v/release/daytonaio/daytona" alt="GitHub Release" /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-white.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-black.png" /&gt; 
  &lt;img alt="Daytona logo" src="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-black.png" width="50%" /&gt; 
 &lt;/picture&gt; 
&lt;/div&gt; 
&lt;h3 align="center"&gt; Run AI Code. &lt;br /&gt; Secure and Elastic Infrastructure for Running Your AI-Generated Code. &lt;/h3&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.daytona.io/docs"&gt; Documentation &lt;/a&gt;¬∑ &lt;a href="https://github.com/daytonaio/daytona/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.md&amp;amp;title=%F0%9F%90%9B+Bug+Report%3A+"&gt; Report Bug &lt;/a&gt;¬∑ &lt;a href="https://github.com/daytonaio/daytona/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.md&amp;amp;title=%F0%9F%9A%80+Feature%3A+"&gt; Request Feature &lt;/a&gt;¬∑ &lt;a href="https://go.daytona.io/slack"&gt; Join our Slack &lt;/a&gt;¬∑ &lt;a href="https://x.com/daytonaio"&gt; Connect on X &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.producthunt.com/posts/daytona-2?embed=true&amp;amp;utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-daytona-2" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=957617&amp;amp;theme=neutral&amp;amp;period=daily&amp;amp;t=1746176740150" alt="Daytona  - Secure and elastic infra for running your AI-generated code. | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/daytona-2?embed=true&amp;amp;utm_source=badge-top-post-topic-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-daytona-2" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=957617&amp;amp;theme=neutral&amp;amp;period=monthly&amp;amp;topic_id=237&amp;amp;t=1746176740150" alt="Daytona  - Secure and elastic infra for running your AI-generated code. | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Python SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install daytona
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;TypeScript SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install @daytonaio/sdk
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Lightning-Fast Infrastructure&lt;/strong&gt;: Sub-90ms Sandbox creation from code to execution.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Separated &amp;amp; Isolated Runtime&lt;/strong&gt;: Execute AI-generated code with zero risk to your infrastructure.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Massive Parallelization for Concurrent AI Workflows&lt;/strong&gt;: Fork Sandbox filesystem and memory state (Coming soon!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Programmatic Control&lt;/strong&gt;: File, Git, LSP, and Execute API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unlimited Persistence&lt;/strong&gt;: Your Sandboxes can live forever&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OCI/Docker Compatibility&lt;/strong&gt;: Use any OCI/Docker image to create a Sandbox&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create an account at &lt;a href="https://app.daytona.io"&gt;https://app.daytona.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Generate a &lt;a href="https://app.daytona.io/dashboard/keys"&gt;new API key&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow the &lt;a href="https://www.daytona.io/docs/getting-started/"&gt;Getting Started docs&lt;/a&gt; to start using the Daytona SDK&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Creating your first Sandbox&lt;/h2&gt; 
&lt;h3&gt;Python SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-py"&gt;from daytona import Daytona, DaytonaConfig, CreateSandboxBaseParams

# Initialize the Daytona client
daytona = Daytona(DaytonaConfig(api_key="YOUR_API_KEY"))

# Create the Sandbox instance
sandbox = daytona.create(CreateSandboxBaseParams(language="python"))

# Run code securely inside the Sandbox
response = sandbox.process.code_run('print("Sum of 3 and 4 is " + str(3 + 4))')
if response.exit_code != 0:
    print(f"Error running code: {response.exit_code} {response.result}")
else:
    print(response.result)

# Clean up the Sandbox
daytona.delete(sandbox)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Typescript SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { Daytona } from '@daytonaio/sdk'

async function main() {
  // Initialize the Daytona client
  const daytona = new Daytona({
    apiKey: 'YOUR_API_KEY',
  })

  let sandbox
  try {
    // Create the Sandbox instance
    sandbox = await daytona.create({
      language: 'typescript',
    })
    // Run code securely inside the Sandbox
    const response = await sandbox.process.codeRun('console.log("Sum of 3 and 4 is " + (3 + 4))')
    if (response.exitCode !== 0) {
      console.error('Error running code:', response.exitCode, response.result)
    } else {
      console.log(response.result)
    }
  } catch (error) {
    console.error('Sandbox flow error:', error)
  } finally {
    if (sandbox) await daytona.delete(sandbox)
  }
}

main().catch(console.error)
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Daytona is Open Source under the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/LICENSE"&gt;GNU AFFERO GENERAL PUBLIC LICENSE&lt;/a&gt;, and is the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/NOTICE"&gt;copyright of its contributors&lt;/a&gt;. If you would like to contribute to the software, read the Developer Certificate of Origin Version 1.1 (&lt;a href="https://developercertificate.org/"&gt;https://developercertificate.org/&lt;/a&gt;). Afterwards, navigate to the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to get started.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>requestly/requestly</title>
      <link>https://github.com/requestly/requestly</link>
      <description>&lt;p&gt;Free and open-source API Client &amp; Interceptor.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://requestly.com"&gt;&lt;img src="https://github.com/user-attachments/assets/5b8cdaf9-22d6-4aa5-844c-93d70ece41ad" alt="Requestly" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Join Requestly community on Discord: &lt;a href="https://rqst.ly/join-community"&gt;Link&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Requestly - API Client with HTTP Interceptor, Modfications, Testing &amp;amp; Mocking.&lt;/h2&gt; 
&lt;p&gt;Requestly is a powerful combination of a local API Client (like Postman) &amp;amp; HTTP Interceptor (like Charles Proxy) with API Testing and Mocking. Requestly can be used directly in the browser as a Chrome Extension or installed as a desktop application.&lt;/p&gt; 
&lt;h4&gt;‚ö° A Local-first &amp;amp; Powerful alternative to Postman &amp;amp; Charles Proxy ‚ö°&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/04c32f25-96c4-46d9-a31d-b6887ce7bfdc" alt="requestly-overview" /&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/issues-closed/requestly/requestly" alt="GitHub closed issues" /&gt; &lt;a href="https://chrome.google.com/webstore/detail/redirect-url-modify-heade/mdnleldcmiljblolnjhpnblkcekpdkpa/"&gt;&lt;img src="https://img.shields.io/chrome-web-store/rating/mdnleldcmiljblolnjhpnblkcekpdkpa" alt="Chrome Web Store Rating" /&gt; &lt;img src="https://img.shields.io/chrome-web-store/rating-count/mdnleldcmiljblolnjhpnblkcekpdkpa?label=reviews" alt="Chrome Web Store Reviews" /&gt; &lt;img src="https://img.shields.io/chrome-web-store/users/mdnleldcmiljblolnjhpnblkcekpdkpa?label=downloads" alt="Chrome Web Store Downloads" /&gt;&lt;/a&gt; &lt;a href="https://status.requestly.io"&gt;&lt;img src="https://uptime.betterstack.com/status-badges/v2/monitor/13j20.svg?sanitize=true" alt="Status badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;üè° Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#a-local-first-solution-local-workspaces"&gt;A Local-first Solution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#rest-api-client"&gt;REST API Client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#environments"&gt;Environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#http-interceptor--http-rules-intercept--modify-https-requests"&gt;HTTP Interceptor - Intercept &amp;amp; Modify HTTP Requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#api-mocking-helps-in-building-frontend-faster-without-waiting-for-backend"&gt;API Mocking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#1-click-imports"&gt;1-Click Imports from Postman, Insomnia, Modheader, Charles Proxy, and Resource Override&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#-best-in-class-support"&gt;Support Channels&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#-development"&gt;üë©‚Äçüíª Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#-contributing"&gt;üôè Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;A Local-first Solution (Local Workspaces)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Local Workspaces&lt;/strong&gt; is a simple, powerful, and privacy-friendly approach to building, testing &amp;amp; mocking your APIs. All your data is stored in the selected directory on your disk. You can also import all your API client files (requests, collections, environments) and codebase into VSCode and edit them directly in your IDE.&lt;/p&gt; 
&lt;p&gt;Collaborate with your colleagues using your preferred sync engine - Git, Google Drive, iCloud, or nothing at all.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Team Workspaces&lt;/strong&gt; are great for seamless collaboration through Requestly sync engine.&lt;/p&gt; 
&lt;h4&gt;‚ö° Local and team workspaces‚ö°&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/06f17e34-1614-4396-95ee-1416003261ad" alt="requestly-local-first-support" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;REST API Client&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.requestly.com/general/api-client/overview"&gt;&lt;strong&gt;Rest API Client&lt;/strong&gt;&lt;/a&gt; offers a local API playground to build and test your APIs. It supports features like API Collections, Environments, Environment Switcher, API Requests History with a beautiful and collaborative interface.&lt;/p&gt; 
&lt;h4&gt;‚ö° A Local-first, Beautiful &amp;amp; Powerful alternative to Postman &amp;amp; Insomina ‚ö°&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/a962b213-8744-4ffc-bd04-fcf891f48914" alt="requestly-api-client" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;Environments&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Environment&lt;/strong&gt; is a set of key-value pairs that can be used in API requests. Environments feature lets you manage variables across multiple environments with an easy environment selector. We support Global variables as well as Collection level variables. &lt;a href="https://docs.requestly.com/general/api-client/environments-and-variables"&gt;Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;‚ö° Environments feature ‚ö°&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/2726fe0e-9f0a-4df7-bfc9-344c65e19353" alt="requestly-api-client-environments-support" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;HTTP Interceptor / HTTP Rules (Intercept &amp;amp; Modify HTTPs Requests)&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.requestly.com/general/http-interceptor/overview"&gt;&lt;strong&gt;HTTP Rules&lt;/strong&gt;&lt;/a&gt; feature can be used to &lt;strong&gt;Intercept, Monitor &amp;amp; Modify HTTPs requests &amp;amp; responses&lt;/strong&gt; from browsers &amp;amp; mobile apps.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use the Chrome/Firefox/Edge extension for Intercepting &amp;amp; Modifying traffic from browsers&lt;/li&gt; 
 &lt;li&gt;Use the desktop app for capturing &amp;amp; modifying traffic from browsers, mobile apps &amp;amp; other desktop apps.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;‚ö° Intercept, Monitor &amp;amp; Modify HTTP Requests &amp;amp; Responses ‚ö°&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/791e54cb-d817-4bc2-83a6-e8bdd3b1cef7" alt="requestly-http-interceptor" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;strong&gt;Different Modifications supported&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Redirect URLs (Map Local &amp;amp; Map Remote) e.g. 
  &lt;ul&gt; 
   &lt;li&gt;Change Hostname, QueryParams, etc in the URL&lt;/li&gt; 
   &lt;li&gt;Redirect traffic from one environment to another (e.g. production to dev)&lt;/li&gt; 
   &lt;li&gt;Swap Tag Manager scripts from production to staging/dev environment&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Modify HTTP Request &amp;amp; Response Headers&lt;/li&gt; 
 &lt;li&gt;Modify API Request &amp;amp; Response body&lt;/li&gt; 
 &lt;li&gt;Inject scripts on web pages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;API Mocking (Helps in building frontend faster without waiting for backend)&lt;/h2&gt; 
&lt;p&gt;Requestly offers a complete API Mocking solution. Using Requestly, you can&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/api-mocking/api-mocking"&gt;Create Local API Mocks&lt;/a&gt;: Intercept the API Requests and return the new response&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/http-rules/rule-types/modify-response-body"&gt;Static &amp;amp; Dynamic Response Overrides&lt;/a&gt;: Override the API response received from server dynamically using simple JS&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/http-rules/advanced-usage/graphql-modify-request-response"&gt;GraphQL Support&lt;/a&gt;: Override graphQL APIs by targeting on query, operationName&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/api-mocking/create-cloud-based-mocks"&gt;Create Cloud-based API Mocks&lt;/a&gt;: Create cloud-based API Mocks and get new endpoints for the mocks&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/sessions/record-api-sessions#bulk-mocking"&gt;Bulk API Mocks&lt;/a&gt;: Record API traffic &amp;amp; Serve the Mocks from the recorded Session&lt;/li&gt; 
 &lt;li&gt;Mock APIs in e2e testing: Use Requestly in your e2e Cypress/Playwright/Selenium and mock the APIs in CI pipeline&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;‚ö° API Mocks - Build &amp;amp; Test your frontend faster without waiting for backend ‚ö°&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/7bc00c7e-c280-40eb-9a2a-c070ecdea662" alt="requestly-api-mocking" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;1-Click Imports&lt;/h2&gt; 
&lt;p&gt;Requestly provides &lt;strong&gt;Importing Configuration&lt;/strong&gt; from the following tools&lt;/p&gt; 
&lt;p&gt;API Clients&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/imports/postman"&gt;Import from Postman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#"&gt;Import from Insomnia&lt;/a&gt; - Coming Soon&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#"&gt;Import from Bruno&lt;/a&gt; - Coming Soon&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;HTTP Interceptors&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/imports/charles-proxy"&gt;Import from Charles Proxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/imports/resource-override"&gt;Import from Resource Override&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/imports/modheader"&gt;Import from ModHeader&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;‚ö° Import from Postman, Insomnia, CharlesProxy, ModHeader, etc. ‚ö°&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/6186e916-9036-4847-95dd-53b66a4c2730" alt="requestly-api-client-environments-support" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;ü§ù Best In-Class Support&lt;/h2&gt; 
&lt;h4&gt;‚ö° Requestly is known for best product, team and Best in-class support (4.3‚≠êÔ∏è in 1000+ reviews) ‚ö°&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/"&gt;Documentation&lt;/a&gt;: Product Documentation and Understanding of different features&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/security-privacy/"&gt;Security &amp;amp; Privacy&lt;/a&gt;: Our Security &amp;amp; Privacy document&lt;/li&gt; 
 &lt;li&gt;&lt;a href="mailto:contact@requestly.com"&gt;Email contact@requestly.com&lt;/a&gt;: Email Support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/requestly"&gt;StackOverflow Questions&lt;/a&gt;: Ask Questions on StackOverflow and add "Requestly" tag&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;üë©‚Äçüíª Development&lt;/h2&gt; 
&lt;p&gt;This repository contains the source code for Browser extension and UI application which make up the core of Requestly.&lt;br /&gt; Please follow the &lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/getting-started.md"&gt;Getting Started Guide&lt;/a&gt; to get to know about the development process in this repository.&lt;/p&gt; 
&lt;p&gt;Start working on individual modules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/browser-extension"&gt;Browser extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/app"&gt;UI application&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/requestly/requestly-desktop-app"&gt;Desktop application&lt;/a&gt; (Electron-based application for MacOS, Windows)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/requestly/requestly-web-sdk"&gt;Web SDK&lt;/a&gt; (facilitates SessionBook)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/requestly/requestly-mock-server"&gt;Mock Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/requestly/requestly-backend"&gt;Backend&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;üôè Contributing&lt;/h2&gt; 
&lt;p&gt;Currently, while Requestly is open source, we are not accepting pull requests. As a startup with a small team, our focus is on moving quickly and we currently lack the resources and documentation needed to actively support an open-source community. This will probably change in the future.&lt;/p&gt; 
&lt;p&gt;If you are still interested, read our &lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to learn about how to propose bugfixes and improvements, and how the development process works.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#contributors"&gt;&lt;img src="https://img.shields.io/github/all-contributors/requestly/requestly?color=ee8449&amp;amp;style=flat-square" alt="All Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://sagarsoni.dev/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29792913?v=4?s=100" alt="Sagar Soni" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://sagarsoni.dev/"&gt;&lt;strong&gt;Sagar Soni&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=sagarsoni7"&gt;üíª&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="http://sahil865gupta.github.io"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16779465?v=4?s=100" alt="Sahil Gupta" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="http://sahil865gupta.github.io"&gt;&lt;strong&gt;Sahil Gupta&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=wrongsahil"&gt;üíª&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/lazyvab"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6367566?v=4?s=100" alt="Vaibhav Nigam" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/lazyvab"&gt;&lt;strong&gt;Vaibhav Nigam&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=lazyvab"&gt;üíª&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/RuntimeTerror10"&gt;&lt;img src="https://avatars.githubusercontent.com/u/53986600?v=4?s=100" alt="Parth Bhardwaj" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/RuntimeTerror10"&gt;&lt;strong&gt;Parth Bhardwaj&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=RuntimeTerror10"&gt;üíª&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="http://linkedin.com/in/rohanmathur91"&gt;&lt;img src="https://avatars.githubusercontent.com/u/61556757?v=4?s=100" alt="Rohan Mathur" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="http://linkedin.com/in/rohanmathur91"&gt;&lt;strong&gt;Rohan Mathur&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=rohanmathur91"&gt;üíª&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/nafees87n"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56021937?v=4?s=100" alt="Nafees Nehar" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/nafees87n"&gt;&lt;strong&gt;Nafees Nehar&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=nafees87n"&gt;üíª&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/nsrCodes"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57226514?v=4?s=100" alt="Navdeep Singh Rathore" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/nsrCodes"&gt;&lt;strong&gt;Navdeep Singh Rathore&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=nsrCodes"&gt;üíª&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://requestly.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3108399?v=4?s=100" alt="Sachin Jain" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://requestly.com"&gt;&lt;strong&gt;Sachin Jain&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=sachinjain024"&gt;üíª&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/ashishsangle707"&gt;&lt;img src="https://avatars.githubusercontent.com/u/124448580?v=4?s=100" alt="ashishsangle707" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/ashishsangle707"&gt;&lt;strong&gt;ashishsangle707&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#projectManagement-ashishsangle707"&gt;üìÜ&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/echo-sg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56088056?v=4?s=100" alt="Shrey Gupta" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/echo-sg"&gt;&lt;strong&gt;Shrey Gupta&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=echo-sg"&gt;üíª&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#projectManagement-echo-sg"&gt;üìÜ&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/ncharanaraj"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43924299?v=4?s=100" alt="Charanaraj N" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/ncharanaraj"&gt;&lt;strong&gt;Charanaraj N&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=ncharanaraj"&gt;üíª&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/Muhammad-Daniyal-Jawad1"&gt;&lt;img src="https://avatars.githubusercontent.com/u/130592856?v=4?s=100" alt="Muhammad-Daniyal-Jawad1" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/Muhammad-Daniyal-Jawad1"&gt;&lt;strong&gt;Muhammad-Daniyal-Jawad1&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=Muhammad-Daniyal-Jawad1"&gt;üíª&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://piyush-web-app.web.app/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43876655?v=4?s=100" alt="PIYUSH NEGI" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://piyush-web-app.web.app/"&gt;&lt;strong&gt;PIYUSH NEGI&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=npiyush97"&gt;üíª&lt;/a&gt;&lt;/td&gt;
   &lt;td&gt;&amp;nbsp;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>xyflow/xyflow</title>
      <link>https://github.com/xyflow/xyflow</link>
      <description>&lt;p&gt;React Flow |¬†Svelte Flow - Powerful open source libraries for building node-based UIs with React (https://reactflow.dev) or Svelte (https://svelteflow.dev). Ready out-of-the-box and infinitely customizable.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/2857535/279643999-ffda9f91-6b6d-447d-82be-fcbd6103edb6.svg#gh-light-mode-only" alt="xyflow-header" /&gt; &lt;img src="https://user-images.githubusercontent.com/2857535/279644026-a01c231c-6c6e-4b41-96e0-a85c75c9acee.svg#gh-dark-mode-only" alt="xyflow-header-dark" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;img src="https://img.shields.io/github/license/wbkd/react-flow?color=%23ff0072" alt="GitHub License MIT" /&gt; &lt;img src="https://img.shields.io/npm/dt/reactflow?color=%23FF0072&amp;amp;label=React%20Flow%20downloads" alt="npm downloads" /&gt; &lt;img src="https://img.shields.io/npm/dt/@xyflow/svelte?color=%23FF3E00&amp;amp;label=Svelte%20Flow%20downloads" alt="npm downloads" /&gt;&lt;/p&gt; 
 &lt;p&gt;Powerful open source libraries for building node-based UIs with React or Svelte. Ready out-of-the-box and infinitely customizable.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://reactflow.dev/"&gt;React Flow&lt;/a&gt; ¬∑ &lt;a href="https://svelteflow.dev/"&gt;Svelte Flow&lt;/a&gt; ¬∑ &lt;a href="https://reactflow.dev/pro"&gt;React Flow Pro&lt;/a&gt; ¬∑ &lt;a href="https://discord.gg/Bqt6xrs"&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;The xyflow mono repo&lt;/h2&gt; 
&lt;p&gt;The xyflow repository is the home of four packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;React Flow 12 &lt;code&gt;@xyflow/react&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/packages/react"&gt;packages/react&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;React Flow 11 &lt;code&gt;reactflow&lt;/code&gt; &lt;a href="https://github.com/xyflow/xyflow/tree/v11"&gt;v11 branch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Svelte Flow &lt;code&gt;@xyflow/svelte&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/packages/svelte"&gt;packages/svelte&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shared helper library &lt;code&gt;@xyflow/system&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/packages/system"&gt;packages/system&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Commercial usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Are you using React Flow or Svelte Flow for a personal project?&lt;/strong&gt; Great! No sponsorship needed, you can support us by reporting any bugs you find, sending us screenshots of your projects, and starring us on Github üåü&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Are you using React Flow or Svelte Flow at your organization and making money from it?&lt;/strong&gt; Awesome! We rely on your support to keep our libraries developed and maintained under an MIT License, just how we like it. For React Flow you can do that on the &lt;a href="https://reactflow.dev/pro"&gt;React Flow Pro website&lt;/a&gt; and for both of our libraries you can do it through &lt;a href="https://github.com/sponsors/xyflow"&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;The best way to get started is to check out the &lt;a href="https://reactflow.dev/learn"&gt;React Flow&lt;/a&gt; or &lt;a href="https://svelteflow.dev/learn"&gt;Svelte Flow&lt;/a&gt; learn section. However if you want to get a sneak peek of how to install and use the libraries you can see it here:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;React Flow&lt;/strong&gt; basic usage&lt;/summary&gt; 
 &lt;h3&gt;Installation&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;npm install @xyflow/react
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Basic usage&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-jsx"&gt;import { useCallback } from 'react';
import {
ReactFlow,
MiniMap,
Controls,
Background,
useNodesState,
useEdgesState,
addEdge,
} from '@xyflow/react';

import '@xyflow/react/dist/style.css';

const initialNodes = [
{ id: '1', position: { x: 0, y: 0 }, data: { label: '1' } },
{ id: '2', position: { x: 0, y: 100 }, data: { label: '2' } },
];

const initialEdges = [{ id: 'e1-2', source: '1', target: '2' }];

function Flow() {
const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);
const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);

const onConnect = useCallback((params) =&amp;gt; setEdges((eds) =&amp;gt; addEdge(params, eds)), [setEdges]);

return (
  &amp;lt;ReactFlow
    nodes={nodes}
    edges={edges}
    onNodesChange={onNodesChange}
    onEdgesChange={onEdgesChange}
    onConnect={onConnect}
  &amp;gt;
    &amp;lt;MiniMap /&amp;gt;
    &amp;lt;Controls /&amp;gt;
    &amp;lt;Background /&amp;gt;
  &amp;lt;/ReactFlow&amp;gt;
);
}

export default Flow;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Svelte Flow&lt;/strong&gt; basic usage&lt;/summary&gt; 
 &lt;h3&gt;Installation&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;npm install @xyflow/svelte
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Basic usage&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-svelte"&gt;&amp;lt;script lang="ts"&amp;gt;
import { writable } from 'svelte/store';
import {
  SvelteFlow,
  Controls,
  Background,
  BackgroundVariant,
  MiniMap,
} from '@xyflow/svelte';

import '@xyflow/svelte/dist/style.css'

const nodes = writable([
  {
    id: '1',
    type: 'input',
    data: { label: 'Input Node' },
    position: { x: 0, y: 0 }
  },
  {
    id: '2',
    type: 'custom',
    data: { label: 'Node' },
    position: { x: 0, y: 150 }
  }
]);

const edges = writable([
  {
    id: '1-2',
    type: 'default',
    source: '1',
    target: '2',
    label: 'Edge Text'
  }
]);
&amp;lt;/script&amp;gt;

&amp;lt;SvelteFlow
{nodes}
{edges}
fitView
on:nodeclick={(event) =&amp;gt; console.log('on node click', event)}
&amp;gt;
&amp;lt;Controls /&amp;gt;
&amp;lt;Background variant={BackgroundVariant.Dots} /&amp;gt;
&amp;lt;MiniMap /&amp;gt;
&amp;lt;/SvelteFlow&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;For releasing packages we are using &lt;a href="https://github.com/changesets/changesets"&gt;changesets&lt;/a&gt; in combination with the &lt;a href="https://github.com/changesets/action"&gt;changeset Github action&lt;/a&gt;. The rough idea is:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;create PRs for new features, updates and fixes (with a changeset if relevant for changelog)&lt;/li&gt; 
 &lt;li&gt;merge into main&lt;/li&gt; 
 &lt;li&gt;changset creates a PR that bumps all packages based on the changesets&lt;/li&gt; 
 &lt;li&gt;merge changeset PR if you want to release to Github and npm&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Built by &lt;a href="https://xyflow.com"&gt;xyflow&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;React Flow and Svelte Flow are maintained by the &lt;a href="https://xyflow.com/about"&gt;xyflow team&lt;/a&gt;. If you need help or want to talk to us about a collaboration, reach out through our&amp;nbsp;&lt;a href="https://xyflow.com/contact"&gt;contact form&lt;/a&gt;&amp;nbsp;or by joining our &lt;a href="https://discord.gg/Bqt6xrs"&gt;Discord Server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;React Flow and Svelte Flow are &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/LICENSE"&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>waifu-project/movie</title>
      <link>https://github.com/waifu-project/movie</link>
      <description>&lt;p&gt;Â∞èÁå´ÂΩ±ËßÜÊòØ‰∏ÄÊ¨æÂÖ®Âπ≥Âè∞ÁöÑÂΩ±ËßÜÊí≠ÊîæÂô®, ÊîØÊåÅ VOD/JS Êâ©Â±ïÊ∫ê&lt;/p&gt;&lt;hr&gt;&lt;img src="https://raw.githubusercontent.com/waifu-project/movie/dev/logo.png" width="108" /&gt; 
&lt;h2&gt;Â∞èÁå´ÂΩ±ËßÜ&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;strong&gt;Â∞èÁå´ÂΩ±ËßÜÂú® &lt;a href="https://github.com/waifu-project/movie/releases/tag/release-v2.5.9"&gt;2.5.9&lt;/a&gt; ‰πãÂêéÂ∑≤ËΩ¨ÂêëÈó≠Ê∫ê&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;ÂèçÈ¶àÂíåÂª∫ËÆÆÂêåÊ†∑ÂèØ‰ª•Âú® &lt;a href="https://github.com/waifu-project/movie/issues"&gt;issue&lt;/a&gt; ‰∏≠ÊèêÂá∫ ÊàñËÄÖ‰πüÂèØ‰ª•Âú® &lt;a href="https://t.me/catmovie1145"&gt;Telegram&lt;/a&gt; Áæ§ÁªÑÈáåÂèçÈ¶à&lt;/p&gt; 
 &lt;p&gt;Â∞èÁå´ÂÖ∂‰ªñÊåáÂçó: &lt;a href="https://xmpro.netlify.app"&gt;xmpro.netlify.app&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;ÂÖ®Âπ≥Âè∞ÊîØÊåÅ, ÊîØÊåÅ &lt;code&gt;Android&lt;/code&gt; | &lt;code&gt;Windows&lt;/code&gt; | &lt;code&gt;Macos&lt;/code&gt; | &lt;code&gt;iOS&lt;/code&gt; | &lt;code&gt;Linux&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/macOS-000000?style=flat&amp;amp;logo=apple&amp;amp;logoColor=white" alt="" /&gt; &lt;img src="https://img.shields.io/badge/iOS-000000?style=flat&amp;amp;logoColor=white" alt="" /&gt; &lt;img src="https://img.shields.io/badge/Linux-FCC624?style=flat&amp;amp;logo=linux&amp;amp;logoColor=black" alt="" /&gt; &lt;img src="https://img.shields.io/badge/Windows-0078D6?style=flat&amp;amp;logo=windows&amp;amp;logoColor=white" alt="" /&gt; &lt;img src="https://img.shields.io/badge/Android-3DDC84?style=flat&amp;amp;logo=android&amp;amp;logoColor=white" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Âè¶ËØ∑ÂÖ≥Ê≥®ÂÖ¨‰ºóÂè∑, ÂÖ≥Ê≥®‰∏çËø∑Ë∑Ø üßö‚Äç‚ôÄ Ô∏è&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://s2.loli.net/2025/10/11/GP2tCEfmzDnVALX.png" alt="ÂÖ¨‰ºóÂè∑.png" /&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Êü•ÁúãÊà™Âõæ üñºÔ∏è&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://s2.loli.net/2025/09/14/QJmYod9K7G6cRkE.png" alt="È¶ñÈ°µ" /&gt; &lt;img src="https://s2.loli.net/2025/09/14/8eEsAtpcM3dIX5C.png" alt="ÊêúÁ¥¢" /&gt; &lt;img src="https://s2.loli.net/2025/09/14/trgyicKe47mf5I2.png" alt="TV" /&gt; &lt;img src="https://s2.loli.net/2025/09/14/oO6iKgFPEth9M43.png" alt="Êí≠Êîæ.jpg" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;‰∏ãËΩΩ üì¶&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Á≥ªÁªü&lt;/th&gt; 
   &lt;th&gt;Êñá‰ª∂ÂêéÁºÄ&lt;/th&gt; 
   &lt;th&gt;Êû∂ÊûÑ&lt;/th&gt; 
   &lt;th&gt;‰∏ãËΩΩÈìæÊé•&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;.zip&lt;/td&gt; 
   &lt;td&gt;ÈÄöÁî®(universal)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-mac.zip"&gt;ÂÖ®ÁêÉÂä†ÈÄü&lt;/a&gt; | &lt;a href="https://hk.gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-mac.zip"&gt;È¶ôÊ∏ØÂä†ÈÄü&lt;/a&gt; | &lt;a href="https://ghfast.top/https://github.com/waifu-project/movie/releases/latest/download/catmovie-mac.zip"&gt;Âä†ÈÄü3&lt;/a&gt; | &lt;a href="https://github.com/waifu-project/movie/releases/latest/download/catmovie-mac.zip"&gt;ÂéüÂßã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;.ipa&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie.ipa"&gt;ÂÖ®ÁêÉÂä†ÈÄü&lt;/a&gt; | &lt;a href="https://hk.gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie.ipa"&gt;È¶ôÊ∏ØÂä†ÈÄü&lt;/a&gt; | &lt;a href="https://ghfast.top/https://github.com/waifu-project/movie/releases/latest/download/catmovie.ipa"&gt;Âä†ÈÄü3&lt;/a&gt; | &lt;a href="https://github.com/waifu-project/movie/releases/latest/download/catmovie.ipa"&gt;ÂéüÂßã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;.apk&lt;/td&gt; 
   &lt;td&gt;Â∏∏Áî®(arm64-v8a)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie.apk"&gt;ÂÖ®ÁêÉÂä†ÈÄü&lt;/a&gt; | &lt;a href="https://hk.gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie.apk"&gt;È¶ôÊ∏ØÂä†ÈÄü&lt;/a&gt; | &lt;a href="https://ghfast.top/https://github.com/waifu-project/movie/releases/latest/download/catmovie.apk"&gt;Âä†ÈÄü3&lt;/a&gt; | &lt;a href="https://github.com/waifu-project/movie/releases/latest/download/catmovie.apk"&gt;ÂéüÂßã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;.apk&lt;/td&gt; 
   &lt;td&gt;ÊóßÊâãÊú∫(armeabi-v7a)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-legacy.apk"&gt;ÂÖ®ÁêÉÂä†ÈÄü&lt;/a&gt; | &lt;a href="https://hk.gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-legacy.apk"&gt;È¶ôÊ∏ØÂä†ÈÄü&lt;/a&gt; | &lt;a href="https://ghfast.top/https://github.com/waifu-project/movie/releases/latest/download/catmovie-legacy.apk"&gt;Âä†ÈÄü3&lt;/a&gt; | &lt;a href="https://github.com/waifu-project/movie/releases/latest/download/catmovie-legacy.apk"&gt;ÂéüÂßã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;.apk&lt;/td&gt; 
   &lt;td&gt;ÈÄöÁî®(universal)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-universal.apk"&gt;ÂÖ®ÁêÉÂä†ÈÄü&lt;/a&gt; | &lt;a href="https://hk.gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-universal.apk"&gt;È¶ôÊ∏ØÂä†ÈÄü&lt;/a&gt; | &lt;a href="https://ghfast.top/https://github.com/waifu-project/movie/releases/latest/download/catmovie-universal.apk"&gt;Âä†ÈÄü3&lt;/a&gt; | &lt;a href="https://github.com/waifu-project/movie/releases/latest/download/catmovie-universal.apk"&gt;ÂéüÂßã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;.zip&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-windows.zip"&gt;ÂÖ®ÁêÉÂä†ÈÄü&lt;/a&gt; | &lt;a href="https://hk.gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-windows.zip"&gt;È¶ôÊ∏ØÂä†ÈÄü&lt;/a&gt; | &lt;a href="https://ghfast.top/https://github.com/waifu-project/movie/releases/latest/download/catmovie-windows.zip"&gt;Âä†ÈÄü3&lt;/a&gt; | &lt;a href="https://github.com/waifu-project/movie/releases/latest/download/catmovie-windows.zip"&gt;ÂéüÂßã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;.zip&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-linux-x86_64.tar.gz"&gt;ÂÖ®ÁêÉÂä†ÈÄü&lt;/a&gt; | &lt;a href="https://hk.gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-linux-x86_64.tar.gz"&gt;È¶ôÊ∏ØÂä†ÈÄü&lt;/a&gt; | &lt;a href="https://ghfast.top/https://github.com/waifu-project/movie/releases/latest/download/catmovie-linux-x86_64.tar.gz"&gt;Âä†ÈÄü3&lt;/a&gt; | &lt;a href="https://github.com/waifu-project/movie/releases/latest/download/catmovie-linux-x86_64.tar.gz"&gt;ÂéüÂßã&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;ÊñáÊ°£ üìú&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/waifu-project/movie/dev/docs/create_source.md"&gt;Âà∂‰ΩúÊ∫ê&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/waifu-project/movie/dev/docs/keyboard.md"&gt;ÈîÆÁõòÂø´Êç∑ÈîÆ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ËµûÂä© üå†&lt;/h3&gt; 
&lt;p&gt;ÂºÄÂèë‰∏çÊòì, ÊÑüË∞¢ÊÇ®ÁöÑÊîØÊåÅ, ËøôÂ∞ÜËÆ©Â∞èÁå´ÂèØ‰ª•ÁªßÁª≠Ëµ∞‰∏ãÂéª ü§ó&lt;/p&gt; 
&lt;img src="https://s2.loli.net/2025/09/24/ByRvOsQhWzKLXNo.jpg" width="300" /&gt;</description>
    </item>
    
    <item>
      <title>dyad-sh/dyad</title>
      <link>https://github.com/dyad-sh/dyad</link>
      <description>&lt;p&gt;Free, local, open-source AI app builder ‚ú® v0 / lovable / Bolt alternative üåü Star if you like it!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dyad&lt;/h1&gt; 
&lt;p&gt;Dyad is a local, open-source AI app builder. It's fast, private, and fully under your control ‚Äî like Lovable, v0, or Bolt, but running right on your machine.&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://dyad.sh/"&gt;&lt;img src="https://github.com/user-attachments/assets/f6c83dfc-6ffd-4d32-93dd-4b9c46d17790" alt="Image" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;More info at: &lt;a href="http://dyad.sh/"&gt;http://dyad.sh/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üöÄ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚ö°Ô∏è &lt;strong&gt;Local&lt;/strong&gt;: Fast, private and no lock-in.&lt;/li&gt; 
 &lt;li&gt;üõ† &lt;strong&gt;Bring your own keys&lt;/strong&gt;: Use your own AI API keys ‚Äî no vendor lock-in.&lt;/li&gt; 
 &lt;li&gt;üñ•Ô∏è &lt;strong&gt;Cross-platform&lt;/strong&gt;: Easy to run on Mac or Windows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üì¶ Download&lt;/h2&gt; 
&lt;p&gt;No sign-up required. Just download and go.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://www.dyad.sh/#download"&gt;üëâ Download for your platform&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;ü§ù Community&lt;/h2&gt; 
&lt;p&gt;Join our growing community of AI app builders on &lt;strong&gt;Reddit&lt;/strong&gt;: &lt;a href="https://www.reddit.com/r/dyadbuilders/"&gt;r/dyadbuilders&lt;/a&gt; - share your projects and get help from the community!&lt;/p&gt; 
&lt;h2&gt;üõ†Ô∏è Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dyad&lt;/strong&gt; is open-source (Apache 2.0 licensed).&lt;/p&gt; 
&lt;p&gt;If you're interested in contributing to dyad, please read our &lt;a href="https://raw.githubusercontent.com/dyad-sh/dyad/main/CONTRIBUTING.md"&gt;contributing&lt;/a&gt; doc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nitrojs/nitro</title>
      <link>https://github.com/nitrojs/nitro</link>
      <description>&lt;p&gt;Next Generation Server Toolkit. Create web servers with everything you need and deploy them wherever you prefer.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nitro&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You‚Äôre viewing the &lt;strong&gt;v3 Alpha&lt;/strong&gt; branch. For the current stable release, see &lt;a href="https://github.com/nitrojs/nitro/tree/v2"&gt;Nitro v2&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Nitro&lt;/strong&gt; extends your Vite app with a &lt;strong&gt;production-ready server&lt;/strong&gt;, designed to run &lt;strong&gt;anywhere&lt;/strong&gt;. Add server routes, deploy across multiple platforms, and enjoy a &lt;strong&gt;zero-config&lt;/strong&gt; experience.&lt;/p&gt; 
&lt;p&gt;üìò &lt;strong&gt;Docs (v3 Alpha):&lt;/strong&gt; &lt;a href="https://v3.nitro.build"&gt;https://v3.nitro.build&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See Check out the &lt;a href="https://raw.githubusercontent.com/nitrojs/nitro/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Released under the &lt;a href="https://raw.githubusercontent.com/nitrojs/nitro/main/LICENSE"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CapSoftware/Cap</title>
      <link>https://github.com/CapSoftware/Cap</link>
      <description>&lt;p&gt;Open source Loom alternative. Beautiful, shareable screen recordings.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;img width="150" height="150" src="https://github.com/CapSoftware/Cap/raw/main/apps/desktop/src-tauri/icons/Square310x310Logo.png" alt="Logo" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;&lt;b&gt;Cap&lt;/b&gt;&lt;/h1&gt; 
&lt;p align="center"&gt; The open source Loom alternative. &lt;br /&gt; &lt;a href="https://cap.so"&gt;&lt;strong&gt;Cap.so ¬ª&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;b&gt;Downloads for &lt;/b&gt; &lt;a href="https://cap.so/download"&gt;macOS &amp;amp; Windows&lt;/a&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://console.algora.io/org/CapSoftware/bounties?status=open"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2FCapSoftware%2Fbounties%3Fstatus%3Dopen" alt="Open Bounties" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cap is the open source alternative to Loom. It's a video messaging tool that allows you to record, edit and share videos in seconds.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/CapSoftware/Cap/refs/heads/main/apps/web/public/landing-cover.png" /&gt; 
&lt;h1&gt;Self Hosting&lt;/h1&gt; 
&lt;p&gt;Cap Web is available to self-host using Docker or Railway, see our &lt;a href="https://cap.so/docs/self-hosting"&gt;self-hosting docs&lt;/a&gt; to learn more. You can also use the button below to deploy Cap Web to Railway:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://railway.com/new/template/PwpGcf"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cap Desktop can connect to your self-hosted Cap Web instance regardless of if you build it yourself or &lt;a href="https://cap.so/download"&gt;download from our website&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Monorepo App Architecture&lt;/h1&gt; 
&lt;p&gt;We use a combination of Rust, React (Next.js), TypeScript, Tauri, Drizzle (ORM), MySQL, TailwindCSS throughout this Turborepo powered monorepo.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A note about database: The codebase is currently designed to work with MySQL only. MariaDB or other compatible databases might partially work but are not officially supported.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Apps:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;desktop&lt;/code&gt;: A &lt;a href="https://tauri.app"&gt;Tauri&lt;/a&gt; (Rust) app, using &lt;a href="https://start.solidjs.com"&gt;SolidStart&lt;/a&gt; on the frontend.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;web&lt;/code&gt;: A &lt;a href="https://nextjs.org"&gt;Next.js&lt;/a&gt; web app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Packages:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ui&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; Shared component library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;utils&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; Shared utility library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tsconfig&lt;/code&gt;: Shared &lt;code&gt;tsconfig&lt;/code&gt; configurations used throughout the monorepo.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;database&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; and &lt;a href="https://orm.drizzle.team/"&gt;Drizzle ORM&lt;/a&gt; Shared database library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;config&lt;/code&gt;: &lt;code&gt;eslint&lt;/code&gt; configurations (includes &lt;code&gt;eslint-config-next&lt;/code&gt;, &lt;code&gt;eslint-config-prettier&lt;/code&gt; other configs used throughout the monorepo).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;License:&lt;/h3&gt; 
&lt;p&gt;Portions of this software are licensed as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All code residing in the &lt;code&gt;cap-camera*&lt;/code&gt; and &lt;code&gt;scap-*&lt;/code&gt; families of crates is licensed under the MIT License (see &lt;a href="https://github.com/CapSoftware/Cap/raw/main/licenses/LICENSE-MIT"&gt;licenses/LICENSE-MIT&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;All third party components are licensed under the original license provided by the owner of the applicable component&lt;/li&gt; 
 &lt;li&gt;All other content not mentioned above is available under the AGPLv3 license as defined in &lt;a href="https://github.com/CapSoftware/Cap/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/CapSoftware/Cap/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information. This guide is a work in progress, and is updated regularly as the app matures.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>remix-run/remix</title>
      <link>https://github.com/remix-run/remix</link>
      <description>&lt;p&gt;Build Better Websites. Create modern, resilient user experiences with web fundamentals.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Remix 3!&lt;/h1&gt; 
&lt;p&gt;This is the source repository for Remix 3. It is under active development.&lt;/p&gt; 
&lt;p&gt;We published &lt;a href="https://remix.run/blog/wake-up-remix"&gt;a blog post&lt;/a&gt; earlier this year with some of our thoughts around Remix 3. It explains our philosophy for web development and why we think the time is right for something new. When working on Remix 3, we follow these principles:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Model-First Development&lt;/strong&gt;. AI fundamentally shifts the human-computer interaction model for both user experience and developer workflows. Optimize the source code, documentation, tooling, and abstractions for LLMs. Additionally, develop abstractions for applications to use models in the product itself, not just as a tool to develop it.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Build on Web APIs&lt;/strong&gt;. Sharing abstractions across the stack greatly reduces the amount of context switching, both for humans and machines. Build on the foundation of Web APIs and JavaScript because it is the only full stack ecosystem.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Religiously Runtime&lt;/strong&gt;. Designing for bundlers/compilers/typegen (and any pre-runtime static analysis) leads to poor API design that eventually pollutes the entire system. All packages must be designed with no expectation of static analysis and all tests must run without bundling. Because browsers are involved, &lt;code&gt;--import&lt;/code&gt; loaders for simple transformations like TypeScript and JSX are permissible.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avoid Dependencies&lt;/strong&gt;. Dependencies lock you into somebody else's roadmap. Choose them wisely, wrap them completely, and expect to replace most of them with our own package eventually. The goal is zero.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Demand Composition&lt;/strong&gt;. Abstractions should be single-purpose and replaceable. A composable abstraction is easy to add and remove from an existing program. Every package must be useful and documented independent of any other context. New features should first be attempted as a new package. If impossible, attempt to break up the existing package to make it more composable. However, tightly coupled modules that almost always change together in both directions should be moved to the same package.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Distribute Cohesively&lt;/strong&gt;. Extremely composable ecosystems are difficult to learn and use. Remix will be distributed as a single &lt;code&gt;remix&lt;/code&gt; package for both distribution and documentation.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;p&gt;Although we recommend the &lt;code&gt;remix&lt;/code&gt; package for ease of use, all packages that make up Remix should be usable standalone as well. This forces us to consider package boundaries and helps us define public interfaces that are portable and interopable.&lt;/p&gt; 
&lt;p&gt;Each package in Remix:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Has a &lt;a href="https://en.wikipedia.org/wiki/Single-responsibility_principle"&gt;single responsibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Prioritizes web standards to ensure maximum interoperability and portability across JavaScript runtimes&lt;/li&gt; 
 &lt;li&gt;Augments standards unobtrusively where they are missing or incomplete, minimizing incompatibility risks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This means Remix code is &lt;strong&gt;portable by default&lt;/strong&gt;. Remix packages work seamlessly across &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt;, &lt;a href="https://bun.sh/"&gt;Bun&lt;/a&gt;, &lt;a href="https://deno.com/"&gt;Deno&lt;/a&gt;, &lt;a href="https://workers.cloudflare.com/"&gt;Cloudflare Workers&lt;/a&gt;, and other environments.&lt;/p&gt; 
&lt;p&gt;We leverage server-side web APIs when they are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API"&gt;The Web Streams API&lt;/a&gt; instead of &lt;code&gt;node:stream&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array"&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt; instead of Node.js &lt;code&gt;Buffer&lt;/code&gt;s&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API"&gt;The Web Crypto API&lt;/a&gt; instead of &lt;code&gt;node:crypto&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob"&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/File"&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; instead of some bespoke runtime-specific API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The benefit is code that's not just reusable, but &lt;strong&gt;future-proof&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;p&gt;We currently publish the following packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/fetch-proxy"&gt;fetch-proxy&lt;/a&gt;: Seamlessly construct HTTP proxies with the familiar &lt;code&gt;fetch()&lt;/code&gt; API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/file-storage"&gt;file-storage&lt;/a&gt;: Robust key/value storage tailored for JavaScript &lt;code&gt;File&lt;/code&gt; objects, simplifying file management&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/form-data-parser"&gt;form-data-parser&lt;/a&gt;: An enhanced &lt;code&gt;request.formData()&lt;/code&gt; wrapper enabling efficient, streaming file uploads&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/headers"&gt;headers&lt;/a&gt;: A comprehensive toolkit for effortlessly managing HTTP headers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/lazy-file"&gt;lazy-file&lt;/a&gt;: Optimize performance with lazy-loaded, streaming &lt;code&gt;Blob&lt;/code&gt;s and &lt;code&gt;File&lt;/code&gt;s for JavaScript&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/multipart-parser"&gt;multipart-parser&lt;/a&gt;: High-performance, streaming parser for multipart messages, perfect for handling complex form data&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/node-fetch-server"&gt;node-fetch-server&lt;/a&gt;: Build Node.js HTTP servers using the web-standard &lt;code&gt;fetch()&lt;/code&gt; API, promoting code consistency&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/route-pattern"&gt;route-pattern&lt;/a&gt;: A powerful and flexible URL pattern matching library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/tar-parser"&gt;tar-parser&lt;/a&gt;: A fast, streaming parser for tar archives, designed for efficient data extraction&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! If you'd like to contribute, please feel free to open an issue or submit a pull request. See &lt;a href="https://github.com/remix-run/remix/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://github.com/remix-run/remix/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TibixDev/winboat</title>
      <link>https://github.com/TibixDev/winboat</link>
      <description>&lt;p&gt;Run Windows apps on üêß Linux with ‚ú® seamless integration&lt;/p&gt;&lt;hr&gt;&lt;div align="left"&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/winboat_logo.svg?sanitize=true" alt="WinBoat Logo" width="150" /&gt; &lt;/td&gt; 
    &lt;td&gt; &lt;h1 style="color: #7C86FF; margin: 0; font-size: 32px;"&gt;WinBoat&lt;/h1&gt; &lt;p style="color: oklch(90% 0 0); font-size: 14px; margin: 5px 0;"&gt;Windows for Penguins.&lt;br /&gt; Run Windows apps on üêß Linux with ‚ú® seamless integration&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_dash.png" alt="WinBoat Dashboard" width="45%" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_apps.png" alt="WinBoat Apps" width="45%" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_native.png" alt="Native Windows" width="45%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;‚ö†Ô∏è Work in Progress ‚ö†Ô∏è&lt;/h2&gt; 
&lt;p&gt;WinBoat is currently in beta, so expect to occasionally run into hiccups and bugs. You should be comfortable with some level of troubleshooting if you decide to try it, however we encourage you to give it a shot anyway.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üé® Elegant Interface&lt;/strong&gt;: Sleek and intuitive interface that seamlessly integrates Windows into your Linux desktop environment, making it feel like a native experience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üì¶ Automated Installs&lt;/strong&gt;: Simple installation process through our interface - pick your preferences &amp;amp; specs and let us handle the rest&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üöÄ Run Any App&lt;/strong&gt;: If it runs on Windows, it can run on WinBoat. Enjoy the full range of Windows applications as native OS-level windows in your Linux environment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üñ•Ô∏è Full Windows Desktop&lt;/strong&gt;: Access the complete Windows desktop experience when you need it, or run individual apps seamlessly integrated into your Linux workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìÅ Filesystem Integration&lt;/strong&gt;: Your home directory is mounted in Windows, allowing easy file sharing between the two systems without any hassle&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚ú® And many more&lt;/strong&gt;: Smartcard passthrough, resource monitoring, and more features being added regularly&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How Does It Work?&lt;/h2&gt; 
&lt;p&gt;WinBoat is an Electron app which allows you to run Windows apps on Linux using a containerized approach. Windows runs as a VM inside a Docker container, we communicate with it using the &lt;a href="https://github.com/TibixDev/winboat/tree/main/guest_server"&gt;WinBoat Guest Server&lt;/a&gt; to retrieve data we need from Windows. For compositing applications as native OS-level windows, we use FreeRDP together with Windows's RemoteApp protocol.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;Before running WinBoat, ensure your system meets the following requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;RAM&lt;/strong&gt;: At least 4 GB of RAM&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt;: At least 2 CPU threads&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: At least 32 GB free space on the drive your selected install folder corresponds to&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Virtualization&lt;/strong&gt;: KVM enabled in BIOS/UEFI 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://duckduckgo.com/?t=h_&amp;amp;q=how+to+enable+virtualization+in+%3Cmotherboard+brand%3E+bios&amp;amp;ia=web"&gt;How to enable virtualization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: Required for containerization 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/engine/install/"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;‚ö†Ô∏è NOTE:&lt;/strong&gt; Docker Desktop is &lt;strong&gt;not&lt;/strong&gt; supported, you will run into issues if you use it&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Compose v2&lt;/strong&gt;: Required for compatibility with docker-compose.yml files 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/compose/install/#plugin-linux-only"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker User Group&lt;/strong&gt;: Add your user to the &lt;code&gt;docker&lt;/code&gt; group 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user"&gt;Setup Instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;FreeRDP&lt;/strong&gt;: Required for remote desktop connection (Please make sure you have &lt;strong&gt;Version 3.x.x&lt;/strong&gt; with sound support included) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/FreeRDP/FreeRDP/wiki/PreBuilds"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[OPTIONAL] &lt;strong&gt;Kernel Modules&lt;/strong&gt;: The &lt;code&gt;iptables&lt;/code&gt; / &lt;code&gt;nftables&lt;/code&gt; and &lt;code&gt;iptable_nat&lt;/code&gt; kernel modules can be loaded for network autodiscovery and better shared filesystem performance, but this is not obligatory in newer versions of WinBoat 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://rentry.org/rmfq2e5e"&gt;Module loading instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Downloading&lt;/h2&gt; 
&lt;p&gt;You can download the latest Linux builds under the &lt;a href="https://github.com/TibixDev/winboat/releases"&gt;Releases&lt;/a&gt; tab. We currently offer four variants:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AppImage:&lt;/strong&gt; A popular &amp;amp; portable app format which should run fine on most distributions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unpacked:&lt;/strong&gt; The raw unpacked files, simply run the executable (&lt;code&gt;linux-unpacked/winboat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;.deb:&lt;/strong&gt; The intended format for Debian based distributions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;.rpm:&lt;/strong&gt; The intended format for Fedora based distributions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Known Issues About Container Runtimes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Podman is &lt;strong&gt;unsupported&lt;/strong&gt; for now&lt;/li&gt; 
 &lt;li&gt;Docker Desktop is &lt;strong&gt;unsupported&lt;/strong&gt; for now&lt;/li&gt; 
 &lt;li&gt;Distros that emulate Docker through a Podman socket are &lt;strong&gt;unsupported&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Any rootless containerization solution is currently &lt;strong&gt;unsupported&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building WinBoat&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;For building you need to have NodeJS and Go installed on your system&lt;/li&gt; 
 &lt;li&gt;Clone the repo (&lt;code&gt;git clone https://github.com/TibixDev/WinBoat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Install the dependencies (&lt;code&gt;npm i&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Build the app and the guest server using &lt;code&gt;npm run build:linux-gs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;You can now find the built app under &lt;code&gt;dist&lt;/code&gt; with an AppImage and an Unpacked variant&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running WinBoat in development mode&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you meet the &lt;a href="https://raw.githubusercontent.com/TibixDev/winboat/main/#prerequisites"&gt;prerequisites&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Additionally, for development you need to have NodeJS and Go installed on your system&lt;/li&gt; 
 &lt;li&gt;Clone the repo (&lt;code&gt;git clone https://github.com/TibixDev/WinBoat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Install the dependencies (&lt;code&gt;npm i&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Build the guest server (&lt;code&gt;npm run build-guest-server&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Run the app (&lt;code&gt;npm run dev&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Whether it's bug fixes, feature improvements, or documentation updates, we appreciate your help making WinBoat better.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;: We maintain a focus on technical contributions only. Pull requests containing political/sexual content, or other sensitive/controversial topics will not be accepted. Let's keep things focused on making great software! üöÄ&lt;/p&gt; 
&lt;p&gt;Feel free to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Report bugs and issues&lt;/li&gt; 
 &lt;li&gt;Submit feature requests&lt;/li&gt; 
 &lt;li&gt;Contribute code improvements&lt;/li&gt; 
 &lt;li&gt;Help with documentation&lt;/li&gt; 
 &lt;li&gt;Share feedback and suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our issues page to get started, or feel free to open a new issue if you've found something that needs attention.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;WinBoat is licensed under the &lt;a href="https://github.com/TibixDev/winboat/raw/main/LICENSE"&gt;MIT&lt;/a&gt; license&lt;/p&gt; 
&lt;h2&gt;Inspiration / Alternatives&lt;/h2&gt; 
&lt;p&gt;These past few years some cool projects have surfaced with similar concepts, some of which we've also taken inspirations from.&lt;br /&gt; They're awesome and you should check them out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/winapps-org/winapps"&gt;WinApps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/casualsnek/cassowary"&gt;Cassowary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dockur/windows"&gt;dockur/windows&lt;/a&gt; (üåü Also used in WinBoat)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Socials &amp;amp; Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.winboat.app/"&gt;&lt;img src="https://img.shields.io/badge/Website-winboat.app-blue?style=flat&amp;amp;logo=googlechrome&amp;amp;logoColor=white" alt="Website" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/winboat_app"&gt;&lt;img src="https://img.shields.io/badge/Twitter-@winboat__app-1DA1F2?style=flat&amp;amp;logo=x&amp;amp;logoColor=white" alt="Twitter" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fosstodon.org/@winboat"&gt;&lt;img src="https://img.shields.io/badge/Mastodon-@winboat-6364FF?style=flat&amp;amp;logo=mastodon&amp;amp;logoColor=white" alt="Mastodon" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://bsky.app/profile/winboat.app"&gt;&lt;img src="https://img.shields.io/badge/Bluesky-winboat.app-00A8E8?style=flat&amp;amp;logo=bluesky&amp;amp;logoColor=white" alt="Bluesky" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://discord.gg/MEwmpWm4tN"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join_Community-5865F2?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="mailto:staff@winboat.app"&gt;&lt;img src="https://img.shields.io/badge/Email-staff@winboat.app-D14836?style=flat&amp;amp;logo=gmail&amp;amp;logoColor=white" alt="Email" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://deepwiki.com/TibixDev/winboat"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://www.star-history.com/#tibixdev/winboat&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>supermemoryai/supermemory</title>
      <link>https://github.com/supermemoryai/supermemory</link>
      <description>&lt;p&gt;Memory engine and app that is extremely fast, scalable. The Memory API for the AI era.&lt;/p&gt;&lt;hr&gt;&lt;div align="center" style="padding-bottom:20px;padding-top:20px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/logo.svg?sanitize=true" alt="supermemory Logo" width="400" /&gt; 
&lt;/div&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/landing-page.jpeg" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Core Functionality&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#add-memory"&gt;Add Memories from Any Content&lt;/a&gt;&lt;/strong&gt;: Easily add memories from URLs, PDFs, and plain text‚Äîjust paste, upload, or link.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#chat-memories"&gt;Chat with Your Memories&lt;/a&gt;&lt;/strong&gt;: Converse with your stored content using natural language chat.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#mcp-integration"&gt;Supermemory MCP Integration&lt;/a&gt;&lt;/strong&gt;: Seamlessly connect with all major AI tools (Claude, Cursor, etc.) via Supermemory MCP.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How do i use this?&lt;/h2&gt; 
&lt;p&gt;Go to &lt;a href="https://app.supermemory.ai"&gt;app.supermemory.ai&lt;/a&gt; and sign into with your account&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a id="add-memory"&gt;&lt;/a&gt;Start Adding Memory with your choice of format (Note, Link, File)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/add-memory.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;You can also Connect to your favourite services (Notion, Google Drive, OneDrive)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/add-connections.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;a id="chat-memories"&gt;&lt;/a&gt;Once Memories are added, you can chat with Supermemory by clicking on "Open Chat" and retrieve info from your saved memories&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/chat.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;&lt;a id="mcp-integration"&gt;&lt;/a&gt;Add MCP to your AI Tools (by clicking on "Connect to your AI" and select the AI tool you are trying to integrate)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/mcp.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Have questions or feedback? We're here to help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Email: &lt;a href="mailto:dhravya@supermemory.com"&gt;dhravya@supermemory.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://docs.supermemory.ai"&gt;docs.supermemory.ai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from developers of all skill levels! Whether you're fixing bugs, adding features, or improving documentation, your help makes supermemory better for everyone.&lt;/p&gt; 
&lt;h3&gt;Quick Start for Contributors&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork and clone&lt;/strong&gt; the repository&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt; with &lt;code&gt;bun install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Set up your environment&lt;/strong&gt; by copying &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env.local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start developing&lt;/strong&gt; with &lt;code&gt;bun run dev&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For detailed guidelines, development setup, coding standards, and the complete contribution workflow, please see our &lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/CONTRIBUTING.md"&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Ways to Contribute&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üêõ &lt;strong&gt;Bug fixes&lt;/strong&gt; - Help us squash those pesky issues&lt;/li&gt; 
 &lt;li&gt;‚ú® &lt;strong&gt;New features&lt;/strong&gt; - Add functionality that users will love&lt;/li&gt; 
 &lt;li&gt;üé® &lt;strong&gt;UI/UX improvements&lt;/strong&gt; - Make the interface more intuitive&lt;/li&gt; 
 &lt;li&gt;‚ö° &lt;strong&gt;Performance optimizations&lt;/strong&gt; - Help us make supermemory faster&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our &lt;a href="https://github.com/supermemoryai/supermemory/issues"&gt;Issues&lt;/a&gt; page for &lt;code&gt;good first issue&lt;/code&gt; and &lt;code&gt;help wanted&lt;/code&gt; labels to get started!&lt;/p&gt; 
&lt;h2&gt;Updates &amp;amp; Roadmap&lt;/h2&gt; 
&lt;p&gt;Stay up to date with the latest improvements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.supermemory.ai/changelog/overview"&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/supermemoryai"&gt;X&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>FlowiseAI/Flowise</title>
      <link>https://github.com/FlowiseAI/Flowise</link>
      <description>&lt;p&gt;Build AI Agents, Visually&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://github.com/FlowiseAI/Flowise/raw/main/images/flowise_white.svg#gh-light-mode-only" /&gt; &lt;img src="https://github.com/FlowiseAI/Flowise/raw/main/images/flowise_dark.svg#gh-dark-mode-only" /&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/FlowiseAI/Flowise/releases"&gt;&lt;img src="https://img.shields.io/github/release/FlowiseAI/Flowise" alt="Release Notes" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/jbaHfsRVBW"&gt;&lt;img src="https://img.shields.io/discord/1087698854775881778?label=Discord&amp;amp;logo=discord" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/FlowiseAI"&gt;&lt;img src="https://img.shields.io/twitter/follow/FlowiseAI?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://star-history.com/#FlowiseAI/Flowise"&gt;&lt;img src="https://img.shields.io/github/stars/FlowiseAI/Flowise?style=social" alt="GitHub star chart" /&gt;&lt;/a&gt; &lt;a href="https://github.com/FlowiseAI/Flowise/fork"&gt;&lt;img src="https://img.shields.io/github/forks/FlowiseAI/Flowise?style=social" alt="GitHub fork" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/i18n/README-TW.md"&gt;ÁπÅÈ´î‰∏≠Êñá&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/i18n/README-ZH.md"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/i18n/README-JA.md"&gt;Êó•Êú¨Ë™û&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/i18n/README-KR.md"&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;Build AI Agents, Visually&lt;/h3&gt; 
&lt;a href="https://github.com/FlowiseAI/Flowise"&gt; &lt;img width="100%" src="https://github.com/FlowiseAI/Flowise/raw/main/images/flowise_agentflow.gif?raw=true" /&gt;&lt;/a&gt; 
&lt;h2&gt;üìö Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/#-quick-start"&gt;‚ö° Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/#-docker"&gt;üê≥ Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/#-developers"&gt;üë®‚Äçüíª Developers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/#-env-variables"&gt;üå± Env Variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/#-documentation"&gt;üìñ Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/#-self-host"&gt;üåê Self Host&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/#%EF%B8%8F-flowise-cloud"&gt;‚òÅÔ∏è Flowise Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/#-support"&gt;üôã Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/#-contributing"&gt;üôå Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/#-license"&gt;üìÑ License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚ö°Quick Start&lt;/h2&gt; 
&lt;p&gt;Download and Install &lt;a href="https://nodejs.org/en/download"&gt;NodeJS&lt;/a&gt; &amp;gt;= 18.15.0&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install Flowise&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g flowise
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start Flowise&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npx flowise start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üê≥ Docker&lt;/h2&gt; 
&lt;h3&gt;Docker Compose&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the Flowise project&lt;/li&gt; 
 &lt;li&gt;Go to &lt;code&gt;docker&lt;/code&gt; folder at the root of the project&lt;/li&gt; 
 &lt;li&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; file, paste it into the same location, and rename to &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;docker compose up -d&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;You can bring the containers down by &lt;code&gt;docker compose stop&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Docker Image&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Build the image locally:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker build --no-cache -t flowise .
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run image:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --name flowise -p 3000:3000 flowise
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Stop image:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker stop flowise
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üë®‚Äçüíª Developers&lt;/h2&gt; 
&lt;p&gt;Flowise has 3 different modules in a single mono repository.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;server&lt;/code&gt;: Node backend to serve API logics&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ui&lt;/code&gt;: React frontend&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;components&lt;/code&gt;: Third-party nodes integrations&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api-documentation&lt;/code&gt;: Auto-generated swagger-ui API docs from express&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Prerequisite&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href="https://pnpm.io/installation"&gt;PNPM&lt;/a&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm i -g pnpm
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Setup&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Clone the repository:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/FlowiseAI/Flowise.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Go into repository folder:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cd Flowise
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install all dependencies of all modules:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build all the code:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm build
&lt;/code&gt;&lt;/pre&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Exit code 134 (JavaScript heap out of memory)&lt;/summary&gt; If you get this error when running the above `build` script, try increasing the Node.js heap size and run the script again: 
   &lt;pre&gt;&lt;code class="language-bash"&gt;# macOS / Linux / Git Bash
export NODE_OPTIONS="--max-old-space-size=4096"

# Windows PowerShell
$env:NODE_OPTIONS="--max-old-space-size=4096"

# Windows CMD
set NODE_OPTIONS=--max-old-space-size=4096
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;Then run:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm build
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start the app:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm start
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can now access the app on &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For development build:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Create &lt;code&gt;.env&lt;/code&gt; file and specify the &lt;code&gt;VITE_PORT&lt;/code&gt; (refer to &lt;code&gt;.env.example&lt;/code&gt;) in &lt;code&gt;packages/ui&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Create &lt;code&gt;.env&lt;/code&gt; file and specify the &lt;code&gt;PORT&lt;/code&gt; (refer to &lt;code&gt;.env.example&lt;/code&gt;) in &lt;code&gt;packages/server&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Run:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;Any code changes will reload the app automatically on &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üå± Env Variables&lt;/h2&gt; 
&lt;p&gt;Flowise supports different environment variables to configure your instance. You can specify the following variables in the &lt;code&gt;.env&lt;/code&gt; file inside &lt;code&gt;packages/server&lt;/code&gt; folder. Read &lt;a href="https://github.com/FlowiseAI/Flowise/raw/main/CONTRIBUTING.md#-env-variables"&gt;more&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üìñ Documentation&lt;/h2&gt; 
&lt;p&gt;You can view the Flowise Docs &lt;a href="https://docs.flowiseai.com/"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üåê Self Host&lt;/h2&gt; 
&lt;p&gt;Deploy Flowise self-hosted in your existing infrastructure, we support various &lt;a href="https://docs.flowiseai.com/configuration/deployment"&gt;deployments&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://docs.flowiseai.com/configuration/deployment/aws"&gt;AWS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://docs.flowiseai.com/configuration/deployment/azure"&gt;Azure&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://docs.flowiseai.com/configuration/deployment/digital-ocean"&gt;Digital Ocean&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://docs.flowiseai.com/configuration/deployment/gcp"&gt;GCP&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://computenest.console.aliyun.com/service/instance/create/default?type=user&amp;amp;ServiceName=Flowise%E7%A4%BE%E5%8C%BA%E7%89%88"&gt;Alibaba Cloud&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Others&lt;/summary&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;&lt;a href="https://docs.flowiseai.com/configuration/deployment/railway"&gt;Railway&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://railway.app/template/pn4G8S?referralCode=WVNPD9"&gt;&lt;img src="https://railway.app/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;&lt;a href="https://docs.flowiseai.com/configuration/deployment/render"&gt;Render&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://docs.flowiseai.com/configuration/deployment/render"&gt;&lt;img src="https://render.com/images/deploy-to-render-button.svg?sanitize=true" alt="Deploy to Render" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;&lt;a href="https://docs.flowiseai.com/deployment/hugging-face"&gt;HuggingFace Spaces&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://huggingface.co/spaces/FlowiseAI/Flowise"&gt;&lt;img src="https://huggingface.co/datasets/huggingface/badges/raw/main/open-in-hf-spaces-sm.svg?sanitize=true" alt="HuggingFace Spaces" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;&lt;a href="https://elest.io/open-source/flowiseai"&gt;Elestio&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://elest.io/open-source/flowiseai"&gt;&lt;img src="https://elest.io/images/logos/deploy-to-elestio-btn.png" alt="Deploy on Elestio" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;&lt;a href="https://template.sealos.io/deploy?templateName=flowise"&gt;Sealos&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://template.sealos.io/deploy?templateName=flowise"&gt;&lt;img src="https://sealos.io/Deploy-on-Sealos.svg?sanitize=true" alt="Deploy on Sealos" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;&lt;a href="https://repocloud.io/details/?app_id=29"&gt;RepoCloud&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://repocloud.io/details/?app_id=29"&gt;&lt;img src="https://d16t0pc4846x52.cloudfront.net/deploy.png" alt="Deploy on RepoCloud" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/details&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚òÅÔ∏è Flowise Cloud&lt;/h2&gt; 
&lt;p&gt;Get Started with &lt;a href="https://flowiseai.com/"&gt;Flowise Cloud&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üôã Support&lt;/h2&gt; 
&lt;p&gt;Feel free to ask any questions, raise problems, and request new features in &lt;a href="https://github.com/FlowiseAI/Flowise/discussions"&gt;Discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üôå Contributing&lt;/h2&gt; 
&lt;p&gt;Thanks go to these awesome contributors&lt;/p&gt; 
&lt;a href="https://github.com/FlowiseAI/Flowise/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=FlowiseAI/Flowise" /&gt; &lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;. Reach out to us at &lt;a href="https://discord.gg/jbaHfsRVBW"&gt;Discord&lt;/a&gt; if you have any questions or issues.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#FlowiseAI/Flowise&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=FlowiseAI/Flowise&amp;amp;type=Timeline" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üìÑ License&lt;/h2&gt; 
&lt;p&gt;Source code in this repository is made available under the &lt;a href="https://raw.githubusercontent.com/FlowiseAI/Flowise/main/LICENSE.md"&gt;Apache License Version 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>evershopcommerce/evershop</title>
      <link>https://github.com/evershopcommerce/evershop</link>
      <description>&lt;p&gt;üõçÔ∏è Typescript E-commerce Platform&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="60" height="68" alt="EverShop Logo" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/logo-green.png" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;EverShop&lt;/h1&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://evershop.io/docs/development/getting-started/introduction"&gt;Documentation&lt;/a&gt; | &lt;a href="https://demo.evershop.io/"&gt;Demo&lt;/a&gt; &lt;/h4&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/evershopcommerce/evershop/actions/workflows/build_test.yml/badge.svg?sanitize=true" alt="Github Action" /&gt; &lt;a href="https://twitter.com/evershopjs"&gt; &lt;img alt="Twitter Follow" src="https://img.shields.io/twitter/follow/evershopjs?style=social" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/GSzt7dt7RM"&gt; &lt;img src="https://img.shields.io/discord/757179260417867879?label=discord" alt="Discord" /&gt; &lt;/a&gt; &lt;a href="https://opensource.org/licenses/GPL-3.0"&gt; &lt;img src="https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true" alt="License" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="EverShop" width="950" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/banner.png" /&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;EverShop is a modern, TypeScript-first eCommerce platform built with GraphQL and React. Designed for developers, it offers essential commerce features in a modular, fully customizable architecture‚Äîperfect for building tailored shopping experiences with confidence and speed.&lt;/p&gt; 
&lt;h2&gt;Installation Using Docker&lt;/h2&gt; 
&lt;p&gt;You can get started with EverShop in minutes by using the Docker image. The Docker image is a great way to get started with EverShop without having to worry about installing dependencies or configuring your environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL https://raw.githubusercontent.com/evershopcommerce/evershop/main/docker-compose.yml &amp;gt; docker-compose.yml
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the full installation guide, please refer to our &lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/module/create-your-first-extension"&gt;Extension development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/theme/theme-overview"&gt;Theme development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Explore our demo store.&lt;/p&gt; 
&lt;p align="left"&gt; &lt;a href="https://demo.evershop.io/admin" target="_blank"&gt; &lt;img alt="EverShop Admin Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-back.png" /&gt; &lt;/a&gt; &lt;a href="https://demo.evershop.io/" target="_blank"&gt; &lt;img alt="EverShop Store Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-front.png" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;b&gt;Demo user:&lt;/b&gt; 
&lt;p&gt;Email: &lt;a href="mailto:demo@evershop.io"&gt;demo@evershop.io&lt;/a&gt;&lt;br /&gt; Password: 123456&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you like my work, feel free to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚≠ê this repository. It helps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fevershopcommerce%2Fevershop&amp;amp;text=Awesome%20React%20Ecommerce%20Project&amp;amp;hashtags=react,ecommerce,expressjs,graphql"&gt;&lt;img src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" alt="Tweet" /&gt;&lt;/a&gt; about EverShop. Thank you!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;EverShop is an open-source project. We are committed to a fully transparent development process and appreciate highly any contributions. Whether you are helping us fix bugs, proposing new features, improving our documentation or spreading the word - we would love to have you as part of the EverShop community.&lt;/p&gt; 
&lt;h3&gt;Ask a question about EverShop&lt;/h3&gt; 
&lt;p&gt;You can ask questions, and participate in discussions about EverShop-related topics in the EverShop Discord channel.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/GSzt7dt7RM"&gt;&lt;img src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/discord_banner_github.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create a bug report&lt;/h3&gt; 
&lt;p&gt;If you see an error message or run into an issue, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;create bug report&lt;/a&gt;. This effort is valued and it will help all EverShop users.&lt;/p&gt; 
&lt;h3&gt;Submit a feature request&lt;/h3&gt; 
&lt;p&gt;If you have an idea, or you're missing a capability that would make development easier and more robust, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;Submit feature request&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If a similar feature request already exists, don't forget to leave a "+1". If you add some more information such as your thoughts and vision about the feature, your comments will be embraced warmly :)&lt;/p&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/evershopcommerce/evershop/raw/main/LICENSE"&gt;GPL-3.0 License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>excalidraw/excalidraw</title>
      <link>https://github.com/excalidraw/excalidraw</link>
      <description>&lt;p&gt;Virtual whiteboard for sketching hand-drawn like diagrams&lt;/p&gt;&lt;hr&gt;&lt;a href="https://excalidraw.com/" target="_blank" rel="noopener"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" alt="Excalidraw" srcset="https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github/excalidraw_github_cover_2_dark.png" /&gt; 
  &lt;img alt="Excalidraw" src="https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github/excalidraw_github_cover_2.png" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://excalidraw.com"&gt;Excalidraw Editor&lt;/a&gt; | &lt;a href="https://plus.excalidraw.com/blog"&gt;Blog&lt;/a&gt; | &lt;a href="https://docs.excalidraw.com"&gt;Documentation&lt;/a&gt; | &lt;a href="https://plus.excalidraw.com"&gt;Excalidraw+&lt;/a&gt; &lt;/h4&gt; 
&lt;div align="center"&gt; 
 &lt;h2&gt; An open source virtual hand-drawn style whiteboard. &lt;br /&gt; Collaborative and end-to-end encrypted. &lt;br /&gt; &lt;br /&gt; &lt;/h2&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/excalidraw/excalidraw/raw/master/LICENSE"&gt; &lt;img alt="Excalidraw is released under the MIT license." src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@excalidraw/excalidraw"&gt; &lt;img alt="npm downloads/month" src="https://img.shields.io/npm/dm/@excalidraw/excalidraw" /&gt; &lt;/a&gt; &lt;a href="https://docs.excalidraw.com/docs/introduction/contributing"&gt; &lt;img alt="PRs welcome!" src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/UexuTaE"&gt; &lt;img alt="Chat on Discord" src="https://img.shields.io/discord/723672430744174682?color=738ad6&amp;amp;label=Chat%20on%20Discord&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;widge=false" /&gt; &lt;/a&gt; &lt;a href="https://deepwiki.com/excalidraw/excalidraw"&gt; &lt;img alt="Ask DeepWiki" src="https://deepwiki.com/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/excalidraw"&gt; &lt;img alt="Follow Excalidraw on Twitter" src="https://img.shields.io/twitter/follow/excalidraw.svg?label=follow+@excalidraw&amp;amp;style=social&amp;amp;logo=twitter" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;figure&gt; 
  &lt;a href="https://excalidraw.com" target="_blank" rel="noopener"&gt; &lt;img src="https://excalidraw.nyc3.cdn.digitaloceanspaces.com/github%2Fproduct_showcase.png" alt="Product showcase" /&gt; &lt;/a&gt; 
  &lt;figcaption&gt; 
   &lt;p align="center"&gt; Create beautiful hand-drawn like diagrams, wireframes, or whatever you like. &lt;/p&gt; 
  &lt;/figcaption&gt; 
 &lt;/figure&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;The Excalidraw editor (npm package) supports:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üíØ&amp;nbsp;Free &amp;amp; open-source.&lt;/li&gt; 
 &lt;li&gt;üé®&amp;nbsp;Infinite, canvas-based whiteboard.&lt;/li&gt; 
 &lt;li&gt;‚úçÔ∏è&amp;nbsp;Hand-drawn like style.&lt;/li&gt; 
 &lt;li&gt;üåì&amp;nbsp;Dark mode.&lt;/li&gt; 
 &lt;li&gt;üèóÔ∏è&amp;nbsp;Customizable.&lt;/li&gt; 
 &lt;li&gt;üì∑&amp;nbsp;Image support.&lt;/li&gt; 
 &lt;li&gt;üòÄ&amp;nbsp;Shape libraries support.&lt;/li&gt; 
 &lt;li&gt;üåê&amp;nbsp;Localization (i18n) support.&lt;/li&gt; 
 &lt;li&gt;üñºÔ∏è&amp;nbsp;Export to PNG, SVG &amp;amp; clipboard.&lt;/li&gt; 
 &lt;li&gt;üíæ&amp;nbsp;Open format - export drawings as an &lt;code&gt;.excalidraw&lt;/code&gt; json file.&lt;/li&gt; 
 &lt;li&gt;‚öíÔ∏è&amp;nbsp;Wide range of tools - rectangle, circle, diamond, arrow, line, free-draw, eraser...&lt;/li&gt; 
 &lt;li&gt;‚û°Ô∏è&amp;nbsp;Arrow-binding &amp;amp; labeled arrows.&lt;/li&gt; 
 &lt;li&gt;üîô&amp;nbsp;Undo / Redo.&lt;/li&gt; 
 &lt;li&gt;üîç&amp;nbsp;Zoom and panning support.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Excalidraw.com&lt;/h2&gt; 
&lt;p&gt;The app hosted at &lt;a href="https://excalidraw.com"&gt;excalidraw.com&lt;/a&gt; is a minimal showcase of what you can build with Excalidraw. Its &lt;a href="https://github.com/excalidraw/excalidraw/tree/master/excalidraw-app"&gt;source code&lt;/a&gt; is part of this repository as well, and the app features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üì°&amp;nbsp;PWA support (works offline).&lt;/li&gt; 
 &lt;li&gt;ü§º&amp;nbsp;Real-time collaboration.&lt;/li&gt; 
 &lt;li&gt;üîí&amp;nbsp;End-to-end encryption.&lt;/li&gt; 
 &lt;li&gt;üíæ&amp;nbsp;Local-first support (autosaves to the browser).&lt;/li&gt; 
 &lt;li&gt;üîó&amp;nbsp;Shareable links (export to a readonly link you can share with others).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We'll be adding these features as drop-in plugins for the npm package in the future.&lt;/p&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; following instructions are for installing the Excalidraw &lt;a href="https://www.npmjs.com/package/@excalidraw/excalidraw"&gt;npm package&lt;/a&gt; when integrating Excalidraw into your own app. To run the repository locally for development, please refer to our &lt;a href="https://docs.excalidraw.com/docs/introduction/development"&gt;Development Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt; to install the package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install react react-dom @excalidraw/excalidraw
# or
yarn add react react-dom @excalidraw/excalidraw
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check out our &lt;a href="https://docs.excalidraw.com/docs/@excalidraw/excalidraw/installation"&gt;documentation&lt;/a&gt; for more details!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Missing something or found a bug? &lt;a href="https://github.com/excalidraw/excalidraw/issues"&gt;Report here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Want to contribute? Check out our &lt;a href="https://docs.excalidraw.com/docs/introduction/contributing"&gt;contribution guide&lt;/a&gt; or let us know on &lt;a href="https://discord.gg/UexuTaE"&gt;Discord&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Want to help with translations? See the &lt;a href="https://docs.excalidraw.com/docs/introduction/contributing#translating"&gt;translation guide&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=pomdtr.excalidraw-editor"&gt;VScode extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/@excalidraw/excalidraw"&gt;npm package&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Who's integrating Excalidraw&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://googlecloudcheatsheet.withgoogle.com/architecture"&gt;Google Cloud&lt;/a&gt; ‚Ä¢ &lt;a href="https://meta.com/"&gt;Meta&lt;/a&gt; ‚Ä¢ &lt;a href="https://codesandbox.io/"&gt;CodeSandbox&lt;/a&gt; ‚Ä¢ &lt;a href="https://github.com/zsviczian/obsidian-excalidraw-plugin"&gt;Obsidian Excalidraw&lt;/a&gt; ‚Ä¢ &lt;a href="https://replit.com/"&gt;Replit&lt;/a&gt; ‚Ä¢ &lt;a href="https://slite.com/"&gt;Slite&lt;/a&gt; ‚Ä¢ &lt;a href="https://notion.so/"&gt;Notion&lt;/a&gt; ‚Ä¢ &lt;a href="https://www.hackerrank.com/"&gt;HackerRank&lt;/a&gt; ‚Ä¢ and many others&lt;/p&gt; 
&lt;h2&gt;Sponsors &amp;amp; support&lt;/h2&gt; 
&lt;p&gt;If you like the project, you can become a sponsor at &lt;a href="https://opencollective.com/excalidraw"&gt;Open Collective&lt;/a&gt; or use &lt;a href="https://plus.excalidraw.com/"&gt;Excalidraw+&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Thank you for supporting Excalidraw&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/excalidraw/tiers/sponsors/0/website"&gt;&lt;img src="https://opencollective.com/excalidraw/tiers/sponsors/0/avatar.svg?avatarHeight=120" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/excalidraw/tiers/sponsors/1/website"&gt;&lt;img src="https://opencollective.com/excalidraw/tiers/sponsors/1/avatar.svg?avatarHeight=120" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/excalidraw/tiers/sponsors/2/website"&gt;&lt;img src="https://opencollective.com/excalidraw/tiers/sponsors/2/avatar.svg?avatarHeight=120" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/excalidraw/tiers/sponsors/3/website"&gt;&lt;img src="https://opencollective.com/excalidraw/tiers/sponsors/3/avatar.svg?avatarHeight=120" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/excalidraw/tiers/sponsors/4/website"&gt;&lt;img src="https://opencollective.com/excalidraw/tiers/sponsors/4/avatar.svg?avatarHeight=120" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/excalidraw/tiers/sponsors/5/website"&gt;&lt;img src="https://opencollective.com/excalidraw/tiers/sponsors/5/avatar.svg?avatarHeight=120" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/excalidraw/tiers/sponsors/6/website"&gt;&lt;img src="https://opencollective.com/excalidraw/tiers/sponsors/6/avatar.svg?avatarHeight=120" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/excalidraw/tiers/sponsors/7/website"&gt;&lt;img src="https://opencollective.com/excalidraw/tiers/sponsors/7/avatar.svg?avatarHeight=120" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/excalidraw/tiers/sponsors/8/website"&gt;&lt;img src="https://opencollective.com/excalidraw/tiers/sponsors/8/avatar.svg?avatarHeight=120" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/excalidraw/tiers/sponsors/9/website"&gt;&lt;img src="https://opencollective.com/excalidraw/tiers/sponsors/9/avatar.svg?avatarHeight=120" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/excalidraw/tiers/sponsors/10/website"&gt;&lt;img src="https://opencollective.com/excalidraw/tiers/sponsors/10/avatar.svg?avatarHeight=120" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/excalidraw#category-CONTRIBUTE" target="_blank"&gt;&lt;img src="https://opencollective.com/excalidraw/tiers/backers.svg?avatarHeight=32" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Last but not least, we're thankful to these companies for offering their services for free:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://vercel.com"&gt;&lt;img src="https://raw.githubusercontent.com/excalidraw/excalidraw/master/.github/assets/vercel.svg?sanitize=true" alt="Vercel" /&gt;&lt;/a&gt; &lt;a href="https://sentry.io"&gt;&lt;img src="https://raw.githubusercontent.com/excalidraw/excalidraw/master/.github/assets/sentry.svg?sanitize=true" alt="Sentry" /&gt;&lt;/a&gt; &lt;a href="https://crowdin.com"&gt;&lt;img src="https://raw.githubusercontent.com/excalidraw/excalidraw/master/.github/assets/crowdin.svg?sanitize=true" alt="Crowdin" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anthropics/claude-code</title>
      <link>https://github.com/anthropics/claude-code</link>
      <description>&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows - all through natural language commands.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Code&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/Node.js-18%2B-brightgreen?style=flat-square" alt="" /&gt; &lt;a href="https://www.npmjs.com/package/@anthropic-ai/claude-code"&gt;&lt;img src="https://img.shields.io/npm/v/@anthropic-ai/claude-code.svg?style=flat-square" alt="npm" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows -- all through natural language commands. Use it in your terminal, IDE, or tag @claude on Github.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Learn more in the &lt;a href="https://docs.anthropic.com/en/docs/claude-code/overview"&gt;official documentation&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/anthropics/claude-code/main/demo.gif" /&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Claude Code:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install -g @anthropic-ai/claude-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Navigate to your project directory and run &lt;code&gt;claude&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Reporting Bugs&lt;/h2&gt; 
&lt;p&gt;We welcome your feedback. Use the &lt;code&gt;/bug&lt;/code&gt; command to report issues directly within Claude Code, or file a &lt;a href="https://github.com/anthropics/claude-code/issues"&gt;GitHub issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Connect on Discord&lt;/h2&gt; 
&lt;p&gt;Join the &lt;a href="https://anthropic.com/discord"&gt;Claude Developers Discord&lt;/a&gt; to connect with other developers using Claude Code. Get help, share feedback, and discuss your projects with the community.&lt;/p&gt; 
&lt;h2&gt;Data collection, usage, and retention&lt;/h2&gt; 
&lt;p&gt;When you use Claude Code, we collect feedback, which includes usage data (such as code acceptance or rejections), associated conversation data, and user feedback submitted via the &lt;code&gt;/bug&lt;/code&gt; command.&lt;/p&gt; 
&lt;h3&gt;How we use your data&lt;/h3&gt; 
&lt;p&gt;See our &lt;a href="https://docs.anthropic.com/en/docs/claude-code/data-usage"&gt;data usage policies&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Privacy safeguards&lt;/h3&gt; 
&lt;p&gt;We have implemented several safeguards to protect your data, including limited retention periods for sensitive information, restricted access to user session data, and clear policies against using feedback for model training.&lt;/p&gt; 
&lt;p&gt;For full details, please review our &lt;a href="https://www.anthropic.com/legal/commercial-terms"&gt;Commercial Terms of Service&lt;/a&gt; and &lt;a href="https://www.anthropic.com/legal/privacy"&gt;Privacy Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openai/openai-node</title>
      <link>https://github.com/openai/openai-node</link>
      <description>&lt;p&gt;Official JavaScript / TypeScript library for the OpenAI API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI TypeScript and JavaScript API Library&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://npmjs.org/package/openai"&gt;&lt;img src="https://img.shields.io/npm/v/openai.svg?label=npm%20(stable)" alt="NPM version" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/bundlephobia/minzip/openai" alt="npm bundle size" /&gt; &lt;a href="https://jsr.io/@openai/openai"&gt;&lt;img src="https://jsr.io/badges/@openai/openai" alt="JSR Version" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This library provides convenient access to the OpenAI REST API from TypeScript or JavaScript.&lt;/p&gt; 
&lt;p&gt;It is generated from our &lt;a href="https://github.com/openai/openai-openapi"&gt;OpenAPI specification&lt;/a&gt; with &lt;a href="https://stainlessapi.com/"&gt;Stainless&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To learn how to use the OpenAI API, check out our &lt;a href="https://platform.openai.com/docs/api-reference"&gt;API Reference&lt;/a&gt; and &lt;a href="https://platform.openai.com/docs"&gt;Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install openai
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Installation from JSR&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;deno add jsr:@openai/openai
npx jsr add @openai/openai
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These commands will make the module importable from the &lt;code&gt;@openai/openai&lt;/code&gt; scope. You can also &lt;a href="https://jsr.io/docs/using-packages#importing-with-jsr-specifiers"&gt;import directly from JSR&lt;/a&gt; without an install step if you're using the Deno JavaScript runtime:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'jsr:@openai/openai';
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;The full API of this library can be found in &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/api.md"&gt;api.md file&lt;/a&gt; along with many &lt;a href="https://github.com/openai/openai-node/tree/master/examples"&gt;code examples&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The primary API for interacting with OpenAI models is the &lt;a href="https://platform.openai.com/docs/api-reference/responses"&gt;Responses API&lt;/a&gt;. You can generate text from the model with the code below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  apiKey: process.env['OPENAI_API_KEY'], // This is the default and can be omitted
});

const response = await client.responses.create({
  model: 'gpt-4o',
  instructions: 'You are a coding assistant that talks like a pirate',
  input: 'Are semicolons optional in JavaScript?',
});

console.log(response.output_text);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The previous standard (supported indefinitely) for generating text is the &lt;a href="https://platform.openai.com/docs/api-reference/chat"&gt;Chat Completions API&lt;/a&gt;. You can use that API to generate text from the model with the code below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  apiKey: process.env['OPENAI_API_KEY'], // This is the default and can be omitted
});

const completion = await client.chat.completions.create({
  model: 'gpt-4o',
  messages: [
    { role: 'developer', content: 'Talk like a pirate.' },
    { role: 'user', content: 'Are semicolons optional in JavaScript?' },
  ],
});

console.log(completion.choices[0].message.content);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Streaming responses&lt;/h2&gt; 
&lt;p&gt;We provide support for streaming responses using Server Sent Events (SSE).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI();

const stream = await client.responses.create({
  model: 'gpt-4o',
  input: 'Say "Sheep sleep deep" ten times fast!',
  stream: true,
});

for await (const event of stream) {
  console.log(event);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;File uploads&lt;/h2&gt; 
&lt;p&gt;Request parameters that correspond to file uploads can be passed in many different forms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;File&lt;/code&gt; (or an object with the same structure)&lt;/li&gt; 
 &lt;li&gt;a &lt;code&gt;fetch&lt;/code&gt; &lt;code&gt;Response&lt;/code&gt; (or an object with the same structure)&lt;/li&gt; 
 &lt;li&gt;an &lt;code&gt;fs.ReadStream&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;the return value of our &lt;code&gt;toFile&lt;/code&gt; helper&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import fs from 'fs';
import OpenAI, { toFile } from 'openai';

const client = new OpenAI();

// If you have access to Node `fs` we recommend using `fs.createReadStream()`:
await client.files.create({ file: fs.createReadStream('input.jsonl'), purpose: 'fine-tune' });

// Or if you have the web `File` API you can pass a `File` instance:
await client.files.create({ file: new File(['my bytes'], 'input.jsonl'), purpose: 'fine-tune' });

// You can also pass a `fetch` `Response`:
await client.files.create({ file: await fetch('https://somesite/input.jsonl'), purpose: 'fine-tune' });

// Finally, if none of the above are convenient, you can use our `toFile` helper:
await client.files.create({
  file: await toFile(Buffer.from('my bytes'), 'input.jsonl'),
  purpose: 'fine-tune',
});
await client.files.create({
  file: await toFile(new Uint8Array([0, 1, 2]), 'input.jsonl'),
  purpose: 'fine-tune',
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Webhook Verification&lt;/h2&gt; 
&lt;p&gt;Verifying webhook signatures is &lt;em&gt;optional but encouraged&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;For more information about webhooks, see &lt;a href="https://platform.openai.com/docs/guides/webhooks"&gt;the API docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Parsing webhook payloads&lt;/h3&gt; 
&lt;p&gt;For most use cases, you will likely want to verify the webhook and parse the payload at the same time. To achieve this, we provide the method &lt;code&gt;client.webhooks.unwrap()&lt;/code&gt;, which parses a webhook request and verifies that it was sent by OpenAI. This method will throw an error if the signature is invalid.&lt;/p&gt; 
&lt;p&gt;Note that the &lt;code&gt;body&lt;/code&gt; parameter must be the raw JSON string sent from the server (do not parse it first). The &lt;code&gt;.unwrap()&lt;/code&gt; method will parse this JSON for you into an event object after verifying the webhook was sent from OpenAI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { headers } from 'next/headers';
import OpenAI from 'openai';

const client = new OpenAI({
  webhookSecret: process.env.OPENAI_WEBHOOK_SECRET, // env var used by default; explicit here.
});

export async function webhook(request: Request) {
  const headersList = headers();
  const body = await request.text();

  try {
    const event = client.webhooks.unwrap(body, headersList);

    switch (event.type) {
      case 'response.completed':
        console.log('Response completed:', event.data);
        break;
      case 'response.failed':
        console.log('Response failed:', event.data);
        break;
      default:
        console.log('Unhandled event type:', event.type);
    }

    return Response.json({ message: 'ok' });
  } catch (error) {
    console.error('Invalid webhook signature:', error);
    return new Response('Invalid signature', { status: 400 });
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Verifying webhook payloads directly&lt;/h3&gt; 
&lt;p&gt;In some cases, you may want to verify the webhook separately from parsing the payload. If you prefer to handle these steps separately, we provide the method &lt;code&gt;client.webhooks.verifySignature()&lt;/code&gt; to &lt;em&gt;only verify&lt;/em&gt; the signature of a webhook request. Like &lt;code&gt;.unwrap()&lt;/code&gt;, this method will throw an error if the signature is invalid.&lt;/p&gt; 
&lt;p&gt;Note that the &lt;code&gt;body&lt;/code&gt; parameter must be the raw JSON string sent from the server (do not parse it first). You will then need to parse the body after verifying the signature.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { headers } from 'next/headers';
import OpenAI from 'openai';

const client = new OpenAI({
  webhookSecret: process.env.OPENAI_WEBHOOK_SECRET, // env var used by default; explicit here.
});

export async function webhook(request: Request) {
  const headersList = headers();
  const body = await request.text();

  try {
    client.webhooks.verifySignature(body, headersList);

    // Parse the body after verification
    const event = JSON.parse(body);
    console.log('Verified event:', event);

    return Response.json({ message: 'ok' });
  } catch (error) {
    console.error('Invalid webhook signature:', error);
    return new Response('Invalid signature', { status: 400 });
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Handling errors&lt;/h2&gt; 
&lt;p&gt;When the library is unable to connect to the API, or if the API returns a non-success status code (i.e., 4xx or 5xx response), a subclass of &lt;code&gt;APIError&lt;/code&gt; will be thrown:&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const job = await client.fineTuning.jobs
  .create({ model: 'gpt-4o', training_file: 'file-abc123' })
  .catch(async (err) =&amp;gt; {
    if (err instanceof OpenAI.APIError) {
      console.log(err.request_id);
      console.log(err.status); // 400
      console.log(err.name); // BadRequestError
      console.log(err.headers); // {server: 'nginx', ...}
    } else {
      throw err;
    }
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Error codes are as follows:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Status Code&lt;/th&gt; 
   &lt;th&gt;Error Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;400&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;BadRequestError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;401&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AuthenticationError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;403&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PermissionDeniedError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;404&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;NotFoundError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;422&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UnprocessableEntityError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;429&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;RateLimitError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;gt;=500&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;InternalServerError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APIConnectionError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Request IDs&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For more information on debugging requests, see &lt;a href="https://platform.openai.com/docs/api-reference/debugging-requests"&gt;these docs&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;All object responses in the SDK provide a &lt;code&gt;_request_id&lt;/code&gt; property which is added from the &lt;code&gt;x-request-id&lt;/code&gt; response header so that you can quickly log failing requests and report them back to OpenAI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const completion = await client.chat.completions.create({
  messages: [{ role: 'user', content: 'Say this is a test' }],
  model: 'gpt-4o',
});
console.log(completion._request_id); // req_123
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also access the Request ID using the &lt;code&gt;.withResponse()&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const { data: stream, request_id } = await openai.chat.completions
  .create({
    model: 'gpt-4',
    messages: [{ role: 'user', content: 'Say this is a test' }],
    stream: true,
  })
  .withResponse();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Realtime API&lt;/h2&gt; 
&lt;p&gt;The Realtime API enables you to build low-latency, multi-modal conversational experiences. It currently supports text and audio as both input and output, as well as &lt;a href="https://platform.openai.com/docs/guides/function-calling"&gt;function calling&lt;/a&gt; through a &lt;code&gt;WebSocket&lt;/code&gt; connection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { OpenAIRealtimeWebSocket } from 'openai/realtime/websocket';

const rt = new OpenAIRealtimeWebSocket({ model: 'gpt-realtime' });

rt.on('response.text.delta', (event) =&amp;gt; process.stdout.write(event.delta));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information see &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/realtime.md"&gt;realtime.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Microsoft Azure OpenAI&lt;/h2&gt; 
&lt;p&gt;To use this library with &lt;a href="https://learn.microsoft.com/azure/ai-services/openai/overview"&gt;Azure OpenAI&lt;/a&gt;, use the &lt;code&gt;AzureOpenAI&lt;/code&gt; class instead of the &lt;code&gt;OpenAI&lt;/code&gt; class.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The Azure API shape slightly differs from the core API shape which means that the static types for responses / params won't always be correct.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { AzureOpenAI } from 'openai';
import { getBearerTokenProvider, DefaultAzureCredential } from '@azure/identity';

const credential = new DefaultAzureCredential();
const scope = 'https://cognitiveservices.azure.com/.default';
const azureADTokenProvider = getBearerTokenProvider(credential, scope);

const openai = new AzureOpenAI({ azureADTokenProvider });

const result = await openai.chat.completions.create({
  model: 'gpt-4o',
  messages: [{ role: 'user', content: 'Say hello!' }],
});

console.log(result.choices[0]!.message?.content);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Retries&lt;/h3&gt; 
&lt;p&gt;Certain errors will be automatically retried 2 times by default, with a short exponential backoff. Connection errors (for example, due to a network connectivity problem), 408 Request Timeout, 409 Conflict, 429 Rate Limit, and &amp;gt;=500 Internal errors will all be retried by default.&lt;/p&gt; 
&lt;p&gt;You can use the &lt;code&gt;maxRetries&lt;/code&gt; option to configure or disable this:&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Configure the default for all requests:
const client = new OpenAI({
  maxRetries: 0, // default is 2
});

// Or, configure per-request:
await client.chat.completions.create({ messages: [{ role: 'user', content: 'How can I get the name of the current day in JavaScript?' }], model: 'gpt-4o' }, {
  maxRetries: 5,
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Timeouts&lt;/h3&gt; 
&lt;p&gt;Requests time out after 10 minutes by default. You can configure this with a &lt;code&gt;timeout&lt;/code&gt; option:&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// Configure the default for all requests:
const client = new OpenAI({
  timeout: 20 * 1000, // 20 seconds (default is 10 minutes)
});

// Override per-request:
await client.chat.completions.create({ messages: [{ role: 'user', content: 'How can I list all files in a directory using Python?' }], model: 'gpt-4o' }, {
  timeout: 5 * 1000,
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On timeout, an &lt;code&gt;APIConnectionTimeoutError&lt;/code&gt; is thrown.&lt;/p&gt; 
&lt;p&gt;Note that requests which time out will be &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/#retries"&gt;retried twice by default&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Request IDs&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For more information on debugging requests, see &lt;a href="https://platform.openai.com/docs/api-reference/debugging-requests"&gt;these docs&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;All object responses in the SDK provide a &lt;code&gt;_request_id&lt;/code&gt; property which is added from the &lt;code&gt;x-request-id&lt;/code&gt; response header so that you can quickly log failing requests and report them back to OpenAI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const response = await client.responses.create({ model: 'gpt-4o', input: 'testing 123' });
console.log(response._request_id); // req_123
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also access the Request ID using the &lt;code&gt;.withResponse()&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const { data: stream, request_id } = await openai.responses
  .create({
    model: 'gpt-4o',
    input: 'Say this is a test',
    stream: true,
  })
  .withResponse();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Auto-pagination&lt;/h2&gt; 
&lt;p&gt;List methods in the OpenAI API are paginated. You can use the &lt;code&gt;for await ‚Ä¶ of&lt;/code&gt; syntax to iterate through items across all pages:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;async function fetchAllFineTuningJobs(params) {
  const allFineTuningJobs = [];
  // Automatically fetches more pages as needed.
  for await (const fineTuningJob of client.fineTuning.jobs.list({ limit: 20 })) {
    allFineTuningJobs.push(fineTuningJob);
  }
  return allFineTuningJobs;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can request a single page at a time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;let page = await client.fineTuning.jobs.list({ limit: 20 });
for (const fineTuningJob of page.data) {
  console.log(fineTuningJob);
}

// Convenience methods are provided for manually paginating:
while (page.hasNextPage()) {
  page = await page.getNextPage();
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Realtime API&lt;/h2&gt; 
&lt;p&gt;The Realtime API enables you to build low-latency, multi-modal conversational experiences. It currently supports text and audio as both input and output, as well as &lt;a href="https://platform.openai.com/docs/guides/function-calling"&gt;function calling&lt;/a&gt; through a &lt;code&gt;WebSocket&lt;/code&gt; connection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { OpenAIRealtimeWebSocket } from 'openai/realtime/websocket';

const rt = new OpenAIRealtimeWebSocket({ model: 'gpt-realtime' });

rt.on('response.text.delta', (event) =&amp;gt; process.stdout.write(event.delta));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information see &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/realtime.md"&gt;realtime.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Microsoft Azure OpenAI&lt;/h2&gt; 
&lt;p&gt;To use this library with &lt;a href="https://learn.microsoft.com/azure/ai-services/openai/overview"&gt;Azure OpenAI&lt;/a&gt;, use the &lt;code&gt;AzureOpenAI&lt;/code&gt; class instead of the &lt;code&gt;OpenAI&lt;/code&gt; class.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The Azure API shape slightly differs from the core API shape which means that the static types for responses / params won't always be correct.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { AzureOpenAI } from 'openai';
import { getBearerTokenProvider, DefaultAzureCredential } from '@azure/identity';

const credential = new DefaultAzureCredential();
const scope = 'https://cognitiveservices.azure.com/.default';
const azureADTokenProvider = getBearerTokenProvider(credential, scope);

const openai = new AzureOpenAI({
  azureADTokenProvider,
  apiVersion: '&amp;lt;The API version, e.g. 2024-10-01-preview&amp;gt;',
});

const result = await openai.chat.completions.create({
  model: 'gpt-4o',
  messages: [{ role: 'user', content: 'Say hello!' }],
});

console.log(result.choices[0]!.message?.content);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on support for the Azure API, see &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/azure.md"&gt;azure.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Advanced Usage&lt;/h2&gt; 
&lt;h3&gt;Accessing raw Response data (e.g., headers)&lt;/h3&gt; 
&lt;p&gt;The "raw" &lt;code&gt;Response&lt;/code&gt; returned by &lt;code&gt;fetch()&lt;/code&gt; can be accessed through the &lt;code&gt;.asResponse()&lt;/code&gt; method on the &lt;code&gt;APIPromise&lt;/code&gt; type that all methods return. This method returns as soon as the headers for a successful response are received and does not consume the response body, so you are free to write custom parsing or streaming logic.&lt;/p&gt; 
&lt;p&gt;You can also use the &lt;code&gt;.withResponse()&lt;/code&gt; method to get the raw &lt;code&gt;Response&lt;/code&gt; along with the parsed data. Unlike &lt;code&gt;.asResponse()&lt;/code&gt; this method consumes the body, returning once it is parsed.&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const client = new OpenAI();

const httpResponse = await client.responses
  .create({ model: 'gpt-4o', input: 'say this is a test.' })
  .asResponse();

// access the underlying web standard Response object
console.log(httpResponse.headers.get('X-My-Header'));
console.log(httpResponse.statusText);

const { data: modelResponse, response: raw } = await client.responses
  .create({ model: 'gpt-4o', input: 'say this is a test.' })
  .withResponse();
console.log(raw.headers.get('X-My-Header'));
console.log(modelResponse);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Logging&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] All log messages are intended for debugging only. The format and content of log messages may change between releases.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Log levels&lt;/h4&gt; 
&lt;p&gt;The log level can be configured in two ways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Via the &lt;code&gt;OPENAI_LOG&lt;/code&gt; environment variable&lt;/li&gt; 
 &lt;li&gt;Using the &lt;code&gt;logLevel&lt;/code&gt; client option (overrides the environment variable if set)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  logLevel: 'debug', // Show all log messages
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Available log levels, from most to least verbose:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;'debug'&lt;/code&gt; - Show debug messages, info, warnings, and errors&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;'info'&lt;/code&gt; - Show info messages, warnings, and errors&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;'warn'&lt;/code&gt; - Show warnings and errors (default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;'error'&lt;/code&gt; - Show only errors&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;'off'&lt;/code&gt; - Disable all logging&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;At the &lt;code&gt;'debug'&lt;/code&gt; level, all HTTP requests and responses are logged, including headers and bodies. Some authentication-related headers are redacted, but sensitive data in request and response bodies may still be visible.&lt;/p&gt; 
&lt;h4&gt;Custom logger&lt;/h4&gt; 
&lt;p&gt;By default, this library logs to &lt;code&gt;globalThis.console&lt;/code&gt;. You can also provide a custom logger. Most logging libraries are supported, including &lt;a href="https://www.npmjs.com/package/pino"&gt;pino&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/winston"&gt;winston&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/bunyan"&gt;bunyan&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/consola"&gt;consola&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/signale"&gt;signale&lt;/a&gt;, and &lt;a href="https://jsr.io/@std/log"&gt;@std/log&lt;/a&gt;. If your logger doesn't work, please open an issue.&lt;/p&gt; 
&lt;p&gt;When providing a custom logger, the &lt;code&gt;logLevel&lt;/code&gt; option still controls which messages are emitted, messages below the configured level will not be sent to your logger.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';
import pino from 'pino';

const logger = pino();

const client = new OpenAI({
  logger: logger.child({ name: 'OpenAI' }),
  logLevel: 'debug', // Send all messages to pino, allowing it to filter
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Making custom/undocumented requests&lt;/h3&gt; 
&lt;p&gt;This library is typed for convenient access to the documented API. If you need to access undocumented endpoints, params, or response properties, the library can still be used.&lt;/p&gt; 
&lt;h4&gt;Undocumented endpoints&lt;/h4&gt; 
&lt;p&gt;To make requests to undocumented endpoints, you can use &lt;code&gt;client.get&lt;/code&gt;, &lt;code&gt;client.post&lt;/code&gt;, and other HTTP verbs. Options on the client, such as retries, will be respected when making these requests.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;await client.post('/some/path', {
  body: { some_prop: 'foo' },
  query: { some_query_arg: 'bar' },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Undocumented request params&lt;/h4&gt; 
&lt;p&gt;To make requests using undocumented parameters, you may use &lt;code&gt;// @ts-expect-error&lt;/code&gt; on the undocumented parameter. This library doesn't validate at runtime that the request matches the type, so any extra values you send will be sent as-is.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;client.chat.completions.create({
  // ...
  // @ts-expect-error baz is not yet public
  baz: 'undocumented option',
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For requests with the &lt;code&gt;GET&lt;/code&gt; verb, any extra params will be in the query, all other requests will send the extra param in the body.&lt;/p&gt; 
&lt;p&gt;If you want to explicitly send an extra argument, you can do so with the &lt;code&gt;query&lt;/code&gt;, &lt;code&gt;body&lt;/code&gt;, and &lt;code&gt;headers&lt;/code&gt; request options.&lt;/p&gt; 
&lt;h4&gt;Undocumented response properties&lt;/h4&gt; 
&lt;p&gt;To access undocumented response properties, you may access the response object with &lt;code&gt;// @ts-expect-error&lt;/code&gt; on the response object, or cast the response object to the requisite type. Like the request params, we do not validate or strip extra properties from the response from the API.&lt;/p&gt; 
&lt;h3&gt;Customizing the fetch client&lt;/h3&gt; 
&lt;p&gt;If you want to use a different &lt;code&gt;fetch&lt;/code&gt; function, you can either polyfill the global:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import fetch from 'my-fetch';

globalThis.fetch = fetch;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or pass it to the client:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';
import fetch from 'my-fetch';

const client = new OpenAI({ fetch });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fetch options&lt;/h3&gt; 
&lt;p&gt;If you want to set custom &lt;code&gt;fetch&lt;/code&gt; options without overriding the &lt;code&gt;fetch&lt;/code&gt; function, you can provide a &lt;code&gt;fetchOptions&lt;/code&gt; object when instantiating the client or making a request. (Request-specific options override client options.)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  fetchOptions: {
    // `RequestInit` options
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring proxies&lt;/h4&gt; 
&lt;p&gt;To modify proxy behavior, you can provide custom &lt;code&gt;fetchOptions&lt;/code&gt; that add runtime-specific proxy options to requests:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/stainless-api/sdk-assets/refs/heads/main/node.svg?sanitize=true" align="top" width="18" height="21" /&gt; &lt;strong&gt;Node&lt;/strong&gt; &lt;sup&gt;[&lt;a href="https://github.com/nodejs/undici/raw/main/docs/docs/api/ProxyAgent.md#example---proxyagent-with-fetch"&gt;docs&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';
import * as undici from 'undici';

const proxyAgent = new undici.ProxyAgent('http://localhost:8888');
const client = new OpenAI({
  fetchOptions: {
    dispatcher: proxyAgent,
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/stainless-api/sdk-assets/refs/heads/main/bun.svg?sanitize=true" align="top" width="18" height="21" /&gt; &lt;strong&gt;Bun&lt;/strong&gt; &lt;sup&gt;[&lt;a href="https://bun.sh/guides/http/proxy"&gt;docs&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  fetchOptions: {
    proxy: 'http://localhost:8888',
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/stainless-api/sdk-assets/refs/heads/main/deno.svg?sanitize=true" align="top" width="18" height="21" /&gt; &lt;strong&gt;Deno&lt;/strong&gt; &lt;sup&gt;[&lt;a href="https://docs.deno.com/api/deno/~/Deno.createHttpClient"&gt;docs&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'npm:openai';

const httpClient = Deno.createHttpClient({ proxy: { url: 'http://localhost:8888' } });
const client = new OpenAI({
  fetchOptions: {
    client: httpClient,
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;h2&gt;Semantic versioning&lt;/h2&gt; 
&lt;p&gt;This package generally follows &lt;a href="https://semver.org/spec/v2.0.0.html"&gt;SemVer&lt;/a&gt; conventions, though certain backwards-incompatible changes may be released as minor versions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Changes that only affect static types, without breaking runtime behavior.&lt;/li&gt; 
 &lt;li&gt;Changes to library internals which are technically public but not intended or documented for external use. &lt;em&gt;(Please open a GitHub issue to let us know if you are relying on such internals.)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Changes that we do not expect to impact the vast majority of users in practice.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We take backwards-compatibility seriously and work hard to ensure you can rely on a smooth upgrade experience.&lt;/p&gt; 
&lt;p&gt;We are keen for your feedback; please open an &lt;a href="https://www.github.com/openai/openai-node/issues"&gt;issue&lt;/a&gt; with questions, bugs, or suggestions.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;TypeScript &amp;gt;= 4.9 is supported.&lt;/p&gt; 
&lt;p&gt;The following runtimes are supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Node.js 20 LTS or later (&lt;a href="https://endoflife.date/nodejs"&gt;non-EOL&lt;/a&gt;) versions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Deno v1.28.0 or higher.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Bun 1.0 or later.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Cloudflare Workers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Vercel Edge Runtime.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Jest 28 or greater with the &lt;code&gt;"node"&lt;/code&gt; environment (&lt;code&gt;"jsdom"&lt;/code&gt; is not supported at this time).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Nitro v2.6 or greater.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Web browsers: disabled by default to avoid exposing your secret API credentials. Enable browser support by explicitly setting &lt;code&gt;dangerouslyAllowBrowser&lt;/code&gt; to true'.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;More explanation&lt;/summary&gt; 
   &lt;h3&gt;Why is this dangerous?&lt;/h3&gt; 
   &lt;p&gt;Enabling the &lt;code&gt;dangerouslyAllowBrowser&lt;/code&gt; option can be dangerous because it exposes your secret API credentials in the client-side code. Web browsers are inherently less secure than server environments, any user with access to the browser can potentially inspect, extract, and misuse these credentials. This could lead to unauthorized access using your credentials and potentially compromise sensitive data or functionality.&lt;/p&gt; 
   &lt;h3&gt;When might this not be dangerous?&lt;/h3&gt; 
   &lt;p&gt;In certain scenarios where enabling browser support might not pose significant risks:&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Internal Tools: If the application is used solely within a controlled internal environment where the users are trusted, the risk of credential exposure can be mitigated.&lt;/li&gt; 
    &lt;li&gt;Public APIs with Limited Scope: If your API has very limited scope and the exposed credentials do not grant access to sensitive data or critical operations, the potential impact of exposure is reduced.&lt;/li&gt; 
    &lt;li&gt;Development or debugging purpose: Enabling this feature temporarily might be acceptable, provided the credentials are short-lived, aren't also used in production environments, or are frequently rotated.&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/details&gt;&lt;/li&gt; 
&lt;/ul&gt;  
&lt;p&gt;Note that React Native is not supported at this time.&lt;/p&gt; 
&lt;p&gt;If you are interested in other runtime environments, please open or upvote an issue on GitHub.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/CONTRIBUTING.md"&gt;the contributing documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iib0011/omni-tools</title>
      <link>https://github.com/iib0011/omni-tools</link>
      <description>&lt;p&gt;Self-hosted collection of powerful web-based tools for everyday tasks. No ads, no tracking, just fast, accessible utilities right from your browser!&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/iib0011/omni-tools/main/src/assets/logo.png" width="220" /&gt; 
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;a href="https://trendshift.io/repositories/13055" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13055" alt="iib0011%2Fomni-tools | Trendshift" style="width: 200px;" width="200" /&gt;&lt;/a&gt; 
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;a href="https://github.com/iib0011/omni-tools/releases"&gt; &lt;img src="https://img.shields.io/badge/version-0.6.0-blue?style=for-the-badge" /&gt; &lt;/a&gt; 
 &lt;a href="https://hub.docker.com/r/iib0011/omni-tools"&gt; &lt;img src="https://img.shields.io/docker/pulls/iib0011/omni-tools?style=for-the-badge&amp;amp;logo=docker" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/iib0011"&gt; &lt;img src="https://img.shields.io/github/stars/iib0011/omni-tools?style=for-the-badge&amp;amp;logo=github" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/iib0011/omni-tools/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/iib0011/omni-tools?style=for-the-badge" /&gt; &lt;/a&gt; 
 &lt;a href="https://discord.gg/SDbbn3hT4b"&gt; &lt;img src="https://img.shields.io/discord/1342971141823664179?label=Discord&amp;amp;style=for-the-badge" /&gt; &lt;/a&gt; 
 &lt;br /&gt;
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;p&gt;Welcome to OmniTools, a self-hosted web app offering a variety of online tools to simplify everyday tasks. Whether you are coding, manipulating images/videos, PDFs or crunching numbers, OmniTools has you covered. Please don't forget to star the repo to support us. Here is the &lt;a href="https://omnitools.app"&gt;demo&lt;/a&gt; website.&lt;/p&gt; 
&lt;p&gt;All files are processed entirely on the client side: nothing ever leaves your device. Plus, the Docker image is super lightweight at just 28MB, making it fast to deploy and easy to self-host.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/iib0011/omni-tools/main/docs-images/img.png" alt="img.png" /&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iib0011/omni-tools/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iib0011/omni-tools/main/#self-hostrun"&gt;Self-host&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iib0011/omni-tools/main/#contribute"&gt;Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iib0011/omni-tools/main/#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/iib0011/omni-tools/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;We strive to offer a variety of tools, including:&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;Image/Video/Audio Tools&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Image Resizer&lt;/li&gt; 
 &lt;li&gt;Image Converter&lt;/li&gt; 
 &lt;li&gt;Image Editor&lt;/li&gt; 
 &lt;li&gt;Video Trimmer&lt;/li&gt; 
 &lt;li&gt;Video Reverser&lt;/li&gt; 
 &lt;li&gt;And more...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;PDF Tools&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;PDF Splitter&lt;/li&gt; 
 &lt;li&gt;PDF Merger&lt;/li&gt; 
 &lt;li&gt;PDF Editor&lt;/li&gt; 
 &lt;li&gt;And more...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Text/List Tools&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Case Converters&lt;/li&gt; 
 &lt;li&gt;List Shuffler&lt;/li&gt; 
 &lt;li&gt;Text Formatters&lt;/li&gt; 
 &lt;li&gt;And more...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Date and Time Tools&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Date Calculators&lt;/li&gt; 
 &lt;li&gt;Time Zone Converters&lt;/li&gt; 
 &lt;li&gt;And more...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Math Tools&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Generate Prime Numbers&lt;/li&gt; 
 &lt;li&gt;Calculate voltage, current, or resistance&lt;/li&gt; 
 &lt;li&gt;And more...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Data Tools&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;JSON Tools&lt;/li&gt; 
 &lt;li&gt;CSV Tools&lt;/li&gt; 
 &lt;li&gt;XML Tools&lt;/li&gt; 
 &lt;li&gt;And more...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Stay tuned as we continue to expand and improve our collection!&lt;/p&gt; 
&lt;h2&gt;Self-host/Run&lt;/h2&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --name omni-tools --restart unless-stopped -p 8080:80 iib0011/omni-tools:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker Compose&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  omni-tools:
    image: iib0011/omni-tools:latest
    container_name: omni-tools
    restart: unless-stopped
    ports:
      - "8080:80"

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;This is a React Project with Typescript Material UI. We use icons from &lt;a href="https://icon-sets.iconify.design"&gt;Iconify&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Project setup&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/iib0011/omni-tools.git
cd omni-tools
npm i
npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Create a new tool&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run script:create:tool my-tool-name folder1 # npm run script:create:tool split pdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For tools located under multiple nested directories, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run script:create:tool my-tool-name folder1/folder2 # npm run script:create:tool compress image/png
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use &lt;code&gt;folder1\folder2&lt;/code&gt; on Windows.&lt;/p&gt; 
&lt;h3&gt;Run tests&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run test
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;For e2e tests&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run test:e2e
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;i18n (Translations)&lt;/h3&gt; 
&lt;p&gt;The translation files are &lt;a href="https://raw.githubusercontent.com/iib0011/omni-tools/main/public/locales"&gt;here&lt;/a&gt;. Only edit these if you are a developer. For non developers, use &lt;a href="https://www.locize.app/register?invitation=YOIH0Dyz3KHh3uQFCGYe9v1QOUoq8W5ySgmlwjX9cSypeJmt8F40brDtVbXb71fK"&gt;Locize&lt;/a&gt;.&lt;/p&gt; 
&lt;img src="https://api.star-history.com/svg?repos=iib0011/omni-tools&amp;amp;type=Date" /&gt; 
&lt;h2&gt;ü§ù Looking to contribute?&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! You can help by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Reporting bugs&lt;/li&gt; 
 &lt;li&gt;Suggesting new features in GitHub issues or &lt;a href="https://tally.so/r/nrkkx2"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Translating in &lt;a href="https://www.locize.app/register?invitation=YOIH0Dyz3KHh3uQFCGYe9v1QOUoq8W5ySgmlwjX9cSypeJmt8F40brDtVbXb71fK"&gt;Locize project&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Improving documentation&lt;/li&gt; 
 &lt;li&gt;Submitting pull requests&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also join our &lt;a href="https://discord.gg/SDbbn3hT4b"&gt;Discord server&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üß° Sponsors&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.locize.com/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/iib0011/omni-tools/main/docs-images/locizeSponsor.svg?sanitize=true" alt="Locize" width="200" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;Thanks to &lt;a href="https://www.locize.com"&gt;Locize&lt;/a&gt; for sponsoring OmniTools and supporting localization efforts. They make translation management simple and developer-friendly.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/iib0011/omni-tools/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=iib0011/omni-tools" /&gt; &lt;/a&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;For any questions or suggestions, feel free to open an issue or contact me at: &lt;a href="mailto:ibracool99@gmail.com"&gt;ibracool99@gmail.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License. See the &lt;a href="https://raw.githubusercontent.com/iib0011/omni-tools/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coze-dev/coze-studio</title>
      <link>https://github.com/coze-dev/coze-studio</link>
      <description>&lt;p&gt;An AI agent development platform with all-in-one visual tools, simplifying agent creation, debugging, and deployment like never before. Coze your way to AI Agent creation.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://p9-arcosite.byteimg.com/tos-cn-i-goo7wpa0wc/943f576df3424fa98580c2ad18946719~tplv-goo7wpa0wc-image.image" alt="Image" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt;
 &lt;p&gt; &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#what-is-coze-studio"&gt;Coze Studio&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#feature-list"&gt;Feature list&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#quickstart"&gt;Quickstart&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#developer-guide"&gt;Developer Guide&lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;img alt="License" src="https://img.shields.io/badge/license-apache2.0-blue.svg?sanitize=true" /&gt; &lt;img alt="Go Version" src="https://img.shields.io/badge/go-%3E%3D%201.23.4-blue" /&gt; &lt;/p&gt; 
 &lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/README.zh_CN.md"&gt;‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;What is Coze Studio?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.coze.cn/home"&gt;Coze Studio&lt;/a&gt; is an all-in-one AI agent development tool. Providing the latest large models and tools, various development modes and frameworks, Coze Studio offers the most convenient AI agent development environment, from development to deployment.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Provides all core technologies needed for AI agent development&lt;/strong&gt;: prompt, RAG, plugin, workflow, enabling developers to focus on creating the core value of AI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ready to use for professional AI agent development at the lowest cost&lt;/strong&gt;: Coze Studio provides developers with complete app templates and build frameworks, allowing you to quickly construct various AI agents and turn creative ideas into reality.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Coze Studio, derived from the "Coze Development Platform" which has served tens of thousands of enterprises and millions of developers, we have made its core engine completely open. It is a one-stop visual development tool for AI Agents that makes creating, debugging, and deploying AI Agents unprecedentedly simple. Through Coze Studio's visual design and build tools, developers can quickly create and debug agents, apps, and workflows using no-code or low-code approaches, enabling powerful AI app development and more customized business logic. It's an ideal choice for building low-code AI products tailored . Coze Studio aims to lower the threshold for AI agent development and application, encouraging community co-construction and sharing for deeper exploration and practice in the AI field.&lt;/p&gt; 
&lt;p&gt;The backend of Coze Studio is developed using Golang, the frontend uses React + TypeScript, and the overall architecture is based on microservices and built following domain-driven design (DDD) principles. Provide developers with a high-performance, highly scalable, and easy-to-customize underlying framework to help them address complex business needs.&lt;/p&gt; 
&lt;h2&gt;Feature list&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Module&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Feature&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Model service&lt;/td&gt; 
   &lt;td&gt;Manage the model list, integrate services such as OpenAI and Volcengine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build agent&lt;/td&gt; 
   &lt;td&gt;* Build, publish, and manage agent &lt;br /&gt; * Support configuring workflows, knowledge bases, and other resources&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build apps&lt;/td&gt; 
   &lt;td&gt;* Create and publish apps &lt;br /&gt; * Build business logic through workflows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build a workflow&lt;/td&gt; 
   &lt;td&gt;Create, modify, publish, and delete workflows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Develop resources&lt;/td&gt; 
   &lt;td&gt;Support creating and managing the following resources: &lt;br /&gt; * Plugins &lt;br /&gt; * Knowledge bases &lt;br /&gt; * Databases &lt;br /&gt; * Prompts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;API and SDK&lt;/td&gt; 
   &lt;td&gt;* Create conversations, initiate chats, and other OpenAPI &lt;br /&gt; * Integrate agents or apps into your own app through Chat SDK&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;Learn how to obtain and deploy the open-source version of Coze Studio, quickly build projects, and experience Coze Studio's open-source version.&lt;/p&gt; 
&lt;p&gt;Environment requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Before installing Coze Studio, please ensure that your machine meets the following minimum system requirements: 2 Core„ÄÅ4 GB&lt;/li&gt; 
 &lt;li&gt;Pre-install Docker and Docker Compose, and start the Docker service.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Deployment steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Retrieve the source code.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-Bash"&gt;# Clone code
git clone https://github.com/coze-dev/coze-studio.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Configure the model.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Copy the template files of the doubao-seed-1.6 model from the template directory and paste them into the configuration file directory.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-Bash"&gt;cd coze-studio
# Copy model configuration template
cp backend/conf/model/template/model_template_ark_doubao-seed-1.6.yaml backend/conf/model/ark_doubao-seed-1.6.yaml
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Modify the template file in the configuration file directory.&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;Enter the directory &lt;code&gt;backend/conf/model&lt;/code&gt;. Open the file &lt;code&gt;ark_doubao-seed-1.6.yaml&lt;/code&gt;.&lt;/li&gt; 
     &lt;li&gt;Set the fields &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;meta.conn_config.api_key&lt;/code&gt;, &lt;code&gt;meta.conn_config.model&lt;/code&gt;, and save the file. 
      &lt;ul&gt; 
       &lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;: The model ID in Coze Studio, defined by the developer, must be a non-zero integer and globally unique. Agents or workflows call models based on model IDs. For models that have already been launched, do not modify their IDs; otherwise, it may result in model call failures.&lt;/li&gt; 
       &lt;li&gt;&lt;strong&gt;meta.conn_config.api_key&lt;/strong&gt;: The API Key for the model service. In this example, it is the API Key for Ark API Key. For more information, see &lt;a href="https://www.volcengine.com/docs/82379/1541594"&gt;Get Volcengine Ark API Key&lt;/a&gt; or &lt;a href="https://docs.byteplus.com/en/docs/ModelArk/1361424?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=coze_open_source"&gt;Get BytePlus ModelArk API Key&lt;/a&gt;.&lt;/li&gt; 
       &lt;li&gt;&lt;strong&gt;meta.conn_config.model&lt;/strong&gt;: The Model name for the model service. In this example, it refers to the Model ID or Endpoint ID of Ark. For more information, see &lt;a href="https://www.volcengine.com/docs/82379/1513689"&gt;Get Volcengine Ark Model ID&lt;/a&gt; / &lt;a href="https://www.volcengine.com/docs/82379/1099522"&gt;Get Volcengine Ark Endpoint ID&lt;/a&gt; or &lt;a href="https://docs.byteplus.com/en/docs/ModelArk/model_id?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=coze_open_source"&gt;Get BytePlus ModelArk Model ID&lt;/a&gt; / &lt;a href="https://docs.byteplus.com/en/docs/ModelArk/1099522?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=coze_open_source"&gt;Get BytePlus ModelArk Endpoint ID&lt;/a&gt;.&lt;/li&gt; 
      &lt;/ul&gt; 
      &lt;blockquote&gt; 
       &lt;p&gt;For users in China, you may use Volcengine Ark; for users outside China, you may use BytePlus ModelArk instead.&lt;/p&gt; 
      &lt;/blockquote&gt; &lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Deploy and start the service. When deploying and starting Coze Studio for the first time, it may take a while to retrieve images and build local images. Please be patient. During deployment, you will see the following log information. If you see the message "Container coze-server Started," it means the Coze Studio service has started successfully.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-Bash"&gt;# Start the service
cd docker
cp .env.example .env
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For common startup failure issues, &lt;strong&gt;please refer to the &lt;a href="https://github.com/coze-dev/coze-studio/wiki/9.-FAQ"&gt;FAQ&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After starting the service, you can open Coze Studio by accessing &lt;code&gt;http://localhost:8888/&lt;/code&gt; through your browser.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] If you want to deploy Coze Studio in a public network environment, it is recommended to assess security risks before you begin, and take corresponding protection measures. Possible security risks include account registration functions, Python execution environments in workflow code nodes, Coze Server listening address configurations, SSRF (Server - Side Request Forgery), and some horizontal privilege escalations in APIs. For more details, refer to &lt;a href="https://github.com/coze-dev/coze-studio/wiki/2.-Quickstart#security-risks-in-public-networks"&gt;Quickstart&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Developer Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Project Configuration&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/3.-Model-configuration"&gt;Model Configuration&lt;/a&gt;: Before deploying the open-source version of Coze Studio, you must configure the model service. Otherwise, you cannot select models when building agents, workflows, and apps.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/4.-Plugin-Configuration"&gt;Plugin Configuration&lt;/a&gt;: To use official plugins from the plugin store, you must first configure the plugins and add the authentication keys for third-party services.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/5.-Basic-component-configuration"&gt;Basic Component Configuration&lt;/a&gt;: Learn how to configure components such as image uploaders to use functions like image uploading in Coze Studio .&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/6.-API-Reference"&gt;API Reference&lt;/a&gt;: The Coze Studio Community Edition API and Chat SDK are authenticated using Personal Access Token, providing APIs for conversations and workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards"&gt;Development Guidelines&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards#project-architecture"&gt;Project Architecture&lt;/a&gt;: Learn about the technical architecture and core components of the open-source version of Coze Studio.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards#code-development-and-testing"&gt;Code Development and Testing&lt;/a&gt;: Learn how to perform secondary development and testing based on the open-source version of Coze Studio.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards#troubleshooting"&gt;Troubleshooting&lt;/a&gt;: Learn how to view container states and system logs.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using the open-source version of Coze Studio&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Regarding how to use Coze Studio, refer to the &lt;a href="https://www.coze.cn/open/docs"&gt;Coze Development Platform Official Documentation Center&lt;/a&gt; for more information. Please note that certain features, such as tone customization, are limited to the commercial version. Differences between the open-source and commercial versions can be found in the &lt;strong&gt;Feature List&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/quickstart"&gt;Quick Start&lt;/a&gt;: Quickly build an AI assistant agent with Coze Studio.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/agent_overview"&gt;Developing Agents&lt;/a&gt;: Learn how to create, build, publish, and manage agents. You can use functions such as knowledge, plugins, etc., to resolve model hallucination and lack of expertise in professional fields. In addition, Coze Studio provides rich memory features that enable agents to generate more accurate responses based on a personal user's historical conversations during interactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/workflow"&gt;Develop workflows&lt;/a&gt;: A workflow is a set of executable instructions used to implement business logic or complete specific tasks. It structures data flow and task processing for apps or agents. Coze Studio provides a visual canvas where you can quickly build workflows by dragging and dropping nodes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/plugin"&gt;Resources such as plugins&lt;/a&gt;: In Coze Studio, workflows, plugins, databases, knowledge bases, and variables are collectively referred to as resources.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API &amp;amp; SDK&lt;/strong&gt;: Coze Studio supports &lt;a href="https://github.com/coze-dev/coze-studio/wiki/6.-API-Reference"&gt;API related to chat and workflows&lt;/a&gt;, and you can also integrate agents or apps with local business systems through &lt;a href="https://www.coze.cn/open/docs/developer_guides/web_sdk_overview"&gt;Chat SDK&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/tutorial/chat_sdk_web_online_customer_service"&gt;Tutorials for practice&lt;/a&gt;: Learn how to use Coze Studio to implement various AI scenarios, such as building web-based online customer service using Chat SDK.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project uses the Apache 2.0 license. For details, please refer to the &lt;a href="https://github.com/coze-dev/coze-studio/raw/main/LICENSE-APACHE"&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Community contributions&lt;/h2&gt; 
&lt;p&gt;We welcome community contributions. For contribution guidelines, please refer to &lt;a href="https://github.com/coze-dev/coze-studio/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; and &lt;a href="https://github.com/coze-dev/coze-studio/raw/main/CODE_OF_CONDUCT.md"&gt;Code of conduct&lt;/a&gt;. We look forward to your contributions!&lt;/p&gt; 
&lt;h2&gt;Security and privacy&lt;/h2&gt; 
&lt;p&gt;If you discover potential security issues in the project, or believe you may have found a security issue, please notify the ByteDance security team through our &lt;a href="https://security.bytedance.com/src"&gt;security center&lt;/a&gt; or &lt;a href="mailto:sec@bytedance.com"&gt;vulnerability reporting email&lt;/a&gt;. Please &lt;strong&gt;do not&lt;/strong&gt; create public GitHub Issues.&lt;/p&gt; 
&lt;h2&gt;Join Community&lt;/h2&gt; 
&lt;p&gt;We are committed to building an open and friendly developer community. All developers interested in AI Agent development are welcome to join us!&lt;/p&gt; 
&lt;h3&gt;üêõ Issue Reports &amp;amp; Feature Requests&lt;/h3&gt; 
&lt;p&gt;To efficiently track and resolve issues while ensuring transparency and collaboration, we recommend participating through:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: &lt;a href="https://github.com/coze-dev/coze-studio/issues"&gt;Submit bug reports or feature requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pull Requests&lt;/strong&gt;: &lt;a href="https://github.com/coze-dev/coze-studio/pulls"&gt;Contribute code or documentation improvements&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üí¨ Technical Discussion &amp;amp; Communication&lt;/h3&gt; 
&lt;p&gt;Join our technical discussion groups to share experiences with other developers and stay updated with the latest project developments:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Feishu Group Chat&lt;/strong&gt;&lt;br /&gt; Scan the QR code below with Feishu mobile app to join:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://p9-arcosite.byteimg.com/tos-cn-i-goo7wpa0wc/0a49081e8f3743e8bf3dcdded4bb571a~tplv-goo7wpa0wc-image.image" alt="Image" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Discord Server&lt;/strong&gt;&lt;br /&gt; Click to join: &lt;a href="https://discord.gg/sTVN9EVS4B"&gt;Coze Community&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Telegram Group&lt;/strong&gt;&lt;br /&gt; Click to join: Telegram Group &lt;a href="https://t.me/+pP9CkPnomDA0Mjgx"&gt;Coze&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;Thank you to all the developers and community members who have contributed to the Coze Studio project. Special thanks:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/cloudwego/eino"&gt;Eino&lt;/a&gt; framework team - providing powerful support for Coze Studio's agent and workflow runtime engines, model abstractions and implementations, and knowledge base indexing and retrieval&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/bytedance/flowgram.ai"&gt;FlowGram&lt;/a&gt; team - providing a high-quality workflow building engine for Coze Studio's frontend workflow canvas editor&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/cloudwego/hertz"&gt;Hertz&lt;/a&gt; team - Go HTTP framework with high-performance and strong-extensibility for building micro-services&lt;/li&gt; 
 &lt;li&gt;All users who participated in testing and feedback&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>browserbase/stagehand</title>
      <link>https://github.com/browserbase/stagehand</link>
      <description>&lt;p&gt;The AI Browser Automation Framework&lt;/p&gt;&lt;hr&gt;&lt;div id="toc" align="center" style="margin-bottom: 0;"&gt; 
 &lt;ul style="list-style: none; margin: 0; padding: 0;"&gt; 
  &lt;a href="https://stagehand.dev"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="media/dark_logo.png" /&gt; 
    &lt;img alt="Stagehand" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_logo.png" width="200" style="margin-right: 30px;" /&gt; 
   &lt;/picture&gt; &lt;/a&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;strong&gt;The AI Browser Automation Framework&lt;/strong&gt;&lt;br /&gt; &lt;a href="https://docs.stagehand.dev"&gt;Read the Docs&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/browserbase/stagehand/tree/main?tab=MIT-1-ov-file#MIT-1-ov-file"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="media/dark_license.svg" /&gt; 
   &lt;img alt="MIT License" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_license.svg?sanitize=true" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="media/dark_slack.svg" /&gt; 
   &lt;img alt="Slack Community" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_slack.svg?sanitize=true" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/12122" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/12122" alt="browserbase%2Fstagehand | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; If you're looking for the Python implementation, you can find it &lt;a href="https://github.com/browserbase/stagehand-python"&gt; here&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center" style="display: flex; align-items: center; justify-content: center; gap: 4px; margin-bottom: 0;"&gt; 
 &lt;b&gt;Vibe code&lt;/b&gt; 
 &lt;span style="font-size: 1.05em;"&gt; Stagehand with &lt;/span&gt; 
 &lt;a href="https://director.ai" style="display: flex; align-items: center;"&gt; &lt;span&gt;Director&lt;/span&gt; &lt;/a&gt; 
 &lt;span&gt; &lt;/span&gt; 
 &lt;picture&gt; 
  &lt;img alt="Director" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/director_icon.svg?sanitize=true" width="25" /&gt; 
 &lt;/picture&gt; 
&lt;/div&gt; 
&lt;h2&gt;Why Stagehand?&lt;/h2&gt; 
&lt;p&gt;Most existing browser automation tools either require you to write low-level code in a framework like Selenium, Playwright, or Puppeteer, or use high-level agents that can be unpredictable in production. By letting developers choose what to write in code vs. natural language, Stagehand is the natural choice for browser automations in production.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Choose when to write code vs. natural language&lt;/strong&gt;: use AI when you want to navigate unfamiliar pages, and use code (&lt;a href="https://playwright.dev/"&gt;Playwright&lt;/a&gt;) when you know exactly what you want to do.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Preview and cache actions&lt;/strong&gt;: Stagehand lets you preview AI actions before running them, and also helps you easily cache repeatable actions to save time and tokens.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Computer use models with one line of code&lt;/strong&gt;: Stagehand lets you integrate SOTA computer use models from OpenAI and Anthropic into the browser with one line of code.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;Here's how to build a sample browser automation with Stagehand:&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;div style="max-width:300px;"&gt; 
  &lt;img src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/github_demo.gif" alt="See Stagehand in Action" /&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Use Playwright functions on the page object
const page = stagehand.page;
await page.goto("https://github.com/browserbase");

// Use act() to execute individual actions
await page.act("click on the stagehand repo");

// Use Computer Use agents for larger actions
const agent = stagehand.agent({
    provider: "openai",
    model: "computer-use-preview",
});
await agent.execute("Get to the latest PR");

// Use extract() to read data from the page
const { author, title } = await page.extract({
  instruction: "extract the author and title of the PR",
  schema: z.object({
    author: z.string().describe("The username of the PR author"),
    title: z.string().describe("The title of the PR"),
  }),
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://docs.stagehand.dev"&gt;docs.stagehand.dev&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Start with Stagehand with one line of code, or check out our &lt;a href="https://docs.stagehand.dev/first-steps/quickstart"&gt;Quickstart Guide&lt;/a&gt; for more information:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx create-browser-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7"&gt; &lt;p&gt;Watch Anirudh demo create-browser-app to create a Stagehand project!&lt;/p&gt; &lt;/a&gt; 
 &lt;a href="https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7"&gt; &lt;img style="max-width:300px;" src="https://cdn.loom.com/sessions/thumbnails/f5107f86d8c94fa0a8b4b1e89740f7a7-ec3f428b6775ceeb-full-play.gif" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h3&gt;Build and Run from Source&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/browserbase/stagehand.git
cd stagehand
pnpm install
pnpm playwright install
pnpm run build
pnpm run example # run the blank script at ./examples/example.ts
pnpm run example 2048 # run the 2048 example at ./examples/2048.ts
pnpm run evals -man # see evaluation suite options
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Stagehand is best when you have an API key for an LLM provider and Browserbase credentials. To add these to your project, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cp .env.example .env
nano .env # Edit the .env file to add API keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; We highly value contributions to Stagehand! For questions or support, please join our &lt;a href="https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg"&gt;Slack community&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;At a high level, we're focused on improving reliability, speed, and cost in that order of priority. If you're interested in contributing, we strongly recommend reaching out to &lt;a href="https://x.com/miguel_gonzf"&gt;Miguel Gonzalez&lt;/a&gt; or &lt;a href="https://x.com/pk_iv"&gt;Paul Klein&lt;/a&gt; in our &lt;a href="https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg"&gt;Slack community&lt;/a&gt; before starting to ensure that your contribution aligns with our goals.&lt;/p&gt; 
&lt;p&gt;For more information, please see our &lt;a href="https://docs.stagehand.dev/examples/contributing"&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;This project heavily relies on &lt;a href="https://playwright.dev/"&gt;Playwright&lt;/a&gt; as a resilient backbone to automate the web. It also would not be possible without the awesome techniques and discoveries made by &lt;a href="https://github.com/reworkd/tarsier"&gt;tarsier&lt;/a&gt;, &lt;a href="https://github.com/jbeoris/gemini-zod"&gt;gemini-zod&lt;/a&gt;, and &lt;a href="https://github.com/normal-computing/fuji-web"&gt;fuji-web&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We'd like to thank the following people for their major contributions to Stagehand:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pkiv"&gt;Paul Klein&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamath"&gt;Anirudh Kamath&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seanmcguire12"&gt;Sean McGuire&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miguelg719"&gt;Miguel Gonzalez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sameelarif"&gt;Sameel Arif&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/filip-michalsky"&gt;Filip Michalsky&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/jeremypress"&gt;Jeremy Press&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/navidpour"&gt;Navid Pour&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the MIT License.&lt;/p&gt; 
&lt;p&gt;Copyright 2025 Browserbase, Inc.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>