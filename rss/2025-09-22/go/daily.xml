<rss version="2.0">
  <channel>
    <title>GitHub Go Daily Trending</title>
    <description>Daily Trending of Go in GitHub</description>
    <pubDate>Sun, 21 Sep 2025 01:34:20 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>tbphp/gpt-load</title>
      <link>https://github.com/tbphp/gpt-load</link>
      <description>&lt;p&gt;Multi-channel AI proxy with intelligent key rotation. 智能密钥轮询的多渠道 AI 代理。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GPT-Load&lt;/h1&gt; 
&lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/tbphp/gpt-load/main/README_CN.md"&gt;中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/tbphp/gpt-load/main/README_JP.md"&gt;日本語&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/tbphp/gpt-load/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/tbphp/gpt-load" alt="Release" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/Go-1.23+-blue.svg?sanitize=true" alt="Go Version" /&gt; &lt;a href="https://raw.githubusercontent.com/tbphp/gpt-load/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-green.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A high-performance, enterprise-grade AI API transparent proxy service designed specifically for enterprises and developers who need to integrate multiple AI services. Built with Go, featuring intelligent key management, load balancing, and comprehensive monitoring capabilities, designed for high-concurrency production environments.&lt;/p&gt; 
&lt;p&gt;For detailed documentation, please visit &lt;a href="https://www.gpt-load.com/docs?lang=en"&gt;Official Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://trendshift.io/repositories/14880" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/14880" alt="tbphp%2Fgpt-load | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; &lt;a href="https://hellogithub.com/repository/tbphp/gpt-load" target="_blank"&gt;&lt;img src="https://api.hellogithub.com/v1/widgets/recommend.svg?rid=554dc4c46eb14092b9b0c56f1eb9021c&amp;amp;claim_uid=Qlh8vzrWJ0HCneG" alt="Featured｜HelloGitHub" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Transparent Proxy&lt;/strong&gt;: Complete preservation of native API formats, supporting OpenAI, Google Gemini, and Anthropic Claude among other formats&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Intelligent Key Management&lt;/strong&gt;: High-performance key pool with group-based management, automatic rotation, and failure recovery&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Load Balancing&lt;/strong&gt;: Weighted load balancing across multiple upstream endpoints to enhance service availability&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Smart Failure Handling&lt;/strong&gt;: Automatic key blacklist management and recovery mechanisms to ensure service continuity&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Configuration&lt;/strong&gt;: System settings and group configurations support hot-reload without requiring restarts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise Architecture&lt;/strong&gt;: Distributed leader-follower deployment supporting horizontal scaling and high availability&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modern Management&lt;/strong&gt;: Vue 3-based web management interface that is intuitive and user-friendly&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive Monitoring&lt;/strong&gt;: Real-time statistics, health checks, and detailed request logging&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;High-Performance Design&lt;/strong&gt;: Zero-copy streaming, connection pool reuse, and atomic operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Production Ready&lt;/strong&gt;: Graceful shutdown, error recovery, and comprehensive security mechanisms&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dual Authentication&lt;/strong&gt;: Separate authentication for management and proxy, with proxy authentication supporting global and group-level keys&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported AI Services&lt;/h2&gt; 
&lt;p&gt;GPT-Load serves as a transparent proxy service, completely preserving the native API formats of various AI service providers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;OpenAI Format&lt;/strong&gt;: Official OpenAI API, Azure OpenAI, and other OpenAI-compatible services&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Google Gemini Format&lt;/strong&gt;: Native APIs for Gemini Pro, Gemini Pro Vision, and other models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Anthropic Claude Format&lt;/strong&gt;: Claude series models, supporting high-quality conversations and text generation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;System Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go 1.23+ (for source builds)&lt;/li&gt; 
 &lt;li&gt;Docker (for containerized deployment)&lt;/li&gt; 
 &lt;li&gt;MySQL, PostgreSQL, or SQLite (for database storage)&lt;/li&gt; 
 &lt;li&gt;Redis (for caching and distributed coordination, optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Method 1: Docker Quick Start&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --name gpt-load \
    -p 3001:3001 \
    -e AUTH_KEY=your-secure-key-here \
    -v "$(pwd)/data":/app/data \
    ghcr.io/tbphp/gpt-load:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Please change &lt;code&gt;your-secure-key-here&lt;/code&gt; to a strong password (never use the default value), then you can log in to the management interface: &lt;a href="http://localhost:3001"&gt;http://localhost:3001&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Method 2: Using Docker Compose (Recommended)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Installation Commands:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Create Directory
mkdir -p gpt-load &amp;amp;&amp;amp; cd gpt-load

# Download configuration files
wget https://raw.githubusercontent.com/tbphp/gpt-load/refs/heads/main/docker-compose.yml
wget -O .env https://raw.githubusercontent.com/tbphp/gpt-load/refs/heads/main/.env.example

# Edit the .env file and change AUTH_KEY to a strong password. Never use default or simple keys like sk-123456.

# Start services
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Before deployment, you must change the default admin key (AUTH_KEY). A recommended format is: sk-prod-[32-character random string].&lt;/p&gt; 
&lt;p&gt;The default installation uses the SQLite version, which is suitable for lightweight, single-instance applications.&lt;/p&gt; 
&lt;p&gt;If you need to install MySQL, PostgreSQL, and Redis, please uncomment the required services in the &lt;code&gt;docker-compose.yml&lt;/code&gt; file, configure the corresponding environment variables, and restart.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Other Commands:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Check service status
docker compose ps

# View logs
docker compose logs -f

# Restart Service
docker compose down &amp;amp;&amp;amp; docker compose up -d

# Update to latest version
docker compose pull &amp;amp;&amp;amp; docker compose down &amp;amp;&amp;amp; docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After deployment:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Access Web Management Interface: &lt;a href="http://localhost:3001"&gt;http://localhost:3001&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;API Proxy Address: &lt;a href="http://localhost:3001/proxy"&gt;http://localhost:3001/proxy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Use your modified AUTH_KEY to log in to the management interface.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Method 3: Source Build&lt;/h3&gt; 
&lt;p&gt;Source build requires a locally installed database (SQLite, MySQL, or PostgreSQL) and Redis (optional).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone and build
git clone https://github.com/tbphp/gpt-load.git
cd gpt-load
go mod tidy

# Create configuration
cp .env.example .env

# Edit the .env file and change AUTH_KEY to a strong password. Never use default or simple keys like sk-123456.
# Modify DATABASE_DSN and REDIS_DSN configurations in .env
# REDIS_DSN is optional; if not configured, memory storage will be enabled

# Run
make run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After deployment:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Access Web Management Interface: &lt;a href="http://localhost:3001"&gt;http://localhost:3001&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;API Proxy Address: &lt;a href="http://localhost:3001/proxy"&gt;http://localhost:3001/proxy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Use your modified AUTH_KEY to log in to the management interface.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Method 4: Cluster Deployment&lt;/h3&gt; 
&lt;p&gt;Cluster deployment requires all nodes to connect to the same MySQL (or PostgreSQL) and Redis, with Redis being mandatory. It's recommended to use unified distributed MySQL and Redis clusters.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Deployment Requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All nodes must configure identical &lt;code&gt;AUTH_KEY&lt;/code&gt;, &lt;code&gt;DATABASE_DSN&lt;/code&gt;, &lt;code&gt;REDIS_DSN&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Leader-follower architecture where follower nodes must configure environment variable: &lt;code&gt;IS_SLAVE=true&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For details, please refer to &lt;a href="https://www.gpt-load.com/docs/cluster?lang=en"&gt;Cluster Deployment Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Configuration System&lt;/h2&gt; 
&lt;h3&gt;Configuration Architecture Overview&lt;/h3&gt; 
&lt;p&gt;GPT-Load adopts a dual-layer configuration architecture:&lt;/p&gt; 
&lt;h4&gt;1. Static Configuration (Environment Variables)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Characteristics&lt;/strong&gt;: Read at application startup, immutable during runtime, requires application restart to take effect&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Infrastructure configuration such as database connections, server ports, authentication keys, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Management&lt;/strong&gt;: Set via &lt;code&gt;.env&lt;/code&gt; files or system environment variables&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2. Dynamic Configuration (Hot-Reload)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;System Settings&lt;/strong&gt;: Stored in database, providing unified behavioral standards for the entire application&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Group Configuration&lt;/strong&gt;: Behavior parameters customized for specific groups, can override system settings&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configuration Priority&lt;/strong&gt;: Group Configuration &amp;gt; System Settings &amp;gt; Environment Configuration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Characteristics&lt;/strong&gt;: Supports hot-reload, takes effect immediately after modification without application restart&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Static Configuration (Environment Variables)&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Server Configuration:&lt;/strong&gt;&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Setting&lt;/th&gt; 
    &lt;th&gt;Environment Variable&lt;/th&gt; 
    &lt;th&gt;Default&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Service Port&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;3001&lt;/td&gt; 
    &lt;td&gt;HTTP server listening port&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Service Address&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;0.0.0.0&lt;/td&gt; 
    &lt;td&gt;HTTP server binding address&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Read Timeout&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;SERVER_READ_TIMEOUT&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;60&lt;/td&gt; 
    &lt;td&gt;HTTP server read timeout (seconds)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Write Timeout&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;SERVER_WRITE_TIMEOUT&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;600&lt;/td&gt; 
    &lt;td&gt;HTTP server write timeout (seconds)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Idle Timeout&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;SERVER_IDLE_TIMEOUT&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;120&lt;/td&gt; 
    &lt;td&gt;HTTP connection idle timeout (seconds)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Graceful Shutdown Timeout&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;SERVER_GRACEFUL_SHUTDOWN_TIMEOUT&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;10&lt;/td&gt; 
    &lt;td&gt;Service graceful shutdown wait time (seconds)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Follower Mode&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;IS_SLAVE&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;false&lt;/td&gt; 
    &lt;td&gt;Follower node identifier for cluster deployment&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Timezone&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;TZ&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;Asia/Shanghai&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Specify timezone&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;&lt;strong&gt;Security Configuration:&lt;/strong&gt;&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Setting&lt;/th&gt; 
    &lt;th&gt;Environment Variable&lt;/th&gt; 
    &lt;th&gt;Default&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Admin Key&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;AUTH_KEY&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;-&lt;/td&gt; 
    &lt;td&gt;Access authentication key for the &lt;strong&gt;management end&lt;/strong&gt;, please change it to a strong password&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Encryption Key&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;ENCRYPTION_KEY&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;-&lt;/td&gt; 
    &lt;td&gt;Encrypts API keys at rest. Supports any string or leave empty to disable encryption. See &lt;a href="https://raw.githubusercontent.com/tbphp/gpt-load/main/#data-encryption-migration"&gt;Data Encryption Migration&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;&lt;strong&gt;Database Configuration:&lt;/strong&gt;&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Setting&lt;/th&gt; 
    &lt;th&gt;Environment Variable&lt;/th&gt; 
    &lt;th&gt;Default&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Database Connection&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;DATABASE_DSN&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;./data/gpt-load.db&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Database connection string (DSN) or file path&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Redis Connection&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;REDIS_DSN&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;-&lt;/td&gt; 
    &lt;td&gt;Redis connection string, uses memory storage when empty&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;&lt;strong&gt;Performance &amp;amp; CORS Configuration:&lt;/strong&gt;&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Setting&lt;/th&gt; 
    &lt;th&gt;Environment Variable&lt;/th&gt; 
    &lt;th&gt;Default&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Max Concurrent Requests&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;MAX_CONCURRENT_REQUESTS&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;100&lt;/td&gt; 
    &lt;td&gt;Maximum concurrent requests allowed by system&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Enable CORS&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;ENABLE_CORS&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;false&lt;/td&gt; 
    &lt;td&gt;Whether to enable Cross-Origin Resource Sharing&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Allowed Origins&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;ALLOWED_ORIGINS&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;-&lt;/td&gt; 
    &lt;td&gt;Allowed origins, comma-separated&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Allowed Methods&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;ALLOWED_METHODS&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;GET,POST,PUT,DELETE,OPTIONS&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Allowed HTTP methods&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Allowed Headers&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;ALLOWED_HEADERS&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;*&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Allowed request headers, comma-separated&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Allow Credentials&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;ALLOW_CREDENTIALS&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;false&lt;/td&gt; 
    &lt;td&gt;Whether to allow sending credentials&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;&lt;strong&gt;Logging Configuration:&lt;/strong&gt;&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Setting&lt;/th&gt; 
    &lt;th&gt;Environment Variable&lt;/th&gt; 
    &lt;th&gt;Default&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Log Level&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;LOG_LEVEL&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;info&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Log level: debug, info, warn, error&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Log Format&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;LOG_FORMAT&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;text&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Log format: text, json&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Enable File Logging&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;LOG_ENABLE_FILE&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;false&lt;/td&gt; 
    &lt;td&gt;Whether to enable file log output&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Log File Path&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;LOG_FILE_PATH&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;./data/logs/app.log&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Log file storage path&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;&lt;strong&gt;Proxy Configuration:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;GPT-Load automatically reads proxy settings from environment variables to make requests to upstream AI providers.&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Setting&lt;/th&gt; 
    &lt;th&gt;Environment Variable&lt;/th&gt; 
    &lt;th&gt;Default&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;HTTP Proxy&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;HTTP_PROXY&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;-&lt;/td&gt; 
    &lt;td&gt;Proxy server address for HTTP requests&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;HTTPS Proxy&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;HTTPS_PROXY&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;-&lt;/td&gt; 
    &lt;td&gt;Proxy server address for HTTPS requests&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;No Proxy&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;NO_PROXY&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;-&lt;/td&gt; 
    &lt;td&gt;Comma-separated list of hosts or domains to bypass the proxy&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;Supported Proxy Protocol Formats:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;HTTP&lt;/strong&gt;: &lt;code&gt;http://user:pass@host:port&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;HTTPS&lt;/strong&gt;: &lt;code&gt;https://user:pass@host:port&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;SOCKS5&lt;/strong&gt;: &lt;code&gt;socks5://user:pass@host:port&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Dynamic Configuration (Hot-Reload)&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Basic Settings:&lt;/strong&gt;&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Setting&lt;/th&gt; 
    &lt;th&gt;Field Name&lt;/th&gt; 
    &lt;th&gt;Default&lt;/th&gt; 
    &lt;th&gt;Group Override&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Project URL&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;app_url&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;http://localhost:3001&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;❌&lt;/td&gt; 
    &lt;td&gt;Project base URL&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Global Proxy Keys&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;proxy_keys&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;Initial value from &lt;code&gt;AUTH_KEY&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;❌&lt;/td&gt; 
    &lt;td&gt;Globally effective proxy keys, comma-separated&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Log Retention Days&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;request_log_retention_days&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;7&lt;/td&gt; 
    &lt;td&gt;❌&lt;/td&gt; 
    &lt;td&gt;Request log retention days, 0 for no cleanup&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Log Write Interval&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;request_log_write_interval_minutes&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;1&lt;/td&gt; 
    &lt;td&gt;❌&lt;/td&gt; 
    &lt;td&gt;Log write to database cycle (minutes)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Enable Request Body Logging&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;enable_request_body_logging&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;false&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;Whether to log complete request body content in request logs&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;&lt;strong&gt;Request Settings:&lt;/strong&gt;&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Setting&lt;/th&gt; 
    &lt;th&gt;Field Name&lt;/th&gt; 
    &lt;th&gt;Default&lt;/th&gt; 
    &lt;th&gt;Group Override&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Request Timeout&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;request_timeout&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;600&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;Forward request complete lifecycle timeout (seconds)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Connection Timeout&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;connect_timeout&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;15&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;Timeout for establishing connection with upstream service (seconds)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Idle Connection Timeout&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;idle_conn_timeout&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;120&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;HTTP client idle connection timeout (seconds)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Response Header Timeout&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;response_header_timeout&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;600&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;Timeout for waiting upstream response headers (seconds)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Max Idle Connections&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;max_idle_conns&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;100&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;Connection pool maximum total idle connections&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Max Idle Connections Per Host&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;max_idle_conns_per_host&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;50&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;Maximum idle connections per upstream host&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Proxy URL&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;proxy_url&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;-&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;HTTP/HTTPS proxy for forwarding requests, uses environment if empty&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;&lt;strong&gt;Key Configuration:&lt;/strong&gt;&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Setting&lt;/th&gt; 
    &lt;th&gt;Field Name&lt;/th&gt; 
    &lt;th&gt;Default&lt;/th&gt; 
    &lt;th&gt;Group Override&lt;/th&gt; 
    &lt;th&gt;Description&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Max Retries&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;max_retries&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;3&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;Maximum retry count using different keys for single request&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Blacklist Threshold&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;blacklist_threshold&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;3&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;Number of consecutive failures before key enters blacklist&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Key Validation Interval&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;key_validation_interval_minutes&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;60&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;Background scheduled key validation cycle (minutes)&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Key Validation Concurrency&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;key_validation_concurrency&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;10&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;Concurrency for background validation of invalid keys&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;Key Validation Timeout&lt;/td&gt; 
    &lt;td&gt;&lt;code&gt;key_validation_timeout_seconds&lt;/code&gt;&lt;/td&gt; 
    &lt;td&gt;20&lt;/td&gt; 
    &lt;td&gt;✅&lt;/td&gt; 
    &lt;td&gt;API request timeout for validating individual keys in background (seconds)&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h2&gt;Data Encryption Migration&lt;/h2&gt; 
&lt;p&gt;GPT-Load supports encrypted storage of API keys. You can enable, disable, or change the encryption key at any time.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;View Data Encryption Migration Details&lt;/summary&gt; 
 &lt;h3&gt;Migration Scenarios&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Enable Encryption&lt;/strong&gt;: Encrypt plaintext data for storage - Use &lt;code&gt;--to &amp;lt;new-key&amp;gt;&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Disable Encryption&lt;/strong&gt;: Decrypt encrypted data to plaintext - Use &lt;code&gt;--from &amp;lt;current-key&amp;gt;&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Change Encryption Key&lt;/strong&gt;: Replace the encryption key - Use &lt;code&gt;--from &amp;lt;current-key&amp;gt; --to &amp;lt;new-key&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Operation Steps&lt;/h3&gt; 
 &lt;h4&gt;Docker Compose Deployment&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Update the image (ensure using the latest version)
docker compose pull

# 2. Stop the service
docker compose down

# 3. Backup the database (strongly recommended)
# Before migration, you must manually backup the database or export your keys to avoid key loss due to operations or exceptions.

# 4. Execute migration command
# Enable encryption (your-32-char-secret-key is your key, recommend using 32+ character random string)
docker compose run --rm gpt-load migrate-keys --to "your-32-char-secret-key"

# Disable encryption
docker compose run --rm gpt-load migrate-keys --from "your-current-key"

# Change encryption key
docker compose run --rm gpt-load migrate-keys --from "old-key" --to "new-32-char-secret-key"

# 5. Update configuration file
# Edit .env file, set ENCRYPTION_KEY to match the --to parameter
# If disabling encryption, remove ENCRYPTION_KEY or set it to empty
vim .env
# Add or modify: ENCRYPTION_KEY=your-32-char-secret-key

# 6. Restart the service
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Source Build Deployment&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Stop the service
# Stop the running service process (Ctrl+C or kill process)

# 2. Backup the database (strongly recommended)
# Before migration, you must manually backup the database or export your keys to avoid key loss due to operations or exceptions.

# 3. Execute migration command
# Enable encryption
make migrate-keys ARGS="--to your-32-char-secret-key"

# Disable encryption
make migrate-keys ARGS="--from your-current-key"

# Change encryption key
make migrate-keys ARGS="--from old-key --to new-32-char-secret-key"

# 4. Update configuration file
# Edit .env file, set ENCRYPTION_KEY to match the --to parameter
echo "ENCRYPTION_KEY=your-32-char-secret-key" &amp;gt;&amp;gt; .env

# 5. Restart the service
make run
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Important Notes&lt;/h3&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;Important Reminders&lt;/strong&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Once ENCRYPTION_KEY is lost, encrypted data CANNOT be recovered!&lt;/strong&gt; Please securely backup this key. Consider using a password manager or secure key management system&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Service must be stopped&lt;/strong&gt; before migration to avoid data inconsistency&lt;/li&gt; 
  &lt;li&gt;Strongly recommended to &lt;strong&gt;backup the database&lt;/strong&gt; in case migration fails and recovery is needed&lt;/li&gt; 
  &lt;li&gt;Keys should use &lt;strong&gt;32 characters or longer random strings&lt;/strong&gt; for security&lt;/li&gt; 
  &lt;li&gt;Ensure &lt;code&gt;ENCRYPTION_KEY&lt;/code&gt; in &lt;code&gt;.env&lt;/code&gt; matches the &lt;code&gt;--to&lt;/code&gt; parameter after migration&lt;/li&gt; 
  &lt;li&gt;If disabling encryption, remove or clear the &lt;code&gt;ENCRYPTION_KEY&lt;/code&gt; configuration&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Key Generation Examples&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Generate secure random key (32 characters)
openssl rand -base64 32 | tr -d "=+/" | cut -c1-32
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Web Management Interface&lt;/h2&gt; 
&lt;p&gt;Access the management console at: &lt;a href="http://localhost:3001"&gt;http://localhost:3001&lt;/a&gt; (default address)&lt;/p&gt; 
&lt;h3&gt;Interface Overview&lt;/h3&gt; 
&lt;img src="https://raw.githubusercontent.com/tbphp/gpt-load/main/screenshot/dashboard.png" alt="Dashboard" width="600" /&gt; 
&lt;br /&gt; 
&lt;img src="https://raw.githubusercontent.com/tbphp/gpt-load/main/screenshot/keys.png" alt="Key Management" width="600" /&gt; 
&lt;br /&gt; 
&lt;p&gt;The web management interface provides the following features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Dashboard&lt;/strong&gt;: Real-time statistics and system status overview&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Key Management&lt;/strong&gt;: Create and configure AI service provider groups, add, delete, and monitor API keys&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Request Logs&lt;/strong&gt;: Detailed request history and debugging information&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;System Settings&lt;/strong&gt;: Global configuration management and hot-reload&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;API Usage Guide&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Proxy Interface Invocation&lt;/summary&gt; 
 &lt;p&gt;GPT-Load routes requests to different AI services through group names. Usage is as follows:&lt;/p&gt; 
 &lt;h3&gt;1. Proxy Endpoint Format&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-text"&gt;http://localhost:3001/proxy/{group_name}/{original_api_path}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;{group_name}&lt;/code&gt;: Group name created in the management interface&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;{original_api_path}&lt;/code&gt;: Maintain complete consistency with original AI service paths&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;2. Authentication Methods&lt;/h3&gt; 
 &lt;p&gt;Configure &lt;strong&gt;Proxy Keys&lt;/strong&gt; in the web management interface, which supports system-level and group-level proxy keys.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Authentication Method&lt;/strong&gt;: Consistent with the native API, but replace the original key with the configured proxy key.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Key Scope&lt;/strong&gt;: &lt;strong&gt;Global Proxy Keys&lt;/strong&gt; configured in system settings can be used in all groups. &lt;strong&gt;Group Proxy Keys&lt;/strong&gt; configured in a group are only valid for the current group.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Format&lt;/strong&gt;: Multiple keys are separated by commas.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;3. OpenAI Interface Example&lt;/h3&gt; 
 &lt;p&gt;Assuming a group named &lt;code&gt;openai&lt;/code&gt; was created:&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Original invocation:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST https://api.openai.com/v1/chat/completions \
  -H "Authorization: Bearer sk-your-openai-key" \
  -H "Content-Type: application/json" \
  -d '{"model": "gpt-4.1-mini", "messages": [{"role": "user", "content": "Hello"}]}'
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Proxy invocation:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST http://localhost:3001/proxy/openai/v1/chat/completions \
  -H "Authorization: Bearer your-proxy-key" \
  -H "Content-Type: application/json" \
  -d '{"model": "gpt-4.1-mini", "messages": [{"role": "user", "content": "Hello"}]}'
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Changes required:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Replace &lt;code&gt;https://api.openai.com&lt;/code&gt; with &lt;code&gt;http://localhost:3001/proxy/openai&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Replace original API Key with the &lt;strong&gt;Proxy Key&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;4. Gemini Interface Example&lt;/h3&gt; 
 &lt;p&gt;Assuming a group named &lt;code&gt;gemini&lt;/code&gt; was created:&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Original invocation:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent?key=your-gemini-key \
  -H "Content-Type: application/json" \
  -d '{"contents": [{"parts": [{"text": "Hello"}]}]}'
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Proxy invocation:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST http://localhost:3001/proxy/gemini/v1beta/models/gemini-2.5-pro:generateContent?key=your-proxy-key \
  -H "Content-Type: application/json" \
  -d '{"contents": [{"parts": [{"text": "Hello"}]}]}'
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Changes required:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Replace &lt;code&gt;https://generativelanguage.googleapis.com&lt;/code&gt; with &lt;code&gt;http://localhost:3001/proxy/gemini&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Replace &lt;code&gt;key=your-gemini-key&lt;/code&gt; in URL parameter with the &lt;strong&gt;Proxy Key&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;5. Anthropic Interface Example&lt;/h3&gt; 
 &lt;p&gt;Assuming a group named &lt;code&gt;anthropic&lt;/code&gt; was created:&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Original invocation:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST https://api.anthropic.com/v1/messages \
  -H "x-api-key: sk-ant-api03-your-anthropic-key" \
  -H "anthropic-version: 2023-06-01" \
  -H "Content-Type: application/json" \
  -d '{"model": "claude-sonnet-4-20250514", "messages": [{"role": "user", "content": "Hello"}]}'
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Proxy invocation:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST http://localhost:3001/proxy/anthropic/v1/messages \
  -H "x-api-key: your-proxy-key" \
  -H "anthropic-version: 2023-06-01" \
  -H "Content-Type: application/json" \
  -d '{"model": "claude-sonnet-4-20250514", "messages": [{"role": "user", "content": "Hello"}]}'
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Changes required:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Replace &lt;code&gt;https://api.anthropic.com&lt;/code&gt; with &lt;code&gt;http://localhost:3001/proxy/anthropic&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Replace the original API Key in &lt;code&gt;x-api-key&lt;/code&gt; header with the &lt;strong&gt;Proxy Key&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;6. Supported Interfaces&lt;/h3&gt; 
 &lt;p&gt;&lt;strong&gt;OpenAI Format:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;/v1/chat/completions&lt;/code&gt; - Chat conversations&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;/v1/completions&lt;/code&gt; - Text completion&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;/v1/embeddings&lt;/code&gt; - Text embeddings&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;/v1/models&lt;/code&gt; - Model list&lt;/li&gt; 
  &lt;li&gt;And all other OpenAI-compatible interfaces&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;Gemini Format:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;/v1beta/models/*/generateContent&lt;/code&gt; - Content generation&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;/v1beta/models&lt;/code&gt; - Model list&lt;/li&gt; 
  &lt;li&gt;And all other Gemini native interfaces&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;Anthropic Format:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;/v1/messages&lt;/code&gt; - Message conversations&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;/v1/models&lt;/code&gt; - Model list (if available)&lt;/li&gt; 
  &lt;li&gt;And all other Anthropic native interfaces&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;7. Client SDK Configuration&lt;/h3&gt; 
 &lt;p&gt;&lt;strong&gt;OpenAI Python SDK:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;from openai import OpenAI

client = OpenAI(
    api_key="your-proxy-key",  # Use the proxy key
    base_url="http://localhost:3001/proxy/openai"  # Use proxy endpoint
)

response = client.chat.completions.create(
    model="gpt-4.1-mini",
    messages=[{"role": "user", "content": "Hello"}]
)
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Google Gemini SDK (Python):&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;import google.generativeai as genai

# Configure API key and base URL
genai.configure(
    api_key="your-proxy-key",  # Use the proxy key
    client_options={"api_endpoint": "http://localhost:3001/proxy/gemini"}
)

model = genai.GenerativeModel('gemini-2.5-pro')
response = model.generate_content("Hello")
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Anthropic SDK (Python):&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;from anthropic import Anthropic

client = Anthropic(
    api_key="your-proxy-key",  # Use the proxy key
    base_url="http://localhost:3001/proxy/anthropic"  # Use proxy endpoint
)

response = client.messages.create(
    model="claude-sonnet-4-20250514",
    messages=[{"role": "user", "content": "Hello"}]
)
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Important Note&lt;/strong&gt;: As a transparent proxy service, GPT-Load completely preserves the native API formats and authentication methods of various AI services. You only need to replace the endpoint address and use the &lt;strong&gt;Proxy Key&lt;/strong&gt; configured in the management interface for seamless migration.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Thanks to all the developers who have contributed to GPT-Load!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/tbphp/gpt-load/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=tbphp/gpt-load" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License - see &lt;a href="https://raw.githubusercontent.com/tbphp/gpt-load/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/tbphp/gpt-load"&gt;&lt;img src="https://starchart.cc/tbphp/gpt-load.svg?variant=adaptive" alt="Stargazers over time" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>argoproj/argo-rollouts</title>
      <link>https://github.com/argoproj/argo-rollouts</link>
      <description>&lt;p&gt;Progressive Delivery for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Argo Rollouts - Progressive Delivery for Kubernetes&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://codecov.io/gh/argoproj/argo-rollouts"&gt;&lt;img src="https://codecov.io/gh/argoproj/argo-rollouts/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://argoproj.github.io/community/join-slack"&gt;&lt;img src="https://img.shields.io/badge/slack-argoproj-brightgreen.svg?logo=slack" alt="slack" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/3834"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/3834/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://api.securityscorecards.dev/projects/github.com/argoproj/argo-rollouts"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/argoproj/argo-rollouts/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/argo/argo-rollouts"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/argo-rollouts" alt="Artifact HUB" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is Argo Rollouts?&lt;/h2&gt; 
&lt;p&gt;Argo Rollouts is a Kubernetes controller and set of CRDs which provide advanced deployment capabilities such as blue-green, canary, canary analysis, experimentation, and progressive delivery features to Kubernetes.&lt;/p&gt; 
&lt;p&gt;Argo Rollouts (optionally) integrates with ingress controllers and service meshes, leveraging their traffic shaping abilities to gradually shift traffic to the new version during an update. Additionally, Rollouts can query and interpret metrics from various providers to verify key KPIs and drive automated promotion or rollback during an update.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/hIL0E2gLkf8"&gt;&lt;img src="https://img.youtube.com/vi/hIL0E2gLkf8/0.jpg" alt="Argo Rollotus Demo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;kubectl create namespace argo-rollouts
kubectl apply -n argo-rollouts -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Follow the full &lt;a href="https://raw.githubusercontent.com/argoproj/argo-rollouts/master/docs/getting-started.md"&gt;getting started guide&lt;/a&gt; to walk through creating and then updating a rollout object.&lt;/p&gt; 
&lt;h2&gt;Why Argo Rollouts?&lt;/h2&gt; 
&lt;p&gt;Kubernetes Deployments provides the &lt;code&gt;RollingUpdate&lt;/code&gt; strategy which provide a basic set of safety guarantees (readiness probes) during an update. However the rolling update strategy faces many limitations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Few controls over the speed of the rollout&lt;/li&gt; 
 &lt;li&gt;Inability to control traffic flow to the new version&lt;/li&gt; 
 &lt;li&gt;Readiness probes are unsuitable for deeper, stress, or one-time checks&lt;/li&gt; 
 &lt;li&gt;No ability to query external metrics to verify an update&lt;/li&gt; 
 &lt;li&gt;Can halt the progression, but unable to automatically abort and rollback the update&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For these reasons, in large scale high-volume production environments, a rolling update is often considered too risky of an update procedure since it provides no control over the blast radius, may rollout too aggressively, and provides no automated rollback upon failures.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Blue-Green update strategy&lt;/li&gt; 
 &lt;li&gt;Canary update strategy&lt;/li&gt; 
 &lt;li&gt;Fine-grained, weighted traffic shifting&lt;/li&gt; 
 &lt;li&gt;Automated rollbacks and promotions&lt;/li&gt; 
 &lt;li&gt;Manual judgement&lt;/li&gt; 
 &lt;li&gt;Customizable metric queries and analysis of business KPIs&lt;/li&gt; 
 &lt;li&gt;Ingress controller integration: NGINX, ALB, Apache APISIX&lt;/li&gt; 
 &lt;li&gt;Service Mesh integration: Istio, Linkerd, SMI&lt;/li&gt; 
 &lt;li&gt;Metric provider integration: Prometheus, Wavefront, Kayenta, Web, Kubernetes Jobs, Datadog, New Relic, InfluxDB&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Traffic Shaping Integrations&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Traffic Shaping Integration&lt;/th&gt; 
   &lt;th&gt;SetWeight&lt;/th&gt; 
   &lt;th&gt;SetWeightExperiments&lt;/th&gt; 
   &lt;th&gt;SetMirror&lt;/th&gt; 
   &lt;th&gt;SetHeader&lt;/th&gt; 
   &lt;th&gt;Implemented As Plugin&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ALB Ingress Controller&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ambassador&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Apache APISIX Ingress Controller&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Istio&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Nginx Ingress Controller&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SMI&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Traefik&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (beta)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Contour&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (beta)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gateway API&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; = Supported&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;❌&lt;/span&gt; = Not Supported&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;✔&lt;/span&gt; = Yes&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To learn more about Argo Rollouts go to the &lt;a href="https://argo-rollouts.readthedocs.io/en/stable/"&gt;complete documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;You can reach the Argo Rollouts community and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Q &amp;amp; A: &lt;a href="https://github.com/argoproj/argo-rollouts/discussions"&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat: &lt;a href="https://argoproj.github.io/community/join-slack"&gt;The #argo-rollouts Slack channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Contributors Office Hours: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com"&gt;Every Thursday&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1xkoFkVviB70YBzSEa4bDnu-rUZ1sIFtwKKG1Uw8XsY8"&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;User Community meeting: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com"&gt;First Wednesday of each month&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1ttgw98MO45Dq7ZUHpIiOIEfbyeitKHNfMjbY5dLLMKQ"&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Who uses Argo Rollouts?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/argoproj/argo-rollouts/raw/master/USERS.md"&gt;Official Argo Rollouts User List&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community Blogs and Presentations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terrytangyuan/awesome-argo"&gt;Awesome-Argo: A Curated List of Awesome Projects and Resources Related to Argo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/XNXJtxkUKeY"&gt;Automation of Everything - How To Combine Argo Events, Workflows &amp;amp; Pipelines, CD, and Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/84Ky0aPbHvY"&gt;Argo Rollouts - Canary Deployments Made Easy In Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yeVkTTO9nOA"&gt;How Intuit Does Canary and Blue Green Deployments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Nv0PPwbIEkY"&gt;Leveling Up Your CD: Unlocking Progressive Delivery on Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/continuous-deployment/minimize-failed-deployments-argo-rollouts-smoke-tests/"&gt;Minimize failed deployments with Argo Rollouts and Smoke tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/continuous-deployment/recover-automatically-from-failed-deployments/"&gt;Recover automatically from failed deployments with Argo Rollouts and Prometheus metrics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=krDxDz4V4Tg"&gt;Kubernetes Blue-Green deployments with Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fviYWA2mcF8"&gt;Kubernetes canary deployments with Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=35Qimb_AZ8U"&gt;GitOps with Argo CD and an Argo Rollouts canary release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w-E8FzTbN3g&amp;amp;t=1s"&gt;Multi-Stage Delivery with Keptn and Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doordash.engineering/2021/04/14/gradual-code-releases-using-an-in-house-kubernetes-canary-controller/"&gt;Gradual Code Releases Using an In-House Kubernetes Canary Controller on top of Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=rCEhxJ2NSTI"&gt;How Scalable is Argo-Rollouts: A Cloud Operator’s Perspective&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@arielsimhon/minimize-impact-in-kubernetes-using-argo-rollouts-992fb9519969"&gt;Minimize Impact in Kubernetes Using Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DfeL7cdTx4c"&gt;Progressive Application Delivery with GitOps on Red Hat OpenShift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/blog/progressive-delivery-for-kubernetes-config-maps-using-argo-rollouts/"&gt;Progressive delivery for Kubernetes Config Maps using Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/blog/multi-service-progressive-delivery-with-argo-rollouts/"&gt;Multi-Service Progressive Delivery with Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/blog/progressive-delivery-for-stateful-services-using-argo-rollouts/"&gt;Progressive Delivery for Stateful Services Using Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>yaml/go-yaml</title>
      <link>https://github.com/yaml/go-yaml</link>
      <description>&lt;p&gt;The YAML org maintained fork of https://github.com/go-yaml/yaml&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;go.yaml.in/yaml&lt;/h1&gt; 
&lt;p&gt;YAML Support for the Go Language&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;yaml&lt;/code&gt; package enables &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt; programs to comfortably encode and decode &lt;a href="https://yaml.org/"&gt;YAML&lt;/a&gt; values.&lt;/p&gt; 
&lt;p&gt;It was originally developed within &lt;a href="https://www.canonical.com"&gt;Canonical&lt;/a&gt; as part of the &lt;a href="https://juju.ubuntu.com"&gt;juju&lt;/a&gt; project, and is based on a pure Go port of the well-known &lt;a href="http://pyyaml.org/wiki/LibYAML"&gt;libyaml&lt;/a&gt; C library to parse and generate YAML data quickly and reliably.&lt;/p&gt; 
&lt;h2&gt;Project Status&lt;/h2&gt; 
&lt;p&gt;This project started as a fork of the extremely popular &lt;a href="https://github.com/go-yaml/yaml/"&gt;go-yaml&lt;/a&gt; project, and is being maintained by the official &lt;a href="https://github.com/yaml/"&gt;YAML organization&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The YAML team took over ongoing maintenance and development of the project after discussion with go-yaml's author, @niemeyer, following his decision to &lt;a href="https://github.com/go-yaml/yaml/raw/944c86a7d2/README.md"&gt;label the project repository as "unmaintained"&lt;/a&gt; in April 2025.&lt;/p&gt; 
&lt;p&gt;We have put together a team of dedicated maintainers including representatives of go-yaml's most important downstream projects.&lt;/p&gt; 
&lt;p&gt;We will strive to earn the trust of the various go-yaml forks to switch back to this repository as their upstream.&lt;/p&gt; 
&lt;p&gt;Please &lt;a href="https://cloud-native.slack.com/archives/C08PPAT8PS7"&gt;contact us&lt;/a&gt; if you would like to contribute or be involved.&lt;/p&gt; 
&lt;h3&gt;Version Intentions&lt;/h3&gt; 
&lt;p&gt;Versions &lt;code&gt;v1&lt;/code&gt;, &lt;code&gt;v2&lt;/code&gt;, and &lt;code&gt;v3&lt;/code&gt; will remain as &lt;strong&gt;frozen legacy&lt;/strong&gt;. They will receive &lt;strong&gt;security-fixes only&lt;/strong&gt; so that existing consumers keep working without breaking changes.&lt;/p&gt; 
&lt;p&gt;All ongoing work, including new features and routine bug-fixes, will happen in &lt;strong&gt;&lt;code&gt;v4&lt;/code&gt;&lt;/strong&gt;. If you’re starting a new project or upgrading an existing one, please use the &lt;code&gt;go.yaml.in/yaml/v4&lt;/code&gt; import path.&lt;/p&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;yaml&lt;/code&gt; package supports most of YAML 1.2, but preserves some behavior from 1.1 for backwards compatibility.&lt;/p&gt; 
&lt;p&gt;Specifically, v3 of the &lt;code&gt;yaml&lt;/code&gt; package:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports YAML 1.1 bools (&lt;code&gt;yes&lt;/code&gt;/&lt;code&gt;no&lt;/code&gt;, &lt;code&gt;on&lt;/code&gt;/&lt;code&gt;off&lt;/code&gt;) as long as they are being decoded into a typed bool value. Otherwise they behave as a string. Booleans in YAML 1.2 are &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; only.&lt;/li&gt; 
 &lt;li&gt;Supports octals encoded and decoded as &lt;code&gt;0777&lt;/code&gt; per YAML 1.1, rather than &lt;code&gt;0o777&lt;/code&gt; as specified in YAML 1.2, because most parsers still use the old format. Octals in the &lt;code&gt;0o777&lt;/code&gt; format are supported though, so new files work.&lt;/li&gt; 
 &lt;li&gt;Does not support base-60 floats. These are gone from YAML 1.2, and were actually never supported by this package as it's clearly a poor choice.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation and Usage&lt;/h2&gt; 
&lt;p&gt;The import path for the package is &lt;em&gt;go.yaml.in/yaml/v4&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;To install it, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go get go.yaml.in/yaml/v4
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;API Documentation&lt;/h2&gt; 
&lt;p&gt;See: &lt;a href="https://pkg.go.dev/go.yaml.in/yaml/v4"&gt;https://pkg.go.dev/go.yaml.in/yaml/v4&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;API Stability&lt;/h2&gt; 
&lt;p&gt;The package API for yaml v3 will remain stable as described in &lt;a href="https://gopkg.in"&gt;gopkg.in&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"fmt"
	"log"

	"go.yaml.in/yaml/v4"
)

var data = `
a: Easy!
b:
  c: 2
  d: [3, 4]
`

// Note: struct fields must be public in order for unmarshal to
// correctly populate the data.
type T struct {
	A string
	B struct {
		RenamedC int   `yaml:"c"`
		D	[]int `yaml:",flow"`
	}
}

func main() {
	t := T{}

	err := yaml.Unmarshal([]byte(data), &amp;amp;t)
	if err != nil {
		log.Fatalf("error: %v", err)
	}
	fmt.Printf("--- t:\n%v\n\n", t)

	d, err := yaml.Marshal(&amp;amp;t)
	if err != nil {
		log.Fatalf("error: %v", err)
	}
	fmt.Printf("--- t dump:\n%s\n\n", string(d))

	m := make(map[any]any)

	err = yaml.Unmarshal([]byte(data), &amp;amp;m)
	if err != nil {
		log.Fatalf("error: %v", err)
	}
	fmt.Printf("--- m:\n%v\n\n", m)

	d, err = yaml.Marshal(&amp;amp;m)
	if err != nil {
		log.Fatalf("error: %v", err)
	}
	fmt.Printf("--- m dump:\n%s\n\n", string(d))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example will generate the following output:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;--- t:
{Easy! {2 [3 4]}}

--- t dump:
a: Easy!
b:
  c: 2
  d: [3, 4]


--- m:
map[a:Easy! b:map[c:2 d:[3 4]]]

--- m dump:
a: Easy!
b:
  c: 2
  d:
  - 3
  - 4
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Testing with &lt;code&gt;make&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Running &lt;code&gt;make test&lt;/code&gt; in this directory should just work. You don't need to have &lt;code&gt;go&lt;/code&gt; installed and even if you do the &lt;code&gt;GNUmakefile&lt;/code&gt; will ignore it and setup / cache its own version under &lt;code&gt;.cache/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The only things you need are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux or macOS&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bash&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;curl&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some &lt;code&gt;make&lt;/code&gt; commands are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;make test&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make test GO-VERSION=1.2.34&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make shell&lt;/code&gt; Start a shell with the local &lt;code&gt;go&lt;/code&gt; environment&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make shell GO-VERSION=1.2.34&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make distclean&lt;/code&gt; - Removes &lt;code&gt;.cache/&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The yaml package is licensed under the MIT and Apache License 2.0 licenses. Please see the LICENSE file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>prometheus/node_exporter</title>
      <link>https://github.com/prometheus/node_exporter</link>
      <description>&lt;p&gt;Exporter for machine metrics&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node exporter&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://circleci.com/gh/prometheus/node_exporter"&gt;&lt;img src="https://circleci.com/gh/prometheus/node_exporter/tree/master.svg?style=shield" alt="CircleCI" /&gt;&lt;/a&gt; &lt;img src="https://github.com/prometheus/node_exporter/actions/workflows/bsd.yml/badge.svg?sanitize=true" alt="bsd workflow" /&gt; &lt;img src="https://github.com/prometheus/node_exporter/actions/workflows/golangci-lint.yml/badge.svg?sanitize=true" alt="golangci-lint workflow" /&gt; &lt;a href="https://quay.io/repository/prometheus/node-exporter"&gt;&lt;img src="https://quay.io/repository/prometheus/node-exporter/status" alt="Docker Repository on Quay" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/prom/node-exporter/"&gt;&lt;img src="https://img.shields.io/docker/pulls/prom/node-exporter.svg?maxAge=604800" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/prometheus/node_exporter"&gt;&lt;img src="https://goreportcard.com/badge/github.com/prometheus/node_exporter" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Prometheus exporter for hardware and OS metrics exposed by *NIX kernels, written in Go with pluggable metric collectors.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://github.com/prometheus-community/windows_exporter"&gt;Windows exporter&lt;/a&gt; is recommended for Windows users. To expose NVIDIA GPU metrics, &lt;a href="https://github.com/NVIDIA/dcgm-exporter"&gt;prometheus-dcgm &lt;/a&gt; can be used.&lt;/p&gt; 
&lt;h2&gt;Installation and Usage&lt;/h2&gt; 
&lt;p&gt;If you are new to Prometheus and &lt;code&gt;node_exporter&lt;/code&gt; there is a &lt;a href="https://prometheus.io/docs/guides/node-exporter/"&gt;simple step-by-step guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;node_exporter&lt;/code&gt; listens on HTTP port 9100 by default. See the &lt;code&gt;--help&lt;/code&gt; output for more options.&lt;/p&gt; 
&lt;h3&gt;Ansible&lt;/h3&gt; 
&lt;p&gt;For automated installs with &lt;a href="https://www.ansible.com/"&gt;Ansible&lt;/a&gt;, there is the &lt;a href="https://github.com/prometheus-community/ansible"&gt;Prometheus Community role&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;node_exporter&lt;/code&gt; is designed to monitor the host system. Deploying in containers requires extra care in order to avoid monitoring the container itself.&lt;/p&gt; 
&lt;p&gt;For situations where containerized deployment is needed, some extra flags must be used to allow the &lt;code&gt;node_exporter&lt;/code&gt; access to the host namespaces.&lt;/p&gt; 
&lt;p&gt;Be aware that any non-root mount points you want to monitor will need to be bind-mounted into the container.&lt;/p&gt; 
&lt;p&gt;If you start container for host monitoring, specify &lt;code&gt;path.rootfs&lt;/code&gt; argument. This argument must match path in bind-mount of host root. The node_exporter will use &lt;code&gt;path.rootfs&lt;/code&gt; as prefix to access host filesystem.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d \
  --net="host" \
  --pid="host" \
  -v "/:/host:ro,rslave" \
  quay.io/prometheus/node-exporter:latest \
  --path.rootfs=/host
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Docker compose, similar flag changes are needed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;---
version: '3.8'

services:
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On some systems, the &lt;code&gt;timex&lt;/code&gt; collector requires an additional Docker flag, &lt;code&gt;--cap-add=SYS_TIME&lt;/code&gt;, in order to access the required syscalls.&lt;/p&gt; 
&lt;h2&gt;Collectors&lt;/h2&gt; 
&lt;p&gt;There is varying support for collectors on each operating system. The tables below list all existing collectors and the supported systems.&lt;/p&gt; 
&lt;p&gt;Collectors are enabled by providing a &lt;code&gt;--collector.&amp;lt;name&amp;gt;&lt;/code&gt; flag. Collectors that are enabled by default can be disabled by providing a &lt;code&gt;--no-collector.&amp;lt;name&amp;gt;&lt;/code&gt; flag. To enable only some specific collector(s), use &lt;code&gt;--collector.disable-defaults --collector.&amp;lt;name&amp;gt; ...&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Include &amp;amp; Exclude flags&lt;/h3&gt; 
&lt;p&gt;A few collectors can be configured to include or exclude certain patterns using dedicated flags. The exclude flags are used to indicate "all except", while the include flags are used to say "none except". Note that these flags are mutually exclusive on collectors that support both.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-txt"&gt;--collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;List:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Collector&lt;/th&gt; 
   &lt;th&gt;Scope&lt;/th&gt; 
   &lt;th&gt;Include Flag&lt;/th&gt; 
   &lt;th&gt;Exclude Flag&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;arp&lt;/td&gt; 
   &lt;td&gt;device&lt;/td&gt; 
   &lt;td&gt;--collector.arp.device-include&lt;/td&gt; 
   &lt;td&gt;--collector.arp.device-exclude&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cpu&lt;/td&gt; 
   &lt;td&gt;bugs&lt;/td&gt; 
   &lt;td&gt;--collector.cpu.info.bugs-include&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cpu&lt;/td&gt; 
   &lt;td&gt;flags&lt;/td&gt; 
   &lt;td&gt;--collector.cpu.info.flags-include&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;diskstats&lt;/td&gt; 
   &lt;td&gt;device&lt;/td&gt; 
   &lt;td&gt;--collector.diskstats.device-include&lt;/td&gt; 
   &lt;td&gt;--collector.diskstats.device-exclude&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ethtool&lt;/td&gt; 
   &lt;td&gt;device&lt;/td&gt; 
   &lt;td&gt;--collector.ethtool.device-include&lt;/td&gt; 
   &lt;td&gt;--collector.ethtool.device-exclude&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ethtool&lt;/td&gt; 
   &lt;td&gt;metrics&lt;/td&gt; 
   &lt;td&gt;--collector.ethtool.metrics-include&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;filesystem&lt;/td&gt; 
   &lt;td&gt;fs-types&lt;/td&gt; 
   &lt;td&gt;--collector.filesystem.fs-types-include&lt;/td&gt; 
   &lt;td&gt;--collector.filesystem.fs-types-exclude&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;filesystem&lt;/td&gt; 
   &lt;td&gt;mount-points&lt;/td&gt; 
   &lt;td&gt;--collector.filesystem.mount-points-include&lt;/td&gt; 
   &lt;td&gt;--collector.filesystem.mount-points-exclude&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hwmon&lt;/td&gt; 
   &lt;td&gt;chip&lt;/td&gt; 
   &lt;td&gt;--collector.hwmon.chip-include&lt;/td&gt; 
   &lt;td&gt;--collector.hwmon.chip-exclude&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hwmon&lt;/td&gt; 
   &lt;td&gt;sensor&lt;/td&gt; 
   &lt;td&gt;--collector.hwmon.sensor-include&lt;/td&gt; 
   &lt;td&gt;--collector.hwmon.sensor-exclude&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;interrupts&lt;/td&gt; 
   &lt;td&gt;name&lt;/td&gt; 
   &lt;td&gt;--collector.interrupts.name-include&lt;/td&gt; 
   &lt;td&gt;--collector.interrupts.name-exclude&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;netdev&lt;/td&gt; 
   &lt;td&gt;device&lt;/td&gt; 
   &lt;td&gt;--collector.netdev.device-include&lt;/td&gt; 
   &lt;td&gt;--collector.netdev.device-exclude&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;qdisk&lt;/td&gt; 
   &lt;td&gt;device&lt;/td&gt; 
   &lt;td&gt;--collector.qdisk.device-include&lt;/td&gt; 
   &lt;td&gt;--collector.qdisk.device-exclude&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;slabinfo&lt;/td&gt; 
   &lt;td&gt;slab-names&lt;/td&gt; 
   &lt;td&gt;--collector.slabinfo.slabs-include&lt;/td&gt; 
   &lt;td&gt;--collector.slabinfo.slabs-exclude&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;sysctl&lt;/td&gt; 
   &lt;td&gt;all&lt;/td&gt; 
   &lt;td&gt;--collector.sysctl.include&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;systemd&lt;/td&gt; 
   &lt;td&gt;unit&lt;/td&gt; 
   &lt;td&gt;--collector.systemd.unit-include&lt;/td&gt; 
   &lt;td&gt;--collector.systemd.unit-exclude&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Enabled by default&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;OS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;arp&lt;/td&gt; 
   &lt;td&gt;Exposes ARP statistics from &lt;code&gt;/proc/net/arp&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;bcache&lt;/td&gt; 
   &lt;td&gt;Exposes bcache statistics from &lt;code&gt;/sys/fs/bcache/&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;bonding&lt;/td&gt; 
   &lt;td&gt;Exposes the number of configured and active slaves of Linux bonding interfaces.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;btrfs&lt;/td&gt; 
   &lt;td&gt;Exposes btrfs statistics&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;boottime&lt;/td&gt; 
   &lt;td&gt;Exposes system boot time derived from the &lt;code&gt;kern.boottime&lt;/code&gt; sysctl.&lt;/td&gt; 
   &lt;td&gt;Darwin, Dragonfly, FreeBSD, NetBSD, OpenBSD, Solaris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;conntrack&lt;/td&gt; 
   &lt;td&gt;Shows conntrack statistics (does nothing if no &lt;code&gt;/proc/sys/net/netfilter/&lt;/code&gt; present).&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cpu&lt;/td&gt; 
   &lt;td&gt;Exposes CPU statistics&lt;/td&gt; 
   &lt;td&gt;Darwin, Dragonfly, FreeBSD, Linux, Solaris, OpenBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cpufreq&lt;/td&gt; 
   &lt;td&gt;Exposes CPU frequency statistics&lt;/td&gt; 
   &lt;td&gt;Linux, Solaris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;diskstats&lt;/td&gt; 
   &lt;td&gt;Exposes disk I/O statistics.&lt;/td&gt; 
   &lt;td&gt;Darwin, Linux, OpenBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;dmi&lt;/td&gt; 
   &lt;td&gt;Expose Desktop Management Interface (DMI) info from &lt;code&gt;/sys/class/dmi/id/&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;edac&lt;/td&gt; 
   &lt;td&gt;Exposes error detection and correction statistics.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;entropy&lt;/td&gt; 
   &lt;td&gt;Exposes available entropy.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;exec&lt;/td&gt; 
   &lt;td&gt;Exposes execution statistics.&lt;/td&gt; 
   &lt;td&gt;Dragonfly, FreeBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;fibrechannel&lt;/td&gt; 
   &lt;td&gt;Exposes fibre channel information and statistics from &lt;code&gt;/sys/class/fc_host/&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;filefd&lt;/td&gt; 
   &lt;td&gt;Exposes file descriptor statistics from &lt;code&gt;/proc/sys/fs/file-nr&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;filesystem&lt;/td&gt; 
   &lt;td&gt;Exposes filesystem statistics, such as disk space used.&lt;/td&gt; 
   &lt;td&gt;Darwin, Dragonfly, FreeBSD, Linux, OpenBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hwmon&lt;/td&gt; 
   &lt;td&gt;Expose hardware monitoring and sensor data from &lt;code&gt;/sys/class/hwmon/&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;infiniband&lt;/td&gt; 
   &lt;td&gt;Exposes network statistics specific to InfiniBand and Intel OmniPath configurations.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ipvs&lt;/td&gt; 
   &lt;td&gt;Exposes IPVS status from &lt;code&gt;/proc/net/ip_vs&lt;/code&gt; and stats from &lt;code&gt;/proc/net/ip_vs_stats&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;loadavg&lt;/td&gt; 
   &lt;td&gt;Exposes load average.&lt;/td&gt; 
   &lt;td&gt;Darwin, Dragonfly, FreeBSD, Linux, NetBSD, OpenBSD, Solaris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;mdadm&lt;/td&gt; 
   &lt;td&gt;Exposes statistics about devices in &lt;code&gt;/proc/mdstat&lt;/code&gt; (does nothing if no &lt;code&gt;/proc/mdstat&lt;/code&gt; present).&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;meminfo&lt;/td&gt; 
   &lt;td&gt;Exposes memory statistics.&lt;/td&gt; 
   &lt;td&gt;Darwin, Dragonfly, FreeBSD, Linux, OpenBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;netclass&lt;/td&gt; 
   &lt;td&gt;Exposes network interface info from &lt;code&gt;/sys/class/net/&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;netdev&lt;/td&gt; 
   &lt;td&gt;Exposes network interface statistics such as bytes transferred.&lt;/td&gt; 
   &lt;td&gt;Darwin, Dragonfly, FreeBSD, Linux, OpenBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;netisr&lt;/td&gt; 
   &lt;td&gt;Exposes netisr statistics&lt;/td&gt; 
   &lt;td&gt;FreeBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;netstat&lt;/td&gt; 
   &lt;td&gt;Exposes network statistics from &lt;code&gt;/proc/net/netstat&lt;/code&gt;. This is the same information as &lt;code&gt;netstat -s&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nfs&lt;/td&gt; 
   &lt;td&gt;Exposes NFS client statistics from &lt;code&gt;/proc/net/rpc/nfs&lt;/code&gt;. This is the same information as &lt;code&gt;nfsstat -c&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nfsd&lt;/td&gt; 
   &lt;td&gt;Exposes NFS kernel server statistics from &lt;code&gt;/proc/net/rpc/nfsd&lt;/code&gt;. This is the same information as &lt;code&gt;nfsstat -s&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nvme&lt;/td&gt; 
   &lt;td&gt;Exposes NVMe info from &lt;code&gt;/sys/class/nvme/&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;os&lt;/td&gt; 
   &lt;td&gt;Expose OS release info from &lt;code&gt;/etc/os-release&lt;/code&gt; or &lt;code&gt;/usr/lib/os-release&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;any&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;powersupplyclass&lt;/td&gt; 
   &lt;td&gt;Exposes Power Supply statistics from &lt;code&gt;/sys/class/power_supply&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pressure&lt;/td&gt; 
   &lt;td&gt;Exposes pressure stall statistics from &lt;code&gt;/proc/pressure/&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux (kernel 4.20+ and/or &lt;a href="https://www.kernel.org/doc/html/latest/accounting/psi.html"&gt;CONFIG_PSI&lt;/a&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rapl&lt;/td&gt; 
   &lt;td&gt;Exposes various statistics from &lt;code&gt;/sys/class/powercap&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;schedstat&lt;/td&gt; 
   &lt;td&gt;Exposes task scheduler statistics from &lt;code&gt;/proc/schedstat&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;selinux&lt;/td&gt; 
   &lt;td&gt;Exposes SELinux statistics.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;sockstat&lt;/td&gt; 
   &lt;td&gt;Exposes various statistics from &lt;code&gt;/proc/net/sockstat&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;softnet&lt;/td&gt; 
   &lt;td&gt;Exposes statistics from &lt;code&gt;/proc/net/softnet_stat&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;stat&lt;/td&gt; 
   &lt;td&gt;Exposes various statistics from &lt;code&gt;/proc/stat&lt;/code&gt;. This includes boot time, forks and interrupts.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tapestats&lt;/td&gt; 
   &lt;td&gt;Exposes statistics from &lt;code&gt;/sys/class/scsi_tape&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;textfile&lt;/td&gt; 
   &lt;td&gt;Exposes statistics read from local disk. The &lt;code&gt;--collector.textfile.directory&lt;/code&gt; flag must be set.&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;any&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;thermal&lt;/td&gt; 
   &lt;td&gt;Exposes thermal statistics like &lt;code&gt;pmset -g therm&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Darwin&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;thermal_zone&lt;/td&gt; 
   &lt;td&gt;Exposes thermal zone &amp;amp; cooling device statistics from &lt;code&gt;/sys/class/thermal&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;time&lt;/td&gt; 
   &lt;td&gt;Exposes the current system time.&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;any&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;timex&lt;/td&gt; 
   &lt;td&gt;Exposes selected adjtimex(2) system call stats.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;udp_queues&lt;/td&gt; 
   &lt;td&gt;Exposes UDP total lengths of the rx_queue and tx_queue from &lt;code&gt;/proc/net/udp&lt;/code&gt; and &lt;code&gt;/proc/net/udp6&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uname&lt;/td&gt; 
   &lt;td&gt;Exposes system information as provided by the uname system call.&lt;/td&gt; 
   &lt;td&gt;Darwin, FreeBSD, Linux, OpenBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;vmstat&lt;/td&gt; 
   &lt;td&gt;Exposes statistics from &lt;code&gt;/proc/vmstat&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;watchdog&lt;/td&gt; 
   &lt;td&gt;Exposes statistics from &lt;code&gt;/sys/class/watchdog&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;xfs&lt;/td&gt; 
   &lt;td&gt;Exposes XFS runtime statistics.&lt;/td&gt; 
   &lt;td&gt;Linux (kernel 4.4+)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;zfs&lt;/td&gt; 
   &lt;td&gt;Exposes &lt;a href="http://open-zfs.org/"&gt;ZFS&lt;/a&gt; performance statistics.&lt;/td&gt; 
   &lt;td&gt;FreeBSD, &lt;a href="http://zfsonlinux.org/"&gt;Linux&lt;/a&gt;, Solaris&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Disabled by default&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;node_exporter&lt;/code&gt; also implements a number of collectors that are disabled by default. Reasons for this vary by collector, and may include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;High cardinality&lt;/li&gt; 
 &lt;li&gt;Prolonged runtime that exceeds the Prometheus &lt;code&gt;scrape_interval&lt;/code&gt; or &lt;code&gt;scrape_timeout&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Significant resource demands on the host&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can enable additional collectors as desired by adding them to your init system's or service supervisor's startup configuration for &lt;code&gt;node_exporter&lt;/code&gt; but caution is advised. Enable at most one at a time, testing first on a non-production system, then by hand on a single production node. When enabling additional collectors, you should carefully monitor the change by observing the &lt;code&gt; scrape_duration_seconds&lt;/code&gt; metric to ensure that collection completes and does not time out. In addition, monitor the &lt;code&gt;scrape_samples_post_metric_relabeling&lt;/code&gt; metric to see the changes in cardinality.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;OS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;buddyinfo&lt;/td&gt; 
   &lt;td&gt;Exposes statistics of memory fragments as reported by /proc/buddyinfo.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cgroups&lt;/td&gt; 
   &lt;td&gt;A summary of the number of active and enabled cgroups&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cpu_vulnerabilities&lt;/td&gt; 
   &lt;td&gt;Exposes CPU vulnerability information from sysfs.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;devstat&lt;/td&gt; 
   &lt;td&gt;Exposes device statistics&lt;/td&gt; 
   &lt;td&gt;Dragonfly, FreeBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;drm&lt;/td&gt; 
   &lt;td&gt;Expose GPU metrics using sysfs / DRM, &lt;code&gt;amdgpu&lt;/code&gt; is the only driver which exposes this information through DRM&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;drbd&lt;/td&gt; 
   &lt;td&gt;Exposes Distributed Replicated Block Device statistics (to version 8.4)&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ethtool&lt;/td&gt; 
   &lt;td&gt;Exposes network interface information and network driver statistics equivalent to &lt;code&gt;ethtool&lt;/code&gt;, &lt;code&gt;ethtool -S&lt;/code&gt;, and &lt;code&gt;ethtool -i&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;interrupts&lt;/td&gt; 
   &lt;td&gt;Exposes detailed interrupts statistics.&lt;/td&gt; 
   &lt;td&gt;Linux, OpenBSD&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ksmd&lt;/td&gt; 
   &lt;td&gt;Exposes kernel and system statistics from &lt;code&gt;/sys/kernel/mm/ksm&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;lnstat&lt;/td&gt; 
   &lt;td&gt;Exposes stats from &lt;code&gt;/proc/net/stat/&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;logind&lt;/td&gt; 
   &lt;td&gt;Exposes session counts from &lt;a href="http://www.freedesktop.org/wiki/Software/systemd/logind/"&gt;logind&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;meminfo_numa&lt;/td&gt; 
   &lt;td&gt;Exposes memory statistics from &lt;code&gt;/sys/devices/system/node/node[0-9]*/meminfo&lt;/code&gt;, &lt;code&gt;/sys/devices/system/node/node[0-9]*/numastat&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;mountstats&lt;/td&gt; 
   &lt;td&gt;Exposes filesystem statistics from &lt;code&gt;/proc/self/mountstats&lt;/code&gt;. Exposes detailed NFS client statistics.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;network_route&lt;/td&gt; 
   &lt;td&gt;Exposes the routing table as metrics&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pcidevice&lt;/td&gt; 
   &lt;td&gt;Exposes pci devices' information including their link status and parent devices.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;perf&lt;/td&gt; 
   &lt;td&gt;Exposes perf based metrics (Warning: Metrics are dependent on kernel configuration and settings).&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;processes&lt;/td&gt; 
   &lt;td&gt;Exposes aggregate process statistics from &lt;code&gt;/proc&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;qdisc&lt;/td&gt; 
   &lt;td&gt;Exposes &lt;a href="https://en.wikipedia.org/wiki/Network_scheduler#Linux_kernel"&gt;queuing discipline&lt;/a&gt; statistics&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;slabinfo&lt;/td&gt; 
   &lt;td&gt;Exposes slab statistics from &lt;code&gt;/proc/slabinfo&lt;/code&gt;. Note that permission of &lt;code&gt;/proc/slabinfo&lt;/code&gt; is usually 0400, so set it appropriately.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;softirqs&lt;/td&gt; 
   &lt;td&gt;Exposes detailed softirq statistics from &lt;code&gt;/proc/softirqs&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;sysctl&lt;/td&gt; 
   &lt;td&gt;Expose sysctl values from &lt;code&gt;/proc/sys&lt;/code&gt;. Use &lt;code&gt;--collector.sysctl.include(-info)&lt;/code&gt; to configure.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;systemd&lt;/td&gt; 
   &lt;td&gt;Exposes service and system status from &lt;a href="http://www.freedesktop.org/wiki/Software/systemd/"&gt;systemd&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tcpstat&lt;/td&gt; 
   &lt;td&gt;Exposes TCP connection status information from &lt;code&gt;/proc/net/tcp&lt;/code&gt; and &lt;code&gt;/proc/net/tcp6&lt;/code&gt;. (Warning: the current version has potential performance issues in high load situations.)&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;wifi&lt;/td&gt; 
   &lt;td&gt;Exposes WiFi device and station statistics.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;xfrm&lt;/td&gt; 
   &lt;td&gt;Exposes statistics from &lt;code&gt;/proc/net/xfrm_stat&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;zoneinfo&lt;/td&gt; 
   &lt;td&gt;Exposes NUMA memory zone metrics.&lt;/td&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Deprecated&lt;/h3&gt; 
&lt;p&gt;These collectors are deprecated and will be removed in the next major release.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;OS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ntp&lt;/td&gt; 
   &lt;td&gt;Exposes local NTP daemon health to check &lt;a href="https://raw.githubusercontent.com/prometheus/node_exporter/master/docs/TIME.md"&gt;time&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;any&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;runit&lt;/td&gt; 
   &lt;td&gt;Exposes service status from &lt;a href="http://smarden.org/runit/"&gt;runit&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;any&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;supervisord&lt;/td&gt; 
   &lt;td&gt;Exposes service status from &lt;a href="http://supervisord.org/"&gt;supervisord&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;any&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Perf Collector&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;perf&lt;/code&gt; collector may not work out of the box on some Linux systems due to kernel configuration and security settings. To allow access, set the following &lt;code&gt;sysctl&lt;/code&gt; parameter:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sysctl -w kernel.perf_event_paranoid=X
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;2 allow only user-space measurements (default since Linux 4.6).&lt;/li&gt; 
 &lt;li&gt;1 allow both kernel and user measurements (default before Linux 4.6).&lt;/li&gt; 
 &lt;li&gt;0 allow access to CPU-specific data but not raw tracepoint samples.&lt;/li&gt; 
 &lt;li&gt;-1 no restrictions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Depending on the configured value different metrics will be available, for most cases &lt;code&gt;0&lt;/code&gt; will provide the most complete set. For more information see &lt;a href="http://man7.org/linux/man-pages/man2/perf_event_open.2.html"&gt;&lt;code&gt;man 2 perf_event_open&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;By default, the &lt;code&gt;perf&lt;/code&gt; collector will only collect metrics of the CPUs that &lt;code&gt;node_exporter&lt;/code&gt; is running on (ie &lt;a href="https://golang.org/pkg/runtime/#NumCPU"&gt;&lt;code&gt;runtime.NumCPU&lt;/code&gt;&lt;/a&gt;. If this is insufficient (e.g. if you run &lt;code&gt;node_exporter&lt;/code&gt; with its CPU affinity set to specific CPUs), you can specify a list of alternate CPUs by using the &lt;code&gt;--collector.perf.cpus&lt;/code&gt; flag. For example, to collect metrics on CPUs 2-6, you would specify: &lt;code&gt;--collector.perf --collector.perf.cpus=2-6&lt;/code&gt;. The CPU configuration is zero indexed and can also take a stride value; e.g. &lt;code&gt;--collector.perf --collector.perf.cpus=1-10:5&lt;/code&gt; would collect on CPUs 1, 5, and 10.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;perf&lt;/code&gt; collector is also able to collect &lt;a href="https://www.kernel.org/doc/html/latest/core-api/tracepoint.html"&gt;tracepoint&lt;/a&gt; counts when using the &lt;code&gt;--collector.perf.tracepoint&lt;/code&gt; flag. Tracepoints can be found using &lt;a href="http://man7.org/linux/man-pages/man1/perf.1.html"&gt;&lt;code&gt;perf list&lt;/code&gt;&lt;/a&gt; or from debugfs. And example usage of this would be &lt;code&gt;--collector.perf.tracepoint="sched:sched_process_exec"&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Sysctl Collector&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;sysctl&lt;/code&gt; collector can be enabled with &lt;code&gt;--collector.sysctl&lt;/code&gt;. It supports exposing numeric sysctl values as metrics using the &lt;code&gt;--collector.sysctl.include&lt;/code&gt; flag and string values as info metrics by using the &lt;code&gt;--collector.sysctl.include-info&lt;/code&gt; flag. The flags can be repeated. For sysctl with multiple numeric values, an optional mapping can be given to expose each value as its own metric. Otherwise an &lt;code&gt;index&lt;/code&gt; label is used to identify the different fields.&lt;/p&gt; 
&lt;h4&gt;Examples&lt;/h4&gt; 
&lt;h5&gt;Numeric values&lt;/h5&gt; 
&lt;h6&gt;Single values&lt;/h6&gt; 
&lt;p&gt;Using &lt;code&gt;--collector.sysctl.include=vm.user_reserve_kbytes&lt;/code&gt;: &lt;code&gt;vm.user_reserve_kbytes = 131072&lt;/code&gt; -&amp;gt; &lt;code&gt;node_sysctl_vm_user_reserve_kbytes 131072&lt;/code&gt;&lt;/p&gt; 
&lt;h6&gt;Multiple values&lt;/h6&gt; 
&lt;p&gt;A sysctl can contain multiple values, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;net.ipv4.tcp_rmem = 4096	131072	6291456
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using &lt;code&gt;--collector.sysctl.include=net.ipv4.tcp_rmem&lt;/code&gt; the collector will expose:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node_sysctl_net_ipv4_tcp_rmem{index="0"} 4096
node_sysctl_net_ipv4_tcp_rmem{index="1"} 131072
node_sysctl_net_ipv4_tcp_rmem{index="2"} 6291456
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the indexes have defined meaning like in this case, the values can be mapped to multiple metrics by appending the mapping to the --collector.sysctl.include flag: Using &lt;code&gt;--collector.sysctl.include=net.ipv4.tcp_rmem:min,default,max&lt;/code&gt; the collector will expose:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node_sysctl_net_ipv4_tcp_rmem_min 4096
node_sysctl_net_ipv4_tcp_rmem_default 131072
node_sysctl_net_ipv4_tcp_rmem_max 6291456
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;String values&lt;/h5&gt; 
&lt;p&gt;String values need to be exposed as info metric. The user selects them by using the &lt;code&gt;--collector.sysctl.include-info&lt;/code&gt; flag.&lt;/p&gt; 
&lt;h6&gt;Single values&lt;/h6&gt; 
&lt;p&gt;&lt;code&gt;kernel.core_pattern = core&lt;/code&gt; -&amp;gt; &lt;code&gt;node_sysctl_info{key="kernel.core_pattern_info", value="core"} 1&lt;/code&gt;&lt;/p&gt; 
&lt;h6&gt;Multiple values&lt;/h6&gt; 
&lt;p&gt;Given the following sysctl:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;kernel.seccomp.actions_avail = kill_process kill_thread trap errno trace log allow
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Setting &lt;code&gt;--collector.sysctl.include-info=kernel.seccomp.actions_avail&lt;/code&gt; will yield:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;node_sysctl_info{key="kernel.seccomp.actions_avail", index="0", value="kill_process"} 1
node_sysctl_info{key="kernel.seccomp.actions_avail", index="1", value="kill_thread"} 1
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Textfile Collector&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;textfile&lt;/code&gt; collector is similar to the &lt;a href="https://github.com/prometheus/pushgateway"&gt;Pushgateway&lt;/a&gt;, in that it allows exporting of statistics from batch jobs. It can also be used to export static metrics, such as what role a machine has. The Pushgateway should be used for service-level metrics. The &lt;code&gt;textfile&lt;/code&gt; module is for metrics that are tied to a machine.&lt;/p&gt; 
&lt;p&gt;To use it, set the &lt;code&gt;--collector.textfile.directory&lt;/code&gt; flag on the &lt;code&gt;node_exporter&lt;/code&gt; commandline. The collector will parse all files in that directory matching the glob &lt;code&gt;*.prom&lt;/code&gt; using the &lt;a href="http://prometheus.io/docs/instrumenting/exposition_formats/"&gt;text format&lt;/a&gt;. &lt;strong&gt;Note:&lt;/strong&gt; Timestamps are not supported.&lt;/p&gt; 
&lt;p&gt;To atomically push completion time for a cron job:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;echo my_batch_job_completion_time $(date +%s) &amp;gt; /path/to/directory/my_batch_job.prom.$$
mv /path/to/directory/my_batch_job.prom.$$ /path/to/directory/my_batch_job.prom
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To statically set roles for a machine using labels:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;echo 'role{role="application_server"} 1' &amp;gt; /path/to/directory/role.prom.$$
mv /path/to/directory/role.prom.$$ /path/to/directory/role.prom
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Filtering enabled collectors&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;node_exporter&lt;/code&gt; will expose all metrics from enabled collectors by default. This is the recommended way to collect metrics to avoid errors when comparing metrics of different families.&lt;/p&gt; 
&lt;p&gt;For advanced use the &lt;code&gt;node_exporter&lt;/code&gt; can be passed an optional list of collectors to filter metrics. The parameters &lt;code&gt;collect[]&lt;/code&gt; and &lt;code&gt;exclude[]&lt;/code&gt; can be used multiple times (but cannot be combined). In Prometheus configuration you can use this syntax under the &lt;a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#%3Cscrape_config%3E"&gt;scrape config&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Collect only &lt;code&gt;cpu&lt;/code&gt; and &lt;code&gt;meminfo&lt;/code&gt; collector metrics:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;  params:
    collect[]:
      - cpu
      - meminfo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Collect all enabled collector metrics but exclude &lt;code&gt;netdev&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;  params:
    exclude[]:
      - netdev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This can be useful for having different Prometheus servers collect specific metrics from nodes.&lt;/p&gt; 
&lt;h2&gt;Development building and running&lt;/h2&gt; 
&lt;p&gt;Prerequisites:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/dl/"&gt;Go compiler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;RHEL/CentOS: &lt;code&gt;glibc-static&lt;/code&gt; package.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Building:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/prometheus/node_exporter.git
cd node_exporter
make build
./node_exporter &amp;lt;flags&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To see all available configuration flags:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./node_exporter -h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running tests&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;make test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;TLS endpoint&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;EXPERIMENTAL&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The exporter supports TLS via a new web configuration file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;./node_exporter --web.config.file=web-config.yml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/prometheus/exporter-toolkit/raw/master/docs/web-configuration.md"&gt;exporter-toolkit web-configuration&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kubernetes/autoscaler</title>
      <link>https://github.com/kubernetes/autoscaler</link>
      <description>&lt;p&gt;Autoscaling components for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kubernetes Autoscaler&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/kubernetes/autoscaler/actions/workflows/release.yaml"&gt;&lt;img src="https://github.com/kubernetes/autoscaler/actions/workflows/release.yaml/badge.svg?sanitize=true" alt="Release Charts" /&gt;&lt;/a&gt; &lt;a href="https://github.com/kubernetes/autoscaler/actions/workflows/ci.yaml"&gt;&lt;img src="https://github.com/kubernetes/autoscaler/actions/workflows/ci.yaml/badge.svg?sanitize=true" alt="Tests" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/k8s.io/autoscaler"&gt;&lt;img src="https://godoc.org/k8s.io/autoscaler?status.svg?sanitize=true" alt="GoDoc Widget" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains autoscaling-related components for Kubernetes.&lt;/p&gt; 
&lt;h2&gt;What's inside&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler"&gt;Cluster Autoscaler&lt;/a&gt; - a component that automatically adjusts the size of a Kubernetes Cluster so that all pods have a place to run and there are no unneeded nodes. Supports several public cloud providers. Version 1.0 (GA) was released with kubernetes 1.8.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler"&gt;Vertical Pod Autoscaler&lt;/a&gt; - a set of components that automatically adjust the amount of CPU and memory requested by pods running in the Kubernetes Cluster. Current state - beta.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/kubernetes/autoscaler/tree/master/addon-resizer"&gt;Addon Resizer&lt;/a&gt; - a simplified version of vertical pod autoscaler that modifies resource requests of a deployment based on the number of nodes in the Kubernetes Cluster. Current state - beta.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/kubernetes/autoscaler/tree/master/charts"&gt;Charts&lt;/a&gt; - Supported Helm charts for components above.&lt;/p&gt; 
&lt;h2&gt;Contact Info&lt;/h2&gt; 
&lt;p&gt;Interested in autoscaling? Want to talk? Have questions, concerns or great ideas?&lt;/p&gt; 
&lt;p&gt;Please join us on #sig-autoscaling at &lt;a href="https://kubernetes.slack.com/"&gt;https://kubernetes.slack.com/&lt;/a&gt;, or join one of our weekly meetings. See &lt;a href="https://github.com/kubernetes/community/raw/master/sig-autoscaling/README.md"&gt;the Kubernetes Community Repo&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Getting the Code&lt;/h2&gt; 
&lt;p&gt;Fork the repository in the cloud:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Visit &lt;a href="https://github.com/kubernetes/autoscaler"&gt;https://github.com/kubernetes/autoscaler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Click Fork button (top right) to establish a cloud-based fork.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The code must be checked out as a subdirectory of &lt;code&gt;k8s.io&lt;/code&gt;, and not &lt;code&gt;github.com&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;mkdir -p $GOPATH/src/k8s.io
cd $GOPATH/src/k8s.io
# Replace "$YOUR_GITHUB_USERNAME" below with your github username
git clone https://github.com/$YOUR_GITHUB_USERNAME/autoscaler.git
cd autoscaler
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please refer to Kubernetes &lt;a href="https://github.com/kubernetes/community/raw/master/contributors/guide/github-workflow.md"&gt;Github workflow guide&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>spf13/cobra</title>
      <link>https://github.com/spf13/cobra</link>
      <description>&lt;p&gt;A Commander for modern Go CLI interactions&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://cobra.dev"&gt; &lt;img width="512" height="535" alt="cobra-logo" src="https://github.com/user-attachments/assets/c8bf9aad-b5ae-41d3-8899-d83baec10af8" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;Cobra is a library for creating powerful modern CLI applications.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://cobra.dev"&gt;Visit Cobra.dev for extensive documentation&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cobra is used in many Go projects such as &lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt;, &lt;a href="https://gohugo.io"&gt;Hugo&lt;/a&gt;, and &lt;a href="https://github.com/cli/cli"&gt;GitHub CLI&lt;/a&gt; to name a few. &lt;a href="https://raw.githubusercontent.com/spf13/cobra/main/site/content/projects_using_cobra.md"&gt;This list&lt;/a&gt; contains a more extensive list of projects using Cobra.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/spf13/cobra/actions?query=workflow%3ATest"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/spf13/cobra/test.yml?branch=main&amp;amp;longCache=true&amp;amp;label=Test&amp;amp;logo=github%20actions&amp;amp;logoColor=fff" alt="" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/spf13/cobra"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/spf13/cobra.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/spf13/cobra"&gt;&lt;img src="https://goreportcard.com/badge/github.com/spf13/cobra" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://gophers.slack.com/archives/CD3LP1199"&gt;&lt;img src="https://img.shields.io/badge/Slack-cobra-brightgreen" alt="Slack" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center" markdown="1"&gt; 
 &lt;sup&gt;Supported by:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.warp.dev/cobra"&gt; &lt;img alt="Warp sponsorship" width="400" src="https://github.com/user-attachments/assets/ab8dd143-b0fd-4904-bdc5-dd7ecac94eae" /&gt; &lt;/a&gt; 
 &lt;h3&gt;&lt;a href="https://www.warp.dev/cobra"&gt;Warp, the AI terminal for devs&lt;/a&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;a href="https://www.warp.dev/cobra"&gt;Try Cobra in Warp today&lt;/a&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Overview&lt;/h1&gt; 
&lt;p&gt;Cobra is a library providing a simple interface to create powerful modern CLI interfaces similar to git &amp;amp; go tools.&lt;/p&gt; 
&lt;p&gt;Cobra provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Easy subcommand-based CLIs: &lt;code&gt;app server&lt;/code&gt;, &lt;code&gt;app fetch&lt;/code&gt;, etc.&lt;/li&gt; 
 &lt;li&gt;Fully POSIX-compliant flags (including short &amp;amp; long versions)&lt;/li&gt; 
 &lt;li&gt;Nested subcommands&lt;/li&gt; 
 &lt;li&gt;Global, local and cascading flags&lt;/li&gt; 
 &lt;li&gt;Intelligent suggestions (&lt;code&gt;app srver&lt;/code&gt;... did you mean &lt;code&gt;app server&lt;/code&gt;?)&lt;/li&gt; 
 &lt;li&gt;Automatic help generation for commands and flags&lt;/li&gt; 
 &lt;li&gt;Grouping help for subcommands&lt;/li&gt; 
 &lt;li&gt;Automatic help flag recognition of &lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;, etc.&lt;/li&gt; 
 &lt;li&gt;Automatically generated shell autocomplete for your application (bash, zsh, fish, powershell)&lt;/li&gt; 
 &lt;li&gt;Automatically generated man pages for your application&lt;/li&gt; 
 &lt;li&gt;Command aliases so you can change things without breaking them&lt;/li&gt; 
 &lt;li&gt;The flexibility to define your own help, usage, etc.&lt;/li&gt; 
 &lt;li&gt;Optional seamless integration with &lt;a href="https://github.com/spf13/viper"&gt;viper&lt;/a&gt; for 12-factor apps&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Concepts&lt;/h1&gt; 
&lt;p&gt;Cobra is built on a structure of commands, arguments &amp;amp; flags.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Commands&lt;/strong&gt; represent actions, &lt;strong&gt;Args&lt;/strong&gt; are things and &lt;strong&gt;Flags&lt;/strong&gt; are modifiers for those actions.&lt;/p&gt; 
&lt;p&gt;The best applications read like sentences when used, and as a result, users intuitively know how to interact with them.&lt;/p&gt; 
&lt;p&gt;The pattern to follow is &lt;code&gt;APPNAME VERB NOUN --ADJECTIVE&lt;/code&gt; or &lt;code&gt;APPNAME COMMAND ARG --FLAG&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A few good real world examples may better illustrate this point.&lt;/p&gt; 
&lt;p&gt;In the following example, 'server' is a command, and 'port' is a flag:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;hugo server --port=1313
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In this command we are telling Git to clone the url bare.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone URL --bare
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Commands&lt;/h2&gt; 
&lt;p&gt;Command is the central point of the application. Each interaction that the application supports will be contained in a Command. A command can have children commands and optionally run an action.&lt;/p&gt; 
&lt;p&gt;In the example above, 'server' is the command.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/spf13/cobra#Command"&gt;More about cobra.Command&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Flags&lt;/h2&gt; 
&lt;p&gt;A flag is a way to modify the behavior of a command. Cobra supports fully POSIX-compliant flags as well as the Go &lt;a href="https://golang.org/pkg/flag/"&gt;flag package&lt;/a&gt;. A Cobra command can define flags that persist through to children commands and flags that are only available to that command.&lt;/p&gt; 
&lt;p&gt;In the example above, 'port' is the flag.&lt;/p&gt; 
&lt;p&gt;Flag functionality is provided by the &lt;a href="https://github.com/spf13/pflag"&gt;pflag library&lt;/a&gt;, a fork of the flag standard library which maintains the same interface while adding POSIX compliance.&lt;/p&gt; 
&lt;h1&gt;Installing&lt;/h1&gt; 
&lt;p&gt;Using Cobra is easy. First, use &lt;code&gt;go get&lt;/code&gt; to install the latest version of the library.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go get -u github.com/spf13/cobra@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, include Cobra in your application:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "github.com/spf13/cobra"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;cobra-cli&lt;/code&gt; is a command line program to generate cobra applications and command files. It will bootstrap your application scaffolding to rapidly develop a Cobra-based application. It is the easiest way to incorporate Cobra into your application.&lt;/p&gt; 
&lt;p&gt;It can be installed by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install github.com/spf13/cobra-cli@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For complete details on using the Cobra-CLI generator, please read &lt;a href="https://github.com/spf13/cobra-cli/raw/main/README.md"&gt;The Cobra Generator README&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For complete details on using the Cobra library, please read &lt;a href="https://raw.githubusercontent.com/spf13/cobra/main/site/content/user_guide.md"&gt;The Cobra User Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Cobra is released under the Apache 2.0 license. See &lt;a href="https://raw.githubusercontent.com/spf13/cobra/main/LICENSE.txt"&gt;LICENSE.txt&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hashicorp/consul</title>
      <link>https://github.com/hashicorp/consul</link>
      <description>&lt;p&gt;Consul is a distributed, highly available, and data center aware solution to connect and configure applications across dynamic, distributed infrastructure.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; &lt;img src="https://raw.githubusercontent.com/hashicorp/consul/main/website/public/img/logo.svg?sanitize=true" align="left" height="46px" alt="Consul logo" /&gt; &lt;span&gt;Consul&lt;/span&gt; &lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/hashicorp/consul/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-BUSL--1.1-yellow.svg?sanitize=true" alt="License: BUSL-1.1" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/hashicorp/consul"&gt;&lt;img src="https://img.shields.io/docker/pulls/hashicorp/consul.svg?sanitize=true" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/hashicorp/consul"&gt;&lt;img src="https://goreportcard.com/badge/github.com/hashicorp/consul" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Consul is a distributed, highly available, and data center aware solution to connect and configure applications across dynamic, distributed infrastructure.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation and Tutorials: [https://developer.hashicorp.com/consul]&lt;/li&gt; 
 &lt;li&gt;Forum: &lt;a href="https://discuss.hashicorp.com/c/consul"&gt;Discuss&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Consul provides several key features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multi-Datacenter&lt;/strong&gt; - Consul is built to be datacenter aware, and can support any number of regions without complex configuration.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Service Mesh&lt;/strong&gt; - Consul Service Mesh enables secure service-to-service communication with automatic TLS encryption and identity-based authorization. Applications can use sidecar proxies in a service mesh configuration to establish TLS connections for inbound and outbound connections with Transparent Proxy.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;API Gateway&lt;/strong&gt; - Consul API Gateway manages access to services within Consul Service Mesh, allow users to define traffic and authorization policies to services deployed within the mesh.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Service Discovery&lt;/strong&gt; - Consul makes it simple for services to register themselves and to discover other services via a DNS or HTTP interface. External services such as SaaS providers can be registered as well.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Health Checking&lt;/strong&gt; - Health Checking enables Consul to quickly alert operators about any issues in a cluster. The integration with service discovery prevents routing traffic to unhealthy hosts and enables service level circuit breakers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dynamic App Configuration&lt;/strong&gt; - An HTTP API that allows users to store indexed objects within Consul, for storing configuration parameters and application metadata.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Consul runs on Linux, macOS, FreeBSD, Solaris, and Windows and includes an optional &lt;a href="https://demo.consul.io"&gt;browser based UI&lt;/a&gt;. A commercial version called &lt;a href="https://developer.hashicorp.com/docs/enterprise"&gt;Consul Enterprise&lt;/a&gt; is also available.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;: We take Consul's security and our users' trust very seriously. If you believe you have found a security issue in Consul, please &lt;a href="https://www.hashicorp.com/security#vulnerability-reporting"&gt;responsibly disclose&lt;/a&gt; by contacting us at &lt;a href="mailto:security@hashicorp.com"&gt;security@hashicorp.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;A few quick start guides are available on the Consul website:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Standalone binary install:&lt;/strong&gt; &lt;a href="https://learn.hashicorp.com/collections/consul/get-started-vms"&gt;https://learn.hashicorp.com/collections/consul/get-started-vms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Minikube install:&lt;/strong&gt; &lt;a href="https://learn.hashicorp.com/tutorials/consul/kubernetes-minikube"&gt;https://learn.hashicorp.com/tutorials/consul/kubernetes-minikube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kind install:&lt;/strong&gt; &lt;a href="https://learn.hashicorp.com/tutorials/consul/kubernetes-kind"&gt;https://learn.hashicorp.com/tutorials/consul/kubernetes-kind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kubernetes install:&lt;/strong&gt; &lt;a href="https://learn.hashicorp.com/tutorials/consul/kubernetes-deployment-guide"&gt;https://learn.hashicorp.com/tutorials/consul/kubernetes-deployment-guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Deploy HCP Consul:&lt;/strong&gt; &lt;a href="https://learn.hashicorp.com/tutorials/consul/hcp-gs-deploy"&gt;https://learn.hashicorp.com/tutorials/consul/hcp-gs-deploy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Full, comprehensive documentation is available on the Consul website: &lt;a href="https://developer.hashicorp.com/consul/docs"&gt;https://developer.hashicorp.com/consul/docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Thank you for your interest in contributing! Please refer to &lt;a href="https://github.com/hashicorp/consul/raw/main/.github/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for guidance. For contributions specifically to the browser based UI, please refer to the UI's &lt;a href="https://github.com/hashicorp/consul/raw/main/ui/packages/consul-ui/README.md"&gt;README.md&lt;/a&gt; for guidance.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>everywall/ladder</title>
      <link>https://github.com/everywall/ladder</link>
      <description>&lt;p&gt;Selfhosted alternative to 12ft.io. and 1ft.io bypass paywalls with a proxy ladder and remove CORS headers from any URL&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/everywall/ladder/main/assets/pigeon.svg?sanitize=true" width="100px" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Ladder&lt;/h1&gt; 
&lt;div&gt;
 &lt;img alt="License" src="https://img.shields.io/github/license/everywall/ladder" /&gt; 
 &lt;img alt="go.mod Go version " src="https://img.shields.io/github/go-mod/go-version/everywall/ladder" /&gt; 
 &lt;img alt="GitHub tag (with filter)" src="https://img.shields.io/github/v/tag/everywall/ladder" /&gt; 
 &lt;img alt="GitHub (Pre-)Release Date" src="https://img.shields.io/github/release-date-pre/everywall/ladder" /&gt; 
 &lt;img alt="GitHub Downloads all releases" src="https://img.shields.io/github/downloads/everywall/ladder/total" /&gt; 
 &lt;img alt="GitHub Build Status (with event)" src="https://img.shields.io/github/actions/workflow/status/everywall/ladder/release-binaries.yaml" /&gt;
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;Ladder is a http web proxy.&lt;/em&gt; This is a selfhosted version of &lt;a href="https://1ft.io"&gt;1ft.io&lt;/a&gt; and &lt;a href="https://12ft.io"&gt;12ft.io&lt;/a&gt;. It is inspired by &lt;a href="https://github.com/wasi-master/13ft"&gt;13ft&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Why&lt;/h3&gt; 
&lt;p&gt;Freedom of information is an essential pillar of democracy and informed decision-making. While media organizations have legitimate financial interests, it is crucial to strike a balance between profitability and the public's right to access information. The proliferation of paywalls raises concerns about the erosion of this fundamental freedom, and it is imperative for society to find innovative ways to preserve access to vital information without compromising the sustainability of journalism. In a world where knowledge should be shared and not commodified, paywalls should be critically examined to ensure that they do not undermine the principles of an open and informed society.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This project is intended for educational purposes only. The author does not endorse or encourage any unethical or illegal activity. Use this tool at your own risk.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;How it works&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;sequenceDiagram
    client-&amp;gt;&amp;gt;+ladder: GET
    ladder--&amp;gt;&amp;gt;ladder: apply RequestModifications
    ladder-&amp;gt;&amp;gt;+website: GET
    website-&amp;gt;&amp;gt;-ladder: 200 OK
    ladder--&amp;gt;&amp;gt;ladder: apply ResultModifications
    ladder-&amp;gt;&amp;gt;-client: 200 OK
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Bypass Paywalls&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Remove CORS headers from responses, assets, and images ...&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Apply domain based ruleset/code to modify response / requested URL&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Keep site browsable&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; API&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Fetch RAW HTML&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Custom User Agent&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Custom X-Forwarded-For IP&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/everywall/ladder/pkgs/container/ladder"&gt;Docker container&lt;/a&gt; (amd64, arm64)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Linux binary&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Mac OS binary&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Windows binary (untested)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Removes most of the ads (unexpected side effect ¯\_(ツ)_/¯ )&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Basic Auth&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Disable logs&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; No Tracking&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Limit the proxy to a list of domains&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Expose Ruleset to other ladders&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Fetch from Google Cache&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Optional TOR proxy&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; A key to share only one URL&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Limitations&lt;/h3&gt; 
&lt;p&gt;Some sites do not expose their content to search engines, which means that the proxy cannot access the content. A future version will try to fetch the content from Google Cache.&lt;/p&gt; 
&lt;p&gt;Certain sites may display missing images or encounter formatting issues. This can be attributed to the site's reliance on JavaScript or CSS for image and resource loading, which presents a limitation when accessed through this proxy. If you prefer a full experience, please consider buying a subscription for the site.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; If your instance will be publicly accessible, make sure to enable Basic Auth. This will prevent unauthorized users from using your proxy. If you do not enable Basic Auth, anyone can use your proxy to browse nasty/illegal stuff. And you will be responsible for it.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Binary&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download binary &lt;a href="https://github.com/everywall/ladder/releases/latest"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Unpack and run the binary &lt;code&gt;./ladder -r https://t.ly/14PSf&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Open Browser (Default: &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -p 8080:8080 -d --env RULESET=https://t.ly/14PSf --name ladder ghcr.io/everywall/ladder:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker Compose&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl https://raw.githubusercontent.com/everywall/ladder/main/docker-compose.yaml --output docker-compose.yaml
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Helm&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/everywall/ladder/main/helm-chart/README.md"&gt;README.md&lt;/a&gt; in helm-chart sub-directory for more information.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Browser&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Browser (Default: &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Enter URL&lt;/li&gt; 
 &lt;li&gt;Press Enter&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Or direct by appending the URL to the end of the proxy URL: &lt;a href="http://localhost:8080/https://www.example.com"&gt;http://localhost:8080/https://www.example.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Or create a bookmark with the following URL:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;javascript:window.location.href="http://localhost:8080/"+location.href
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;API&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -X GET "http://localhost:8080/api/https://www.example.com"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;RAW&lt;/h3&gt; 
&lt;p&gt;&lt;a href="http://localhost:8080/raw/https://www.example.com"&gt;http://localhost:8080/raw/https://www.example.com&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Running Ruleset&lt;/h3&gt; 
&lt;p&gt;&lt;a href="http://localhost:8080/ruleset"&gt;http://localhost:8080/ruleset&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;h3&gt;Environment Variables&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Port to listen on&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;8080&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;PREFORK&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Spawn multiple server instances&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;USER_AGENT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;User agent to emulate&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;X_FORWARDED_FOR&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;IP forwarder address&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;66.249.66.1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;USERPASS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enables Basic Auth, format &lt;code&gt;admin:123456&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;``&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;LOG_URLS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Log fetched URL's&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;DISABLE_FORM&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables URL Form Frontpage&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;FORM_PATH&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Path to custom Form HTML&lt;/td&gt; 
   &lt;td&gt;``&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;RULESET&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Path or URL to a ruleset file, accepts local directories&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;https://raw.githubusercontent.com/everywall/ladder-rules/main/ruleset.yaml&lt;/code&gt; or &lt;code&gt;/path/to/my/rules.yaml&lt;/code&gt; or &lt;code&gt;/path/to/my/rules/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;EXPOSE_RULESET&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Make your Ruleset available to other ladders&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ALLOWED_DOMAINS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Comma separated list of allowed domains. Empty = no limitations&lt;/td&gt; 
   &lt;td&gt;``&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ALLOWED_DOMAINS_RULESET&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Allow Domains from Ruleset. false = no limitations&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;code&gt;ALLOWED_DOMAINS&lt;/code&gt; and &lt;code&gt;ALLOWED_DOMAINS_RULESET&lt;/code&gt; are joined together. If both are empty, no limitations are applied.&lt;/p&gt; 
&lt;h3&gt;Ruleset&lt;/h3&gt; 
&lt;p&gt;It is possible to apply custom rules to modify the response or the requested URL. This can be used to remove unwanted or modify elements from the page. The ruleset is a YAML file, a directory with YAML Files, or an URL to a YAML file that contains a list of rules for each domain. These rules are loaded on startup.&lt;/p&gt; 
&lt;p&gt;There is a basic ruleset available in a separate repository &lt;a href="https://raw.githubusercontent.com/everywall/ladder-rules/main/ruleset.yaml"&gt;ruleset.yaml&lt;/a&gt;. Feel free to add your own rules and create a pull request.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- domain: example.com          # Includes all subdomains
  domains:                     # Additional domains to apply the rule
    - www.example.de
    - www.beispiel.de
  headers:
    x-forwarded-for: none      # override X-Forwarded-For header or delete with none
    referer: none              # override Referer header or delete with none
    user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
    content-security-policy: script-src 'self'; # override response header
    cookie: privacy=1
  regexRules:
    - match: &amp;lt;script\s+([^&amp;gt;]*\s+)?src="(/)([^"]*)"
      replace: &amp;lt;script $1 script="/https://www.example.com/$3"
  injections:
    - position: head # Position where to inject the code
      append: |      # possible keys: append, prepend, replace
        &amp;lt;script&amp;gt;
          window.localStorage.clear();
          console.log("test");
          alert("Hello!");
        &amp;lt;/script&amp;gt;
- domain: www.anotherdomain.com # Domain where the rule applies
  paths:                        # Paths where the rule applies
    - /article
  googleCache: false            # Use Google Cache to fetch the content
  regexRules:                   # Regex rules to apply
    - match: &amp;lt;script\s+([^&amp;gt;]*\s+)?src="(/)([^"]*)"
      replace: &amp;lt;script $1 script="/https://www.example.com/$3"
  injections:
    - position: .left-content article .post-title # Position where to inject the code into DOM
      replace: | 
        &amp;lt;h1&amp;gt;My Custom Title&amp;lt;/h1&amp;gt;
    - position: .left-content article # Position where to inject the code into DOM
      prepend: | 
        &amp;lt;h2&amp;gt;Subtitle&amp;lt;/h2&amp;gt;
- domain: demo.com
  headers:
    content-security-policy: script-src 'self';
    user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36
  urlMods:              # Modify the URL
    query:              
      - key: amp        # (this will append ?amp=1 to the URL)
        value: 1 
    domain:             
      - match: www      # regex to match part of domain
        replace: amp    # (this would modify the domain from www.demo.de to amp.demo.de)
    path:               
      - match: ^        # regex to match part of path
        replace: /amp/  # (modify the url from https://www.demo.com/article/ to https://www.demo.de/amp/article/)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;To run a development server at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;echo "dev" &amp;gt; handlers/VERSION
RULESET="./ruleset.yaml" go run cmd/main.go
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Optional: Live reloading development server with &lt;a href="https://github.com/cosmtrek/air"&gt;cosmtrek/air&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Install air according to the &lt;a href="https://github.com/cosmtrek/air#installation"&gt;installation instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Run a development server at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;air # or the path to air if you haven't added a path alias to your .bashrc or .zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This project uses &lt;a href="https://pnpm.io/"&gt;pnpm&lt;/a&gt; to build a stylesheet with the &lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt; classes. For local development, if you modify styles in &lt;code&gt;form.html&lt;/code&gt;, run &lt;code&gt;pnpm build&lt;/code&gt; to generate a new stylesheet.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>projectdiscovery/subfinder</title>
      <link>https://github.com/projectdiscovery/subfinder</link>
      <description>&lt;p&gt;Fast passive subdomain enumeration tool.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img src="https://raw.githubusercontent.com/projectdiscovery/subfinder/dev/static/subfinder-logo.png" alt="subfinder" width="200px" /&gt; &lt;br /&gt; &lt;/h1&gt; 
&lt;h4 align="center"&gt;Fast passive subdomain enumeration tool.&lt;/h4&gt; 
&lt;p align="center"&gt; &lt;a href="https://goreportcard.com/report/github.com/projectdiscovery/subfinder/v2"&gt;&lt;img src="https://goreportcard.com/badge/github.com/projectdiscovery/subfinder" /&gt;&lt;/a&gt; &lt;a href="https://github.com/projectdiscovery/subfinder/issues"&gt;&lt;img src="https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat" /&gt;&lt;/a&gt; &lt;a href="https://github.com/projectdiscovery/subfinder/releases"&gt;&lt;img src="https://img.shields.io/github/release/projectdiscovery/subfinder" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/pdiscoveryio"&gt;&lt;img src="https://img.shields.io/twitter/follow/pdiscoveryio.svg?logo=twitter" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/projectdiscovery"&gt;&lt;img src="https://img.shields.io/discord/695645237418131507.svg?logo=discord" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/projectdiscovery/subfinder/dev/#features"&gt;Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/projectdiscovery/subfinder/dev/#installation"&gt;Install&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/projectdiscovery/subfinder/dev/#running-subfinder"&gt;Usage&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/projectdiscovery/subfinder/dev/#post-installation-instructions"&gt;API Setup&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/projectdiscovery/subfinder/dev/#subfinder-go-library"&gt;Library&lt;/a&gt; • &lt;a href="https://discord.gg/projectdiscovery"&gt;Join Discord&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;code&gt;subfinder&lt;/code&gt; is a subdomain discovery tool that returns valid subdomains for websites, using passive online sources. It has a simple, modular architecture and is optimized for speed. &lt;code&gt;subfinder&lt;/code&gt; is built for doing one thing only - passive subdomain enumeration, and it does that very well.&lt;/p&gt; 
&lt;p&gt;We have made it to comply with all the used passive source licenses and usage restrictions. The passive model guarantees speed and stealthiness that can be leveraged by both penetration testers and bug bounty hunters alike.&lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;h1 align="left"&gt; &lt;img src="https://raw.githubusercontent.com/projectdiscovery/subfinder/dev/static/subfinder-run.png" alt="subfinder" width="700px" /&gt; &lt;br /&gt; &lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fast and powerful resolution and wildcard elimination modules&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Curated&lt;/strong&gt; passive sources to maximize results&lt;/li&gt; 
 &lt;li&gt;Multiple output formats supported (JSON, file, stdout)&lt;/li&gt; 
 &lt;li&gt;Optimized for speed and &lt;strong&gt;lightweight&lt;/strong&gt; on resources&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;STDIN/OUT&lt;/strong&gt; support enables easy integration into workflows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;subfinder -h
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will display help for the tool. Here are all the switches it supports.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;Usage:
  ./subfinder [flags]

Flags:
INPUT:
  -d, -domain string[]  domains to find subdomains for
  -dL, -list string     file containing list of domains for subdomain discovery

SOURCE:
  -s, -sources string[]           specific sources to use for discovery (-s crtsh,github). Use -ls to display all available sources.
  -recursive                      use only sources that can handle subdomains recursively (e.g. subdomain.domain.tld vs domain.tld)
  -all                            use all sources for enumeration (slow)
  -es, -exclude-sources string[]  sources to exclude from enumeration (-es alienvault,zoomeyeapi)

FILTER:
  -m, -match string[]   subdomain or list of subdomain to match (file or comma separated)
  -f, -filter string[]   subdomain or list of subdomain to filter (file or comma separated)

RATE-LIMIT:
  -rl, -rate-limit int  maximum number of http requests to send per second
  -rls value            maximum number of http requests to send per second for providers in key=value format (-rls "hackertarget=10/s,shodan=15/s")
  -t int                number of concurrent goroutines for resolving (-active only) (default 10)

UPDATE:
  -up, -update                 update subfinder to latest version
  -duc, -disable-update-check  disable automatic subfinder update check

OUTPUT:
  -o, -output string       file to write output to
  -oJ, -json               write output in JSONL(ines) format
  -oD, -output-dir string  directory to write output (-dL only)
  -cs, -collect-sources    include all sources in the output (-json only)
  -oI, -ip                 include host IP in output (-active only)

CONFIGURATION:
  -config string                flag config file (default "$CONFIG/subfinder/config.yaml")
  -pc, -provider-config string  provider config file (default "$CONFIG/subfinder/provider-config.yaml")
  -r string[]                   comma separated list of resolvers to use
  -rL, -rlist string            file containing list of resolvers to use
  -nW, -active                  display active subdomains only
  -proxy string                 http proxy to use with subfinder
  -ei, -exclude-ip              exclude IPs from the list of domains

DEBUG:
  -silent             show only subdomains in output
  -version            show version of subfinder
  -v                  show verbose output
  -nc, -no-color      disable color in output
  -ls, -list-sources  list all available sources

OPTIMIZATION:
  -timeout int   seconds to wait before timing out (default 30)
  -max-time int  minutes to wait for enumeration results (default 10)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;subfinder&lt;/code&gt; requires &lt;strong&gt;go1.24&lt;/strong&gt; to install successfully. Run the following command to install the latest version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Learn about more ways to install subfinder here: &lt;a href="https://docs.projectdiscovery.io/tools/subfinder/install"&gt;https://docs.projectdiscovery.io/tools/subfinder/install&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Post Installation Instructions&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;subfinder&lt;/code&gt; can be used right after the installation, however many sources required API keys to work. Learn more here: &lt;a href="https://docs.projectdiscovery.io/tools/subfinder/install#post-install-configuration"&gt;https://docs.projectdiscovery.io/tools/subfinder/install#post-install-configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Running Subfinder&lt;/h2&gt; 
&lt;p&gt;Learn about how to run Subfinder here: &lt;a href="https://docs.projectdiscovery.io/tools/subfinder/running"&gt;https://docs.projectdiscovery.io/tools/subfinder/running&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Subfinder Go library&lt;/h2&gt; 
&lt;p&gt;Subfinder can also be used as library and a minimal examples of using subfinder SDK is available &lt;a href="https://raw.githubusercontent.com/projectdiscovery/subfinder/dev/examples/main.go"&gt;here&lt;/a&gt;&lt;/p&gt;    
&lt;h3&gt;Resources&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dhiyaneshgeek.github.io/bug/bounty/2020/02/06/recon-with-me/"&gt;Recon with Me !!!&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;subfinder&lt;/code&gt; is made with 🖤 by the &lt;a href="https://projectdiscovery.io"&gt;projectdiscovery&lt;/a&gt; team. Community contributions have made the project what it is. See the &lt;strong&gt;&lt;a href="https://github.com/projectdiscovery/subfinder/raw/main/THANKS.md"&gt;THANKS.md&lt;/a&gt;&lt;/strong&gt; file for more details.&lt;/p&gt; 
&lt;p&gt;Read the usage disclaimer at &lt;a href="https://github.com/projectdiscovery/subfinder/raw/main/DISCLAIMER.md"&gt;DISCLAIMER.md&lt;/a&gt; and &lt;a href="mailto:contact@projectdiscovery.io"&gt;contact us&lt;/a&gt; for any API removal.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ethereum/go-ethereum</title>
      <link>https://github.com/ethereum/go-ethereum</link>
      <description>&lt;p&gt;Go implementation of the Ethereum protocol&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Go Ethereum&lt;/h2&gt; 
&lt;p&gt;Golang execution layer implementation of the Ethereum protocol.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/ethereum/go-ethereum?tab=doc"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/ethereum/go-ethereum" alt="API Reference" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/ethereum/go-ethereum"&gt;&lt;img src="https://goreportcard.com/badge/github.com/ethereum/go-ethereum" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://app.travis-ci.com/github/ethereum/go-ethereum"&gt;&lt;img src="https://app.travis-ci.com/ethereum/go-ethereum.svg?branch=master" alt="Travis" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/nthXNEv"&gt;&lt;img src="https://img.shields.io/badge/discord-join%20chat-blue.svg?sanitize=true" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://x.com/go_ethereum"&gt;&lt;img src="https://img.shields.io/twitter/follow/go_ethereum" alt="Twitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Automated builds are available for stable releases and the unstable master branch. Binary archives are published at &lt;a href="https://geth.ethereum.org/downloads/"&gt;https://geth.ethereum.org/downloads/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building the source&lt;/h2&gt; 
&lt;p&gt;For prerequisites and detailed build instructions please read the &lt;a href="https://geth.ethereum.org/docs/getting-started/installing-geth"&gt;Installation Instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Building &lt;code&gt;geth&lt;/code&gt; requires both a Go (version 1.23 or later) and a C compiler. You can install them using your favourite package manager. Once the dependencies are installed, run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make geth
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or, to build the full suite of utilities:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Executables&lt;/h2&gt; 
&lt;p&gt;The go-ethereum project comes with several wrappers/executables found in the &lt;code&gt;cmd&lt;/code&gt; directory.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;&lt;code&gt;geth&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Our main Ethereum CLI client. It is the entry point into the Ethereum network (main-, test- or private net), capable of running as a full node (default), archive node (retaining all historical state) or a light node (retrieving data live). It can be used by other processes as a gateway into the Ethereum network via JSON RPC endpoints exposed on top of HTTP, WebSocket and/or IPC transports. &lt;code&gt;geth --help&lt;/code&gt; and the &lt;a href="https://geth.ethereum.org/docs/fundamentals/command-line-options"&gt;CLI page&lt;/a&gt; for command line options.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;clef&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Stand-alone signing tool, which can be used as a backend signer for &lt;code&gt;geth&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;devp2p&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Utilities to interact with nodes on the networking layer, without running a full blockchain.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;abigen&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Source code generator to convert Ethereum contract definitions into easy-to-use, compile-time type-safe Go packages. It operates on plain &lt;a href="https://docs.soliditylang.org/en/develop/abi-spec.html"&gt;Ethereum contract ABIs&lt;/a&gt; with expanded functionality if the contract bytecode is also available. However, it also accepts Solidity source files, making development much more streamlined. Please see our &lt;a href="https://geth.ethereum.org/docs/developers/dapp-developer/native-bindings"&gt;Native DApps&lt;/a&gt; page for details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;evm&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Developer utility version of the EVM (Ethereum Virtual Machine) that is capable of running bytecode snippets within a configurable environment and execution mode. Its purpose is to allow isolated, fine-grained debugging of EVM opcodes (e.g. &lt;code&gt;evm --code 60ff60ff --debug run&lt;/code&gt;).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;code&gt;rlpdump&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Developer utility tool to convert binary RLP (&lt;a href="https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp"&gt;Recursive Length Prefix&lt;/a&gt;) dumps (data encoding used by the Ethereum protocol both network as well as consensus wise) to user-friendlier hierarchical representation (e.g. &lt;code&gt;rlpdump --hex CE0183FFFFFFC4C304050583616263&lt;/code&gt;).&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Running &lt;code&gt;geth&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Going through all the possible command line flags is out of scope here (please consult our &lt;a href="https://geth.ethereum.org/docs/fundamentals/command-line-options"&gt;CLI Wiki page&lt;/a&gt;), but we've enumerated a few common parameter combos to get you up to speed quickly on how you can run your own &lt;code&gt;geth&lt;/code&gt; instance.&lt;/p&gt; 
&lt;h3&gt;Hardware Requirements&lt;/h3&gt; 
&lt;p&gt;Minimum:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CPU with 4+ cores&lt;/li&gt; 
 &lt;li&gt;8GB RAM&lt;/li&gt; 
 &lt;li&gt;1TB free storage space to sync the Mainnet&lt;/li&gt; 
 &lt;li&gt;8 MBit/sec download Internet service&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Recommended:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fast CPU with 8+ cores&lt;/li&gt; 
 &lt;li&gt;16GB+ RAM&lt;/li&gt; 
 &lt;li&gt;High-performance SSD with at least 1TB of free space&lt;/li&gt; 
 &lt;li&gt;25+ MBit/sec download Internet service&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Full node on the main Ethereum network&lt;/h3&gt; 
&lt;p&gt;By far the most common scenario is people wanting to simply interact with the Ethereum network: create accounts; transfer funds; deploy and interact with contracts. For this particular use case, the user doesn't care about years-old historical data, so we can sync quickly to the current state of the network. To do so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ geth console
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Start &lt;code&gt;geth&lt;/code&gt; in snap sync mode (default, can be changed with the &lt;code&gt;--syncmode&lt;/code&gt; flag), causing it to download more data in exchange for avoiding processing the entire history of the Ethereum network, which is very CPU intensive.&lt;/li&gt; 
 &lt;li&gt;Start the built-in interactive &lt;a href="https://geth.ethereum.org/docs/interacting-with-geth/javascript-console"&gt;JavaScript console&lt;/a&gt;, (via the trailing &lt;code&gt;console&lt;/code&gt; subcommand) through which you can interact using &lt;a href="https://github.com/ChainSafe/web3.js/raw/0.20.7/DOCUMENTATION.md"&gt;&lt;code&gt;web3&lt;/code&gt; methods&lt;/a&gt; (note: the &lt;code&gt;web3&lt;/code&gt; version bundled within &lt;code&gt;geth&lt;/code&gt; is very old, and not up to date with official docs), as well as &lt;code&gt;geth&lt;/code&gt;'s own &lt;a href="https://geth.ethereum.org/docs/interacting-with-geth/rpc"&gt;management APIs&lt;/a&gt;. This tool is optional and if you leave it out you can always attach it to an already running &lt;code&gt;geth&lt;/code&gt; instance with &lt;code&gt;geth attach&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;A Full node on the Holesky test network&lt;/h3&gt; 
&lt;p&gt;Transitioning towards developers, if you'd like to play around with creating Ethereum contracts, you almost certainly would like to do that without any real money involved until you get the hang of the entire system. In other words, instead of attaching to the main network, you want to join the &lt;strong&gt;test&lt;/strong&gt; network with your node, which is fully equivalent to the main network, but with play-Ether only.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ geth --holesky console
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;console&lt;/code&gt; subcommand has the same meaning as above and is equally useful on the testnet too.&lt;/p&gt; 
&lt;p&gt;Specifying the &lt;code&gt;--holesky&lt;/code&gt; flag, however, will reconfigure your &lt;code&gt;geth&lt;/code&gt; instance a bit:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Instead of connecting to the main Ethereum network, the client will connect to the Holesky test network, which uses different P2P bootnodes, different network IDs and genesis states.&lt;/li&gt; 
 &lt;li&gt;Instead of using the default data directory (&lt;code&gt;~/.ethereum&lt;/code&gt; on Linux for example), &lt;code&gt;geth&lt;/code&gt; will nest itself one level deeper into a &lt;code&gt;holesky&lt;/code&gt; subfolder (&lt;code&gt;~/.ethereum/holesky&lt;/code&gt; on Linux). Note, on OSX and Linux this also means that attaching to a running testnet node requires the use of a custom endpoint since &lt;code&gt;geth attach&lt;/code&gt; will try to attach to a production node endpoint by default, e.g., &lt;code&gt;geth attach &amp;lt;datadir&amp;gt;/holesky/geth.ipc&lt;/code&gt;. Windows users are not affected by this.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Note: Although some internal protective measures prevent transactions from crossing over between the main network and test network, you should always use separate accounts for play and real money. Unless you manually move accounts, &lt;code&gt;geth&lt;/code&gt; will by default correctly separate the two networks and will not make any accounts available between them.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;As an alternative to passing the numerous flags to the &lt;code&gt;geth&lt;/code&gt; binary, you can also pass a configuration file via:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ geth --config /path/to/your_config.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get an idea of how the file should look like you can use the &lt;code&gt;dumpconfig&lt;/code&gt; subcommand to export your existing configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ geth --your-favourite-flags dumpconfig
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Docker quick start&lt;/h4&gt; 
&lt;p&gt;One of the quickest ways to get Ethereum up and running on your machine is by using Docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run -d --name ethereum-node -v /Users/alice/ethereum:/root \
           -p 8545:8545 -p 30303:30303 \
           ethereum/client-go
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will start &lt;code&gt;geth&lt;/code&gt; in snap-sync mode with a DB memory allowance of 1GB, as the above command does. It will also create a persistent volume in your home directory for saving your blockchain as well as map the default ports. There is also an &lt;code&gt;alpine&lt;/code&gt; tag available for a slim version of the image.&lt;/p&gt; 
&lt;p&gt;Do not forget &lt;code&gt;--http.addr 0.0.0.0&lt;/code&gt;, if you want to access RPC from other containers and/or hosts. By default, &lt;code&gt;geth&lt;/code&gt; binds to the local interface and RPC endpoints are not accessible from the outside.&lt;/p&gt; 
&lt;h3&gt;Programmatically interfacing &lt;code&gt;geth&lt;/code&gt; nodes&lt;/h3&gt; 
&lt;p&gt;As a developer, sooner rather than later you'll want to start interacting with &lt;code&gt;geth&lt;/code&gt; and the Ethereum network via your own programs and not manually through the console. To aid this, &lt;code&gt;geth&lt;/code&gt; has built-in support for a JSON-RPC based APIs (&lt;a href="https://ethereum.org/en/developers/docs/apis/json-rpc/"&gt;standard APIs&lt;/a&gt; and &lt;a href="https://geth.ethereum.org/docs/interacting-with-geth/rpc"&gt;&lt;code&gt;geth&lt;/code&gt; specific APIs&lt;/a&gt;). These can be exposed via HTTP, WebSockets and IPC (UNIX sockets on UNIX based platforms, and named pipes on Windows).&lt;/p&gt; 
&lt;p&gt;The IPC interface is enabled by default and exposes all the APIs supported by &lt;code&gt;geth&lt;/code&gt;, whereas the HTTP and WS interfaces need to manually be enabled and only expose a subset of APIs due to security reasons. These can be turned on/off and configured as you'd expect.&lt;/p&gt; 
&lt;p&gt;HTTP based JSON-RPC API options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--http&lt;/code&gt; Enable the HTTP-RPC server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--http.addr&lt;/code&gt; HTTP-RPC server listening interface (default: &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--http.port&lt;/code&gt; HTTP-RPC server listening port (default: &lt;code&gt;8545&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--http.api&lt;/code&gt; API's offered over the HTTP-RPC interface (default: &lt;code&gt;eth,net,web3&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--http.corsdomain&lt;/code&gt; Comma separated list of domains from which to accept cross-origin requests (browser enforced)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws&lt;/code&gt; Enable the WS-RPC server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws.addr&lt;/code&gt; WS-RPC server listening interface (default: &lt;code&gt;localhost&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws.port&lt;/code&gt; WS-RPC server listening port (default: &lt;code&gt;8546&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws.api&lt;/code&gt; API's offered over the WS-RPC interface (default: &lt;code&gt;eth,net,web3&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ws.origins&lt;/code&gt; Origins from which to accept WebSocket requests&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ipcdisable&lt;/code&gt; Disable the IPC-RPC server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ipcpath&lt;/code&gt; Filename for IPC socket/pipe within the datadir (explicit paths escape it)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You'll need to use your own programming environments' capabilities (libraries, tools, etc) to connect via HTTP, WS or IPC to a &lt;code&gt;geth&lt;/code&gt; node configured with the above flags and you'll need to speak &lt;a href="https://www.jsonrpc.org/specification"&gt;JSON-RPC&lt;/a&gt; on all transports. You can reuse the same connection for multiple requests!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note: Please understand the security implications of opening up an HTTP/WS based transport before doing so! Hackers on the internet are actively trying to subvert Ethereum nodes with exposed APIs! Further, all browser tabs can access locally running web servers, so malicious web pages could try to subvert locally available APIs!&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Operating a private network&lt;/h3&gt; 
&lt;p&gt;Maintaining your own private network is more involved as a lot of configurations taken for granted in the official networks need to be manually set up.&lt;/p&gt; 
&lt;p&gt;Unfortunately since &lt;a href="https://ethereum.org/en/roadmap/merge/"&gt;the Merge&lt;/a&gt; it is no longer possible to easily set up a network of geth nodes without also setting up a corresponding beacon chain.&lt;/p&gt; 
&lt;p&gt;There are three different solutions depending on your use case:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you are looking for a simple way to test smart contracts from go in your CI, you can use the &lt;a href="https://geth.ethereum.org/docs/developers/dapp-developer/native-bindings#blockchain-simulator"&gt;Simulated Backend&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you want a convenient single node environment for testing, you can use our &lt;a href="https://geth.ethereum.org/docs/developers/dapp-developer/dev-mode"&gt;Dev Mode&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you are looking for a multiple node test network, you can set one up quite easily with &lt;a href="https://geth.ethereum.org/docs/fundamentals/kurtosis"&gt;Kurtosis&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Thank you for considering helping out with the source code! We welcome contributions from anyone on the internet, and are grateful for even the smallest of fixes!&lt;/p&gt; 
&lt;p&gt;If you'd like to contribute to go-ethereum, please fork, fix, commit and send a pull request for the maintainers to review and merge into the main code base. If you wish to submit more complex changes though, please check up with the core devs first on &lt;a href="https://discord.gg/invite/nthXNEv"&gt;our Discord Server&lt;/a&gt; to ensure those changes are in line with the general philosophy of the project and/or get some early feedback which can make both your efforts much lighter as well as our review and merge procedures quick and simple.&lt;/p&gt; 
&lt;p&gt;Please make sure your contributions adhere to our coding guidelines:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Code must adhere to the official Go &lt;a href="https://golang.org/doc/effective_go.html#formatting"&gt;formatting&lt;/a&gt; guidelines (i.e. uses &lt;a href="https://golang.org/cmd/gofmt/"&gt;gofmt&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Code must be documented adhering to the official Go &lt;a href="https://golang.org/doc/effective_go.html#commentary"&gt;commentary&lt;/a&gt; guidelines.&lt;/li&gt; 
 &lt;li&gt;Pull requests need to be based on and opened against the &lt;code&gt;master&lt;/code&gt; branch.&lt;/li&gt; 
 &lt;li&gt;Commit messages should be prefixed with the package(s) they modify. 
  &lt;ul&gt; 
   &lt;li&gt;E.g. "eth, rpc: make trace configs optional"&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please see the &lt;a href="https://geth.ethereum.org/docs/developers/geth-developer/dev-guide"&gt;Developers' Guide&lt;/a&gt; for more details on configuring your environment, managing project dependencies, and testing procedures.&lt;/p&gt; 
&lt;h3&gt;Contributing to geth.ethereum.org&lt;/h3&gt; 
&lt;p&gt;For contributions to the &lt;a href="https://geth.ethereum.org"&gt;go-ethereum website&lt;/a&gt;, please checkout and raise pull requests against the &lt;code&gt;website&lt;/code&gt; branch. For more detailed instructions please see the &lt;code&gt;website&lt;/code&gt; branch &lt;a href="https://github.com/ethereum/go-ethereum/tree/website#readme"&gt;README&lt;/a&gt; or the &lt;a href="https://geth.ethereum.org/docs/developers/geth-developer/contributing"&gt;contributing&lt;/a&gt; page of the website.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The go-ethereum library (i.e. all code outside of the &lt;code&gt;cmd&lt;/code&gt; directory) is licensed under the &lt;a href="https://www.gnu.org/licenses/lgpl-3.0.en.html"&gt;GNU Lesser General Public License v3.0&lt;/a&gt;, also included in our repository in the &lt;code&gt;COPYING.LESSER&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;The go-ethereum binaries (i.e. all code inside of the &lt;code&gt;cmd&lt;/code&gt; directory) are licensed under the &lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html"&gt;GNU General Public License v3.0&lt;/a&gt;, also included in our repository in the &lt;code&gt;COPYING&lt;/code&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ipfs/kubo</title>
      <link>https://github.com/ipfs/kubo</link>
      <description>&lt;p&gt;An IPFS implementation in Go&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;br /&gt; &lt;a href="https://github.com/ipfs/kubo/raw/master/docs/logo/"&gt;&lt;img src="https://user-images.githubusercontent.com/157609/250148884-d6d12db8-fdcf-4be3-8546-2550b69845d8.png" alt="Kubo logo" title="Kubo logo" width="200" /&gt;&lt;/a&gt; &lt;br /&gt; Kubo: IPFS Implementation in GO &lt;br /&gt; &lt;/h1&gt; 
&lt;p align="center" style="font-size: 1.2rem;"&gt;The first implementation of IPFS.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://ipfs.tech"&gt;&lt;img src="https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square" alt="Official Part of IPFS Project" /&gt;&lt;/a&gt; &lt;a href="https://discuss.ipfs.tech"&gt;&lt;img alt="Discourse Forum" src="https://img.shields.io/discourse/posts?server=https%3A%2F%2Fdiscuss.ipfs.tech" /&gt;&lt;/a&gt; &lt;a href="https://matrix.to/#/#ipfs-space:ipfs.io"&gt;&lt;img alt="Matrix" src="https://img.shields.io/matrix/ipfs-space%3Aipfs.io?server_fqdn=matrix.org" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ipfs/kubo/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/ipfs/kubo/gobuild.yml?branch=master" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ipfs/kubo/releases"&gt;&lt;img alt="GitHub release" src="https://img.shields.io/github/v/release/ipfs/kubo?filter=!*rc*" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;What is Kubo?&lt;/h2&gt; 
&lt;p&gt;Kubo was the first IPFS implementation and is the most widely used one today. Implementing the &lt;em&gt;Interplanetary Filesystem&lt;/em&gt; - the standard for content-addressing on the Web, interoperable with HTTP. Thus powered by future-proof data models and the libp2p for network communication. Kubo is written in Go.&lt;/p&gt; 
&lt;p&gt;Featureset&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Runs an IPFS-Node as a network service that is part of LAN and WAN DHT&lt;/li&gt; 
 &lt;li&gt;Native support for UnixFS (most popular way to represent files and directories on IPFS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://specs.ipfs.tech/http-gateways/"&gt;HTTP Gateway&lt;/a&gt; (&lt;code&gt;/ipfs&lt;/code&gt; and &lt;code&gt;/ipns&lt;/code&gt;) functionality for trusted and &lt;a href="https://docs.ipfs.tech/reference/http/gateway/#trustless-verifiable-retrieval"&gt;trustless&lt;/a&gt; content retrieval&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://specs.ipfs.tech/routing/http-routing-v1/"&gt;HTTP Routing V1&lt;/a&gt; (&lt;code&gt;/routing/v1&lt;/code&gt;) client and server implementation for &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/delegated-routing.md"&gt;delegated routing&lt;/a&gt; lookups&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.ipfs.tech/reference/kubo/rpc/"&gt;HTTP Kubo RPC API&lt;/a&gt; (&lt;code&gt;/api/v0&lt;/code&gt;) to access and control the daemon&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.ipfs.tech/reference/kubo/cli/"&gt;Command Line Interface&lt;/a&gt; based on (&lt;code&gt;/api/v0&lt;/code&gt;) RPC API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ipfs/ipfs-webui/#readme"&gt;WebUI&lt;/a&gt; to manage the Kubo node&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/content-blocking.md"&gt;Content blocking&lt;/a&gt; support for operators of public nodes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Other implementations&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://docs.ipfs.tech/basics/ipfs-implementations/"&gt;List&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is IPFS?&lt;/h2&gt; 
&lt;p&gt;IPFS is a global, versioned, peer-to-peer filesystem. It combines good ideas from previous systems such as Git, BitTorrent, Kademlia, SFS, and the Web. It is like a single BitTorrent swarm, exchanging git objects. IPFS provides an interface as simple as the HTTP web, but with permanence built-in. You can also mount the world at /ipfs.&lt;/p&gt; 
&lt;p&gt;For more info see: &lt;a href="https://docs.ipfs.tech/concepts/what-is-ipfs/"&gt;https://docs.ipfs.tech/concepts/what-is-ipfs/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Before opening an issue, consider using one of the following locations to ensure you are opening your thread in the right place:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;kubo (previously named go-ipfs) &lt;em&gt;implementation&lt;/em&gt; bugs in &lt;a href="https://github.com/ipfs/kubo/issues"&gt;this repo&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Documentation issues in &lt;a href="https://github.com/ipfs/ipfs-docs/issues"&gt;ipfs/docs issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;IPFS &lt;em&gt;design&lt;/em&gt; in &lt;a href="https://github.com/ipfs/specs/issues"&gt;ipfs/specs issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Exploration of new ideas in &lt;a href="https://github.com/ipfs/notes/issues"&gt;ipfs/notes issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Ask questions and meet the rest of the community at the &lt;a href="https://discuss.ipfs.tech"&gt;IPFS Forum&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Or &lt;a href="https://docs.ipfs.tech/community/chat/"&gt;chat with us&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCdjsUXJ3QawK4O5L1kqqsew"&gt;&lt;img src="https://img.shields.io/youtube/channel/subscribers/UCdjsUXJ3QawK4O5L1kqqsew?label=Subscribe%20IPFS&amp;amp;style=social&amp;amp;cacheSeconds=3600" alt="YouTube Channel Subscribers" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/IPFS"&gt;&lt;img src="https://img.shields.io/twitter/follow/IPFS?style=social&amp;amp;cacheSeconds=3600" alt="Follow @IPFS on Twitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Next milestones&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/ipfs/kubo/milestones"&gt;Milestones on GitHub&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#what-is-kubo"&gt;What is Kubo?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#what-is-ipfs"&gt;What is IPFS?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#next-milestones"&gt;Next milestones&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#security-issues"&gt;Security Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#install"&gt;Install&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#minimal-system-requirements"&gt;Minimal System Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#official-prebuilt-binaries"&gt;Official prebuilt binaries&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#updating"&gt;Updating&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#downloading-builds-using-ipfs"&gt;Downloading builds using IPFS&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#unofficial-linux-packages"&gt;Unofficial Linux packages&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#arch-linux"&gt;ArchLinux&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#gentoo-linux"&gt;Gentoo Linux&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#nix"&gt;Nix&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#solus"&gt;Solus&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#opensuse"&gt;openSUSE&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#guix"&gt;Guix&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#snap"&gt;Snap&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#ubuntu-ppa"&gt;Ubuntu PPA&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#fedora-copr"&gt;Fedora&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#unofficial-windows-packages"&gt;Unofficial Windows packages&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#chocolatey"&gt;Chocolatey&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#scoop"&gt;Scoop&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#unofficial-macos-packages"&gt;Unofficial MacOS packages&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#macports"&gt;MacPorts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#nix-macos"&gt;Nix&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#homebrew"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#build-from-source"&gt;Build from Source&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#install-go"&gt;Install Go&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#download-and-compile-ipfs"&gt;Download and Compile IPFS&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#cross-compiling"&gt;Cross Compiling&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#getting-started"&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#some-things-to-try"&gt;Some things to try&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#troubleshooting-1"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#packages"&gt;Packages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#development"&gt;Development&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#map-of-implemented-subsystems"&gt;Map of Implemented Subsystems&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#cli-http-api-architecture-diagram"&gt;CLI, HTTP-API, Architecture Diagram&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#development-dependencies"&gt;Development Dependencies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#developer-notes"&gt;Developer Notes&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#maintainer-info"&gt;Maintainer Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security Issues&lt;/h2&gt; 
&lt;p&gt;Please follow &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/SECURITY.md"&gt;&lt;code&gt;SECURITY.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;The canonical download instructions for IPFS are over at: &lt;a href="https://docs.ipfs.tech/install/"&gt;https://docs.ipfs.tech/install/&lt;/a&gt;. It is &lt;strong&gt;highly recommended&lt;/strong&gt; you follow those instructions if you are not interested in working on IPFS development.&lt;/p&gt; 
&lt;p&gt;For production use, Release Docker images (below) are recommended.&lt;/p&gt; 
&lt;h3&gt;Minimal System Requirements&lt;/h3&gt; 
&lt;p&gt;Kubo runs on most Linux, macOS, and Windows systems. For optimal performance, we recommend at least 6 GB of RAM and 2 CPU cores (more is ideal, as Kubo is highly parallel).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Larger pinsets require additional memory, with an estimated ~1 GiB of RAM per 20 million items for reproviding to the Amino DHT.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] Systems with less than the recommended memory may experience instability, frequent OOM errors or restarts, and missing data announcement (reprovider window), which can make data fully or partially inaccessible to other peers. Running Kubo on underprovisioned hardware is at your own risk.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;Official images are published at &lt;a href="https://hub.docker.com/r/ipfs/kubo/"&gt;https://hub.docker.com/r/ipfs/kubo/&lt;/a&gt;: &lt;a href="https://hub.docker.com/r/ipfs/kubo/"&gt;&lt;img src="https://img.shields.io/docker/v/ipfs/kubo?color=blue&amp;amp;label=kubo%20docker%20image&amp;amp;logo=docker&amp;amp;sort=semver&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="Docker Image Version (latest semver)" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;🟢 Release Images&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;These are production grade images. Use them.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;latest&lt;/code&gt; and &lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=release"&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt; tags always point at &lt;a href="https://github.com/ipfs/kubo/releases/latest"&gt;the latest stable release&lt;/a&gt;. If you use this, remember to &lt;code&gt;docker pull&lt;/code&gt; periodically to update.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=v"&gt;&lt;code&gt;vN.N.N&lt;/code&gt;&lt;/a&gt; points at a specific &lt;a href="https://github.com/ipfs/kubo/releases"&gt;release tag&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🟠 Developer Preview Images&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;These tags are used by developers for internal testing, not intended for end users or production use.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=master-latest"&gt;&lt;code&gt;master-latest&lt;/code&gt;&lt;/a&gt; always points at the &lt;code&gt;HEAD&lt;/code&gt; of the &lt;a href="https://github.com/ipfs/kubo/commits/master/"&gt;&lt;code&gt;master&lt;/code&gt;&lt;/a&gt; branch&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=master-2"&gt;&lt;code&gt;master-YYYY-DD-MM-GITSHA&lt;/code&gt;&lt;/a&gt; points at a specific commit from the &lt;code&gt;master&lt;/code&gt; branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🔴 Internal Staging Images&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;We use &lt;code&gt;staging&lt;/code&gt; for testing arbitrary commits and experimental patches. 
  &lt;ul&gt; 
   &lt;li&gt;To build image for current HEAD, force push to &lt;code&gt;staging&lt;/code&gt; via &lt;code&gt;git push origin HEAD:staging --force&lt;/code&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=staging-latest"&gt;&lt;code&gt;staging-latest&lt;/code&gt;&lt;/a&gt; always points at the &lt;code&gt;HEAD&lt;/code&gt; of the &lt;a href="https://github.com/ipfs/kubo/commits/staging/"&gt;&lt;code&gt;staging&lt;/code&gt;&lt;/a&gt; branch&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/ipfs/kubo/tags?name=staging-2"&gt;&lt;code&gt;staging-YYYY-DD-MM-GITSHA&lt;/code&gt;&lt;/a&gt; points at a specific commit from the &lt;code&gt;staging&lt;/code&gt; branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ docker pull ipfs/kubo:latest
$ docker run --rm -it --net=host ipfs/kubo:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To &lt;a href="https://docs.ipfs.tech/install/run-ipfs-inside-docker/#customizing-your-node"&gt;customize your node&lt;/a&gt;, pass necessary config via &lt;code&gt;-e&lt;/code&gt; or by mounting scripts in the &lt;code&gt;/container-init.d&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Learn more at &lt;a href="https://docs.ipfs.tech/install/run-ipfs-inside-docker/"&gt;https://docs.ipfs.tech/install/run-ipfs-inside-docker/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Official prebuilt binaries&lt;/h3&gt; 
&lt;p&gt;The official binaries are published at &lt;a href="https://dist.ipfs.tech#kubo"&gt;https://dist.ipfs.tech#kubo&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://dist.ipfs.tech#kubo"&gt;&lt;img src="https://img.shields.io/github/v/release/ipfs/kubo?label=dist.ipfs.tech&amp;amp;logo=ipfs&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="dist.ipfs.tech Downloads" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;From there:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Click the blue "Download Kubo" on the right side of the page.&lt;/li&gt; 
 &lt;li&gt;Open/extract the archive.&lt;/li&gt; 
 &lt;li&gt;Move kubo (&lt;code&gt;ipfs&lt;/code&gt;) to your path (&lt;code&gt;install.sh&lt;/code&gt; can do it for you).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are unable to access &lt;a href="https://dist.ipfs.tech#kubo"&gt;dist.ipfs.tech&lt;/a&gt;, you can also download kubo from:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;this project's GitHub &lt;a href="https://github.com/ipfs/kubo/releases/latest"&gt;releases&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/ipns/dist.ipfs.tech&lt;/code&gt; at &lt;a href="https://dweb.link/ipns/dist.ipfs.tech#kubo"&gt;dweb.link&lt;/a&gt; gateway&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Updating&lt;/h4&gt; 
&lt;h5&gt;Downloading builds using IPFS&lt;/h5&gt; 
&lt;p&gt;List the available versions of Kubo implementation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ ipfs cat /ipns/dist.ipfs.tech/kubo/versions
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, to view available builds for a version from the previous command (&lt;code&gt;$VERSION&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ ipfs ls /ipns/dist.ipfs.tech/kubo/$VERSION
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To download a given build of a version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_darwin-386.tar.gz    # darwin 32-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_darwin-amd64.tar.gz  # darwin 64-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_freebsd-amd64.tar.gz # freebsd 64-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_linux-386.tar.gz     # linux 32-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_linux-amd64.tar.gz   # linux 64-bit build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_linux-arm.tar.gz     # linux arm build
$ ipfs get /ipns/dist.ipfs.tech/kubo/$VERSION/kubo_$VERSION_windows-amd64.zip    # windows 64-bit build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Unofficial Linux packages&lt;/h3&gt; 
&lt;a href="https://repology.org/project/kubo/versions"&gt; &lt;img src="https://repology.org/badge/vertical-allrepos/kubo.svg?sanitize=true" alt="Packaging status" align="right" /&gt; &lt;/a&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#arch-linux"&gt;ArchLinux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#gentoo-linux"&gt;Gentoo Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#nix-linux"&gt;Nix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#solus"&gt;Solus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#opensuse"&gt;openSUSE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#guix"&gt;Guix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#snap"&gt;Snap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#ubuntu-ppa"&gt;Ubuntu PPA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#fedora-copr"&gt;Fedora&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Arch Linux&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://wiki.archlinux.org/title/IPFS"&gt;&lt;img src="https://img.shields.io/archlinux/v/community/x86_64/kubo?color=1793d1&amp;amp;label=kubo&amp;amp;logo=arch-linux&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="kubo via Community Repo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# pacman -S kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://archlinux.org/packages/kubo/"&gt;&lt;img src="https://img.shields.io/static/v1?label=kubo-git&amp;amp;message=latest%40master&amp;amp;color=1793d1&amp;amp;logo=arch-linux&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="kubo-git via AUR" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a name="gentoo-linux"&gt;Gentoo Linux&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://wiki.gentoo.org/wiki/Kubo"&gt;https://wiki.gentoo.org/wiki/Kubo&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# emerge -a net-p2p/kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://packages.gentoo.org/packages/net-p2p/kubo"&gt;https://packages.gentoo.org/packages/net-p2p/kubo&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a name="nix-linux"&gt;Nix&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;With the purely functional package manager &lt;a href="https://nixos.org/nix/"&gt;Nix&lt;/a&gt; you can install kubo like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ nix-env -i kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install the Package by using its attribute name, which is also &lt;code&gt;kubo&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Solus&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://dev.getsol.us/source/kubo/repository/master/"&gt;Package for Solus&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo eopkg install kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install it through the Solus software center.&lt;/p&gt; 
&lt;h4&gt;openSUSE&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://software.opensuse.org/package/kubo"&gt;Community Package for kubo&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Guix&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://packages.guix.gnu.org/search/?query=kubo"&gt;Community Package for kubo&lt;/a&gt; is available.&lt;/p&gt; 
&lt;h4&gt;Snap&lt;/h4&gt; 
&lt;p&gt;No longer supported, see rationale in &lt;a href="https://github.com/ipfs/kubo/issues/8688"&gt;kubo#8688&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Ubuntu PPA&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://launchpad.net/~twdragon/+archive/ubuntu/ipfs"&gt;PPA homepage&lt;/a&gt; on Launchpad.&lt;/p&gt; 
&lt;h5&gt;Latest Ubuntu (&amp;gt;= 20.04 LTS)&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo add-apt-repository ppa:twdragon/ipfs
sudo apt update
sudo apt install ipfs-kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fedora COPR&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/taw00/ipfs-rpm"&gt;&lt;code&gt;taw00/ipfs-rpm&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;Any Ubuntu version&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo su
echo 'deb https://ppa.launchpadcontent.net/twdragon/ipfs/ubuntu &amp;lt;&amp;lt;DISTRO&amp;gt;&amp;gt; main' &amp;gt;&amp;gt; /etc/apt/sources.list.d/ipfs
echo 'deb-src https://ppa.launchpadcontent.net/twdragon/ipfs/ubuntu &amp;lt;&amp;lt;DISTRO&amp;gt;&amp;gt; main' &amp;gt;&amp;gt; /etc/apt/sources.list.d/ipfs
exit
sudo apt update
sudo apt install ipfs-kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where &lt;code&gt;&amp;lt;&amp;lt;DISTRO&amp;gt;&amp;gt;&lt;/code&gt; is the codename of your Ubuntu distribution (for example, &lt;code&gt;jammy&lt;/code&gt; for 22.04 LTS). During the first installation the package maintenance script may automatically ask you about which networking profile, CPU accounting model, and/or existing node configuration file you want to use.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: this method also may work with any compatible Debian-based distro which has &lt;code&gt;libc6&lt;/code&gt; inside, and APT as a package manager.&lt;/p&gt; 
&lt;h3&gt;Unofficial Windows packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#chocolatey"&gt;Chocolatey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#scoop"&gt;Scoop&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Chocolatey&lt;/h4&gt; 
&lt;p&gt;No longer supported, see rationale in &lt;a href="https://github.com/ipfs/kubo/issues/9341"&gt;kubo#9341&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Scoop&lt;/h4&gt; 
&lt;p&gt;Scoop provides kubo as &lt;code&gt;kubo&lt;/code&gt; in its 'extras' bucket.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Powershell"&gt;PS&amp;gt; scoop bucket add extras
PS&amp;gt; scoop install kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Unofficial macOS packages&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#macports"&gt;MacPorts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#nix-macos"&gt;Nix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/#homebrew"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;MacPorts&lt;/h4&gt; 
&lt;p&gt;The package &lt;a href="https://ports.macports.org/port/ipfs"&gt;ipfs&lt;/a&gt; currently points to kubo and is being maintained.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ sudo port install ipfs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a name="nix-macos"&gt;Nix&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;In macOS you can use the purely functional package manager &lt;a href="https://nixos.org/nix/"&gt;Nix&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ nix-env -i kubo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install the Package by using its attribute name, which is also &lt;code&gt;kubo&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Homebrew&lt;/h4&gt; 
&lt;p&gt;A Homebrew formula &lt;a href="https://formulae.brew.sh/formula/ipfs"&gt;ipfs&lt;/a&gt; is maintained too.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ brew install --formula ipfs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build from Source&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/go-mod/go-version/ipfs/kubo?label=Requires%20Go&amp;amp;logo=go&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="GitHub go.mod Go version" /&gt;&lt;/p&gt; 
&lt;p&gt;kubo's build system requires Go and some standard POSIX build tools:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GNU make&lt;/li&gt; 
 &lt;li&gt;Git&lt;/li&gt; 
 &lt;li&gt;GCC (or some other go compatible C Compiler) (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To build without GCC, build with &lt;code&gt;CGO_ENABLED=0&lt;/code&gt; (e.g., &lt;code&gt;make build CGO_ENABLED=0&lt;/code&gt;).&lt;/p&gt; 
&lt;h4&gt;Install Go&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/go-mod/go-version/ipfs/kubo?label=Requires%20Go&amp;amp;logo=go&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="GitHub go.mod Go version" /&gt;&lt;/p&gt; 
&lt;p&gt;If you need to update: &lt;a href="https://golang.org/dl/"&gt;Download latest version of Go&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You'll need to add Go's bin directories to your &lt;code&gt;$PATH&lt;/code&gt; environment variable e.g., by adding these lines to your &lt;code&gt;/etc/profile&lt;/code&gt; (for a system-wide installation) or &lt;code&gt;$HOME/.profile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:$GOPATH/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(If you run into trouble, see the &lt;a href="https://golang.org/doc/install"&gt;Go install instructions&lt;/a&gt;).&lt;/p&gt; 
&lt;h4&gt;Download and Compile IPFS&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/ipfs/kubo.git

$ cd kubo
$ make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can run &lt;code&gt;make build&lt;/code&gt; to build the kubo binary (storing it in &lt;code&gt;cmd/ipfs/ipfs&lt;/code&gt;) without installing it.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you get an error along the lines of "fatal error: stdlib.h: No such file or directory", you're missing a C compiler. Either re-run &lt;code&gt;make&lt;/code&gt; with &lt;code&gt;CGO_ENABLED=0&lt;/code&gt; or install GCC.&lt;/p&gt; 
&lt;h5&gt;Cross Compiling&lt;/h5&gt; 
&lt;p&gt;Compiling for a different platform is as simple as running:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make build GOOS=myTargetOS GOARCH=myTargetArchitecture
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Troubleshooting&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Separate &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/windows.md"&gt;instructions are available for building on Windows&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git&lt;/code&gt; is required in order for &lt;code&gt;go get&lt;/code&gt; to fetch all dependencies.&lt;/li&gt; 
 &lt;li&gt;Package managers often contain out-of-date &lt;code&gt;golang&lt;/code&gt; packages. Ensure that &lt;code&gt;go version&lt;/code&gt; reports the minimum version required (see go.mod). See above for how to install go.&lt;/li&gt; 
 &lt;li&gt;If you are interested in development, please install the development dependencies as well.&lt;/li&gt; 
 &lt;li&gt;Shell command completions can be generated with one of the &lt;code&gt;ipfs commands completion&lt;/code&gt; subcommands. Read &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/command-completion.md"&gt;docs/command-completion.md&lt;/a&gt; to learn more.&lt;/li&gt; 
 &lt;li&gt;See the &lt;a href="https://github.com/ipfs/kubo/tree/master/misc"&gt;misc folder&lt;/a&gt; for how to connect IPFS to systemd or whatever init system your distro uses.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://docs.ipfs.tech/how-to/command-line-quick-start/"&gt;&lt;img src="https://img.shields.io/static/v1?label=docs&amp;amp;message=Command-line%20quick%20start&amp;amp;color=blue&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="docs: Command-line quick start" /&gt;&lt;/a&gt; &lt;a href="https://docs.ipfs.tech/reference/kubo/cli/"&gt;&lt;img src="https://img.shields.io/static/v1?label=docs&amp;amp;message=Command-line%20reference&amp;amp;color=blue&amp;amp;style=flat-square&amp;amp;cacheSeconds=3600" alt="docs: Command-line reference" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To start using IPFS, you must first initialize IPFS's config files on your system, this is done with &lt;code&gt;ipfs init&lt;/code&gt;. See &lt;code&gt;ipfs init --help&lt;/code&gt; for information on the optional arguments it takes. After initialization is complete, you can use &lt;code&gt;ipfs mount&lt;/code&gt;, &lt;code&gt;ipfs add&lt;/code&gt; and any of the other commands to explore!&lt;/p&gt; 
&lt;p&gt;For detailed configuration options, see &lt;a href="https://github.com/ipfs/kubo/raw/master/docs/config.md"&gt;docs/config.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Some things to try&lt;/h3&gt; 
&lt;p&gt;Basic proof of 'ipfs working' locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;echo "hello world" &amp;gt; hello
ipfs add hello
# This should output a hash string that looks something like:
# QmT78zSuBmuS4z925WZfrqQ1qHaJ56DQaTfyMUF7F8ff5o
ipfs cat &amp;lt;that hash&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HTTP/RPC clients&lt;/h3&gt; 
&lt;p&gt;For programmatic interaction with Kubo, see our &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/http-rpc-clients.md"&gt;list of HTTP/RPC clients&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;If you have previously installed IPFS before and you are running into problems getting a newer version to work, try deleting (or backing up somewhere else) your IPFS config directory (~/.ipfs by default) and rerunning &lt;code&gt;ipfs init&lt;/code&gt;. This will reinitialize the config file to its defaults and clear out the local datastore of any bad entries.&lt;/p&gt; 
&lt;p&gt;For more information about configuration options, see &lt;a href="https://github.com/ipfs/kubo/raw/master/docs/config.md"&gt;docs/config.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please direct general questions and help requests to our &lt;a href="https://discuss.ipfs.tech"&gt;forums&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you believe you've found a bug, check the &lt;a href="https://github.com/ipfs/kubo/issues"&gt;issues list&lt;/a&gt; and, if you don't see your problem there, either come talk to us on &lt;a href="https://docs.ipfs.tech/community/chat/"&gt;Matrix chat&lt;/a&gt;, or file an issue of your own!&lt;/p&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://docs.ipfs.tech/reference/go/api/"&gt;IPFS in GO&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Some places to get you started on the codebase:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Main file: &lt;a href="https://github.com/ipfs/kubo/raw/master/cmd/ipfs/main.go"&gt;./cmd/ipfs/main.go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;CLI Commands: &lt;a href="https://github.com/ipfs/kubo/tree/master/core/commands"&gt;./core/commands/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Bitswap (the data trading engine): &lt;a href="https://github.com/ipfs/go-bitswap"&gt;go-bitswap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;libp2p 
  &lt;ul&gt; 
   &lt;li&gt;libp2p: &lt;a href="https://github.com/libp2p/go-libp2p"&gt;https://github.com/libp2p/go-libp2p&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;DHT: &lt;a href="https://github.com/libp2p/go-libp2p-kad-dht"&gt;https://github.com/libp2p/go-libp2p-kad-dht&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ipfs/kubo/tree/master/docs/add-code-flow.md"&gt;IPFS : The &lt;code&gt;Add&lt;/code&gt; command demystified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Map of Implemented Subsystems&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;WIP&lt;/strong&gt;: This is a high-level architecture diagram of the various sub-systems of this specific implementation. To be updated with how they interact. Anyone who has suggestions is welcome to comment &lt;a href="https://docs.google.com/drawings/d/1OVpBT2q-NtSJqlPX3buvjYhOnWfdzb85YEsM_njesME/edit"&gt;here&lt;/a&gt; on how we can improve this! &lt;img src="https://docs.google.com/drawings/d/e/2PACX-1vS_n1FvSu6mdmSirkBrIIEib2gqhgtatD9awaP2_WdrGN4zTNeg620XQd9P95WT-IvognSxIIdCM5uE/pub?w=1446&amp;amp;h=1036" /&gt;&lt;/p&gt; 
&lt;h3&gt;CLI, HTTP-API, Architecture Diagram&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ipfs/kubo/master/docs/cli-http-api-core-diagram.png" alt="" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://github.com/ipfs/pm/pull/678#discussion_r210410924"&gt;Origin&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Description: Dotted means "likely going away". The "Legacy" parts are thin wrappers around some commands to translate between the new system and the old system. The grayed-out parts on the "daemon" diagram are there to show that the code is all the same, it's just that we turn some pieces on and some pieces off depending on whether we're running on the client or the server.&lt;/p&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;make test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Development Dependencies&lt;/h3&gt; 
&lt;p&gt;If you make changes to the protocol buffers, you will need to install the &lt;a href="https://github.com/google/protobuf"&gt;protoc compiler&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Developer Notes&lt;/h3&gt; 
&lt;p&gt;Find more documentation for developers on &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs"&gt;docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Maintainer Info&lt;/h2&gt; 
&lt;p&gt;Kubo is maintained by &lt;a href="https://ipshipyard.com/"&gt;Shipyard&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;This repository is part of &lt;a href="https://ipshipyard.notion.site/IPFS-Go-Triage-Boxo-Kubo-Rainbow-0ddee6b7f28d412da7dabe4f9107c29a"&gt;Shipyard's GO Triage triage&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ipshipyard.notion.site/Kubo-Release-Process-6dba4f5755c9458ab5685eeb28173778"&gt;Release Process&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/ipfs/community/raw/master/CONTRIBUTING.md"&gt;&lt;img src="https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We ❤️ all &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/docs/AUTHORS"&gt;our contributors&lt;/a&gt;; this project wouldn’t be what it is without you! If you want to help out, please see &lt;a href="https://raw.githubusercontent.com/ipfs/kubo/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This repository falls under the IPFS &lt;a href="https://github.com/ipfs/community/raw/master/code-of-conduct.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Members of IPFS community provide Kubo support on &lt;a href="https://discuss.ipfs.tech/c/help/help-kubo/23"&gt;discussion forum category here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Need help with IPFS itself? Learn where to get help and support at &lt;a href="https://ipfs.tech/help"&gt;https://ipfs.tech/help&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is dual-licensed under Apache 2.0 and MIT terms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Apache License, Version 2.0, (&lt;a href="https://github.com/ipfs/kubo/raw/master/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;MIT license (&lt;a href="https://github.com/ipfs/kubo/raw/master/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href="http://opensource.org/licenses/MIT"&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ThreeDotsLabs/watermill</title>
      <link>https://github.com/ThreeDotsLabs/watermill</link>
      <description>&lt;p&gt;Building event-driven applications the easy way in Go.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Watermill&lt;/h1&gt; 
&lt;img align="right" width="300" src="https://watermill.io/img/gopher.svg?sanitize=true" /&gt; 
&lt;p&gt;&lt;a href="https://github.com/ThreeDotsLabs/watermill/actions/workflows/master.yml"&gt;&lt;img src="https://github.com/ThreeDotsLabs/watermill/actions/workflows/master.yml/badge.svg?sanitize=true" alt="CI Status" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/ThreeDotsLabs/watermill"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/ThreeDotsLabs/watermill.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/ThreeDotsLabs/watermill"&gt;&lt;img src="https://goreportcard.com/badge/github.com/ThreeDotsLabs/watermill" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/ThreeDotsLabs/watermill"&gt;&lt;img src="https://codecov.io/gh/ThreeDotsLabs/watermill/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Watermill is a Go library for working efficiently with message streams. It is intended for building event driven applications, enabling event sourcing, RPC over messages, sagas and basically whatever else comes to your mind. You can use conventional pub/sub implementations like Kafka or RabbitMQ, but also HTTP or PostgreSQL if that fits your use case.&lt;/p&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Easy&lt;/strong&gt; to understand.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Universal&lt;/strong&gt; - event-driven architecture, messaging, stream processing, CQRS - use it for whatever you need.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt; (see &lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/#benchmarks"&gt;Benchmarks&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible&lt;/strong&gt; with middlewares, plugins and Pub/Sub configurations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Resilient&lt;/strong&gt; - using proven technologies and passing stress tests (see &lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/#stability"&gt;Stability&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Pick what you like the best or see in order:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://watermill.io/learn/quickstart/"&gt;Quickstart&lt;/a&gt; — learn by coding!&lt;/li&gt; 
 &lt;li&gt;Follow the &lt;a href="https://watermill.io/learn/getting-started/"&gt;Getting Started guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;See examples below.&lt;/li&gt; 
 &lt;li&gt;Read the full documentation: &lt;a href="https://watermill.io/"&gt;https://watermill.io/&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Our online hands-on training&lt;/h2&gt; 
&lt;p&gt;Go Event-Driven goes beyond Watermill Quickstart. You'll learn industry standard concepts and patterns like:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Handling at-least-once delivery&lt;/li&gt; 
 &lt;li&gt;Asynchronous read models&lt;/li&gt; 
 &lt;li&gt;Events &amp;amp; Commands&lt;/li&gt; 
 &lt;li&gt;Observability&lt;/li&gt; 
 &lt;li&gt;Message ordering&lt;/li&gt; 
 &lt;li&gt;Sagas&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://threedots.tech/event-driven/?utm_source=watermill-readme"&gt;&lt;img align="center" width="400" src="https://threedots.tech/event-driven-banner.png" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Basic 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/_examples/basic/1-your-first-app"&gt;Your first app&lt;/a&gt; - &lt;strong&gt;start here!&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/_examples/basic/2-realtime-feed"&gt;Realtime feed&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/_examples/basic/3-router"&gt;Router&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/_examples/basic/4-metrics"&gt;Metrics&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/_examples/basic/5-cqrs-protobuf"&gt;CQRS with protobuf&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/_examples/pubsubs"&gt;Pub/Subs usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;These examples are part of the &lt;a href="https://watermill.io/learn/getting-started/"&gt;Getting started guide&lt;/a&gt; and show usage of a single Pub/Sub at a time.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Real-world examples 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/_examples/real-world-examples/exactly-once-delivery-counter"&gt;Exactly-once delivery counter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/_examples/real-world-examples/receiving-webhooks"&gt;Receiving webhooks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/_examples/real-world-examples/sending-webhooks"&gt;Sending webhooks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/_examples/real-world-examples/synchronizing-databases"&gt;Synchronizing Databases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/_examples/real-world-examples/persistent-event-log"&gt;Persistent Event Log&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/_examples/real-world-examples/transactional-events"&gt;Transactional Events&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/_examples/real-world-examples/server-sent-events"&gt;Real-time HTTP updates with Server-Sent Events&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/_examples/real-world-examples/server-sent-events-htmx"&gt;Real-time HTTP updates with Server-Sent Events and htmx&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Complete projects 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ThreeDotsLabs/nats-example"&gt;NATS example with live code reloading&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ThreeDotsLabs/event-driven-example"&gt;RabbitMQ, webhooks and Kafka integration&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Background&lt;/h2&gt; 
&lt;p&gt;Building distributed and scalable services is rarely as easy as some may suggest. There is a lot of hidden knowledge that comes with writing such systems. Just like you don't need to know the whole TCP stack to create a HTTP REST server, you shouldn't need to study all of this knowledge to start with building message-driven applications.&lt;/p&gt; 
&lt;p&gt;Watermill's goal is to make communication with messages as easy to use as HTTP routers. It provides the tools needed to begin working with event-driven architecture and allows you to learn the details on the go.&lt;/p&gt; 
&lt;p&gt;At the heart of Watermill there is one simple interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func(*Message) ([]*Message, error)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Your handler receives a message and decides whether to publish new message(s) or return an error. What happens next is up to the middlewares you've chosen.&lt;/p&gt; 
&lt;p&gt;You can find more about our motivations in our &lt;a href="https://threedots.tech/post/introducing-watermill/"&gt;&lt;em&gt;Introducing Watermill&lt;/em&gt; blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Pub/Subs&lt;/h2&gt; 
&lt;p&gt;All publishers and subscribers have to implement an interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type Publisher interface {
	Publish(topic string, messages ...*Message) error
	Close() error
}

type Subscriber interface {
	Subscribe(ctx context.Context, topic string) (&amp;lt;-chan *Message, error)
	Close() error
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Supported Pub/Subs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AMQP (RabbitMQ) Pub/Sub &lt;a href="https://github.com/ThreeDotsLabs/watermill-amqp/"&gt;(&lt;code&gt;github.com/ThreeDotsLabs/watermill-amqp/v3&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;AWS SNS/SQS Pub/Sub &lt;a href="https://github.com/ThreeDotsLabs/watermill-aws/"&gt;(&lt;code&gt;github.com/ThreeDotsLabs/watermill-aws&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Bolt Pub/Sub &lt;a href="https://github.com/ThreeDotsLabs/watermill-bolt/"&gt;(&lt;code&gt;github.com/ThreeDotsLabs/watermill-bolt&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Firestore Pub/Sub &lt;a href="https://github.com/ThreeDotsLabs/watermill-firestore/"&gt;(&lt;code&gt;github.com/ThreeDotsLabs/watermill-firestore&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Google Cloud Pub/Sub &lt;a href="https://github.com/ThreeDotsLabs/watermill-googlecloud/"&gt;(&lt;code&gt;github.com/ThreeDotsLabs/watermill-googlecloud/v2&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;HTTP Pub/Sub &lt;a href="https://github.com/ThreeDotsLabs/watermill-http/"&gt;(&lt;code&gt;github.com/ThreeDotsLabs/watermill-http/v2&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;io.Reader/io.Writer Pub/Sub &lt;a href="https://github.com/ThreeDotsLabs/watermill-io/"&gt;(&lt;code&gt;github.com/ThreeDotsLabs/watermill-io&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Kafka Pub/Sub &lt;a href="https://github.com/ThreeDotsLabs/watermill-kafka/"&gt;(&lt;code&gt;github.com/ThreeDotsLabs/watermill-kafka/v3&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;NATS Jetstream Pub/Sub &lt;a href="https://github.com/ThreeDotsLabs/watermill-nats/"&gt;(&lt;code&gt;github.com/ThreeDotsLabs/watermill-nats/v2&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Redis Stream Pub/Sub &lt;a href="https://github.com/ThreeDotsLabs/watermill-redisstream/"&gt;(&lt;code&gt;github.com/ThreeDotsLabs/watermill-redisstream&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SQL (MySQL / PostgreSQL) Pub/Sub &lt;a href="https://github.com/ThreeDotsLabs/watermill-sql/"&gt;(&lt;code&gt;github.com/ThreeDotsLabs/watermill-sql/v4&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SQLite Pub/Sub (Beta) &lt;a href="https://github.com/ThreeDotsLabs/watermill-sqlite/"&gt;(&lt;code&gt;github.com/ThreeDotsLabs/watermill-sqlite/&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All Pub/Subs implementation documentation can be found in the &lt;a href="https://watermill.io/pubsubs/"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Unofficial libraries&lt;/h2&gt; 
&lt;p&gt;Can't find your favorite Pub/Sub or library integration? Check &lt;a href="https://watermill.io/docs/awesome/"&gt;Awesome Watermill&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you know another library or are an author of one, please &lt;a href="https://github.com/ThreeDotsLabs/watermill/edit/master/docs/content/docs/awesome.md"&gt;add it to the list&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please check our &lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Stability&lt;/h2&gt; 
&lt;p&gt;Watermill v1.0.0 has been released and is production-ready. The public API is stable and will not change without changing the major version.&lt;/p&gt; 
&lt;p&gt;To ensure that all Pub/Subs are stable and safe to use in production, we created a &lt;a href="https://github.com/ThreeDotsLabs/watermill/raw/master/pubsub/tests/test_pubsub.go#L34"&gt;set of tests&lt;/a&gt; that need to pass for each of the implementations before merging to master. All tests are also executed in &lt;a href="https://github.com/ThreeDotsLabs/watermill/raw/master/pubsub/tests/test_pubsub.go#L171"&gt;&lt;em&gt;stress&lt;/em&gt;&lt;/a&gt; mode - that means that we are running all the tests &lt;strong&gt;20x&lt;/strong&gt; in parallel.&lt;/p&gt; 
&lt;p&gt;All tests are run with the race condition detector enabled (&lt;code&gt;-race&lt;/code&gt; flag in tests).&lt;/p&gt; 
&lt;p&gt;For more information about debugging tests, you should check &lt;a href="http://watermill.io/docs/troubleshooting/#debugging-pubsub-tests"&gt;tests troubleshooting guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;p&gt;Initial tools for benchmarking Pub/Subs can be found in &lt;a href="https://github.com/ThreeDotsLabs/watermill-benchmark"&gt;watermill-benchmark&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All benchmarks are being done on a single 16 CPU VM instance, running one binary and dependencies in Docker Compose.&lt;/p&gt; 
&lt;p&gt;These numbers are meant to serve as a rough estimate of how fast messages can be processed by different Pub/Subs. Keep in mind that the results can be vastly different, depending on the setup and configuration (both much lower and higher).&lt;/p&gt; 
&lt;p&gt;Here's the short version for message size of 16 bytes.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Pub/Sub&lt;/th&gt; 
   &lt;th&gt;Publish (messages / s)&lt;/th&gt; 
   &lt;th&gt;Subscribe (messages / s)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GoChannel&lt;/td&gt; 
   &lt;td&gt;315,776&lt;/td&gt; 
   &lt;td&gt;138,743&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Redis Streams&lt;/td&gt; 
   &lt;td&gt;59,158&lt;/td&gt; 
   &lt;td&gt;12,134&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NATS Jetstream (16 Subscribers)&lt;/td&gt; 
   &lt;td&gt;50,668&lt;/td&gt; 
   &lt;td&gt;34,713&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kafka (one node)&lt;/td&gt; 
   &lt;td&gt;41,492&lt;/td&gt; 
   &lt;td&gt;101,669&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SQL (MySQL, batch size=100)&lt;/td&gt; 
   &lt;td&gt;6,371&lt;/td&gt; 
   &lt;td&gt;2,794&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SQL (PostgreSQL, batch size=1)&lt;/td&gt; 
   &lt;td&gt;2,831&lt;/td&gt; 
   &lt;td&gt;9,460&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Google Cloud Pub/Sub&lt;/td&gt; 
   &lt;td&gt;3,027&lt;/td&gt; 
   &lt;td&gt;28,589&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;AMQP (RabbitMQ)&lt;/td&gt; 
   &lt;td&gt;2,770&lt;/td&gt; 
   &lt;td&gt;14,604&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you didn't find the answer to your question in &lt;a href="https://watermill.io/"&gt;the documentation&lt;/a&gt;, feel free to ask us directly!&lt;/p&gt; 
&lt;p&gt;Please join us on the &lt;code&gt;#watermill&lt;/code&gt; channel on the &lt;a href="https://discord.gg/QV6VFg4YQE"&gt;Three Dots Labs Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Why the name?&lt;/h2&gt; 
&lt;p&gt;It processes streams!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ThreeDotsLabs/watermill/master/LICENSE"&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>netbirdio/netbird</title>
      <link>https://github.com/netbirdio/netbird</link>
      <description>&lt;p&gt;Connect your devices into a secure WireGuard®-based overlay network with SSO, MFA and granular access controls.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;p align="center"&gt; &lt;img width="234" src="https://raw.githubusercontent.com/netbirdio/netbird/main/docs/media/logo-full.png" /&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;a href="https://img.shields.io/badge/license-BSD--3-blue)"&gt; &lt;img src="https://sonarcloud.io/api/project_badges/measure?project=netbirdio_netbird&amp;amp;metric=alert_status" /&gt; &lt;/a&gt; &lt;a href="https://github.com/netbirdio/netbird/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-BSD--3-blue" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://docs.netbird.io/slack-url"&gt; &lt;img src="https://img.shields.io/badge/slack-@netbird-red.svg?logo=slack" /&gt; &lt;/a&gt; &lt;a href="https://forum.netbird.io"&gt; &lt;img src="https://img.shields.io/badge/community forum-@netbird-red.svg?logo=discourse" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://gurubase.io/g/netbird"&gt; &lt;img src="https://img.shields.io/badge/Gurubase-Ask%20NetBird%20Guru-006BFF" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;strong&gt; Start using NetBird at &lt;a href="https://netbird.io/pricing"&gt;netbird.io&lt;/a&gt; &lt;br /&gt; See &lt;a href="https://netbird.io/docs/"&gt;Documentation&lt;/a&gt; &lt;br /&gt; Join our &lt;a href="https://docs.netbird.io/slack-url"&gt;Slack channel&lt;/a&gt; or our &lt;a href="https://forum.netbird.io"&gt;Community forum&lt;/a&gt; &lt;br /&gt; &lt;/strong&gt; &lt;br /&gt; &lt;a href="https://registry.terraform.io/providers/netbirdio/netbird/latest"&gt; New: NetBird terraform provider &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;strong&gt;NetBird combines a configuration-free peer-to-peer private network and a centralized access control system in a single platform, making it easy to create secure private networks for your organization or home.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Connect.&lt;/strong&gt; NetBird creates a WireGuard-based overlay network that automatically connects your machines over an encrypted tunnel, leaving behind the hassle of opening ports, complex firewall rules, VPN gateways, and so forth.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Secure.&lt;/strong&gt; NetBird enables secure remote access by applying granular access policies while allowing you to manage them intuitively from a single place. Works universally on any infrastructure.&lt;/p&gt; 
&lt;h3&gt;Open Source Network Security in a Single Platform&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/10cec749-bb56-4ab3-97af-4e38850108d2"&gt;https://github.com/user-attachments/assets/10cec749-bb56-4ab3-97af-4e38850108d2&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;NetBird on Lawrence Systems (Video)&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Kwrff6h0rEw"&gt;&lt;img src="https://img.youtube.com/vi/Kwrff6h0rEw/0.jpg" alt="Watch the video" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Key features&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Connectivity&lt;/th&gt; 
   &lt;th&gt;Management&lt;/th&gt; 
   &lt;th&gt;Security&lt;/th&gt; 
   &lt;th&gt;Automation&lt;/th&gt; 
   &lt;th&gt;Platforms&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Kernel WireGuard&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://github.com/netbirdio/dashboard"&gt;Admin Web UI&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/installation#running-net-bird-with-sso-login"&gt;SSO &amp;amp; MFA support&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/api"&gt;Public API&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Linux&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Peer-to-peer connections&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Auto peer discovery and configuration&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-network-access"&gt;Access control - groups &amp;amp; rules&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/register-machines-using-setup-keys"&gt;Setup keys for bulk network provisioning&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Mac&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Connection relay fallback&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/selfhosted/identity-providers"&gt;IdP integrations&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/audit-events-logging"&gt;Activity logging&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/selfhosted/selfhosted-quickstart"&gt;Self-hosting quickstart script&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Windows&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/routing-traffic-to-private-networks"&gt;Routes to external networks&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-dns-in-your-network"&gt;Private DNS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-posture-checks"&gt;Device posture checks&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] IdP groups sync with JWT&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Android&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] NAT traversal with BPF&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/add-users-to-your-network"&gt;Multiuser support&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Peer-to-peer encryption&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] iOS&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://netbird.io/knowledge-hub/the-first-quantum-resistant-mesh-vpn"&gt;Quantum-resistance with Rosenpass&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] OpenWRT&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/enforce-periodic-user-authentication"&gt;Periodic re-authentication&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/netbird-on-faas"&gt;Serverless&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Docker&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Quickstart with NetBird Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and install NetBird at &lt;a href="https://app.netbird.io/install"&gt;https://app.netbird.io/install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow the steps to sign-up with Google, Microsoft, GitHub or your email address.&lt;/li&gt; 
 &lt;li&gt;Check NetBird &lt;a href="https://app.netbird.io/"&gt;admin UI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Add more machines.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quickstart with self-hosted NetBird&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This is the quickest way to try self-hosted NetBird. It should take around 5 minutes to get started if you already have a public domain and a VM. Follow the &lt;a href="https://docs.netbird.io/selfhosted/selfhosted-guide#advanced-guide-with-a-custom-identity-provider"&gt;Advanced guide with a custom identity provider&lt;/a&gt; for installations with different IDPs.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Infrastructure requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Linux VM with at least &lt;strong&gt;1CPU&lt;/strong&gt; and &lt;strong&gt;2GB&lt;/strong&gt; of memory.&lt;/li&gt; 
 &lt;li&gt;The VM should be publicly accessible on TCP ports &lt;strong&gt;80&lt;/strong&gt; and &lt;strong&gt;443&lt;/strong&gt; and UDP ports: &lt;strong&gt;3478&lt;/strong&gt;, &lt;strong&gt;49152-65535&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Public domain&lt;/strong&gt; name pointing to the VM.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Software requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker installed on the VM with the docker-compose plugin (&lt;a href="https://docs.docker.com/engine/install/"&gt;Docker installation guide&lt;/a&gt;) or docker with docker-compose in version 2 or higher.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jqlang.github.io/jq/"&gt;jq&lt;/a&gt; installed. In most distributions Usually available in the official repositories and can be installed with &lt;code&gt;sudo apt install jq&lt;/code&gt; or &lt;code&gt;sudo yum install jq&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://curl.se/"&gt;curl&lt;/a&gt; installed. Usually available in the official repositories and can be installed with &lt;code&gt;sudo apt install curl&lt;/code&gt; or &lt;code&gt;sudo yum install curl&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and run the installation script:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export NETBIRD_DOMAIN=netbird.example.com; curl -fsSL https://github.com/netbirdio/netbird/releases/latest/download/getting-started-with-zitadel.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Once finished, you can manage the resources via &lt;code&gt;docker-compose&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;A bit on NetBird internals&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every machine in the network runs &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/client/"&gt;NetBird Agent (or Client)&lt;/a&gt; that manages WireGuard.&lt;/li&gt; 
 &lt;li&gt;Every agent connects to &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/management/"&gt;Management Service&lt;/a&gt; that holds network state, manages peer IPs, and distributes network updates to agents (peers).&lt;/li&gt; 
 &lt;li&gt;NetBird agent uses WebRTC ICE implemented in &lt;a href="https://github.com/pion/ice"&gt;pion/ice library&lt;/a&gt; to discover connection candidates when establishing a peer-to-peer connection between machines.&lt;/li&gt; 
 &lt;li&gt;Connection candidates are discovered with the help of &lt;a href="https://en.wikipedia.org/wiki/STUN"&gt;STUN&lt;/a&gt; servers.&lt;/li&gt; 
 &lt;li&gt;Agents negotiate a connection through &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/signal/"&gt;Signal Service&lt;/a&gt; passing p2p encrypted messages with candidates.&lt;/li&gt; 
 &lt;li&gt;Sometimes the NAT traversal is unsuccessful due to strict NATs (e.g. mobile carrier-grade NAT) and a p2p connection isn't possible. When this occurs the system falls back to a relay server called &lt;a href="https://en.wikipedia.org/wiki/Traversal_Using_Relays_around_NAT"&gt;TURN&lt;/a&gt;, and a secure WireGuard tunnel is established via the TURN server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/coturn/coturn"&gt;Coturn&lt;/a&gt; is the one that has been successfully used for STUN and TURN in NetBird setups.&lt;/p&gt; 
&lt;p float="left" align="middle"&gt; &lt;img src="https://docs.netbird.io/docs-static/img/architecture/high-level-dia.png" width="700" /&gt; &lt;/p&gt; 
&lt;p&gt;See a complete &lt;a href="https://docs.netbird.io/about-netbird/how-netbird-works#architecture"&gt;architecture overview&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Community projects&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/physk/netbird-installer"&gt;NetBird installer script&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://galaxy.ansible.com/ui/repo/published/dominion_solutions/netbird/"&gt;NetBird ansible collection by Dominion Solutions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;main&lt;/code&gt; branch may be in an &lt;em&gt;unstable or even broken state&lt;/em&gt; during development. For stable versions, see &lt;a href="https://github.com/netbirdio/netbird/releases"&gt;releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Support acknowledgement&lt;/h3&gt; 
&lt;p&gt;In November 2022, NetBird joined the &lt;a href="https://www.forschung-it-sicherheit-kommunikationssysteme.de/foerderung/bekanntmachungen/startup-secure"&gt;StartUpSecure program&lt;/a&gt; sponsored by The Federal Ministry of Education and Research of The Federal Republic of Germany. Together with &lt;a href="https://cispa.de/en"&gt;CISPA Helmholtz Center for Information Security&lt;/a&gt; NetBird brings the security best practices and simplicity to private networking.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/700848/203091324-c6d311a0-22b5-4b05-a288-91cbc6cdcc46.png" alt="CISPA_Logo_BLACK_EN_RZ_RGB (1)" /&gt;&lt;/p&gt; 
&lt;h3&gt;Testimonials&lt;/h3&gt; 
&lt;p&gt;We use open-source technologies like &lt;a href="https://www.wireguard.com/"&gt;WireGuard®&lt;/a&gt;, &lt;a href="https://github.com/pion/ice"&gt;Pion ICE (WebRTC)&lt;/a&gt;, &lt;a href="https://github.com/coturn/coturn"&gt;Coturn&lt;/a&gt;, and &lt;a href="https://rosenpass.eu"&gt;Rosenpass&lt;/a&gt;. We very much appreciate the work these guys are doing and we'd greatly appreciate if you could support them in any way (e.g., by giving a star or a contribution).&lt;/p&gt; 
&lt;h3&gt;Legal&lt;/h3&gt; 
&lt;p&gt;This repository is licensed under BSD-3-Clause license that applies to all parts of the repository except for the directories management/, signal/ and relay/. Those directories are licensed under the GNU Affero General Public License version 3.0 (AGPLv3). See the respective LICENSE files inside each directory.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;WireGuard&lt;/em&gt; and the &lt;em&gt;WireGuard&lt;/em&gt; logo are &lt;a href="https://www.wireguard.com/trademark-policy/"&gt;registered trademarks&lt;/a&gt; of Jason A. Donenfeld.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>grafana/loki</title>
      <link>https://github.com/grafana/loki</link>
      <description>&lt;p&gt;Like Prometheus, but for logs.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt;&lt;img src="https://raw.githubusercontent.com/grafana/loki/main/docs/sources/logo_and_name.png" alt="Loki Logo" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/grafana/loki/actions/workflows/check.yml"&gt;&lt;img src="https://github.com/grafana/loki/actions/workflows/check.yml/badge.svg?sanitize=true" alt="Check" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/grafana/loki"&gt;&lt;img src="https://goreportcard.com/badge/github.com/grafana/loki" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://slack.grafana.com/"&gt;&lt;img src="https://img.shields.io/badge/join%20slack-%23loki-brightgreen.svg?sanitize=true" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:loki"&gt;&lt;img src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/loki.svg?sanitize=true" alt="Fuzzing Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Loki: like Prometheus, but for logs.&lt;/h1&gt; 
&lt;p&gt;Loki is a horizontally-scalable, highly-available, multi-tenant log aggregation system inspired by &lt;a href="https://prometheus.io/"&gt;Prometheus&lt;/a&gt;. It is designed to be very cost effective and easy to operate. It does not index the contents of the logs, but rather a set of labels for each log stream.&lt;/p&gt; 
&lt;p&gt;Compared to other log aggregation systems, Loki:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;does not do full text indexing on logs. By storing compressed, unstructured logs and only indexing metadata, Loki is simpler to operate and cheaper to run.&lt;/li&gt; 
 &lt;li&gt;indexes and groups log streams using the same labels you’re already using with Prometheus, enabling you to seamlessly switch between metrics and logs using the same labels that you’re already using with Prometheus.&lt;/li&gt; 
 &lt;li&gt;is an especially good fit for storing &lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt; Pod logs. Metadata such as Pod labels is automatically scraped and indexed.&lt;/li&gt; 
 &lt;li&gt;has native support in Grafana (needs Grafana v6.0).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A Loki-based logging stack consists of 3 components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/grafana/alloy"&gt;Alloy&lt;/a&gt; is agent, responsible for gathering logs and sending them to Loki.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/grafana/loki"&gt;Loki&lt;/a&gt; is the main service, responsible for storing logs and processing queries.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/grafana/grafana"&gt;Grafana&lt;/a&gt; for querying and displaying the logs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note that Alloy replaced Promtail in the stack, because Promtail is considered to be feature complete, and future development for logs collection will be in &lt;a href="https://github.com/grafana/alloy"&gt;Grafana Alloy&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Loki is like Prometheus, but for logs: we prefer a multidimensional label-based approach to indexing, and want a single-binary, easy to operate system with no dependencies. Loki differs from Prometheus by focusing on logs instead of metrics, and delivering logs via push, instead of pull.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/installation/"&gt;Installing Loki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/send-data/alloy/"&gt;Installing Alloy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/get-started/"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Upgrading&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/upgrading/"&gt;Upgrading Loki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/"&gt;Latest release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/next/"&gt;Upcoming release&lt;/a&gt;, at the tip of the main branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Commonly used sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/api/"&gt;API documentation&lt;/a&gt; for getting logs into Loki.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/getting-started/labels/"&gt;Labels&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/operations/"&gt;Operations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/clients/promtail/"&gt;Promtail&lt;/a&gt; is an agent which tails log files and pushes them to Loki.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/clients/promtail/pipelines/"&gt;Pipelines&lt;/a&gt; details the log processing pipeline.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/clients/docker-driver/"&gt;Docker Driver Client&lt;/a&gt; is a Docker plugin to send logs directly to Loki from Docker containers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/query/logcli/"&gt;LogCLI&lt;/a&gt; provides a command-line interface for querying logs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/operations/loki-canary/"&gt;Loki Canary&lt;/a&gt; monitors your Loki installation for missing logs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/operations/troubleshooting/"&gt;Troubleshooting&lt;/a&gt; presents help dealing with error messages.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/loki/latest/operations/grafana/"&gt;Loki in Grafana&lt;/a&gt; describes how to set up a Loki datasource in Grafana.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Help&lt;/h2&gt; 
&lt;p&gt;If you have any questions or feedback regarding Loki:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Search existing thread in the Grafana Labs community forum for Loki: &lt;a href="https://community.grafana.com/c/grafana-loki/"&gt;https://community.grafana.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Ask a question on the Loki Slack channel. To invite yourself to the Grafana Slack, visit &lt;a href="https://slack.grafana.com/"&gt;https://slack.grafana.com/&lt;/a&gt; and join the #loki channel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/grafana/loki/issues/new"&gt;File an issue&lt;/a&gt; for bugs, issues and feature suggestions.&lt;/li&gt; 
 &lt;li&gt;Send an email to &lt;a href="mailto:lokiproject@googlegroups.com"&gt;lokiproject@googlegroups.com&lt;/a&gt;, or use the &lt;a href="https://groups.google.com/forum/#!forum/lokiproject"&gt;web interface&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;UI issues should be filed directly in &lt;a href="https://github.com/grafana/grafana/issues/new"&gt;Grafana&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Your feedback is always welcome.&lt;/p&gt; 
&lt;h2&gt;Further Reading&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The original &lt;a href="https://docs.google.com/document/d/11tjK_lvp1-SVsFZjgOTr1vV3-q6vBAsZYIQ5ZeYBkyM/view"&gt;design doc&lt;/a&gt; for Loki is a good source for discussion of the motivation and design decisions.&lt;/li&gt; 
 &lt;li&gt;Callum Styan's March 2019 DevOpsDays Vancouver talk "&lt;a href="https://grafana.com/blog/2019/05/06/how-loki-correlates-metrics-and-logs--and-saves-you-money/"&gt;Grafana Loki: Log Aggregation for Incident Investigations&lt;/a&gt;".&lt;/li&gt; 
 &lt;li&gt;Grafana Labs blog post "&lt;a href="https://grafana.com/blog/2019/04/15/how-we-designed-loki-to-work-easily-both-as-microservices-and-as-monoliths/"&gt;How We Designed Loki to Work Easily Both as Microservices and as Monoliths&lt;/a&gt;".&lt;/li&gt; 
 &lt;li&gt;Tom Wilkie's early-2019 CNCF Paris/FOSDEM talk "&lt;a href="https://fosdem.org/2019/schedule/event/loki_prometheus_for_logs/"&gt;Grafana Loki: like Prometheus, but for logs&lt;/a&gt;" (&lt;a href="https://speakerdeck.com/grafana/grafana-loki-like-prometheus-but-for-logs"&gt;slides&lt;/a&gt;, &lt;a href="https://mirror.as35701.net/video.fosdem.org/2019/UB2.252A/loki_prometheus_for_logs.mp4"&gt;video&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;David Kaltschmidt's KubeCon 2018 talk "&lt;a href="https://kccna18.sched.com/event/GrXC/on-the-oss-path-to-full-observability-with-grafana-david-kaltschmidt-grafana-labs"&gt;On the OSS Path to Full Observability with Grafana&lt;/a&gt;" (&lt;a href="https://speakerdeck.com/davkal/on-the-path-to-full-observability-with-oss-and-launch-of-loki"&gt;slides&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=U7C5SpRtK74&amp;amp;list=PLj6h78yzYM2PZf9eA7bhWnIh_mK1vyOfU&amp;amp;index=346"&gt;video&lt;/a&gt;) on how Loki fits into a cloud-native environment.&lt;/li&gt; 
 &lt;li&gt;Goutham Veeramachaneni's blog post "&lt;a href="https://grafana.com/blog/2018/12/12/loki-prometheus-inspired-open-source-logging-for-cloud-natives/"&gt;Loki: Prometheus-inspired, open source logging for cloud natives&lt;/a&gt;" on details of the Loki architecture.&lt;/li&gt; 
 &lt;li&gt;David Kaltschmidt's blog post "&lt;a href="https://grafana.com/blog/2019/01/02/closer-look-at-grafanas-user-interface-for-loki/"&gt;Closer look at Grafana's user interface for Loki&lt;/a&gt;" on the ideas that went into the logging user interface.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Refer to &lt;a href="https://raw.githubusercontent.com/grafana/loki/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Building from source&lt;/h3&gt; 
&lt;p&gt;Loki can be run in a single host, no-dependencies mode using the following commands.&lt;/p&gt; 
&lt;p&gt;You need an up-to-date version of &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt;, we recommend using the version found in our &lt;a href="https://github.com/grafana/loki/raw/main/Makefile"&gt;Makefile&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Checkout source code
$ git clone https://github.com/grafana/loki
$ cd loki

# Build binary
$ go build ./cmd/loki

# Run executable
$ ./loki -config.file=./cmd/loki/loki-local-config.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, on Unix systems you can use &lt;code&gt;make&lt;/code&gt; to build the binary, which adds additional arguments to the &lt;code&gt;go build&lt;/code&gt; command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Build binary
$ make loki

# Run executable
$ ./cmd/loki/loki -config.file=./cmd/loki/loki-local-config.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build Promtail on non-Linux platforms, use the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ go build ./clients/cmd/promtail
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On Linux, Promtail requires the systemd headers to be installed if Journal support is enabled. To enable Journal support the go build tag flag &lt;code&gt;promtail_journal_enabled&lt;/code&gt; should be passed&lt;/p&gt; 
&lt;p&gt;With Journal support on Ubuntu, run with the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ sudo apt install -y libsystemd-dev
$ go build --tags=promtail_journal_enabled ./clients/cmd/promtail
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With Journal support on CentOS, run with the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ sudo yum install -y systemd-devel
$ go build --tags=promtail_journal_enabled ./clients/cmd/promtail
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Otherwise, to build Promtail without Journal support, run &lt;code&gt;go build&lt;/code&gt; with CGO disabled:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ CGO_ENABLED=0 go build ./clients/cmd/promtail
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Adopters&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href="https://raw.githubusercontent.com/grafana/loki/main/ADOPTERS.md"&gt;ADOPTERS.md&lt;/a&gt; for some of the organizations using Loki today. If you would like to add your organization to the list, please open a PR to add it to the list.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Grafana Loki is distributed under &lt;a href="https://raw.githubusercontent.com/grafana/loki/main/LICENSE"&gt;AGPL-3.0-only&lt;/a&gt;. For Apache-2.0 exceptions, see &lt;a href="https://raw.githubusercontent.com/grafana/loki/main/LICENSING.md"&gt;LICENSING.md&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>1Panel-dev/1Panel</title>
      <link>https://github.com/1Panel-dev/1Panel</link>
      <description>&lt;p&gt;🔥 1Panel provides an intuitive web interface and MCP Server to manage websites, files, containers, databases, and LLMs on a Linux server.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt;&lt;a href="https://1panel.pro"&gt;&lt;img src="https://resource.1panel.pro/img/1panel-logo.png" alt="1Panel" width="300" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;b&gt;Top-Rated Web-based Linux Server Management Tool&lt;/b&gt;&lt;br /&gt;Best VPS control panel&lt;br /&gt;新一代的 Linux 服务器运维管理面板&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/2462" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/2462" alt="1Panel-dev%2F1Panel | Trendshift" style="width: 240px; height: auto;" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.gnu.org/licenses/gpl-3.0.html"&gt;&lt;img src="https://shields.io/github/license/1Panel-dev/1Panel?color=%231890FF" alt="License: GPL v3" /&gt;&lt;/a&gt; &lt;a href="https://app.codacy.com/gh/1Panel-dev/1Panel?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=1Panel-dev/1Panel&amp;amp;utm_campaign=Badge_Grade_Dashboard"&gt;&lt;img src="https://app.codacy.com/project/badge/Grade/da67574fd82b473992781d1386b937ef" alt="Codacy" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/bUpUqWqdRr" target="_blank"&gt; &lt;img src="https://img.shields.io/discord/1318846410149335080?logo=discord&amp;amp;labelColor=%20%235462eb&amp;amp;logoColor=%20%23f5f5f5&amp;amp;color=%20%235462eb" alt="chat on Discord" /&gt;&lt;/a&gt; &lt;a href="https://github.com/1Panel-dev/1Panel/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/1Panel-dev/1Panel" alt="GitHub release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/1Panel-dev/1Panel"&gt;&lt;img src="https://img.shields.io/github/stars/1Panel-dev/1Panel?color=%231890FF&amp;amp;style=flat-square" alt="Stars" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/README.md"&gt;&lt;img alt="English" src="https://img.shields.io/badge/English-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.zh-Hans.md"&gt;&lt;img alt="中文(简体)" src="https://img.shields.io/badge/中文(简体)-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.ja.md"&gt;&lt;img alt="日本語" src="https://img.shields.io/badge/日本語-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.pt-br.md"&gt;&lt;img alt="Português (Brasil)" src="https://img.shields.io/badge/Português (Brasil)-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.ar.md"&gt;&lt;img alt="العربية" src="https://img.shields.io/badge/العربية-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.de.md"&gt;&lt;img alt="Deutsch" src="https://img.shields.io/badge/Deutsch-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.es.md"&gt;&lt;img alt="Español" src="https://img.shields.io/badge/Español-d9d9d9" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.fr.md"&gt;&lt;img alt="français" src="https://img.shields.io/badge/français-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.ko.md"&gt;&lt;img alt="한국어" src="https://img.shields.io/badge/한국어-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.id.md"&gt;&lt;img alt="Bahasa Indonesia" src="https://img.shields.io/badge/Bahasa Indonesia-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.zh-Hant.md"&gt;&lt;img alt="中文(繁體)" src="https://img.shields.io/badge/中文(繁體)-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.tr.md"&gt;&lt;img alt="Türkçe" src="https://img.shields.io/badge/Türkçe-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.ru.md"&gt;&lt;img alt="Русский" src="https://img.shields.io/badge/%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.ms.md"&gt;&lt;img alt="Bahasa Melayu" src="https://img.shields.io/badge/Bahasa Melayu-d9d9d9" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;1Panel is an open-source, modern web-based control panel for Linux server management.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Efficient Management&lt;/strong&gt;: Through a user-friendly web graphical interface, 1Panel enables users to effortlessly manage their Linux servers. Key features include host monitoring, file management, database administration, container management, LLMs management.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rapid Website Deployment&lt;/strong&gt;: With deep integration of the popular open-source website building software WordPress, 1Panel streamlines the process of domain binding and SSL certificate configuration, all achievable with just one click.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Application Store&lt;/strong&gt;: 1Panel curates a wide range of high-quality open-source tools and applications, facilitating easy installation and updates for its users.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security and Reliability&lt;/strong&gt;: By leveraging containerization and secure application deployment practices, 1Panel minimizes vulnerability exposure. It further enhances security through integrated firewall management and log auditing capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;One-Click Backup &amp;amp; Restore&lt;/strong&gt;: Data protection is made simple with 1Panel's one-click backup and restore functionality, supporting various cloud storage solutions to ensure data integrity and availability.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Execute the script below and follow the prompts to install 1Panel:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL https://resource.1panel.pro/quick_start.sh -o quick_start.sh &amp;amp;&amp;amp; bash quick_start.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://docs.1panel.pro/quick_start/"&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;中国用户请使用这个 &lt;a href="https://1panel.cn/docs/installation/online_installation/"&gt;安装脚本&lt;/a&gt;，其应用数量比国际版本更丰富。&lt;/p&gt; 
&lt;h2&gt;Screenshot&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://resource.1panel.pro/img/1panel.png" alt="UI Display" /&gt;&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#1Panel-dev/1Panel&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=1Panel-dev/1Panel&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Pro Edition&lt;/h2&gt; 
&lt;p&gt;Compared to the OSS Edition, 1Panel Pro Edition provides users with a wealth of enhanced features and technical support services. Enhanced features include WAF enhancement, website tamper protection, website monitoring, GPU monitoring, custom logo and theme color, etc. &lt;a href="https://1panel.pro/pricing"&gt;Click to view the detailed introduction of the Pro Edition&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security Information&lt;/h2&gt; 
&lt;p&gt;If you discover any security issues, please refer to &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under The GNU General Public License version 3 (GPLv3) (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.gnu.org/licenses/gpl-3.0.html"&gt;https://www.gnu.org/licenses/gpl-3.0.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zeromicro/go-zero</title>
      <link>https://github.com/zeromicro/go-zero</link>
      <description>&lt;p&gt;A cloud-native Go microservices framework with cli tool for productivity.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;go-zero&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img align="center" width="150px" src="https://raw.githubusercontent.com/zeromicro/zero-doc/main/doc/images/go-zero.png" /&gt; &lt;/p&gt; 
&lt;p&gt;go-zero is a web and rpc framework with lots of builtin engineering practices. It’s born to ensure the stability of the busy services with resilience design and has been serving sites with tens of millions of users for years.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://codecov.io/gh/zeromicro/go-zero"&gt;&lt;img src="https://codecov.io/gh/zeromicro/go-zero/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/zeromicro/go-zero"&gt;&lt;img src="https://goreportcard.com/badge/github.com/zeromicro/go-zero" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zeromicro/go-zero"&gt;&lt;img src="https://img.shields.io/github/v/release/zeromicro/go-zero.svg?style=flat-square" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/zeromicro/go-zero"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/zeromicro/go-zero.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://github.com/avelino/awesome-go"&gt;&lt;img src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true" alt="Awesome Go" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/4JQvC5A4Fe"&gt;&lt;img src="https://img.shields.io/discord/794530774463414292?label=chat&amp;amp;logo=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🤷‍ What is go-zero?&lt;/h2&gt; 
&lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/zeromicro/go-zero/master/readme-cn.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://trendshift.io/repositories/3263" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/3263" alt="zeromicro%2Fgo-zero | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/go-zero?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-go-zero" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=334030&amp;amp;theme=light" alt="go-zero - A web &amp;amp; rpc framework written in Go. | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;go-zero (listed in CNCF Landscape: &lt;a href="https://landscape.cncf.io/?selected=go-zero"&gt;https://landscape.cncf.io/?selected=go-zero&lt;/a&gt;) is a web and rpc framework with lots of builtin engineering practices. It’s born to ensure the stability of the busy services with resilience design and has been serving sites with tens of millions of users for years.&lt;/p&gt; 
&lt;p&gt;go-zero contains simple API description syntax and code generation tool called &lt;code&gt;goctl&lt;/code&gt;. You can generate Go, iOS, Android, Kotlin, Dart, TypeScript, JavaScript from .api files with &lt;code&gt;goctl&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Advantages of go-zero:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Improves the stability of the services with tens of millions of daily active users&lt;/li&gt; 
 &lt;li&gt;Builtin chained timeout control, concurrency control, rate limit, adaptive circuit breaker, adaptive load shedding, even no configuration needed&lt;/li&gt; 
 &lt;li&gt;Builtin middlewares also can be integrated into your frameworks&lt;/li&gt; 
 &lt;li&gt;Simple API syntax, one command to generate a couple of different languages&lt;/li&gt; 
 &lt;li&gt;Auto validate the request parameters from clients&lt;/li&gt; 
 &lt;li&gt;Plenty of builtin microservice management and concurrent toolkits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/zeromicro/zero-doc/main/doc/images/architecture-en.png" alt="Architecture" width="1500" /&gt; 
&lt;h2&gt;Backgrounds of go-zero&lt;/h2&gt; 
&lt;p&gt;In early 2018, we embarked on a transformative journey to redesign our system, transitioning from a monolithic architecture built with Java and MongoDB to a microservices architecture. After careful research and comparison, we made a deliberate choice to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Go Beyond with Golang&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Great performance&lt;/li&gt; 
   &lt;li&gt;Simple syntax&lt;/li&gt; 
   &lt;li&gt;Proven engineering efficiency&lt;/li&gt; 
   &lt;li&gt;Extreme deployment experience&lt;/li&gt; 
   &lt;li&gt;Less server resource consumption&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Self-Design Our Microservice Architecture&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Microservice architecture facilitates the creation of scalable, flexible, and maintainable software systems with independent, reusable components.&lt;/li&gt; 
   &lt;li&gt;Easy to locate the problems within microservices.&lt;/li&gt; 
   &lt;li&gt;Easy to extend the features by adding or modifying specific microservices without impacting the entire system.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Design considerations on go-zero&lt;/h2&gt; 
&lt;p&gt;By designing the microservice architecture, we expected to ensure stability, as well as productivity. And from just the beginning, we have the following design principles:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Keep it simple&lt;/li&gt; 
 &lt;li&gt;High availability&lt;/li&gt; 
 &lt;li&gt;Stable on high concurrency&lt;/li&gt; 
 &lt;li&gt;Easy to extend&lt;/li&gt; 
 &lt;li&gt;Resilience design, failure-oriented programming&lt;/li&gt; 
 &lt;li&gt;Try best to be friendly to the business logic development, encapsulate the complexity&lt;/li&gt; 
 &lt;li&gt;One thing, one way&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;After almost half a year, we finished the transfer from a monolithic system to microservice system and deployed on August 2018. The new system guaranteed business growth and system stability.&lt;/p&gt; 
&lt;h2&gt;The implementation and features of go-zero&lt;/h2&gt; 
&lt;p&gt;go-zero is a web and rpc framework that integrates lots of engineering practices. The features are mainly listed below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Powerful tool included, less code to write&lt;/li&gt; 
 &lt;li&gt;Simple interfaces&lt;/li&gt; 
 &lt;li&gt;Fully compatible with net/http&lt;/li&gt; 
 &lt;li&gt;Middlewares are supported, easy to extend&lt;/li&gt; 
 &lt;li&gt;High performance&lt;/li&gt; 
 &lt;li&gt;Failure-oriented programming, resilience design&lt;/li&gt; 
 &lt;li&gt;Builtin service discovery, load balancing&lt;/li&gt; 
 &lt;li&gt;Builtin concurrency control, adaptive circuit breaker, adaptive load shedding, auto-trigger, auto recover&lt;/li&gt; 
 &lt;li&gt;Auto validation of API request parameters&lt;/li&gt; 
 &lt;li&gt;Chained timeout control&lt;/li&gt; 
 &lt;li&gt;Auto management of data caching&lt;/li&gt; 
 &lt;li&gt;Call tracing, metrics, and monitoring&lt;/li&gt; 
 &lt;li&gt;High concurrency protected&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As below, go-zero protects the system with a couple of layers and mechanisms:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/zeromicro/zero-doc/main/doc/images/resilience-en.png" alt="Resilience" /&gt;&lt;/p&gt; 
&lt;h2&gt;The simplified architecture that we use with go-zero&lt;/h2&gt; 
&lt;img width="1067" alt="image" src="https://user-images.githubusercontent.com/1918356/171880372-5010d846-e8b1-4942-8fe2-e2bbb584f762.png" /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Run the following command under your project:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;go get -u github.com/zeromicro/go-zero
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Full examples can be checked out from below:&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/zeromicro/zero-doc/raw/main/doc/shorturl-en.md"&gt;Rapid development of microservice systems&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/zeromicro/zero-doc/raw/main/docs/zero/bookstore-en.md"&gt;Rapid development of microservice systems - multiple RPCs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install goctl&lt;/p&gt; &lt;p&gt;&lt;code&gt;goctl&lt;/code&gt;can be read as &lt;code&gt;go control&lt;/code&gt;. &lt;code&gt;goctl&lt;/code&gt; means not to be controlled by code, instead, we control it. The inside &lt;code&gt;go&lt;/code&gt; is not &lt;code&gt;golang&lt;/code&gt;. At the very beginning, I was expecting it to help us improve productivity, and make our lives easier.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;# for Go
go install github.com/zeromicro/go-zero/tools/goctl@latest

# For Mac
brew install goctl

# docker for all platforms
docker pull kevinwan/goctl
# run goctl
docker run --rm -it -v `pwd`:/app kevinwan/goctl --help
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;make sure goctl is executable and in your $PATH.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create the API file, like greet.api, you can install the plugin of goctl in vs code, api syntax is supported.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;type (
  Request {
    Name string `path:"name,options=[you,me]"` // parameters are auto validated
  }

  Response {
    Message string `json:"message"`
  }
)

service greet-api {
  @handler GreetHandler
  get /greet/from/:name(Request) returns (Response)
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;the .api files also can be generated by goctl, like below:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;goctl api -o greet.api
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Generate the go server-side code&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;goctl api go -api greet.api -dir greet
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;the generated files look like:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-Plain"&gt;├── greet
│&amp;nbsp;&amp;nbsp; ├── etc
│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; └── greet-api.yaml        // configuration file
│&amp;nbsp;&amp;nbsp; ├── greet.go                  // main file
│&amp;nbsp;&amp;nbsp; └── internal
│&amp;nbsp;&amp;nbsp;     ├── config
│&amp;nbsp;&amp;nbsp;     │&amp;nbsp;&amp;nbsp; └── config.go         // configuration definition
│&amp;nbsp;&amp;nbsp;     ├── handler
│&amp;nbsp;&amp;nbsp;     │&amp;nbsp;&amp;nbsp; ├── greethandler.go   // get/put/post/delete routes are defined here
│&amp;nbsp;&amp;nbsp;     │&amp;nbsp;&amp;nbsp; └── routes.go         // routes list
│&amp;nbsp;&amp;nbsp;     ├── logic
│&amp;nbsp;&amp;nbsp;     │&amp;nbsp;&amp;nbsp; └── greetlogic.go     // request logic can be written here
│&amp;nbsp;&amp;nbsp;     ├── svc
│&amp;nbsp;&amp;nbsp;     │&amp;nbsp;&amp;nbsp; └── servicecontext.go // service context, mysql/redis can be passed in here
│&amp;nbsp;&amp;nbsp;     └── types
│&amp;nbsp;&amp;nbsp;         └── types.go          // request/response defined here
└── greet.api                     // api description file
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;the generated code can be run directly:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;cd greet
go mod tidy
go run greet.go -f etc/greet-api.yaml
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;by default, it’s listening on port 8888, while it can be changed in the configuration file.&lt;/p&gt; &lt;p&gt;you can check it by curl:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;curl -i http://localhost:8888/greet/from/you
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;the response looks like below:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-http"&gt;HTTP/1.1 200 OK
Date: Sun, 30 Aug 2020 15:32:35 GMT
Content-Length: 0
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Write the business logic code&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;the dependencies can be passed into the logic within servicecontext.go, like mysql, redis, etc.&lt;/li&gt; 
   &lt;li&gt;add the logic code in a logic package according to .api file&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Generate code like Java, TypeScript, Dart, JavaScript, etc. just from the api file&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;goctl api java -api greet.api -dir greet
goctl api dart -api greet.api -dir greet
...
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Benchmark&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/zeromicro/zero-doc/main/doc/images/benchmark.png" alt="benchmark" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/smallnest/go-web-framework-benchmark"&gt;Checkout the test code&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://go-zero.dev/"&gt;Documents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeromicro/zero-doc/raw/main/doc/shorturl-en.md"&gt;Rapid development of microservice systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeromicro/zero-doc/raw/main/docs/zero/bookstore-en.md"&gt;Rapid development of microservice systems - multiple RPCs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeromicro/zero-examples"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chat group&lt;/h2&gt; 
&lt;p&gt;Join the chat via &lt;a href="https://discord.gg/4JQvC5A4Fe"&gt;https://discord.gg/4JQvC5A4Fe&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Cloud Native Landscape&lt;/h2&gt; 
&lt;p float="left"&gt; &lt;img src="https://raw.githubusercontent.com/zeromicro/zero-doc/main/doc/images/cncf-logo.svg?sanitize=true" width="200" /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://raw.githubusercontent.com/zeromicro/zero-doc/main/doc/images/cncf-landscape-logo.svg?sanitize=true" width="150" /&gt; &lt;/p&gt; 
&lt;p&gt;go-zero enlisted in the &lt;a href="https://landscape.cncf.io/?selected=go-zero"&gt;CNCF Cloud Native Landscape&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Give a Star! ⭐&lt;/h2&gt; 
&lt;p&gt;If you like this project or are using it to learn or start your own solution, give it a star to get updates on new releases. Your support matters!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ollama/ollama</title>
      <link>https://github.com/ollama/ollama</link>
      <description>&lt;p&gt;Get up and running with OpenAI gpt-oss, DeepSeek-R1, Gemma 3 and other models.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt;
  &amp;nbsp; 
 &lt;a href="https://ollama.com"&gt; &lt;img alt="ollama" width="240" src="https://github.com/ollama/ollama/assets/3325447/0d0b44e2-8f4a-4e99-9b52-a5c1c741c8f7" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h1&gt;Ollama&lt;/h1&gt; 
&lt;p&gt;Get up and running with large language models.&lt;/p&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://ollama.com/download/Ollama.dmg"&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://ollama.com/download/OllamaSetup.exe"&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl -fsSL https://ollama.com/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/ollama/ollama/raw/main/docs/linux.md"&gt;Manual install instructions&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;The official &lt;a href="https://hub.docker.com/r/ollama/ollama"&gt;Ollama Docker image&lt;/a&gt; &lt;code&gt;ollama/ollama&lt;/code&gt; is available on Docker Hub.&lt;/p&gt; 
&lt;h3&gt;Libraries&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama/ollama-python"&gt;ollama-python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama/ollama-js"&gt;ollama-js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/ollama"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reddit.com/r/ollama"&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;To run and chat with &lt;a href="https://ollama.com/library/gemma3"&gt;Gemma 3&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama run gemma3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Model library&lt;/h2&gt; 
&lt;p&gt;Ollama supports a list of models available on &lt;a href="https://ollama.com/library" title="ollama model library"&gt;ollama.com/library&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Here are some example models that can be downloaded:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Model&lt;/th&gt; 
   &lt;th&gt;Parameters&lt;/th&gt; 
   &lt;th&gt;Size&lt;/th&gt; 
   &lt;th&gt;Download&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;1B&lt;/td&gt; 
   &lt;td&gt;815MB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:1b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;4B&lt;/td&gt; 
   &lt;td&gt;3.3GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;12B&lt;/td&gt; 
   &lt;td&gt;8.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:12b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;27B&lt;/td&gt; 
   &lt;td&gt;17GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:27b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;QwQ&lt;/td&gt; 
   &lt;td&gt;32B&lt;/td&gt; 
   &lt;td&gt;20GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run qwq&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek-R1&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.7GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run deepseek-r1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek-R1&lt;/td&gt; 
   &lt;td&gt;671B&lt;/td&gt; 
   &lt;td&gt;404GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run deepseek-r1:671b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 4&lt;/td&gt; 
   &lt;td&gt;109B&lt;/td&gt; 
   &lt;td&gt;67GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama4:scout&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 4&lt;/td&gt; 
   &lt;td&gt;400B&lt;/td&gt; 
   &lt;td&gt;245GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama4:maverick&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.3&lt;/td&gt; 
   &lt;td&gt;70B&lt;/td&gt; 
   &lt;td&gt;43GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2&lt;/td&gt; 
   &lt;td&gt;3B&lt;/td&gt; 
   &lt;td&gt;2.0GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2&lt;/td&gt; 
   &lt;td&gt;1B&lt;/td&gt; 
   &lt;td&gt;1.3GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2:1b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2 Vision&lt;/td&gt; 
   &lt;td&gt;11B&lt;/td&gt; 
   &lt;td&gt;7.9GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2-vision&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2 Vision&lt;/td&gt; 
   &lt;td&gt;90B&lt;/td&gt; 
   &lt;td&gt;55GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2-vision:90b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.1&lt;/td&gt; 
   &lt;td&gt;8B&lt;/td&gt; 
   &lt;td&gt;4.7GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.1&lt;/td&gt; 
   &lt;td&gt;405B&lt;/td&gt; 
   &lt;td&gt;231GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.1:405b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Phi 4&lt;/td&gt; 
   &lt;td&gt;14B&lt;/td&gt; 
   &lt;td&gt;9.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run phi4&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Phi 4 Mini&lt;/td&gt; 
   &lt;td&gt;3.8B&lt;/td&gt; 
   &lt;td&gt;2.5GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run phi4-mini&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mistral&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run mistral&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Moondream 2&lt;/td&gt; 
   &lt;td&gt;1.4B&lt;/td&gt; 
   &lt;td&gt;829MB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run moondream&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Neural Chat&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run neural-chat&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Starling&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run starling-lm&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Code Llama&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;3.8GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run codellama&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 2 Uncensored&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;3.8GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama2-uncensored&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LLaVA&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.5GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llava&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Granite-3.3&lt;/td&gt; 
   &lt;td&gt;8B&lt;/td&gt; 
   &lt;td&gt;4.9GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run granite3.3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You should have at least 8 GB of RAM available to run the 7B models, 16 GB to run the 13B models, and 32 GB to run the 33B models.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Customize a model&lt;/h2&gt; 
&lt;h3&gt;Import from GGUF&lt;/h3&gt; 
&lt;p&gt;Ollama supports importing GGUF models in the Modelfile:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create a file named &lt;code&gt;Modelfile&lt;/code&gt;, with a &lt;code&gt;FROM&lt;/code&gt; instruction with the local filepath to the model you want to import.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;FROM ./vicuna-33b.Q4_0.gguf
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create the model in Ollama&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;ollama create example -f Modelfile
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the model&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;ollama run example
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Import from Safetensors&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/ollama/ollama/main/docs/import.md"&gt;guide&lt;/a&gt; on importing models for more information.&lt;/p&gt; 
&lt;h3&gt;Customize a prompt&lt;/h3&gt; 
&lt;p&gt;Models from the Ollama library can be customized with a prompt. For example, to customize the &lt;code&gt;llama3.2&lt;/code&gt; model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama pull llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a &lt;code&gt;Modelfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM llama3.2

# set the temperature to 1 [higher is more creative, lower is more coherent]
PARAMETER temperature 1

# set the system message
SYSTEM """
You are Mario from Super Mario Bros. Answer as Mario, the assistant, only.
"""
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create and run the model:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ollama create mario -f ./Modelfile
ollama run mario
&amp;gt;&amp;gt;&amp;gt; hi
Hello! It's your friend Mario.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on working with a Modelfile, see the &lt;a href="https://raw.githubusercontent.com/ollama/ollama/main/docs/modelfile.md"&gt;Modelfile&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;CLI Reference&lt;/h2&gt; 
&lt;h3&gt;Create a model&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ollama create&lt;/code&gt; is used to create a model from a Modelfile.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama create mymodel -f ./Modelfile
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pull a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama pull llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This command can also be used to update a local model. Only the diff will be pulled.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Remove a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama rm llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Copy a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama cp llama3.2 my-model
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multiline input&lt;/h3&gt; 
&lt;p&gt;For multiline input, you can wrap text with &lt;code&gt;"""&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; """Hello,
... world!
... """
I'm a basic program that prints the famous "Hello, world!" message to the console.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multimodal models&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;ollama run llava "What's in this image? /Users/jmorgan/Desktop/smile.png"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: The image features a yellow smiley face, which is likely the central focus of the picture.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Pass the prompt as an argument&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama run llama3.2 "Summarize this file: $(cat README.md)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: Ollama is a lightweight, extensible framework for building and running language models on the local machine. It provides a simple API for creating, running, and managing models, as well as a library of pre-built models that can be easily used in a variety of applications.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Show model information&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama show llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;List models on your computer&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama list
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;List which models are currently loaded&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama ps
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stop a model which is currently running&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama stop llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start Ollama&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ollama serve&lt;/code&gt; is used when you want to start ollama without running the desktop application.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/ollama/ollama/raw/main/docs/development.md"&gt;developer guide&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Running local builds&lt;/h3&gt; 
&lt;p&gt;Next, start the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./ollama serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, in a separate shell, run a model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./ollama run llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;REST API&lt;/h2&gt; 
&lt;p&gt;Ollama has a REST API for running and managing models.&lt;/p&gt; 
&lt;h3&gt;Generate a response&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl http://localhost:11434/api/generate -d '{
  "model": "llama3.2",
  "prompt":"Why is the sky blue?"
}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chat with a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl http://localhost:11434/api/chat -d '{
  "model": "llama3.2",
  "messages": [
    { "role": "user", "content": "why is the sky blue?" }
  ]
}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/ollama/ollama/main/docs/api.md"&gt;API documentation&lt;/a&gt; for all endpoints.&lt;/p&gt; 
&lt;h2&gt;Community Integrations&lt;/h2&gt; 
&lt;h3&gt;Web &amp;amp; Desktop&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/open-webui/open-webui"&gt;Open WebUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/swift-chat"&gt;SwiftChat (macOS with ReactNative)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AugustDev/enchanted"&gt;Enchanted (macOS native)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fmaclen/hollama"&gt;Hollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ParisNeo/lollms-webui"&gt;Lollms-Webui&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/danny-avila/LibreChat"&gt;LibreChat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bionic-gpt/bionic-gpt"&gt;Bionic GPT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rtcfirefly/ollama-ui"&gt;HTML UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jikkuatwork/saddle"&gt;Saddle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tagspaces.org"&gt;TagSpaces&lt;/a&gt; (A platform for file-based apps, &lt;a href="https://docs.tagspaces.org/ai/"&gt;utilizing Ollama&lt;/a&gt; for the generation of tags and descriptions)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivanfioravanti/chatbot-ollama"&gt;Chatbot UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mckaywrigley/chatbot-ui"&gt;Chatbot UI v2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama-interface/Ollama-Gui?tab=readme-ov-file"&gt;Typescript UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richawo/minimal-llm-ui"&gt;Minimalistic React UI for Ollama Models&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinhermawan/Ollamac"&gt;Ollamac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/enricoros/big-AGI"&gt;big-AGI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cheshire-cat-ai/core"&gt;Cheshire Cat assistant framework&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/semperai/amica"&gt;Amica&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BruceMacD/chatd"&gt;chatd&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kghandour/Ollama-SwiftUI"&gt;Ollama-SwiftUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langgenius/dify"&gt;Dify.AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mindmac.app"&gt;MindMac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jakobhoeg/nextjs-ollama-llm-ui"&gt;NextJS Web Interface for Ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://msty.app"&gt;Msty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Bin-Huang/Chatbox"&gt;Chatbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tgraupmann/WinForm_Ollama_Copilot"&gt;WinForm Ollama Copilot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web"&gt;NextChat&lt;/a&gt; with &lt;a href="https://docs.nextchat.dev/models/ollama"&gt;Get Started Doc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmo80/alpaca-webui"&gt;Alpaca WebUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/enoch1118/ollamaGUI"&gt;OllamaGUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/InternLM/OpenAOE"&gt;OpenAOE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leonid20000/OdinRunes"&gt;Odin Runes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mrdjohnson/llm-x"&gt;LLM-X&lt;/a&gt; (Progressive Web App)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Mintplex-Labs/anything-llm"&gt;AnythingLLM (Docker + MacOs/Windows/Linux native app)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_basic_chat"&gt;Ollama Basic Chat: Uses HyperDiv Reactive UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drazdra/ollama-chats"&gt;Ollama-chats RPG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://intellibar.app/"&gt;IntelliBar&lt;/a&gt; (AI-powered assistant for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AliAhmedNada/jirapt"&gt;Jirapt&lt;/a&gt; (Jira Integration to generate issues, tasks, epics)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AliAhmedNada/ojira"&gt;ojira&lt;/a&gt; (Jira chrome plugin to easily generate descriptions for tasks)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reid41/QA-Pilot"&gt;QA-Pilot&lt;/a&gt; (Interactive chat tool that can leverage Ollama models for rapid understanding and navigation of GitHub code repositories)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sugarforever/chat-ollama"&gt;ChatOllama&lt;/a&gt; (Open Source Chatbot based on Ollama with Knowledge Bases)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Nagi-ovo/CRAG-Ollama-Chat"&gt;CRAG Ollama Chat&lt;/a&gt; (Simple Web Search with Corrective RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/infiniflow/ragflow"&gt;RAGFlow&lt;/a&gt; (Open-source Retrieval-Augmented Generation engine based on deep document understanding)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StreamDeploy-DevRel/streamdeploy-llm-app-scaffold"&gt;StreamDeploy&lt;/a&gt; (LLM Application Scaffold)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/swuecho/chat"&gt;chat&lt;/a&gt; (chat web app for teams)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lobehub/lobe-chat"&gt;Lobe Chat&lt;/a&gt; with &lt;a href="https://lobehub.com/docs/self-hosting/examples/ollama"&gt;Integrating Doc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/datvodinh/rag-chatbot.git"&gt;Ollama RAG Chatbot&lt;/a&gt; (Local Chat with multiple PDFs using Ollama and RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.nurgo-software.com/products/brainsoup"&gt;BrainSoup&lt;/a&gt; (Flexible native client with RAG &amp;amp; multi-agent automation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Renset/macai"&gt;macai&lt;/a&gt; (macOS client for Ollama, ChatGPT, and other compatible API back-ends)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/josStorer/RWKV-Runner"&gt;RWKV-Runner&lt;/a&gt; (RWKV offline LLM deployment tool, also usable as a client for ChatGPT and Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dezoito/ollama-grid-search"&gt;Ollama Grid Search&lt;/a&gt; (app to evaluate and compare models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Otacon/olpaka"&gt;Olpaka&lt;/a&gt; (User-friendly Flutter Web App for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://casibase.org"&gt;Casibase&lt;/a&gt; (An open source AI knowledge base and dialogue system combining the latest RAG, SSO, ollama support, and multiple large language models.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CrazyNeil/OllamaSpring"&gt;OllamaSpring&lt;/a&gt; (Ollama Client for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kartikm7/llocal"&gt;LLocal.in&lt;/a&gt; (Easy to use Electron Desktop Client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dcSpark/shinkai-apps"&gt;Shinkai Desktop&lt;/a&gt; (Two click install Local AI using Ollama + Files + RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeyoyt/ailama"&gt;AiLama&lt;/a&gt; (A Discord User App that allows you to interact with Ollama anywhere in Discord)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_mesop/"&gt;Ollama with Google Mesop&lt;/a&gt; (Mesop Chat Client implementation with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SciPhi-AI/R2R"&gt;R2R&lt;/a&gt; (Open-source RAG engine)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elearningshow/ollama-kis"&gt;Ollama-Kis&lt;/a&gt; (A simple easy-to-use GUI with sample custom LLM for Drivers Education)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://opengpa.org"&gt;OpenGPA&lt;/a&gt; (Open-source offline-first Enterprise Agentic Application)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mateuszmigas/painting-droid"&gt;Painting Droid&lt;/a&gt; (Painting app with AI integrations)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kerlig.com/"&gt;Kerlig AI&lt;/a&gt; (AI writing assistant for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MindWorkAI/AI-Studio"&gt;AI Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gyopak/sidellama"&gt;Sidellama&lt;/a&gt; (browser-based LLM client)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trypromptly/LLMStack"&gt;LLMStack&lt;/a&gt; (No-code multi-agent framework to build LLM agents and workflows)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://boltai.com"&gt;BoltAI for Mac&lt;/a&gt; (AI Chat Client for Mac)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/av/harbor"&gt;Harbor&lt;/a&gt; (Containerized LLM Toolkit with Ollama as default backend)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/szczyglis-dev/py-gpt"&gt;PyGPT&lt;/a&gt; (AI desktop assistant for Linux, Windows, and Mac)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jeffser/Alpaca"&gt;Alpaca&lt;/a&gt; (An Ollama client application for Linux and macOS made with GTK4 and Adwaita)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Significant-Gravitas/AutoGPT/raw/master/docs/content/platform/ollama.md"&gt;AutoGPT&lt;/a&gt; (AutoGPT Ollama integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jonathanhecl.com/go-crew/"&gt;Go-CREW&lt;/a&gt; (Powerful Offline RAG in Golang)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openvmp/partcad/"&gt;PartCAD&lt;/a&gt; (CAD model generation with OpenSCAD and CadQuery)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama4j/ollama4j-web-ui"&gt;Ollama4j Web UI&lt;/a&gt; - Java-based Web UI for Ollama built with Vaadin, Spring Boot, and Ollama4j&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kspviswa/pyOllaMx"&gt;PyOllaMx&lt;/a&gt; - macOS application capable of chatting with both Ollama and Apple MLX models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cline/cline"&gt;Cline&lt;/a&gt; - Formerly known as Claude Dev is a VSCode extension for multi-file/whole-repo coding&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kangfenmao/cherry-studio"&gt;Cherry Studio&lt;/a&gt; (Desktop client with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1runeberg/confichat"&gt;ConfiChat&lt;/a&gt; (Lightweight, standalone, multi-platform, and privacy-focused LLM chat interface with optional encryption)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nickthecook/archyve"&gt;Archyve&lt;/a&gt; (RAG-enabling document library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama-crew-mesop"&gt;crewAI with Mesop&lt;/a&gt; (Mesop Web Interface to run crewAI with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chyok/ollama-gui"&gt;Tkinter-based client&lt;/a&gt; (Python tkinter-based Client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trendy-design/llmchat"&gt;LLMChat&lt;/a&gt; (Privacy focused, 100% local, intuitive all-in-one chat interface)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Leon-Sander/Local-Multimodal-AI-Chat"&gt;Local Multimodal AI Chat&lt;/a&gt; (Ollama-based LLM Chat with support for multiple features, including PDF RAG, voice chat, image-based interactions, and integration with OpenAI.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xark-argo/argo"&gt;ARGO&lt;/a&gt; (Locally download and run Ollama and Huggingface models with RAG and deep research on Mac/Windows/Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EliasPereirah/OrionChat"&gt;OrionChat&lt;/a&gt; - OrionChat is a web interface for chatting with different AI providers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bklieger-groq/g1"&gt;G1&lt;/a&gt; (Prototype of using prompting strategies to improve the LLM's reasoning through o1-like reasoning chains.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lemonit-eric-mao/ollama-web-management"&gt;Web management&lt;/a&gt; (Web management page)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/promptery/promptery"&gt;Promptery&lt;/a&gt; (desktop client for Ollama.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JHubi1/ollama-app"&gt;Ollama App&lt;/a&gt; (Modern and easy-to-use multi-platform client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/annilq/chat-ollama"&gt;chat-ollama&lt;/a&gt; (a React Native client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tcsenpai/spacellama"&gt;SpaceLlama&lt;/a&gt; (Firefox and Chrome extension to quickly summarize web pages with ollama in a sidebar)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tcsenpai/youlama"&gt;YouLama&lt;/a&gt; (Webapp to quickly summarize any YouTube video, supporting Invidious as well)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tcsenpai/dualmind"&gt;DualMind&lt;/a&gt; (Experimental app allowing two models to talk to each other in the terminal or in a web interface)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h1ddenpr0cess20/ollamarama-matrix"&gt;ollamarama-matrix&lt;/a&gt; (Ollama chatbot for the Matrix chat protocol)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anan1213095357/ollama-chat-app"&gt;ollama-chat-app&lt;/a&gt; (Flutter-based chat app)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.perfectmemory.ai/"&gt;Perfect Memory AI&lt;/a&gt; (Productivity AI assists personalized by what you have seen on your screen, heard, and said in the meetings)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexastack/hexabot"&gt;Hexabot&lt;/a&gt; (A conversational AI builder)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/reddit_analyzer"&gt;Reddit Rate&lt;/a&gt; (Search and Rate Reddit topics with a weighted summation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adarshM84/OpenTalkGpt"&gt;OpenTalkGpt&lt;/a&gt; (Chrome Extension to manage open-source models supported by Ollama, create custom models, and chat with models from a user-friendly UI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vinhnx/vt.ai"&gt;VT&lt;/a&gt; (A minimal multimodal AI chat app, with dynamic conversation routing. Supports local models via Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nosia-ai/nosia"&gt;Nosia&lt;/a&gt; (Easy to install and use RAG platform based on Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nbonamy/witsy"&gt;Witsy&lt;/a&gt; (An AI Desktop application available for Mac/Windows/Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/US-Artificial-Intelligence/abbey"&gt;Abbey&lt;/a&gt; (A configurable AI interface server with notebooks, document storage, and YouTube support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dmayboroda/minima"&gt;Minima&lt;/a&gt; (RAG with on-premises or fully local workflow)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AidfulAI/aidful-ollama-model-delete"&gt;aidful-ollama-model-delete&lt;/a&gt; (User interface for simplified model cleanup)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ItzCrazyKns/Perplexica"&gt;Perplexica&lt;/a&gt; (An AI-powered search engine &amp;amp; an open-source alternative to Perplexity AI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oslook/ollama-webui"&gt;Ollama Chat WebUI for Docker &lt;/a&gt; (Support for local docker deployment, lightweight ollama webui)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/ai-tooklit/ollama-docs"&gt;AI Toolkit for Visual Studio Code&lt;/a&gt; (Microsoft-official VSCode extension to chat, test, evaluate models with Ollama support, and use them in your AI applications.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anilkay/MinimalNextOllamaChat"&gt;MinimalNextOllamaChat&lt;/a&gt; (Minimal Web UI for Chat and Model Control)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TilmanGriesel/chipper"&gt;Chipper&lt;/a&gt; AI interface for tinkerers (Ollama, Haystack RAG, Python)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CosmicEventHorizon/ChibiChat"&gt;ChibiChat&lt;/a&gt; (Kotlin-based Android app to chat with Ollama and Koboldcpp API endpoints)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qusaismael/localllm"&gt;LocalLLM&lt;/a&gt; (Minimal Web-App to run ollama models on it with a GUI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buiducnhat/ollamazing"&gt;Ollamazing&lt;/a&gt; (Web extension to run Ollama models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benhaotang/OpenDeepResearcher-via-searxng"&gt;OpenDeepResearcher-via-searxng&lt;/a&gt; (A Deep Research equivalent endpoint with Ollama support for running locally)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AIDotNet/AntSK"&gt;AntSK&lt;/a&gt; (Out-of-the-box &amp;amp; Adaptable RAG Chatbot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1Panel-dev/MaxKB/"&gt;MaxKB&lt;/a&gt; (Ready-to-use &amp;amp; flexible RAG Chatbot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/danielekp/yla"&gt;yla&lt;/a&gt; (Web interface to freely interact with your customized models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RockChinQ/LangBot"&gt;LangBot&lt;/a&gt; (LLM-based instant messaging bots platform, with Agents, RAG features, supports multiple platforms)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1Panel-dev/1Panel/"&gt;1Panel&lt;/a&gt; (Web-based Linux Server Management Tool)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Soulter/AstrBot/"&gt;AstrBot&lt;/a&gt; (User-friendly LLM-based multi-platform chatbot with a WebUI, supporting RAG, LLM agents, and plugins integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ibrahimcetin/reins"&gt;Reins&lt;/a&gt; (Easily tweak parameters, customize system prompts per chat, and enhance your AI experiments with reasoning model support.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aharon-Bensadoun/Flufy"&gt;Flufy&lt;/a&gt; (A beautiful chat interface for interacting with Ollama's API. Built with React, TypeScript, and Material-UI.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeozeozeo/ellama"&gt;Ellama&lt;/a&gt; (Friendly native app to chat with an Ollama instance)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mediar-ai/screenpipe"&gt;screenpipe&lt;/a&gt; Build agents powered by your screen history&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hengkysteen/ollamb"&gt;Ollamb&lt;/a&gt; (Simple yet rich in features, cross-platform built with Flutter and designed for Ollama. Try the &lt;a href="https://hengkysteen.github.io/demo/ollamb/"&gt;web demo&lt;/a&gt;.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Writeopia/Writeopia"&gt;Writeopia&lt;/a&gt; (Text editor with integration with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AppFlowy-IO/AppFlowy"&gt;AppFlowy&lt;/a&gt; (AI collaborative workspace with Ollama, cross-platform and self-hostable)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cushydigit/lumina.git"&gt;Lumina&lt;/a&gt; (A lightweight, minimal React.js frontend for interacting with Ollama servers)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/tiny-notepad"&gt;Tiny Notepad&lt;/a&gt; (A lightweight, notepad-like interface to chat with ollama available on PyPI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hellotunamayo/macLlama"&gt;macLlama (macOS native)&lt;/a&gt; (A native macOS GUI application for interacting with Ollama models, featuring a chat interface.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philberndt/GPTranslate"&gt;GPTranslate&lt;/a&gt; (A fast and lightweight, AI powered desktop translation application written with Rust and Tauri. Features real-time translation with OpenAI/Azure/Ollama.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NGC13009/ollama-launcher"&gt;ollama launcher&lt;/a&gt; (A launcher for Ollama, aiming to provide users with convenient functions such as ollama server launching, management, or configuration.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aj-Seven/ai-hub"&gt;ai-hub&lt;/a&gt; (AI Hub supports multiple models via API keys and Chat support via Ollama API.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/mayan-edms/mayan-edms"&gt;Mayan EDMS&lt;/a&gt; (Open source document management system to organize, tag, search, and automate your files with powerful Ollama driven workflows.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/doolijb/serene-pub"&gt;Serene Pub&lt;/a&gt; (Beginner friendly, open source AI Roleplaying App for Windows, Mac OS and Linux. Search, download and use models with Ollama all inside the app.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aqerd/andes"&gt;Andes&lt;/a&gt; (A Visual Studio Code extension that provides a local UI interface for Ollama models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KashyapTan/clueless"&gt;Clueless&lt;/a&gt; (Open Source &amp;amp; Local Cluely: A desktop application LLM assistant to help you talk to anything on your screen using locally served Ollama models. Also undetectable to screenshare)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carbonatedWaterOrg/ollama-co2"&gt;ollama-co2&lt;/a&gt; (FastAPI web interface for monitoring and managing local and remote Ollama servers with real-time model monitoring and concurrent downloads)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/run/docs/tutorials/gpu-gemma2-with-ollama"&gt;Google Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fly.io/docs/python/do-more/add-ollama/"&gt;Fly.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.koyeb.com/deploy/ollama"&gt;Koyeb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Terminal&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggozad/oterm"&gt;oterm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s-kostyaev/ellama"&gt;Ellama Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zweifisch/ollama"&gt;Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paradoxical-dev/neollama"&gt;neollama&lt;/a&gt; UI client for interacting with models from within Neovim&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/David-Kunz/gen.nvim"&gt;gen.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nomnivore/ollama.nvim"&gt;ollama.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marco-souza/ollero.nvim"&gt;ollero.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gerazov/ollama-chat.nvim"&gt;ollama-chat.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huynle/ogpt.nvim"&gt;ogpt.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/karthink/gptel"&gt;gptel Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dustinblackman/oatmeal"&gt;Oatmeal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pgibler/cmdh"&gt;cmdh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/npahlfer/ooo"&gt;ooo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reid41/shell-pilot"&gt;shell-pilot&lt;/a&gt;(Interact with models via pure shell scripts on Linux or macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pythops/tenere"&gt;tenere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/taketwo/llm-ollama"&gt;llm-ollama&lt;/a&gt; for &lt;a href="https://llm.datasette.io/en/stable/"&gt;Datasette's LLM CLI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anaisbetts/typechat-cli"&gt;typechat-cli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/djcopley/ShellOracle"&gt;ShellOracle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yusufcanb/tlm"&gt;tlm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ericcurtin/podman-ollama"&gt;podman-ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sammcj/gollama"&gt;gollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paulrobello/parllama"&gt;ParLlama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cognitivetech/ollama-ebook-summary/"&gt;Ollama eBook Summary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_moe"&gt;Ollama Mixture of Experts (MOE) in 50 lines of code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pepo-ec/vim-intelligence-bridge"&gt;vim-intelligence-bridge&lt;/a&gt; Simple interaction of "Ollama" with the Vim editor&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x-cmd.com/mod/ollama"&gt;x-cmd ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drunkwcodes/bb7"&gt;bb7&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marcusziade/Swollama"&gt;SwollamaCLI&lt;/a&gt; bundled with the Swollama Swift package. &lt;a href="https://github.com/marcusziade/Swollama?tab=readme-ov-file#cli-usage"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sigoden/aichat"&gt;aichat&lt;/a&gt; All-in-one LLM CLI tool featuring Shell Assistant, Chat-REPL, RAG, AI tools &amp;amp; agents, with access to OpenAI, Claude, Gemini, Ollama, Groq, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rrg92/powershai"&gt;PowershAI&lt;/a&gt; PowerShell module that brings AI to terminal on Windows, including support for Ollama&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Abyss-c0re/deepshell"&gt;DeepShell&lt;/a&gt; Your self-hosted AI assistant. Interactive Shell, Files and Folders analysis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyproto/orbiton"&gt;orbiton&lt;/a&gt; Configuration-free text editor and IDE with support for tab completion with Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/molbal/orca-cli"&gt;orca-cli&lt;/a&gt; Ollama Registry CLI Application - Browse, pull, and download models from Ollama Registry in your terminal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonathanhecl/gguf-to-ollama"&gt;GGUF-to-Ollama&lt;/a&gt; - Importing GGUF to Ollama made easy (multiplatform)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_strands"&gt;AWS-Strands-With-Ollama&lt;/a&gt; - AWS Strands Agents with Ollama Examples&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/attogram/ollama-multirun"&gt;ollama-multirun&lt;/a&gt; - A bash shell script to run a single prompt against any or all of your locally installed ollama models, saving the output and performance statistics as easily navigable web pages. (&lt;a href="https://attogram.github.io/ai_test_zone/"&gt;Demo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/attogram/ollama-bash-toolshed"&gt;ollama-bash-toolshed&lt;/a&gt; - Bash scripts to chat with tool using models. Add new tools to your shed with ease. Runs on Ollama.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Apple Vision Pro&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/swift-chat"&gt;SwiftChat&lt;/a&gt; (Cross-platform AI chat app supporting Apple Vision Pro via "Designed for iPad")&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AugustDev/enchanted"&gt;Enchanted&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timescale/pgai"&gt;pgai&lt;/a&gt; - PostgreSQL as a vector database (Create and search embeddings from Ollama models using pgvector) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/timescale/pgai/raw/main/docs/vectorizer-quick-start.md"&gt;Get started guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mindsdb/mindsdb/raw/staging/mindsdb/integrations/handlers/ollama_handler/README.md"&gt;MindsDB&lt;/a&gt; (Connects Ollama models with nearly 200 data platforms and apps)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philippgille/chromem-go/raw/v0.5.0/embed_ollama.go"&gt;chromem-go&lt;/a&gt; with &lt;a href="https://github.com/philippgille/chromem-go/tree/v0.5.0/examples/rag-wikipedia-ollama"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dbkangaroo/kangaroo"&gt;Kangaroo&lt;/a&gt; (AI-powered SQL client and admin tool for popular databases)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Package managers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://archlinux.org/packages/extra/x86_64/ollama/"&gt;Pacman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gentoo/guru/tree/master/app-misc/ollama"&gt;Gentoo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://formulae.brew.sh/formula/ollama"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://artifacthub.io/packages/helm/ollama-helm/ollama"&gt;Helm Chart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeberg.org/tusharhero/ollama-guix"&gt;Guix channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://search.nixos.org/packages?show=ollama&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=ollama"&gt;Nix package&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flox.dev/blog/ollama-part-one"&gt;Flox&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Libraries&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://python.langchain.com/docs/integrations/chat/ollama/"&gt;LangChain&lt;/a&gt; and &lt;a href="https://js.langchain.com/docs/integrations/chat/ollama/"&gt;LangChain.js&lt;/a&gt; with &lt;a href="https://js.langchain.com/docs/tutorials/local_rag/"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://firebase.google.com/docs/genkit/plugins/ollama"&gt;Firebase Genkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/crewAIInc/crewAI"&gt;crewAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://remembersoftwares.github.io/yacana/"&gt;Yacana&lt;/a&gt; (User-friendly multi-agent framework for brainstorming and executing predetermined flows with built-in tool integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spring-projects/spring-ai"&gt;Spring AI&lt;/a&gt; with &lt;a href="https://docs.spring.io/spring-ai/reference/api/chat/ollama-chat.html"&gt;reference&lt;/a&gt; and &lt;a href="https://github.com/tzolov/ollama-tools"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tmc/langchaingo/"&gt;LangChainGo&lt;/a&gt; with &lt;a href="https://github.com/tmc/langchaingo/tree/main/examples/ollama-completion-example"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langchain4j/langchain4j"&gt;LangChain4j&lt;/a&gt; with &lt;a href="https://github.com/langchain4j/langchain4j-examples/tree/main/ollama-examples/src/main/java"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Abraxas-365/langchain-rust"&gt;LangChainRust&lt;/a&gt; with &lt;a href="https://github.com/Abraxas-365/langchain-rust/raw/main/examples/llm_ollama.rs"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tryAGI/LangChain"&gt;LangChain for .NET&lt;/a&gt; with &lt;a href="https://github.com/tryAGI/LangChain/raw/main/examples/LangChain.Samples.OpenAI/Program.cs"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/theodo-group/LLPhant?tab=readme-ov-file#ollama"&gt;LLPhant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.llamaindex.ai/en/stable/examples/llm/ollama/"&gt;LlamaIndex&lt;/a&gt; and &lt;a href="https://ts.llamaindex.ai/modules/llms/available_llms/ollama"&gt;LlamaIndexTS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BerriAI/litellm"&gt;LiteLLM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/presbrey/ollamafarm"&gt;OllamaFarm for Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awaescher/OllamaSharp"&gt;OllamaSharp for .NET&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gbaptista/ollama-ai"&gt;Ollama for Ruby&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pepperoni21/ollama-rs"&gt;Ollama-rs for Rust&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmont-dev/ollama-hpp"&gt;Ollama-hpp for C++&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama4j/ollama4j"&gt;Ollama4j for Java&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://modelfusion.dev/integration/model-provider/ollama"&gt;ModelFusion Typescript Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinhermawan/OllamaKit"&gt;OllamaKit for Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/breitburg/dart-ollama"&gt;Ollama for Dart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudstudio/ollama-laravel"&gt;Ollama for Laravel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davidmigloz/langchain_dart"&gt;LangChainDart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/semantic-kernel/tree/main/python/semantic_kernel/connectors/ai/ollama"&gt;Semantic Kernel - Python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deepset-ai/haystack-integrations/raw/main/integrations/ollama.md"&gt;Haystack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brainlid/langchain"&gt;Elixir LangChain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JBGruber/rollama"&gt;Ollama for R - rollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hauselin/ollama-r"&gt;Ollama for R - ollama-r&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lebrunel/ollama-ex"&gt;Ollama-ex for Elixir&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/b-tocs/abap_btocs_ollama"&gt;Ollama Connector for SAP ABAP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://testcontainers.com/modules/ollama/"&gt;Testcontainers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.ai/docs/welcome/integration-guides/ollama"&gt;Portkey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/svilupp/PromptingTools.jl"&gt;PromptingTools.jl&lt;/a&gt; with an &lt;a href="https://svilupp.github.io/PromptingTools.jl/dev/examples/working_with_ollama"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Project-Llama/llamascript"&gt;LlamaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emirsahin1/llm-axe"&gt;llm-axe&lt;/a&gt; (Python Toolkit for Building LLM Powered Apps)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.gollm.co/examples/ollama-example"&gt;Gollm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonathanhecl/gollama"&gt;Gollama for Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyproto/ollamaclient"&gt;Ollamaclient for Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/tozd/go/fun"&gt;High-level function abstraction in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ArdaGnsrn/ollama-php"&gt;Ollama PHP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agents-flex/agents-flex"&gt;Agents-Flex for Java&lt;/a&gt; with &lt;a href="https://github.com/agents-flex/agents-flex/tree/main/agents-flex-llm/agents-flex-llm-ollama/src/test/java/com/agentsflex/llm/ollama"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/parakeet-nest/parakeet"&gt;Parakeet&lt;/a&gt; is a GoLang library, made to simplify the development of small generative AI applications with Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygill/haverscript"&gt;Haverscript&lt;/a&gt; with &lt;a href="https://github.com/andygill/haverscript/tree/main/examples"&gt;examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattt/ollama-swift"&gt;Ollama for Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marcusziade/Swollama"&gt;Swollama for Swift&lt;/a&gt; with &lt;a href="https://marcusziade.github.io/Swollama/documentation/swollama/"&gt;DocC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prasad89/golamify"&gt;GoLamify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tusharad/ollama-haskell"&gt;Ollama for Haskell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nbonamy/multi-llm-ts"&gt;multi-llm-ts&lt;/a&gt; (A Typescript/JavaScript library allowing access to different LLM in a unified API)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lofcz/llmtornado"&gt;LlmTornado&lt;/a&gt; (C# library providing a unified interface for major FOSS &amp;amp; Commercial inference APIs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dravenk/ollama-zig"&gt;Ollama for Zig&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lunary-ai/abso"&gt;Abso&lt;/a&gt; (OpenAI-compatible TypeScript SDK for any LLM provider)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goodreasonai/nichey"&gt;Nichey&lt;/a&gt; is a Python package for generating custom wikis for your research topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kassane/ollama-d"&gt;Ollama for D&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HardCodeDev777/OllamaPlusPlus"&gt;OllamaPlusPlus&lt;/a&gt; (Very simple C++ library for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozilla-ai/any-llm"&gt;any-llm&lt;/a&gt; (A single interface to use different llm providers by &lt;a href="https://www.mozilla.ai/"&gt;mozilla.ai&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mozilla-ai/any-agent"&gt;any-agent&lt;/a&gt; (A single interface to use and evaluate different agent frameworks by &lt;a href="https://www.mozilla.ai/"&gt;mozilla.ai&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cognizant-ai-lab/neuro-san-studio"&gt;Neuro SAN&lt;/a&gt; (Data-driven multi-agent orchestration framework) with &lt;a href="https://github.com/cognizant-ai-lab/neuro-san-studio/raw/main/docs/user_guide.md#ollama"&gt;example&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mobile&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/swift-chat"&gt;SwiftChat&lt;/a&gt; (Lightning-fast Cross-platform AI chat app with native UI for Android, iOS, and iPad)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AugustDev/enchanted"&gt;Enchanted&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Mobile-Artificial-Intelligence/maid"&gt;Maid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JHubi1/ollama-app"&gt;Ollama App&lt;/a&gt; (Modern and easy-to-use multi-platform client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1runeberg/confichat"&gt;ConfiChat&lt;/a&gt; (Lightweight, standalone, multi-platform, and privacy-focused LLM chat interface with optional encryption)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sunshine0523/OllamaServer"&gt;Ollama Android Chat&lt;/a&gt; (No need for Termux, start the Ollama service with one click on an Android device)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ibrahimcetin/reins"&gt;Reins&lt;/a&gt; (Easily tweak parameters, customize system prompts per chat, and enhance your AI experiments with reasoning model support.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Extensions &amp;amp; Plugins&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MassimilianoPasquini97/raycast_ollama"&gt;Raycast extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mxyng/discollama"&gt;Discollama&lt;/a&gt; (Discord bot inside the Ollama discord channel)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/continuedev/continue"&gt;Continue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thewh1teagle/vibe"&gt;Vibe&lt;/a&gt; (Transcribe and analyze meetings with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hinterdupfinger/obsidian-ollama"&gt;Obsidian Ollama plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/omagdy7/ollama-logseq"&gt;Logseq Ollama plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andersrex/notesollama"&gt;NotesOllama&lt;/a&gt; (Apple Notes Ollama plugin)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samalba/dagger-chatbot"&gt;Dagger Chatbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mekb-turtle/discord-ai-bot"&gt;Discord AI Bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ruecat/ollama-telegram"&gt;Ollama Telegram Bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ej52/hass-ollama-conversation"&gt;Hass Ollama Conversation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abrenneke/rivet-plugin-ollama"&gt;Rivet plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/longy2k/obsidian-bmo-chatbot"&gt;Obsidian BMO Chatbot plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/herval/cliobot"&gt;Cliobot&lt;/a&gt; (Telegram bot with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logancyang/obsidian-copilot"&gt;Copilot for Obsidian plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pfrankov/obsidian-local-gpt"&gt;Obsidian Local GPT plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openinterpreter.com/language-model-setup/local-models/ollama"&gt;Open Interpreter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ex3ndr/llama-coder"&gt;Llama Coder&lt;/a&gt; (Copilot alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bernardo-bruning/ollama-copilot"&gt;Ollama Copilot&lt;/a&gt; (Proxy that allows you to use Ollama as a copilot like GitHub Copilot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rjmacarthy/twinny"&gt;twinny&lt;/a&gt; (Copilot and Copilot chat alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RussellCanfield/wingman-ai"&gt;Wingman-AI&lt;/a&gt; (Copilot code and chat alternative using Ollama and Hugging Face)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/n4ze3m/page-assist"&gt;Page Assist&lt;/a&gt; (Chrome Extension)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/imoize/plasmoid-ollamacontrol"&gt;Plasmoid Ollama Control&lt;/a&gt; (KDE Plasma extension that allows you to quickly manage/control Ollama model)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tusharhero/aitelegrambot"&gt;AI Telegram Bot&lt;/a&gt; (Telegram bot using Ollama in backend)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaroslavyaroslav/OpenAI-sublime-text"&gt;AI ST Completion&lt;/a&gt; (Sublime Text 4 AI assistant plugin with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinthedang/discord-ollama"&gt;Discord-Ollama Chat Bot&lt;/a&gt; (Generalized TypeScript Discord Bot w/ Tuning Documentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/josStorer/chatGPTBox"&gt;ChatGPTBox: All in one browser extension&lt;/a&gt; with &lt;a href="https://github.com/josStorer/chatGPTBox/issues/616#issuecomment-1975186467"&gt;Integrating Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapmd73/Companion"&gt;Discord AI chat/moderation bot&lt;/a&gt; Chat/moderation bot written in python. Uses Ollama to create personalities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nischalj10/headless-ollama"&gt;Headless Ollama&lt;/a&gt; (Scripts to automatically install ollama client &amp;amp; models on any OS for apps that depend on ollama server)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xuyangbocn/terraform-aws-self-host-llm"&gt;Terraform AWS Ollama &amp;amp; Open WebUI&lt;/a&gt; (A Terraform module to deploy on AWS a ready-to-use Ollama service, together with its front-end Open WebUI service.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jakubburkiewicz/node-red-contrib-ollama"&gt;node-red-contrib-ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivostoykov/localAI"&gt;Local AI Helper&lt;/a&gt; (Chrome and Firefox extensions that enable interactions with the active tab and customisable API endpoints. Includes secure storage for user prompts.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jake83741/vnc-lm"&gt;vnc-lm&lt;/a&gt; (Discord bot for messaging with LLMs through Ollama and LiteLLM. Seamlessly move between local and flagship models.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SilasMarvin/lsp-ai"&gt;LSP-AI&lt;/a&gt; (Open-source language server for AI-powered functionality)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Palm1r/QodeAssist"&gt;QodeAssist&lt;/a&gt; (AI-powered coding assistant plugin for Qt Creator)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ECuiDev/obsidian-quiz-generator"&gt;Obsidian Quiz Generator plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philffm/ai-summary-helper"&gt;AI Summmary Helper plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/suncloudsmoon/TextCraft"&gt;TextCraft&lt;/a&gt; (Copilot in Word alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeitlings/alfred-ollama"&gt;Alfred Ollama&lt;/a&gt; (Alfred Workflow)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adarshM84/TextLLaMA"&gt;TextLLaMA&lt;/a&gt; A Chrome Extension that helps you write emails, correct grammar, and translate into any language&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zyphixor/simple-discord-ai"&gt;Simple-Discord-AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/innightwolfsleep/llm_telegram_bot"&gt;LLM Telegram Bot&lt;/a&gt; (telegram bot, primary for RP. Oobabooga-like buttons, &lt;a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui"&gt;A1111&lt;/a&gt; API integration e.t.c)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sammcj/mcp-llm"&gt;mcp-llm&lt;/a&gt; (MCP Server to allow LLMs to call other LLMs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HardCodeDev777/SimpleOllamaUnity"&gt;SimpleOllamaUnity&lt;/a&gt; (Unity Engine extension for communicating with Ollama in a few lines of code. Also works at runtime)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HardCodeDev777/UnityCodeLama"&gt;UnityCodeLama&lt;/a&gt; (Unity Edtior tool to analyze scripts via Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NativeMindBrowser/NativeMindExtension"&gt;NativeMind&lt;/a&gt; (Private, on-device AI Assistant, no cloud dependencies)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gmai.premex.se/"&gt;GMAI - Gradle Managed AI&lt;/a&gt; (Gradle plugin for automated Ollama lifecycle management during build phases)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nomyo-ai/nomyo-router"&gt;NOMYO Router&lt;/a&gt; (A transparent Ollama proxy with model deployment aware routing which auto-manages multiple Ollama instances in a given network)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported backends&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggml-org/llama.cpp"&gt;llama.cpp&lt;/a&gt; project founded by Georgi Gerganov.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Observability&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.comet.com/docs/opik/cookbook/ollama"&gt;Opik&lt;/a&gt; is an open-source platform to debug, evaluate, and monitor your LLM applications, RAG systems, and agentic workflows with comprehensive tracing, automated evaluations, and production-ready dashboards. Opik supports native intergration to Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lunary.ai/docs/integrations/ollama"&gt;Lunary&lt;/a&gt; is the leading open-source LLM observability platform. It provides a variety of enterprise-grade features such as real-time analytics, prompt templates management, PII masking, and comprehensive agent tracing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openlit/openlit"&gt;OpenLIT&lt;/a&gt; is an OpenTelemetry-native tool for monitoring Ollama Applications &amp;amp; GPUs using traces and metrics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.honeyhive.ai/integrations/ollama"&gt;HoneyHive&lt;/a&gt; is an AI observability and evaluation platform for AI agents. Use HoneyHive to evaluate agent performance, interrogate failures, and monitor quality in production.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://langfuse.com/docs/integrations/ollama"&gt;Langfuse&lt;/a&gt; is an open source LLM observability platform that enables teams to collaboratively monitor, evaluate and debug AI applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mlflow.org/docs/latest/llms/tracing/index.html#automatic-tracing"&gt;MLflow Tracing&lt;/a&gt; is an open source LLM observability tool with a convenient API to log and visualize traces, making it easy to debug and evaluate GenAI applications.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>open-telemetry/opentelemetry-go</title>
      <link>https://github.com/open-telemetry/opentelemetry-go</link>
      <description>&lt;p&gt;OpenTelemetry Go API and SDK&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenTelemetry-Go&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/open-telemetry/opentelemetry-go/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/open-telemetry/opentelemetry-go/actions/workflows/ci.yml/badge.svg?branch=main" alt="ci" /&gt;&lt;/a&gt; &lt;a href="https://app.codecov.io/gh/open-telemetry/opentelemetry-go?branch=main"&gt;&lt;img src="https://codecov.io/gh/open-telemetry/opentelemetry-go/coverage.svg?branch=main" alt="codecov.io" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/go.opentelemetry.io/otel"&gt;&lt;img src="https://pkg.go.dev/badge/go.opentelemetry.io/otel" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/go.opentelemetry.io/otel"&gt;&lt;img src="https://goreportcard.com/badge/go.opentelemetry.io/otel" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/open-telemetry/opentelemetry-go"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/open-telemetry/opentelemetry-go/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/9996"&gt;&lt;img src="https://www.bestpractices.dev/projects/9996/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://issues.oss-fuzz.com/issues?q=project:opentelemetry-go"&gt;&lt;img src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/opentelemetry-go.svg?sanitize=true" alt="Fuzzing Status" /&gt;&lt;/a&gt; &lt;a href="https://app.fossa.com/projects/custom%2B162%2Fgithub.com%2Fopen-telemetry%2Fopentelemetry-go?ref=badge_shield&amp;amp;issueType=license"&gt;&lt;img src="https://app.fossa.com/api/projects/custom%2B162%2Fgithub.com%2Fopen-telemetry%2Fopentelemetry-go.svg?type=shield&amp;amp;issueType=license" alt="FOSSA Status" /&gt;&lt;/a&gt; &lt;a href="https://cloud-native.slack.com/archives/C01NPAXACKT"&gt;&lt;img src="https://img.shields.io/badge/slack-@cncf/otel--go-brightgreen.svg?logo=slack" alt="Slack" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;OpenTelemetry-Go is the &lt;a href="https://golang.org/"&gt;Go&lt;/a&gt; implementation of &lt;a href="https://opentelemetry.io/"&gt;OpenTelemetry&lt;/a&gt;. It provides a set of APIs to directly measure performance and behavior of your software and send this data to observability platforms.&lt;/p&gt; 
&lt;h2&gt;Project Status&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Signal&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Traces&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Metrics&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Logs&lt;/td&gt; 
   &lt;td&gt;Beta&lt;a href="https://github.com/orgs/open-telemetry/projects/43"&gt;^1&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Progress and status specific to this repository is tracked in our &lt;a href="https://github.com/open-telemetry/opentelemetry-go/projects"&gt;project boards&lt;/a&gt; and &lt;a href="https://github.com/open-telemetry/opentelemetry-go/milestones"&gt;milestones&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Project versioning information and stability guarantees can be found in the &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/VERSIONING.md"&gt;versioning documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Compatibility&lt;/h3&gt; 
&lt;p&gt;OpenTelemetry-Go ensures compatibility with the current supported versions of the &lt;a href="https://golang.org/doc/devel/release#policy"&gt;Go language&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Each major Go release is supported until there are two newer major releases. For example, Go 1.5 was supported until the Go 1.7 release, and Go 1.6 was supported until the Go 1.8 release.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For versions of Go that are no longer supported upstream, opentelemetry-go will stop ensuring compatibility with these versions in the following manner:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A minor release of opentelemetry-go will be made to add support for the new supported release of Go.&lt;/li&gt; 
 &lt;li&gt;The following minor release of opentelemetry-go will remove compatibility testing for the oldest (now archived upstream) version of Go. This, and future, releases of opentelemetry-go may include features only supported by the currently supported versions of Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Currently, this project supports the following environments.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;OS&lt;/th&gt; 
   &lt;th&gt;Go Version&lt;/th&gt; 
   &lt;th&gt;Architecture&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
   &lt;td&gt;1.25&lt;/td&gt; 
   &lt;td&gt;amd64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
   &lt;td&gt;1.24&lt;/td&gt; 
   &lt;td&gt;amd64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
   &lt;td&gt;1.25&lt;/td&gt; 
   &lt;td&gt;386&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
   &lt;td&gt;1.24&lt;/td&gt; 
   &lt;td&gt;386&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
   &lt;td&gt;1.25&lt;/td&gt; 
   &lt;td&gt;arm64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
   &lt;td&gt;1.24&lt;/td&gt; 
   &lt;td&gt;arm64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 13&lt;/td&gt; 
   &lt;td&gt;1.25&lt;/td&gt; 
   &lt;td&gt;amd64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 13&lt;/td&gt; 
   &lt;td&gt;1.24&lt;/td&gt; 
   &lt;td&gt;amd64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;1.25&lt;/td&gt; 
   &lt;td&gt;arm64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;1.24&lt;/td&gt; 
   &lt;td&gt;arm64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;1.25&lt;/td&gt; 
   &lt;td&gt;amd64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;1.24&lt;/td&gt; 
   &lt;td&gt;amd64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;1.25&lt;/td&gt; 
   &lt;td&gt;386&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;1.24&lt;/td&gt; 
   &lt;td&gt;386&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;While this project should work for other systems, no compatibility guarantees are made for those systems currently.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;You can find a getting started guide on &lt;a href="https://opentelemetry.io/docs/languages/go/getting-started/"&gt;opentelemetry.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;OpenTelemetry's goal is to provide a single set of APIs to capture distributed traces and metrics from your application and send them to an observability platform. This project allows you to do just that for applications written in Go. There are two steps to this process: instrument your application, and configure an exporter.&lt;/p&gt; 
&lt;h3&gt;Instrumentation&lt;/h3&gt; 
&lt;p&gt;To start capturing distributed traces and metric events from your application it first needs to be instrumented. The easiest way to do this is by using an instrumentation library for your code. Be sure to check out &lt;a href="https://github.com/open-telemetry/opentelemetry-go-contrib/tree/main/instrumentation"&gt;the officially supported instrumentation libraries&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you need to extend the telemetry an instrumentation library provides or want to build your own instrumentation for your application directly you will need to use the &lt;a href="https://pkg.go.dev/go.opentelemetry.io/otel"&gt;Go otel&lt;/a&gt; package. The &lt;a href="https://github.com/open-telemetry/opentelemetry-go-contrib/tree/main/examples"&gt;examples&lt;/a&gt; are a good way to see some practical uses of this process.&lt;/p&gt; 
&lt;h3&gt;Export&lt;/h3&gt; 
&lt;p&gt;Now that your application is instrumented to collect telemetry, it needs an export pipeline to send that telemetry to an observability platform.&lt;/p&gt; 
&lt;p&gt;All officially supported exporters for the OpenTelemetry project are contained in the &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters"&gt;exporters directory&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Exporter&lt;/th&gt; 
   &lt;th align="center"&gt;Logs&lt;/th&gt; 
   &lt;th align="center"&gt;Metrics&lt;/th&gt; 
   &lt;th align="center"&gt;Traces&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters/otlp/"&gt;OTLP&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters/prometheus/"&gt;Prometheus&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters/stdout/"&gt;stdout&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters/zipkin/"&gt;Zipkin&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/CONTRIBUTING.md"&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>modelcontextprotocol/go-sdk</title>
      <link>https://github.com/modelcontextprotocol/go-sdk</link>
      <description>&lt;p&gt;The official Go SDK for Model Context Protocol servers and clients. Maintained in collaboration with Google.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP Go SDK v0.6.0&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://codespaces.new/modelcontextprotocol/go-sdk"&gt;&lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Open in GitHub Codespaces" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;BREAKING CHANGES&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;This version contains minor breaking changes. See the &lt;a href="https://github.com/modelcontextprotocol/go-sdk/releases/tag/v0.6.0"&gt;release notes&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/modelcontextprotocol/go-sdk" alt="PkgGoDev" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains an implementation of the official Go software development kit (SDK) for the Model Context Protocol (MCP).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The SDK is in release-candidate state, and is going to be tagged v1.0.0 soon (see &lt;a href="https://github.com/modelcontextprotocol/go-sdk/issues/328"&gt;https://github.com/modelcontextprotocol/go-sdk/issues/328&lt;/a&gt;). We do not anticipate significant API changes or instability. Please use it and &lt;a href="https://github.com/modelcontextprotocol/go-sdk/issues/new/choose"&gt;file issues&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Package / Feature documentation&lt;/h2&gt; 
&lt;p&gt;The SDK consists of several importable packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/mcp"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/mcp&lt;/code&gt;&lt;/a&gt; package defines the primary APIs for constructing and using MCP clients and servers.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/jsonrpc"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/jsonrpc&lt;/code&gt;&lt;/a&gt; package is for users implementing their own transports.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/auth"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/auth&lt;/code&gt;&lt;/a&gt; package provides some primitives for supporting oauth.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/oauthex"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/oauthex&lt;/code&gt;&lt;/a&gt; package provides extensions to the OAuth protocol, such as ProtectedResourceMetadata.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The SDK endeavors to implement the full MCP spec. The &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/docs/"&gt;&lt;code&gt;docs/&lt;/code&gt;&lt;/a&gt; directory contains feature documentation, mapping the MCP spec to the packages above.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;To get started creating an MCP server, create an &lt;code&gt;mcp.Server&lt;/code&gt; instance, add features to it, and then run it over an &lt;code&gt;mcp.Transport&lt;/code&gt;. For example, this server adds a single simple tool, and then connects it to clients over stdin/stdout:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"context"
	"log"

	"github.com/modelcontextprotocol/go-sdk/mcp"
)

type Input struct {
	Name string `json:"name" jsonschema:"the name of the person to greet"`
}

type Output struct {
	Greeting string `json:"greeting" jsonschema:"the greeting to tell to the user"`
}

func SayHi(ctx context.Context, req *mcp.CallToolRequest, input Input) (*mcp.CallToolResult, Output, error) {
	return nil, Output{Greeting: "Hi " + input.Name}, nil
}

func main() {
	// Create a server with a single tool.
	server := mcp.NewServer(&amp;amp;mcp.Implementation{Name: "greeter", Version: "v1.0.0"}, nil)
	mcp.AddTool(server, &amp;amp;mcp.Tool{Name: "greet", Description: "say hi"}, SayHi)
	// Run the server over stdin/stdout, until the client disconnects
	if err := server.Run(context.Background(), &amp;amp;mcp.StdioTransport{}); err != nil {
		log.Fatal(err)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To communicate with that server, create an &lt;code&gt;mcp.Client&lt;/code&gt; and connect it to the corresponding server, by running the server command and communicating over its stdin/stdout:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"context"
	"log"
	"os/exec"

	"github.com/modelcontextprotocol/go-sdk/mcp"
)

func main() {
	ctx := context.Background()

	// Create a new client, with no features.
	client := mcp.NewClient(&amp;amp;mcp.Implementation{Name: "mcp-client", Version: "v1.0.0"}, nil)

	// Connect to a server over stdin/stdout
	transport := &amp;amp;mcp.CommandTransport{Command: exec.Command("myserver")}
	session, err := client.Connect(ctx, transport, nil)
	if err != nil {
		log.Fatal(err)
	}
	defer session.Close()

	// Call a tool on the server.
	params := &amp;amp;mcp.CallToolParams{
		Name:      "greet",
		Arguments: map[string]any{"name": "you"},
	}
	res, err := session.CallTool(ctx, params)
	if err != nil {
		log.Fatalf("CallTool failed: %v", err)
	}
	if res.IsError {
		log.Fatal("tool failed")
	}
	for _, c := range res.Content {
		log.Print(c.(*mcp.TextContent).Text)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/examples/"&gt;&lt;code&gt;examples/&lt;/code&gt;&lt;/a&gt; directory contains more example clients and servers.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions to the SDK! Please see See &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for details of how to contribute.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements / Alternatives&lt;/h2&gt; 
&lt;p&gt;Several third party Go MCP SDKs inspired the development and design of this official SDK, and continue to be viable alternatives, notably &lt;a href="https://github.com/mark3labs/mcp-go"&gt;mcp-go&lt;/a&gt;, originally authored by Ed Zynda. We are grateful to Ed as well as the other contributors to mcp-go, and to authors and contributors of other SDKs such as &lt;a href="https://github.com/metoro-io/mcp-golang"&gt;mcp-golang&lt;/a&gt; and &lt;a href="https://github.com/ThinkInAIXYZ/go-mcp"&gt;go-mcp&lt;/a&gt;. Thanks to their work, there is a thriving ecosystem of Go MCP clients and servers.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>argoproj/argo-cd</title>
      <link>https://github.com/argoproj/argo-cd</link>
      <description>&lt;p&gt;Declarative Continuous Deployment for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Releases:&lt;/strong&gt; &lt;a href="https://github.com/argoproj/argo-cd/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/argoproj/argo-cd?label=argo-cd" alt="Release Version" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/argo/argo-cd"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/argo-cd" alt="Artifact HUB" /&gt;&lt;/a&gt; &lt;a href="https://slsa.dev"&gt;&lt;img src="https://slsa.dev/images/gh-badge-level3.svg?sanitize=true" alt="SLSA 3" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Code:&lt;/strong&gt; &lt;a href="https://github.com/argoproj/argo-cd/actions?query=workflow%3A%22Integration+tests%22"&gt;&lt;img src="https://github.com/argoproj/argo-cd/workflows/Integration%20tests/badge.svg?branch=master" alt="Integration tests" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/argoproj/argo-cd"&gt;&lt;img src="https://codecov.io/gh/argoproj/argo-cd/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/4486"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/4486/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/argoproj/argo-cd"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/argoproj/argo-cd/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Social:&lt;/strong&gt; &lt;a href="https://twitter.com/argoproj"&gt;&lt;img src="https://img.shields.io/twitter/follow/argoproj?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://argoproj.github.io/community/join-slack"&gt;&lt;img src="https://img.shields.io/badge/slack-argoproj-brightgreen.svg?logo=slack" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/argoproj/"&gt;&lt;img src="https://img.shields.io/badge/LinkedIn-argoproj-blue.svg?logo=linkedin" alt="LinkedIn" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Argo CD - Declarative Continuous Delivery for Kubernetes&lt;/h1&gt; 
&lt;h2&gt;What is Argo CD?&lt;/h2&gt; 
&lt;p&gt;Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/argoproj/argo-cd/master/docs/assets/argocd-ui.gif" alt="Argo CD UI" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/0WAm0y2vLIo"&gt;&lt;img src="https://img.youtube.com/vi/0WAm0y2vLIo/0.jpg" alt="Argo CD Demo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Why Argo CD?&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Application definitions, configurations, and environments should be declarative and version controlled.&lt;/li&gt; 
 &lt;li&gt;Application deployment and lifecycle management should be automated, auditable, and easy to understand.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Who uses Argo CD?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/argoproj/argo-cd/master/USERS.md"&gt;Official Argo CD user list&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To learn more about Argo CD &lt;a href="https://argo-cd.readthedocs.io/"&gt;go to the complete documentation&lt;/a&gt;. Check live demo at &lt;a href="https://cd.apps.argoproj.io/"&gt;https://cd.apps.argoproj.io/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;h3&gt;Contribution, Discussion and Support&lt;/h3&gt; 
&lt;p&gt;You can reach the Argo CD community and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Q &amp;amp; A : &lt;a href="https://github.com/argoproj/argo-cd/discussions"&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat : &lt;a href="https://argoproj.github.io/community/join-slack"&gt;The #argo-cd Slack channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Contributors Office Hours: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com"&gt;Every Thursday&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1xkoFkVviB70YBzSEa4bDnu-rUZ1sIFtwKKG1Uw8XsY8"&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;User Community meeting: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com"&gt;First Wednesday of the month&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1ttgw98MO45Dq7ZUHpIiOIEfbyeitKHNfMjbY5dLLMKQ"&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Participation in the Argo CD project is governed by the &lt;a href="https://github.com/cncf/foundation/raw/master/code-of-conduct.md"&gt;CNCF Code of Conduct&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Blogs and Presentations&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terrytangyuan/awesome-argo"&gt;Awesome-Argo: A Curated List of Awesome Projects and Resources Related to Argo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://akuity.io/blog/secret-ingredients-of-continuous-delivery-at-enterprise-scale-with-argocd/"&gt;Unveil the Secret Ingredients of Continuous Delivery at Enterprise Scale with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/avPUQin9kzU"&gt;GitOps Without Pipelines With ArgoCD Image Updater&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/eEcgn_gU3SM"&gt;Combining Argo CD (GitOps), Crossplane (Control Plane), And KubeVela (OAM)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/yrj4lmScKHQ"&gt;How to Apply GitOps to Everything - Combining Argo CD and Crossplane&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/nkPoPaVzExY"&gt;Couchbase - How To Run a Database Cluster in Kubernetes Using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/XNXJtxkUKeY"&gt;Automation of Everything - How To Combine Argo Events, Workflows &amp;amp; Pipelines, CD, and Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/cpAaI8p4R60"&gt;Environments Based On Pull Requests (PRs): Using Argo CD To Apply GitOps Principles On Previews&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/vpWQeoaiRM4"&gt;Argo CD: Applying GitOps Principles To Manage Production Environment In Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/continuous-deployment/creating-temporary-preview-environments-based-pull-requests-argo-cd-codefresh/"&gt;Creating Temporary Preview Environments Based On Pull Requests With Argo CD And Codefresh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=r50tRQjisxw"&gt;Tutorial: Everything You Need To Become A GitOps Ninja&lt;/a&gt; 90m tutorial on GitOps and Argo CD.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.inovex.de/blog/spinnaker-vs-argo-cd-vs-tekton-vs-jenkins-x/"&gt;Comparison of Argo CD, Spinnaker, Jenkins X, and Tekton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ibm.com/cloud/blog/simplify-and-automate-deployments-using-gitops-with-ibm-multicloud-manager-3-1-2"&gt;Simplify and Automate Deployments Using GitOps with IBM Multicloud Manager 3.1.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://v0-6.kubeflow.org/docs/use-cases/gitops-for-kubeflow/"&gt;GitOps for Kubeflow using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/webinar-series-gitops-tool-sets-on-kubernetes-with-circleci-and-argo-cd"&gt;GitOps Toolsets on Kubernetes with CircleCI and Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OdzH82VpMwI&amp;amp;feature=youtu.be"&gt;CI/CD in Light Speed with K8s and Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VXrGp5er1ZE&amp;amp;t=0s&amp;amp;index=135&amp;amp;list=PLj6h78yzYM2PZf9eA7bhWnIh_mK1vyOfU"&gt;Machine Learning as Code&lt;/a&gt;. Among other things, describes how Kubeflow uses Argo CD to implement GitOPs for ML&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aWDIQMbp1cc&amp;amp;feature=youtu.be&amp;amp;t=1m4s"&gt;Argo CD - GitOps Continuous Delivery for Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2WSJF7d8dUg&amp;amp;feature=youtu.be"&gt;Introduction to Argo CD : Kubernetes DevOps CI/CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/riskified-technology/gitops-deployment-and-kubernetes-f1ab289efa4b"&gt;GitOps Deployment and Kubernetes - using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://itnext.io/deploy-argo-cd-with-ingress-and-tls-in-three-steps-no-yaml-yak-shaving-required-bc536d401491"&gt;Deploy Argo CD with Ingress and TLS in Three Steps: No YAML Yak Shaving Required&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/events/cncf-member-webinar-gitops-continuous-delivery-argo-codefresh/"&gt;GitOps Continuous Delivery with Argo and Codefresh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mjpitz.com/blog/2020/12/03/renovate-your-gitops/"&gt;Stay up to date with Argo CD and Renovate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.arthurkoziel.com/setting-up-argocd-with-helm/"&gt;Setting up Argo CD with Helm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thenewstack.io/applied-gitops-with-argocd/"&gt;Applied GitOps with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cncf.io/blog/2020/12/17/solving-configuration-drift-using-gitops-with-argo-cd/"&gt;Solving configuration drift using GitOps with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blogs.sap.com/2021/05/06/decentralized-gitops-over-environments/"&gt;Decentralized GitOps over environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/AvLuplh1skA"&gt;Getting Started with ArgoCD for GitOps Deployments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/17894DTru2Y"&gt;Using Argo CD &amp;amp; Datree for Stable Kubernetes CI/CD Deployments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://amralaayassen.medium.com/how-to-create-argocd-applications-automatically-using-applicationset-automation-of-the-gitops-59455eaf4f72"&gt;How to create Argo CD Applications Automatically using ApplicationSet? "Automation of GitOps"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cncf.io/blog/2022/12/16/progressive-delivery-with-service-mesh-argo-rollouts-with-istio/"&gt;Progressive Delivery with Service Mesh – Argo Rollouts with Istio&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>aquasecurity/trivy</title>
      <link>https://github.com/aquasecurity/trivy</link>
      <description>&lt;p&gt;Find vulnerabilities, misconfigurations, secrets, SBOM in containers, Kubernetes, code repositories, clouds and more&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/logo.png" width="200" /&gt; 
 &lt;p&gt;&lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/release/aquasecurity/trivy.svg?logo=github" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml"&gt;&lt;img src="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/aquasecurity/trivy"&gt;&lt;img src="https://goreportcard.com/badge/github.com/aquasecurity/trivy" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License: Apache-2.0" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/aquasecurity/trivy/total?logo=github" alt="GitHub Downloads" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/docker/pulls/aquasec/trivy?logo=docker&amp;amp;label=docker%20pulls%20%2F%20trivy" alt="Docker Pulls" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trivy.dev/latest/docs/"&gt;📖 Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Trivy (&lt;a href="https://raw.githubusercontent.com/aquasecurity/trivy/main/#how-to-pronounce-the-name-trivy"&gt;pronunciation&lt;/a&gt;) is a comprehensive and versatile security scanner. Trivy has &lt;em&gt;scanners&lt;/em&gt; that look for security issues, and &lt;em&gt;targets&lt;/em&gt; where it can find those issues.&lt;/p&gt; 
&lt;p&gt;Targets (what Trivy can scan):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Container Image&lt;/li&gt; 
 &lt;li&gt;Filesystem&lt;/li&gt; 
 &lt;li&gt;Git Repository (remote)&lt;/li&gt; 
 &lt;li&gt;Virtual Machine Image&lt;/li&gt; 
 &lt;li&gt;Kubernetes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Scanners (what Trivy can find there):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OS packages and software dependencies in use (SBOM)&lt;/li&gt; 
 &lt;li&gt;Known vulnerabilities (CVEs)&lt;/li&gt; 
 &lt;li&gt;IaC issues and misconfigurations&lt;/li&gt; 
 &lt;li&gt;Sensitive information and secrets&lt;/li&gt; 
 &lt;li&gt;Software licenses&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy supports most popular programming languages, operating systems, and platforms. For a complete list, see the &lt;a href="https://trivy.dev/latest/docs/coverage/"&gt;Scanning Coverage&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;To learn more, go to the &lt;a href="https://trivy.dev"&gt;Trivy homepage&lt;/a&gt; for feature highlights, or to the &lt;a href="https://trivy.dev/latest/docs/"&gt;Documentation site&lt;/a&gt; for detailed information.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Get Trivy&lt;/h3&gt; 
&lt;p&gt;Trivy is available in most common distribution channels. The full list of installation options is available in the &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;brew install trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;docker run aquasec/trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Download binary from &lt;a href="https://github.com/aquasecurity/trivy/releases/latest/"&gt;https://github.com/aquasecurity/trivy/releases/latest/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy is integrated with many popular platforms and applications. The complete list of integrations is available in the &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-action"&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-operator"&gt;Kubernetes operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-vscode-extension"&gt;VS Code plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Canary builds&lt;/h3&gt; 
&lt;p&gt;There are canary builds (&lt;a href="https://hub.docker.com/r/aquasec/trivy/tags?page=1&amp;amp;name=canary"&gt;Docker Hub&lt;/a&gt;, &lt;a href="https://github.com/aquasecurity/trivy/pkgs/container/trivy/75776514?tag=canary"&gt;GitHub&lt;/a&gt;, &lt;a href="https://gallery.ecr.aws/aquasecurity/trivy#canary"&gt;ECR&lt;/a&gt; images and &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/canary.yaml"&gt;binaries&lt;/a&gt;) as generated every push to main branch.&lt;/p&gt; 
&lt;p&gt;Please be aware: canary builds might have critical bugs, it's not recommended for use in production.&lt;/p&gt; 
&lt;h3&gt;General usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy &amp;lt;target&amp;gt; [--scanners &amp;lt;scanner1,scanner2&amp;gt;] &amp;lt;subject&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy image python:3.4-alpine
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov"&gt;https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy fs --scanners vuln,secret,misconfig myproject/
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov"&gt;https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy k8s --report summary cluster
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/trivy-k8s.png" alt="k8s summary" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How to pronounce the name "Trivy"?&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;tri&lt;/code&gt; is pronounced like &lt;strong&gt;tri&lt;/strong&gt;gger, &lt;code&gt;vy&lt;/code&gt; is pronounced like en&lt;strong&gt;vy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Want more? Check out Aqua&lt;/h2&gt; 
&lt;p&gt;If you liked Trivy, you will love Aqua which builds on top of Trivy to provide even more enhanced capabilities for a complete security management offering.&lt;br /&gt; You can find a high level comparison table specific to Trivy users &lt;a href="https://trivy.dev/latest/commercial/compare/"&gt;here&lt;/a&gt;. In addition check out the &lt;a href="https://aquasec.com"&gt;https://aquasec.com&lt;/a&gt; website for more information about our products and services. If you'd like to contact Aqua or request a demo, please use this form: &lt;a href="https://www.aquasec.com/demo"&gt;https://www.aquasec.com/demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Trivy is an &lt;a href="https://aquasec.com"&gt;Aqua Security&lt;/a&gt; open source project.&lt;br /&gt; Learn about our open source work and portfolio &lt;a href="https://www.aquasec.com/products/open-source-projects/"&gt;here&lt;/a&gt;.&lt;br /&gt; Contact us about any matter by opening a GitHub Discussion &lt;a href="https://github.com/aquasecurity/trivy/discussions"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please ensure to abide by our &lt;a href="https://github.com/aquasecurity/community/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; during all interactions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>containerd/containerd</title>
      <link>https://github.com/containerd/containerd</link>
      <description>&lt;p&gt;An open and reliable container runtime&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cncf/artwork/master/projects/containerd/horizontal/color/containerd-horizontal-color.png#gh-light-mode-only" alt="containerd banner light mode" /&gt; &lt;img src="https://raw.githubusercontent.com/cncf/artwork/master/projects/containerd/horizontal/white/containerd-horizontal-white.png#gh-dark-mode-only" alt="containerd banner dark mode" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/containerd/containerd/v2"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/containerd/containerd/v2" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;a href="https://github.com/containerd/containerd/actions?query=workflow%3ACI+event%3Amerge_group"&gt;&lt;img src="https://github.com/containerd/containerd/actions/workflows/ci.yml/badge.svg?event=merge_group" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/containerd/containerd/actions?query=workflow%3ANightly"&gt;&lt;img src="https://github.com/containerd/containerd/workflows/Nightly/badge.svg?sanitize=true" alt="Nightlies" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/containerd/containerd/v2"&gt;&lt;img src="https://goreportcard.com/badge/github.com/containerd/containerd/v2" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/1271"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/1271/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/containerd/containerd"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/containerd/containerd/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://github.com/containerd/containerd/actions/workflows/links.yml"&gt;&lt;img src="https://github.com/containerd/containerd/actions/workflows/links.yml/badge.svg?sanitize=true" alt="Check Links" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;containerd is an industry-standard container runtime with an emphasis on simplicity, robustness, and portability. It is available as a daemon for Linux and Windows, which can manage the complete container lifecycle of its host system: image transfer and storage, container execution and supervision, low-level storage and network attachments, etc.&lt;/p&gt; 
&lt;p&gt;containerd is a member of CNCF with &lt;a href="https://landscape.cncf.io/?selected=containerd"&gt;'graduated'&lt;/a&gt; status.&lt;/p&gt; 
&lt;p&gt;containerd is designed to be embedded into a larger system, rather than being used directly by developers or end-users.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/containerd/containerd/main/docs/historical/design/architecture.png" alt="architecture" /&gt;&lt;/p&gt; 
&lt;h2&gt;Announcements&lt;/h2&gt; 
&lt;h3&gt;containerd v2.0 is now released!&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/containerd-2.0.md"&gt;&lt;code&gt;docs/containerd-2.0.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Now Recruiting&lt;/h3&gt; 
&lt;p&gt;We are a large inclusive OSS project that is welcoming help of any kind shape or form:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation help is needed to make the product easier to consume and extend.&lt;/li&gt; 
 &lt;li&gt;We need OSS community outreach/organizing help to get the word out; manage and create messaging and educational content; and help with social media, community forums/groups, and google groups.&lt;/li&gt; 
 &lt;li&gt;We are actively inviting new &lt;a href="https://github.com/containerd/project/raw/main/GOVERNANCE.md#security-advisors"&gt;security advisors&lt;/a&gt; to join the team.&lt;/li&gt; 
 &lt;li&gt;New subprojects are being created, core and non-core that could use additional development help.&lt;/li&gt; 
 &lt;li&gt;Each of the &lt;a href="https://github.com/containerd"&gt;containerd projects&lt;/a&gt; has a list of issues currently being worked on or that need help resolving. 
  &lt;ul&gt; 
   &lt;li&gt;If the issue has not already been assigned to someone or has not made recent progress, and you are interested, please inquire.&lt;/li&gt; 
   &lt;li&gt;If you are interested in starting with a smaller/beginner-level issue, look for issues with an &lt;code&gt;exp/beginner&lt;/code&gt; tag, for example &lt;a href="https://github.com/containerd/containerd/issues?q=is%3Aissue+is%3Aopen+label%3Aexp%2Fbeginner"&gt;containerd/containerd beginner issues.&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;See our documentation on &lt;a href="https://containerd.io"&gt;containerd.io&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/ops.md"&gt;for ops and admins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/namespaces.md"&gt;namespaces&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/client-opts.md"&gt;client options&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To get started contributing to containerd, see &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are interested in trying out containerd see our example at &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/getting-started.md"&gt;Getting Started&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Nightly builds&lt;/h2&gt; 
&lt;p&gt;There are nightly builds available for download &lt;a href="https://github.com/containerd/containerd/actions?query=workflow%3ANightly"&gt;here&lt;/a&gt;. Binaries are generated from &lt;code&gt;main&lt;/code&gt; branch every night for &lt;code&gt;Linux&lt;/code&gt; and &lt;code&gt;Windows&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Please be aware: nightly builds might have critical bugs, it's not recommended for use in production and no support provided.&lt;/p&gt; 
&lt;h2&gt;Kubernetes (k8s) CI Dashboard Group&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://testgrid.k8s.io/containerd"&gt;k8s CI dashboard group for containerd&lt;/a&gt; contains test results regarding the health of kubernetes when run against main and a number of containerd release branches.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://testgrid.k8s.io/containerd-periodic"&gt;containerd-periodics&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Runtime Requirements&lt;/h2&gt; 
&lt;p&gt;Runtime requirements for containerd are very minimal. Most interactions with the Linux and Windows container feature sets are handled via &lt;a href="https://github.com/opencontainers/runc"&gt;runc&lt;/a&gt; and/or OS-specific libraries (e.g. &lt;a href="https://github.com/Microsoft/hcsshim"&gt;hcsshim&lt;/a&gt; for Microsoft). The current required version of &lt;code&gt;runc&lt;/code&gt; is described in &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/RUNC.md"&gt;RUNC.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are specific features used by containerd core code and snapshotters that will require a minimum kernel version on Linux. With the understood caveat of distro kernel versioning, a reasonable starting point for Linux is a minimum 4.x kernel version.&lt;/p&gt; 
&lt;p&gt;The overlay filesystem snapshotter, used by default, uses features that were finalized in the 4.x kernel series. If you choose to use btrfs, there may be more flexibility in kernel version (minimum recommended is 3.18), but will require the btrfs kernel module and btrfs tools to be installed on your Linux distribution.&lt;/p&gt; 
&lt;p&gt;To use Linux checkpoint and restore features, you will need &lt;code&gt;criu&lt;/code&gt; installed on your system. See more details in &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/#checkpoint-and-restore"&gt;Checkpoint and Restore&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Build requirements for developers are listed in &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/BUILDING.md"&gt;BUILDING&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported Registries&lt;/h2&gt; 
&lt;p&gt;Any registry which is compliant with the &lt;a href="https://github.com/opencontainers/distribution-spec"&gt;OCI Distribution Specification&lt;/a&gt; is supported by containerd.&lt;/p&gt; 
&lt;p&gt;For configuring registries, see &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/hosts.md"&gt;registry host configuration documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;For a detailed overview of containerd's core concepts and the features it supports, please refer to the &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/features.md"&gt;FEATURES.MD&lt;/a&gt; document.&lt;/p&gt; 
&lt;h3&gt;Releases and API Stability&lt;/h3&gt; 
&lt;p&gt;Please see &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/RELEASES.md"&gt;RELEASES.md&lt;/a&gt; for details on versioning and stability of containerd components.&lt;/p&gt; 
&lt;p&gt;Downloadable 64-bit Intel/AMD binaries of all official releases are available on our &lt;a href="https://github.com/containerd/containerd/releases"&gt;releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For other architectures and distribution support, you will find that many Linux distributions package their own containerd and provide it across several architectures, such as &lt;a href="https://launchpad.net/ubuntu/bionic/+package/containerd"&gt;Canonical's Ubuntu packaging&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Enabling command auto-completion&lt;/h4&gt; 
&lt;p&gt;Starting with containerd 1.4, the urfave client feature for auto-creation of bash and zsh autocompletion data is enabled. To use the autocomplete feature in a bash shell for example, source the autocomplete/ctr file in your &lt;code&gt;.bashrc&lt;/code&gt;, or manually like:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ source ./contrib/autocomplete/ctr
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Distribution of &lt;code&gt;ctr&lt;/code&gt; autocomplete for bash and zsh&lt;/h4&gt; 
&lt;p&gt;For bash, copy the &lt;code&gt;contrib/autocomplete/ctr&lt;/code&gt; script into &lt;code&gt;/etc/bash_completion.d/&lt;/code&gt; and rename it to &lt;code&gt;ctr&lt;/code&gt;. The &lt;code&gt;zsh_autocomplete&lt;/code&gt; file is also available and can be used similarly for zsh users.&lt;/p&gt; 
&lt;p&gt;Provide documentation to users to &lt;code&gt;source&lt;/code&gt; this file into their shell if you don't place the autocomplete file in a location where it is automatically loaded for the user's shell environment.&lt;/p&gt; 
&lt;h3&gt;CRI&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;cri&lt;/code&gt; is a &lt;a href="https://containerd.io/"&gt;containerd&lt;/a&gt; plugin implementation of the Kubernetes &lt;a href="https://github.com/kubernetes/cri-api/raw/master/pkg/apis/runtime/v1/api.proto"&gt;container runtime interface (CRI)&lt;/a&gt;. With it, you are able to use containerd as the container runtime for a Kubernetes cluster.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/cri.png" alt="cri" /&gt;&lt;/p&gt; 
&lt;h4&gt;CRI Status&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;cri&lt;/code&gt; is a native plugin of containerd. Since containerd 1.1, the cri plugin is built into the release binaries and enabled by default.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;cri&lt;/code&gt; plugin has reached GA status, representing that it is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Feature complete&lt;/li&gt; 
 &lt;li&gt;Works with Kubernetes 1.10 and above&lt;/li&gt; 
 &lt;li&gt;Passes all &lt;a href="https://github.com/kubernetes/community/raw/master/contributors/devel/sig-node/cri-validation.md"&gt;CRI validation tests&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Passes all &lt;a href="https://github.com/kubernetes/community/raw/master/contributors/devel/sig-node/e2e-node-tests.md"&gt;node e2e tests&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Passes all &lt;a href="https://github.com/kubernetes/community/raw/master/contributors/devel/sig-testing/e2e-tests.md"&gt;e2e tests&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See results on the containerd k8s &lt;a href="https://testgrid.k8s.io/containerd"&gt;test dashboard&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Validating Your &lt;code&gt;cri&lt;/code&gt; Setup&lt;/h4&gt; 
&lt;p&gt;A Kubernetes incubator project, &lt;a href="https://github.com/kubernetes-sigs/cri-tools"&gt;cri-tools&lt;/a&gt;, includes programs for exercising CRI implementations. More importantly, cri-tools includes the program &lt;code&gt;critest&lt;/code&gt; which is used for running &lt;a href="https://github.com/kubernetes/community/raw/master/contributors/devel/sig-node/cri-validation.md"&gt;CRI Validation Testing&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;CRI Guides&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/contrib/ansible/README.md"&gt;Installing with Ansible and Kubeadm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/getting-started.md"&gt;For Non-Ansible Users, Preforming a Custom Installation Using the Release Tarball and Kubeadm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/testing.md"&gt;CRI Plugin Testing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/crictl.md"&gt;Debugging Pods, Containers, and Images with &lt;code&gt;crictl&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/docs/cri/config.md"&gt;Configuring &lt;code&gt;cri&lt;/code&gt; Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containerd/containerd/raw/main/docs/man/containerd-config.8.md"&gt;Configuring containerd&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Communication&lt;/h3&gt; 
&lt;p&gt;For async communication and long-running discussions please use issues and pull requests on the GitHub repo. This will be the best place to discuss design and implementation.&lt;/p&gt; 
&lt;p&gt;For sync communication catch us in the &lt;code&gt;#containerd&lt;/code&gt; and &lt;code&gt;#containerd-dev&lt;/code&gt; Slack channels on Cloud Native Computing Foundation's (CNCF) Slack - &lt;code&gt;cloud-native.slack.com&lt;/code&gt;. Everyone is welcome to join and chat. &lt;a href="https://slack.cncf.io"&gt;Get Invite to CNCF Slack.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Join our next community meeting hosted on Zoom. The schedule is posted on the &lt;a href="https://www.cncf.io/calendar/"&gt;CNCF Calendar&lt;/a&gt; (search 'containerd' to filter).&lt;/p&gt; 
&lt;h3&gt;Security audit&lt;/h3&gt; 
&lt;p&gt;Security audits for the containerd project are hosted on our website. Please see the &lt;a href="https://containerd.io/security/"&gt;security page at containerd.io&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Reporting security issues&lt;/h3&gt; 
&lt;p&gt;Please follow the instructions at &lt;a href="https://github.com/containerd/project/raw/main/SECURITY.md#reporting-a-vulnerability"&gt;containerd/project&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Licenses&lt;/h2&gt; 
&lt;p&gt;The containerd codebase is released under the &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/LICENSE"&gt;Apache 2.0 license&lt;/a&gt;. The README.md file and files in the "docs" folder are licensed under the Creative Commons Attribution 4.0 International License. You may obtain a copy of the license, titled CC-BY-4.0, at &lt;a href="http://creativecommons.org/licenses/by/4.0/"&gt;http://creativecommons.org/licenses/by/4.0/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Project details&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;containerd&lt;/strong&gt; is the primary open source project within the broader containerd GitHub organization. However, all projects within the repo have common maintainership, governance, and contributing guidelines which are stored in a &lt;code&gt;project&lt;/code&gt; repository commonly for all containerd projects.&lt;/p&gt; 
&lt;p&gt;Please find all these core project documents, including the:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containerd/project/raw/main/GOVERNANCE.md"&gt;Project governance&lt;/a&gt;,&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/containerd/project/raw/main/MAINTAINERS"&gt;Maintainers&lt;/a&gt;,&lt;/li&gt; 
 &lt;li&gt;and &lt;a href="https://github.com/containerd/project/raw/main/CONTRIBUTING.md"&gt;Contributing guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;information in our &lt;a href="https://github.com/containerd/project"&gt;&lt;code&gt;containerd/project&lt;/code&gt;&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Adoption&lt;/h2&gt; 
&lt;p&gt;Interested to see who is using containerd? Are you using containerd in a project? Please add yourself via pull request to our &lt;a href="https://raw.githubusercontent.com/containerd/containerd/main/ADOPTERS.md"&gt;ADOPTERS.md&lt;/a&gt; file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>krillinai/KrillinAI</title>
      <link>https://github.com/krillinai/KrillinAI</link>
      <description>&lt;p&gt;A video translation and dubbing tool powered by LLMs, offering 99 language translations and one-click full-process deployment. It can generate content optimized for platforms like YouTube，TikTok, and Shorts. AI视频翻译配音工具，99种语言双向翻译，一键部署全流程，可以生成适配抖音，小红书，哔哩哔哩，视频号，TikTok，Youtube Shorts等形态的内容&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/images/logo.jpg" alt="KrillinAI" height="90" /&gt; 
 &lt;h1&gt;Minimalist AI Video Translation and Dubbing Tool&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/13360" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13360" alt="KrillinAI%2FKrillinAI | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/README.md"&gt;English&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/zh/README.md"&gt;简体中文&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/jp/README.md"&gt;日本語&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/kr/README.md"&gt;한국어&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/vi/README.md"&gt;Tiếng Việt&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/fr/README.md"&gt;Français&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/de/README.md"&gt;Deutsch&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/es/README.md"&gt;Español&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/pt/README.md"&gt;Português&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/rus/README.md"&gt;Русский&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/ar/README.md"&gt;اللغة العربية&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://x.com/KrillinAI"&gt;&lt;img src="https://img.shields.io/badge/Twitter-KrillinAI-orange?logo=twitter" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://jq.qq.com/?_wv=1027&amp;amp;k=754069680"&gt;&lt;img src="https://img.shields.io/badge/QQ%20%E7%BE%A4-754069680-green?logo=tencent-qq" alt="QQ 群" /&gt;&lt;/a&gt; &lt;a href="https://space.bilibili.com/242124650"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?label=Bilibili&amp;amp;query=%24.data.follower&amp;amp;suffix=%E7%B2%89%E4%B8%9D&amp;amp;url=https%3A%2F%2Fapi.bilibili.com%2Fx%2Frelation%2Fstat%3Fvmid%3D242124650&amp;amp;logo=bilibili&amp;amp;color=00A1D6&amp;amp;labelColor=FE7398&amp;amp;logoColor=FFFFFF" alt="Bilibili" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/krillinai/KrillinAI"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Project Introduction (&lt;a href="https://www.klic.studio/"&gt;Try the online version now!&lt;/a&gt;)&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/#-quick-start"&gt;&lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;KrillinAI is a versatile audio and video localization and enhancement solution developed by Krillin AI. This minimalist yet powerful tool integrates video translation, dubbing, and voice cloning, supporting both landscape and portrait formats to ensure perfect presentation on all major platforms (Bilibili, Xiaohongshu, Douyin, WeChat Video, Kuaishou, YouTube, TikTok, etc.). With an end-to-end workflow, you can transform raw materials into beautifully ready-to-use cross-platform content with just a few clicks.&lt;/p&gt; 
&lt;h2&gt;Key Features and Functions:&lt;/h2&gt; 
&lt;p&gt;🎯 &lt;strong&gt;One-click Start&lt;/strong&gt;: No complex environment configuration required, automatic dependency installation, ready to use immediately, with a new desktop version for easier access!&lt;/p&gt; 
&lt;p&gt;📥 &lt;strong&gt;Video Acquisition&lt;/strong&gt;: Supports yt-dlp downloads or local file uploads&lt;/p&gt; 
&lt;p&gt;📜 &lt;strong&gt;Accurate Recognition&lt;/strong&gt;: High-accuracy speech recognition based on Whisper&lt;/p&gt; 
&lt;p&gt;🧠 &lt;strong&gt;Intelligent Segmentation&lt;/strong&gt;: Subtitle segmentation and alignment using LLM&lt;/p&gt; 
&lt;p&gt;🔄 &lt;strong&gt;Terminology Replacement&lt;/strong&gt;: One-click replacement of professional vocabulary&lt;/p&gt; 
&lt;p&gt;🌍 &lt;strong&gt;Professional Translation&lt;/strong&gt;: LLM translation with context to maintain natural semantics&lt;/p&gt; 
&lt;p&gt;🎙️ &lt;strong&gt;Voice Cloning&lt;/strong&gt;: Offers selected voice tones from CosyVoice or custom voice cloning&lt;/p&gt; 
&lt;p&gt;🎬 &lt;strong&gt;Video Composition&lt;/strong&gt;: Automatically processes landscape and portrait videos and subtitle layout&lt;/p&gt; 
&lt;p&gt;💻 &lt;strong&gt;Cross-Platform&lt;/strong&gt;: Supports Windows, Linux, macOS, providing both desktop and server versions&lt;/p&gt; 
&lt;h2&gt;Effect Demonstration&lt;/h2&gt; 
&lt;p&gt;The image below shows the effect of the subtitle file generated after importing a 46-minute local video and executing it with one click, without any manual adjustments. There are no omissions or overlaps, the segmentation is natural, and the translation quality is very high. &lt;img src="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/images/alignment.png" alt="Alignment Effect" /&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="33%"&gt; &lt;h3&gt;Subtitle Translation&lt;/h3&gt; 
    &lt;hr /&gt; &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/bba1ac0a-fe6b-4947-b58d-ba99306d0339"&gt;https://github.com/user-attachments/assets/bba1ac0a-fe6b-4947-b58d-ba99306d0339&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td width="33%"&gt; &lt;h3&gt;Dubbing&lt;/h3&gt; 
    &lt;hr /&gt; &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/0b32fad3-c3ad-4b6a-abf0-0865f0dd2385"&gt;https://github.com/user-attachments/assets/0b32fad3-c3ad-4b6a-abf0-0865f0dd2385&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td width="33%"&gt; &lt;h3&gt;Portrait Mode&lt;/h3&gt; 
    &lt;hr /&gt; &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/c2c7b528-0ef8-4ba9-b8ac-f9f92f6d4e71"&gt;https://github.com/user-attachments/assets/c2c7b528-0ef8-4ba9-b8ac-f9f92f6d4e71&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;🔍 Supported Speech Recognition Services&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;All local models in the table below support automatic installation of executable files + model files; you just need to choose, and Klic will prepare everything for you.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service Source&lt;/th&gt; 
   &lt;th&gt;Supported Platforms&lt;/th&gt; 
   &lt;th&gt;Model Options&lt;/th&gt; 
   &lt;th&gt;Local/Cloud&lt;/th&gt; 
   &lt;th&gt;Remarks&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;OpenAI Whisper&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;All Platforms&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Cloud&lt;/td&gt; 
   &lt;td&gt;Fast speed and good effect&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FasterWhisper&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Windows/Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;tiny&lt;/code&gt;/&lt;code&gt;medium&lt;/code&gt;/&lt;code&gt;large-v2&lt;/code&gt; (recommended medium+)&lt;/td&gt; 
   &lt;td&gt;Local&lt;/td&gt; 
   &lt;td&gt;Faster speed, no cloud service cost&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;WhisperKit&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;macOS (M-series only)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;large-v2&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Local&lt;/td&gt; 
   &lt;td&gt;Native optimization for Apple chips&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;WhisperCpp&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;All Platforms&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;large-v2&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Local&lt;/td&gt; 
   &lt;td&gt;Supports all platforms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Alibaba Cloud ASR&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;All Platforms&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Cloud&lt;/td&gt; 
   &lt;td&gt;Avoids network issues in mainland China&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🚀 Large Language Model Support&lt;/h2&gt; 
&lt;p&gt;✅ Compatible with all cloud/local large language model services that comply with &lt;strong&gt;OpenAI API specifications&lt;/strong&gt;, including but not limited to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenAI&lt;/li&gt; 
 &lt;li&gt;Gemini&lt;/li&gt; 
 &lt;li&gt;DeepSeek&lt;/li&gt; 
 &lt;li&gt;Tongyi Qianwen&lt;/li&gt; 
 &lt;li&gt;Locally deployed open-source models&lt;/li&gt; 
 &lt;li&gt;Other API services compatible with OpenAI format&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎤 TTS Text-to-Speech Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Alibaba Cloud Voice Service&lt;/li&gt; 
 &lt;li&gt;OpenAI TTS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Language Support&lt;/h2&gt; 
&lt;p&gt;Input languages supported: Chinese, English, Japanese, German, Turkish, Korean, Russian, Malay (continuously increasing)&lt;/p&gt; 
&lt;p&gt;Translation languages supported: English, Chinese, Russian, Spanish, French, and 101 other languages&lt;/p&gt; 
&lt;h2&gt;Interface Preview&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/images/ui_desktop_light.png" alt="Interface Preview" /&gt; &lt;img src="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/images/ui_desktop_dark.png" alt="Interface Preview" /&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;p&gt;You can ask questions on the &lt;a href="https://deepwiki.com/krillinai/KrillinAI"&gt;Deepwiki of KrillinAI&lt;/a&gt;. It indexes the files in the repository, so you can find answers quickly.&lt;/p&gt; 
&lt;h3&gt;Basic Steps&lt;/h3&gt; 
&lt;p&gt;First, download the executable file that matches your device system from the &lt;a href="https://github.com/KrillinAI/KrillinAI/releases"&gt;Release&lt;/a&gt;, then follow the tutorial below to choose between the desktop version or non-desktop version. Place the software download in an empty folder, as running it will generate some directories, and keeping it in an empty folder will make management easier.&lt;/p&gt; 
&lt;p&gt;【If it is the desktop version, i.e., the release file with "desktop," see here】 &lt;em&gt;The desktop version is newly released to address the issues of new users struggling to edit configuration files correctly, and there are some bugs that are continuously being updated.&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Double-click the file to start using it (the desktop version also requires configuration within the software)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;【If it is the non-desktop version, i.e., the release file without "desktop," see here】 &lt;em&gt;The non-desktop version is the initial version, which has a more complex configuration but is stable in functionality and suitable for server deployment, as it provides a UI in a web format.&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a &lt;code&gt;config&lt;/code&gt; folder within the folder, then create a &lt;code&gt;config.toml&lt;/code&gt; file in the &lt;code&gt;config&lt;/code&gt; folder. Copy the contents of the &lt;code&gt;config-example.toml&lt;/code&gt; file from the source code's &lt;code&gt;config&lt;/code&gt; directory into &lt;code&gt;config.toml&lt;/code&gt;, and fill in your configuration information according to the comments.&lt;/li&gt; 
 &lt;li&gt;Double-click or execute the executable file in the terminal to start the service&lt;/li&gt; 
 &lt;li&gt;Open your browser and enter &lt;code&gt;http://127.0.0.1:8888&lt;/code&gt; to start using it (replace 8888 with the port you specified in the configuration file)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;To: macOS Users&lt;/h3&gt; 
&lt;p&gt;【If it is the desktop version, i.e., the release file with "desktop," see here】 Due to signing issues, the desktop version currently cannot be double-clicked to run or installed via dmg; you need to manually trust the application. The method is as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open the terminal in the directory where the executable file (assuming the file name is KrillinAI_1.0.0_desktop_macOS_arm64) is located&lt;/li&gt; 
 &lt;li&gt;Execute the following commands in order:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;sudo xattr -cr ./KrillinAI_1.0.0_desktop_macOS_arm64
sudo chmod +x ./KrillinAI_1.0.0_desktop_macOS_arm64 
./KrillinAI_1.0.0_desktop_macOS_arm64
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;【If it is the non-desktop version, i.e., the release file without "desktop," see here】 This software is not signed, so when running on macOS, after completing the file configuration in the "Basic Steps," you also need to manually trust the application. The method is as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Open the terminal in the directory where the executable file (assuming the file name is KrillinAI_1.0.0_macOS_arm64) is located&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Execute the following commands in order:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo xattr -rd com.apple.quarantine ./KrillinAI_1.0.0_macOS_arm64
 sudo chmod +x ./KrillinAI_1.0.0_macOS_arm64
 ./KrillinAI_1.0.0_macOS_arm64
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will start the service&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Docker Deployment&lt;/h3&gt; 
&lt;p&gt;This project supports Docker deployment; please refer to the &lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docker.md"&gt;Docker Deployment Instructions&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Based on the provided configuration file, here is the updated "Configuration Help (Must Read)" section for your README file:&lt;/p&gt; 
&lt;h3&gt;Configuration Help (Must Read)&lt;/h3&gt; 
&lt;p&gt;The configuration file is divided into several sections: &lt;code&gt;[app]&lt;/code&gt;, &lt;code&gt;[server]&lt;/code&gt;, &lt;code&gt;[llm]&lt;/code&gt;, &lt;code&gt;[transcribe]&lt;/code&gt;, and &lt;code&gt;[tts]&lt;/code&gt;. A task is composed of speech recognition (&lt;code&gt;transcribe&lt;/code&gt;) + large model translation (&lt;code&gt;llm&lt;/code&gt;) + optional voice services (&lt;code&gt;tts&lt;/code&gt;). Understanding this will help you better grasp the configuration file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Easiest and Quickest Configuration:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For Subtitle Translation Only:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In the &lt;code&gt;[transcribe]&lt;/code&gt; section, set &lt;code&gt;provider.name&lt;/code&gt; to &lt;code&gt;openai&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;You will then only need to fill in your OpenAI API key in the &lt;code&gt;[llm]&lt;/code&gt; block to start performing subtitle translations. The &lt;code&gt;app.proxy&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, and &lt;code&gt;openai.base_url&lt;/code&gt; can be filled in as needed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Balanced Cost, Speed, and Quality (Using Local Speech Recognition):&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In the &lt;code&gt;[transcribe]&lt;/code&gt; section, set &lt;code&gt;provider.name&lt;/code&gt; to &lt;code&gt;fasterwhisper&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Set &lt;code&gt;transcribe.fasterwhisper.model&lt;/code&gt; to &lt;code&gt;large-v2&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Fill in your large language model configuration in the &lt;code&gt;[llm]&lt;/code&gt; block.&lt;/li&gt; 
 &lt;li&gt;The required local model will be automatically downloaded and installed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Text-to-Speech (TTS) Configuration (Optional):&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;TTS configuration is optional.&lt;/li&gt; 
 &lt;li&gt;First, set the &lt;code&gt;provider.name&lt;/code&gt; under the &lt;code&gt;[tts]&lt;/code&gt; section (e.g., &lt;code&gt;aliyun&lt;/code&gt; or &lt;code&gt;openai&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Then, fill in the corresponding configuration block for the selected provider. For example, if you choose &lt;code&gt;aliyun&lt;/code&gt;, you must fill in the &lt;code&gt;[tts.aliyun]&lt;/code&gt; section.&lt;/li&gt; 
 &lt;li&gt;Voice codes in the user interface should be chosen based on the selected provider's documentation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you plan to use the voice cloning feature, you must select &lt;code&gt;aliyun&lt;/code&gt; as the TTS provider.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Alibaba Cloud Configuration:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For details on obtaining the necessary &lt;code&gt;AccessKey&lt;/code&gt;, &lt;code&gt;Bucket&lt;/code&gt;, and &lt;code&gt;AppKey&lt;/code&gt; for Alibaba Cloud services, please refer to the &lt;a href="https://www.google.com/search?q=./aliyun.md"&gt;Alibaba Cloud Configuration Instructions&lt;/a&gt;. The repeated fields for AccessKey, etc., are designed to maintain a clear configuration structure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;p&gt;Please visit &lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/faq.md"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contribution Guidelines&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Do not submit useless files, such as .vscode, .idea, etc.; please use .gitignore to filter them out.&lt;/li&gt; 
 &lt;li&gt;Do not submit config.toml; instead, submit config-example.toml.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Join our QQ group for questions: 754069680&lt;/li&gt; 
 &lt;li&gt;Follow our social media accounts, &lt;a href="https://space.bilibili.com/242124650"&gt;Bilibili&lt;/a&gt;, where we share quality content in the AI technology field every day.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#KrillinAI/KrillinAI&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=KrillinAI/KrillinAI&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ava-labs/avalanchego</title>
      <link>https://github.com/ava-labs/avalanchego</link>
      <description>&lt;p&gt;Go implementation of an Avalanche node.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ava-labs/avalanchego/master/resources/AvalancheLogoRed.png?raw=true" /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;Node implementation for the &lt;a href="https://avax.network"&gt;Avalanche&lt;/a&gt; network - a blockchains platform with high throughput, and blazing fast transactions.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Avalanche is an incredibly lightweight protocol, so the minimum computer requirements are quite modest. Note that as network usage increases, hardware requirements may change.&lt;/p&gt; 
&lt;p&gt;The minimum recommended hardware specification for nodes connected to Mainnet is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CPU: Equivalent of 8 AWS vCPU&lt;/li&gt; 
 &lt;li&gt;RAM: 16 GiB&lt;/li&gt; 
 &lt;li&gt;Storage: 1 TiB 
  &lt;ul&gt; 
   &lt;li&gt;Nodes running for very long periods of time or nodes with custom configurations may observe higher storage requirements.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;OS: Ubuntu 22.04/24.04 or macOS &amp;gt;= 12&lt;/li&gt; 
 &lt;li&gt;Network: Reliable IPv4 or IPv6 network connection, with an open public port.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you plan to build AvalancheGo from source, you will also need the following software:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/doc/install"&gt;Go&lt;/a&gt; version &amp;gt;= 1.23.9&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gcc.gnu.org/"&gt;gcc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;g++&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Building From Source&lt;/h3&gt; 
&lt;h4&gt;Clone The Repository&lt;/h4&gt; 
&lt;p&gt;Clone the AvalancheGo repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone git@github.com:ava-labs/avalanchego.git
cd avalanchego
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will clone and checkout the &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt; 
&lt;h4&gt;Building AvalancheGo&lt;/h4&gt; 
&lt;p&gt;Build AvalancheGo by running the build task:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./scripts/run_task.sh build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;avalanchego&lt;/code&gt; binary is now in the &lt;code&gt;build&lt;/code&gt; directory. To run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./build/avalanchego
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Binary Repository&lt;/h3&gt; 
&lt;p&gt;Install AvalancheGo using an &lt;code&gt;apt&lt;/code&gt; repository.&lt;/p&gt; 
&lt;h4&gt;Adding the APT Repository&lt;/h4&gt; 
&lt;p&gt;If you already have the APT repository added, you do not need to add it again.&lt;/p&gt; 
&lt;p&gt;To add the repository on Ubuntu, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo su -
wget -qO - https://downloads.avax.network/avalanchego.gpg.key | tee /etc/apt/trusted.gpg.d/avalanchego.asc
source /etc/os-release &amp;amp;&amp;amp; echo "deb https://downloads.avax.network/apt $UBUNTU_CODENAME main" &amp;gt; /etc/apt/sources.list.d/avalanche.list
exit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Installing the Latest Version&lt;/h4&gt; 
&lt;p&gt;After adding the APT repository, install &lt;code&gt;avalanchego&lt;/code&gt; by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo apt update
sudo apt install avalanchego
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Binary Install&lt;/h3&gt; 
&lt;p&gt;Download the &lt;a href="https://github.com/ava-labs/avalanchego/releases/latest"&gt;latest build&lt;/a&gt; for your operating system and architecture.&lt;/p&gt; 
&lt;p&gt;The Avalanche binary to be executed is named &lt;code&gt;avalanchego&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Docker Install&lt;/h3&gt; 
&lt;p&gt;Make sure Docker is installed on the machine - so commands like &lt;code&gt;docker run&lt;/code&gt; etc. are available.&lt;/p&gt; 
&lt;p&gt;Building the Docker image of latest &lt;code&gt;avalanchego&lt;/code&gt; branch can be done by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./scripts/run-task.sh build-image
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To check the built image, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker image ls
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The image should be tagged as &lt;code&gt;avaplatform/avalanchego:xxxxxxxx&lt;/code&gt;, where &lt;code&gt;xxxxxxxx&lt;/code&gt; is the shortened commit of the Avalanche source it was built from. To run the Avalanche node, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker run -ti -p 9650:9650 -p 9651:9651 avaplatform/avalanchego:xxxxxxxx /avalanchego/build/avalanchego
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running Avalanche&lt;/h2&gt; 
&lt;h3&gt;Connecting to Mainnet&lt;/h3&gt; 
&lt;p&gt;To connect to the Avalanche Mainnet, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./build/avalanchego
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should see some pretty ASCII art and log messages.&lt;/p&gt; 
&lt;p&gt;You can use &lt;code&gt;Ctrl+C&lt;/code&gt; to kill the node.&lt;/p&gt; 
&lt;h3&gt;Connecting to Fuji&lt;/h3&gt; 
&lt;p&gt;To connect to the Fuji Testnet, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./build/avalanchego --network-id=fuji
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Creating a Local Testnet&lt;/h3&gt; 
&lt;p&gt;The &lt;a href="https://github.com/ava-labs/avalanche-cli"&gt;avalanche-cli&lt;/a&gt; is the easiest way to start a local network.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;avalanche network start
avalanche network status
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Bootstrapping&lt;/h2&gt; 
&lt;p&gt;A node needs to catch up to the latest network state before it can participate in consensus and serve API calls. This process (called bootstrapping) currently takes several days for a new node connected to Mainnet.&lt;/p&gt; 
&lt;p&gt;A node will not &lt;a href="https://build.avax.network/docs/api-reference/health-api"&gt;report healthy&lt;/a&gt; until it is done bootstrapping.&lt;/p&gt; 
&lt;p&gt;Improvements that reduce the amount of time it takes to bootstrap are under development.&lt;/p&gt; 
&lt;p&gt;The bottleneck during bootstrapping is typically database IO. Using a more powerful CPU or increasing the database IOPS on the computer running a node will decrease the amount of time bootstrapping takes.&lt;/p&gt; 
&lt;h2&gt;Generating Code&lt;/h2&gt; 
&lt;p&gt;AvalancheGo uses multiple tools to generate efficient and boilerplate code.&lt;/p&gt; 
&lt;h3&gt;Running protobuf codegen&lt;/h3&gt; 
&lt;p&gt;To regenerate the protobuf go code, run &lt;code&gt;scripts/run-task.sh generate-protobuf&lt;/code&gt; from the root of the repo.&lt;/p&gt; 
&lt;p&gt;This should only be necessary when upgrading protobuf versions or modifying .proto definition files.&lt;/p&gt; 
&lt;p&gt;To use this script, you must have &lt;a href="https://docs.buf.build/installation"&gt;buf&lt;/a&gt; (v1.31.0), protoc-gen-go (v1.33.0) and protoc-gen-go-grpc (v1.3.0) installed.&lt;/p&gt; 
&lt;p&gt;To install the buf dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.33.0
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have not already, you may need to add &lt;code&gt;$GOPATH/bin&lt;/code&gt; to your &lt;code&gt;$PATH&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export PATH="$PATH:$(go env GOPATH)/bin"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you extract buf to ~/software/buf/bin, the following should work:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export PATH=$PATH:~/software/buf/bin/:~/go/bin
go get google.golang.org/protobuf/cmd/protoc-gen-go
go get google.golang.org/protobuf/cmd/protoc-gen-go-grpc
scripts/run_task.sh generate-protobuf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information, refer to the &lt;a href="https://grpc.io/docs/languages/go/quickstart/"&gt;GRPC Golang Quick Start Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Running mock codegen&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="CONTRIBUTING.md####Autogenerated-mocks"&gt;the Contributing document autogenerated mocks section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;h3&gt;Version Semantics&lt;/h3&gt; 
&lt;p&gt;AvalancheGo is first and foremost a client for the Avalanche network. The versioning of AvalancheGo follows that of the Avalanche network.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;v0.x.x&lt;/code&gt; indicates a development network version.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v1.x.x&lt;/code&gt; indicates a production network version.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vx.[Upgrade].x&lt;/code&gt; indicates the number of network upgrades that have occurred.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vx.x.[Patch]&lt;/code&gt; indicates the number of client upgrades that have occurred since the last network upgrade.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Library Compatibility Guarantees&lt;/h3&gt; 
&lt;p&gt;Because AvalancheGo's version denotes the network version, it is expected that interfaces exported by AvalancheGo's packages may change in &lt;code&gt;Patch&lt;/code&gt; version updates.&lt;/p&gt; 
&lt;h3&gt;API Compatibility Guarantees&lt;/h3&gt; 
&lt;p&gt;APIs exposed when running AvalancheGo will maintain backwards compatibility, unless the functionality is explicitly deprecated and announced when removed.&lt;/p&gt; 
&lt;h2&gt;Supported Platforms&lt;/h2&gt; 
&lt;p&gt;AvalancheGo can run on different platforms, with different support tiers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Tier 1&lt;/strong&gt;: Fully supported by the maintainers, guaranteed to pass all tests including e2e and stress tests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tier 2&lt;/strong&gt;: Passes all unit and integration tests but not necessarily e2e tests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tier 3&lt;/strong&gt;: Builds but lightly tested (or not), considered &lt;em&gt;experimental&lt;/em&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Not supported&lt;/strong&gt;: May not build and not tested, considered &lt;em&gt;unsafe&lt;/em&gt;. To be supported in the future.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following table lists currently supported platforms and their corresponding AvalancheGo support tiers:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Architecture&lt;/th&gt; 
   &lt;th align="center"&gt;Operating system&lt;/th&gt; 
   &lt;th align="center"&gt;Support tier&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;amd64&lt;/td&gt; 
   &lt;td align="center"&gt;Linux&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;arm64&lt;/td&gt; 
   &lt;td align="center"&gt;Linux&lt;/td&gt; 
   &lt;td align="center"&gt;2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;amd64&lt;/td&gt; 
   &lt;td align="center"&gt;Darwin&lt;/td&gt; 
   &lt;td align="center"&gt;2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;amd64&lt;/td&gt; 
   &lt;td align="center"&gt;Windows&lt;/td&gt; 
   &lt;td align="center"&gt;Not supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;arm&lt;/td&gt; 
   &lt;td align="center"&gt;Linux&lt;/td&gt; 
   &lt;td align="center"&gt;Not supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;i386&lt;/td&gt; 
   &lt;td align="center"&gt;Linux&lt;/td&gt; 
   &lt;td align="center"&gt;Not supported&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;arm64&lt;/td&gt; 
   &lt;td align="center"&gt;Darwin&lt;/td&gt; 
   &lt;td align="center"&gt;Not supported&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;To officially support a new platform, one must satisfy the following requirements:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;AvalancheGo continuous integration&lt;/th&gt; 
   &lt;th align="center"&gt;Tier 1&lt;/th&gt; 
   &lt;th align="center"&gt;Tier 2&lt;/th&gt; 
   &lt;th align="center"&gt;Tier 3&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build passes&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Unit and integration tests pass&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;End-to-end and stress tests pass&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Security Bugs&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;We and our community welcome responsible disclosures.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://raw.githubusercontent.com/ava-labs/avalanchego/master/SECURITY.md"&gt;Security Policy&lt;/a&gt; and &lt;a href="https://github.com/ava-labs/avalanchego/security/advisories"&gt;Security Advisories&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>