<rss version="2.0">
  <channel>
    <title>GitHub All Languages Monthly Trending</title>
    <description>Monthly Trending of All Languages in GitHub</description>
    <pubDate>Wed, 23 Jul 2025 01:47:48 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>GraphiteEditor/Graphite</title>
      <link>https://github.com/GraphiteEditor/Graphite</link>
      <description>&lt;p&gt;An open source graphics editor for 2025: comprehensive 2D content creation tool suite for graphic design, digital art, and interactive real-time motion graphics â€” featuring node-based procedural editing&lt;/p&gt;&lt;hr&gt;&lt;a href="https://graphite.rs/"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/user-attachments/assets/9366c148-4405-484f-909a-9a3526eb9209"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/user-attachments/assets/791508ab-bcd5-4e31-a3b9-1187cfd7a2f6"&gt; 
  &lt;img alt="Graphite logo" src="https://github.com/user-attachments/assets/791508ab-bcd5-4e31-a3b9-1187cfd7a2f6"&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h1&gt;Your procedural toolbox for 2D content creation&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Graphite is a free, open source vector and raster graphics engine, &lt;a href="https://editor.graphite.rs"&gt;available now&lt;/a&gt; in alpha. Get creative with a fully nondestructive editing workflow that combines layer-based compositing with node-based generative design.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Having begun life as a vector editor, Graphite continues evolving into a generalized, all-in-one graphics toolbox that's built more like a game engine than a conventional creative app. The editor's tools wrap its node graph core, providing user-friendly workflows for vector, raster, and beyond. Photo editing, motion graphics, digital painting, desktop publishing, and VFX compositing are additional competencies on the planned &lt;a href="https://graphite.rs/features/#roadmap"&gt;roadmap&lt;/a&gt; making Graphite into a highly versatile content creation tool.&lt;/p&gt; 
&lt;p&gt;Learn more from the &lt;a href="https://graphite.rs/"&gt;website&lt;/a&gt;, subscribe to the &lt;a href="https://graphite.rs/#newsletter"&gt;newsletter&lt;/a&gt;, consider &lt;a href="https://graphite.rs/volunteer/"&gt;volunteering&lt;/a&gt; or &lt;a href="https://graphite.rs/donate/"&gt;donating&lt;/a&gt;, and remember to give this repository a â­�!&lt;/p&gt; 
&lt;br&gt; 
&lt;a href="https://discord.graphite.rs/"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/user-attachments/assets/ad185fac-3b48-446d-863c-2bcb0724abee"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/user-attachments/assets/aa23f503-f3bf-444a-9080-8eaa19fa2fa8"&gt; 
  &lt;img alt="Discord" src="https://github.com/user-attachments/assets/aa23f503-f3bf-444a-9080-8eaa19fa2fa8" width="48" height="48"&gt; 
 &lt;/picture&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
&lt;a href="https://www.reddit.com/r/graphite/"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/user-attachments/assets/d8c05686-2eb9-4ac1-8149-728c12b4e71a"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/user-attachments/assets/6f32329a-4d6f-42d8-9a2f-42977c0b3c05"&gt; 
  &lt;img alt="Reddit" src="https://github.com/user-attachments/assets/6f32329a-4d6f-42d8-9a2f-42977c0b3c05" width="48" height="48"&gt; 
 &lt;/picture&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
&lt;a href="https://bsky.app/profile/graphiteeditor.bsky.social"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/user-attachments/assets/c736d80c-e9bf-4591-a7e0-a7723057a906"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/user-attachments/assets/3db9b0a1-5ab7-4bff-bfd3-8a4ade7b98bd"&gt; 
  &lt;img alt="Bluesky" src="https://github.com/user-attachments/assets/3db9b0a1-5ab7-4bff-bfd3-8a4ade7b98bd" width="48" height="48"&gt; 
 &lt;/picture&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
&lt;a href="https://twitter.com/graphiteeditor"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/user-attachments/assets/115f04cc-e3c2-4f90-ac35-eb9edd3ca9be"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/user-attachments/assets/4ed4185d-a622-418c-bbf4-a0419e690ca9"&gt; 
  &lt;img alt="Twitter" src="https://github.com/user-attachments/assets/4ed4185d-a622-418c-bbf4-a0419e690ca9" width="48" height="48"&gt; 
 &lt;/picture&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
&lt;a href="https://www.youtube.com/@GraphiteEditor"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/user-attachments/assets/cbc02fad-5cbc-4715-a8e5-860198e989c7"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/user-attachments/assets/d13b484d-97a8-4d9e-bbe4-c60348b3f676"&gt; 
  &lt;img alt="YouTube" src="https://github.com/user-attachments/assets/d13b484d-97a8-4d9e-bbe4-c60348b3f676" width="48" height="48"&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;br&gt;
&lt;br&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/f4604aea-e8f1-45ce-9218-46ddc666f11d"&gt;https://github.com/user-attachments/assets/f4604aea-e8f1-45ce-9218-46ddc666f11d&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support our mission â�¤ï¸�&lt;/h2&gt; 
&lt;p&gt;Graphite is 100% community built and funded. Please become a part of keeping the project alive and thriving with a &lt;a href="https://graphite.rs/donate/"&gt;donation&lt;/a&gt; if you share a belief in our &lt;strong&gt;mission&lt;/strong&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Graphite strives to unshackle the creativity of every budding artist and seasoned professional by building the best comprehensive art and design tool that's accessible to all.&lt;/p&gt; 
 &lt;p&gt;Mission success will come when Graphite is an industry standard. A cohesive product vision and focus on innovation over imitation is the strategy that will make that possible.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/decb7011-18c2-4c68-82af-d1fa5064244a" alt="Made using nondestructive boolean operations and procedural polka dot patterns"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/9e023997-185b-4f43-a724-797d308d9e7b" alt="Mandelbrot fractal filled with a noise pattern, procedurally generated and infinitely scalable"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/90eca551-5868-4f8d-9016-33958bf96345" alt="Design for a magazine spread, a preview of the upcoming focus on desktop publishing"&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing/building the code&lt;/h2&gt; 
&lt;p&gt;Are you a graphics programmer or Rust developer? Graphite aims to be one of the most approachable projects for putting your engineering skills to use in the world of open source. See &lt;a href="https://graphite.rs/volunteer/guide/"&gt;instructions here&lt;/a&gt; for setting up the project and getting started.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;By submitting code for inclusion in the project, you are agreeing to license your changes under the Apache 2.0 license, and that you have the authority to do so. Some directories may have other licenses, like dual-licensed MIT/Apache 2.0, and code submissions to those directories mean you agree to the applicable license(s).&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>stanford-oval/storm</title>
      <link>https://github.com/stanford-oval/storm</link>
      <description>&lt;p&gt;An LLM-powered knowledge curation system that researches a topic and generates a full-length report with citations.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/stanford-oval/storm/main/assets/logo.svg?sanitize=true" style="width: 25%; height: auto;"&gt; &lt;/p&gt; 
&lt;h1&gt;STORM: Synthesis of Topic Outlines through Retrieval and Multi-perspective Question Asking&lt;/h1&gt; 
&lt;p align="center"&gt; | &lt;a href="http://storm.genie.stanford.edu"&gt;&lt;b&gt;Research preview&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://arxiv.org/abs/2402.14207"&gt;&lt;b&gt;STORM Paper&lt;/b&gt;&lt;/a&gt;| &lt;a href="https://www.arxiv.org/abs/2408.15232"&gt;&lt;b&gt;Co-STORM Paper&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://storm-project.stanford.edu/"&gt;&lt;b&gt;Website&lt;/b&gt;&lt;/a&gt; | &lt;/p&gt; **Latest News** ğŸ”¥ 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;[2025/01] We add &lt;a href="https://github.com/BerriAI/litellm"&gt;litellm&lt;/a&gt; integration for language models and embedding models in &lt;code&gt;knowledge-storm&lt;/code&gt; v1.1.0.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[2024/09] Co-STORM codebase is now released and integrated into &lt;code&gt;knowledge-storm&lt;/code&gt; python package v1.0.0. Run &lt;code&gt;pip install knowledge-storm --upgrade&lt;/code&gt; to check it out.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[2024/09] We introduce collaborative STORM (Co-STORM) to support human-AI collaborative knowledge curation! &lt;a href="https://www.arxiv.org/abs/2408.15232"&gt;Co-STORM Paper&lt;/a&gt; has been accepted to EMNLP 2024 main conference.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[2024/07] You can now install our package with &lt;code&gt;pip install knowledge-storm&lt;/code&gt;!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[2024/07] We add &lt;code&gt;VectorRM&lt;/code&gt; to support grounding on user-provided documents, complementing existing support of search engines (&lt;code&gt;YouRM&lt;/code&gt;, &lt;code&gt;BingSearch&lt;/code&gt;). (check out &lt;a href="https://github.com/stanford-oval/storm/pull/58"&gt;#58&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[2024/07] We release demo light for developers a minimal user interface built with streamlit framework in Python, handy for local development and demo hosting (checkout &lt;a href="https://github.com/stanford-oval/storm/pull/54"&gt;#54&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[2024/06] We will present STORM at NAACL 2024! Find us at Poster Session 2 on June 17 or check our &lt;a href="https://raw.githubusercontent.com/stanford-oval/storm/main/assets/storm_naacl2024_slides.pdf"&gt;presentation material&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[2024/05] We add Bing Search support in &lt;a href="https://raw.githubusercontent.com/stanford-oval/storm/main/knowledge_storm/rm.py"&gt;rm.py&lt;/a&gt;. Test STORM with &lt;code&gt;GPT-4o&lt;/code&gt; - we now configure the article generation part in our demo using &lt;code&gt;GPT-4o&lt;/code&gt; model.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[2024/04] We release refactored version of STORM codebase! We define &lt;a href="https://raw.githubusercontent.com/stanford-oval/storm/main/knowledge_storm/interface.py"&gt;interface&lt;/a&gt; for STORM pipeline and reimplement STORM-wiki (check out &lt;a href="https://raw.githubusercontent.com/stanford-oval/storm/main/knowledge_storm/storm_wiki"&gt;&lt;code&gt;src/storm_wiki&lt;/code&gt;&lt;/a&gt;) to demonstrate how to instantiate the pipeline. We provide API to support customization of different language models and retrieval/search integration.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/psf/black"&gt;&lt;img src="https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true" alt="Code style: black"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview &lt;a href="https://storm.genie.stanford.edu/"&gt;(Try STORM now!)&lt;/a&gt;&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/stanford-oval/storm/main/assets/overview.svg?sanitize=true" style="width: 90%; height: auto;"&gt; &lt;/p&gt; STORM is a LLM system that writes Wikipedia-like articles from scratch based on Internet search. Co-STORM further enhanced its feature by enabling human to collaborative LLM system to support more aligned and preferred information seeking and knowledge curation. 
&lt;p&gt;While the system cannot produce publication-ready articles that often require a significant number of edits, experienced Wikipedia editors have found it helpful in their pre-writing stage.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;More than 70,000 people have tried our &lt;a href="https://storm.genie.stanford.edu/"&gt;live research preview&lt;/a&gt;. Try it out to see how STORM can help your knowledge exploration journey and please provide feedback to help us improve the system ğŸ™�!&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;How STORM &amp;amp; Co-STORM works&lt;/h2&gt; 
&lt;h3&gt;STORM&lt;/h3&gt; 
&lt;p&gt;STORM breaks down generating long articles with citations into two steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Pre-writing stage&lt;/strong&gt;: The system conducts Internet-based research to collect references and generates an outline.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Writing stage&lt;/strong&gt;: The system uses the outline and references to generate the full-length article with citations.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/stanford-oval/storm/main/assets/two_stages.jpg" style="width: 60%; height: auto;"&gt; &lt;/p&gt; 
&lt;p&gt;STORM identifies the core of automating the research process as automatically coming up with good questions to ask. Directly prompting the language model to ask questions does not work well. To improve the depth and breadth of the questions, STORM adopts two strategies:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Perspective-Guided Question Asking&lt;/strong&gt;: Given the input topic, STORM discovers different perspectives by surveying existing articles from similar topics and uses them to control the question-asking process.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Simulated Conversation&lt;/strong&gt;: STORM simulates a conversation between a Wikipedia writer and a topic expert grounded in Internet sources to enable the language model to update its understanding of the topic and ask follow-up questions.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;CO-STORM&lt;/h3&gt; 
&lt;p&gt;Co-STORM proposes &lt;strong&gt;a collaborative discourse protocol&lt;/strong&gt; which implements a turn management policy to support smooth collaboration among&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Co-STORM LLM experts&lt;/strong&gt;: This type of agent generates answers grounded on external knowledge sources and/or raises follow-up questions based on the discourse history.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Moderator&lt;/strong&gt;: This agent generates thought-provoking questions inspired by information discovered by the retriever but not directly used in previous turns. Question generation can also be grounded!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Human user&lt;/strong&gt;: The human user will take the initiative to either (1) observe the discourse to gain deeper understanding of the topic, or (2) actively engage in the conversation by injecting utterances to steer the discussion focus.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/stanford-oval/storm/main/assets/co-storm-workflow.jpg" style="width: 60%; height: auto;"&gt; &lt;/p&gt; 
&lt;p&gt;Co-STORM also maintains a dynamic updated &lt;strong&gt;mind map&lt;/strong&gt;, which organize collected information into a hierarchical concept structure, aiming to &lt;strong&gt;build a shared conceptual space between the human user and the system&lt;/strong&gt;. The mind map has been proven to help reduce the mental load when the discourse goes long and in-depth.&lt;/p&gt; 
&lt;p&gt;Both STORM and Co-STORM are implemented in a highly modular way using &lt;a href="https://github.com/stanfordnlp/dspy"&gt;dspy&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;To install the knowledge storm library, use &lt;code&gt;pip install knowledge-storm&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You could also install the source code which allows you to modify the behavior of STORM engine directly.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Clone the git repository.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/stanford-oval/storm.git
cd storm
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install the required packages.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;conda create -n storm python=3.11
conda activate storm
pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;p&gt;Currently, our package support:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Language model components: All language models supported by litellm as listed &lt;a href="https://docs.litellm.ai/docs/providers"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Embedding model components: All embedding models supported by litellm as listed &lt;a href="https://docs.litellm.ai/docs/embedding/supported_embedding"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;retrieval module components: &lt;code&gt;YouRM&lt;/code&gt;, &lt;code&gt;BingSearch&lt;/code&gt;, &lt;code&gt;VectorRM&lt;/code&gt;, &lt;code&gt;SerperRM&lt;/code&gt;, &lt;code&gt;BraveRM&lt;/code&gt;, &lt;code&gt;SearXNG&lt;/code&gt;, &lt;code&gt;DuckDuckGoSearchRM&lt;/code&gt;, &lt;code&gt;TavilySearchRM&lt;/code&gt;, &lt;code&gt;GoogleSearch&lt;/code&gt;, and &lt;code&gt;AzureAISearch&lt;/code&gt; as&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;ğŸŒŸ&lt;/span&gt; &lt;strong&gt;PRs for integrating more search engines/retrievers into &lt;a href="https://raw.githubusercontent.com/stanford-oval/storm/main/knowledge_storm/rm.py"&gt;knowledge_storm/rm.py&lt;/a&gt; are highly appreciated!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Both STORM and Co-STORM are working in the information curation layer, you need to set up the information retrieval module and language model module to create their &lt;code&gt;Runner&lt;/code&gt; classes respectively.&lt;/p&gt; 
&lt;h3&gt;STORM&lt;/h3&gt; 
&lt;p&gt;The STORM knowledge curation engine is defined as a simple Python &lt;code&gt;STORMWikiRunner&lt;/code&gt; class. Here is an example of using You.com search engine and OpenAI models.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import os
from knowledge_storm import STORMWikiRunnerArguments, STORMWikiRunner, STORMWikiLMConfigs
from knowledge_storm.lm import LitellmModel
from knowledge_storm.rm import YouRM

lm_configs = STORMWikiLMConfigs()
openai_kwargs = {
    'api_key': os.getenv("OPENAI_API_KEY"),
    'temperature': 1.0,
    'top_p': 0.9,
}
# STORM is a LM system so different components can be powered by different models to reach a good balance between cost and quality.
# For a good practice, choose a cheaper/faster model for `conv_simulator_lm` which is used to split queries, synthesize answers in the conversation.
# Choose a more powerful model for `article_gen_lm` to generate verifiable text with citations.
gpt_35 = LitellmModel(model='gpt-3.5-turbo', max_tokens=500, **openai_kwargs)
gpt_4 = LitellmModel(model='gpt-4o', max_tokens=3000, **openai_kwargs)
lm_configs.set_conv_simulator_lm(gpt_35)
lm_configs.set_question_asker_lm(gpt_35)
lm_configs.set_outline_gen_lm(gpt_4)
lm_configs.set_article_gen_lm(gpt_4)
lm_configs.set_article_polish_lm(gpt_4)
# Check out the STORMWikiRunnerArguments class for more configurations.
engine_args = STORMWikiRunnerArguments(...)
rm = YouRM(ydc_api_key=os.getenv('YDC_API_KEY'), k=engine_args.search_top_k)
runner = STORMWikiRunner(engine_args, lm_configs, rm)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;STORMWikiRunner&lt;/code&gt; instance can be evoked with the simple &lt;code&gt;run&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;topic = input('Topic: ')
runner.run(
    topic=topic,
    do_research=True,
    do_generate_outline=True,
    do_generate_article=True,
    do_polish_article=True,
)
runner.post_run()
runner.summary()
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;do_research&lt;/code&gt;: if True, simulate conversations with difference perspectives to collect information about the topic; otherwise, load the results.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;do_generate_outline&lt;/code&gt;: if True, generate an outline for the topic; otherwise, load the results.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;do_generate_article&lt;/code&gt;: if True, generate an article for the topic based on the outline and the collected information; otherwise, load the results.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;do_polish_article&lt;/code&gt;: if True, polish the article by adding a summarization section and (optionally) removing duplicate content; otherwise, load the results.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Co-STORM&lt;/h3&gt; 
&lt;p&gt;The Co-STORM knowledge curation engine is defined as a simple Python &lt;code&gt;CoStormRunner&lt;/code&gt; class. Here is an example of using Bing search engine and OpenAI models.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from knowledge_storm.collaborative_storm.engine import CollaborativeStormLMConfigs, RunnerArgument, CoStormRunner
from knowledge_storm.lm import LitellmModel
from knowledge_storm.logging_wrapper import LoggingWrapper
from knowledge_storm.rm import BingSearch

# Co-STORM adopts the same multi LM system paradigm as STORM 
lm_config: CollaborativeStormLMConfigs = CollaborativeStormLMConfigs()
openai_kwargs = {
    "api_key": os.getenv("OPENAI_API_KEY"),
    "api_provider": "openai",
    "temperature": 1.0,
    "top_p": 0.9,
    "api_base": None,
} 
question_answering_lm = LitellmModel(model=gpt_4o_model_name, max_tokens=1000, **openai_kwargs)
discourse_manage_lm = LitellmModel(model=gpt_4o_model_name, max_tokens=500, **openai_kwargs)
utterance_polishing_lm = LitellmModel(model=gpt_4o_model_name, max_tokens=2000, **openai_kwargs)
warmstart_outline_gen_lm = LitellmModel(model=gpt_4o_model_name, max_tokens=500, **openai_kwargs)
question_asking_lm = LitellmModel(model=gpt_4o_model_name, max_tokens=300, **openai_kwargs)
knowledge_base_lm = LitellmModel(model=gpt_4o_model_name, max_tokens=1000, **openai_kwargs)

lm_config.set_question_answering_lm(question_answering_lm)
lm_config.set_discourse_manage_lm(discourse_manage_lm)
lm_config.set_utterance_polishing_lm(utterance_polishing_lm)
lm_config.set_warmstart_outline_gen_lm(warmstart_outline_gen_lm)
lm_config.set_question_asking_lm(question_asking_lm)
lm_config.set_knowledge_base_lm(knowledge_base_lm)

# Check out the Co-STORM's RunnerArguments class for more configurations.
topic = input('Topic: ')
runner_argument = RunnerArgument(topic=topic, ...)
logging_wrapper = LoggingWrapper(lm_config)
bing_rm = BingSearch(bing_search_api_key=os.environ.get("BING_SEARCH_API_KEY"),
                     k=runner_argument.retrieve_top_k)
costorm_runner = CoStormRunner(lm_config=lm_config,
                               runner_argument=runner_argument,
                               logging_wrapper=logging_wrapper,
                               rm=bing_rm)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;CoStormRunner&lt;/code&gt; instance can be evoked with the &lt;code&gt;warmstart()&lt;/code&gt; and &lt;code&gt;step(...)&lt;/code&gt; methods.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# Warm start the system to build shared conceptual space between Co-STORM and users
costorm_runner.warm_start()

# Step through the collaborative discourse 
# Run either of the code snippets below in any order, as many times as you'd like
# To observe the conversation:
conv_turn = costorm_runner.step()
# To inject your utterance to actively steer the conversation:
costorm_runner.step(user_utterance="YOUR UTTERANCE HERE")

# Generate report based on the collaborative discourse
costorm_runner.knowledge_base.reorganize()
article = costorm_runner.generate_report()
print(article)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Quick Start with Example Scripts&lt;/h2&gt; 
&lt;p&gt;We provide scripts in our &lt;a href="https://raw.githubusercontent.com/stanford-oval/storm/main/examples"&gt;examples folder&lt;/a&gt; as a quick start to run STORM and Co-STORM with different configurations.&lt;/p&gt; 
&lt;p&gt;We suggest using &lt;code&gt;secrets.toml&lt;/code&gt; to set up the API keys. Create a file &lt;code&gt;secrets.toml&lt;/code&gt; under the root directory and add the following content:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# ============ language model configurations ============ 
# Set up OpenAI API key.
OPENAI_API_KEY="your_openai_api_key"
# If you are using the API service provided by OpenAI, include the following line:
OPENAI_API_TYPE="openai"
# If you are using the API service provided by Microsoft Azure, include the following lines:
OPENAI_API_TYPE="azure"
AZURE_API_BASE="your_azure_api_base_url"
AZURE_API_VERSION="your_azure_api_version"
# ============ retriever configurations ============ 
BING_SEARCH_API_KEY="your_bing_search_api_key" # if using bing search
# ============ encoder configurations ============ 
ENCODER_API_TYPE="openai" # if using openai encoder
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;STORM examples&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;To run STORM with &lt;code&gt;gpt&lt;/code&gt; family models with default configurations:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Run the following command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python examples/storm_examples/run_storm_wiki_gpt.py \
    --output-dir $OUTPUT_DIR \
    --retriever bing \
    --do-research \
    --do-generate-outline \
    --do-generate-article \
    --do-polish-article
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;To run STORM using your favorite language models or grounding on your own corpus:&lt;/strong&gt; Check out &lt;a href="https://raw.githubusercontent.com/stanford-oval/storm/main/examples/storm_examples/README.md"&gt;examples/storm_examples/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Co-STORM examples&lt;/h3&gt; 
&lt;p&gt;To run Co-STORM with &lt;code&gt;gpt&lt;/code&gt; family models with default configurations,&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Add &lt;code&gt;BING_SEARCH_API_KEY="xxx"&lt;/code&gt; and &lt;code&gt;ENCODER_API_TYPE="xxx"&lt;/code&gt; to &lt;code&gt;secrets.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run the following command&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python examples/costorm_examples/run_costorm_gpt.py \
    --output-dir $OUTPUT_DIR \
    --retriever bing
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Customization of the Pipeline&lt;/h2&gt; 
&lt;h3&gt;STORM&lt;/h3&gt; 
&lt;p&gt;If you have installed the source code, you can customize STORM based on your own use case. STORM engine consists of 4 modules:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Knowledge Curation Module: Collects a broad coverage of information about the given topic.&lt;/li&gt; 
 &lt;li&gt;Outline Generation Module: Organizes the collected information by generating a hierarchical outline for the curated knowledge.&lt;/li&gt; 
 &lt;li&gt;Article Generation Module: Populates the generated outline with the collected information.&lt;/li&gt; 
 &lt;li&gt;Article Polishing Module: Refines and enhances the written article for better presentation.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The interface for each module is defined in &lt;code&gt;knowledge_storm/interface.py&lt;/code&gt;, while their implementations are instantiated in &lt;code&gt;knowledge_storm/storm_wiki/modules/*&lt;/code&gt;. These modules can be customized according to your specific requirements (e.g., generating sections in bullet point format instead of full paragraphs).&lt;/p&gt; 
&lt;h3&gt;Co-STORM&lt;/h3&gt; 
&lt;p&gt;If you have installed the source code, you can customize Co-STORM based on your own use case&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Co-STORM introduces multiple LLM agent types (i.e. Co-STORM experts and Moderator). LLM agent interface is defined in &lt;code&gt;knowledge_storm/interface.py&lt;/code&gt; , while its implementation is instantiated in &lt;code&gt;knowledge_storm/collaborative_storm/modules/co_storm_agents.py&lt;/code&gt;. Different LLM agent policies can be customized.&lt;/li&gt; 
 &lt;li&gt;Co-STORM introduces a collaborative discourse protocol, with its core function centered on turn policy management. We provide an example implementation of turn policy management through &lt;code&gt;DiscourseManager&lt;/code&gt; in &lt;code&gt;knowledge_storm/collaborative_storm/engine.py&lt;/code&gt;. It can be customized and further improved.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Datasets&lt;/h2&gt; 
&lt;p&gt;To facilitate the study of automatic knowledge curation and complex information seeking, our project releases the following datasets:&lt;/p&gt; 
&lt;h3&gt;FreshWiki&lt;/h3&gt; 
&lt;p&gt;The FreshWiki Dataset is a collection of 100 high-quality Wikipedia articles focusing on the most-edited pages from February 2022 to September 2023. See Section 2.1 in &lt;a href="https://arxiv.org/abs/2402.14207"&gt;STORM paper&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;You can download the dataset from &lt;a href="https://huggingface.co/datasets/EchoShao8899/FreshWiki"&gt;huggingface&lt;/a&gt; directly. To ease the data contamination issue, we archive the &lt;a href="https://github.com/stanford-oval/storm/tree/NAACL-2024-code-backup/FreshWiki"&gt;source code&lt;/a&gt; for the data construction pipeline that can be repeated at future dates.&lt;/p&gt; 
&lt;h3&gt;WildSeek&lt;/h3&gt; 
&lt;p&gt;To study usersâ€™ interests in complex information seeking tasks in the wild, we utilized data collected from the web research preview to create the WildSeek dataset. We downsampled the data to ensure the diversity of the topics and the quality of the data. Each data point is a pair comprising a topic and the userâ€™s goal for conducting deep search on the topic. For more details, please refer to Section 2.2 and Appendix A of &lt;a href="https://www.arxiv.org/abs/2408.15232"&gt;Co-STORM paper&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The WildSeek dataset is available &lt;a href="https://huggingface.co/datasets/YuchengJiang/WildSeek"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Replicate STORM &amp;amp; Co-STORM paper result&lt;/h2&gt; 
&lt;p&gt;For STORM paper experiments, please switch to the branch &lt;code&gt;NAACL-2024-code-backup&lt;/code&gt; &lt;a href="https://github.com/stanford-oval/storm/tree/NAACL-2024-code-backup"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For Co-STORM paper experiments, please switch to the branch &lt;code&gt;EMNLP-2024-code-backup&lt;/code&gt; (placeholder for now, will be updated soon).&lt;/p&gt; 
&lt;h2&gt;Roadmap &amp;amp; Contributions&lt;/h2&gt; 
&lt;p&gt;Our team is actively working on:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Human-in-the-Loop Functionalities: Supporting user participation in the knowledge curation process.&lt;/li&gt; 
 &lt;li&gt;Information Abstraction: Developing abstractions for curated information to support presentation formats beyond the Wikipedia-style report.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If you have any questions or suggestions, please feel free to open an issue or pull request. We welcome contributions to improve the system and the codebase!&lt;/p&gt; 
&lt;p&gt;Contact person: &lt;a href="mailto:shaoyj@stanford.edu"&gt;Yijia Shao&lt;/a&gt; and &lt;a href="mailto:yuchengj@stanford.edu"&gt;Yucheng Jiang&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Acknowledgement&lt;/h2&gt; 
&lt;p&gt;We would like to thank Wikipedia for its excellent open-source content. The FreshWiki dataset is sourced from Wikipedia, licensed under the Creative Commons Attribution-ShareAlike (CC BY-SA) license.&lt;/p&gt; 
&lt;p&gt;We are very grateful to &lt;a href="https://michelle123lam.github.io/"&gt;Michelle Lam&lt;/a&gt; for designing the logo for this project and &lt;a href="https://dekun.me"&gt;Dekun Ma&lt;/a&gt; for leading the UI development.&lt;/p&gt; 
&lt;p&gt;Thanks to Vercel for their support of &lt;a href="https://storm.genie.stanford.edu"&gt;open-source software&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;Please cite our paper if you use this code or part of it in your work:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@inproceedings{jiang-etal-2024-unknown,
    title = "Into the Unknown Unknowns: Engaged Human Learning through Participation in Language Model Agent Conversations",
    author = "Jiang, Yucheng  and
      Shao, Yijia  and
      Ma, Dekun  and
      Semnani, Sina  and
      Lam, Monica",
    editor = "Al-Onaizan, Yaser  and
      Bansal, Mohit  and
      Chen, Yun-Nung",
    booktitle = "Proceedings of the 2024 Conference on Empirical Methods in Natural Language Processing",
    month = nov,
    year = "2024",
    address = "Miami, Florida, USA",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/2024.emnlp-main.554/",
    doi = "10.18653/v1/2024.emnlp-main.554",
    pages = "9917--9955",
}

@inproceedings{shao-etal-2024-assisting,
    title = "Assisting in Writing {W}ikipedia-like Articles From Scratch with Large Language Models",
    author = "Shao, Yijia  and
      Jiang, Yucheng  and
      Kanell, Theodore  and
      Xu, Peter  and
      Khattab, Omar  and
      Lam, Monica",
    editor = "Duh, Kevin  and
      Gomez, Helena  and
      Bethard, Steven",
    booktitle = "Proceedings of the 2024 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies (Volume 1: Long Papers)",
    month = jun,
    year = "2024",
    address = "Mexico City, Mexico",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/2024.naacl-long.347/",
    doi = "10.18653/v1/2024.naacl-long.347",
    pages = "6252--6278",
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>microsoft/ML-For-Beginners</title>
      <link>https://github.com/microsoft/ML-For-Beginners</link>
      <description>&lt;p&gt;12 weeks, 26 lessons, 52 quizzes, classic Machine Learning for all&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/microsoft/ML-For-Beginners/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/microsoft/ML-For-Beginners.svg?sanitize=true" alt="GitHub license"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/graphs/contributors/"&gt;&lt;img src="https://img.shields.io/github/contributors/microsoft/ML-For-Beginners.svg?sanitize=true" alt="GitHub contributors"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/issues/"&gt;&lt;img src="https://img.shields.io/github/issues/microsoft/ML-For-Beginners.svg?sanitize=true" alt="GitHub issues"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/pulls/"&gt;&lt;img src="https://img.shields.io/github/issues-pr/microsoft/ML-For-Beginners.svg?sanitize=true" alt="GitHub pull-requests"&gt;&lt;/a&gt; &lt;a href="http://makeapullrequest.com"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square" alt="PRs Welcome"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/watchers/"&gt;&lt;img src="https://img.shields.io/github/watchers/microsoft/ML-For-Beginners.svg?style=social&amp;amp;label=Watch" alt="GitHub watchers"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/network/"&gt;&lt;img src="https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&amp;amp;label=Fork" alt="GitHub forks"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/ML-For-Beginners/stargazers/"&gt;&lt;img src="https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&amp;amp;label=Star" alt="GitHub stars"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/zxKYvhSnVp?WT.mc_id=academic-000002-leestott"&gt;&lt;img src="https://dcbadge.vercel.app/api/server/ByRwuEEgH4" alt=""&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Machine Learning for Beginners - A Curriculum&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ğŸŒ� Travel around the world as we explore Machine Learning by means of world cultures ğŸŒ�&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Cloud Advocates at Microsoft are pleased to offer a 12-week, 26-lesson curriculum all about &lt;strong&gt;Machine Learning&lt;/strong&gt;. In this curriculum, you will learn about what is sometimes called &lt;strong&gt;classic machine learning&lt;/strong&gt;, using primarily Scikit-learn as a library and avoiding deep learning, which is covered in our &lt;a href="https://aka.ms/ai4beginners"&gt;AI for Beginners' curriculum&lt;/a&gt;. Pair these lessons with our &lt;a href="https://aka.ms/ds4beginners"&gt;'Data Science for Beginners' curriculum&lt;/a&gt;, as well!&lt;/p&gt; 
&lt;p&gt;Travel with us around the world as we apply these classic techniques to data from many areas of the world. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment, and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;âœ�ï¸� Hearty thanks to our authors&lt;/strong&gt; Jen Looper, Stephen Howell, Francesca Lazzeri, Tomomi Imura, Cassie Breviu, Dmitry Soshnikov, Chris Noring, Anirban Mukherjee, Ornella Altunyan, Ruth Yakubu and Amy Boyd&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ğŸ�¨ Thanks as well to our illustrators&lt;/strong&gt; Tomomi Imura, Dasani Madipalli, and Jen Looper&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ğŸ™� Special thanks ğŸ™� to our Microsoft Student Ambassador authors, reviewers, and content contributors&lt;/strong&gt;, notably Rishit Dagli, Muhammad Sakib Khan Inan, Rohan Raj, Alexandru Petrescu, Abhishek Jaiswal, Nawrin Tabassum, Ioan Samuila, and Snigdha Agarwal&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ğŸ¤© Extra gratitude to Microsoft Student Ambassadors Eric Wanjau, Jasleen Sondhi, and Vidushi Gupta for our R lessons!&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;p&gt;Follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork the Repository&lt;/strong&gt;: Click on the "Fork" button at the top-right corner of this page.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Clone the Repository&lt;/strong&gt;: &lt;code&gt;git clone https://github.com/microsoft/ML-For-Beginners.git&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/collections/qrqzamz1nn2wx3?WT.mc_id=academic-77952-bethanycheum"&gt;find all additional resources for this course in our Microsoft Learn collection&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://aka.ms/student-page"&gt;Students&lt;/a&gt;&lt;/strong&gt;, to use this curriculum, fork the entire repo to your own GitHub account and complete the exercises on your own or with a group:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Start with a pre-lecture quiz.&lt;/li&gt; 
 &lt;li&gt;Read the lecture and complete the activities, pausing and reflecting at each knowledge check.&lt;/li&gt; 
 &lt;li&gt;Try to create the projects by comprehending the lessons rather than running the solution code; however that code is available in the &lt;code&gt;/solution&lt;/code&gt; folders in each project-oriented lesson.&lt;/li&gt; 
 &lt;li&gt;Take the post-lecture quiz.&lt;/li&gt; 
 &lt;li&gt;Complete the challenge.&lt;/li&gt; 
 &lt;li&gt;Complete the assignment.&lt;/li&gt; 
 &lt;li&gt;After completing a lesson group, visit the &lt;a href="https://github.com/microsoft/ML-For-Beginners/discussions"&gt;Discussion Board&lt;/a&gt; and "learn out loud" by filling out the appropriate PAT rubric. A 'PAT' is a Progress Assessment Tool that is a rubric you fill out to further your learning. You can also react to other PATs so we can learn together.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For further study, we recommend following these &lt;a href="https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-77952-leestott"&gt;Microsoft Learn&lt;/a&gt; modules and learning paths.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Teachers&lt;/strong&gt;, we have &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/for-teachers.md"&gt;included some suggestions&lt;/a&gt; on how to use this curriculum.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Video walkthroughs&lt;/h2&gt; 
&lt;p&gt;Some of the lessons are available as short form video. You can find all these in-line in the lessons, or on the &lt;a href="https://aka.ms/ml-beginners-videos"&gt;ML for Beginners playlist on the Microsoft Developer YouTube channel&lt;/a&gt; by clicking the image below.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://aka.ms/ml-beginners-videos"&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/ml-for-beginners-video-banner.png" alt="ML for beginners banner"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Meet the Team&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/Tj1XWrDSYJU" title="Promo video"&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/ml.gif" alt="Promo video"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gif by&lt;/strong&gt; &lt;a href="https://linkedin.com/in/mohitjaisal"&gt;Mohit Jaisal&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ğŸ�¥ Click the image above for a video about the project and the folks who created it!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h2&gt;Pedagogy&lt;/h2&gt; 
&lt;p&gt;We have chosen two pedagogical tenets while building this curriculum: ensuring that it is hands-on &lt;strong&gt;project-based&lt;/strong&gt; and that it includes &lt;strong&gt;frequent quizzes&lt;/strong&gt;. In addition, this curriculum has a common &lt;strong&gt;theme&lt;/strong&gt; to give it cohesion.&lt;/p&gt; 
&lt;p&gt;By ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented. In addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. This curriculum was designed to be flexible and fun and can be taken in whole or in part. The projects start small and become increasingly complex by the end of the 12-week cycle. This curriculum also includes a postscript on real-world applications of ML, which can be used as extra credit or as a basis for discussion.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Find our &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;, and &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/TRANSLATIONS.md"&gt;Translation&lt;/a&gt; guidelines. We welcome your constructive feedback!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Each lesson includes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;optional sketchnote&lt;/li&gt; 
 &lt;li&gt;optional supplemental video&lt;/li&gt; 
 &lt;li&gt;video walkthrough (some lessons only)&lt;/li&gt; 
 &lt;li&gt;pre-lecture warmup quiz&lt;/li&gt; 
 &lt;li&gt;written lesson&lt;/li&gt; 
 &lt;li&gt;for project-based lessons, step-by-step guides on how to build the project&lt;/li&gt; 
 &lt;li&gt;knowledge checks&lt;/li&gt; 
 &lt;li&gt;a challenge&lt;/li&gt; 
 &lt;li&gt;supplemental reading&lt;/li&gt; 
 &lt;li&gt;assignment&lt;/li&gt; 
 &lt;li&gt;post-lecture quiz&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;A note about languages&lt;/strong&gt;: These lessons are primarily written in Python, but many are also available in R. To complete an R lesson, go to the &lt;code&gt;/solution&lt;/code&gt; folder and look for R lessons. They include an .rmd extension that represents an &lt;strong&gt;R Markdown&lt;/strong&gt; file which can be simply defined as an embedding of &lt;code&gt;code chunks&lt;/code&gt; (of R or other languages) and a &lt;code&gt;YAML header&lt;/code&gt; (that guides how to format outputs such as PDF) in a &lt;code&gt;Markdown document&lt;/code&gt;. As such, it serves as an exemplary authoring framework for data science since it allows you to combine your code, its output, and your thoughts by allowing you to write them down in Markdown. Moreover, R Markdown documents can be rendered to output formats such as PDF, HTML, or Word.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;A note about quizzes&lt;/strong&gt;: All quizzes are contained in &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/quiz-app/"&gt;Quiz App folder&lt;/a&gt;, for 52 total quizzes of three questions each. They are linked from within the lessons but the quiz app can be run locally; follow the instruction in the &lt;code&gt;quiz-app&lt;/code&gt; folder to locally host or deploy to Azure.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Lesson Number&lt;/th&gt; 
   &lt;th align="center"&gt;Topic&lt;/th&gt; 
   &lt;th align="center"&gt;Lesson Grouping&lt;/th&gt; 
   &lt;th&gt;Learning Objectives&lt;/th&gt; 
   &lt;th align="center"&gt;Linked Lesson&lt;/th&gt; 
   &lt;th align="center"&gt;Author&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;01&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to machine learning&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/README.md"&gt;Introduction&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Learn the basic concepts behind machine learning&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/1-intro-to-ML/README.md"&gt;Lesson&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Muhammad&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;02&lt;/td&gt; 
   &lt;td align="center"&gt;The History of machine learning&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/README.md"&gt;Introduction&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Learn the history underlying this field&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/2-history-of-ML/README.md"&gt;Lesson&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen and Amy&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;03&lt;/td&gt; 
   &lt;td align="center"&gt;Fairness and machine learning&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/README.md"&gt;Introduction&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;What are the important philosophical issues around fairness that students should consider when building and applying ML models?&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/3-fairness/README.md"&gt;Lesson&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Tomomi&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;04&lt;/td&gt; 
   &lt;td align="center"&gt;Techniques for machine learning&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/README.md"&gt;Introduction&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;What techniques do ML researchers use to build ML models?&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/1-Introduction/4-techniques-of-ML/README.md"&gt;Lesson&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris and Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;05&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to regression&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/README.md"&gt;Regression&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Get started with Python and Scikit-learn for regression models&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/1-Tools/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/1-Tools/solution/R/lesson_1.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;06&lt;/td&gt; 
   &lt;td align="center"&gt;North American pumpkin prices ğŸ�ƒ&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/README.md"&gt;Regression&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Visualize and clean data in preparation for ML&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/2-Data/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/2-Data/solution/R/lesson_2.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;07&lt;/td&gt; 
   &lt;td align="center"&gt;North American pumpkin prices ğŸ�ƒ&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/README.md"&gt;Regression&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Build linear and polynomial regression models&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/3-Linear/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/3-Linear/solution/R/lesson_3.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen and Dmitry&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;08&lt;/td&gt; 
   &lt;td align="center"&gt;North American pumpkin prices ğŸ�ƒ&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/README.md"&gt;Regression&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Build a logistic regression model&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/4-Logistic/README.md"&gt;Python&lt;/a&gt; &lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/2-Regression/4-Logistic/solution/R/lesson_4.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;09&lt;/td&gt; 
   &lt;td align="center"&gt;A Web App ğŸ”Œ&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/3-Web-App/README.md"&gt;Web App&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Build a web app to use your trained model&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/3-Web-App/1-Web-App/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;10&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to classification&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/README.md"&gt;Classification&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Clean, prep, and visualize your data; introduction to classification&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt; &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/1-Introduction/README.md"&gt;Python&lt;/a&gt; &lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/1-Introduction/solution/R/lesson_10.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen and Cassie&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;11&lt;/td&gt; 
   &lt;td align="center"&gt;Delicious Asian and Indian cuisines ğŸ�œ&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/README.md"&gt;Classification&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Introduction to classifiers&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt; &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/2-Classifiers-1/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/2-Classifiers-1/solution/R/lesson_11.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen and Cassie&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;12&lt;/td&gt; 
   &lt;td align="center"&gt;Delicious Asian and Indian cuisines ğŸ�œ&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/README.md"&gt;Classification&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;More classifiers&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt; &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/3-Classifiers-2/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/3-Classifiers-2/solution/R/lesson_12.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen and Cassie&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;13&lt;/td&gt; 
   &lt;td align="center"&gt;Delicious Asian and Indian cuisines ğŸ�œ&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/README.md"&gt;Classification&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Build a recommender web app using your model&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/4-Classification/4-Applied/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;14&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to clustering&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/5-Clustering/README.md"&gt;Clustering&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Clean, prep, and visualize your data; Introduction to clustering&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt; &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/5-Clustering/1-Visualize/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/5-Clustering/1-Visualize/solution/R/lesson_14.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;15&lt;/td&gt; 
   &lt;td align="center"&gt;Exploring Nigerian Musical Tastes ğŸ�§&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/5-Clustering/README.md"&gt;Clustering&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Explore the K-Means clustering method&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt; &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/5-Clustering/2-K-Means/README.md"&gt;Python&lt;/a&gt;&lt;/li&gt;
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/5-Clustering/2-K-Means/solution/R/lesson_15.html"&gt;R&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;ul&gt;
     &lt;li&gt;Jen&lt;/li&gt;
     &lt;li&gt;Eric Wanjau&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;16&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to natural language processing â˜•ï¸�&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/README.md"&gt;Natural language processing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Learn the basics about NLP by building a simple bot&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/1-Introduction-to-NLP/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Stephen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;17&lt;/td&gt; 
   &lt;td align="center"&gt;Common NLP Tasks â˜•ï¸�&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/README.md"&gt;Natural language processing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Deepen your NLP knowledge by understanding common tasks required when dealing with language structures&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/2-Tasks/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Stephen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;18&lt;/td&gt; 
   &lt;td align="center"&gt;Translation and sentiment analysis â™¥ï¸�&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/README.md"&gt;Natural language processing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Translation and sentiment analysis with Jane Austen&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/3-Translation-Sentiment/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Stephen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;19&lt;/td&gt; 
   &lt;td align="center"&gt;Romantic hotels of Europe â™¥ï¸�&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/README.md"&gt;Natural language processing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Sentiment analysis with hotel reviews 1&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/4-Hotel-Reviews-1/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Stephen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;20&lt;/td&gt; 
   &lt;td align="center"&gt;Romantic hotels of Europe â™¥ï¸�&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/README.md"&gt;Natural language processing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Sentiment analysis with hotel reviews 2&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/6-NLP/5-Hotel-Reviews-2/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Stephen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;21&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to time series forecasting&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/7-TimeSeries/README.md"&gt;Time series&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Introduction to time series forecasting&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/7-TimeSeries/1-Introduction/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Francesca&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;22&lt;/td&gt; 
   &lt;td align="center"&gt;âš¡ï¸� World Power Usage âš¡ï¸� - time series forecasting with ARIMA&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/7-TimeSeries/README.md"&gt;Time series&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Time series forecasting with ARIMA&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/7-TimeSeries/2-ARIMA/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Francesca&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;23&lt;/td&gt; 
   &lt;td align="center"&gt;âš¡ï¸� World Power Usage âš¡ï¸� - time series forecasting with SVR&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/7-TimeSeries/README.md"&gt;Time series&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Time series forecasting with Support Vector Regressor&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/7-TimeSeries/3-SVR/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Anirban&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;24&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to reinforcement learning&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/8-Reinforcement/README.md"&gt;Reinforcement learning&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Introduction to reinforcement learning with Q-Learning&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/8-Reinforcement/1-QLearning/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Dmitry&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;25&lt;/td&gt; 
   &lt;td align="center"&gt;Help Peter avoid the wolf! ğŸ�º&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/8-Reinforcement/README.md"&gt;Reinforcement learning&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Reinforcement learning Gym&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/8-Reinforcement/2-Gym/README.md"&gt;Python&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Dmitry&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Postscript&lt;/td&gt; 
   &lt;td align="center"&gt;Real-World ML scenarios and applications&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/9-Real-World/README.md"&gt;ML in the Wild&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Interesting and revealing real-world applications of classical ML&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/9-Real-World/1-Applications/README.md"&gt;Lesson&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Team&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Postscript&lt;/td&gt; 
   &lt;td align="center"&gt;Model Debugging in ML using RAI dashboard&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/9-Real-World/README.md"&gt;ML in the Wild&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Model Debugging in Machine Learning using Responsible AI dashboard components&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/9-Real-World/2-Debugging-ML-Models/README.md"&gt;Lesson&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Ruth Yakubu&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://learn.microsoft.com/en-us/collections/qrqzamz1nn2wx3?WT.mc_id=academic-77952-bethanycheum"&gt;find all additional resources for this course in our Microsoft Learn collection&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Offline access&lt;/h2&gt; 
&lt;p&gt;You can run this documentation offline by using &lt;a href="https://docsify.js.org/#/"&gt;Docsify&lt;/a&gt;. Fork this repo, &lt;a href="https://docsify.js.org/#/quickstart"&gt;install Docsify&lt;/a&gt; on your local machine, and then in the root folder of this repo, type &lt;code&gt;docsify serve&lt;/code&gt;. The website will be served on port 3000 on your localhost: &lt;code&gt;localhost:3000&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;PDFs&lt;/h2&gt; 
&lt;p&gt;Find a pdf of the curriculum with links &lt;a href="https://microsoft.github.io/ML-For-Beginners/pdf/readme.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Help Wanted&lt;/h2&gt; 
&lt;p&gt;Would you like to contribute a translation? Please read our &lt;a href="https://raw.githubusercontent.com/microsoft/ML-For-Beginners/main/TRANSLATIONS.md"&gt;translation guidelines&lt;/a&gt; and add a templated issue to manage the workload &lt;a href="https://github.com/microsoft/ML-For-Beginners/issues"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;ğŸ�’ Other Courses&lt;/h2&gt; 
&lt;p&gt;Our team produces other courses! Check out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/genai-beginners"&gt;Generative AI for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/Generative-AI-for-beginners-dotnet"&gt;Generative AI for Beginners .NET&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/generative-ai-with-javascript"&gt;Generative AI with JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/ai-beginners"&gt;AI for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/datascience-beginners"&gt;Data Science for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/ml-beginners"&gt;ML for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/Security-101"&gt;Cybersecurity for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/webdev-beginners"&gt;Web Dev for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/iot-beginners"&gt;IoT for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/xr-development-for-beginners"&gt;XR Development for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/Mastering-GitHub-Copilot-for-Paired-Programming"&gt;Mastering GitHub Copilot for Paired Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/mastering-github-copilot-for-dotnet-csharp-developers"&gt;Mastering GitHub Copilot for C#/.NET Developers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/CopilotAdventures"&gt;Choose Your Own Copilot Adventure&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>embabel/embabel-agent</title>
      <link>https://github.com/embabel/embabel-agent</link>
      <description>&lt;p&gt;Agent framework for the JVM. Pronounced Em-BAY-bel /É›mËˆbeÉªbÉ™l/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Embabel Agent Framework&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://github.com/embabel/embabel-agent/actions/workflows/maven.yml/badge.svg?sanitize=true" alt="Build"&gt; &lt;a href="https://sonarcloud.io/summary/new_code?id=embabel_embabel-agent"&gt;&lt;img src="https://sonarcloud.io/api/project_badges/measure?project=embabel_embabel-agent&amp;amp;metric=alert_status" alt="Quality Gate Status"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/t6bjkyj93q"&gt;&lt;img src="https://img.shields.io/discord/1277751399261798401?logo=discord" alt="Discord"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/kotlin-%237F52FF.svg?style=for-the-badge&amp;amp;logo=kotlin&amp;amp;logoColor=white" alt="Kotlin"&gt; &lt;img src="https://img.shields.io/badge/java-%23ED8B00.svg?style=for-the-badge&amp;amp;logo=openjdk&amp;amp;logoColor=white" alt="Java"&gt; &lt;img src="https://img.shields.io/badge/spring-%236DB33F.svg?style=for-the-badge&amp;amp;logo=spring&amp;amp;logoColor=white" alt="Spring"&gt; &lt;img src="https://img.shields.io/badge/Spring%20Boot-6DB33F.svg?style=for-the-badge&amp;amp;logo=Spring-Boot&amp;amp;logoColor=white" alt="Spring Boot"&gt; &lt;img src="https://img.shields.io/badge/apache%20tomcat-%23F8DC75.svg?style=for-the-badge&amp;amp;logo=apache-tomcat&amp;amp;logoColor=black" alt="Apache Tomcat"&gt; &lt;img src="https://img.shields.io/badge/Apache%20Maven-C71A36?style=for-the-badge&amp;amp;logo=Apache%20Maven&amp;amp;logoColor=white" alt="Apache Maven"&gt; &lt;img src="https://img.shields.io/badge/JUnit5-25A162.svg?style=for-the-badge&amp;amp;logo=JUnit5&amp;amp;logoColor=white" alt="JUnit"&gt; &lt;img src="https://img.shields.io/badge/chatGPT-74aa9c?style=for-the-badge&amp;amp;logo=openai&amp;amp;logoColor=white" alt="ChatGPT"&gt; &lt;img src="https://img.shields.io/badge/jinja-white.svg?style=for-the-badge&amp;amp;logo=jinja&amp;amp;logoColor=black" alt="Jinja"&gt; &lt;img src="https://img.shields.io/badge/JSON-000?logo=json&amp;amp;logoColor=fff" alt="JSON"&gt; &lt;img src="https://img.shields.io/badge/github%20actions-%232671E5.svg?style=for-the-badge&amp;amp;logo=githubactions&amp;amp;logoColor=white" alt="GitHub Actions"&gt; &lt;img src="https://img.shields.io/badge/SonarQube-black?style=for-the-badge&amp;amp;logo=sonarqube&amp;amp;logoColor=4E9BCD" alt="SonarQube"&gt; &lt;img src="https://img.shields.io/badge/docker-%230db7ed.svg?style=for-the-badge&amp;amp;logo=docker&amp;amp;logoColor=white" alt="Docker"&gt; &lt;img src="https://img.shields.io/badge/IntelliJIDEA-000000.svg?style=for-the-badge&amp;amp;logo=intellij-idea&amp;amp;logoColor=white" alt="IntelliJ IDEA"&gt; &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/github/license/embabel/embabel-agent?style=for-the-badge&amp;amp;logo=apache&amp;amp;color=brightgreen" alt="License"&gt;&lt;/a&gt; &lt;a href="https://github.com/embabel/embabel-agent/pulse"&gt;&lt;img src="https://img.shields.io/github/commit-activity/m/embabel/embabel-agent.svg?label=commits&amp;amp;style=for-the-badge&amp;amp;logo=git&amp;amp;logoColor=white" alt="Commits"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;img align="left" src="https://github.com/embabel/embabel-agent/raw/main/embabel-agent-api/images/315px-Meister_der_Weltenchronik_001.jpg?raw=true" width="180"&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Embabel (Em-BAY-bel) is a framework for authoring agentic flows on the JVM that seamlessly mix LLM-prompted interactions with code and domain models. Supports intelligent path finding towards goals. Written in Kotlin but offers a natural usage model from Java. From the creator of Spring.&lt;/p&gt; 
&lt;h2&gt;Key Concepts&lt;/h2&gt; 
&lt;p&gt;Models agentic flows in terms of:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Actions&lt;/strong&gt;: Steps an agent takes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Goals&lt;/strong&gt;: What an agent is trying to achieve&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Conditions&lt;/strong&gt;: Conditions to assess before executing an action or determining that a goal has been achieved. Conditions are reassessed after each action is executed.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Domain model&lt;/strong&gt;: Objects underpinning the flow and informing Actions, Goals and Conditions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Plan&lt;/strong&gt;: A sequence of actions to achieve a goal. Plans are dynamically formulated by the system, not the programmer. The system replans after the completion of each action, allowing it to adapt to new information as well as observe the effects of the previous action. This is effectively an &lt;a href="https://en.wikipedia.org/wiki/OODA_loop"&gt;OODA loop&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Application developers don't usually have to deal with these concepts directly, as most conditions result from data flow defined in code, allowing the system to infer pre and post conditions.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;These concepts underpin these differentiators versus other agent frameworks:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Sophisticated planning.&lt;/strong&gt; Goes beyond a finite state machine or sequential execution with nesting by introducing a true planning step, using a non-LLM AI algorithm. This enables the system to perform tasks it wasnâ€™t programmed to do by combining known steps in a novel order, as well as make decisions about parallelization and other runtime behavior.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Superior extensibility and reuse&lt;/strong&gt;: Because of dynamic planning, adding more domain objects, actions, goals and conditions can extend the capability of the system, &lt;em&gt;without editing FSM definitions&lt;/em&gt; or existing code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Strong typing and the benefits of object orientation&lt;/strong&gt;: Actions, goals and conditions are informed by a domain model, which can include behavior. Everything is strongly typed and prompts and manually authored code interact cleanly. No more magic maps. Enjoy full refactoring support.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Other benefits:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Platform abstraction&lt;/strong&gt;: Clean separation between programming model and platform internals allows running locally while potentially offering higher QoS in production without changing application code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Designed for LLM mixing&lt;/strong&gt;: It is easy to build applications that mix LLMs, ensuring the most cost-effective yet capable solution. This enables the system to leverage the strengths of different models for different tasks. In particular, it facilitates the use of local models for point tasks. This can be important for cost and privacy.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built on Spring and the JVM,&lt;/strong&gt; making it easy to access existing enterprise functionality and capabilities. For example: 
  &lt;ul&gt; 
   &lt;li&gt;Spring can inject and manage agents, including using Spring AOP to decorate functions.&lt;/li&gt; 
   &lt;li&gt;Robust persistence and transaction management solutions are available.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Designed for testability&lt;/strong&gt; from the ground up. Both unit testing and agent end to end testing are easy.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Flows can be authored in one of two ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An annotation-based model similar to Spring MVC, with types annotated with the Spring stereotype &lt;code&gt;@Agent&lt;/code&gt;, using &lt;code&gt;@Goal&lt;/code&gt;, &lt;code&gt;@Condition&lt;/code&gt; and &lt;code&gt;@Action&lt;/code&gt; methods.&lt;/li&gt; 
 &lt;li&gt;Idiomatic Kotlin DSL with &lt;code&gt;agent {&lt;/code&gt; and &lt;code&gt;action {&lt;/code&gt; blocks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Either way, flows are backed by a domain model of objects that can have rich behavior.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;We are working toward allowing natural language actions and goals to be deployed.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The planning step is pluggable.&lt;/p&gt; 
&lt;p&gt;The default planning approach is &lt;a href="https://medium.com/@vedantchaudhari/goal-oriented-action-planning-34035ed40d0b"&gt;Goal Oriented Action Planning&lt;/a&gt;. GOAP is a popular AI planning algorithm used in gaming. It allows for dynamic decision-making and action selection based on the current state of the world and the goals of the agent.&lt;/p&gt; 
&lt;p&gt;Goals, actions and plans are independent of GOAP. Future planning options include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Plans created by a reasoning model such as OpenAI o1 or DeepSeek R1.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The framework executes via an &lt;code&gt;AgentPlatform&lt;/code&gt; implementation.&lt;/p&gt; 
&lt;p&gt;An agent platform supports the following modes of execution:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Focused&lt;/strong&gt;, where user code requests particular functionality: User code calls a method to run a particular agent, passing in input. This is ideal for code-driven flows such as a flow invoked in response to an incoming event.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Closed&lt;/strong&gt;, where user intent (or another incoming event) is classified to choose an agent. The platform tries to find a suitable agent among all the agents it knows about. Agent choice is dynamic, but only actions defined within the particular agent will run.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Open&lt;/strong&gt;, where the user's intent is assessed and the platform uses &lt;em&gt;all&lt;/em&gt; its resources to try to achieve it. The platform tries to find a suitable goal among all the goals it knows about and builds a custom agent to achieve it from the start state, including relevant actions and conditions. The platform will not proceed if it is unconvinced as to the applicability of any goal. The &lt;code&gt;GoalChoiceApprover&lt;/code&gt; interface provides developers a way to limit goal choice further.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Open mode is the most powerful, but least deterministic.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;In open mode, the platform is capable of finding novel paths that were not envisioned by developers, and even combining functionality from multiple providers.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Even in open mode, the platform will only perform individual steps that have been specified. (Of course, steps may themselves be LLM transforms, in which case the prompts are controlled by user code but the results are still non-deterministic.)&lt;/p&gt; 
&lt;p&gt;Possible future modes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Evolving&lt;/strong&gt; mode: Where the platform can work with multiple goals in the same process and modify a running process to add further goals and agents. For example, an action can realize that it has become important to achieve additional goals.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Embabel agent systems will also support federation, both with other Embabel systems (allowing planning to incorporate remote actions and goals) and third party agent frameworks.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Get an agent running in under 5 minutes.&lt;/p&gt; 
&lt;p&gt;Create your own agent repo from our &lt;a href="https://github.com/embabel/java-agent-template"&gt;Java&lt;/a&gt; or &lt;a href="https://github.com/embabel/kotlin-agent-template"&gt;Kotlin&lt;/a&gt; GitHub template by clicking the "Use this template" button.&lt;/p&gt; 
&lt;p&gt;You can also create your own Embabel agent project locally with our quick start tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;uvx --from git+https://github.com/embabel/project-creator.git project-creator
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Choose Java or Kotlin and specify your project name and package name and you'll have an agent running in under a minute, if you already have an &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; and have Maven installed.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;ğŸ“š For examples and tutorials&lt;/strong&gt;, see the &lt;a href="https://github.com/embabel/embabel-agent-examples"&gt;Embabel Agent Examples Repository&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;ğŸš— For a realistic example application&lt;/strong&gt;, see the &lt;a href="https://github.com/embabel/tripper"&gt;Tripper travel planner agent&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Why Is Embabel Needed?&lt;/h2&gt; 
&lt;p&gt;TL;DR Because the evolution of agent frameworks is early and there's a lot of room for improvement; because an agent framework on the JVM will deliver great business value.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Why do we need an agent framework at all&lt;/em&gt;? We can write code without higher level abstractions, directly invoking LLMs and controlling flow directly in code. However, a higher level agent framework offers compelling benefits. For example: 
  &lt;ul&gt; 
   &lt;li&gt;Breaking up LLM interactions, making them simpler and more focused. This maximizes reuse and minimizes cost and errors. It often allows us to use cheaper models for point interactions.&lt;/li&gt; 
   &lt;li&gt;Facilitating both unit and integration testing, which remain as important with agentic systems as with any other software systems.&lt;/li&gt; 
   &lt;li&gt;Increasing composability where subflows and individual actions can be reused&lt;/li&gt; 
   &lt;li&gt;Making applications more manageable and robust, enabling a workflow manager to control their execution and retry operations while maintaining previous state&lt;/li&gt; 
   &lt;li&gt;Enhancing safety through the ability to apply guardrails in many places&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Why do we need an agent framework for the JVM when solutions exist in Python?&lt;/em&gt;: While this space is presently better developed in Python (or even TypeScript), it's early and there's plenty of room for novel and potentially superior approaches. The key adjacency is often not the LLM--which is a simple HTTP call away--but existing code and infrastructure assets that are more likely on the JVM than in Python.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Why not use just Spring AI?&lt;/em&gt; Spring AI is great. We build on it, and embrace the Spring component model. However, we believe that most applications should work with higher level APIs. An analogy: Spring AI exists at the level of the Servlet API, while Embabel is more like Spring MVC. Complex requirements are much easier to express and test in Embabel than with direct use of Spring AI.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Why not attempt to contribute this project to Spring?&lt;/em&gt; This project requires different governance from Spring, where most projects exist in stable environments and dependability and stability outweighs rapid innovation. Second, the concepts are not JVM-specific. We hope that Embabel will become the leading agent framework across platforms. While the Spring brand is valuable in Java, it is not in TypeScript or Python.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Show Me The Code&lt;/h2&gt; 
&lt;p&gt;In Kotlin or Java, agent implementation code is intuitive and easy to test.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;@Agent(description = "Find news based on a person's star sign")
class StarNewsFinder(
    // Services such as Horoscope are injected using Spring
    private val horoscopeService: HoroscopeService,
    private val storyCount: Int = 5,
) {

    @Action
    fun extractPerson(userInput: UserInput): StarPerson =
        // All prompts are typesafe
        PromptRunner().createObject("Create a person from this user input, extracting their name and star sign: $userInput")

    @Action
    fun retrieveHoroscope(starPerson: StarPerson) =
        Horoscope(horoscopeService.dailyHoroscope(starPerson.sign))

    // toolGroups specifies tools that are required for this action to run
    @Action(toolGroups = [ToolGroup.WEB])
    fun findNewsStories(person: StarPerson, horoscope: Horoscope): RelevantNewsStories =
        PromptRunner().createObject(
            """
            ${person.name} is an astrology believer with the sign ${person.sign}.
            Their horoscope for today is:
                &amp;lt;horoscope&amp;gt;${horoscope.summary}&amp;lt;/horoscope&amp;gt;
            Given this, use web tools and generate search queries
            to find $storyCount relevant news stories summarize them in a few sentences.
            Include the URL for each story.
            Do not look for another horoscope reading or return results directly about astrology;
            find stories relevant to the reading above.

            For example:
            - If the horoscope says that they may
            want to work on relationships, you could find news stories about
            novel gifts
            - If the horoscope says that they may want to work on their career,
            find news stories about training courses.
        """.trimIndent()
        )

    // The @AchievesGoal annotation indicates that completing this action
    // achieves the given goal, so the agent run will be complete
    @AchievesGoal(
        description = "Write an amusing writeup for the target person based on their horoscope and current news stories",
    )
    @Action
    fun writeup(
        person: StarPerson,
        relevantNewsStories: RelevantNewsStories,
        horoscope: Horoscope,
    ): Writeup =
        // Customize LLM call
        PromptRunner().withTemperature(1.2).createObject(
            """
            Take the following news stories and write up something
            amusing for the target person.

            Begin by summarizing their horoscope in a concise, amusing way, then
            talk about the news. End with a surprising signoff.

            ${person.name} is an astrology believer with the sign ${person.sign}.
            Their horoscope for today is:
                &amp;lt;horoscope&amp;gt;${horoscope.summary}&amp;lt;/horoscope&amp;gt;
            Relevant news stories are:
            ${relevantNewsStories.items.joinToString("\n") { "- ${it.url}: ${it.summary}" }}

            Format it as Markdown with links.
        """.trimIndent()
        )

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The following domain classes ensure type safety:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;data class RelevantNewsStories(
    val items: List&amp;lt;NewsStory&amp;gt;
)

data class NewsStory(
    val url: String,

    val summary: String,
)

data class Subject(
    val name: String,
    val sign: String,
)

data class Horoscope(
    val summary: String,
)

data class FunnyWriteup(
    override val text: String,
) : HasContent
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Dog Food Policy&lt;/h2&gt; 
&lt;p&gt;We believe that all aspects of software development can and should be greatly accelerated through the use of AI agents. The ultimate decision makers remain human, but they can and should be greatly augmented.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This project practices extreme dogfooding.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- TODO photo of Duke with kibble --&gt; 
&lt;p&gt;Our key principles:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;We will use AI agents to help every aspect of the project:&lt;/strong&gt; coding, documentation, producing marketing copy etc. Any human performing a task should ask why it cannot be automated, and strive toward maximum automation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Developers retain ultimate control.&lt;/strong&gt; Developers are responsible for guiding agents toward the solution and iterating as necessary. A developer who commits or merges an agent contribution is responsible for ensuring that it meets the project coding standards, which are independent of the use of agents. For example, code must be human readable.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;We will use only open source agents built on the Embabel platform,&lt;/strong&gt; and contribute any improvements. While commercial coding agents may be more advanced, we believe that our platform is the best general solution for automation and by dogfooding we will improve it fastest. By open sourcing agents used on our open source projects, we will maximize benefit to the community.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;We will prioritize agents that help accelerate our progress.&lt;/strong&gt; Per the flight safety advice to fit your own mask before helping others, we will prioritize agents that help us accelerate our own progress. This will not only produce useful examples, but increase overall project velocity.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Developers must carefully read all code they commit and improve generated code if possible.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Get the bits&lt;/li&gt; 
 &lt;li&gt;Set up your environment&lt;/li&gt; 
 &lt;li&gt;Run the application&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Getting the bits&lt;/h3&gt; 
&lt;p&gt;Choose one of the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clone the repository via &lt;code&gt;git clone https://github.com/embabel/embabel-agent&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Create a new Spring Boot project and add the necessary dependencies (see "Using Embabel Agent Framework in Your Project" below)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Environment variables&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Environment variables are consistent with common usage, rather than Spring AI. For example, we prefer &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; to &lt;code&gt;SPRING_AI_OPENAI_API_KEY&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Required:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;: For the OpenAI API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Optional:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ANTHROPIC_API_KEY&lt;/code&gt;: For the Anthropic API. Necessary for the coding agent.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;We strongly recommend providing both an OpenAI and Anthropic key, as some examples require both. And it's important to try to find the best LLM for a given task, rather than automatically choose a familiar provider.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Services&lt;/h3&gt; 
&lt;p&gt;You will need a Docker Desktop version &lt;a href="https://docs.docker.com/desktop/release-notes/"&gt;&lt;code&gt;&amp;gt;4.43.2&lt;/code&gt;&lt;/a&gt;. Be sure to activate the following MCP tools from the catalog:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Brave Search&lt;/li&gt; 
 &lt;li&gt;Fetch&lt;/li&gt; 
 &lt;li&gt;Puppeteer&lt;/li&gt; 
 &lt;li&gt;Wikipedia&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You can also set up your own MCP tools using Spring AI conventions. See the &lt;code&gt;application-docker-desktop.yml&lt;/code&gt; file for an example.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you're running Ollama locally, set the &lt;code&gt;ollama&lt;/code&gt; profile and Embabel will automatically connect to your Ollama endpoint and make all models available.&lt;/p&gt; 
&lt;h3&gt;Running&lt;/h3&gt; 
&lt;p&gt;Create your own agent project with&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;uvx --from git+https://github.com/embabel/project-creator.git project-creator
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Example Agents&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;ğŸ“š For examples and tutorials&lt;/strong&gt;, see the &lt;a href="https://github.com/embabel/embabel-agent-examples"&gt;Embabel Agent Examples Repository&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone and run examples
git clone https://github.com/embabel/embabel-agent-examples
cd embabel-agent-examples/scripts/kotlin
./shell.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Shell Commands&lt;/h4&gt; 
&lt;p&gt;Type &lt;code&gt;help&lt;/code&gt; to see available commands. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;execute "Lynda is a Scorpio, find news for her" -p -r
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-p&lt;/code&gt; logs prompts&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-r&lt;/code&gt; logs LLM responses&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Use &lt;code&gt;chat&lt;/code&gt; for interactive conversations with agents.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Spring Shell supports history - type &lt;code&gt;!!&lt;/code&gt; to repeat the last command&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Type &lt;code&gt;help&lt;/code&gt; to see the available commands.&lt;/p&gt; 
&lt;p&gt;An example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;execute "Lynda is a Scorpio, find news for her" -p -r
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will look for an agent, choose the star finder agent and run the flow. &lt;code&gt;-p&lt;/code&gt; will log prompts &lt;code&gt;-r&lt;/code&gt; will log LLM responses. Omit these for less verbose logging.&lt;/p&gt; 
&lt;p&gt;Use the &lt;code&gt;chat&lt;/code&gt; command to enter an interactive chat with the agent. It will retain conversation history, and attempt to run the most appropriate agent for each command.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Spring Shell supports history. Type &lt;code&gt;!!&lt;/code&gt; to repeat the last command. This will survive restarts, so is handy when iterating on an agent.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Further examples&lt;/h4&gt; 
&lt;p&gt;Example commands within the shell:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# Perplexity style deep research
# Requires both OpenAI and Anthropic keys and Docker Desktop with the MCP extension (or your own web tools)
execute "research the recent australian federal election. what is the position of the greens party?"

# x is a shortcut for execute
x "fact check the following: holden cars are still made in australia; the koel is a bird native only to australia; fidel castro is justin trudeau's father"

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Try the &lt;a href="https://www.github.com/embabel/embabel-coding-agent"&gt;coding agent&lt;/a&gt; (separate repo) with commands such as:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
x "explain this project for a five your old"

x "take the StarNewsFinder kotlin example of the agent framework. create a parallel .java package beside its and create a java version of the same agent use the same annotations and other classes. use records for the data classes. make it modern java"

x "consider the StarNewsFinder kotlin class. This is intended as an example. Is there anything you could do to make it simpler? Include suggested API changes. Do not change code"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Bringing in additional LLMs&lt;/h3&gt; 
&lt;h4&gt;Local models with well-known providers&lt;/h4&gt; 
&lt;p&gt;The Embabel Agent Framework supports local models from:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ollama: Simply set the &lt;code&gt;ollama&lt;/code&gt; profile and your local Ollama endpoint will be queries. All local models will be available.&lt;/li&gt; 
 &lt;li&gt;Docker: Set the &lt;code&gt;docker&lt;/code&gt; profile and your local Docker endpoint will be queried. All local models will be available.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Custom LLMs&lt;/h4&gt; 
&lt;p&gt;You can define an LLM for any provider for which a Spring AI &lt;code&gt;ChatModel&lt;/code&gt; is available.&lt;/p&gt; 
&lt;p&gt;Simply define Spring beans of type &lt;code&gt;Llm&lt;/code&gt;. See the &lt;code&gt;OpenAiConfiguration&lt;/code&gt; class as an example.&lt;/p&gt; 
&lt;p&gt;Remember:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Provide the knowledge cutoff date if you know it&lt;/li&gt; 
 &lt;li&gt;Make the configuration class conditional on any required API key.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;This project is in its early stages, but we have big plans. The milestones and issues in this repository are a good reference. Our key goals:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Become the natural way to Gen AI-enable Java applications&lt;/strong&gt;, and especially those built on Spring.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prove the power of the model&lt;/strong&gt;. Demonstrate that this model is the most capable agent model. See the &lt;a href="https://github.com/embabel/embabel-agent/milestone/4"&gt;Dunnart milestone&lt;/a&gt; for details. In particular: 
  &lt;ul&gt; 
   &lt;li&gt;Demonstrate the power of extensibility without modification, by adding goals and actions&lt;/li&gt; 
   &lt;li&gt;Demonstrate the potential to become the PaaS for natural language&lt;/li&gt; 
   &lt;li&gt;Demonstrate the potential of agent federation within the GOAP model&lt;/li&gt; 
   &lt;li&gt;Demonstrate budget-aware agents, such as "Research the following topic, spending up to 20c if you are still learning"&lt;/li&gt; 
   &lt;li&gt;Integrate with data stores and demonstrate the power of surfacing existing functionality inside an organization&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Take the model to other platforms&lt;/strong&gt;: The conceptual framework is not JVM specific. Once established, we intend to create TypeScript and Python projects.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There is a lot to do, and you are awesome. We look forward to your contribution!&lt;/p&gt; 
&lt;h2&gt;Application Design&lt;/h2&gt; 
&lt;h3&gt;Domain objects&lt;/h3&gt; 
&lt;p&gt;Applications center around domain objects. These can be instantiated by LLMs or user code, and manipulated by user code.&lt;/p&gt; 
&lt;p&gt;Use Jackson annotations to help LLMs with descriptions as well as mark fields to ignore. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;@JsonClassDescription("Person with astrology details")
data class StarPerson(
    override val name: String,
    @get:JsonPropertyDescription("Star sign")
    val sign: String,
) : Person
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://github.com/victools/jsonschema-generator/tree/main/jsonschema-module-jackson"&gt;Java Json Schema Generation - Module Jackson&lt;/a&gt; for documentation of the library used.&lt;/p&gt; 
&lt;p&gt;Domain objects can have behaviors that are automatically exposed to LLMs when they are in scope. Simply annotate methods with the Spring AI &lt;code&gt;@Tool&lt;/code&gt; annotation.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;When exposing &lt;code&gt;@Tool&lt;/code&gt; methods on domain objects, be sure that the tool is safe to invoke. Even the best LLMs can get trigger-happy. For example, be careful about methods that can mutate or delete data. This is likely better modeled via an explicit call to a non-tool method on the same domain class, in a code action.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Using Embabel as an MCP server&lt;/h2&gt; 
&lt;p&gt;You can use the Embabel agent platform as an MCP server from a UI like Claude Desktop. The Embabel MCP server is available over SSE.&lt;/p&gt; 
&lt;p&gt;Configure Claude Desktop as follows in your &lt;code&gt;claude_desktop_config.yml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "embabel": {
      "command": "npx",
      "args": [
        "-y",
        "mcp-remote",
        "http://localhost:8080/sse"
      ]
    }
  }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://modelcontextprotocol.io/quickstart/user"&gt;MCP Quickstart for Claude Desktop Users&lt;/a&gt; for how to configure Claude Desktop.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://github.com/modelcontextprotocol/inspector"&gt;MCP Inspector&lt;/a&gt; is a helpful tool for interacting with your Embabel SSE server, manually invoking tools and checking the exposed prompts and resources.&lt;/p&gt; 
&lt;p&gt;Start the MCP Inspector with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx @modelcontextprotocol/inspector
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Consuming MCP Servers&lt;/h2&gt; 
&lt;p&gt;The Embabel Agent Framework provides built-in support for consuming Model Context Protocol (MCP) servers, allowing you to extend your applications with powerful AI capabilities through standardized interfaces.&lt;/p&gt; 
&lt;h3&gt;What is MCP?&lt;/h3&gt; 
&lt;p&gt;Model Context Protocol (MCP) is an open protocol that standardizes how applications provide context and extra functionality to large language models. Introduced by Anthropic, MCP has emerged as the de facto standard for connecting AI agents to tools, functioning as a client-server protocol where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Clients&lt;/strong&gt; (like Embabel Agent) send requests to servers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Servers&lt;/strong&gt; process those requests to deliver necessary context to the AI model&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;MCP simplifies integration between AI applications and external tools, transforming an "MÃ—N problem" into an "M+N problem" through standardization - similar to what USB did for hardware peripherals.&lt;/p&gt; 
&lt;h3&gt;Configuring MCP in Embabel Agent&lt;/h3&gt; 
&lt;p&gt;To configure MCP servers in your Embabel Agent application, add the following to your &lt;code&gt;application.yml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;spring:
  ai:
    mcp:
      client:
        enabled: true
        name: embabel
        version: 1.0.0
        request-timeout: 30s
        type: SYNC
        stdio:
          connections:
            docker-mcp:
              command: docker
              args:
                - run
                - -i
                - --rm
                - alpine/socat
                - STDIO
                - TCP:host.docker.internal:8811
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This configuration sets up an MCP client that connects to a Docker-based MCP server. The connection uses STDIO transport through Docker's socat utility to connect to a TCP endpoint.&lt;/p&gt; 
&lt;h3&gt;Docker Desktop MCP Integration&lt;/h3&gt; 
&lt;p&gt;Docker has embraced MCP with their Docker MCP Catalog and Toolkit, which provides:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Centralized Discovery&lt;/strong&gt; - A trusted hub for discovering MCP tools integrated into Docker Hub&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Containerized Deployment&lt;/strong&gt; - Run MCP servers as containers without complex setup&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Secure Credential Management&lt;/strong&gt; - Centralized, encrypted credential handling&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built-in Security&lt;/strong&gt; - Sandbox isolation and permissions management&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The Docker MCP ecosystem includes over 100 verified tools from partners like Stripe, Elastic, Neo4j, and more, all accessible through Docker's infrastructure.&lt;/p&gt; 
&lt;h3&gt;Learn More&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.docker.com/desktop/features/gordon/mcp/"&gt;Docker MCP Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/docker/mcp-servers"&gt;Docker MCP Servers Repository&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.docker.com/blog/introducing-docker-mcp-catalog-and-toolkit/"&gt;Introducing Docker MCP Catalog and Toolkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.philschmid.de/mcp-introduction"&gt;MCP Introduction and Overview&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A2A&lt;/h2&gt; 
&lt;p&gt;Embabel integrates with the &lt;a href="https://github.com/google-a2a/A2A"&gt;A2A&lt;/a&gt; protocol, allowing you to connect to other A2A-enabled agents and services.&lt;/p&gt; 
&lt;p&gt;Enable the &lt;code&gt;a2a&lt;/code&gt; Spring profile to start the A2A server.&lt;/p&gt; 
&lt;p&gt;You'll need the following environment variable:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GOOGLE_STUDIO_API_KEY&lt;/code&gt;: Your Google Studio API key, which is used for Gemini.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Start the Google A2A web interface using the &lt;code&gt;a2a&lt;/code&gt; Docker profile:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose --profile a2a up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Go to the web interface running within the container at &lt;code&gt;http://localhost:12000/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Connect to your agent at &lt;code&gt;host.docker.internal:8080/a2a&lt;/code&gt;. Note that &lt;code&gt;localhost:8080/a2a&lt;/code&gt; won't work as the server cannot access it when running in a Docker container.&lt;/p&gt; 
&lt;h2&gt;Running Tests&lt;/h2&gt; 
&lt;p&gt;Run the tests via Maven.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mvn test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will run both unit and integration tests but will not require an internet connection or any external services.&lt;/p&gt; 
&lt;h2&gt;Spring profiles&lt;/h2&gt; 
&lt;p&gt;Spring profiles are used to configure the application for different environments and behaviors.&lt;/p&gt; 
&lt;p&gt;Interaction profiles:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;shell&lt;/code&gt;: Runs agent in interactive shell. Does not start web process.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Model profiles:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ollama&lt;/code&gt;: Looks for Ollama models. You will need to have Ollama installed locally and the relevant models pulled.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;docker-desktop&lt;/code&gt;: Looks for Docker-managed local models when running outside Docker but talking to Docker Desktop with the MCP extension. &lt;strong&gt;This is recommended for the best experience, with Docker-provided web tools.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;docker&lt;/code&gt;: Looks for Docker-managed local models when running in a Docker container.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Logging profiles:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;severance&lt;/code&gt;: &lt;a href="https://www.youtube.com/watch?v=xEQP4VVuyrY&amp;amp;ab_channel=AppleTV"&gt;Severance&lt;/a&gt; specific logging. Praise Kier!&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;starwars&lt;/code&gt;: Star Wars specific logging. Feel the force&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;colossus&lt;/code&gt;: Colossus specific logging. The Forbin Project.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;A key goal of this framework is ease of testing. Just as Spring eased testing of early enterprise Java applications, this framework facilitates testing of AI applications.&lt;/p&gt; 
&lt;p&gt;Types of testing:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Unit tests: All agents are unit testable, like any Spring-managed beans. Construct them with mock objects; call individual action methods. The testing library facilitates testing prompts.&lt;/li&gt; 
 &lt;li&gt;Integration tests: tbd&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;All logging in this project is either debug logging in the relevant class itself, or results from the stream of events of type &lt;code&gt;AgentEvent&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Edit &lt;code&gt;application.yml&lt;/code&gt; if you want to see debug logging from the relevant classes and packages.&lt;/p&gt; 
&lt;p&gt;Available logging experiences:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;severance&lt;/code&gt;: Severance logging. Praise Kier&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;starwars&lt;/code&gt;: Star Wars logging. Feel the force. The default as it's understood throughout the galaxy.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;colossus&lt;/code&gt;: Colossus logging. The Forbin Project.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;montypython&lt;/code&gt;: Monty Python logging. No one expects it.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hh&lt;/code&gt;: Hitchhiker's Guide to the Galaxy logging. The answer is 42.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If none of these profiles is chosen, Embabel will use vanilla logging. This makes me sad.&lt;/p&gt; 
&lt;h2&gt;Adding Embabel Agent Framework to Your Project&lt;/h2&gt; 
&lt;h3&gt;Maven&lt;/h3&gt; 
&lt;p&gt;The easiest way is to add the Embabel Spring Boot starter dependency to your &lt;code&gt;pom.xml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;
&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;com.embabel.agent&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;embabel-agent-starter&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;${embabel-agent.version}&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Gradle (Kotlin DSL)&lt;/h3&gt; 
&lt;p&gt;Add the required repositories to your &lt;code&gt;build.gradle.kts&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;repositories {
    mavenCentral()
    maven {
        name = "embabel-snapshots"
        url = uri("https://repo.embabel.com/artifactory/libs-snapshot")
        mavenContent {
            snapshotsOnly()
        }
    }
    maven {
        name = "Spring Milestones"
        url = uri("https://repo.spring.io/milestone")
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add the Embabel Agent starter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;dependencies {
    implementation('com.embabel.agent:embabel-agent-starter:${embabel-agent.version}')
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Gradle (Groovy DSL)&lt;/h3&gt; 
&lt;p&gt;Add the required repositories to your &lt;code&gt;build.gradle&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;repositories {
    mavenCentral()
    maven {
        name = 'embabel-snapshots'
        url = 'https://repo.embabel.com/artifactory/libs-snapshot'
        mavenContent {
            snapshotsOnly()
        }
    }
    maven {
        name = 'Spring Milestones'
        url = 'https://repo.spring.io/milestone'
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add the Embabel Agent starter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;dependencies {
    implementation 'com.embabel.agent:embabel-agent-starter:0.1.0-SNAPSHOT'
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The Spring Milestones repository is required because the Embabel BOM (&lt;code&gt;embabel-agent-dependencies&lt;/code&gt;) has transitive dependencies on experimental Spring components, specifically the &lt;code&gt;mcp-bom&lt;/code&gt;. This BOM is not available on Maven Central and is only published to the Spring milestone repository. Unlike Maven, Gradle does not inherit repository configurations declared in parent POMs or BOMs. Therefore, it is necessary to explicitly declare the Spring milestone repository in your repositories block to ensure proper resolution of all transitive dependencies.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Repository&lt;/h2&gt; 
&lt;p&gt;Binary Packages are located in Embabel Maven Repository. You would need to add Embabel Snapshot Repository to your pom.xml or configure in settings.xml&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;
&amp;lt;repositories&amp;gt;
    &amp;lt;repository&amp;gt;
        &amp;lt;id&amp;gt;embabel-snapshots&amp;lt;/id&amp;gt;
        &amp;lt;url&amp;gt;https://repo.embabel.com/artifactory/libs-snapshot&amp;lt;/url&amp;gt;
        &amp;lt;snapshots&amp;gt;
            &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;
        &amp;lt;/snapshots&amp;gt;
    &amp;lt;/repository&amp;gt;
&amp;lt;/repositories&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions to the Embabel Agent Framework.&lt;/p&gt; 
&lt;p&gt;Look at the &lt;a href="https://raw.githubusercontent.com/embabel/embabel-agent/main/embabel-agent-api/.embabel/coding-style.md"&gt;coding style guide&lt;/a&gt; for style guidelines. This file also informs coding agent behavior.&lt;/p&gt; 
&lt;h2&gt;Miscellaneous&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Why the name Embabel?&lt;/em&gt; The "babel" part is ultimately inspired by the story of the Tower of Babel, perhaps via Douglas Adams' &lt;a href="https://www.youtube.com/watch?v=iuumnjJWFO4&amp;amp;ab_channel=BBCStudios"&gt;babelfish&lt;/a&gt;. Per @lasuac: &lt;em&gt;While Adams' fish in the ear enabled universal translation between species, Embabel aims at translating human intent to JVM code, AI models, and enterprise systems.&lt;/em&gt; "embabel" also sounds like "enable."&lt;/li&gt; 
 &lt;li&gt;Milestone names are Australian animals. Mythical animals such as "bunyip" and "yowie" are used for futures that may or not be implemented.&lt;/li&gt; 
 &lt;li&gt;README badges come from &lt;a href="https://github.com/Ileriayo/markdown-badges"&gt;here&lt;/a&gt; and &lt;a href="https://home.aveek.io/GitHub-Profile-Badges/"&gt;here&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star history&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#embabel/embabel-agent&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=embabel/embabel-agent&amp;amp;type=Date" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/embabel/embabel-agent/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=embabel/embabel-agent" alt="Embabel contributors"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;(c) Embabel Software Inc 2024-2025.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GyulyVGC/sniffnet</title>
      <link>https://github.com/GyulyVGC/sniffnet</link>
      <description>&lt;p&gt;Comfortably monitor your Internet traffic ğŸ•µï¸�â€�â™‚ï¸�&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;img alt="" title="Sniffnet" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/header_repository.png" width="95%"&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/#download"&gt;&lt;img alt="" title="Download" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/badges/download.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://github.com/GyulyVGC/sniffnet/raw/main/ROADMAP.md"&gt;&lt;img alt="" title="Roadmap" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/badges/roadmap.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://sniffnet.net"&gt;&lt;img alt="" title="Website" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/badges/website.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://github.com/GyulyVGC/sniffnet/wiki"&gt;&lt;img alt="" title="Wiki" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/badges/wiki.svg?sanitize=true"&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Application to comfortably monitor your Internet traffic.&lt;br&gt; Cross-platform. Intuitive. Reliable.&lt;/p&gt; 
 &lt;p&gt;Translated in:&lt;br&gt; ğŸ‡¨ğŸ‡³ ğŸ‡©ğŸ‡ª ğŸ‡«ğŸ‡· ğŸ‡·ğŸ‡º ğŸ‡µğŸ‡¹ ğŸ‡ªğŸ‡¦ ğŸ‡®ğŸ‡¹ ğŸ‡µğŸ‡± &lt;a href="https://github.com/GyulyVGC/sniffnet/issues/60"&gt;+&amp;nbsp;14&amp;nbsp;more&amp;nbsp;languages&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt; 
 &lt;picture&gt; 
  &lt;img alt="" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/hr.png" width="100%"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img alt="" title="Overview page" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/pages/overview.png" width="95%"&gt; 
 &lt;img alt="" title="Inspect page" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/pages/inspect.png" width="47%"&gt; 
 &lt;img alt="" title="Notifications page" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/pages/notifications.png" width="47%"&gt; 
 &lt;img alt="" title="Custom theme" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/pages/deep_cosmos.png" width="47%"&gt; 
 &lt;img alt="" title="Thumbnail mode" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/pages/thumbnail.png" width="47%"&gt; 
&lt;/div&gt; 
&lt;p&gt; 
 &lt;picture&gt; 
  &lt;img alt="" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/hr.png" width="100%"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h2&gt;&lt;em&gt;Support Sniffnet's development&lt;/em&gt; ğŸ’–&lt;/h2&gt; 
&lt;p&gt;&lt;i&gt;Sniffnet is completely free, open-source software which needs lots of effort and time to develop and maintain.&lt;/i&gt;&lt;/p&gt; 
&lt;p&gt;&lt;i&gt;If you appreciate Sniffnet, &lt;a href="https://github.com/sponsors/GyulyVGC"&gt;consider sponsoring&lt;/a&gt;: your support will enable a constant growth with &lt;a href="https://github.com/GyulyVGC/sniffnet/raw/main/ROADMAP.md"&gt;new features and functionalities&lt;/a&gt;.&lt;br&gt; Do you want to help the project in an alternative way? You can also head to the &lt;a href="https://grindhouse.dev/collections/sniffnet"&gt;official store&lt;/a&gt; and put your hands on some cool merchandise!&lt;/i&gt;&lt;/p&gt; 
&lt;p&gt;&lt;i&gt;A special mention goes to these awesome organizations and folks who are sponsoring Sniffnet:&lt;/i&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/github" title="GitHub"&gt;&lt;img src="https://avatars.githubusercontent.com/github?v=4" width="60px" alt="GitHub"&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;a href="https://nlnet.nl" title="NLnet"&gt;&lt;img src="https://nlnet.nl/logo/logo.svg?sanitize=true" width="60px" alt="NLnet"&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;a href="https://ipinfo.io" title="IPinfo"&gt;&lt;img src="https://avatars.githubusercontent.com/ipinfo?v=4" width="60px" alt="IPinfo"&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;a href="https://github.com/Cthulu201" title="Cthulu201"&gt;&lt;img src="https://avatars.githubusercontent.com/Cthulu201?v=4" width="60px" alt="Cthulu201"&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;a href="https://github.com/0x0177b11f" title="Tiansheng Li"&gt;&lt;img src="https://avatars.githubusercontent.com/0x0177b11f?v=4" width="60px" alt="Tiansheng Li"&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;a href="https://github.com/ZEROF" title="ZEROF"&gt;&lt;img src="https://avatars.githubusercontent.com/ZEROF?v=4" width="60px" alt="ZEROF"&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;a href="https://www.janwalter.org/" title="Jan Walter"&gt;&lt;img src="https://avatars.githubusercontent.com/wahn?v=4" width="60px" alt="Jan Walter"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;&lt;a href="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/#download"&gt;&lt;img alt="Windows" title="Windows" height="35px" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/badges/windows.svg?sanitize=true"&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;a href="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/#download"&gt;&lt;img alt="macOS" title="macOS" height="35px" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/badges/macos.svg?sanitize=true"&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;a href="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/#download"&gt;&lt;img alt="Linux (.deb)" title="Linux (.deb)" height="35px" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/badges/linux_deb.svg?sanitize=true"&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;a href="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/#download"&gt;&lt;img alt="Linux (.rpm)" title="Linux (.rpm)" height="35px" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/badges/linux_rpm.svg?sanitize=true"&gt;&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/GyulyVGC/sniffnet/releases/latest/download/Sniffnet_Windows_64-bit.msi"&gt;64â€‘bit&lt;/a&gt;&amp;nbsp;|&amp;nbsp;&lt;a href="https://github.com/GyulyVGC/sniffnet/releases/latest/download/Sniffnet_Windows_32-bit.msi"&gt;32â€‘bit&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/GyulyVGC/sniffnet/releases/latest/download/Sniffnet_macOS_Intel.dmg"&gt;Intel&lt;/a&gt;&amp;nbsp;|&amp;nbsp;&lt;a href="https://github.com/GyulyVGC/sniffnet/releases/latest/download/Sniffnet_macOS_AppleSilicon.dmg"&gt;Apple&amp;nbsp;silicon&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/GyulyVGC/sniffnet/releases/latest/download/Sniffnet_LinuxDEB_amd64.deb"&gt;amd64&lt;/a&gt;&amp;nbsp;|&amp;nbsp;&lt;a href="https://github.com/GyulyVGC/sniffnet/releases/latest/download/Sniffnet_LinuxDEB_arm64.deb"&gt;arm64&lt;/a&gt;&amp;nbsp;|&amp;nbsp;&lt;a href="https://github.com/GyulyVGC/sniffnet/releases/latest/download/Sniffnet_LinuxDEB_i386.deb"&gt;i386&lt;/a&gt;&amp;nbsp;|&amp;nbsp;&lt;a href="https://github.com/GyulyVGC/sniffnet/releases/latest/download/Sniffnet_LinuxDEB_armhf.deb"&gt;armhf&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/GyulyVGC/sniffnet/releases/latest/download/Sniffnet_LinuxRPM_x86_64.rpm"&gt;x86_64&lt;/a&gt;&amp;nbsp;|&amp;nbsp;&lt;a href="https://github.com/GyulyVGC/sniffnet/releases/latest/download/Sniffnet_LinuxRPM_aarch64.rpm"&gt;aarch64&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Links in the table above will download the latest version of Sniffnet directly from &lt;a href="https://github.com/GyulyVGC/sniffnet/releases"&gt;GitHub releases&lt;/a&gt;. &lt;br&gt; Not what you're looking for? Check out &lt;a href="https://github.com/GyulyVGC/sniffnet/wiki/Alternative-installation-methods"&gt;alternative installation methods&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;Remember to also install the &lt;a href="https://github.com/GyulyVGC/sniffnet/wiki/Required-dependencies"&gt;required dependencies&lt;/a&gt; for your operating system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;ğŸ’» choose a &lt;strong&gt;network adapter&lt;/strong&gt; of your PC to inspect&lt;/li&gt; 
 &lt;li&gt;ğŸ�·ï¸� select a set of &lt;strong&gt;filters&lt;/strong&gt; to apply to the observed traffic&lt;/li&gt; 
 &lt;li&gt;ğŸ“– view overall &lt;strong&gt;statistics&lt;/strong&gt; about your Internet traffic&lt;/li&gt; 
 &lt;li&gt;ğŸ“ˆ view &lt;strong&gt;real-time charts&lt;/strong&gt; about traffic intensity&lt;/li&gt; 
 &lt;li&gt;ğŸ“Œ keep an eye on your network even when the application is &lt;strong&gt;minimized&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;ğŸ“� &lt;strong&gt;import&lt;/strong&gt; and &lt;strong&gt;export&lt;/strong&gt; comprehensive capture reports as &lt;strong&gt;PCAP files&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;ğŸ”� identify &lt;strong&gt;6000+ upper layer services&lt;/strong&gt;, protocols, trojans, and worms&lt;/li&gt; 
 &lt;li&gt;ğŸŒ� find out &lt;strong&gt;domain name&lt;/strong&gt; and &lt;strong&gt;ASN&lt;/strong&gt; of the hosts you are exchanging traffic with&lt;/li&gt; 
 &lt;li&gt;ğŸ�  identify connections in your &lt;strong&gt;local network&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;ğŸŒ� discover the &lt;strong&gt;geographical location&lt;/strong&gt; of remote hosts&lt;/li&gt; 
 &lt;li&gt;â­� save your &lt;strong&gt;favorite&lt;/strong&gt; network hosts&lt;/li&gt; 
 &lt;li&gt;ğŸ•µï¸�â€�â™‚ï¸� search and &lt;strong&gt;inspect&lt;/strong&gt; each of your network connections in real time&lt;/li&gt; 
 &lt;li&gt;ğŸ”‰ set custom &lt;strong&gt;notifications&lt;/strong&gt; to inform you when defined network events occur&lt;/li&gt; 
 &lt;li&gt;ğŸ�¨ choose the &lt;strong&gt;style&lt;/strong&gt; that fits you the most, including custom themes support&lt;/li&gt; 
 &lt;li&gt;...and more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;User manual&lt;/h2&gt; 
&lt;p&gt;Do you want to &lt;strong&gt;learn more&lt;/strong&gt;? &lt;br&gt; Check out the &lt;a href="https://github.com/GyulyVGC/sniffnet/wiki"&gt;&lt;strong&gt;Sniffnet Wiki&lt;/strong&gt;&lt;/a&gt;, a comprehensive manual to help you thoroughly master the application from a basic setup to the most advanced functionalities. &lt;br&gt; The Wiki includes step-by-step guides, tips, examples of usage, and answers to frequent questions.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/GyulyVGC/sniffnet/wiki"&gt; &lt;img alt="" title="Sniffnet Wiki" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/logos/wiki/wikilogo.svg?sanitize=true" width="300px"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;See details&lt;/summary&gt; 
 &lt;h3&gt;Missing dependencies&lt;/h3&gt; 
 &lt;p&gt;Most of the errors that may arise are likely due to your system missing dependencies required to correctly analyze a network adapter. &lt;br&gt; Check the &lt;a href="https://github.com/GyulyVGC/sniffnet/wiki/Required-dependencies"&gt;required dependencies page&lt;/a&gt; for instructions on how to proceed depending on your operating system.&lt;/p&gt; 
 &lt;h3&gt;Rendering problems&lt;/h3&gt; 
 &lt;p&gt;In some circumstances, especially if you are running on an old architecture or your graphical drivers are not updated, the &lt;code&gt;wgpu&lt;/code&gt; default renderer used by &lt;a href="https://github.com/iced-rs/iced"&gt;iced&lt;/a&gt; may manifest bugs (the interface glitches, color gradients are unsupported, or some icons are completely black). &lt;br&gt; In these cases you can set an environment variable to switch to the &lt;code&gt;tiny-skia&lt;/code&gt; renderer, a CPU-only software renderer that should work properly on every environment:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;ICED_BACKEND=tiny-skia
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;&lt;em&gt;&lt;strong&gt;In any case, don't hesitate to &lt;a href="https://github.com/GyulyVGC/sniffnet/issues/new/choose"&gt;open an issue&lt;/a&gt;, and I will do my best to help you!&lt;/strong&gt;&lt;/em&gt;&lt;/h3&gt; 
&lt;/details&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A big shout-out to &lt;a href="https://github.com/GyulyVGC/sniffnet/raw/main/CONTRIBUTORS.md"&gt;all the contributors&lt;/a&gt; of Sniffnet!&lt;/li&gt; 
 &lt;li&gt;The graphical user interface has been realized with &lt;a href="https://github.com/iced-rs/iced"&gt;iced&lt;/a&gt;, a cross-platform GUI library for Rust focused on simplicity and type-safety&lt;/li&gt; 
 &lt;li&gt;IP geolocation and ASN data are provided by &lt;a href="https://www.maxmind.com"&gt;MaxMind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ads.fund/token/0xadfc251f8ef00ceaeca2b5c1882dabe5db0833df"&gt;Sniffnet&lt;/a&gt; project is supported by ADS.FUND&lt;/li&gt; 
 &lt;li&gt;Last but not least, thanks to &lt;a href="https://github.com/GyulyVGC/sniffnet/stargazers"&gt;every single stargazer&lt;/a&gt;: all forms of support made it possible to keep improving Sniffnet!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Stay in the loop&lt;/h2&gt; 
&lt;p&gt;Wait... there's more!&lt;br&gt;Sniffnet is rapidly evolving, and new features are added on a regular basis.&lt;br&gt; Follow the &lt;a href="https://sniffnet.net/news"&gt;&lt;b&gt;news&lt;/b&gt;&lt;/a&gt; and Sniffnet socials to never miss an update.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://bsky.app/profile/sniffnet.net"&gt;&lt;img width="48" height="48" alt="Bluesky" title="Bluesky" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/badges/bluesky.svg?sanitize=true"&gt;&lt;/a&gt;&amp;nbsp; 
 &lt;a href="https://www.linkedin.com/company/sniffnet"&gt;&lt;img width="48" height="48" alt="LinkedIn" title="LinkedIn" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/badges/linkedin.svg?sanitize=true"&gt;&lt;/a&gt;&amp;nbsp; 
 &lt;a href="https://mastodon.social/@sniffnet"&gt;&lt;img width="48" height="48" alt="Mastodon" title="Mastodon" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/badges/mastodon.svg?sanitize=true"&gt;&lt;/a&gt;&amp;nbsp; 
 &lt;a href="https://t.me/sniffnet"&gt;&lt;img width="48" height="48" alt="Telegram" title="Telegram" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/badges/telegram.svg?sanitize=true"&gt;&lt;/a&gt;&amp;nbsp; 
 &lt;a href="https://x.com/sniffnet"&gt;&lt;img width="48" height="48" alt="Twitter / X" title="Twitter / X" src="https://raw.githubusercontent.com/GyulyVGC/sniffnet/main/resources/repository/badges/x.svg?sanitize=true"&gt;&lt;/a&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Kilo-Org/kilocode</title>
      <link>https://github.com/Kilo-Org/kilocode</link>
      <description>&lt;p&gt;Open Source AI coding assistant for planning, building, and fixing code. We're a superset of Roo, Cline, and our own features. Follow us: kilocode.ai/social&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code"&gt;&lt;img src="https://img.shields.io/visual-studio-marketplace/v/kilocode.Kilo-Code.svg?label=VS%20Code%20Marketplace" alt="VS Code Marketplace"&gt;&lt;/a&gt; 
 &lt;!--&lt;a href="https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code"&gt;&lt;img src="https://img.shields.io/badge/Get%20$20%20of%20free%20tokens-green?logo=claude&amp;logoColor=white" alt="Get $20 of tokens for free"&gt;&lt;/a&gt;--&gt; &lt;a href="https://x.com/kilo_code"&gt;&lt;img src="https://img.shields.io/twitter/follow/kilo_code?style=flat&amp;amp;logo=x&amp;amp;color=555" alt="X (Twitter)"&gt;&lt;/a&gt; &lt;a href="https://blog.kilocode.ai"&gt;&lt;img src="https://img.shields.io/badge/Blog-555?style=flat&amp;amp;logo=substack&amp;amp;logoColor=white" alt="Substack Blog"&gt;&lt;/a&gt; &lt;a href="https://kilocode.ai/discord"&gt;&lt;img src="https://img.shields.io/discord/1349288496988160052?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://www.reddit.com/r/kilocode/"&gt;&lt;img src="https://img.shields.io/reddit/subreddit-subscribers/kilocode?style=flat&amp;amp;logo=reddit&amp;amp;logoColor=white" alt="Reddit"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;ğŸš€ Kilo Code&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Open-source VS Code AI agent. Merged features from &lt;a href="https://github.com/RooVetGit/Roo-Code"&gt;Roo Code&lt;/a&gt; and &lt;a href="https://github.com/cline/cline"&gt;Cline&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;âœ¨ Generate code from natural language&lt;/li&gt; 
 &lt;li&gt;âœ… Checks its own work&lt;/li&gt; 
 &lt;li&gt;ğŸ§ª Run terminal commands&lt;/li&gt; 
 &lt;li&gt;ğŸŒ� Automate the browser&lt;/li&gt; 
 &lt;li&gt;ğŸ¤– Latest AI models&lt;/li&gt; 
 &lt;li&gt;ğŸ�� API keys optional&lt;/li&gt; 
 &lt;li&gt;ğŸ’¡ &lt;strong&gt;$20 free credits for Gemini 2.5 Pro, Claude 4 Sonnet &amp;amp; Opus, and GPT-4.1&lt;/strong&gt;&lt;br&gt;Share feedback and earn more credits!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Kilo-Org/kilocode/refs/heads/main/kilo.gif" width="100%"&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://kilocode.ai/vscode-marketplace?utm_source=Readme"&gt;VS Code Marketplace&lt;/a&gt; (download)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kilocode.ai"&gt;Official KiloCode.ai Home page&lt;/a&gt; (learn more)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code Generation:&lt;/strong&gt; Generate code using natural language.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Task Automation:&lt;/strong&gt; Automate repetitive coding tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automated Refactoring:&lt;/strong&gt; Refactor and improve existing code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Server Marketplace&lt;/strong&gt;: Easily find, and use MCP servers to extend the agent capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi Mode&lt;/strong&gt;: Plan with Architect, Code with Coder, and Debug with Debugger, and make your own custom modes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to get started with Kilo Code&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the Kilo Code extension from the &lt;a href="https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code"&gt;VS Code Marketplace&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Log in with your Google Account to get $20 in free Claude 4 Sonnet &amp;amp; Opus credits.&lt;/li&gt; 
 &lt;li&gt;Start using the extension. Here's a video to help you get started (just click on the image below and you'll be redirected to YouTube):&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/pqGfYXgrhig"&gt;&lt;img src="https://img.youtube.com/vi/pqGfYXgrhig/maxresdefault.jpg" alt="Watch the video"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Difference between Roo Code and Cline&lt;/h2&gt; 
&lt;p&gt;We're doing our best to combine the best of both worlds. Kilo Code combines all features of Cline, Roo, and adds a few of our own additions. It has the best features of both, and we're working on making it even better!&lt;/p&gt; 
&lt;p&gt;No need to fiddle with API keys, Kilo Code ships with the latest AI models plugged in, including Claude 4 Sonnet and Opus and Gemini 2.5 Pro.&lt;/p&gt; 
&lt;p&gt;Kilo Code is a direct fork from Roo Code, but also includes the following features from Cline (and more):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MCP Server Marketplace: Easily find, and use MCP servers to extend the agent capabilities.&lt;/li&gt; 
 &lt;li&gt;System notifications: Get notified when the agent is done with a task.&lt;/li&gt; 
 &lt;li&gt;Easy model connection: with bigger free tier.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Extension Development&lt;/h2&gt; 
&lt;p&gt;For details on building and developing the extension, see &lt;a href="https://raw.githubusercontent.com/Kilo-Org/kilocode/main/DEVELOPMENT.md"&gt;DEVELOPMENT.md&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>twentyhq/twenty</title>
      <link>https://github.com/twentyhq/twenty</link>
      <description>&lt;p&gt;Building a modern alternative to Salesforce, powered by the community.&lt;/p&gt;&lt;hr&gt;&lt;br&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.twenty.com"&gt; &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/core/logo.svg?sanitize=true" width="100px" alt="Twenty logo"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2 align="center"&gt;The #1 Open-Source CRM &lt;/h2&gt; 
&lt;p align="center"&gt;&lt;a href="https://twenty.com"&gt;ğŸŒ� Website&lt;/a&gt; Â· &lt;a href="https://twenty.com/developers"&gt;ğŸ“š Documentation&lt;/a&gt; Â· &lt;a href="https://github.com/orgs/twentyhq/projects/1"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/planner-icon.svg?sanitize=true" width="12" height="12"&gt; Roadmap &lt;/a&gt; Â· &lt;a href="https://discord.gg/cx5n4Jzs57"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/discord-icon.svg?sanitize=true" width="12" height="12"&gt; Discord&lt;/a&gt; Â· &lt;a href="https://www.figma.com/file/xt8O9mFeLl46C5InWwoMrN/Twenty"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/figma-icon.png" width="12" height="12"&gt; Figma&lt;/a&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.twenty.com"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/github-cover-dark.png"&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/github-cover-light.png"&gt; 
   &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/github-cover-light.png" alt="Cover"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;See:&lt;br&gt; ğŸš€ &lt;a href="https://twenty.com/developers/section/self-hosting"&gt;Self-hosting&lt;/a&gt;&lt;br&gt; ğŸ–¥ï¸� &lt;a href="https://twenty.com/developers/local-setup"&gt;Local Setup&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Does the world need another CRM?&lt;/h1&gt; 
&lt;p&gt;We built Twenty for three reasons:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;CRMs are too expensive, and users are trapped.&lt;/strong&gt; Companies use locked-in customer data to hike prices. It shouldn't be that way.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A fresh start is required to build a better experience.&lt;/strong&gt; We can learn from past mistakes and craft a cohesive experience inspired by new UX patterns from tools like Notion, Airtable or Linear.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We believe in Open-source and community.&lt;/strong&gt; Hundreds of developers are already building Twenty together. Once we have plugin capabilities, a whole ecosystem will grow around it.&lt;/p&gt; 
&lt;br&gt; 
&lt;h1&gt;What You Can Do With Twenty&lt;/h1&gt; 
&lt;p&gt;Please feel free to flag any specific needs you have by creating an issue.&lt;/p&gt; 
&lt;p&gt;Below are a few features we have implemented to date:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#personalize-layouts-with-filters-sort-group-by-kanban-and-table-views"&gt;Personalize layouts with filters, sort, group by, kanban and table views&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#customize-your-objects-and-fields"&gt;Customize your objects and fields&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#create-and-manage-permissions-with-custom-roles"&gt;Create and manage permissions with custom roles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#automate-workflow-with-triggers-and-actions"&gt;Automate workflow with triggers and actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#emails-calendar-events-files-and-more"&gt;Emails, calendar events, files, and more&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Personalize layouts with filters, sort, group by, kanban and table views&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/views-dark.png"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/views-light.png"&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/views-light.png" alt="Companies Kanban Views"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h2&gt;Customize your objects and fields&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/data-model-dark.png"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/data-model-light.png"&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/data-model-light.png" alt="Setting Custom Objects"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h2&gt;Create and manage permissions with custom roles&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/permissions-dark.png"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/permissions-light.png"&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/permissions-light.png" alt="Permissions"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h2&gt;Automate workflow with triggers and actions&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/workflows-dark.png"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/workflows-light.png"&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/workflows-light.png" alt="Workflows"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h2&gt;Emails, calendar events, files, and more&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/plus-other-features-dark.png"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/plus-other-features-light.png"&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/plus-other-features-light.png" alt="Other Features"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;h1&gt;Stack&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nx.dev/"&gt;Nx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nestjs.com/"&gt;NestJS&lt;/a&gt;, with &lt;a href="https://bullmq.io/"&gt;BullMQ&lt;/a&gt;, &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt;, &lt;a href="https://redis.io/"&gt;Redis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;, with &lt;a href="https://recoiljs.org/"&gt;Recoil&lt;/a&gt;, &lt;a href="https://emotion.sh/"&gt;Emotion&lt;/a&gt; and &lt;a href="https://lingui.dev/"&gt;Lingui&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Thanks&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.chromatic.com/"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/chromatic.png" height="30" alt="Chromatic"&gt;&lt;/a&gt; &lt;a href="https://greptile.com"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/greptile.png" height="30" alt="Greptile"&gt;&lt;/a&gt; &lt;a href="https://sentry.io/"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/sentry.png" height="30" alt="Sentry"&gt;&lt;/a&gt; &lt;a href="https://crowdin.com/"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/crowdin.png" height="30" alt="Crowdin"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Thanks to these amazing services that we use and recommend for UI testing (Chromatic), code review (Greptile), catching bugs (Sentry) and translating (Crowdin).&lt;/p&gt; 
&lt;h1&gt;Join the Community&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Star the repo&lt;/li&gt; 
 &lt;li&gt;Subscribe to releases (watch -&amp;gt; custom -&amp;gt; releases)&lt;/li&gt; 
 &lt;li&gt;Follow us on &lt;a href="https://twitter.com/twentycrm"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/company/twenty/"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Join our &lt;a href="https://discord.gg/cx5n4Jzs57"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Improve translations on &lt;a href="https://twenty.crowdin.com/twenty"&gt;Crowdin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twentyhq/twenty/contribute"&gt;Contributions&lt;/a&gt; are, of course, most welcome!&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Alibaba-NLP/WebAgent</title>
      <link>https://github.com/Alibaba-NLP/WebAgent</link>
      <description>&lt;p&gt;ğŸŒ� WebAgent for Information Seeking built by Tongyi Lab: WebWalker &amp; WebDancer &amp; WebSailor &amp; WebShaper https://arxiv.org/abs/2507.15061 https://arxiv.org/pdf/2507.02592&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h2&gt;WebAgent for Information Seeking built by Tongyi Lab, Alibaba Group &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/tongyi.png" width="30px" style="display:inline;"&gt;&lt;/h2&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/14217" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/14217" alt="Alibaba-NLP%2FWebAgent | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; ğŸ¤— &lt;a href="https://huggingface.co/datasets/Alibaba-NLP/WebShaper" target="_blank"&gt;WebShaperQA&lt;/a&gt; ï½œ &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/tongyi.png" width="14px" style="display:inline;"&gt; &lt;a href="https://modelscope.cn/datasets/iic/WebShaper" target="_blank"&gt;WebShaperQA&lt;/a&gt; ï½œ ğŸ¤— &lt;a href="https://huggingface.co/Alibaba-NLP/WebSailor-3B" target="_blank"&gt;WebSailor-3B&lt;/a&gt; ï½œ &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/tongyi.png" width="14px" style="display:inline;"&gt; &lt;a href="https://modelscope.cn/models/iic/WebSailor-3B" target="_blank"&gt;ModelScope WebSailor-3B&lt;/a&gt; | &lt;/p&gt; 
&lt;p align="center"&gt; ğŸ¤— &lt;a href="https://huggingface.co/Alibaba-NLP/WebDancer-32B" target="_blank"&gt;WebDancer-QwQ-32B&lt;/a&gt; | &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/tongyi.png" width="14px" style="display:inline;"&gt; &lt;a href="https://modelscope.cn/models/iic/WebDancer-32B" target="_blank"&gt;ModelScope WebDancer-QwQ-32B&lt;/a&gt; | ğŸ¤— &lt;a href="https://huggingface.co/datasets/callanwu/WebWalkerQA" target="_blank"&gt;WebWalkerQA&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/roadmap.png" width="100%" height="400%"&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You can check the paper of &lt;a href="https://arxiv.org/pdf/2505.22648"&gt;WebDancer&lt;/a&gt; and &lt;a href="https://arxiv.org/pdf/2501.07572"&gt;WebWalker&lt;/a&gt; and &lt;a href="https://arxiv.org/pdf/2507.02592"&gt;WebSailor&lt;/a&gt; and &lt;a href="https://arxiv.org/pdf/2507.15061"&gt;WebShaper&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ğŸ’¥ ğŸ’¥ ğŸ’¥ Stay tuned for more updates! We are working on building native agentic model based on the Browser and more open-domain environments!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/WebShaper"&gt;&lt;strong&gt;WebShaper&lt;/strong&gt;&lt;/a&gt; (Preprint 2025) - WebShaper: Agentically Data Synthesizing via Information-Seeking Formalization&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/WebSailor"&gt;&lt;strong&gt;WebSailor&lt;/strong&gt;&lt;/a&gt; (Preprint 2025) - WebSailor: Navigating Super-human Reasoning for Web Agent&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/WebDancer"&gt;&lt;strong&gt;WebDancer&lt;/strong&gt;&lt;/a&gt; (Preprint 2025) - WebDancer: Towards Autonomous Information Seeking Agency&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/WebWalker"&gt;&lt;strong&gt;WebWalker&lt;/strong&gt;&lt;/a&gt; (ACL 2025) - WebWalker: Benchmarking LLMs in Web Traversal&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ“° News and Updates&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;2025.07.22&lt;/code&gt; ğŸ”¥ğŸ”¥ğŸ”¥We release &lt;strong&gt;WebShaper&lt;/strong&gt;: Agentically Data Synthesizing via Information-Seeking Formalization.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025.07.11&lt;/code&gt; ğŸ”¥ğŸ”¥ğŸ”¥&lt;strong&gt;WebSailor-3B&lt;/strong&gt; is &lt;a href="https://huggingface.co/Alibaba-NLP/WebSailor-3B"&gt;released&lt;/a&gt;. You can deploy it with one click using &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/aliyun.png" width="14px" style="display:inline;"&gt; &lt;a href="https://functionai.console.aliyun.com/template-detail?template=Alibaba-NLP-WebSailor-3B"&gt;Alibaba Cloud's FunctionAI&lt;/a&gt; in ten minutes!&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025.07.03&lt;/code&gt; ğŸ”¥ğŸ”¥ğŸ”¥We release &lt;strong&gt;WebSailor&lt;/strong&gt;, an agentic search model specialized in performing extremely complex information seeking tasks, achieving open-source SOTA on some of the most difficult browsing benchmarks. &lt;strong&gt;WebSailor&lt;/strong&gt; topped the HuggingFace &lt;a href="https://huggingface.co/papers/2507.02592"&gt;daily papers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025.06.23&lt;/code&gt; ğŸ”¥ğŸ”¥ğŸ”¥The model, interactive demo, and some of the data of &lt;strong&gt;WebDancer&lt;/strong&gt; have been open-sourced. You're welcome to try them out!&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025.05.29&lt;/code&gt; ğŸ”¥ğŸ”¥ğŸ”¥We release &lt;strong&gt;WebDancer&lt;/strong&gt;, a native agentic search model towards autonomous information seeking agency and &lt;em&gt;Deep Research&lt;/em&gt;-like model.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025.05.15&lt;/code&gt; &lt;strong&gt;WebWalker&lt;/strong&gt; is accepted by ACL 2025 main conference.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025.01.14&lt;/code&gt; We release &lt;strong&gt;WebWalker&lt;/strong&gt;, a benchmark for LLMs in web traversal and a multi-agent framework for information seeking.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ’� Results Showcase&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/webagent-gaia.png" width="800%" height="400%"&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/assets/webagent-bc.png" width="800%" height="400%"&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;ğŸ’¡ Features for WebShaper&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;strong&gt;&lt;code&gt;formalization-driven&lt;/code&gt;&lt;/strong&gt; data synthesis method for information-seeking agents, grounded in our proposed task formalization. Leveraging this method, we construct the &lt;strong&gt;WebShaper&lt;/strong&gt; dataset, which enables systematic generation of IS instances.&lt;/li&gt; 
 &lt;li&gt;We propose an agentic Expander that iteratively generates and validates questions in alignment with the formalization.&lt;/li&gt; 
 &lt;li&gt;We conduct extensive experiments across multiple benchmarks to evaluate the effectiveness of WebShaper. We achieve new state-of-the-art results on &lt;strong&gt;GAIA&lt;/strong&gt; (&lt;strong&gt;60.19&lt;/strong&gt;) and &lt;strong&gt;WebWalkerQA&lt;/strong&gt; (&lt;strong&gt;52.50&lt;/strong&gt;) benchmarks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;â›µï¸� Features for WebSailor&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A complete post-training methodology enabling models to engage in extended thinking and information seeking, ultimately allowing them to successfully complete extremely complex tasks previously considered unsolvable.&lt;/li&gt; 
 &lt;li&gt;Introduces &lt;strong&gt;SailorFog-QA&lt;/strong&gt;, a scalable QA benchmark with high uncertainty and difficulty, curated with a novel data synthesis method through graph sampling and information obfuscation. Example SailorFog-QA data samples can be found at: &lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/WebSailor/dataset/sailorfog-QA.jsonl"&gt;&lt;code&gt;WebSailor/dataset/sailorfog-QA.jsonl&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Effective post-training pipeline consisting of (1) high-quality reconstruction of concise reasoning from expert trajectories for clean supervision, (2) a two-stage training process involving an RFT cold start stage, followed by &lt;strong&gt;Duplicating Sampling Policy Optimization (DUPO)&lt;/strong&gt;, an efficient agentic RL algorithm excelling in effectiveness and efficiency.&lt;/li&gt; 
 &lt;li&gt;WebSailor-72B significantly outperforms all open-source agents and frameworks while closing the performance gap with leading proprietary systems, achieving a score of &lt;strong&gt;12.0%&lt;/strong&gt; on BrowseComp-en, &lt;strong&gt;30.1%&lt;/strong&gt; on BrowseComp-zh, and &lt;strong&gt;55.4%&lt;/strong&gt; on GAIA.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The checkpoint is coming soon.&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸŒ� Features for WebDancer&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Native agentic search reasoning model using ReAct framework towards autonomous information seeking agency and &lt;em&gt;Deep Research&lt;/em&gt;-like model.&lt;/li&gt; 
 &lt;li&gt;We introduce a four-stage training paradigm comprising &lt;strong&gt;browsing data construction, trajectory sampling, supervised fine-tuning for effective cold start, and reinforcement learning for improved generalization&lt;/strong&gt;, enabling the agent to autonomously acquire autonomous search and reasoning skills.&lt;/li&gt; 
 &lt;li&gt;Our data-centric approach integrates trajectory-level supervision fine-tuning and reinforcement learning (DAPO) to develop a scalable pipeline for &lt;strong&gt;training agentic systems&lt;/strong&gt; via SFT or RL.&lt;/li&gt; 
 &lt;li&gt;WebDancer achieves a Pass@3 score of 64.1% on GAIA and 62.0% on WebWalkerQA.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸš€ Quick Start&lt;/h2&gt; 
&lt;p&gt;You need to enter the &lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/WebDancer"&gt;&lt;code&gt;WebDancer&lt;/code&gt;&lt;/a&gt; folder for the following commands.&lt;/p&gt; 
&lt;h3&gt;Step 0: Set Up the Environment&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;conda create -n webdancer python=3.12
pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Step 1: Deploy the Model&lt;/h3&gt; 
&lt;p&gt;Download the WebDancer model from &lt;a href="https://huggingface.co/Alibaba-NLP/WebDancer-32B"&gt;ğŸ¤— HuggingFace&lt;/a&gt; and deploy it using the provided scripts with &lt;a href="https://github.com/sgl-project/sglang"&gt;sglang&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd scripts
bash deploy_model.sh WebDancer_PATH
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Replace &lt;code&gt;WebDancer_PATH&lt;/code&gt; with the actual path to the downloaded model.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Step 2: Run the Demo&lt;/h3&gt; 
&lt;p&gt;Edit the following keys in &lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/WebDancer/scripts/run_demo.sh"&gt;&lt;code&gt;WebDancer/scripts/run_demo.sh&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GOOGLE_SEARCH_KEY&lt;/code&gt;, you can get it from &lt;a href="https://serper.dev/"&gt;serper&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;JINA_API_KEY&lt;/code&gt;, you can get it from &lt;a href="https://jina.ai/api-dashboard/"&gt;jina&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DASHSCOPE_API_KEY&lt;/code&gt;, you can get it from &lt;a href="https://dashscope.aliyun.com/"&gt;dashscope&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then, launch the demo with Gradio to interact with the WebDancer model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd scripts
bash run_demo.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;ğŸ�¥ WebSailor Demos&lt;/h2&gt; 
&lt;p&gt;We provide demos for BrowseComp-en, BrowseComp-zh and Daily Use. Our model can complete highly difficult and uncertain tasks requiring massive information acquisition and complex reasoning.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;BrowseComp-en&lt;/h3&gt; 
 &lt;video src="https://github.com/user-attachments/assets/2dc0b03a-c241-4f70-bf11-92fda28020fa"&gt;&lt;/video&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;BrowseComp-zh&lt;/h3&gt; 
 &lt;video src="https://github.com/user-attachments/assets/f9aed746-ffc8-4b76-b135-715ec0eab544"&gt;&lt;/video&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;Daily Use&lt;/h3&gt; 
 &lt;video src="https://github.com/user-attachments/assets/1299c5a8-cee3-4a70-b68b-c5d227cf8055"&gt;&lt;/video&gt; 
&lt;/div&gt; 
&lt;h2&gt;ğŸ�¥ WebDancer Demos&lt;/h2&gt; 
&lt;p&gt;We provide demos for WebWalkerQA, GAIA and Daily Use. Our model can execute the long-horizon tasks with &lt;strong&gt;multiple steps&lt;/strong&gt; and &lt;strong&gt;complex reasoning&lt;/strong&gt;, such as web traversal, information seeking and question answering.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;WebWalkerQA&lt;/h3&gt; 
 &lt;video src="https://github.com/user-attachments/assets/0bbaf55b-897e-4c57-967d-a6e8bbd2167e"&gt;&lt;/video&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;GAIA&lt;/h3&gt; 
 &lt;video src="https://github.com/user-attachments/assets/935c668e-6169-4712-9c04-ac80f0531872"&gt;&lt;/video&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;Daily Use&lt;/h3&gt; 
 &lt;video src="https://github.com/user-attachments/assets/d1d5b533-4009-478b-bd87-96b86389327d"&gt;&lt;/video&gt; 
&lt;/div&gt; 
&lt;h2&gt;ğŸ“ƒ License&lt;/h2&gt; 
&lt;p&gt;The content of this project itself is licensed under &lt;a href="https://raw.githubusercontent.com/Alibaba-NLP/WebAgent/main/LICENSE"&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;ğŸš© Citation&lt;/h2&gt; 
&lt;p&gt;If this work is helpful, please kindly cite as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bigquery"&gt;@misc{tao2025webshaper,
      title={WebShaper: Agentically Data Synthesizing via Information-Seeking Formalization},
      author={Zhengwei Tao and Jialong Wu and Wenbiao Yin and Junkai Zhang and Baixuan Li and Haiyang Shen and Kuan Li and Liwen Zhang and Xinyu Wang and Yong Jiang and Pengjun Xie and Fei Huang and Jingren Zhou},
      year={2025},
      eprint={2507.15061},
      archivePrefix={arXiv},
      primaryClass={cs.CL},
      url={https://arxiv.org/abs/2507.15061},
}
@misc{li2025websailor,
      title={WebSailor: Navigating Super-human Reasoning for Web Agent},
      author={Kuan Li and Zhongwang Zhang and Huifeng Yin and Liwen Zhang and Litu Ou and Jialong Wu and Wenbiao Yin and Baixuan Li and Zhengwei Tao and Xinyu Wang and Weizhou Shen and Junkai Zhang and Dingchu Zhang and Xixi Wu and Yong Jiang and Ming Yan and Pengjun Xie and Fei Huang and Jingren Zhou},
      year={2025},
      eprint={2507.02592},
      archivePrefix={arXiv},
      primaryClass={cs.CL},
      url={https://arxiv.org/abs/2507.02592},
}
@misc{wu2025webdancer,
      title={WebDancer: Towards Autonomous Information Seeking Agency},
      author={Jialong Wu and Baixuan Li and Runnan Fang and Wenbiao Yin and Liwen Zhang and Zhengwei Tao and Dingchu Zhang and Zekun Xi and Yong Jiang and Pengjun Xie and Fei Huang and Jingren Zhou},
      year={2025},
      eprint={2505.22648},
      archivePrefix={arXiv},
      primaryClass={cs.CL},
      url={https://arxiv.org/abs/2505.22648},
}
@misc{wu2025webwalker,
      title={WebWalker: Benchmarking LLMs in Web Traversal},
      author={Jialong Wu and Wenbiao Yin and Yong Jiang and Zhenglin Wang and Zekun Xi and Runnan Fang and Deyu Zhou and Pengjun Xie and Fei Huang},
      year={2025},
      eprint={2501.07572},
      archivePrefix={arXiv},
      primaryClass={cs.CL},
      url={https://arxiv.org/abs/2501.07572},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;ğŸŒŸ Misc&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://www.star-history.com/#Alibaba-NLP/WebAgent&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=Alibaba-NLP/WebAgent&amp;amp;type=Date" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;ğŸš© Talent Recruitment&lt;/h2&gt; 
&lt;p&gt;ğŸ”¥ğŸ”¥ğŸ”¥ We are hiring! Research intern positions are open (based in Hangzhouã€�Beijingã€�Shanghai)&lt;/p&gt; 
&lt;p&gt;ğŸ“š &lt;strong&gt;Research Area&lt;/strong&gt;ï¼šWeb Agent, Search Agent, Agent RL, MultiAgent RL, Agentic RAG&lt;/p&gt; 
&lt;p&gt;â˜�ï¸� &lt;strong&gt;Contact&lt;/strong&gt;ï¼š&lt;a href=""&gt;yongjiang.jy@alibaba-inc.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contact Information&lt;/h2&gt; 
&lt;p&gt;For communications, please contact Yong Jiang (&lt;a href="mailto:yongjiang.jy@alibaba-inc.com"&gt;yongjiang.jy@alibaba-inc.com&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>NanmiCoder/MediaCrawler</title>
      <link>https://github.com/NanmiCoder/MediaCrawler</link>
      <description>&lt;p&gt;å°�çº¢ä¹¦ç¬”è®° | è¯„è®ºçˆ¬è™«ã€�æŠ–éŸ³è§†é¢‘ | è¯„è®ºçˆ¬è™«ã€�å¿«æ‰‹è§†é¢‘ | è¯„è®ºçˆ¬è™«ã€�B ç«™è§†é¢‘ ï½œ è¯„è®ºçˆ¬è™«ã€�å¾®å�šå¸–å­� ï½œ è¯„è®ºçˆ¬è™«ã€�ç™¾åº¦è´´å�§å¸–å­� ï½œ ç™¾åº¦è´´å�§è¯„è®ºå›�å¤�çˆ¬è™« | çŸ¥ä¹�é—®ç­”æ–‡ç« ï½œè¯„è®ºçˆ¬è™«&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ğŸ”¥ MediaCrawler - è‡ªåª’ä½“å¹³å�°çˆ¬è™« ğŸ•·ï¸�&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://trendshift.io/repositories/8291" target="_blank"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/8291" alt="NanmiCoder%2FMediaCrawler | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"&gt; &lt;/a&gt; 
 &lt;p&gt;&lt;a href="https://github.com/NanmiCoder/MediaCrawler/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/NanmiCoder/MediaCrawler?style=social" alt="GitHub Stars"&gt;&lt;/a&gt; &lt;a href="https://github.com/NanmiCoder/MediaCrawler/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/NanmiCoder/MediaCrawler?style=social" alt="GitHub Forks"&gt;&lt;/a&gt; &lt;a href="https://github.com/NanmiCoder/MediaCrawler/issues"&gt;&lt;img src="https://img.shields.io/github/issues/NanmiCoder/MediaCrawler" alt="GitHub Issues"&gt;&lt;/a&gt; &lt;a href="https://github.com/NanmiCoder/MediaCrawler/pulls"&gt;&lt;img src="https://img.shields.io/github/issues-pr/NanmiCoder/MediaCrawler" alt="GitHub Pull Requests"&gt;&lt;/a&gt; &lt;a href="https://github.com/NanmiCoder/MediaCrawler/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/NanmiCoder/MediaCrawler" alt="License"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/README.md"&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%87%A8%F0%9F%87%B3_%E4%B8%AD%E6%96%87-%E5%BD%93%E5%89%8D-blue" alt="ä¸­æ–‡"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/README_en.md"&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%87%BA%F0%9F%87%B8_English-Available-green" alt="English"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/README_es.md"&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%87%AA%F0%9F%87%B8_Espa%C3%B1ol-Available-green" alt="EspaÃ±ol"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;å…�è´£å£°æ˜�ï¼š&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;å¤§å®¶è¯·ä»¥å­¦ä¹ ä¸ºç›®çš„ä½¿ç”¨æœ¬ä»“åº“âš ï¸�âš ï¸�âš ï¸�âš ï¸�ï¼Œ&lt;a href="https://github.com/HiddenStrawberry/Crawler_Illegal_Cases_In_China"&gt;çˆ¬è™«è¿�æ³•è¿�è§„çš„æ¡ˆä»¶&lt;/a&gt; &lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;æœ¬ä»“åº“çš„æ‰€æœ‰å†…å®¹ä»…ä¾›å­¦ä¹ å’Œå�‚è€ƒä¹‹ç”¨ï¼Œç¦�æ­¢ç”¨äº�å•†ä¸šç”¨é€”ã€‚ä»»ä½•äººæˆ–ç»„ç»‡ä¸�å¾—å°†æœ¬ä»“åº“çš„å†…å®¹ç”¨äº�é��æ³•ç”¨é€”æˆ–ä¾µçŠ¯ä»–äººå�ˆæ³•æ�ƒç›Šã€‚æœ¬ä»“åº“æ‰€æ¶‰å�Šçš„çˆ¬è™«æŠ€æœ¯ä»…ç”¨äº�å­¦ä¹ å’Œç ”ç©¶ï¼Œä¸�å¾—ç”¨äº�å¯¹å…¶ä»–å¹³å�°è¿›è¡Œå¤§è§„æ¨¡çˆ¬è™«æˆ–å…¶ä»–é��æ³•è¡Œä¸ºã€‚å¯¹äº�å› ä½¿ç”¨æœ¬ä»“åº“å†…å®¹è€Œå¼•èµ·çš„ä»»ä½•æ³•å¾‹è´£ä»»ï¼Œæœ¬ä»“åº“ä¸�æ‰¿æ‹…ä»»ä½•è´£ä»»ã€‚ä½¿ç”¨æœ¬ä»“åº“çš„å†…å®¹å�³è¡¨ç¤ºæ‚¨å�Œæ„�æœ¬å…�è´£å£°æ˜�çš„æ‰€æœ‰æ�¡æ¬¾å’Œæ�¡ä»¶ã€‚&lt;/p&gt; 
 &lt;p&gt;ç‚¹å‡»æŸ¥çœ‹æ›´ä¸ºè¯¦ç»†çš„å…�è´£å£°æ˜�ã€‚&lt;a href="https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/#disclaimer"&gt;ç‚¹å‡»è·³è½¬&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;ğŸ“– é¡¹ç›®ç®€ä»‹&lt;/h2&gt; 
&lt;p&gt;ä¸€ä¸ªåŠŸèƒ½å¼ºå¤§çš„&lt;strong&gt;å¤šå¹³å�°è‡ªåª’ä½“æ•°æ�®é‡‡é›†å·¥å…·&lt;/strong&gt;ï¼Œæ”¯æŒ�å°�çº¢ä¹¦ã€�æŠ–éŸ³ã€�å¿«æ‰‹ã€�Bç«™ã€�å¾®å�šã€�è´´å�§ã€�çŸ¥ä¹�ç­‰ä¸»æµ�å¹³å�°çš„å…¬å¼€ä¿¡æ�¯æŠ“å�–ã€‚&lt;/p&gt; 
&lt;h3&gt;ğŸ”§ æŠ€æœ¯å�Ÿç�†&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;æ ¸å¿ƒæŠ€æœ¯&lt;/strong&gt;ï¼šåŸºäº� &lt;a href="https://playwright.dev/"&gt;Playwright&lt;/a&gt; æµ�è§ˆå™¨è‡ªåŠ¨åŒ–æ¡†æ�¶ç™»å½•ä¿�å­˜ç™»å½•æ€�&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;æ— éœ€JSé€†å�‘&lt;/strong&gt;ï¼šåˆ©ç”¨ä¿�ç•™ç™»å½•æ€�çš„æµ�è§ˆå™¨ä¸Šä¸‹æ–‡ç�¯å¢ƒï¼Œé€šè¿‡ JS è¡¨è¾¾å¼�è�·å�–ç­¾å��å�‚æ•°&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ä¼˜åŠ¿ç‰¹ç‚¹&lt;/strong&gt;ï¼šæ— éœ€é€†å�‘å¤�æ�‚çš„åŠ å¯†ç®—æ³•ï¼Œå¤§å¹…é™�ä½�æŠ€æœ¯é—¨æ§›&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;âœ¨ åŠŸèƒ½ç‰¹æ€§&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;å¹³å�°&lt;/th&gt; 
   &lt;th&gt;å…³é”®è¯�æ�œç´¢&lt;/th&gt; 
   &lt;th&gt;æŒ‡å®šå¸–å­�IDçˆ¬å�–&lt;/th&gt; 
   &lt;th&gt;äºŒçº§è¯„è®º&lt;/th&gt; 
   &lt;th&gt;æŒ‡å®šåˆ›ä½œè€…ä¸»é¡µ&lt;/th&gt; 
   &lt;th&gt;ç™»å½•æ€�ç¼“å­˜&lt;/th&gt; 
   &lt;th&gt;IPä»£ç�†æ± &lt;/th&gt; 
   &lt;th&gt;ç”Ÿæˆ�è¯„è®ºè¯�äº‘å›¾&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;å°�çº¢ä¹¦&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;æŠ–éŸ³&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;å¿«æ‰‹&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;B ç«™&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;å¾®å�š&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;è´´å�§&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;çŸ¥ä¹�&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;details id="pro-version"&gt; 
 &lt;summary&gt;ğŸ”— &lt;strong&gt;ğŸš€ MediaCrawlerPro é‡�ç£…å�‘å¸ƒï¼�æ›´å¤šçš„åŠŸèƒ½ï¼Œæ›´å¥½çš„æ�¶æ�„è®¾è®¡ï¼�&lt;/strong&gt;&lt;/summary&gt; 
 &lt;h3&gt;ğŸš€ MediaCrawlerPro é‡�ç£…å�‘å¸ƒï¼�&lt;/h3&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;ä¸“æ³¨äº�å­¦ä¹ æˆ�ç†Ÿé¡¹ç›®çš„æ�¶æ�„è®¾è®¡ï¼Œä¸�ä»…ä»…æ˜¯çˆ¬è™«æŠ€æœ¯ï¼ŒPro ç‰ˆæœ¬çš„ä»£ç �è®¾è®¡æ€�è·¯å�Œæ ·å€¼å¾—æ·±å…¥å­¦ä¹ ï¼�&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;&lt;a href="https://github.com/MediaCrawlerPro"&gt;MediaCrawlerPro&lt;/a&gt; ç›¸è¾ƒäº�å¼€æº�ç‰ˆæœ¬çš„æ ¸å¿ƒä¼˜åŠ¿ï¼š&lt;/p&gt; 
 &lt;h4&gt;ğŸ�¯ æ ¸å¿ƒåŠŸèƒ½å�‡çº§&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;âœ… &lt;strong&gt;æ–­ç‚¹ç»­çˆ¬åŠŸèƒ½&lt;/strong&gt;ï¼ˆé‡�ç‚¹ç‰¹æ€§ï¼‰&lt;/li&gt; 
  &lt;li&gt;âœ… &lt;strong&gt;å¤šè´¦å�· + IPä»£ç�†æ± æ”¯æŒ�&lt;/strong&gt;ï¼ˆé‡�ç‚¹ç‰¹æ€§ï¼‰&lt;/li&gt; 
  &lt;li&gt;âœ… &lt;strong&gt;å�»é™¤ Playwright ä¾�èµ–&lt;/strong&gt;ï¼Œä½¿ç”¨æ›´ç®€å�•&lt;/li&gt; 
  &lt;li&gt;âœ… &lt;strong&gt;å®Œæ•´ Linux ç�¯å¢ƒæ”¯æŒ�&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;ğŸ�—ï¸� æ�¶æ�„è®¾è®¡ä¼˜åŒ–&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;âœ… &lt;strong&gt;ä»£ç �é‡�æ�„ä¼˜åŒ–&lt;/strong&gt;ï¼Œæ›´æ˜“è¯»æ˜“ç»´æŠ¤ï¼ˆè§£è€¦ JS ç­¾å��é€»è¾‘ï¼‰&lt;/li&gt; 
  &lt;li&gt;âœ… &lt;strong&gt;ä¼�ä¸šçº§ä»£ç �è´¨é‡�&lt;/strong&gt;ï¼Œé€‚å�ˆæ�„å»ºå¤§å�‹çˆ¬è™«é¡¹ç›®&lt;/li&gt; 
  &lt;li&gt;âœ… &lt;strong&gt;å®Œç¾�æ�¶æ�„è®¾è®¡&lt;/strong&gt;ï¼Œé«˜æ‰©å±•æ€§ï¼Œæº�ç �å­¦ä¹ ä»·å€¼æ›´å¤§&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;ğŸ�� é¢�å¤–åŠŸèƒ½&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;âœ… &lt;strong&gt;è‡ªåª’ä½“è§†é¢‘ä¸‹è½½å™¨æ¡Œé�¢ç«¯&lt;/strong&gt;ï¼ˆé€‚å�ˆå­¦ä¹ å…¨æ ˆå¼€å�‘ï¼‰&lt;/li&gt; 
  &lt;li&gt;âœ… &lt;strong&gt;å¤šå¹³å�°é¦–é¡µä¿¡æ�¯æµ�æ�¨è��&lt;/strong&gt;ï¼ˆHomeFeedï¼‰&lt;/li&gt; 
  &lt;li&gt;&lt;input type="checkbox" disabled&gt; &lt;strong&gt;åŸºäº�è‡ªåª’ä½“å¹³å�°çš„AI Agentæ­£åœ¨å¼€å�‘ä¸­ ğŸš€ğŸš€&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;ç‚¹å‡»æŸ¥çœ‹ï¼š&lt;a href="https://github.com/MediaCrawlerPro"&gt;MediaCrawlerPro é¡¹ç›®ä¸»é¡µ&lt;/a&gt; æ›´å¤šä»‹ç»�&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;ğŸš€ å¿«é€Ÿå¼€å§‹&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ğŸ’¡ &lt;strong&gt;å¼€æº�ä¸�æ˜“ï¼Œå¦‚æ�œè¿™ä¸ªé¡¹ç›®å¯¹æ‚¨æœ‰å¸®åŠ©ï¼Œè¯·ç»™ä¸ª â­� Star æ”¯æŒ�ä¸€ä¸‹ï¼�&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;ğŸ“‹ å‰�ç½®ä¾�èµ–&lt;/h2&gt; 
&lt;h3&gt;ğŸš€ uv å®‰è£…ï¼ˆæ�¨è��ï¼‰&lt;/h3&gt; 
&lt;p&gt;åœ¨è¿›è¡Œä¸‹ä¸€æ­¥æ“�ä½œä¹‹å‰�ï¼Œè¯·ç¡®ä¿�ç”µè„‘ä¸Šå·²ç»�å®‰è£…äº† uvï¼š&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;å®‰è£…åœ°å�€&lt;/strong&gt;ï¼š&lt;a href="https://docs.astral.sh/uv/getting-started/installation"&gt;uv å®˜æ–¹å®‰è£…æŒ‡å�—&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;éªŒè¯�å®‰è£…&lt;/strong&gt;ï¼šç»ˆç«¯è¾“å…¥å‘½ä»¤ &lt;code&gt;uv --version&lt;/code&gt;ï¼Œå¦‚æ�œæ­£å¸¸æ˜¾ç¤ºç‰ˆæœ¬å�·ï¼Œè¯�æ˜�å·²ç»�å®‰è£…æˆ�åŠŸ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;æ�¨è��ç�†ç”±&lt;/strong&gt;ï¼šuv æ˜¯ç›®å‰�æœ€å¼ºçš„ Python åŒ…ç®¡ç�†å·¥å…·ï¼Œé€Ÿåº¦å¿«ã€�ä¾�èµ–è§£æ��å‡†ç¡®&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ğŸŸ¢ Node.js å®‰è£…&lt;/h3&gt; 
&lt;p&gt;é¡¹ç›®ä¾�èµ– Node.jsï¼Œè¯·å‰�å¾€å®˜ç½‘ä¸‹è½½å®‰è£…ï¼š&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ä¸‹è½½åœ°å�€&lt;/strong&gt;ï¼š&lt;a href="https://nodejs.org/en/download/"&gt;https://nodejs.org/en/download/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ç‰ˆæœ¬è¦�æ±‚&lt;/strong&gt;ï¼š&amp;gt;= 16.0.0&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ğŸ“¦ Python åŒ…å®‰è£…&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# è¿›å…¥é¡¹ç›®ç›®å½•
cd MediaCrawler

# ä½¿ç”¨ uv sync å‘½ä»¤æ�¥ä¿�è¯� python ç‰ˆæœ¬å’Œç›¸å…³ä¾�èµ–åŒ…çš„ä¸€è‡´æ€§
uv sync
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ğŸŒ� æµ�è§ˆå™¨é©±åŠ¨å®‰è£…&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# å®‰è£…æµ�è§ˆå™¨é©±åŠ¨
uv run playwright install
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;ğŸ’¡ æ��ç¤º&lt;/strong&gt;ï¼šMediaCrawler ç›®å‰�å·²ç»�æ”¯æŒ�ä½¿ç”¨ playwright è¿�æ�¥ä½ æœ¬åœ°çš„ Chrome æµ�è§ˆå™¨äº†ï¼Œä¸€äº›å› ä¸º Webdriver å¯¼è‡´çš„é—®é¢˜è¿�åˆƒè€Œè§£äº†ã€‚&lt;/p&gt; 
 &lt;p&gt;ç›®å‰�å¼€æ”¾äº† &lt;code&gt;xhs&lt;/code&gt; å’Œ &lt;code&gt;dy&lt;/code&gt; è¿™ä¸¤ä¸ªä½¿ç”¨ CDP çš„æ–¹å¼�è¿�æ�¥æœ¬åœ°æµ�è§ˆå™¨ï¼Œå¦‚æœ‰éœ€è¦�ï¼ŒæŸ¥çœ‹ &lt;code&gt;config/base_config.py&lt;/code&gt; ä¸­çš„é…�ç½®é¡¹ã€‚&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;ğŸš€ è¿�è¡Œçˆ¬è™«ç¨‹åº�&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# é¡¹ç›®é»˜è®¤æ˜¯æ²¡æœ‰å¼€å�¯è¯„è®ºçˆ¬å�–æ¨¡å¼�ï¼Œå¦‚éœ€è¯„è®ºè¯·åœ¨ config/base_config.py ä¸­çš„ ENABLE_GET_COMMENTS å�˜é‡�ä¿®æ”¹
# ä¸€äº›å…¶ä»–æ”¯æŒ�é¡¹ï¼Œä¹Ÿå�¯ä»¥åœ¨ config/base_config.py æŸ¥çœ‹åŠŸèƒ½ï¼Œå†™çš„æœ‰ä¸­æ–‡æ³¨é‡Š

# ä»�é…�ç½®æ–‡ä»¶ä¸­è¯»å�–å…³é”®è¯�æ�œç´¢ç›¸å…³çš„å¸–å­�å¹¶çˆ¬å�–å¸–å­�ä¿¡æ�¯ä¸�è¯„è®º
uv run main.py --platform xhs --lt qrcode --type search

# ä»�é…�ç½®æ–‡ä»¶ä¸­è¯»å�–æŒ‡å®šçš„å¸–å­�IDåˆ—è¡¨è�·å�–æŒ‡å®šå¸–å­�çš„ä¿¡æ�¯ä¸�è¯„è®ºä¿¡æ�¯
uv run main.py --platform xhs --lt qrcode --type detail

# æ‰“å¼€å¯¹åº”APPæ‰«äºŒç»´ç �ç™»å½•

# å…¶ä»–å¹³å�°çˆ¬è™«ä½¿ç”¨ç¤ºä¾‹ï¼Œæ‰§è¡Œä¸‹é�¢çš„å‘½ä»¤æŸ¥çœ‹
uv run main.py --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;ğŸ”— &lt;strong&gt;ä½¿ç”¨ Python å�Ÿç”Ÿ venv ç®¡ç�†ç�¯å¢ƒï¼ˆä¸�æ�¨è��ï¼‰&lt;/strong&gt;&lt;/summary&gt; 
 &lt;h4&gt;åˆ›å»ºå¹¶æ¿€æ´» Python è™šæ‹Ÿç�¯å¢ƒ&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;å¦‚æ�œæ˜¯çˆ¬å�–æŠ–éŸ³å’ŒçŸ¥ä¹�ï¼Œéœ€è¦�æ��å‰�å®‰è£… nodejs ç�¯å¢ƒï¼Œç‰ˆæœ¬å¤§äº�ç­‰äº�ï¼š&lt;code&gt;16&lt;/code&gt; å�³å�¯&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;# è¿›å…¥é¡¹ç›®æ ¹ç›®å½•
cd MediaCrawler

# åˆ›å»ºè™šæ‹Ÿç�¯å¢ƒ
# æˆ‘çš„ python ç‰ˆæœ¬æ˜¯ï¼š3.9.6ï¼Œrequirements.txt ä¸­çš„åº“æ˜¯åŸºäº�è¿™ä¸ªç‰ˆæœ¬çš„
# å¦‚æ�œæ˜¯å…¶ä»– python ç‰ˆæœ¬ï¼Œå�¯èƒ½ requirements.txt ä¸­çš„åº“ä¸�å…¼å®¹ï¼Œéœ€è‡ªè¡Œè§£å†³
python -m venv venv

# macOS &amp;amp; Linux æ¿€æ´»è™šæ‹Ÿç�¯å¢ƒ
source venv/bin/activate

# Windows æ¿€æ´»è™šæ‹Ÿç�¯å¢ƒ
venv\Scripts\activate
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;å®‰è£…ä¾�èµ–åº“&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;å®‰è£… playwright æµ�è§ˆå™¨é©±åŠ¨&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;playwright install
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;è¿�è¡Œçˆ¬è™«ç¨‹åº�ï¼ˆå�Ÿç”Ÿç�¯å¢ƒï¼‰&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;# é¡¹ç›®é»˜è®¤æ˜¯æ²¡æœ‰å¼€å�¯è¯„è®ºçˆ¬å�–æ¨¡å¼�ï¼Œå¦‚éœ€è¯„è®ºè¯·åœ¨ config/base_config.py ä¸­çš„ ENABLE_GET_COMMENTS å�˜é‡�ä¿®æ”¹
# ä¸€äº›å…¶ä»–æ”¯æŒ�é¡¹ï¼Œä¹Ÿå�¯ä»¥åœ¨ config/base_config.py æŸ¥çœ‹åŠŸèƒ½ï¼Œå†™çš„æœ‰ä¸­æ–‡æ³¨é‡Š

# ä»�é…�ç½®æ–‡ä»¶ä¸­è¯»å�–å…³é”®è¯�æ�œç´¢ç›¸å…³çš„å¸–å­�å¹¶çˆ¬å�–å¸–å­�ä¿¡æ�¯ä¸�è¯„è®º
python main.py --platform xhs --lt qrcode --type search

# ä»�é…�ç½®æ–‡ä»¶ä¸­è¯»å�–æŒ‡å®šçš„å¸–å­�IDåˆ—è¡¨è�·å�–æŒ‡å®šå¸–å­�çš„ä¿¡æ�¯ä¸�è¯„è®ºä¿¡æ�¯
python main.py --platform xhs --lt qrcode --type detail

# æ‰“å¼€å¯¹åº”APPæ‰«äºŒç»´ç �ç™»å½•

# å…¶ä»–å¹³å�°çˆ¬è™«ä½¿ç”¨ç¤ºä¾‹ï¼Œæ‰§è¡Œä¸‹é�¢çš„å‘½ä»¤æŸ¥çœ‹
python main.py --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;ğŸ’¾ æ•°æ�®ä¿�å­˜&lt;/h2&gt; 
&lt;p&gt;æ”¯æŒ�å¤šç§�æ•°æ�®å­˜å‚¨æ–¹å¼�ï¼š&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SQLite æ•°æ�®åº“&lt;/strong&gt;ï¼šè½»é‡�çº§æ•°æ�®åº“ï¼Œæ— éœ€æœ�åŠ¡å™¨ï¼Œé€‚å�ˆä¸ªäººä½¿ç”¨ï¼ˆæ�¨è��ï¼‰ 
  &lt;ul&gt; 
   &lt;li&gt;å�‚æ•°ï¼š&lt;code&gt;--save_data_option sqlite&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;è‡ªåŠ¨åˆ›å»ºæ•°æ�®åº“æ–‡ä»¶&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MySQL æ•°æ�®åº“&lt;/strong&gt;ï¼šæ”¯æŒ�å…³ç³»å�‹æ•°æ�®åº“ MySQL ä¸­ä¿�å­˜ï¼ˆéœ€è¦�æ��å‰�åˆ›å»ºæ•°æ�®åº“ï¼‰ 
  &lt;ul&gt; 
   &lt;li&gt;æ‰§è¡Œ &lt;code&gt;python db.py&lt;/code&gt; åˆ�å§‹åŒ–æ•°æ�®åº“è¡¨ç»“æ�„ï¼ˆå�ªåœ¨é¦–æ¬¡æ‰§è¡Œï¼‰&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CSV æ–‡ä»¶&lt;/strong&gt;ï¼šæ”¯æŒ�ä¿�å­˜åˆ° CSV ä¸­ï¼ˆ&lt;code&gt;data/&lt;/code&gt; ç›®å½•ä¸‹ï¼‰&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSON æ–‡ä»¶&lt;/strong&gt;ï¼šæ”¯æŒ�ä¿�å­˜åˆ° JSON ä¸­ï¼ˆ&lt;code&gt;data/&lt;/code&gt; ç›®å½•ä¸‹ï¼‰&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ä½¿ç”¨ç¤ºä¾‹ï¼š&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# ä½¿ç”¨ SQLiteï¼ˆæ�¨è��ä¸ªäººç”¨æˆ·ä½¿ç”¨ï¼‰
uv run main.py --platform xhs --lt qrcode --type search --save_data_option sqlite

# ä½¿ç”¨ MySQL
uv run main.py --platform xhs --lt qrcode --type search --save_data_option db
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href="https://github.com/MediaCrawlerPro"&gt;ğŸš€ MediaCrawlerPro é‡�ç£…å�‘å¸ƒ ğŸš€ï¼�æ›´å¤šçš„åŠŸèƒ½ï¼Œæ›´å¥½çš„æ�¶æ�„è®¾è®¡ï¼�&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ğŸ¤� ç¤¾åŒºä¸�æ”¯æŒ�&lt;/h2&gt; 
&lt;h3&gt;ğŸ’¬ äº¤æµ�ç¾¤ç»„&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;å¾®ä¿¡äº¤æµ�ç¾¤&lt;/strong&gt;ï¼š&lt;a href="https://nanmicoder.github.io/MediaCrawler/%E5%BE%AE%E4%BF%A1%E4%BA%A4%E6%B5%81%E7%BE%A4.html"&gt;ç‚¹å‡»åŠ å…¥&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ğŸ“š æ–‡æ¡£ä¸�æ•™ç¨‹&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;åœ¨çº¿æ–‡æ¡£&lt;/strong&gt;ï¼š&lt;a href="https://nanmicoder.github.io/MediaCrawler/"&gt;MediaCrawler å®Œæ•´æ–‡æ¡£&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;çˆ¬è™«æ•™ç¨‹&lt;/strong&gt;ï¼š&lt;a href="https://github.com/NanmiCoder/CrawlerTutorial"&gt;CrawlerTutorial å…�è´¹æ•™ç¨‹&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;å…¶ä»–å¸¸è§�é—®é¢˜å�¯ä»¥æŸ¥çœ‹åœ¨çº¿æ–‡æ¡£&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;åœ¨çº¿æ–‡æ¡£åŒ…å�«ä½¿ç”¨æ–¹æ³•ã€�å¸¸è§�é—®é¢˜ã€�åŠ å…¥é¡¹ç›®äº¤æµ�ç¾¤ç­‰ã€‚ &lt;a href="https://nanmicoder.github.io/MediaCrawler/"&gt;MediaCrawleråœ¨çº¿æ–‡æ¡£&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;ä½œè€…æ��ä¾›çš„çŸ¥è¯†æœ�åŠ¡&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;å¦‚æ�œæƒ³å¿«é€Ÿå…¥é—¨å’Œå­¦ä¹ è¯¥é¡¹ç›®çš„ä½¿ç”¨ã€�æº�ç �æ�¶æ�„è®¾è®¡ç­‰ã€�å­¦ä¹ ç¼–ç¨‹æŠ€æœ¯ã€�äº¦æˆ–è€…æƒ³äº†è§£MediaCrawlerProçš„æº�ä»£ç �è®¾è®¡å�¯ä»¥çœ‹ä¸‹æˆ‘çš„çŸ¥è¯†ä»˜è´¹æ �ç›®ã€‚&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://nanmicoder.github.io/MediaCrawler/%E7%9F%A5%E8%AF%86%E4%BB%98%E8%B4%B9%E4%BB%8B%E7%BB%8D.html"&gt;ä½œè€…çš„çŸ¥è¯†ä»˜è´¹æ �ç›®ä»‹ç»�&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;â­� Star è¶‹åŠ¿å›¾&lt;/h2&gt; 
&lt;p&gt;å¦‚æ�œè¿™ä¸ªé¡¹ç›®å¯¹æ‚¨æœ‰å¸®åŠ©ï¼Œè¯·ç»™ä¸ª â­� Star æ”¯æŒ�ä¸€ä¸‹ï¼Œè®©æ›´å¤šçš„äººçœ‹åˆ° MediaCrawlerï¼�&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#NanmiCoder/MediaCrawler&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=NanmiCoder/MediaCrawler&amp;amp;type=Date" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;ğŸ’° èµ�åŠ©å•†å±•ç¤º&lt;/h3&gt; 
&lt;a href="https://www.swiftproxy.net/?ref=nanmi"&gt; &lt;img src="https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/docs/static/images/img_5.png"&gt; &lt;br&gt; Swiftproxy - 90M+ å…¨ç�ƒé«˜è´¨é‡�çº¯å‡€ä½�å®…IPï¼Œæ³¨å†Œå�¯é¢†å…�è´¹ 500MB æµ‹è¯•æµ�é‡�ï¼ŒåŠ¨æ€�æµ�é‡�ä¸�è¿‡æœŸï¼� &amp;gt; ä¸“å±�æŠ˜æ‰£ç �ï¼š**GHB5** ç«‹äº«ä¹�æŠ˜ä¼˜æƒ ï¼� &lt;/a&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;a href="https://www.tkyds.com/?=MediaCrawler"&gt; &lt;img src="https://raw.githubusercontent.com/NanmiCoder/MediaCrawler/main/docs/static/images/img_6.png"&gt; &lt;br&gt; TKäº‘å¤§å¸ˆ,ä¸“ä¸šçš„TikTokçŸ©é˜µç³»ç»Ÿ,AIèµ‹èƒ½è‡ªåŠ¨åŒ–,å�•äººè½»æ�¾ç®¡ç�†ä¸Šä¸‡è´¦å�·ï¼� &lt;/a&gt; 
&lt;br&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;a href="https://sider.ai/ad-land-redirect?source=github&amp;amp;p1=mi&amp;amp;p2=kk"&gt;&lt;strong&gt;Sider&lt;/strong&gt; - å…¨ç½‘æœ€ç�«çš„ ChatGPT æ�’ä»¶ï¼Œä½“éªŒæ‹‰æ»¡ï¼�&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;ğŸ¤� æˆ�ä¸ºèµ�åŠ©è€…&lt;/h3&gt; 
&lt;p&gt;æˆ�ä¸ºèµ�åŠ©è€…ï¼Œå�¯ä»¥å°†æ‚¨çš„äº§å“�å±•ç¤ºåœ¨è¿™é‡Œï¼Œæ¯�å¤©è�·å¾—å¤§é‡�æ›�å…‰ï¼�&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;è�”ç³»æ–¹å¼�&lt;/strong&gt;ï¼š&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;å¾®ä¿¡ï¼š&lt;code&gt;yzglan&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;é‚®ç®±ï¼š&lt;code&gt;relakkes@gmail.com&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ“š å�‚è€ƒ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;å°�çº¢ä¹¦å®¢æˆ·ç«¯&lt;/strong&gt;ï¼š&lt;a href="https://github.com/ReaJason/xhs"&gt;ReaJason çš„ xhs ä»“åº“&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;çŸ­ä¿¡è½¬å�‘&lt;/strong&gt;ï¼š&lt;a href="https://github.com/pppscn/SmsForwarder"&gt;SmsForwarder å�‚è€ƒä»“åº“&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;å†…ç½‘ç©¿é€�å·¥å…·&lt;/strong&gt;ï¼š&lt;a href="https://ngrok.com/docs/"&gt;ngrok å®˜æ–¹æ–‡æ¡£&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;å…�è´£å£°æ˜�&lt;/h1&gt; 
&lt;div id="disclaimer"&gt; 
 &lt;h2&gt;1. é¡¹ç›®ç›®çš„ä¸�æ€§è´¨&lt;/h2&gt; 
 &lt;p&gt;æœ¬é¡¹ç›®ï¼ˆä»¥ä¸‹ç®€ç§°â€œæœ¬é¡¹ç›®â€�ï¼‰æ˜¯ä½œä¸ºä¸€ä¸ªæŠ€æœ¯ç ”ç©¶ä¸�å­¦ä¹ å·¥å…·è€Œåˆ›å»ºçš„ï¼Œæ—¨åœ¨æ�¢ç´¢å’Œå­¦ä¹ ç½‘ç»œæ•°æ�®é‡‡é›†æŠ€æœ¯ã€‚æœ¬é¡¹ç›®ä¸“æ³¨äº�è‡ªåª’ä½“å¹³å�°çš„æ•°æ�®çˆ¬å�–æŠ€æœ¯ç ”ç©¶ï¼Œæ—¨åœ¨æ��ä¾›ç»™å­¦ä¹ è€…å’Œç ”ç©¶è€…ä½œä¸ºæŠ€æœ¯äº¤æµ�ä¹‹ç”¨ã€‚&lt;/p&gt; 
 &lt;h2&gt;2. æ³•å¾‹å�ˆè§„æ€§å£°æ˜�&lt;/h2&gt; 
 &lt;p&gt;æœ¬é¡¹ç›®å¼€å�‘è€…ï¼ˆä»¥ä¸‹ç®€ç§°â€œå¼€å�‘è€…â€�ï¼‰éƒ‘é‡�æ��é†’ç”¨æˆ·åœ¨ä¸‹è½½ã€�å®‰è£…å’Œä½¿ç”¨æœ¬é¡¹ç›®æ—¶ï¼Œä¸¥æ ¼é�µå®ˆä¸­å��äººæ°‘å…±å’Œå›½ç›¸å…³æ³•å¾‹æ³•è§„ï¼ŒåŒ…æ‹¬ä½†ä¸�é™�äº�ã€Šä¸­å��äººæ°‘å…±å’Œå›½ç½‘ç»œå®‰å…¨æ³•ã€‹ã€�ã€Šä¸­å��äººæ°‘å…±å’Œå›½å��é—´è°�æ³•ã€‹ç­‰æ‰€æœ‰é€‚ç”¨çš„å›½å®¶æ³•å¾‹å’Œæ”¿ç­–ã€‚ç”¨æˆ·åº”è‡ªè¡Œæ‰¿æ‹…ä¸€åˆ‡å› ä½¿ç”¨æœ¬é¡¹ç›®è€Œå�¯èƒ½å¼•èµ·çš„æ³•å¾‹è´£ä»»ã€‚&lt;/p&gt; 
 &lt;h2&gt;3. ä½¿ç”¨ç›®çš„é™�åˆ¶&lt;/h2&gt; 
 &lt;p&gt;æœ¬é¡¹ç›®ä¸¥ç¦�ç”¨äº�ä»»ä½•é��æ³•ç›®çš„æˆ–é��å­¦ä¹ ã€�é��ç ”ç©¶çš„å•†ä¸šè¡Œä¸ºã€‚æœ¬é¡¹ç›®ä¸�å¾—ç”¨äº�ä»»ä½•å½¢å¼�çš„é��æ³•ä¾µå…¥ä»–äººè®¡ç®—æœºç³»ç»Ÿï¼Œä¸�å¾—ç”¨äº�ä»»ä½•ä¾µçŠ¯ä»–äººçŸ¥è¯†äº§æ�ƒæˆ–å…¶ä»–å�ˆæ³•æ�ƒç›Šçš„è¡Œä¸ºã€‚ç”¨æˆ·åº”ä¿�è¯�å…¶ä½¿ç”¨æœ¬é¡¹ç›®çš„ç›®çš„çº¯å±�ä¸ªäººå­¦ä¹ å’ŒæŠ€æœ¯ç ”ç©¶ï¼Œä¸�å¾—ç”¨äº�ä»»ä½•å½¢å¼�çš„é��æ³•æ´»åŠ¨ã€‚&lt;/p&gt; 
 &lt;h2&gt;4. å…�è´£å£°æ˜�&lt;/h2&gt; 
 &lt;p&gt;å¼€å�‘è€…å·²å°½æœ€å¤§åŠªåŠ›ç¡®ä¿�æœ¬é¡¹ç›®çš„æ­£å½“æ€§å�Šå®‰å…¨æ€§ï¼Œä½†ä¸�å¯¹ç”¨æˆ·ä½¿ç”¨æœ¬é¡¹ç›®å�¯èƒ½å¼•èµ·çš„ä»»ä½•å½¢å¼�çš„ç›´æ�¥æˆ–é—´æ�¥æ�Ÿå¤±æ‰¿æ‹…è´£ä»»ã€‚åŒ…æ‹¬ä½†ä¸�é™�äº�ç”±äº�ä½¿ç”¨æœ¬é¡¹ç›®è€Œå¯¼è‡´çš„ä»»ä½•æ•°æ�®ä¸¢å¤±ã€�è®¾å¤‡æ�Ÿå��ã€�æ³•å¾‹è¯‰è®¼ç­‰ã€‚&lt;/p&gt; 
 &lt;h2&gt;5. çŸ¥è¯†äº§æ�ƒå£°æ˜�&lt;/h2&gt; 
 &lt;p&gt;æœ¬é¡¹ç›®çš„çŸ¥è¯†äº§æ�ƒå½’å¼€å�‘è€…æ‰€æœ‰ã€‚æœ¬é¡¹ç›®å�—åˆ°è‘—ä½œæ�ƒæ³•å’Œå›½é™…è‘—ä½œæ�ƒæ�¡çº¦ä»¥å�Šå…¶ä»–çŸ¥è¯†äº§æ�ƒæ³•å¾‹å’Œæ�¡çº¦çš„ä¿�æŠ¤ã€‚ç”¨æˆ·åœ¨é�µå®ˆæœ¬å£°æ˜�å�Šç›¸å…³æ³•å¾‹æ³•è§„çš„å‰�æ��ä¸‹ï¼Œå�¯ä»¥ä¸‹è½½å’Œä½¿ç”¨æœ¬é¡¹ç›®ã€‚&lt;/p&gt; 
 &lt;h2&gt;6. æœ€ç»ˆè§£é‡Šæ�ƒ&lt;/h2&gt; 
 &lt;p&gt;å…³äº�æœ¬é¡¹ç›®çš„æœ€ç»ˆè§£é‡Šæ�ƒå½’å¼€å�‘è€…æ‰€æœ‰ã€‚å¼€å�‘è€…ä¿�ç•™éš�æ—¶æ›´æ”¹æˆ–æ›´æ–°æœ¬å…�è´£å£°æ˜�çš„æ�ƒåˆ©ï¼Œæ�•ä¸�å�¦è¡Œé€šçŸ¥ã€‚&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;ğŸ™� è‡´è°¢&lt;/h2&gt; 
&lt;h3&gt;JetBrains å¼€æº�è®¸å�¯è¯�æ”¯æŒ�&lt;/h3&gt; 
&lt;p&gt;æ„Ÿè°¢ JetBrains ä¸ºæœ¬é¡¹ç›®æ��ä¾›å…�è´¹çš„å¼€æº�è®¸å�¯è¯�æ”¯æŒ�ï¼�&lt;/p&gt; 
&lt;a href="https://www.jetbrains.com/?from=MediaCrawler"&gt; &lt;img src="https://www.jetbrains.com/company/brand/img/jetbrains_logo.png" width="100" alt="JetBrains"&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>googleapis/genai-toolbox</title>
      <link>https://github.com/googleapis/genai-toolbox</link>
      <description>&lt;p&gt;MCP Toolbox for Databases is an open source MCP server for databases.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/logo.png" alt="logo"&gt;&lt;/p&gt; 
&lt;h1&gt;MCP Toolbox for Databases&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://googleapis.github.io/genai-toolbox/"&gt;&lt;img src="https://img.shields.io/badge/docs-MCP_Toolbox-blue" alt="Docs"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/Dmm69peqjh"&gt;&lt;img src="https://img.shields.io/badge/Discord-%235865F2.svg?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://medium.com/@mcp_toolbox"&gt;&lt;img src="https://img.shields.io/badge/Medium-12100E?style=flat&amp;amp;logo=medium&amp;amp;logoColor=white" alt="Medium"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/googleapis/genai-toolbox"&gt;&lt;img src="https://goreportcard.com/badge/github.com/googleapis/genai-toolbox" alt="Go Report Card"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] MCP Toolbox for Databases is currently in beta, and may see breaking changes until the first stable release (v1.0).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;MCP Toolbox for Databases is an open source MCP server for databases. It enables you to develop tools easier, faster, and more securely by handling the complexities such as connection pooling, authentication, and more.&lt;/p&gt; 
&lt;p&gt;This README provides a brief overview. For comprehensive details, see the &lt;a href="https://googleapis.github.io/genai-toolbox/"&gt;full documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This solution was originally named â€œGen AI Toolbox for Databasesâ€� as its initial development predated MCP, but was renamed to align with recently added MCP compatibility.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- TOC ignore:true --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- TOC --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#why-toolbox"&gt;Why Toolbox?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#general-architecture"&gt;General Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#getting-started"&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#installing-the-server"&gt;Installing the server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#running-the-server"&gt;Running the server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#integrating-your-application"&gt;Integrating your application&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#configuration"&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#sources"&gt;Sources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#toolsets"&gt;Toolsets&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#versioning"&gt;Versioning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- /TOC --&gt; 
&lt;h2&gt;Why Toolbox?&lt;/h2&gt; 
&lt;p&gt;Toolbox helps you build Gen AI tools that let your agents access data in your database. Toolbox provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Simplified development&lt;/strong&gt;: Integrate tools to your agent in less than 10 lines of code, reuse tools between multiple agents or frameworks, and deploy new versions of tools more easily.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Better performance&lt;/strong&gt;: Best practices such as connection pooling, authentication, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced security&lt;/strong&gt;: Integrated auth for more secure access to your data&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;End-to-end observability&lt;/strong&gt;: Out of the box metrics and tracing with built-in support for OpenTelemetry.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;âš¡ Supercharge Your Workflow with an AI Database Assistant âš¡&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Stop context-switching and let your AI assistant become a true co-developer. By &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/connect-ide/"&gt;connecting your IDE to your databases with MCP Toolbox&lt;/a&gt;, you can delegate complex and time-consuming database tasks, allowing you to build faster and focus on what matters. This isn't just about code completion; it's about giving your AI the context it needs to handle the entire development lifecycle.&lt;/p&gt; 
&lt;p&gt;Hereâ€™s how it will save you time:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Query in Plain English&lt;/strong&gt;: Interact with your data using natural language right from your IDE. Ask complex questions like, &lt;em&gt;"How many orders were delivered in 2024, and what items were in them?"&lt;/em&gt; without writing any SQL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automate Database Management&lt;/strong&gt;: Simply describe your data needs, and let the AI assistant manage your database for you. It can handle generating queries, creating tables, adding indexes, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generate Context-Aware Code&lt;/strong&gt;: Empower your AI assistant to generate application code and tests with a deep understanding of your real-time database schema. This accelerates the development cycle by ensuring the generated code is directly usable.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Slash Development Overhead&lt;/strong&gt;: Radically reduce the time spent on manual setup and boilerplate. MCP Toolbox helps streamline lengthy database configurations, repetitive code, and error-prone schema migrations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/connect-ide/"&gt;how to connect your AI tools (IDEs) to Toolbox using MCP&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;General Architecture&lt;/h2&gt; 
&lt;p&gt;Toolbox sits between your application's orchestration framework and your database, providing a control plane that is used to modify, distribute, or invoke tools. It simplifies the management of your tools by providing you with a centralized location to store and update tools, allowing you to share tools between agents and applications and update those tools without necessarily redeploying your application.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/docs/en/getting-started/introduction/architecture.png" alt="architecture"&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Installing the server&lt;/h3&gt; 
&lt;p&gt;For the latest version, check the &lt;a href="https://github.com/googleapis/genai-toolbox/releases"&gt;releases page&lt;/a&gt; and use the following instructions for your OS and CPU architecture.&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt;Binary&lt;/summary&gt; 
 &lt;p&gt;To install Toolbox as a binary:&lt;/p&gt; 
 &lt;!-- {x-release-please-start-version} --&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# see releases page for other versions
export VERSION=0.9.0
curl -O https://storage.googleapis.com/genai-toolbox/v$VERSION/linux/amd64/toolbox
chmod +x toolbox
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Container image&lt;/summary&gt; You can also install Toolbox as a container: 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# see releases page for other versions
export VERSION=0.9.0
docker pull us-central1-docker.pkg.dev/database-toolbox/toolbox/toolbox:$VERSION
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Compile from source&lt;/summary&gt; 
 &lt;p&gt;To install from source, ensure you have the latest version of &lt;a href="https://go.dev/doc/install"&gt;Go installed&lt;/a&gt;, and then run the following command:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;go install github.com/googleapis/genai-toolbox@v0.9.0
&lt;/code&gt;&lt;/pre&gt; 
 &lt;!-- {x-release-please-end} --&gt; 
&lt;/details&gt; 
&lt;h3&gt;Running the server&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#configuration"&gt;Configure&lt;/a&gt; a &lt;code&gt;tools.yaml&lt;/code&gt; to define your tools, and then execute &lt;code&gt;toolbox&lt;/code&gt; to start the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./toolbox --tools-file "tools.yaml"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Toolbox enables dynamic reloading by default. To disable, use the &lt;code&gt;--disable-reload&lt;/code&gt; flag.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can use &lt;code&gt;toolbox help&lt;/code&gt; for a full list of flags! To stop the server, send a terminate signal (&lt;code&gt;ctrl+c&lt;/code&gt; on most platforms).&lt;/p&gt; 
&lt;p&gt;For more detailed documentation on deploying to different environments, check out the resources in the &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/"&gt;How-to section&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Integrating your application&lt;/h3&gt; 
&lt;p&gt;Once your server is up and running, you can load the tools into your application. See below the list of Client SDKs for using various frameworks:&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt;Python (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-core/"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_core import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = await client.load_toolset("toolset_name")
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
   &lt;p&gt;For more detailed instructions on using the Toolbox Core SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python/tree/main/packages/toolbox-core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain / LangGraph&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-langchain/"&gt;Toolbox LangChain SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-langchain
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_langchain import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = client.load_toolset()
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox LangChain SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python/raw/main/packages/toolbox-langchain/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LlamaIndex&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-llamaindex/"&gt;Toolbox Llamaindex SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-llamaindex
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_llamaindex import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = client.load_toolset()
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Llamaindex SDK, see the &lt;a href="https://github.com/googleapis/genai-toolbox-llamaindex-python/raw/main/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;  
&lt;details&gt; 
 &lt;summary&gt;Javascript/Typescript (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-js"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const tools = await client.loadToolset('toolsetName');
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Core SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-js/raw/main/packages/toolbox-core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain / LangGraph&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const toolboxTools = await client.loadToolset('toolsetName');

// Define the basics of the tool: name, description, schema and core logic
const getTool = (toolboxTool) =&amp;gt; tool(currTool, {
    name: toolboxTool.getName(),
    description: toolboxTool.getDescription(),
    schema: toolboxTool.getParamSchema()
});

// Use these tools in your Langchain/Langraph applications
const tools = toolboxTools.map(getTool);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Genkit&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';
import { genkit } from 'genkit';

// Initialise genkit
const ai = genkit({
    plugins: [
        googleAI({
            apiKey: process.env.GEMINI_API_KEY || process.env.GOOGLE_API_KEY
        })
    ],
    model: googleAI.model('gemini-2.0-flash'),
});

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const toolboxTools = await client.loadToolset('toolsetName');

// Define the basics of the tool: name, description, schema and core logic
const getTool = (toolboxTool) =&amp;gt; ai.defineTool({
    name: toolboxTool.getName(),
    description: toolboxTool.getDescription(),
    schema: toolboxTool.getParamSchema()
}, toolboxTool)

// Use these tools in your Genkit applications
const tools = toolboxTools.map(getTool);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;  
&lt;details&gt; 
 &lt;summary&gt;Go (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-go"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "context"
)

func main() {
  // Make sure to add the error checks
  // update the url to point to your server
  URL := "http://127.0.0.1:5000";
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tools
  tools, err := client.LoadToolset("toolsetName", ctx)
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Go SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-go/raw/main/core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain Go&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "github.com/tmc/langchaingo/llms"
)

func main() {
  // Make sure to add the error checks
  // update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var paramsSchema map[string]any
  _ = json.Unmarshal(inputschema, &amp;amp;paramsSchema)

  // Use this tool with LangChainGo
  langChainTool := llms.Tool{
    Type: "function",
    Function: &amp;amp;llms.FunctionDefinition{
      Name:        tool.Name(),
      Description: tool.Description(),
      Parameters:  paramsSchema,
    },
  }
}

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Genkit&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main
import (
  "context"
  "encoding/json"

  "github.com/firebase/genkit/go/ai"
  "github.com/firebase/genkit/go/genkit"
  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "github.com/invopop/jsonschema"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()
  g, err := genkit.Init(ctx)

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var schema *jsonschema.Schema
  _ = json.Unmarshal(inputschema, &amp;amp;schema)

  executeFn := func(ctx *ai.ToolContext, input any) (string, error) {
    result, err := tool.Invoke(ctx, input.(map[string]any))
    if err != nil {
      // Propagate errors from the tool invocation.
      return "", err
    }

    return result.(string), nil
  }

  // Use this tool with Genkit Go
  genkitTool := genkit.DefineToolWithInputSchema(
    g,
    tool.Name(),
    tool.Description(),
    schema,
    executeFn,
  )
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Go GenAI&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "google.golang.org/genai"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var schema *genai.Schema
  _ = json.Unmarshal(inputschema, &amp;amp;schema)

  funcDeclaration := &amp;amp;genai.FunctionDeclaration{
    Name:        tool.Name(),
    Description: tool.Description(),
    Parameters:  schema,
  }

  // Use this tool with Go GenAI
  genAITool := &amp;amp;genai.Tool{
    FunctionDeclarations: []*genai.FunctionDeclaration{funcDeclaration},
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;OpenAI Go&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  openai "github.com/openai/openai-go"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var paramsSchema openai.FunctionParameters
  _ = json.Unmarshal(inputschema, &amp;amp;paramsSchema)

  // Use this tool with OpenAI Go
  openAITool := openai.ChatCompletionToolParam{
    Function: openai.FunctionDefinitionParam{
      Name:        tool.Name(),
      Description: openai.String(tool.Description()),
      Parameters:  paramsSchema,
    },
  }

}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;   
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;The primary way to configure Toolbox is through the &lt;code&gt;tools.yaml&lt;/code&gt; file. If you have multiple files, you can tell toolbox which to load with the &lt;code&gt;--tools-file tools.yaml&lt;/code&gt; flag.&lt;/p&gt; 
&lt;p&gt;You can find more detailed reference documentation to all resource types in the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/"&gt;Resources&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Sources&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;sources&lt;/code&gt; section of your &lt;code&gt;tools.yaml&lt;/code&gt; defines what data sources your Toolbox should have access to. Most tools will have at least one source to execute against.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;sources:
  my-pg-source:
    kind: postgres
    host: 127.0.0.1
    port: 5432
    database: toolbox_db
    user: toolbox_user
    password: my-password
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring different types of sources, see the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/sources"&gt;Sources&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;tools&lt;/code&gt; section of a &lt;code&gt;tools.yaml&lt;/code&gt; define the actions an agent can take: what kind of tool it is, which source(s) it affects, what parameters it uses, etc.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;tools:
  search-hotels-by-name:
    kind: postgres-sql
    source: my-pg-source
    description: Search for hotels based on name.
    parameters:
      - name: name
        type: string
        description: The name of the hotel.
    statement: SELECT * FROM hotels WHERE name ILIKE '%' || $1 || '%';
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring different types of tools, see the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/tools"&gt;Tools&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Toolsets&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;toolsets&lt;/code&gt; section of your &lt;code&gt;tools.yaml&lt;/code&gt; allows you to define groups of tools that you want to be able to load together. This can be useful for defining different groups based on agent or application.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;toolsets:
    my_first_toolset:
        - my_first_tool
        - my_second_tool
    my_second_toolset:
        - my_second_tool
        - my_third_tool
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can load toolsets by name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# This will load all tools
all_tools = client.load_toolset()

# This will only load the tools listed in 'my_second_toolset'
my_second_toolset = client.load_toolset("my_second_toolset")
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;This project uses &lt;a href="https://semver.org/"&gt;semantic versioning&lt;/a&gt;, including a &lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt; version number that increments with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MAJOR version when we make incompatible API changes&lt;/li&gt; 
 &lt;li&gt;MINOR version when we add functionality in a backward compatible manner&lt;/li&gt; 
 &lt;li&gt;PATCH version when we make backward compatible bug fixes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The public API that this applies to is the CLI associated with Toolbox, the interactions with official SDKs, and the definitions in the &lt;code&gt;tools.yaml&lt;/code&gt; file.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome. Please, see the &lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. See &lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/CODE_OF_CONDUCT.md"&gt;Contributor Code of Conduct&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.gg/GQrFB3Ec3W"&gt;discord community&lt;/a&gt; to connect with our developers!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gorhill/uBlock</title>
      <link>https://github.com/gorhill/uBlock</link>
      <description>&lt;p&gt;uBlock Origin - An efficient blocker for Chromium and Firefox. Fast and lean.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/gorhill/uBlock/commits/master"&gt;&lt;img src="https://img.shields.io/github/commit-activity/m/gorhill/ublock?label=Commits" alt="Badge Commits"&gt;&lt;/a&gt; &lt;a href="https://github.com/uBlockOrigin/uBlock-issues/issues"&gt;&lt;img src="https://img.shields.io/github/issues/uBlockOrigin/uBlock-issues" alt="Badge Issues"&gt;&lt;/a&gt; &lt;a href="https://crowdin.com/project/ublock"&gt;&lt;img src="https://d322cqt584bo4o.cloudfront.net/ublock/localized.svg?sanitize=true" alt="Badge Localization"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true" alt="Badge License"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@gorhill/ubo-core"&gt;&lt;img src="https://img.shields.io/npm/v/@gorhill/ubo-core" alt="Badge NPM"&gt;&lt;/a&gt; &lt;a href="https://addons.mozilla.org/addon/ublock-origin/"&gt;&lt;img src="https://img.shields.io/amo/rating/ublock-origin?label=Firefox" alt="Badge Mozilla"&gt;&lt;/a&gt; &lt;a href="https://chromewebstore.google.com/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm"&gt;&lt;img src="https://img.shields.io/chrome-web-store/rating/cjpalhdlnbpafiamejdnhcphjbkeiagm?label=Chrome" alt="Badge Chrome"&gt;&lt;/a&gt; &lt;a href="https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?label=Edge&amp;amp;color=brightgreen&amp;amp;query=%24.averageRating&amp;amp;suffix=%2F%35&amp;amp;url=https%3A%2F%2Fmicrosoftedge.microsoft.com%2Faddons%2Fgetproductdetailsbycrxid%2Fodfafepnkmbhccpbejgmiehpchacaeak" alt="Badge Edge"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1 align="center"&gt; &lt;sub&gt; &lt;img src="https://github.com/gorhill/uBlock/raw/master/src/img/ublock.svg?sanitize=true" height="38" width="38"&gt; &lt;/sub&gt; uBlock Origin (uBO) &lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Browser&lt;/th&gt; 
   &lt;th&gt;Install from ...&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/user-attachments/assets/b0136512-56a5-4856-8c50-4971c957a24f" alt="Get uBlock Origin for Firefox"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://addons.mozilla.org/addon/ublock-origin/"&gt;Firefox Add-ons&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gorhill/uBlock/wiki/uBlock-Origin-works-best-on-Firefox"&gt;uBO works best on Firefox&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/user-attachments/assets/3a7569f8-688b-4eb1-a643-8d0fe173aefe" alt="Get uBlock Origin for Microsoft Edge"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak"&gt;Edge Add-ons&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/user-attachments/assets/938f080c-fe64-4e48-8b89-4bfceabb56e6" alt="Get uBlock Origin for Opera"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://addons.opera.com/extensions/details/ublock/"&gt;Opera Add-ons&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/user-attachments/assets/5463ef88-873b-4516-8514-5277664cfde7" alt="Get uBlock Origin for Chromium"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://chromewebstore.google.com/detail/ublock-origin-lite/ddkjiahejlhfcafbddmgiahcphecmpfh"&gt;Chrome Web Store&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/uBlockOrigin/uBlock-issues/wiki/About-Google-Chrome's-%22This-extension-may-soon-no-longer-be-supported%22"&gt;About Google Chrome's "This extension may soon no longer be supported"&lt;/a&gt;&lt;br&gt;End of support on Chrome 139&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/user-attachments/assets/2e9037c4-836d-44c1-a716-ba96e89daaff" alt="Get uBlock Origin for Thunderbird"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://addons.thunderbird.net/en-Us/thunderbird/addon/ublock-origin/"&gt;Thunderbird Add-ons&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/uBlockOrigin/uBlock-issues/issues/2928"&gt;No longer updated and stuck at 1.49.2&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr&gt; 
&lt;p&gt;uBlock Origin (uBO) is a CPU and memory-efficient &lt;a href="https://github.com/gorhill/uBlock/wiki/Blocking-mode"&gt;wide-spectrum content blocker&lt;/a&gt; for Chromium and Firefox. It blocks ads, trackers, coin miners, popups, annoying anti-blockers, malware sites, etc., by default using &lt;a href="https://easylist.to/#easylist"&gt;EasyList&lt;/a&gt;, &lt;a href="https://easylist.to/#easyprivacy"&gt;EasyPrivacy&lt;/a&gt;, &lt;a href="https://pgl.yoyo.org/adservers/"&gt;Peter Lowe's Blocklist&lt;/a&gt;, &lt;a href="https://gitlab.com/malware-filter/urlhaus-filter#malicious-url-blocklist"&gt;Online Malicious URL Blocklist&lt;/a&gt;, and uBO &lt;a href="https://github.com/uBlockOrigin/uAssets/tree/master/filters"&gt;filter lists&lt;/a&gt;. There are many other lists available to block even more. Hosts files are also supported. uBO uses the EasyList filter syntax and &lt;a href="https://github.com/gorhill/uBlock/wiki/Static-filter-syntax#extended-syntax"&gt;extends&lt;/a&gt; the syntax to work with custom rules and filters.&lt;/p&gt; 
&lt;p&gt;You may easily unselect any preselected filter lists if you think uBO blocks too much. For reference, Adblock Plus installs with only EasyList, ABP filters, and Acceptable Ads enabled by default.&lt;/p&gt; 
&lt;p&gt;It is important to note that using a blocker is &lt;strong&gt;NOT&lt;/strong&gt; &lt;a href="https://x.com/LeaVerou/status/518154828166725632"&gt;theft&lt;/a&gt;. Do not fall for this creepy idea. The &lt;em&gt;ultimate&lt;/em&gt; logical consequence of &lt;code&gt;blocking = theft&lt;/code&gt; is the criminalization of the inalienable right to privacy.&lt;/p&gt; 
&lt;p&gt;Ads, "unintrusive" or not, are just the visible portion of the privacy-invading means entering your browser when you visit most sites. &lt;strong&gt;uBO's primary goal is to help users neutralize these privacy-invading methods&lt;/strong&gt; in a way that welcomes those users who do not wish to use more technical means.&lt;/p&gt; 
&lt;hr&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#installation"&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#firefox"&gt;Firefox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#thunderbird"&gt;Thunderbird&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#chromium"&gt;Chromium&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#all-programs"&gt;All Programs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#enterprise-deployment"&gt;Enterprise Deployment&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#release-history"&gt;Release History&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#translations"&gt;Translations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/#about"&gt;About&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Basic Mode&lt;/th&gt; 
   &lt;th&gt;Advanced Mode&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;The &lt;a href="https://github.com/gorhill/uBlock/wiki/Quick-guide:-popup-user-interface"&gt;simple popup user interface&lt;/a&gt; for an install-it-and-forget-it type of installation that is configured optimally by default.&lt;/td&gt; 
   &lt;td&gt;The &lt;a href="https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide"&gt;advanced popup user interface&lt;/a&gt; includes a point-and-click firewall that is configurable on a per-site basis.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top"&gt;&lt;a href="https://github.com/gorhill/uBlock/wiki/Quick-guide:-popup-user-interface"&gt;&lt;img src="https://user-images.githubusercontent.com/585534/232531044-c4ac4dd5-0b60-4c1e-aabb-914be04b846c.png"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top"&gt;&lt;a href="https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide"&gt;&lt;img src="https://user-images.githubusercontent.com/585534/232531439-a8f81cc3-6622-45c4-8b32-7348cecf6e98.png"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Visit the &lt;a href="https://github.com/gorhill/uBlock/wiki"&gt;Wiki&lt;/a&gt; for documentation.&lt;/p&gt; 
&lt;p&gt;For support, questions, or help, visit &lt;a href="https://www.reddit.com/r/uBlockOrigin/"&gt;/r/uBlockOrigin&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/gorhill/uBlock/wiki/Permissions"&gt;Required Permissions&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Firefox&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://addons.mozilla.org/addon/ublock-origin/"&gt;Firefox Add-ons&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/gorhill/uBlock/raw/master/dist/README.md#for-beta-version"&gt;Development Builds&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;uBO &lt;a href="https://github.com/gorhill/uBlock/wiki/uBlock-Origin-works-best-on-Firefox"&gt;works best&lt;/a&gt; on Firefox and is available for desktop and Android versions.&lt;/p&gt; 
&lt;h4&gt;Thunderbird&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://addons.thunderbird.net/thunderbird/addon/ublock-origin/"&gt;Thunderbird Add-ons&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;In Thunderbird, uBlock Origin does not affect emails, just feeds.&lt;/p&gt; 
&lt;h4&gt;Chromium&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://chromewebstore.google.com/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm"&gt;Chrome Web Store&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://microsoftedge.microsoft.com/addons/detail/ublock-origin/odfafepnkmbhccpbejgmiehpchacaeak"&gt;Microsoft Edge Add-ons&lt;/a&gt; (Published by &lt;a href="https://github.com/nicole-ashley"&gt;Nicole Rolls&lt;/a&gt; until version 1.62. Ownership transfer at version 1.64.)&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://addons.opera.com/extensions/details/ublock/"&gt;Opera Add-ons&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://chromewebstore.google.com/detail/ublock-origin-development/cgbcahbpdhpcegmbfconppldiemgcoii"&gt;Development Builds&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;uBO should be compatible with any Chromium-based browser.&lt;/p&gt; 
&lt;h4&gt;All Programs&lt;/h4&gt; 
&lt;p&gt;Do &lt;strong&gt;NOT&lt;/strong&gt; use uBO with any other content blocker. uBO &lt;a href="https://www.debugbear.com/blog/chrome-extensions-website-performance#the-impact-of-ad-blocking-on-website-performance"&gt;performs&lt;/a&gt; as well as or better than most popular blockers. Other blockers can prevent uBO's privacy or anti-blocker-defusing features from working correctly.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/gorhill/uBlock/tree/master/dist#install"&gt;Manual Installation&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Enterprise Deployment&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/gorhill/uBlock/wiki/Deploying-uBlock-Origin"&gt;Deploying uBO&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Release History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/gorhill/uBlock/releases"&gt;Releases Page&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;Help translate uBO via &lt;a href="https://crowdin.com/project/ublock"&gt;Crowdin&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/MANIFESTO.md"&gt;Manifesto&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/gorhill/uBlock/wiki/Privacy-policy"&gt;Privacy Policy&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/gorhill/uBlock/master/LICENSE.txt"&gt;GPLv3 License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Free. Open-source. For users by users. No donations sought.&lt;/p&gt; 
&lt;p&gt;If you ever want to contribute something, think about the people working hard to maintain the filter lists you are using, which are available to use by all for free.&lt;/p&gt; 
&lt;!----&gt; 
&lt;!--[ Internal ]--------------------------------&gt; 
&lt;!--[ Badges ]---------------------------------&gt;</description>
    </item>
    
    <item>
      <title>maybe-finance/maybe</title>
      <link>https://github.com/maybe-finance/maybe</link>
      <description>&lt;p&gt;The personal finance app for everyone&lt;/p&gt;&lt;hr&gt;&lt;img width="1190" alt="maybe_hero" src="https://github.com/user-attachments/assets/13fc5ef4-ce0f-4073-a163-9dbc3eb4c8e5"&gt; 
&lt;h1&gt;Maybe: The personal finance app for everyone&lt;/h1&gt; 
&lt;p&gt;&lt;b&gt;Get involved: &lt;a href="https://link.maybe.co/discord"&gt;Discord&lt;/a&gt; â€¢ &lt;a href="https://maybefinance.com"&gt;Website&lt;/a&gt; â€¢ &lt;a href="https://github.com/maybe-finance/maybe/issues"&gt;Issues&lt;/a&gt;&lt;/b&gt;&lt;/p&gt; 
&lt;h2&gt;Backstory&lt;/h2&gt; 
&lt;p&gt;We spent the better part of 2021/2022 building a personal finance + wealth management app called, Maybe. Very full-featured, including an "Ask an Advisor" feature which connected users with an actual CFP/CFA to help them with their finances (all included in your subscription).&lt;/p&gt; 
&lt;p&gt;The business end of things didn't work out, and so we shut things down mid-2023.&lt;/p&gt; 
&lt;p&gt;We spent the better part of $1,000,000 building the app (employees + contractors, data providers/services, infrastructure, etc.).&lt;/p&gt; 
&lt;p&gt;We're now reviving the product as a fully open-source project. The goal is to let you run the app yourself, for free, and use it to manage your own finances and eventually offer a hosted version of the app for a small monthly fee.&lt;/p&gt; 
&lt;h2&gt;Maybe Hosting&lt;/h2&gt; 
&lt;p&gt;There are 2 primary ways to use the Maybe app:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Managed (easiest) - we're in alpha and release invites in our Discord&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/maybe-finance/maybe/main/docs/hosting/docker.md"&gt;Self-host with Docker&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Before contributing, you'll likely find it helpful to &lt;a href="https://github.com/maybe-finance/maybe/wiki"&gt;understand context and general vision/direction&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Once you've done that, please visit our &lt;a href="https://github.com/maybe-finance/maybe/raw/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to get started!&lt;/p&gt; 
&lt;h3&gt;Performance Issues&lt;/h3&gt; 
&lt;p&gt;With data-heavy apps, inevitably, there are performance issues. We've set up a public dashboard showing the problematic requests, along with the stacktraces to help debug them.&lt;/p&gt; 
&lt;p&gt;Any contributions that help improve performance are very much welcome.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://oss.skylight.io/app/applications/XDpPIXEX52oi/recent/6h/endpoints"&gt;https://oss.skylight.io/app/applications/XDpPIXEX52oi/recent/6h/endpoints&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Local Development Setup&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;If you are trying to &lt;em&gt;self-host&lt;/em&gt; the Maybe app, stop here. You should &lt;a href="https://raw.githubusercontent.com/maybe-finance/maybe/main/docs/hosting/docker.md"&gt;read this guide to get started&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The instructions below are for developers to get started with contributing to the app.&lt;/p&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;See &lt;code&gt;.ruby-version&lt;/code&gt; file for required Ruby version&lt;/li&gt; 
 &lt;li&gt;PostgreSQL &amp;gt;9.3 (ideally, latest stable version)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;After cloning the repo, the basic setup commands are:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cd maybe
cp .env.local.example .env.local
bin/setup
bin/dev

# Optionally, load demo data
rake demo_data:default
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And visit &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; to see the app. You can use the following credentials to log in (generated by DB seed):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Email: &lt;code&gt;user@maybe.local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Password: &lt;code&gt;password&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For further instructions, see guides below.&lt;/p&gt; 
&lt;h3&gt;Multi-currency support&lt;/h3&gt; 
&lt;p&gt;If you'd like multi-currency support, there are a few extra steps to follow.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Sign up for an API key at &lt;a href="https://synthfinance.com"&gt;Synth&lt;/a&gt;. It's a Maybe product and the free plan is sufficient for basic multi-currency support.&lt;/li&gt; 
 &lt;li&gt;Add your API key to your &lt;code&gt;.env&lt;/code&gt; file.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Setup Guides&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maybe-finance/maybe/wiki/Mac-Dev-Setup-Guide"&gt;Mac dev setup guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maybe-finance/maybe/wiki/Linux-Dev-Setup-Guide"&gt;Linux dev setup guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maybe-finance/maybe/wiki/Windows-Dev-Setup-Guide"&gt;Windows dev setup guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dev containers - visit &lt;a href="https://code.visualstudio.com/docs/devcontainers/containers"&gt;this guide&lt;/a&gt; to learn more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Repo Activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/7866c9790deba0baf63ca1688b209130b306ea4e.svg?sanitize=true" alt="Repo Activity" title="Repobeats analytics image"&gt;&lt;/p&gt; 
&lt;h2&gt;Copyright &amp;amp; license&lt;/h2&gt; 
&lt;p&gt;Maybe is distributed under an &lt;a href="https://github.com/maybe-finance/maybe/raw/main/LICENSE"&gt;AGPLv3 license&lt;/a&gt;. " Maybe" is a trademark of Maybe Finance, Inc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>snailyp/gemini-balance</title>
      <link>https://github.com/snailyp/gemini-balance</link>
      <description>&lt;p&gt;Gemini polling proxy service ï¼ˆgeminiè½®è¯¢ä»£ç�†æœ�åŠ¡ï¼‰&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/snailyp/gemini-balance/main/README_ZH.md"&gt;Read this document in Chinese&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Gemini Balance - Gemini API Proxy and Load Balancer&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/13692" target="_blank"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/13692" alt="snailyp%2Fgemini-balance | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.python.org/"&gt;&lt;img src="https://img.shields.io/badge/Python-3.9%2B-blue.svg?sanitize=true" alt="Python"&gt;&lt;/a&gt; &lt;a href="https://fastapi.tiangolo.com/"&gt;&lt;img src="https://img.shields.io/badge/FastAPI-0.100%2B-green.svg?sanitize=true" alt="FastAPI"&gt;&lt;/a&gt; &lt;a href="https://www.uvicorn.org/"&gt;&lt;img src="https://img.shields.io/badge/Uvicorn-running-purple.svg?sanitize=true" alt="Uvicorn"&gt;&lt;/a&gt; &lt;a href="https://t.me/+soaHax5lyI0wZDVl"&gt;&lt;img src="https://img.shields.io/badge/Telegram-Group-blue.svg?logo=telegram" alt="Telegram Group"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;âš ï¸� &lt;strong&gt;Important&lt;/strong&gt;: This project is licensed under the &lt;a href="https://raw.githubusercontent.com/snailyp/gemini-balance/main/LICENSE"&gt;CC BY-NC 4.0&lt;/a&gt; license. &lt;strong&gt;Any form of commercial resale service is prohibited&lt;/strong&gt;. I have never sold this service on any platform. If you encounter someone selling this service, they are a reseller. Please do not be deceived.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr&gt; 
&lt;h2&gt;ğŸ“– Project Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Gemini Balance&lt;/strong&gt; is an application built with Python FastAPI, designed to provide proxy and load balancing functions for the Google Gemini API. It allows you to manage multiple Gemini API Keys and implement key rotation, authentication, model filtering, and status monitoring through simple configuration. Additionally, the project integrates image generation and multiple image hosting upload functions, and supports proxying in the OpenAI API format.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;ğŸ“‚ View Project Structure&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-plaintext"&gt;app/
â”œâ”€â”€ config/       # Configuration management
â”œâ”€â”€ core/         # Core application logic (FastAPI instance creation, middleware, etc.)
â”œâ”€â”€ database/     # Database models and connections
â”œâ”€â”€ domain/       # Business domain objects
â”œâ”€â”€ exception/    # Custom exceptions
â”œâ”€â”€ handler/      # Request handlers
â”œâ”€â”€ log/          # Logging configuration
â”œâ”€â”€ main.py       # Application entry point
â”œâ”€â”€ middleware/   # FastAPI middleware
â”œâ”€â”€ router/       # API routes (Gemini, OpenAI, status page, etc.)
â”œâ”€â”€ scheduler/    # Scheduled tasks (e.g., Key status check)
â”œâ”€â”€ service/      # Business logic services (chat, Key management, statistics, etc.)
â”œâ”€â”€ static/       # Static files (CSS, JS)
â”œâ”€â”€ templates/    # HTML templates (e.g., Key status page)
â””â”€â”€ utils/        # Utility functions
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h2&gt;âœ¨ Feature Highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Key Load Balancing&lt;/strong&gt;: Supports configuring multiple Gemini API Keys (&lt;code&gt;API_KEYS&lt;/code&gt;) for automatic sequential polling.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Visual Configuration&lt;/strong&gt;: Configurations modified through the admin backend take effect immediately without restarting. &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image4.png" alt="Configuration Panel"&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dual Protocol API Compatibility&lt;/strong&gt;: Supports both Gemini and OpenAI CHAT API formats. 
  &lt;ul&gt; 
   &lt;li&gt;OpenAI Base URL: &lt;code&gt;http://localhost:8000(/hf)/v1&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Gemini Base URL: &lt;code&gt;http://localhost:8000(/gemini)/v1beta&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image-Text Chat &amp;amp; Modification&lt;/strong&gt;: Configure models with &lt;code&gt;IMAGE_MODELS&lt;/code&gt; to support image-text chat and editing. Use the &lt;code&gt;configured_model-image&lt;/code&gt; model name to invoke. &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image6.png" alt="Chat with Image Generation"&gt; &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image7.png" alt="Modify Image"&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web Search&lt;/strong&gt;: Configure models with &lt;code&gt;SEARCH_MODELS&lt;/code&gt; to support web search. Use the &lt;code&gt;configured_model-search&lt;/code&gt; model name to invoke. &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image8.png" alt="Web Search"&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Key Status Monitoring&lt;/strong&gt;: Provides a &lt;code&gt;/keys_status&lt;/code&gt; page (authentication required) for real-time monitoring. &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image.png" alt="Monitoring Panel"&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Detailed Logging&lt;/strong&gt;: Provides detailed error logs for easy troubleshooting. &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image1.png" alt="Call Details"&gt; &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image2.png" alt="Log List"&gt; &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image3.png" alt="Log Details"&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible Key Addition&lt;/strong&gt;: Add keys in batches using the &lt;code&gt;gemini_key&lt;/code&gt; regex, with automatic deduplication. &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/image5.png" alt="Add Key"&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Failure Retry &amp;amp; Auto-Disable&lt;/strong&gt;: Automatically retries failed API requests (&lt;code&gt;MAX_RETRIES&lt;/code&gt;) and disables keys after excessive failures (&lt;code&gt;MAX_FAILURES&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive API Compatibility&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Embeddings API&lt;/strong&gt;: Fully compatible with the OpenAI &lt;code&gt;embeddings&lt;/code&gt; API format.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Image Generation API&lt;/strong&gt;: Adapts the &lt;code&gt;imagen-3.0-generate-002&lt;/code&gt; model to the OpenAI image generation API format.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic Model List Maintenance&lt;/strong&gt;: Automatically fetches and syncs the latest model lists from Gemini and OpenAI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Proxy Support&lt;/strong&gt;: Supports HTTP/SOCKS5 proxies (&lt;code&gt;PROXIES&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Support&lt;/strong&gt;: Provides Docker images for both AMD and ARM architectures. 
  &lt;ul&gt; 
   &lt;li&gt;Image Address: &lt;code&gt;ghcr.io/snailyp/gemini-balance:latest&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;ğŸš€ Quick Start&lt;/h2&gt; 
&lt;h3&gt;Option 1: Docker Compose (Recommended)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Get &lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/strong&gt;: Download the &lt;code&gt;docker-compose.yml&lt;/code&gt; file from the project repository.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prepare &lt;code&gt;.env&lt;/code&gt; file&lt;/strong&gt;: Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and configure it. Ensure &lt;code&gt;DATABASE_TYPE&lt;/code&gt; is set to &lt;code&gt;mysql&lt;/code&gt; and fill in the &lt;code&gt;MYSQL_*&lt;/code&gt; details.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start Services&lt;/strong&gt;: In the directory containing &lt;code&gt;docker-compose.yml&lt;/code&gt; and &lt;code&gt;.env&lt;/code&gt;, run: &lt;pre&gt;&lt;code class="language-bash"&gt;docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Option 2: Docker Command&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Pull Image&lt;/strong&gt;: &lt;pre&gt;&lt;code class="language-bash"&gt;docker pull ghcr.io/snailyp/gemini-balance:latest
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prepare &lt;code&gt;.env&lt;/code&gt; file&lt;/strong&gt;: Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and configure it.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Run Container&lt;/strong&gt;: &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 8000:8000 --name gemini-balance \
-v ./data:/app/data \
--env-file .env \
ghcr.io/snailyp/gemini-balance:latest
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: Detached mode.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-p 8000:8000&lt;/code&gt;: Map container port 8000 to host.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-v ./data:/app/data&lt;/code&gt;: Mount volume for persistent data.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--env-file .env&lt;/code&gt;: Load environment variables.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Option 3: Local Development&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Clone and Install&lt;/strong&gt;: &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/snailyp/gemini-balance.git
cd gemini-balance
pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configure Environment&lt;/strong&gt;: Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and configure it.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start Application&lt;/strong&gt;: &lt;pre&gt;&lt;code class="language-bash"&gt;uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
&lt;/code&gt;&lt;/pre&gt; Access the application at &lt;code&gt;http://localhost:8000&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h2&gt;âš™ï¸� API Endpoints&lt;/h2&gt; 
&lt;h3&gt;Gemini API Format (&lt;code&gt;/gemini/v1beta&lt;/code&gt;)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GET /models&lt;/code&gt;: List available Gemini models.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /models/{model_name}:generateContent&lt;/code&gt;: Generate content.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /models/{model_name}:streamGenerateContent&lt;/code&gt;: Stream content generation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;OpenAI API Format&lt;/h3&gt; 
&lt;h4&gt;Hugging Face (HF) Compatible&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GET /hf/v1/models&lt;/code&gt;: List models.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /hf/v1/chat/completions&lt;/code&gt;: Chat completion.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /hf/v1/embeddings&lt;/code&gt;: Create text embeddings.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /hf/v1/images/generations&lt;/code&gt;: Generate images.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Standard OpenAI&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GET /openai/v1/models&lt;/code&gt;: List models.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /openai/v1/chat/completions&lt;/code&gt;: Chat completion (Recommended).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /openai/v1/embeddings&lt;/code&gt;: Create text embeddings.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /openai/v1/images/generations&lt;/code&gt;: Generate images.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;details&gt; 
 &lt;summary&gt;ğŸ“‹ View Full Configuration List&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align="left"&gt;Configuration Item&lt;/th&gt; 
    &lt;th align="left"&gt;Description&lt;/th&gt; 
    &lt;th align="left"&gt;Default Value&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;Database&lt;/strong&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;DATABASE_TYPE&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;mysql&lt;/code&gt; or &lt;code&gt;sqlite&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;mysql&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;SQLITE_DATABASE&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Path for SQLite database file&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;default_db&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MYSQL_HOST&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;MySQL host address&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;localhost&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MYSQL_SOCKET&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;MySQL socket address&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;/var/run/mysqld/mysqld.sock&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MYSQL_PORT&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;MySQL port&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;3306&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MYSQL_USER&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;MySQL username&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;your_db_user&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MYSQL_PASSWORD&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;MySQL password&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;your_db_password&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MYSQL_DATABASE&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;MySQL database name&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;defaultdb&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;API&lt;/strong&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;API_KEYS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;Required&lt;/strong&gt;, list of Gemini API keys&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;ALLOWED_TOKENS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;Required&lt;/strong&gt;, list of access tokens&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;AUTH_TOKEN&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Super admin token, defaults to the first of &lt;code&gt;ALLOWED_TOKENS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;sk-123456&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;TEST_MODEL&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Model for testing key validity&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;gemini-1.5-flash&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;IMAGE_MODELS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Models supporting image generation&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;["gemini-2.0-flash-exp"]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;SEARCH_MODELS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Models supporting web search&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;["gemini-2.0-flash-exp"]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;FILTERED_MODELS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Disabled models&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;TOOLS_CODE_EXECUTION_ENABLED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Enable code execution tool&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;SHOW_SEARCH_LINK&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Display search result links in response&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;SHOW_THINKING_PROCESS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Display model's thinking process&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;THINKING_MODELS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Models supporting thinking process&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;THINKING_BUDGET_MAP&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Budget map for thinking function (model:budget)&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;URL_NORMALIZATION_ENABLED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Enable smart URL routing&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;URL_CONTEXT_ENABLED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Enable URL context understanding&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;URL_CONTEXT_MODELS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Models supporting URL context&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;BASE_URL&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Gemini API base URL&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;https://generativelanguage.googleapis.com/v1beta&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MAX_FAILURES&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Max failures allowed per key&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;MAX_RETRIES&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Max retries for failed API requests&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;CHECK_INTERVAL_HOURS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Interval (hours) to re-check disabled keys&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;TIMEZONE&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Application timezone&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;Asia/Shanghai&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;TIME_OUT&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Request timeout (seconds)&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;300&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;PROXIES&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;List of proxy servers&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;Logging &amp;amp; Security&lt;/strong&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;LOG_LEVEL&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Log level: &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;INFO&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;AUTO_DELETE_ERROR_LOGS_ENABLED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Auto-delete error logs&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;AUTO_DELETE_ERROR_LOGS_DAYS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Error log retention period (days)&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;7&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;AUTO_DELETE_REQUEST_LOGS_ENABLED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Auto-delete request logs&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;AUTO_DELETE_REQUEST_LOGS_DAYS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Request log retention period (days)&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;30&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;SAFETY_SETTINGS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Content safety thresholds (JSON string)&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;[{"category": "HARM_CATEGORY_HARASSMENT", "threshold": "OFF"}, ...]&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;TTS&lt;/strong&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;TTS_MODEL&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;TTS model name&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;gemini-2.5-flash-preview-tts&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;TTS_VOICE_NAME&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;TTS voice name&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;Zephyr&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;TTS_SPEED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;TTS speed&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;normal&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;Image Generation&lt;/strong&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;PAID_KEY&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Paid API Key for advanced features&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;your-paid-api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;CREATE_IMAGE_MODEL&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Image generation model&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;imagen-3.0-generate-002&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;UPLOAD_PROVIDER&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Image upload provider: &lt;code&gt;smms&lt;/code&gt;, &lt;code&gt;picgo&lt;/code&gt;, &lt;code&gt;cloudflare_imgbed&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;smms&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;SMMS_SECRET_TOKEN&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;SM.MS API Token&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;your-smms-token&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;PICGO_API_KEY&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;PicoGo API Key&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;your-picogo-apikey&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;CLOUDFLARE_IMGBED_URL&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;CloudFlare ImgBed upload URL&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;https://xxxxxxx.pages.dev/upload&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;CLOUDFLARE_IMGBED_AUTH_CODE&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;CloudFlare ImgBed auth key&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;your-cloudflare-imgber-auth-code&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;CLOUDFLARE_IMGBED_UPLOAD_FOLDER&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;CloudFlare ImgBed upload folder&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;Stream Optimizer&lt;/strong&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;STREAM_OPTIMIZER_ENABLED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Enable stream output optimization&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;STREAM_MIN_DELAY&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Minimum stream output delay&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;0.016&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;STREAM_MAX_DELAY&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Maximum stream output delay&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;0.024&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;STREAM_SHORT_TEXT_THRESHOLD&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Short text threshold&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;STREAM_LONG_TEXT_THRESHOLD&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Long text threshold&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;50&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;STREAM_CHUNK_SIZE&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Stream output chunk size&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;strong&gt;Fake Stream&lt;/strong&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;FAKE_STREAM_ENABLED&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Enable fake streaming&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;&lt;code&gt;FAKE_STREAM_EMPTY_DATA_INTERVAL_SECONDS&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;Heartbeat interval for fake streaming (seconds)&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h2&gt;ğŸ¤� Contributing&lt;/h2&gt; 
&lt;p&gt;Pull Requests or Issues are welcome.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/snailyp/gemini-balance/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=snailyp/gemini-balance" alt="Contributors"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;â­� Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#snailyp/gemini-balance&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=snailyp/gemini-balance&amp;amp;type=Date" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ğŸ�‰ Special Thanks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.picgo.net/"&gt;PicGo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://smms.app/"&gt;SM.MS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MarSeventh/CloudFlare-ImgBed"&gt;CloudFlare-ImgBed&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ™� Our Supporters&lt;/h2&gt; 
&lt;p&gt;A special shout-out to &lt;a href="https://m.do.co/c/b249dd7f3b4c"&gt;DigitalOcean&lt;/a&gt; for providing the rock-solid and dependable cloud infrastructure that keeps this project humming!&lt;/p&gt; 
&lt;a href="https://m.do.co/c/b249dd7f3b4c"&gt; &lt;img src="https://raw.githubusercontent.com/snailyp/gemini-balance/main/files/dataocean.svg?sanitize=true" alt="DigitalOcean Logo" width="200"&gt; &lt;/a&gt; 
&lt;p&gt;CDN acceleration and security protection for this project are sponsored by &lt;a href="https://edgeone.ai/?from=github"&gt;Tencent EdgeOne&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://edgeone.ai/?from=github"&gt; &lt;img src="https://edgeone.ai/media/34fe3a45-492d-4ea4-ae5d-ea1087ca7b4b.png" alt="EdgeOne Logo" width="200"&gt; &lt;/a&gt; 
&lt;h2&gt;ğŸ’– Friendly Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/chengtx809/OneLine"&gt;OneLine&lt;/a&gt;&lt;/strong&gt; by &lt;a href="https://github.com/chengtx809"&gt;chengtx809&lt;/a&gt; - AI-driven hot event timeline generation tool.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ�� Project Support&lt;/h2&gt; 
&lt;p&gt;If you find this project helpful, consider supporting me via &lt;a href="https://afdian.com/a/snaily"&gt;Afdian&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/snailyp/gemini-balance/main/LICENSE"&gt;CC BY-NC 4.0&lt;/a&gt; (Attribution-NonCommercial) license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>datawhalechina/happy-llm</title>
      <link>https://github.com/datawhalechina/happy-llm</link>
      <description>&lt;p&gt;ğŸ“š ä»�é›¶å¼€å§‹çš„å¤§è¯­è¨€æ¨¡å�‹å�Ÿç�†ä¸�å®�è·µæ•™ç¨‹&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/images/head.jpg" alt="alt text" width="100%"&gt; 
 &lt;h1&gt;Happy-LLM&lt;/h1&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://img.shields.io/github/stars/datawhalechina/happy-llm?style=flat&amp;amp;logo=github" alt="GitHub stars"&gt; 
 &lt;img src="https://img.shields.io/github/forks/datawhalechina/happy-llm?style=flat&amp;amp;logo=github" alt="GitHub forks"&gt; 
 &lt;img src="https://img.shields.io/badge/language-Chinese-brightgreen?style=flat" alt="Language"&gt; 
 &lt;a href="https://github.com/datawhalechina/happy-llm"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Project-blue?style=flat&amp;amp;logo=github" alt="GitHub Project"&gt;&lt;/a&gt; 
 &lt;a href="https://swanlab.cn/@kmno4/Happy-LLM/overview"&gt;&lt;img src="https://raw.githubusercontent.com/SwanHubX/assets/main/badge1.svg?sanitize=true" alt="SwanLab"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://trendshift.io/repositories/14175" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/14175" alt="datawhalechina%2Fhappy-llm | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/README.md"&gt;ä¸­æ–‡&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/README_en.md"&gt;English&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://datawhalechina.github.io/happy-llm/"&gt;ğŸ“š åœ¨çº¿é˜…è¯»åœ°å�€&lt;/a&gt;&lt;/p&gt; 
 &lt;h3&gt;ğŸ“š ä»�é›¶å¼€å§‹çš„å¤§è¯­è¨€æ¨¡å�‹å�Ÿç�†ä¸�å®�è·µæ•™ç¨‹&lt;/h3&gt; 
 &lt;p&gt;&lt;em&gt;æ·±å…¥ç�†è§£ LLM æ ¸å¿ƒå�Ÿç�†ï¼ŒåŠ¨æ‰‹å®�ç�°ä½ çš„ç¬¬ä¸€ä¸ªå¤§æ¨¡å�‹&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;ğŸ�¯ é¡¹ç›®ä»‹ç»�&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;â€ƒâ€ƒ&lt;em&gt;å¾ˆå¤šå°�ä¼™ä¼´åœ¨çœ‹å®Œ Datawhaleå¼€æº�é¡¹ç›®ï¼š &lt;a href="https://github.com/datawhalechina/self-llm"&gt;self-llm å¼€æº�å¤§æ¨¡å�‹é£Ÿç”¨æŒ‡å�—&lt;/a&gt; å��ï¼Œæ„Ÿè§‰æ„�çŠ¹æœªå°½ï¼Œæƒ³è¦�æ·±å…¥äº†è§£å¤§è¯­è¨€æ¨¡å�‹çš„å�Ÿç�†å’Œè®­ç»ƒè¿‡ç¨‹ã€‚äº�æ˜¯æˆ‘ä»¬ï¼ˆDatawhaleï¼‰å†³å®šæ�¨å‡ºã€ŠHappy-LLMã€‹é¡¹ç›®ï¼Œæ—¨åœ¨å¸®åŠ©å¤§å®¶æ·±å…¥ç�†è§£å¤§è¯­è¨€æ¨¡å�‹çš„å�Ÿç�†å’Œè®­ç»ƒè¿‡ç¨‹ã€‚&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;â€ƒâ€ƒæœ¬é¡¹ç›®æ˜¯ä¸€ä¸ª&lt;strong&gt;ç³»ç»Ÿæ€§çš„ LLM å­¦ä¹ æ•™ç¨‹&lt;/strong&gt;ï¼Œå°†ä»� NLP çš„åŸºæœ¬ç ”ç©¶æ–¹æ³•å‡ºå�‘ï¼Œæ ¹æ�® LLM çš„æ€�è·¯å�Šå�Ÿç�†é€�å±‚æ·±å…¥ï¼Œä¾�æ¬¡ä¸ºè¯»è€…å‰–æ�� LLM çš„æ�¶æ�„åŸºç¡€å’Œè®­ç»ƒè¿‡ç¨‹ã€‚å�Œæ—¶ï¼Œæˆ‘ä»¬ä¼šç»“å�ˆç›®å‰� LLM é¢†åŸŸæœ€ä¸»æµ�çš„ä»£ç �æ¡†æ�¶ï¼Œæ¼”ç»ƒå¦‚ä½•äº²æ‰‹æ�­å»ºã€�è®­ç»ƒä¸€ä¸ª LLMï¼ŒæœŸä»¥å®�ç�°æ�ˆä¹‹ä»¥é±¼ï¼Œæ›´æ�ˆä¹‹ä»¥æ¸”ã€‚å¸Œæœ›å¤§å®¶èƒ½ä»�è¿™æœ¬ä¹¦å¼€å§‹èµ°å…¥ LLM çš„æµ©ç€šä¸–ç•Œï¼Œæ�¢ç´¢ LLM çš„æ— å°½å�¯èƒ½ã€‚&lt;/p&gt; 
&lt;h3&gt;âœ¨ ä½ å°†æ”¶è�·ä»€ä¹ˆï¼Ÿ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;ğŸ“š &lt;strong&gt;Datawhale å¼€æº�å…�è´¹&lt;/strong&gt; å®Œå…¨å…�è´¹çš„å­¦ä¹ æœ¬é¡¹ç›®æ‰€æœ‰å†…å®¹&lt;/li&gt; 
 &lt;li&gt;ğŸ”� &lt;strong&gt;æ·±å…¥ç�†è§£&lt;/strong&gt; Transformer æ�¶æ�„å’Œæ³¨æ„�åŠ›æœºåˆ¶&lt;/li&gt; 
 &lt;li&gt;ğŸ“š &lt;strong&gt;æ�Œæ�¡&lt;/strong&gt; é¢„è®­ç»ƒè¯­è¨€æ¨¡å�‹çš„åŸºæœ¬å�Ÿç�†&lt;/li&gt; 
 &lt;li&gt;ğŸ§  &lt;strong&gt;äº†è§£&lt;/strong&gt; ç�°æœ‰å¤§æ¨¡å�‹çš„åŸºæœ¬ç»“æ�„&lt;/li&gt; 
 &lt;li&gt;ğŸ�—ï¸� &lt;strong&gt;åŠ¨æ‰‹å®�ç�°&lt;/strong&gt; ä¸€ä¸ªå®Œæ•´çš„ LLaMA2 æ¨¡å�‹&lt;/li&gt; 
 &lt;li&gt;âš™ï¸� &lt;strong&gt;æ�Œæ�¡è®­ç»ƒ&lt;/strong&gt; ä»�é¢„è®­ç»ƒåˆ°å¾®è°ƒçš„å…¨æµ�ç¨‹&lt;/li&gt; 
 &lt;li&gt;ğŸš€ &lt;strong&gt;å®�æˆ˜åº”ç”¨&lt;/strong&gt; RAGã€�Agent ç­‰å‰�æ²¿æŠ€æœ¯&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ“– å†…å®¹å¯¼èˆª&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;ç« èŠ‚&lt;/th&gt; 
   &lt;th&gt;å…³é”®å†…å®¹&lt;/th&gt; 
   &lt;th&gt;çŠ¶æ€�&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/%E5%89%8D%E8%A8%80.md"&gt;å‰�è¨€&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;æœ¬é¡¹ç›®çš„ç¼˜èµ·ã€�èƒŒæ™¯å�Šè¯»è€…å»ºè®®&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/chapter1/%E7%AC%AC%E4%B8%80%E7%AB%A0%20NLP%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5.md"&gt;ç¬¬ä¸€ç«  NLP åŸºç¡€æ¦‚å¿µ&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;ä»€ä¹ˆæ˜¯ NLPã€�å�‘å±•å�†ç¨‹ã€�ä»»åŠ¡åˆ†ç±»ã€�æ–‡æœ¬è¡¨ç¤ºæ¼”è¿›&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/chapter2/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20Transformer%E6%9E%B6%E6%9E%84.md"&gt;ç¬¬äºŒç«  Transformer æ�¶æ�„&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;æ³¨æ„�åŠ›æœºåˆ¶ã€�Encoder-Decoderã€�æ‰‹æŠŠæ‰‹æ�­å»º Transformer&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/chapter3/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E9%A2%84%E8%AE%AD%E7%BB%83%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B.md"&gt;ç¬¬ä¸‰ç«  é¢„è®­ç»ƒè¯­è¨€æ¨¡å�‹&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Encoder-onlyã€�Encoder-Decoderã€�Decoder-Only æ¨¡å�‹å¯¹æ¯”&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/chapter4/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B.md"&gt;ç¬¬å››ç«  å¤§è¯­è¨€æ¨¡å�‹&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;LLM å®šä¹‰ã€�è®­ç»ƒç­–ç•¥ã€�æ¶Œç�°èƒ½åŠ›åˆ†æ��&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/chapter5/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E5%8A%A8%E6%89%8B%E6%90%AD%E5%BB%BA%E5%A4%A7%E6%A8%A1%E5%9E%8B.md"&gt;ç¬¬äº”ç«  åŠ¨æ‰‹æ�­å»ºå¤§æ¨¡å�‹&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;å®�ç�° LLaMA2ã€�è®­ç»ƒ Tokenizerã€�é¢„è®­ç»ƒå°�å�‹ LLM&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/chapter6/%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E5%A4%A7%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83%E6%B5%81%E7%A8%8B%E5%AE%9E%E8%B7%B5.md"&gt;ç¬¬å…­ç«  å¤§æ¨¡å�‹è®­ç»ƒå®�è·µ&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;é¢„è®­ç»ƒã€�æœ‰ç›‘ç�£å¾®è°ƒã€�LoRA/QLoRA é«˜æ•ˆå¾®è°ƒ&lt;/td&gt; 
   &lt;td&gt;ğŸš§&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/docs/chapter7/%E7%AC%AC%E4%B8%83%E7%AB%A0%20%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%BA%94%E7%94%A8.md"&gt;ç¬¬ä¸ƒç«  å¤§æ¨¡å�‹åº”ç”¨&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;æ¨¡å�‹è¯„æµ‹ã€�RAG æ£€ç´¢å¢�å¼ºã€�Agent æ™ºèƒ½ä½“&lt;/td&gt; 
   &lt;td&gt;âœ…&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/Extra-Chapter/"&gt;Extra Chapter LLM Blog&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;ä¼˜ç§€çš„å¤§æ¨¡å�‹ å­¦ä¹ ç¬”è®°/Blog ï¼Œæ¬¢è¿�å¤§å®¶æ�¥ PR ï¼�&lt;/td&gt; 
   &lt;td&gt;ğŸš§&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Extra Chapter LLM Blog&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/Extra-Chapter/why-fine-tune-small-large-language-models/readme.md"&gt;å¤§æ¨¡å�‹éƒ½è¿™ä¹ˆå�‰å®³äº†ï¼Œå¾®è°ƒ0.6Bçš„å°�æ¨¡å�‹æœ‰ä»€ä¹ˆæ„�ä¹‰ï¼Ÿ&lt;/a&gt; @&lt;a href="https://github.com/KMnO4-zx"&gt;ä¸�è¦�è‘±å§œè’œ&lt;/a&gt; 2025-7-11&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/Extra-Chapter/transformer-architecture/"&gt;Transformer æ•´ä½“æ¨¡å�—è®¾è®¡è§£è¯»&lt;/a&gt; @&lt;a href="https://github.com/ditingdapeng"&gt;ditingdapeng&lt;/a&gt; 2025-7-14&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;â€ƒâ€ƒ&lt;em&gt;å¦‚æ�œå¤§å®¶åœ¨å­¦ä¹  Happy-LLM é¡¹ç›®æˆ– LLM ç›¸å…³çŸ¥è¯†ä¸­æœ‰è‡ªå·±ç‹¬åˆ°çš„è§�è§£ã€�è®¤çŸ¥ã€�å®�è·µï¼Œæ¬¢è¿�å¤§å®¶ PR åœ¨ &lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/Extra-Chapter/"&gt;Extra Chapter LLM Blog&lt;/a&gt; ä¸­ã€‚è¯·é�µå®ˆ Extra Chapter LLM Blog çš„ &lt;a href="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/Extra-Chapter/Readme.md"&gt;PR è§„èŒƒ&lt;/a&gt;ï¼Œæˆ‘ä»¬ä¼šè§† PR å†…å®¹çš„è´¨é‡�å’Œä»·å€¼æ�¥å†³å®šæ˜¯å�¦å�ˆå¹¶æˆ–è¡¥å……åˆ° Happy-LLM æ­£æ–‡ä¸­æ�¥ã€‚&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;æ¨¡å�‹ä¸‹è½½&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;æ¨¡å�‹å��ç§°&lt;/th&gt; 
   &lt;th&gt;ä¸‹è½½åœ°å�€&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Happy-LLM-Chapter5-Base-215M&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.modelscope.cn/models/kmno4zx/happy-llm-215M-base"&gt;ğŸ¤– ModelScope&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Happy-LLM-Chapter5-SFT-215M&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.modelscope.cn/models/kmno4zx/happy-llm-215M-sft"&gt;ğŸ¤– ModelScope&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;ModelScope åˆ›ç©ºé—´ä½“éªŒåœ°å�€ï¼š&lt;a href="https://www.modelscope.cn/studios/kmno4zx/happy_llm_215M_sft"&gt;ğŸ¤– åˆ›ç©ºé—´&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;PDF ç‰ˆæœ¬ä¸‹è½½&lt;/h3&gt; 
&lt;p&gt;â€ƒâ€ƒ&lt;em&gt;&lt;strong&gt;æœ¬ Happy-LLM PDF æ•™ç¨‹å®Œå…¨å¼€æº�å…�è´¹ã€‚ä¸ºé˜²æ­¢å�„ç±»è�¥é”€å�·åŠ æ°´å�°å��è´©å�–ç»™å¤§æ¨¡å�‹åˆ�å­¦è€…ï¼Œæˆ‘ä»¬ç‰¹åœ°åœ¨ PDF æ–‡ä»¶ä¸­é¢„å…ˆæ·»åŠ äº†ä¸�å½±å“�é˜…è¯»çš„ Datawhale å¼€æº�æ ‡å¿—æ°´å�°ï¼Œæ•¬è¯·è°…è§£ï½�&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Happy-LLM PDF : &lt;a href="https://github.com/datawhalechina/happy-llm/releases/tag/PDF"&gt;https://github.com/datawhalechina/happy-llm/releases/tag/PDF&lt;/a&gt;&lt;/em&gt;&lt;br&gt; &lt;em&gt;Happy-LLM PDF å›½å†…ä¸‹è½½åœ°å�€ : &lt;a href="https://www.datawhale.cn/learn/summary/179"&gt;https://www.datawhale.cn/learn/summary/179&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;ğŸ’¡ å¦‚ä½•å­¦ä¹ &lt;/h2&gt; 
&lt;p&gt;â€ƒâ€ƒæœ¬é¡¹ç›®é€‚å�ˆå¤§å­¦ç”Ÿã€�ç ”ç©¶äººå‘˜ã€�LLM çˆ±å¥½è€…ã€‚åœ¨å­¦ä¹ æœ¬é¡¹ç›®ä¹‹å‰�ï¼Œå»ºè®®å…·å¤‡ä¸€å®šçš„ç¼–ç¨‹ç»�éªŒï¼Œå°¤å…¶æ˜¯è¦�å¯¹ Python ç¼–ç¨‹è¯­è¨€æœ‰ä¸€å®šçš„äº†è§£ã€‚æœ€å¥½å…·å¤‡æ·±åº¦å­¦ä¹ çš„ç›¸å…³çŸ¥è¯†ï¼Œå¹¶äº†è§£ NLP é¢†åŸŸçš„ç›¸å…³æ¦‚å¿µå’Œæœ¯è¯­ï¼Œä»¥ä¾¿æ›´è½»æ�¾åœ°å­¦ä¹ æœ¬é¡¹ç›®ã€‚&lt;/p&gt; 
&lt;p&gt;â€ƒâ€ƒæœ¬é¡¹ç›®åˆ†ä¸ºä¸¤éƒ¨åˆ†â€”â€”åŸºç¡€çŸ¥è¯†ä¸�å®�æˆ˜åº”ç”¨ã€‚ç¬¬1ç« ï½�ç¬¬4ç« æ˜¯åŸºç¡€çŸ¥è¯†éƒ¨åˆ†ï¼Œä»�æµ…å…¥æ·±ä»‹ç»� LLM çš„åŸºæœ¬å�Ÿç�†ã€‚å…¶ä¸­ï¼Œç¬¬1ç« ç®€å�•ä»‹ç»� NLP çš„åŸºæœ¬ä»»åŠ¡å’Œå�‘å±•ï¼Œä¸ºé�� NLP é¢†åŸŸç ”ç©¶è€…æ��ä¾›å�‚è€ƒï¼›ç¬¬2ç« ä»‹ç»� LLM çš„åŸºæœ¬æ�¶æ�„â€”â€”Transformerï¼ŒåŒ…æ‹¬å�Ÿç�†ä»‹ç»�å�Šä»£ç �å®�ç�°ï¼Œä½œä¸º LLM æœ€é‡�è¦�çš„ç�†è®ºåŸºç¡€ï¼›ç¬¬3ç« æ•´ä½“ä»‹ç»�ç»�å…¸çš„ PLMï¼ŒåŒ…æ‹¬ Encoder-Onlyã€�Encoder-Decoder å’Œ Decoder-Only ä¸‰ç§�æ�¶æ�„ï¼Œä¹Ÿå�Œæ—¶ä»‹ç»�äº†å½“å‰�ä¸€äº›ä¸»æµ� LLM çš„æ�¶æ�„å’Œæ€�æƒ³ï¼›ç¬¬4ç« åˆ™æ­£å¼�è¿›å…¥ LLM éƒ¨åˆ†ï¼Œè¯¦ç»†ä»‹ç»� LLM çš„ç‰¹ç‚¹ã€�èƒ½åŠ›å’Œæ•´ä½“è®­ç»ƒè¿‡ç¨‹ã€‚ç¬¬5ç« ï½�ç¬¬7ç« æ˜¯å®�æˆ˜åº”ç”¨éƒ¨åˆ†ï¼Œå°†é€�æ­¥å¸¦é¢†å¤§å®¶æ·±å…¥ LLM çš„åº•å±‚ç»†èŠ‚ã€‚å…¶ä¸­ï¼Œç¬¬5ç« å°†å¸¦é¢†å¤§å®¶è€…åŸºäº� PyTorch å±‚äº²æ‰‹æ�­å»ºä¸€ä¸ª LLMï¼Œå¹¶å®�ç�°é¢„è®­ç»ƒã€�æœ‰ç›‘ç�£å¾®è°ƒçš„å…¨æµ�ç¨‹ï¼›ç¬¬6ç« å°†å¼•å…¥ç›®å‰�ä¸šç•Œä¸»æµ�çš„ LLM è®­ç»ƒæ¡†æ�¶ Transformersï¼Œå¸¦é¢†å­¦ä¹ è€…åŸºäº�è¯¥æ¡†æ�¶å¿«é€Ÿã€�é«˜æ•ˆåœ°å®�ç�° LLM è®­ç»ƒè¿‡ç¨‹ï¼›ç¬¬7ç« åˆ™å°†ä»‹ç»� åŸºäº� LLM çš„å�„ç§�åº”ç”¨ï¼Œè¡¥å…¨å­¦ä¹ è€…å¯¹ LLM ä½“ç³»çš„è®¤çŸ¥ï¼ŒåŒ…æ‹¬ LLM çš„è¯„æµ‹ã€�æ£€ç´¢å¢�å¼ºç”Ÿæˆ�ï¼ˆRetrieval-Augmented Generationï¼ŒRAGï¼‰ã€�æ™ºèƒ½ä½“ï¼ˆAgentï¼‰çš„æ€�æƒ³å’Œç®€å�•å®�ç�°ã€‚ä½ å�¯ä»¥æ ¹æ�®ä¸ªäººå…´è¶£å’Œéœ€æ±‚ï¼Œé€‰æ‹©æ€§åœ°é˜…è¯»ç›¸å…³ç« èŠ‚ã€‚&lt;/p&gt; 
&lt;p&gt;â€ƒâ€ƒåœ¨é˜…è¯»æœ¬ä¹¦çš„è¿‡ç¨‹ä¸­ï¼Œå»ºè®®ä½ å°†ç�†è®ºå’Œå®�é™…ç›¸ç»“å�ˆã€‚LLM æ˜¯ä¸€ä¸ªå¿«é€Ÿå�‘å±•ã€�æ³¨é‡�å®�è·µçš„é¢†åŸŸï¼Œæˆ‘ä»¬å»ºè®®ä½ å¤šæŠ•å…¥å®�æˆ˜ï¼Œå¤�ç�°æœ¬ä¹¦æ��ä¾›çš„å�„ç§�ä»£ç �ï¼Œå�Œæ—¶ç§¯æ��å�‚åŠ  LLM ç›¸å…³çš„é¡¹ç›®ä¸�æ¯”èµ›ï¼ŒçœŸæ­£æŠ•å…¥åˆ° LLM å¼€å�‘çš„æµªæ½®ä¸­ã€‚æˆ‘ä»¬é¼“åŠ±ä½ å…³æ³¨ Datawhale å�Šå…¶ä»– LLM ç›¸å…³å¼€æº�ç¤¾åŒºï¼Œå½“é�‡åˆ°é—®é¢˜æ—¶ï¼Œä½ å�¯ä»¥éš�æ—¶åœ¨æœ¬é¡¹ç›®çš„ issue åŒºæ��é—®ã€‚&lt;/p&gt; 
&lt;p&gt;â€ƒâ€ƒæœ€å��ï¼Œæ¬¢è¿�æ¯�ä¸€ä½�è¯»è€…åœ¨å­¦ä¹ å®Œæœ¬é¡¹ç›®å��åŠ å…¥åˆ° LLM å¼€å�‘è€…çš„è¡Œåˆ—ã€‚ä½œä¸ºå›½å†… AI å¼€æº�ç¤¾åŒºï¼Œæˆ‘ä»¬å¸Œæœ›å……åˆ†è�šé›†å…±åˆ›è€…ï¼Œä¸€èµ·ä¸°å¯Œè¿™ä¸ªå¼€æº� LLM çš„ä¸–ç•Œï¼Œæ‰“é€ æ›´å¤šã€�æ›´å…¨é�¢ç‰¹è‰² LLM çš„æ•™ç¨‹ã€‚æ˜Ÿç�«ç‚¹ç‚¹ï¼Œæ±‡è�šæˆ�æµ·ã€‚æˆ‘ä»¬å¸Œæœ›æˆ�ä¸º LLM ä¸�æ™®ç½—å¤§ä¼—çš„é˜¶æ¢¯ï¼Œä»¥è‡ªç”±ã€�å¹³ç­‰çš„å¼€æº�ç²¾ç¥�ï¼Œæ‹¥æŠ±æ›´æ�¢å¼˜è€Œè¾½é˜”çš„ LLM ä¸–ç•Œã€‚&lt;/p&gt; 
&lt;h2&gt;ğŸ¤� å¦‚ä½•è´¡çŒ®&lt;/h2&gt; 
&lt;p&gt;æˆ‘ä»¬æ¬¢è¿�ä»»ä½•å½¢å¼�çš„è´¡çŒ®ï¼�&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ğŸ�› &lt;strong&gt;æŠ¥å‘Š Bug&lt;/strong&gt; - å�‘ç�°é—®é¢˜è¯·æ��äº¤ Issue&lt;/li&gt; 
 &lt;li&gt;ğŸ’¡ &lt;strong&gt;åŠŸèƒ½å»ºè®®&lt;/strong&gt; - æœ‰å¥½æƒ³æ³•å°±å‘Šè¯‰æˆ‘ä»¬&lt;/li&gt; 
 &lt;li&gt;ğŸ“� &lt;strong&gt;å†…å®¹å®Œå–„&lt;/strong&gt; - å¸®åŠ©æ”¹è¿›æ•™ç¨‹å†…å®¹&lt;/li&gt; 
 &lt;li&gt;ğŸ”§ &lt;strong&gt;ä»£ç �ä¼˜åŒ–&lt;/strong&gt; - æ��äº¤ Pull Request&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ™� è‡´è°¢&lt;/h2&gt; 
&lt;h3&gt;æ ¸å¿ƒè´¡çŒ®è€…&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KMnO4-zx"&gt;å®‹å¿—å­¦-é¡¹ç›®è´Ÿè´£äºº&lt;/a&gt; (Datawhaleæˆ�å‘˜-ä¸­å›½çŸ¿ä¸šå¤§å­¦(åŒ—äº¬))&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logan-zou"&gt;é‚¹é›¨è¡¡-é¡¹ç›®è´Ÿè´£äºº&lt;/a&gt; (Datawhaleæˆ�å‘˜-å¯¹å¤–ç»�æµ�è´¸æ˜“å¤§å­¦)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://xinzhongzhu.github.io/"&gt;æœ±ä¿¡å¿ -æŒ‡å¯¼ä¸“å®¶&lt;/a&gt;ï¼ˆDatawhaleé¦–å¸­ç§‘å­¦å®¶-æµ™æ±Ÿå¸ˆèŒƒå¤§å­¦æ�­å·�äººå·¥æ™ºèƒ½ç ”ç©¶é™¢æ•™æ�ˆï¼‰&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Extra-Chapter è´¡çŒ®è€…&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ditingdapeng"&gt;ditingdapeng&lt;/a&gt;ï¼ˆå†…å®¹è´¡çŒ®è€…-äº‘å�Ÿç”ŸåŸºç¡€æ�¶æ�„å·¥ç¨‹å¸ˆï¼‰&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ç‰¹åˆ«æ„Ÿè°¢&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;æ„Ÿè°¢ &lt;a href="https://github.com/Sm1les"&gt;@Sm1les&lt;/a&gt; å¯¹æœ¬é¡¹ç›®çš„å¸®åŠ©ä¸�æ”¯æŒ�&lt;/li&gt; 
 &lt;li&gt;æ„Ÿè°¢æ‰€æœ‰ä¸ºæœ¬é¡¹ç›®å�šå‡ºè´¡çŒ®çš„å¼€å�‘è€…ä»¬ â�¤ï¸�&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align="center" style="margin-top: 30px;"&gt; 
 &lt;a href="https://github.com/datawhalechina/happy-llm/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=datawhalechina/happy-llm"&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/images/star-history-2025710.png" alt="Datawhale" width="90%"&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;â­� å¦‚æ�œè¿™ä¸ªé¡¹ç›®å¯¹ä½ æœ‰å¸®åŠ©ï¼Œè¯·ç»™æˆ‘ä»¬ä¸€ä¸ª Starï¼�&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;å…³äº� Datawhale&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/datawhalechina/happy-llm/main/images/datawhale.png" alt="Datawhale" width="30%"&gt; 
 &lt;p&gt;æ‰«æ��äºŒç»´ç �å…³æ³¨ Datawhale å…¬ä¼—å�·ï¼Œè�·å�–æ›´å¤šä¼˜è´¨å¼€æº�å†…å®¹&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;ğŸ“œ å¼€æº�å��è®®&lt;/h2&gt; 
&lt;p&gt;æœ¬ä½œå“�é‡‡ç”¨&lt;a href="http://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;çŸ¥è¯†å…±äº«ç½²å��-é��å•†ä¸šæ€§ä½¿ç”¨-ç›¸å�Œæ–¹å¼�å…±äº« 4.0 å›½é™…è®¸å�¯å��è®®&lt;/a&gt;è¿›è¡Œè®¸å�¯ã€‚&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>humanlayer/12-factor-agents</title>
      <link>https://github.com/humanlayer/12-factor-agents</link>
      <description>&lt;p&gt;What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;12-Factor Agents - Principles for building reliable LLM applications&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt; &lt;img src="https://img.shields.io/badge/Code-Apache%202.0-blue.svg?sanitize=true" alt="Code License: Apache 2.0"&gt;&lt;/a&gt; 
 &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt; &lt;img src="https://img.shields.io/badge/Content-CC%20BY--SA%204.0-lightgrey.svg?sanitize=true" alt="Content License: CC BY-SA 4.0"&gt;&lt;/a&gt; 
 &lt;a href="https://humanlayer.dev/discord"&gt; &lt;img src="https://img.shields.io/badge/chat-discord-5865F2" alt="Discord Server"&gt;&lt;/a&gt; 
 &lt;a href="https://www.youtube.com/watch?v=8kMaTybvDUw"&gt; &lt;img src="https://img.shields.io/badge/aidotengineer-conf_talk_(17m)-white" alt="YouTube
Deep Dive"&gt;&lt;/a&gt; 
 &lt;a href="https://www.youtube.com/watch?v=yxJDyQ8v6P0"&gt; &lt;img src="https://img.shields.io/badge/youtube-deep_dive-crimson" alt="YouTube
Deep Dive"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;In the spirit of &lt;a href="https://12factor.net/"&gt;12 Factor Apps&lt;/a&gt;&lt;/em&gt;. &lt;em&gt;The source for this project is public at &lt;a href="https://github.com/humanlayer/12-factor-agents"&gt;https://github.com/humanlayer/12-factor-agents&lt;/a&gt;, and I welcome your feedback and contributions. Let's figure this out together!&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Missed the AI Engineer World's Fair? &lt;a href="https://www.youtube.com/watch?v=8kMaTybvDUw"&gt;Catch the talk here&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Looking for Context Engineering? &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Jump straight to factor 3&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Want to contribute to &lt;code&gt;npx/uvx create-12-factor-agent&lt;/code&gt; - check out &lt;a href="https://github.com/humanlayer/12-factor-agents/discussions/61"&gt;the discussion thread&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img referrerpolicy="no-referrer-when-downgrade" src="https://static.scarf.sh/a.png?x-pxid=2acad99a-c2d9-48df-86f5-9ca8061b7bf9"&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/humanlayer/12-factor-agents/main/#visual-nav"&gt;&lt;img width="907" alt="Screenshot 2025-04-03 at 2 49 07â€¯PM" src="https://github.com/user-attachments/assets/23286ad8-7bef-4902-b371-88ff6a22e998"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Hi, I'm Dex. I've been &lt;a href="https://youtu.be/8bIHcttkOTE"&gt;hacking&lt;/a&gt; on &lt;a href="https://theouterloop.substack.com"&gt;AI agents&lt;/a&gt; for &lt;a href="https://humanlayer.dev"&gt;a while&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've tried every agent framework out there&lt;/strong&gt;, from the plug-and-play crew/langchains to the "minimalist" smolagents of the world to the "production grade" langraph, griptape, etc.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've talked to a lot of really strong founders&lt;/strong&gt;, in and out of YC, who are all building really impressive things with AI. Most of them are rolling the stack themselves. I don't see a lot of frameworks in production customer-facing agents.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've been surprised to find&lt;/strong&gt; that most of the products out there billing themselves as "AI Agents" are not all that agentic. A lot of them are mostly deterministic code, with LLM steps sprinkled in at just the right points to make the experience truly magical.&lt;/p&gt; 
&lt;p&gt;Agents, at least the good ones, don't follow the &lt;a href="https://www.anthropic.com/engineering/building-effective-agents#agents"&gt;"here's your prompt, here's a bag of tools, loop until you hit the goal"&lt;/a&gt; pattern. Rather, they are comprised of mostly just software.&lt;/p&gt; 
&lt;p&gt;So, I set out to answer:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;&lt;strong&gt;What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?&lt;/strong&gt;&lt;/h3&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Welcome to 12-factor agents. As every Chicago mayor since Daley has consistently plastered all over the city's major airports, we're glad you're here.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Special thanks to &lt;a href="https://github.com/iantbutler01"&gt;@iantbutler01&lt;/a&gt;, &lt;a href="https://github.com/tnm"&gt;@tnm&lt;/a&gt;, &lt;a href="https://www.github.com/hellovai"&gt;@hellovai&lt;/a&gt;, &lt;a href="https://www.github.com/stantonk"&gt;@stantonk&lt;/a&gt;, &lt;a href="https://www.github.com/balanceiskey"&gt;@balanceiskey&lt;/a&gt;, &lt;a href="https://www.github.com/AdjectiveAllison"&gt;@AdjectiveAllison&lt;/a&gt;, &lt;a href="https://www.github.com/pfbyjy"&gt;@pfbyjy&lt;/a&gt;, &lt;a href="https://www.github.com/a-churchill"&gt;@a-churchill&lt;/a&gt;, and the SF MLOps community for early feedback on this guide.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;The Short Version: The 12 Factors&lt;/h2&gt; 
&lt;p&gt;Even if LLMs &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md#what-if-llms-get-smarter"&gt;continue to get exponentially more powerful&lt;/a&gt;, there will be core engineering techniques that make LLM-powered software more reliable, more scalable, and easier to maintain.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;How We Got Here: A Brief History of Software&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;Factor 1: Natural Language to Tool Calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;Factor 2: Own your prompts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Factor 3: Own your context window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;Factor 4: Tools are just structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;Factor 5: Unify execution state and business state&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;Factor 6: Launch/Pause/Resume with simple APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;Factor 7: Contact humans with tool calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;Factor 8: Own your control flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;Factor 9: Compact Errors into Context Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;Factor 10: Small, Focused Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;Factor 11: Trigger from anywhere, meet users where they are&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;Factor 12: Make your agent a stateless reducer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Visual Nav&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/110-natural-language-tool-calls.png" alt="factor 1"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/120-own-your-prompts.png" alt="factor 2"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/130-own-your-context-building.png" alt="factor 3"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/140-tools-are-just-structured-outputs.png" alt="factor 4"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/150-unify-state.png" alt="factor 5"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/160-pause-resume-with-simple-apis.png" alt="factor 6"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/170-contact-humans-with-tools.png" alt="factor 7"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/180-control-flow.png" alt="factor 8"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/190-factor-9-errors-static.png" alt="factor 9"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1a0-small-focused-agents.png" alt="factor 10"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1b0-trigger-from-anywhere.png" alt="factor 11"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1c0-stateless-reducer.png" alt="factor 12"&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;How we got here&lt;/h2&gt; 
&lt;p&gt;For a deeper dive on my agent journey and what led us here, check out &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;A Brief History of Software&lt;/a&gt; - a quick summary here:&lt;/p&gt; 
&lt;h3&gt;The promise of agents&lt;/h3&gt; 
&lt;p&gt;We're gonna talk a lot about Directed Graphs (DGs) and their Acyclic friends, DAGs. I'll start by pointing out that...well...software is a directed graph. There's a reason we used to represent programs as flow charts.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/010-software-dag.png" alt="010-software-dag"&gt;&lt;/p&gt; 
&lt;h3&gt;From code to DAGs&lt;/h3&gt; 
&lt;p&gt;Around 20 years ago, we started to see DAG orchestrators become popular. We're talking classics like &lt;a href="https://airflow.apache.org/"&gt;Airflow&lt;/a&gt;, &lt;a href="https://www.prefect.io/"&gt;Prefect&lt;/a&gt;, some predecessors, and some newer ones like (&lt;a href="https://dagster.io/"&gt;dagster&lt;/a&gt;, &lt;a href="https://www.inngest.com/"&gt;inggest&lt;/a&gt;, &lt;a href="https://www.windmill.dev/"&gt;windmill&lt;/a&gt;). These followed the same graph pattern, with the added benefit of observability, modularity, retries, administration, etc.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/015-dag-orchestrators.png" alt="015-dag-orchestrators"&gt;&lt;/p&gt; 
&lt;h3&gt;The promise of agents&lt;/h3&gt; 
&lt;p&gt;I'm not the first &lt;a href="https://youtu.be/Dc99-zTMyMg?si=bcT0hIwWij2mR-40&amp;amp;t=73"&gt;person to say this&lt;/a&gt;, but my biggest takeaway when I started learning about agents, was that you get to throw the DAG away. Instead of software engineers coding each step and edge case, you can give the agent a goal and a set of transitions:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/025-agent-dag.png" alt="025-agent-dag"&gt;&lt;/p&gt; 
&lt;p&gt;And let the LLM make decisions in real time to figure out the path&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/026-agent-dag-lines.png" alt="026-agent-dag-lines"&gt;&lt;/p&gt; 
&lt;p&gt;The promise here is that you write less software, you just give the LLM the "edges" of the graph and let it figure out the nodes. You can recover from errors, you can write less code, and you may find that LLMs find novel solutions to problems.&lt;/p&gt; 
&lt;h3&gt;Agents as loops&lt;/h3&gt; 
&lt;p&gt;As we'll see later, it turns out this doesn't quite work.&lt;/p&gt; 
&lt;p&gt;Let's dive one step deeper - with agents you've got this loop consisting of 3 steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;LLM determines the next step in the workflow, outputting structured json ("tool calling")&lt;/li&gt; 
 &lt;li&gt;Deterministic code executes the tool call&lt;/li&gt; 
 &lt;li&gt;The result is appended to the context window&lt;/li&gt; 
 &lt;li&gt;Repeat until the next step is determined to be "done"&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;initial_event = {"message": "..."}
context = [initial_event]
while True:
  next_step = await llm.determine_next_step(context)
  context.append(next_step)

  if (next_step.intent === "done"):
    return next_step.final_answer

  result = await execute_step(next_step)
  context.append(result)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Our initial context is just the starting event (maybe a user message, maybe a cron fired, maybe a webhook, etc), and we ask the llm to choose the next step (tool) or to determine that we're done.&lt;/p&gt; 
&lt;p&gt;Here's a multi-step example:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/3beb0966-fdb1-4c12-a47f-ed4e8240f8fd"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif" alt="027-agent-loop-animation"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif"&gt;GIF Version&lt;/a&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif" alt="027-agent-loop-animation"&gt;]&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Why 12-factor agents?&lt;/h2&gt; 
&lt;p&gt;At the end of the day, this approach just doesn't work as well as we want it to.&lt;/p&gt; 
&lt;p&gt;In building HumanLayer, I've talked to at least 100 SaaS builders (mostly technical founders) looking to make their existing product more agentic. The journey usually goes something like:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Decide you want to build an agent&lt;/li&gt; 
 &lt;li&gt;Product design, UX mapping, what problems to solve&lt;/li&gt; 
 &lt;li&gt;Want to move fast, so grab $FRAMEWORK and &lt;em&gt;get to building&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Get to 70-80% quality bar&lt;/li&gt; 
 &lt;li&gt;Realize that 80% isn't good enough for most customer-facing features&lt;/li&gt; 
 &lt;li&gt;Realize that getting past 80% requires reverse-engineering the framework, prompts, flow, etc.&lt;/li&gt; 
 &lt;li&gt;Start over from scratch&lt;/li&gt; 
&lt;/ol&gt; 
&lt;details&gt; 
 &lt;summary&gt;Random Disclaimers&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: I'm not sure the exact right place to say this, but here seems as good as any: &lt;strong&gt;this in BY NO MEANS meant to be a dig on either the many frameworks out there, or the pretty dang smart people who work on them&lt;/strong&gt;. They enable incredible things and have accelerated the AI ecosystem.&lt;/p&gt; 
 &lt;p&gt;I hope that one outcome of this post is that agent framework builders can learn from the journeys of myself and others, and make frameworks even better.&lt;/p&gt; 
 &lt;p&gt;Especially for builders who want to move fast but need deep control.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER 2&lt;/strong&gt;: I'm not going to talk about MCP. I'm sure you can see where it fits in.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER 3&lt;/strong&gt;: I'm using mostly typescript, for &lt;a href="https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e?utm_source=share&amp;amp;utm_medium=member_desktop&amp;amp;rcm=ACoAAA4oHTkByAiD-wZjnGsMBUL_JT6nyyhOh30"&gt;reasons&lt;/a&gt; but all this stuff works in python or any other language you prefer.&lt;/p&gt; 
 &lt;p&gt;Anyways back to the thing...&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Design Patterns for great LLM applications&lt;/h3&gt; 
&lt;p&gt;After digging through hundreds of AI libriaries and working with dozens of founders, my instinct is this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;There are some core things that make agents great&lt;/li&gt; 
 &lt;li&gt;Going all in on a framework and building what is essentially a greenfield rewrite may be counter-productive&lt;/li&gt; 
 &lt;li&gt;There are some core principles that make agents great, and you will get most/all of them if you pull in a framework&lt;/li&gt; 
 &lt;li&gt;BUT, the fastest way I've seen for builders to get high-quality AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product&lt;/li&gt; 
 &lt;li&gt;These modular concepts from agents can be defined and applied by most skilled software engineers, even if they don't have an AI background&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;The fastest way I've seen for builders to get good AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;The 12 Factors (again)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;How We Got Here: A Brief History of Software&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;Factor 1: Natural Language to Tool Calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;Factor 2: Own your prompts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Factor 3: Own your context window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;Factor 4: Tools are just structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;Factor 5: Unify execution state and business state&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;Factor 6: Launch/Pause/Resume with simple APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;Factor 7: Contact humans with tool calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;Factor 8: Own your control flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;Factor 9: Compact Errors into Context Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;Factor 10: Small, Focused Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;Factor 11: Trigger from anywhere, meet users where they are&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;Factor 12: Make your agent a stateless reducer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Honorable Mentions / other advice&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/appendix-13-pre-fetch.md"&gt;Factor 13: Pre-fetch all the context you might need&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Related Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Contribute to this guide &lt;a href="https://github.com/humanlayer/12-factor-agents"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/8bIHcttkOTE"&gt;I talked about a lot of this on an episode of the Tool Use podcast&lt;/a&gt; in March 2025&lt;/li&gt; 
 &lt;li&gt;I write about some of this stuff at &lt;a href="https://theouterloop.substack.com"&gt;The Outer Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;I do &lt;a href="https://github.com/hellovai/ai-that-works/tree/main"&gt;webinars about Maximizing LLM Performance&lt;/a&gt; with &lt;a href="https://github.com/hellovai"&gt;@hellovai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;We build OSS agents with this methodology under &lt;a href="https://github.com/got-agents/agents"&gt;got-agents/agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;We ignored all our own advice and built a &lt;a href="https://github.com/humanlayer/kubechain"&gt;framework for running distributed agents in kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Other links from this guide: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://12factor.net"&gt;12 Factor Apps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.anthropic.com/engineering/building-effective-agents#agents"&gt;Building Effective Agents (Anthropic)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://thedataexchange.media/baml-revolution-in-ai-engineering/"&gt;Prompts are Functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tomasp.net/blog/2015/library-frameworks/"&gt;Library patterns: Why frameworks are evil&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction"&gt;The Wrong Abstraction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/dexhorthy/mailcrew"&gt;Mailcrew Agent&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=f_cKnoPC_Oo"&gt;Mailcrew Demo Video&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://x.com/chainlit_io/status/1858613325921480922"&gt;Chainlit Demo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e"&gt;TypeScript for LLMs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.boundaryml.com/blog/schema-aligned-parsing"&gt;Schema Aligned Parsing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.vellum.ai/blog/when-should-i-use-function-calling-structured-outputs-or-json-mode"&gt;Function Calling vs Structured Outputs vs JSON Mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/boundaryml/baml"&gt;BAML on GitHub&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.llamaindex.ai/en/stable/examples/llm/openai_json_vs_function_calling/"&gt;OpenAI JSON vs Function Calling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://theouterloop.substack.com/p/openais-realtime-api-is-a-step-towards"&gt;Outer Loop Agents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://airflow.apache.org/"&gt;Airflow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.prefect.io/"&gt;Prefect&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://dagster.io/"&gt;Dagster&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.inngest.com/"&gt;Inngest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.windmill.dev/"&gt;Windmill&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://aiagentindex.mit.edu/"&gt;The AI Agent Index (MIT)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://open.substack.com/pub/swyx/p/notebooklm?selection=08e1187c-cfee-4c63-93c9-71216640a5f8"&gt;NotebookLM on Finding Model Capability Boundaries&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks to everyone who has contributed to 12-factor agents!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/dexhorthy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3730605?v=4&amp;amp;s=80" width="80px" alt="dexhorthy"&gt;&lt;/a&gt; &lt;a href="https://github.com/Sypherd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50557586?v=4&amp;amp;s=80" width="80px" alt="Sypherd"&gt;&lt;/a&gt; &lt;a href="https://github.com/tofaramususa"&gt;&lt;img src="https://avatars.githubusercontent.com/u/66259401?v=4&amp;amp;s=80" width="80px" alt="tofaramususa"&gt;&lt;/a&gt; &lt;a href="https://github.com/a-churchill"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18105223?v=4&amp;amp;s=80" width="80px" alt="a-churchill"&gt;&lt;/a&gt; &lt;a href="https://github.com/Elijas"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4084885?v=4&amp;amp;s=80" width="80px" alt="Elijas"&gt;&lt;/a&gt; &lt;a href="https://github.com/hugolmn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39267118?v=4&amp;amp;s=80" width="80px" alt="hugolmn"&gt;&lt;/a&gt; &lt;a href="https://github.com/jeremypeters"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1882972?v=4&amp;amp;s=80" width="80px" alt="jeremypeters"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/kndl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/380402?v=4&amp;amp;s=80" width="80px" alt="kndl"&gt;&lt;/a&gt; &lt;a href="https://github.com/maciejkos"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16674643?v=4&amp;amp;s=80" width="80px" alt="maciejkos"&gt;&lt;/a&gt; &lt;a href="https://github.com/pfbyjy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/85041180?v=4&amp;amp;s=80" width="80px" alt="pfbyjy"&gt;&lt;/a&gt; &lt;a href="https://github.com/0xRaduan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36044389?v=4&amp;amp;s=80" width="80px" alt="0xRaduan"&gt;&lt;/a&gt; &lt;a href="https://github.com/zyuanlim"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7169731?v=4&amp;amp;s=80" width="80px" alt="zyuanlim"&gt;&lt;/a&gt; &lt;a href="https://github.com/lombardo-chcg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15862501?v=4&amp;amp;s=80" width="80px" alt="lombardo-chcg"&gt;&lt;/a&gt; &lt;a href="https://github.com/sahanatvessel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/160066852?v=4&amp;amp;s=80" width="80px" alt="sahanatvessel"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Versions&lt;/h2&gt; 
&lt;p&gt;This is the current version of 12-factor agents, version 1.0. There is a draft of version 1.1 on the &lt;a href="https://github.com/humanlayer/12-factor-agents/tree/v1.1"&gt;v1.1 branch&lt;/a&gt;. There are a few &lt;a href="https://github.com/humanlayer/12-factor-agents/issues?q=is%3Aissue%20state%3Aopen%20label%3Aversion%3A%3A1.1"&gt;Issues to track work on v1.1&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;All content and images are licensed under a &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt;CC BY-SA 4.0 License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Code is licensed under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0 License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anthropics/claude-code</title>
      <link>https://github.com/anthropics/claude-code</link>
      <description>&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows - all through natural language commands.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Code&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/Node.js-18%2B-brightgreen?style=flat-square" alt=""&gt; &lt;a href="https://www.npmjs.com/package/@anthropic-ai/claude-code"&gt;&lt;img src="https://img.shields.io/npm/v/@anthropic-ai/claude-code.svg?style=flat-square" alt="npm"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows -- all through natural language commands. Use it in your terminal, IDE, or tag @claude on Github.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Learn more in the &lt;a href="https://docs.anthropic.com/en/docs/claude-code/overview"&gt;official documentation&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/anthropics/claude-code/main/demo.gif"&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Claude Code:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install -g @anthropic-ai/claude-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Navigate to your project directory and run &lt;code&gt;claude&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Reporting Bugs&lt;/h2&gt; 
&lt;p&gt;We welcome your feedback. Use the &lt;code&gt;/bug&lt;/code&gt; command to report issues directly within Claude Code, or file a &lt;a href="https://github.com/anthropics/claude-code/issues"&gt;GitHub issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Data collection, usage, and retention&lt;/h2&gt; 
&lt;p&gt;When you use Claude Code, we collect feedback, which includes usage data (such as code acceptance or rejections), associated conversation data, and user feedback submitted via the &lt;code&gt;/bug&lt;/code&gt; command.&lt;/p&gt; 
&lt;h3&gt;How we use your data&lt;/h3&gt; 
&lt;p&gt;We may use feedback to improve our products and services, but we will not train generative models using your feedback from Claude Code. Given their potentially sensitive nature, we store user feedback transcripts for only 30 days.&lt;/p&gt; 
&lt;p&gt;If you choose to send us feedback about Claude Code, such as transcripts of your usage, Anthropic may use that feedback to debug related issues and improve Claude Code's functionality (e.g., to reduce the risk of similar bugs occurring in the future).&lt;/p&gt; 
&lt;h3&gt;Privacy safeguards&lt;/h3&gt; 
&lt;p&gt;We have implemented several safeguards to protect your data, including limited retention periods for sensitive information, restricted access to user session data, and clear policies against using feedback for model training.&lt;/p&gt; 
&lt;p&gt;For full details, please review our &lt;a href="https://www.anthropic.com/legal/commercial-terms"&gt;Commercial Terms of Service&lt;/a&gt; and &lt;a href="https://www.anthropic.com/legal/privacy"&gt;Privacy Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>