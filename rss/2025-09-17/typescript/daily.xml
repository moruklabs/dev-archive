<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Daily Trending</title>
    <description>Daily Trending of TypeScript in GitHub</description>
    <pubDate>Tue, 16 Sep 2025 01:39:23 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>ItzCrazyKns/Perplexica</title>
      <link>https://github.com/ItzCrazyKns/Perplexica</link>
      <description>&lt;p&gt;Perplexica is an AI-powered search engine. It is an Open source alternative to Perplexity AI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🚀 Perplexica - An AI-powered search engine 🔎 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;div align="center" markdown="1"&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.warp.dev/perplexica"&gt; &lt;img alt="Warp sponsorship" width="400" src="https://github.com/user-attachments/assets/775dd593-9b5f-40f1-bf48-479faff4c27b" /&gt; &lt;/a&gt; 
 &lt;h3&gt;&lt;a href="https://www.warp.dev/perplexica"&gt;Warp, the AI Devtool that lives in your terminal&lt;/a&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;a href="https://www.warp.dev/perplexica"&gt;Available for MacOS, Linux, &amp;amp; Windows&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/26aArMy8tT"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/26aArMy8tT?style=flat" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/.assets/perplexica-screenshot.png?" alt="preview" /&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents 
 &lt;!-- omit in toc --&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#preview"&gt;Preview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#installation"&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#getting-started-with-docker-recommended"&gt;Getting Started with Docker (Recommended)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#non-docker-installation"&gt;Non-Docker Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#ollama-connection-errors"&gt;Ollama Connection Errors&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#using-as-a-search-engine"&gt;Using as a Search Engine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#using-perplexicas-api"&gt;Using Perplexica's API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#expose-perplexica-to-network"&gt;Expose Perplexica to a network&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#one-click-deployment"&gt;One-Click Deployment&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#upcoming-features"&gt;Upcoming Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#support-us"&gt;Support Us&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#donations"&gt;Donations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#contribution"&gt;Contribution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#help-and-support"&gt;Help and Support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Perplexica is an open-source AI-powered searching tool or an AI-powered search engine that goes deep into the internet to find answers. Inspired by Perplexity AI, it's an open-source option that not just searches the web but understands your questions. It uses advanced machine learning algorithms like similarity searching and embeddings to refine results and provides clear answers with sources cited.&lt;/p&gt; 
&lt;p&gt;Using SearxNG to stay current and fully open source, Perplexica ensures you always get the most up-to-date information without compromising your privacy.&lt;/p&gt; 
&lt;p&gt;Want to know more about its architecture and how it works? You can read it &lt;a href="https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/architecture/README.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/.assets/perplexica-preview.gif" alt="video-preview" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Local LLMs&lt;/strong&gt;: You can utilize local LLMs such as Qwen, DeepSeek, Llama, and Mistral.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Two Main Modes:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Copilot Mode:&lt;/strong&gt; (In development) Boosts search by generating different queries to find more relevant internet sources. Like normal search instead of just using the context by SearxNG, it visits the top matches and tries to find relevant sources to the user's query directly from the page.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Normal Mode:&lt;/strong&gt; Processes your query and performs a web search.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Focus Modes:&lt;/strong&gt; Special modes to better answer specific types of questions. Perplexica currently has 6 focus modes: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;All Mode:&lt;/strong&gt; Searches the entire web to find the best results.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Writing Assistant Mode:&lt;/strong&gt; Helpful for writing tasks that do not require searching the web.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Academic Search Mode:&lt;/strong&gt; Finds articles and papers, ideal for academic research.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;YouTube Search Mode:&lt;/strong&gt; Finds YouTube videos based on the search query.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Wolfram Alpha Search Mode:&lt;/strong&gt; Answers queries that need calculations or data analysis using Wolfram Alpha.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Reddit Search Mode:&lt;/strong&gt; Searches Reddit for discussions and opinions related to the query.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Current Information:&lt;/strong&gt; Some search tools might give you outdated info because they use data from crawling bots and convert them into embeddings and store them in a index. Unlike them, Perplexica uses SearxNG, a metasearch engine to get the results and rerank and get the most relevant source out of it, ensuring you always get the latest information without the overhead of daily data updates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API&lt;/strong&gt;: Integrate Perplexica into your existing applications and make use of its capibilities.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It has many more features like image and video search. Some of the planned features are mentioned in &lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#upcoming-features"&gt;upcoming features&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;There are mainly 2 ways of installing Perplexica - With Docker, Without Docker. Using Docker is highly recommended.&lt;/p&gt; 
&lt;h3&gt;Getting Started with Docker (Recommended)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Ensure Docker is installed and running on your system.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the Perplexica repository:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/ItzCrazyKns/Perplexica.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After cloning, navigate to the directory containing the project files.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Rename the &lt;code&gt;sample.config.toml&lt;/code&gt; file to &lt;code&gt;config.toml&lt;/code&gt;. For Docker setups, you need only fill in the following fields:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;OPENAI&lt;/code&gt;: Your OpenAI API key. &lt;strong&gt;You only need to fill this if you wish to use OpenAI's models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;CUSTOM_OPENAI&lt;/code&gt;: Your OpenAI-API-compliant local server URL, model name, and API key. You should run your local server with host set to &lt;code&gt;0.0.0.0&lt;/code&gt;, take note of which port number it is running on, and then use that port number to set &lt;code&gt;API_URL = http://host.docker.internal:PORT_NUMBER&lt;/code&gt;. You must specify the model name, such as &lt;code&gt;MODEL_NAME = "unsloth/DeepSeek-R1-0528-Qwen3-8B-GGUF:Q4_K_XL"&lt;/code&gt;. Finally, set &lt;code&gt;API_KEY&lt;/code&gt; to the appropriate value. If you have not defined an API key, just put anything you want in-between the quotation marks: &lt;code&gt;API_KEY = "whatever-you-want-but-not-blank"&lt;/code&gt; &lt;strong&gt;You only need to configure these settings if you want to use a local OpenAI-compliant server, such as Llama.cpp's &lt;a href="https://github.com/ggml-org/llama.cpp/raw/master/tools/server/README.md"&gt;&lt;code&gt;llama-server&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;OLLAMA&lt;/code&gt;: Your Ollama API URL. You should enter it as &lt;code&gt;http://host.docker.internal:PORT_NUMBER&lt;/code&gt;. If you installed Ollama on port 11434, use &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;. For other ports, adjust accordingly. &lt;strong&gt;You need to fill this if you wish to use Ollama's models instead of OpenAI's&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;GROQ&lt;/code&gt;: Your Groq API key. &lt;strong&gt;You only need to fill this if you wish to use Groq's hosted models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;ANTHROPIC&lt;/code&gt;: Your Anthropic API key. &lt;strong&gt;You only need to fill this if you wish to use Anthropic models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;Gemini&lt;/code&gt;: Your Gemini API key. &lt;strong&gt;You only need to fill this if you wish to use Google's models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;DEEPSEEK&lt;/code&gt;: Your Deepseek API key. &lt;strong&gt;Only needed if you want Deepseek models.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;AIMLAPI&lt;/code&gt;: Your AI/ML API key. &lt;strong&gt;Only needed if you want to use AI/ML API models and embeddings.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can change these after starting Perplexica from the settings dialog.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;SIMILARITY_MEASURE&lt;/code&gt;: The similarity measure to use (This is filled by default; you can leave it as is if you are unsure about it.)&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ensure you are in the directory containing the &lt;code&gt;docker-compose.yaml&lt;/code&gt; file and execute:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Wait a few minutes for the setup to complete. You can access Perplexica at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in your web browser.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: After the containers are built, you can start Perplexica directly from Docker without having to open a terminal.&lt;/p&gt; 
&lt;h3&gt;Non-Docker Installation&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install SearXNG and allow &lt;code&gt;JSON&lt;/code&gt; format in the SearXNG settings.&lt;/li&gt; 
 &lt;li&gt;Clone the repository and rename the &lt;code&gt;sample.config.toml&lt;/code&gt; file to &lt;code&gt;config.toml&lt;/code&gt; in the root directory. Ensure you complete all required fields in this file.&lt;/li&gt; 
 &lt;li&gt;After populating the configuration run &lt;code&gt;npm i&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Install the dependencies and then execute &lt;code&gt;npm run build&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Finally, start the app by running &lt;code&gt;npm run start&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Using Docker is recommended as it simplifies the setup process, especially for managing environment variables and dependencies.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/installation"&gt;installation documentation&lt;/a&gt; for more information like updating, etc.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;h4&gt;Local OpenAI-API-Compliant Servers&lt;/h4&gt; 
&lt;p&gt;If Perplexica tells you that you haven't configured any chat model providers, ensure that:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Your server is running on &lt;code&gt;0.0.0.0&lt;/code&gt; (not &lt;code&gt;127.0.0.1&lt;/code&gt;) and on the same port you put in the API URL.&lt;/li&gt; 
 &lt;li&gt;You have specified the correct model name loaded by your local LLM server.&lt;/li&gt; 
 &lt;li&gt;You have specified the correct API key, or if one is not defined, you have put &lt;em&gt;something&lt;/em&gt; in the API key field and not left it empty.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Ollama Connection Errors&lt;/h4&gt; 
&lt;p&gt;If you're encountering an Ollama connection error, it is likely due to the backend being unable to connect to Ollama's API. To fix this issue you can:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Check your Ollama API URL:&lt;/strong&gt; Ensure that the API URL is correctly set in the settings menu.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Update API URL Based on OS:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Windows:&lt;/strong&gt; Use &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Mac:&lt;/strong&gt; Use &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Linux:&lt;/strong&gt; Use &lt;code&gt;http://&amp;lt;private_ip_of_host&amp;gt;:11434&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;Adjust the port number if you're using a different one.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux Users - Expose Ollama to Network:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Inside &lt;code&gt;/etc/systemd/system/ollama.service&lt;/code&gt;, you need to add &lt;code&gt;Environment="OLLAMA_HOST=0.0.0.0:11434"&lt;/code&gt;. (Change the port number if you are using a different one.) Then reload the systemd manager configuration with &lt;code&gt;systemctl daemon-reload&lt;/code&gt;, and restart Ollama by &lt;code&gt;systemctl restart ollama&lt;/code&gt;. For more information see &lt;a href="https://github.com/ollama/ollama/raw/main/docs/faq.md#setting-environment-variables-on-linux"&gt;Ollama docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Ensure that the port (default is 11434) is not blocked by your firewall.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Using as a Search Engine&lt;/h2&gt; 
&lt;p&gt;If you wish to use Perplexica as an alternative to traditional search engines like Google or Bing, or if you want to add a shortcut for quick access from your browser's search bar, follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open your browser's settings.&lt;/li&gt; 
 &lt;li&gt;Navigate to the 'Search Engines' section.&lt;/li&gt; 
 &lt;li&gt;Add a new site search with the following URL: &lt;code&gt;http://localhost:3000/?q=%s&lt;/code&gt;. Replace &lt;code&gt;localhost&lt;/code&gt; with your IP address or domain name, and &lt;code&gt;3000&lt;/code&gt; with the port number if Perplexica is not hosted locally.&lt;/li&gt; 
 &lt;li&gt;Click the add button. Now, you can use Perplexica directly from your browser's search bar.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Using Perplexica's API&lt;/h2&gt; 
&lt;p&gt;Perplexica also provides an API for developers looking to integrate its powerful search engine into their own applications. You can run searches, use multiple models and get answers to your queries.&lt;/p&gt; 
&lt;p&gt;For more details, check out the full documentation &lt;a href="https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/API/SEARCH.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Expose Perplexica to network&lt;/h2&gt; 
&lt;p&gt;Perplexica runs on Next.js and handles all API requests. It works right away on the same network and stays accessible even with port forwarding.&lt;/p&gt; 
&lt;h2&gt;One-Click Deployment&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://usw.sealos.io/?openapp=system-template%3FtemplateName%3Dperplexica"&gt;&lt;img src="https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg?sanitize=true" alt="Deploy to Sealos" /&gt;&lt;/a&gt; &lt;a href="https://repocloud.io/details/?app_id=267"&gt;&lt;img src="https://d16t0pc4846x52.cloudfront.net/deploylobe.svg?sanitize=true" alt="Deploy to RepoCloud" /&gt;&lt;/a&gt; &lt;a href="https://template.run.claw.cloud/?referralCode=U11MRQ8U9RM4&amp;amp;openapp=system-fastdeploy%3FtemplateName%3Dperplexica"&gt;&lt;img src="https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg?sanitize=true" alt="Run on ClawCloud" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Upcoming Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Add settings page&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Adding support for local LLMs&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; History Saving features&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Introducing various Focus Modes&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Adding API support&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Adding Discover&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Finalizing Copilot Mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support Us&lt;/h2&gt; 
&lt;p&gt;If you find Perplexica useful, consider giving us a star on GitHub. This helps more people discover Perplexica and supports the development of new features. Your support is greatly appreciated.&lt;/p&gt; 
&lt;h3&gt;Donations&lt;/h3&gt; 
&lt;p&gt;We also accept donations to help sustain our project. If you would like to contribute, you can use the following options to donate. Thank you for your support!&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Ethereum&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Address: &lt;code&gt;0xB025a84b2F269570Eb8D4b05DEdaA41D8525B6DD&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Perplexica is built on the idea that AI and large language models should be easy for everyone to use. If you find bugs or have ideas, please share them in via GitHub Issues. For more information on contributing to Perplexica you can read the &lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file to learn more about Perplexica and how you can contribute to it.&lt;/p&gt; 
&lt;h2&gt;Help and Support&lt;/h2&gt; 
&lt;p&gt;If you have any questions or feedback, please feel free to reach out to us. You can create an issue on GitHub or join our Discord server. There, you can connect with other users, share your experiences and reviews, and receive more personalized help. &lt;a href="https://discord.gg/EFwsmQDgAu"&gt;Click here&lt;/a&gt; to join the Discord server. To discuss matters outside of regular support, feel free to contact me on Discord at &lt;code&gt;itzcrazykns&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Thank you for exploring Perplexica, the AI-powered search engine designed to enhance your search experience. We are constantly working to improve Perplexica and expand its capabilities. We value your feedback and contributions which help us make Perplexica even better. Don't forget to check back for updates and new features!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>novuhq/novu</title>
      <link>https://github.com/novuhq/novu</link>
      <description>&lt;p&gt;The open-source notification Inbox infrastructure. E-mail, SMS, Push and Slack Integrations.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://go.novu.co/github" target="_blank" rel="noopener noreferrer"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/2233092/213641039-220ac15f-f367-4d13-9eaf-56e79433b8c1.png" /&gt; 
   &lt;img alt="Novu Logo" src="https://user-images.githubusercontent.com/2233092/213641043-3bbb3f21-3c53-4e67-afe5-755aeb222159.png" width="280" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.producthunt.com/products/novu" target="_blank" rel="noopener noreferrer"&gt; &lt;img src="https://img.shields.io/badge/Product%20Hunt-Golden%20Kitty%20Award%202023-yellow" alt="Product Hunt" /&gt; &lt;/a&gt; &lt;a href="https://news.ycombinator.com/item?id=38419513" target="_blank" rel="noopener noreferrer"&gt;&lt;img src="https://img.shields.io/badge/Hacker%20News-%231-%23FF6600" alt="Hacker News" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@novu/react" target="_blank" rel="noopener noreferrer"&gt; &lt;img src="https://img.shields.io/npm/v/@novu/react" alt="NPM" /&gt; &lt;/a&gt; 
 &lt;!-- TODO: Replace this with @novu/api as soon as the NPM download traffic switches to the new package --&gt; &lt;a href="https://www.npmjs.com/package/@novu/node" target="_blank" rel="noopener noreferrer"&gt; &lt;img src="https://img.shields.io/npm/dm/@novu/node" alt="npm downloads" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt; The &amp;lt;Inbox /&amp;gt; infrastructure for modern products &lt;/h1&gt; 
&lt;div align="center"&gt;
  The notification platform that turns complex multi-channel delivery into a single component. Built for developers, designed for growth, powered by open source. 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;br /&gt; &lt;a href="https://go.novu.co/github" rel="dofollow"&gt;&lt;strong&gt;Learn More »&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://github.com/novuhq/novu/issues/new?assignees=&amp;amp;labels=type%3A+bug&amp;amp;template=bug_report.yml&amp;amp;title=%F0%9F%90%9B+Bug+Report%3A+" target="_blank" rel="noopener noreferrer"&gt;Report a bug&lt;/a&gt; · &lt;a href="https://docs.novu.co" target="_blank" rel="noopener noreferrer"&gt;Docs&lt;/a&gt; · &lt;a href="https://go.novu.co/github" target="_blank" rel="noopener noreferrer"&gt;Website&lt;/a&gt; · &lt;a href="https://discord.novu.co" target="_blank" rel="noopener noreferrer"&gt;Join our Discord&lt;/a&gt; · &lt;a href="https://go.novu.co/changelog" target="_blank" rel="noopener noreferrer"&gt;Changelog&lt;/a&gt; · &lt;a href="https://go.novu.co/roadmap" target="_blank" rel="noopener noreferrer"&gt;Roadmap&lt;/a&gt; · &lt;a href="https://twitter.com/novuhq" target="_blank" rel="noopener noreferrer"&gt;X&lt;/a&gt; · &lt;a href="https://novu.co/contact-us/?utm_campaign=github-readme" target="_blank" rel="noopener noreferrer"&gt;Contact us&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;⭐️ Why Novu?&lt;/h2&gt; 
&lt;p&gt;Novu provides a unified API that makes it simple to send notifications through multiple channels, including Inbox/In-App, Push, Email, SMS, and Chat. With Novu, you can create custom workflows and define conditions for each channel, ensuring that your notifications are delivered in the most effective way possible.&lt;/p&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Embeddable Inbox component with real-time support&lt;/li&gt; 
 &lt;li&gt;Single API for all messaging providers (Inbox/In-App, Email, SMS, Push, Chat)&lt;/li&gt; 
 &lt;li&gt;Digest Engine to combine multiple notification in to a single E-mail&lt;/li&gt; 
 &lt;li&gt;No-Code Block Editor for Email&lt;/li&gt; 
 &lt;li&gt;Notification Workflow Engine&lt;/li&gt; 
 &lt;li&gt;Embeddable user preferences component gives your subscribers control over their notifications&lt;/li&gt; 
 &lt;li&gt;Community-driven&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://go.novu.co/dashboard?utm_campaign=github-readme"&gt;Create a free account&lt;/a&gt; and follow the instructions on the dashboard.&lt;/p&gt; 
&lt;h2&gt;📚 Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#embeddable-notification-center"&gt;Embeddable Inbox and Preferences&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#providers"&gt;Providers&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-email"&gt;Email&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-sms"&gt;SMS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-push"&gt;Push&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-chat"&gt;Chat&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-in-app"&gt;In-App&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#other-coming-soon"&gt;Others&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-need-help"&gt;Need Help?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-links"&gt;Links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#%EF%B8%8F-license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Embeddable Inbox component&lt;/h2&gt; 
&lt;p&gt;Using the Novu API and admin panel, you can easily add a real-time notification center to your web app without building it yourself. You can use our &lt;a href="https://docs.novu.co/inbox/react/get-started?utm_campaign=github-readme"&gt;React&lt;/a&gt;, or build your own via our API and SDK. React native, Vue, and Angular are coming soon.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img width="762" alt="notification-center-912bb96e009fb3a69bafec23bcde00b0" src="https://novu.co/static/6e670ba56ed7a65c7f5ccff5d58c56fb/a9e85/inbox.webp" alt-text="GIF of Novu's Embeddable Notification Center" /&gt; 
 &lt;p&gt;Read more about how to add a &lt;a href="https://docs.novu.co/inbox/react/get-started?utm_campaign=github-readme"&gt;notification center Inbox&lt;/a&gt; to your app.&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Providers&lt;/h2&gt; 
&lt;p&gt;Novu provides a single API to manage providers across multiple channels with a simple-to-use API and UI interface.&lt;/p&gt; 
&lt;h4&gt;💌 Email&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/sendgrid"&gt;Sendgrid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/netcore"&gt;Netcore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/mailgun"&gt;Mailgun&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/ses"&gt;SES&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/postmark"&gt;Postmark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/nodemailer"&gt;Custom SMTP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/mailjet"&gt;Mailjet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/mandrill"&gt;Mandrill&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/brevo"&gt;Brevo (formerly SendinBlue)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/mailersend"&gt;MailerSend&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/infobip"&gt;Infobip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/resend"&gt;Resend&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/sparkpost"&gt;SparkPost&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/outlook365"&gt;Outlook 365&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📞 SMS&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/twilio"&gt;Twilio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/plivo"&gt;Plivo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/sns"&gt;SNS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/nexmo"&gt;Nexmo - Vonage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/sms77"&gt;Sms77&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/telnyx"&gt;Telnyx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/termii"&gt;Termii&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/gupshup"&gt;Gupshup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/sms-central"&gt;SMS Central&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/maqsam"&gt;Maqsam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/forty-six-elks"&gt;46elks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/clickatell"&gt;Clickatell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/burst-sms"&gt;Burst SMS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/firetext"&gt;Firetext&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/infobip"&gt;Infobip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Bandwidth&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; RingCentral&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📱 Push&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/fcm"&gt;FCM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/expo"&gt;Expo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/apns"&gt;APNS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/one-signal"&gt;OneSignal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/pushpad"&gt;Pushpad&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Pushwoosh&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;👇 Chat&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/slack"&gt;Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/discord"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/ms-teams"&gt;MS Teams&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/mattermost"&gt;Mattermost&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📱 In-App&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://docs.novu.co/inbox/react/get-started?utm_campaign=github-readme"&gt;Novu&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📋 Read Our Code Of Conduct&lt;/h2&gt; 
&lt;p&gt;Before you begin coding and collaborating, please read our &lt;a href="https://github.com/novuhq/novu/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; thoroughly to understand the standards (that you are required to adhere to) for community engagement. As part of our open-source community, we hold ourselves and other contributors to a high standard of communication. As a participant and contributor to this project, you agree to abide by our &lt;a href="https://github.com/novuhq/novu/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💻 Need Help?&lt;/h2&gt; 
&lt;p&gt;We are more than happy to help you. If you are getting any errors or facing problems while working on this project, join our &lt;a href="https://discord.novu.co"&gt;Discord server&lt;/a&gt; and ask for help. We are open to discussing anything related to the project.&lt;/p&gt; 
&lt;h2&gt;🔗 Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://novu.co?utm_campaign=github-readme"&gt;Home page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novuhq/novu/raw/main/CONTRIBUTING.md"&gt;Contribution guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.novu.co/community/run-in-local-machine?utm_campaign=github-readme"&gt;Run Novu locally&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🛡️ License&lt;/h2&gt; 
&lt;p&gt;Novu is a commercial open source company, which means some parts of this open source repository require a commercial license. The concept is called "Open Core," where the core technology is fully open source, licensed under MIT license, and the enterprise code is covered under a commercial license ("/enterprise" Enterprise Edition). Enterprise features are built by the core engineering team of Novu which is hired in full-time.&lt;/p&gt; 
&lt;p&gt;The following modules and folders are licensed under the enterprise license:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;enterprise&lt;/code&gt; folder at the root of the project and all of their subfolders and modules&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;apps/web/src/ee&lt;/code&gt; folder and all of their subfolders and modules&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;apps/dashboard/src/ee&lt;/code&gt; folder and all of their subfolders and modules&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💪 Thanks to all of our contributors&lt;/h2&gt; 
&lt;p&gt;Thanks a lot for spending your time helping Novu grow. Keep rocking 🥂&lt;/p&gt; 
&lt;p&gt;&amp;lt;a href="&lt;a href="https://novu.co/contributors?utm_source=github"&gt;https://novu.co/contributors?utm_source=github&lt;/a&gt;" target="_blank" rel="noopener noreferrer"&lt;/p&gt; 
&lt;blockquote&gt; 
&lt;/blockquote&gt; 
&lt;img src="https://contributors-img.web.app/image?repo=novuhq/novu" alt="Contributors" /&gt;</description>
    </item>
    
    <item>
      <title>firebase/genkit</title>
      <link>https://github.com/firebase/genkit</link>
      <description>&lt;p&gt;Open-source framework for building AI-powered apps in JavaScript, Go, and Python, built and used in production by Google&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/firebase/genkit/main/docs/resources/genkit-logo-dark.png#gh-dark-mode-only" alt="Genkit logo" title="Genkit" /&gt; &lt;img src="https://raw.githubusercontent.com/firebase/genkit/main/docs/resources/genkit-logo.png#gh-light-mode-only" alt="Genkit logo" title="Genkit" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://genkit.dev"&gt;Genkit&lt;/a&gt; is an open-source framework for building full-stack AI-powered applications, built and used in production by Google's Firebase. It provides SDKs for multiple programming languages with varying levels of stability:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;JavaScript/TypeScript&lt;/strong&gt;: Production-ready with full feature support&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Go&lt;/strong&gt;: Production-ready with full feature support&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Python (Alpha)&lt;/strong&gt;: Early development with core functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It offers a unified interface for integrating AI models from providers like &lt;a href="https://genkit.dev/docs/plugins/google-genai"&gt;Google&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/plugins/openai"&gt;OpenAI&lt;/a&gt;, &lt;a href="https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-anthropic"&gt;Anthropic&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/plugins/ollama/"&gt;Ollama&lt;/a&gt;, and more. Rapidly build and deploy production-ready chatbots, automations, and recommendation systems using streamlined APIs for multimodal content, structured outputs, tool calling, and agentic workflows.&lt;/p&gt; 
&lt;p&gt;Get started with just a few lines of code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { genkit } from 'genkit';
import { googleAI } from '@genkit-ai/google-genai';

const ai = genkit({ plugins: [googleAI()] });

const { text } = await ai.generate({
    model: googleAI.model('gemini-2.5-flash'),
    prompt: 'Why is Firebase awesome?'
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Explore &amp;amp; build with Genkit&lt;/h2&gt; 
&lt;p&gt;Play with AI sample apps, with visualizations of the Genkit code that powers them, at no cost to you.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://examples.genkit.dev"&gt;Explore Genkit by Example&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Key capabilities&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Broad AI model support&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Use a unified interface to integrate with hundreds of models from providers like &lt;a href="https://genkit.dev/docs/plugins/google-genai"&gt;Google&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/plugins/openai"&gt; OpenAI&lt;/a&gt;, &lt;a href="https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-anthropic"&gt; Anthropic&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/plugins/ollama"&gt;Ollama&lt;/a&gt;, and more. Explore, compare, and use the best models for your needs.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Simplified AI development&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Use streamlined APIs to build AI features with &lt;a href="https://genkit.dev/docs/models#structured-output"&gt; structured output&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/tool-calling"&gt;agentic tool calling&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/rag"&gt;context-aware generation&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/models#multimodal"&gt;multi-modal input/output&lt;/a&gt;, and more. Genkit handles the complexity of AI development, so you can build and iterate faster.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Web and mobile ready&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Integrate seamlessly with frameworks and platforms including Next.js, React, Angular, iOS, Android, using purpose-built &lt;a href="https://genkit.dev/docs/firebase"&gt;client SDKs&lt;/a&gt; and helpers.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Cross-language support&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Build with the language that best fits your project. Genkit provides SDKs for JavaScript/TypeScript, Go, and Python (Alpha) with consistent APIs and capabilities across all supported languages.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Deploy anywhere&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Deploy AI logic to any environment that supports your chosen programming language, such as &lt;a href="https://genkit.dev/docs/firebase"&gt;Cloud Functions for Firebase&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/cloud-run"&gt;Google Cloud Run&lt;/a&gt;, or &lt;a href="https://genkit.dev/docs/deploy-node"&gt;third-party platforms&lt;/a&gt;, with or without Google services.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Developer tools&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Accelerate AI development with a purpose-built, local &lt;a href="https://genkit.dev/docs/devtools"&gt;CLI and Developer UI&lt;/a&gt;. Test prompts and flows against individual inputs or datasets, compare outputs from different models, debug with detailed execution traces, and use immediate visual feedback to iterate rapidly on prompts.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Production monitoring&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Ship AI features with confidence using comprehensive production monitoring. Track model performance, and request volumes, latency, and error rates in a &lt;a href="https://genkit.dev/docs/observability/getting-started"&gt; purpose-built dashboard&lt;/a&gt;. Identify issues quickly with detailed observability metrics, and ensure your AI features meet quality and performance targets in real-world usage.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;How does it work?&lt;/h2&gt; 
&lt;p&gt;Genkit simplifies AI integration with an open-source SDK and unified APIs that work across various model providers and programming languages. It abstracts away complexity so you can focus on delivering great user experiences.&lt;/p&gt; 
&lt;p&gt;Some key features offered by Genkit include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/models"&gt;Text and image generation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/models#structured-output"&gt;Type-safe, structured data generation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/tool-calling"&gt;Tool calling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/dotprompt"&gt;Prompt templating&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/chat"&gt;Persisted chat interfaces&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/flows"&gt;AI workflows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/rag"&gt;AI-powered data retrieval (RAG)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Genkit is designed for server-side deployment in multiple language environments, and also provides seamless client-side integration through dedicated helpers and &lt;a href="https://genkit.dev/docs/firebase"&gt;client SDKs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Implementation path&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Choose your language and model provider&lt;/td&gt; 
   &lt;td&gt;Select the Genkit SDK for your preferred language (JavaScript/TypeScript, Go, or Python (Alpha)). Choose a model provider like &lt;a href="https://genkit.dev/docs/plugins/google-genai"&gt;Google Gemini&lt;/a&gt; or Anthropic, and get an API key. Some providers, like &lt;a href="https://genkit.dev/docs/plugins/vertex-ai"&gt;Vertex AI&lt;/a&gt;, may rely on a different means of authentication.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Install the SDK and initialize&lt;/td&gt; 
   &lt;td&gt;Install the Genkit SDK, model-provider package of your choice, and the Genkit CLI. Import the Genkit and provider packages and initialize Genkit with the provider API key.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;span&gt;3&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Write and test AI features&lt;/td&gt; 
   &lt;td&gt;Use the Genkit SDK to build AI features for your use case, from basic text generation to complex multi-step workflows and agents. Use the CLI and Developer UI to help you rapidly test and iterate.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Deploy and monitor&lt;/td&gt; 
   &lt;td&gt;Deploy your AI features to Firebase, Google Cloud Run, or any environment that supports your chosen programming language. Integrate them into your app, and monitor them in production in the Firebase console.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/get-started"&gt;JavaScript/TypeScript quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/go/docs/get-started-go"&gt;Go quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/python/docs/get-started/"&gt;Python quickstart&lt;/a&gt; (Alpha)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development tools&lt;/h2&gt; 
&lt;p&gt;Genkit provides a CLI and a local UI to streamline your AI development workflow.&lt;/p&gt; 
&lt;h3&gt;CLI&lt;/h3&gt; 
&lt;p&gt;The Genkit CLI includes commands for running and evaluating your Genkit functions (flows) and collecting telemetry and logs.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Install:&lt;/strong&gt; &lt;code&gt;npm install -g genkit-cli&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Run a command, wrapped with telemetry, a interactive developer UI, etc:&lt;/strong&gt; &lt;code&gt;genkit start -- &amp;lt;command to run your code&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Developer UI&lt;/h3&gt; 
&lt;p&gt;The Genkit developer UI is a local interface for testing, debugging, and iterating on your AI application.&lt;/p&gt; 
&lt;p&gt;Key features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Run:&lt;/strong&gt; Execute and experiment with Genkit flows, prompts, queries, and more in dedicated playgrounds.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Inspect:&lt;/strong&gt; Analyze detailed traces of past executions, including step-by-step breakdowns of complex flows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evaluate:&lt;/strong&gt; Review the results of evaluations run against your flows, including performance metrics and links to relevant traces.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/firebase/genkit/main/docs/resources/readme-ui-traces-screenshot.png" width="700" alt="Screenshot of Genkit Developer UI showing traces" /&gt; 
&lt;h2&gt;Try Genkit in Firebase Studio&lt;/h2&gt; 
&lt;p&gt;Want to skip the local setup? Click below to try out Genkit using &lt;a href="https://firebase.studio"&gt;Firebase Studio&lt;/a&gt;, Google's AI-assisted workspace for full-stack app development in the cloud.&lt;/p&gt; 
&lt;a href="https://studio.firebase.google.com/new/genkit"&gt; &lt;img height="32" alt="Open in Firebase Studio" src="https://cdn.firebasestudio.dev/btn/open_bright_32.svg?sanitize=true" /&gt; &lt;/a&gt; 
&lt;h2&gt;Connect with us&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/qXt5zzQKpc"&gt;&lt;strong&gt;Join us on Discord&lt;/strong&gt;&lt;/a&gt; – Get help, share ideas, and chat with other developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firebase/genkit/issues"&gt;&lt;strong&gt;Contribute on GitHub&lt;/strong&gt;&lt;/a&gt; – Report bugs, suggest features, or explore the source code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/genkit-ai/"&gt;&lt;strong&gt;Contribute to Documentation and Samples&lt;/strong&gt;&lt;/a&gt; – Report issues in Genkit's &lt;a href="https://github.com/genkit-ai/docsite"&gt;documentation&lt;/a&gt;, or contribute to the &lt;a href="https://github.com/genkit-ai/samples"&gt;samples&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions to Genkit are welcome and highly appreciated! See our &lt;a href="https://raw.githubusercontent.com/firebase/genkit/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;Genkit is built by &lt;a href="https://firebase.google.com/"&gt;Firebase&lt;/a&gt; with contributions from the &lt;a href="https://github.com/firebase/genkit/graphs/contributors"&gt;Open Source Community&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>midday-ai/midday</title>
      <link>https://github.com/midday-ai/midday</link>
      <description>&lt;p&gt;Invoicing, Time tracking, File reconciliation, Storage, Financial Overview &amp; your own Assistant made for Freelancers&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/midday-ai/midday/main/github.png" alt="hero" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;&lt;b&gt;Midday&lt;/b&gt;&lt;/h1&gt; 
&lt;p align="center"&gt; Run your business smarter &lt;br /&gt; &lt;br /&gt; &lt;a href="https://go.midday.ai/anPiuRx"&gt;Discord&lt;/a&gt; · &lt;a href="https://midday.ai"&gt;Website&lt;/a&gt; · &lt;a href="https://github.com/midday-ai/midday/issues"&gt;Issues&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://go.midday.ai/K7GwMoQ"&gt; &lt;img src="https://img.shields.io/badge/Supabase-3ECF8E?style=for-the-badge&amp;amp;logo=supabase&amp;amp;logoColor=white" alt="Supabase" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;About Midday&lt;/h2&gt; 
&lt;p&gt;Midday is an all-in-one tool designed to help freelancers, contractors, consultants, and solo entrepreneurs manage their business operations more efficiently. It integrates various functions typically scattered across multiple platforms into a single, cohesive system.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Time Tracking&lt;/strong&gt;: Allows for live time tracking of projects to boost productivity and collaboration, providing insightful project overviews.&lt;br /&gt; &lt;strong&gt;Invoicing&lt;/strong&gt;: An upcoming feature that will enable users to create web-based invoices, collaborate in real-time, and synchronize projects seamlessly.&lt;br /&gt; &lt;strong&gt;Magic Inbox&lt;/strong&gt;: Automatically matches incoming invoices or receipts to the correct transactions, simplifying financial tracking and organization.&lt;br /&gt; &lt;strong&gt;Vault&lt;/strong&gt;: Secure storage for important files like contracts and agreements, keeping everything in one place for easy access​.&lt;br /&gt; &lt;strong&gt;Seamless Export&lt;/strong&gt;: Facilitates easy export of financial data, packaged neatly in CSV files for accountants.&lt;br /&gt; &lt;strong&gt;Assistant&lt;/strong&gt;: Provides tailored insights into financial situations, helping users understand spending patterns, cut costs, and find documents.&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;We are working on the documentation to get started with Midday for local development: &lt;a href="https://docs.midday.ai"&gt;https://docs.midday.ai&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;App Architecture&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monorepo&lt;/li&gt; 
 &lt;li&gt;Bun&lt;/li&gt; 
 &lt;li&gt;React&lt;/li&gt; 
 &lt;li&gt;TypeScript&lt;/li&gt; 
 &lt;li&gt;Nextjs&lt;/li&gt; 
 &lt;li&gt;Supabase&lt;/li&gt; 
 &lt;li&gt;Shadcn&lt;/li&gt; 
 &lt;li&gt;Tauri&lt;/li&gt; 
 &lt;li&gt;Expo&lt;/li&gt; 
 &lt;li&gt;TailwindCSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hosting&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supabase (database, storage, realtime, auth)&lt;/li&gt; 
 &lt;li&gt;Vercel (Website, Dashboard)&lt;/li&gt; 
 &lt;li&gt;Fly.io (API/tRPC)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Services&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Trigger.dev (background jobs)&lt;/li&gt; 
 &lt;li&gt;Resend (Transactional &amp;amp; Marketing)&lt;/li&gt; 
 &lt;li&gt;Github Actions (CI/CD)&lt;/li&gt; 
 &lt;li&gt;GoCardLess (Bank connection EU)&lt;/li&gt; 
 &lt;li&gt;Plaid (Bank connection in Canada and US)&lt;/li&gt; 
 &lt;li&gt;Teller (Bank connection in the US)&lt;/li&gt; 
 &lt;li&gt;OpenPanel (Events and Analytics)&lt;/li&gt; 
 &lt;li&gt;Polar (Payment processing)&lt;/li&gt; 
 &lt;li&gt;Typesense (Search)&lt;/li&gt; 
 &lt;li&gt;Mistral&lt;/li&gt; 
 &lt;li&gt;Gemini&lt;/li&gt; 
 &lt;li&gt;OpenAI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Repo Activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/96aae855e5dd87c30d53c1d154b37cf7aa5a89b3.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;strong&gt;&lt;a href="https://opensource.org/licenses/AGPL-3.0"&gt;AGPL-3.0&lt;/a&gt;&lt;/strong&gt; for non-commercial use.&lt;/p&gt; 
&lt;h3&gt;Commercial Use&lt;/h3&gt; 
&lt;p&gt;For commercial use or deployments requiring a setup fee, please contact us for a commercial license at &lt;a href="mailto:engineer@midday.ai"&gt;engineer@midday.ai&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;By using this software, you agree to the terms of the license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LukeGus/Termix</title>
      <link>https://github.com/LukeGus/Termix</link>
      <description>&lt;p&gt;Termix is a web-based server management platform with SSH terminal, tunneling, and file editing capabilities.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Repo Stats&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://flagcdn.com/us.svg?sanitize=true" alt="English" width="24" height="16" /&gt; English | &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/README-CN.md"&gt;&lt;img src="https://flagcdn.com/cn.svg?sanitize=true" alt="中文" width="24" height="16" /&gt; 中文&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/stars/LukeGus/Termix?style=flat&amp;amp;label=Stars" alt="GitHub Repo stars" /&gt; &lt;img src="https://img.shields.io/github/forks/LukeGus/Termix?style=flat&amp;amp;label=Forks" alt="GitHub forks" /&gt; &lt;img src="https://img.shields.io/github/v/release/LukeGus/Termix?style=flat&amp;amp;label=Release" alt="GitHub Release" /&gt; &lt;a href="https://discord.gg/jVQGdvHDrf"&gt;&lt;img alt="Discord" src="https://img.shields.io/discord/1347374268253470720" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/LukeGus/Termix/main/repo-images/RepoOfTheDay.png" alt="Repo of the Day Achievement" style="width: 300px; height: auto;" /&gt; &lt;br /&gt; &lt;small style="color: #666;"&gt;Achieved on September 1st, 2025&lt;/small&gt; &lt;/p&gt; 
&lt;h4&gt;Top Technologies&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-React-61DBFB?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=react&amp;amp;logoColor=61DBFB" alt="React Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-TypeScript-3178C6?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=typescript&amp;amp;logoColor=3178C6" alt="TypeScript Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-Node.js-3C873A?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=node.js&amp;amp;logoColor=3C873A" alt="Node.js Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-Vite-646CFF?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=vite&amp;amp;logoColor=646CFF" alt="Vite Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-TailwindCSS-38B2AC?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=tailwindcss&amp;amp;logoColor=38B2AC" alt="Tailwind CSS Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-Docker-2496ED?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=docker&amp;amp;logoColor=2496ED" alt="Docker Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-SQLite-003B57?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=sqlite&amp;amp;logoColor=003B57" alt="SQLite Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-Radix%20UI-161618?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=radixui&amp;amp;logoColor=161618" alt="Radix UI Badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/LukeGus/Termix"&gt; &lt;img alt="Termix Banner" src="https://raw.githubusercontent.com/LukeGus/Termix/main/repo-images/HeaderImage.png" style="width: auto; height: auto;" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;If you would like, you can support the project here!&lt;br /&gt; &lt;a href="https://github.com/sponsors/LukeGus"&gt;&lt;img src="https://img.shields.io/badge/Sponsor-LukeGus-181717?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="GitHub Sponsor" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Overview&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/LukeGus/Termix"&gt; &lt;img alt="Termix Banner" src="https://raw.githubusercontent.com/LukeGus/Termix/main/public/icon.svg?sanitize=true" style="width: 250px; height: 250px;" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Termix is an open-source, forever-free, self-hosted all-in-one server management platform. It provides a web-based solution for managing your servers and infrastructure through a single, intuitive interface. Termix offers SSH terminal access, SSH tunneling capabilities, and remote file editing, with many more tools to come.&lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SSH Terminal Access&lt;/strong&gt; - Full-featured terminal with split-screen support (up to 4 panels) and tab system&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SSH Tunnel Management&lt;/strong&gt; - Create and manage SSH tunnels with automatic reconnection and health monitoring&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Remote File Editor&lt;/strong&gt; - Edit files directly on remote servers with syntax highlighting, file management features ( uploading, removing, renaming, deleting files)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SSH Host Manager&lt;/strong&gt; - Save, organize, and manage your SSH connections with tags and folders&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Server Stats&lt;/strong&gt; - View CPU, memory, and HDD usage on any SSH server&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User Authentication&lt;/strong&gt; - Secure user management with admin controls and OIDC and 2FA (TOTP) support&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modern UI&lt;/strong&gt; - Clean desktop/mobile friendly (in progress) interface built with React, Tailwind CSS, and Shadcn&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Languages&lt;/strong&gt; - Built-in support for English and Chinese&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Improved Platform Support&lt;/strong&gt; - Now includes an installable Electron app (in progress) for desktop, with a dedicated mobile app also planned.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Planned Features&lt;/h1&gt; 
&lt;p&gt;See &lt;a href="https://github.com/users/LukeGus/projects/3"&gt;Projects&lt;/a&gt;. If you are looking to contribute, see &lt;a href="https://github.com/LukeGus/Termix/raw/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;,&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;Visit the Termix &lt;a href="https://docs.termix.site/install"&gt;Docs&lt;/a&gt; for more information on how to install Termix. Otherwise, view a sample docker-compose file here:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  termix:
    image: ghcr.io/lukegus/termix:latest
    container_name: termix
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - termix-data:/app/data
    environment:
      PORT: "8080"

volumes:
  termix-data:
    driver: local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pre-built binaries are now available for download, including a Windows installer/portable app and a Linux portable app ( built with Electron). See &lt;a href="https://docs.termix.site/install#pre-built-binaries"&gt;Docs&lt;/a&gt; for details. A native iOS/Android app is planned.&lt;/p&gt; 
&lt;h1&gt;Support&lt;/h1&gt; 
&lt;p&gt;If you need help with Termix, you can join the &lt;a href="https://discord.gg/jVQGdvHDrf"&gt;Discord&lt;/a&gt; server and visit the support channel. You can also open an issue or open a pull request on the &lt;a href="https://github.com/LukeGus/Termix/issues"&gt;GitHub&lt;/a&gt; repo.&lt;/p&gt; 
&lt;h1&gt;Show-off&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="./repo-images/Image 1.png" width="400" alt="Termix Demo 1" /&gt; &lt;img src="./repo-images/Image 2.png" width="400" alt="Termix Demo 2" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="./repo-images/Image 3.png" width="250" alt="Termix Demo 3" /&gt; &lt;img src="./repo-images/Image 4.png" width="250" alt="Termix Demo 4" /&gt; &lt;img src="./repo-images/Image 5.png" width="250" alt="Termix Demo 5" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;video src="https://github.com/user-attachments/assets/f9caa061-10dc-4173-ae7d-c6d42f05cf56" width="800" controls&gt;
   Your browser does not support the video tag. 
 &lt;/video&gt; &lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Distributed under the Apache License Version 2.0. See LICENSE for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>shadcn-ui/ui</title>
      <link>https://github.com/shadcn-ui/ui</link>
      <description>&lt;p&gt;A set of beautifully-designed, accessible components and a code distribution platform. Works with your favorite frameworks. Open Source. Open Code.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;shadcn/ui&lt;/h1&gt; 
&lt;p&gt;Accessible and customizable components that you can copy and paste into your apps. Free. Open Source. &lt;strong&gt;Use this to build your own component library&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/shadcn-ui/ui/main/apps/www/public/og.jpg" alt="hero" /&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="http://ui.shadcn.com/docs"&gt;http://ui.shadcn.com/docs&lt;/a&gt; to view the documentation.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read the &lt;a href="https://raw.githubusercontent.com/shadcn-ui/ui/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the &lt;a href="https://github.com/shadcn/ui/raw/main/LICENSE.md"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>blakeblackshear/frigate</title>
      <link>https://github.com/blakeblackshear/frigate</link>
      <description>&lt;p&gt;NVR with realtime local object detection for IP cameras&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img align="center" alt="logo" src="https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/frigate.png" /&gt; &lt;/p&gt; 
&lt;h1&gt;Frigate - NVR With Realtime Object Detection for IP Cameras&lt;/h1&gt; 
&lt;a href="https://hosted.weblate.org/engage/frigate-nvr/"&gt; &lt;img src="https://hosted.weblate.org/widget/frigate-nvr/language-badge.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;p&gt;[English] | &lt;a href="https://github.com/blakeblackshear/frigate/raw/dev/README_CN.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A complete and local NVR designed for &lt;a href="https://www.home-assistant.io"&gt;Home Assistant&lt;/a&gt; with AI object detection. Uses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras.&lt;/p&gt; 
&lt;p&gt;Use of a GPU or AI accelerator such as a &lt;a href="https://coral.ai/products/"&gt;Google Coral&lt;/a&gt; or &lt;a href="https://hailo.ai/"&gt;Hailo&lt;/a&gt; is highly recommended. AI accelerators will outperform even the best CPUs with very little overhead.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tight integration with Home Assistant via a &lt;a href="https://github.com/blakeblackshear/frigate-hass-integration"&gt;custom component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Designed to minimize resource use and maximize performance by only looking for objects when and where it is necessary&lt;/li&gt; 
 &lt;li&gt;Leverages multiprocessing heavily with an emphasis on realtime over processing every frame&lt;/li&gt; 
 &lt;li&gt;Uses a very low overhead motion detection to determine where to run object detection&lt;/li&gt; 
 &lt;li&gt;Object detection with TensorFlow runs in separate processes for maximum FPS&lt;/li&gt; 
 &lt;li&gt;Communicates over MQTT for easy integration into other systems&lt;/li&gt; 
 &lt;li&gt;Records video with retention settings based on detected objects&lt;/li&gt; 
 &lt;li&gt;24/7 recording&lt;/li&gt; 
 &lt;li&gt;Re-streaming via RTSP to reduce the number of connections to your camera&lt;/li&gt; 
 &lt;li&gt;WebRTC &amp;amp; MSE support for low-latency live view&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;View the documentation at &lt;a href="https://docs.frigate.video"&gt;https://docs.frigate.video&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;If you would like to make a donation to support development, please use &lt;a href="https://github.com/sponsors/blakeblackshear"&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Live dashboard&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Live dashboard" src="https://github.com/blakeblackshear/frigate/assets/569905/5e713cb9-9db5-41dc-947a-6937c3bc376e" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;Streamlined review workflow&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Streamlined review workflow" src="https://github.com/blakeblackshear/frigate/assets/569905/6fed96e8-3b18-40e5-9ddc-31e6f3c9f2ff" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;Multi-camera scrubbing&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Multi-camera scrubbing" src="https://github.com/blakeblackshear/frigate/assets/569905/d6788a15-0eeb-4427-a8d4-80b93cae3d74" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;Built-in mask and zone editor&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Multi-camera scrubbing" src="https://github.com/blakeblackshear/frigate/assets/569905/d7885fc3-bfe6-452f-b7d0-d957cb3e31f5" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;We use &lt;a href="https://hosted.weblate.org/projects/frigate-nvr/"&gt;Weblate&lt;/a&gt; to support language translations. Contributions are always welcome.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/frigate-nvr/"&gt; &lt;img src="https://hosted.weblate.org/widget/frigate-nvr/multi-auto.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>yangshun/tech-interview-handbook</title>
      <link>https://github.com/yangshun/tech-interview-handbook</link>
      <description>&lt;p&gt;💯 Curated coding interview preparation materials for busy software engineers&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;Tech Interview Handbook&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.techinterviewhandbook.org/"&gt; &lt;img src="https://raw.githubusercontent.com/yangshun/tech-interview-handbook/main/assets/logo.svg?sanitize=true" alt="Tech Interview Handbook" width="400" /&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;h3&gt; &lt;a href="https://www.techinterviewhandbook.org/"&gt;Read on the website&lt;/a&gt; &lt;/h3&gt; 
 &lt;p&gt; Join/follow us on &lt;a href="https://discord.com/invite/usMqNaPczq" target="_blank"&gt;Discord&lt;/a&gt; | &lt;a href="https://twitter.com/techinterviewhb" target="_blank"&gt;𝕏 (Twitter)&lt;/a&gt; | &lt;a href="https://t.me/techinterviewhandbook" target="_blank"&gt;Telegram&lt;/a&gt; | &lt;a href="https://facebook.com/techinterviewhandbook" target="_blank"&gt;Facebook&lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;a href="https://www.techinterviewhandbook.org/software-engineering-interview-guide/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/yangshun/tech-interview-handbook/main/assets/start-reading-button.jpg" alt="Start Reading Tech Interview Handbook" /&gt; &lt;/a&gt; 
&lt;h2&gt;What is this?&lt;/h2&gt; 
&lt;p&gt;Not everyone has the time to do a few hundred LeetCode questions. Here are &lt;em&gt;free and curated&lt;/em&gt; technical interview preparation materials for busy engineers, brought to you by me, the author of &lt;a href="https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU"&gt;Blind 75&lt;/a&gt;. Over 1,000,000 people have benefitted from this handbook!&lt;/p&gt; 
&lt;p&gt;Besides the usual algorithm questions, other &lt;strong&gt;awesome&lt;/strong&gt; stuff includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/coding-interview-study-plan/"&gt;Best practice questions&lt;/a&gt; for coding interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/grind75/"&gt;Grind 75&lt;/a&gt; - the next evolution of Blind 75, bigger and better&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/coding-interview-prep/"&gt;How to prepare&lt;/a&gt; for coding interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/coding-interview-cheatsheet/"&gt;Coding interview best practices&lt;/a&gt; - Straight-to-the-point Do's and Don'ts&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/algorithms/study-cheatsheet/"&gt;Algorithm cheatsheets and tips&lt;/a&gt; categorized by topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/resume/"&gt;Step-by-step Software Engineer resume guide&lt;/a&gt; to prepare a FAANG-ready resume&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/behavioral-interview-questions/"&gt;Behavioral questions&lt;/a&gt; asked by the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.frontendinterviewhandbook.com"&gt;Front end interview preparation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Help from you in contributing content would be very much appreciated!&lt;/p&gt; 
&lt;h2&gt;Why would you read this?&lt;/h2&gt; 
&lt;p&gt;This repository has &lt;strong&gt;practical&lt;/strong&gt; content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful.&lt;/p&gt; 
&lt;p&gt;The information in this repository is condensed. Ultimately, the key to succeeding in technical interviews is consistent practice and I don't want to bore you with too many words. I tell you the minimum you need to know on how to go about navigating the interview process, you go and practice and land your dream job.&lt;/p&gt; 
&lt;h2&gt;Who is this for?&lt;/h2&gt; 
&lt;p&gt;Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;💡 Stop grinding mindlessly! Study coding question patterns efficiently with &lt;a href="https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU"&gt;Grokking the Coding Interview&lt;/a&gt; by Design Gurus 💡 &lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;How is this repository different?&lt;/h2&gt; 
&lt;p&gt;There are many awesome books like "Cracking the Coding Interview" and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top-quality curated content directly for your consumption.&lt;/p&gt; 
&lt;p&gt;Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. 😎&lt;/p&gt; 
&lt;h2&gt;Looking for interview courses?&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://shareasale.com/r.cfm?b=1873647&amp;amp;u=3114753&amp;amp;m=114505&amp;amp;urllink=&amp;amp;afftrack="&gt;AlgoMonster&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;AlgoMonster aims to help you ace the technical interview &lt;strong&gt;in the shortest time possible&lt;/strong&gt;. By Google engineers, AlgoMonster uses a data-driven approach to teach you the most useful key question patterns and has contents to help you quickly revise basic data structures and algorithms. Best of all, AlgoMonster is not subscription-based - pay a one-time fee and get &lt;strong&gt;lifetime access&lt;/strong&gt;. &lt;a href="https://shareasale.com/r.cfm?b=1873647&amp;amp;u=3114753&amp;amp;m=114505&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;strong&gt;Join today for a 70% discount →&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU"&gt;Grokking the Coding Interview: Patterns for Coding Questions&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;This course by Design Gurus expands upon the questions on the recommended practice questions but approaches the practicing from a questions pattern perspective, which is an approach I also agree with for learning and have personally used to get better at coding interviews. The course allows you to practice selected questions in Java, Python, C++, JavaScript and also provides sample solutions in those languages. &lt;strong&gt;Learn and understand patterns, not memorize answers!&lt;/strong&gt; &lt;a href="https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU"&gt;&lt;strong&gt;Get lifetime access today →&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Looking for Front End content?&lt;/h2&gt; 
&lt;p&gt;Front-end-related content has been moved to a separate website - &lt;a href="https://frontendinterviewhandbook.com"&gt;Front End Interview Handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Looking for System Design content?&lt;/h2&gt; 
&lt;p&gt;We're still working on System Design content. In the meanwhile, check out &lt;a href="https://bytebytego.com?fpr=techinterviewhandbook"&gt;ByteByteGo's System Design Interview course&lt;/a&gt; or Design Gurus' &lt;a href="https://www.designgurus.io/course/grokking-the-system-design-interview?aff=kJSIoU"&gt;Grokking the System Design Interview course&lt;/a&gt;, which in our opinion are among the most useful resources for getting started on system design interviews preparation.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;p&gt;A &lt;a href="https://github.com/facebook/docusaurus"&gt;Docusaurus&lt;/a&gt; website has been created to provide a better reading experience. Check out the website &lt;a href="https://www.techinterviewhandbook.org"&gt;here&lt;/a&gt;!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;💡 Stop the grind and study with a plan! Developed by Google engineers, &lt;a href="https://shareasale.com/r.cfm?b=1873647&amp;amp;u=3114753&amp;amp;m=114505&amp;amp;urllink=&amp;amp;afftrack="&gt;AlgoMonster&lt;/a&gt; is the fastest way to get a software engineering job. &lt;a href="https://shareasale.com/r.cfm?b=1873647&amp;amp;u=3114753&amp;amp;m=114505&amp;amp;urllink=&amp;amp;afftrack="&gt;Join today for a 70% discount!&lt;/a&gt; 💡&lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;p&gt;If you are interested in how data structures are implemented, check out &lt;a href="https://github.com/yangshun/lago"&gt;Lago&lt;/a&gt;, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that can be used in production and also a reference resource for revising Data Structures and Algorithms.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contributed. [&lt;a href="https://raw.githubusercontent.com/yangshun/tech-interview-handbook/main/CONTRIBUTING.md"&gt;Contribute&lt;/a&gt;]. &lt;a href="https://github.com/yangshun/tech-interview-handbook/graphs/contributors"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/contributors.svg?width=890&amp;amp;button=false" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! 🙏 [&lt;a href="https://opencollective.com/tech-interview-handbook#backer"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/tech-interview-handbook#backers" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/backers.svg?width=890" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/yangshun" target="_blank"&gt;&lt;img src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt="Buy Me A Coffee" style="height: auto !important; width: auto !important;" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [&lt;a href="https://opencollective.com/tech-interview-handbook#sponsor"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/0/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/0/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/1/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/1/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/2/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/2/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/3/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/3/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/4/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/4/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/5/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/5/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/6/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/6/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/7/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/7/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/8/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/8/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/9/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/9/avatar.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Meta).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mattermost/mattermost</title>
      <link>https://github.com/mattermost/mattermost</link>
      <description>&lt;p&gt;Mattermost is an open source platform for secure collaboration across the entire software development lifecycle..&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href="https://mattermost.com"&gt;&lt;img src="https://user-images.githubusercontent.com/7205829/137170381-fe86eef0-bccc-4fdd-8e92-b258884ebdd7.png" alt="Mattermost logo" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://mattermost.com"&gt;Mattermost&lt;/a&gt; is an open core, self-hosted collaboration platform that offers chat, workflow automation, voice calling, screen sharing, and AI integration. This repo is the primary source for core development on the Mattermost platform; it's written in Go and React, runs as a single Linux binary, and relies on PostgreSQL. A new compiled version is released under an MIT license every month on the 16th.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://mattermost.com/deploy/?utm_source=github-mattermost-server-readme"&gt;Deploy Mattermost on-premises&lt;/a&gt;, or &lt;a href="https://mattermost.com/sign-up/?utm_source=github-mattermost-server-readme"&gt;try it for free in the cloud&lt;/a&gt;.&lt;/p&gt; 
&lt;img width="1006" alt="mattermost user interface" src="https://user-images.githubusercontent.com/7205829/136107976-7a894c9e-290a-490d-8501-e5fdbfc3785a.png" /&gt; 
&lt;p&gt;Learn more about the following use cases with Mattermost:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://mattermost.com/solutions/use-cases/devops/?utm_source=github-mattermost-server-readme"&gt;DevSecOps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mattermost.com/solutions/use-cases/incident-resolution/?utm_source=github-mattermost-server-readme"&gt;Incident Resolution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mattermost.com/solutions/use-cases/it-service-desk/?utm_source=github-mattermost-server-readme"&gt;IT Service Desk&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Other useful resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/guides/deployment.html"&gt;Download and Install Mattermost&lt;/a&gt; - Install, setup, and configure your own Mattermost instance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/"&gt;Product documentation&lt;/a&gt; - Learn how to run a Mattermost instance and take advantage of all the features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.mattermost.com/"&gt;Developer documentation&lt;/a&gt; - Contribute code to Mattermost or build an integration via APIs, Webhooks, slash commands, Apps, and plugins.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Table of contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#install-mattermost"&gt;Install Mattermost&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#native-mobile-and-desktop-apps"&gt;Native mobile and desktop apps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#get-security-bulletins"&gt;Get security bulletins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#get-involved"&gt;Get involved&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#learn-more"&gt;Learn more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#get-the-latest-news"&gt;Get the latest news&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install Mattermost&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/guides/deployment.html"&gt;Download and Install Mattermost Self-Hosted&lt;/a&gt; - Deploy a Mattermost Self-hosted instance in minutes via Docker, Ubuntu, or tar.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mattermost.com/sign-up/?utm_source=github-mattermost-server-readme"&gt;Get started in the cloud&lt;/a&gt; to try Mattermost today.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.mattermost.com/contribute/server/developer-setup"&gt;Developer machine setup&lt;/a&gt; - Follow this guide if you want to write code for Mattermost.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Other install guides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/install-docker.html"&gt;Deploy Mattermost on Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/installing-mattermost-omnibus.html"&gt;Mattermost Omnibus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/install-tar.html"&gt;Install Mattermost from Tar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/installing-ubuntu-2004-LTS.html"&gt;Ubuntu 20.04 LTS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/install-kubernetes.html"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/install-kubernetes.html#installing-the-operators-via-helm"&gt;Helm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/install-debian.html"&gt;Debian Buster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/install/install-rhel-8.html"&gt;RHEL 8&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/guides/deployment.html"&gt;More server install guides&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Native mobile and desktop apps&lt;/h2&gt; 
&lt;p&gt;In addition to the web interface, you can also download Mattermost clients for &lt;a href="https://mattermost.com/pl/android-app/"&gt;Android&lt;/a&gt;, &lt;a href="https://mattermost.com/pl/ios-app/"&gt;iOS&lt;/a&gt;, &lt;a href="https://docs.mattermost.com/install/desktop-app-install.html#windows-10-windows-8-1"&gt;Windows PC&lt;/a&gt;, &lt;a href="https://docs.mattermost.com/install/desktop-app-install.html#macos-10-9"&gt;macOS&lt;/a&gt;, and &lt;a href="https://docs.mattermost.com/install/desktop-app-install.html#linux"&gt;Linux&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://mattermost.com/pl/android-app/"&gt;&lt;img src="https://user-images.githubusercontent.com/30978331/272826427-6200c98f-7319-42c3-86d4-0b33ae99e01a.png" alt="Get Mattermost on Google Play" height="50px" /&gt;&lt;/a&gt; &lt;a href="https://itunes.apple.com/us/app/mattermost/id1257222717?mt=8"&gt;&lt;img src="https://developer.apple.com/assets/elements/badges/download-on-the-app-store.svg?sanitize=true" alt="Get Mattermost on the App Store" height="50px" /&gt;&lt;/a&gt; &lt;a href="https://docs.mattermost.com/install/desktop.html#windows-10-windows-8-1-windows-7"&gt;&lt;img src="https://user-images.githubusercontent.com/33878967/33095357-39cab8d2-ceb8-11e7-89a6-67dccc571ca3.png" alt="Get Mattermost on Windows PC" /&gt;&lt;/a&gt; &lt;a href="https://docs.mattermost.com/install/desktop.html#macos-10-9"&gt;&lt;img src="https://user-images.githubusercontent.com/33878967/33095355-39a36f2a-ceb8-11e7-9b33-73d4f6d5d6c1.png" alt="Get Mattermost on Mac OSX" /&gt;&lt;/a&gt; &lt;a href="https://docs.mattermost.com/install/desktop.html#linux"&gt;&lt;img src="https://user-images.githubusercontent.com/33878967/33095354-3990e256-ceb8-11e7-965d-b00a16e578de.png" alt="Get Mattermost on Linux" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Get security bulletins&lt;/h2&gt; 
&lt;p&gt;Receive notifications of critical security updates. The sophistication of online attackers is perpetually increasing. If you're deploying Mattermost it's highly recommended you subscribe to the Mattermost Security Bulletin mailing list for updates on critical security releases.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://mattermost.com/security-updates/#sign-up"&gt;Subscribe here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Get involved&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://handbook.mattermost.com/contributors/contributors/ways-to-contribute"&gt;Contribute to Mattermost&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattermost/mattermost-server/issues?page=1&amp;amp;q=is%3Aissue+is%3Aopen+%22Help+Wanted%22&amp;amp;utf8=%E2%9C%93"&gt;Find "Help Wanted" projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://community.mattermost.com/signup_user_complete/?id=f1924a8db44ff3bb41c96424cdc20676"&gt;Join Developer Discussion on a Mattermost server for contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.mattermost.com/guides/get-help.html"&gt;Get Help With Mattermost&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Learn more&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://api.mattermost.com/"&gt;API options - webhooks, slash commands, drivers, and web service&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mattermost.com/customers/"&gt;See who's using Mattermost&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mattermost.com/marketplace/"&gt;Browse over 700 Mattermost integrations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/LICENSE.txt"&gt;LICENSE file&lt;/a&gt; for license rights and limitations.&lt;/p&gt; 
&lt;h2&gt;Get the latest news&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;X&lt;/strong&gt; - Follow &lt;a href="https://twitter.com/mattermost"&gt;Mattermost on X, formerly Twitter&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Blog&lt;/strong&gt; - Get the latest updates from the &lt;a href="https://mattermost.com/blog/"&gt;Mattermost blog&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Facebook&lt;/strong&gt; - Follow &lt;a href="https://www.facebook.com/MattermostHQ"&gt;Mattermost on Facebook&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LinkedIn&lt;/strong&gt; - Follow &lt;a href="https://www.linkedin.com/company/mattermost/"&gt;Mattermost on LinkedIn&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Email&lt;/strong&gt; - Subscribe to our &lt;a href="https://mattermost.us11.list-manage.com/subscribe?u=6cdba22349ae374e188e7ab8e&amp;amp;id=2add1c8034"&gt;newsletter&lt;/a&gt; (1 or 2 per month).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mattermost&lt;/strong&gt; - Join the ~contributors channel on &lt;a href="https://community.mattermost.com"&gt;the Mattermost Community Server&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;IRC&lt;/strong&gt; - Join the #matterbridge channel on &lt;a href="https://freenode.net/"&gt;Freenode&lt;/a&gt; (thanks to &lt;a href="https://github.com/42wim/matterircd"&gt;matterircd&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;YouTube&lt;/strong&gt; - Subscribe to &lt;a href="https://www.youtube.com/@MattermostHQ"&gt;Mattermost&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/mattermost/mattermost"&gt;&lt;img src="https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod" alt="Small Image" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please see &lt;a href="https://raw.githubusercontent.com/mattermost/mattermost/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;. &lt;a href="https://community.mattermost.com/signup_user_complete/?id=codoy5s743rq5mk18i7u5ksz7e"&gt;Join the Mattermost Contributors server&lt;/a&gt; to join community discussions about contributions, development, and more.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OI-wiki/OI-wiki</title>
      <link>https://github.com/OI-wiki/OI-wiki</link>
      <description>&lt;p&gt;🌟 Wiki of OI / ICPC for everyone. （某大型游戏线上攻略，内含炫酷算术魔法）&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://oi-wiki.org/"&gt;&lt;img src="https://raw.githubusercontent.com/OI-wiki/OI-wiki/master/docs/images/wordArt.webp" alt="Word Art" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;欢迎来到 &lt;strong&gt;OI Wiki&lt;/strong&gt;！&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/OI-wiki/OI-wiki"&gt;&lt;img src="https://img.shields.io/badge/Gitpod-Ready--to--Code-brightgreen?logo=gitpod&amp;amp;style=flat-square" alt="Gitpod Ready-to-Code" /&gt;&lt;/a&gt; &lt;a href="https://github.com/OI-wiki/OI-wiki/actions/workflows/build.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/OI-wiki/OI-wiki/build.yml?style=flat-square&amp;amp;branch=master" alt="GitHub Actions" /&gt;&lt;/a&gt; &lt;a href="https://status.oi-wiki.org/"&gt;&lt;img src="https://img.shields.io/uptimerobot/status/m781254113-3e3bac467c64fc99eafd383e.svg?style=flat-square" alt="Uptime Robot Status" /&gt;&lt;/a&gt; &lt;a href="https://t.me/OI_wiki"&gt;&lt;img src="https://img.shields.io/badge/Telegram-OI%20Wiki-%232CA5E0?style=flat-square&amp;amp;logo=telegram" alt="Telegram" /&gt;&lt;/a&gt; &lt;a href="https://jq.qq.com/?_wv=1027&amp;amp;k=5EfkM6K"&gt;&lt;img src="https://img.shields.io/badge/QQ%20group-OI%20Wiki-blue?style=flat-square&amp;amp;logo=tencent-qq" alt="QQ" /&gt;&lt;/a&gt; &lt;a href="https://github.com/OI-wiki/OI-wiki"&gt;&lt;img src="https://img.shields.io/github/watchers/OI-Wiki/OI-Wiki.svg?style=social&amp;amp;label=Watch" alt="GitHub watchers" /&gt;&lt;/a&gt; &lt;a href="https://github.com/OI-wiki/OI-wiki"&gt;&lt;img src="https://img.shields.io/github/stars/OI-Wiki/OI-Wiki.svg?style=social&amp;amp;label=Stars" alt="GitHub stars" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;内容&lt;/h2&gt; 
&lt;p&gt;编程竞赛发展多年，难度越来越高，内容越来越复杂，而网上资料大多零散，初学者往往并不知道如何系统地学习相关知识，需要花费大量时间摸索。&lt;/p&gt; 
&lt;p&gt;为了方便热爱编程竞赛的小伙伴更好地入门，2018 年 7 月份，&lt;strong&gt;OI Wiki&lt;/strong&gt; 迁移至 GitHub。随着 &lt;strong&gt;OI Wiki&lt;/strong&gt; 的内容不断完善，越来越多的小伙伴参与其中。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;OI Wiki&lt;/strong&gt; 致力于成为一个免费开放且持续更新的知识整合站点，大家可以在这里获取关于 &lt;strong&gt;编程竞赛 (competitive programming)&lt;/strong&gt; 有趣又实用的知识，我们为大家准备了竞赛中的基础知识、常见题型、解题思路以及常用工具等内容，帮助大家更快速深入地学习编程竞赛。&lt;/p&gt; 
&lt;p&gt;目前，&lt;strong&gt;OI Wiki&lt;/strong&gt; 的内容还有很多不完善的地方，知识点覆盖不够全面，存在一些低质量页面需要修改。&lt;strong&gt;OI Wiki&lt;/strong&gt; 团队以及参与贡献的小伙伴们正在积极完善这些内容。&lt;/p&gt; 
&lt;p&gt;关于上述待完善内容，请参见 &lt;strong&gt;OI Wiki&lt;/strong&gt; 的 &lt;a href="https://github.com/OI-wiki/OI-wiki/issues"&gt;Issues&lt;/a&gt; 以及 &lt;a href="https://github.com/OI-wiki/OI-wiki/labels/Iteration%20Plan%20%2F%20%E8%BF%AD%E4%BB%A3%E8%AE%A1%E5%88%92"&gt;迭代计划&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;与此同时，&lt;strong&gt;OI Wiki&lt;/strong&gt; 源于社区，提倡 &lt;strong&gt;知识自由&lt;/strong&gt;，在未来也绝不会商业化，将始终保持独立自由的性质。&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;部署&lt;/h2&gt; 
&lt;p&gt;本项目目前采用 &lt;a href="https://github.com/mkdocs/mkdocs"&gt;MkDocs&lt;/a&gt; 部署在 &lt;a href="https://oi-wiki.org"&gt;oi-wiki.org&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;我们在 &lt;a href="https://status.oi-wiki.org"&gt;status.oi-wiki.org&lt;/a&gt; 维护了一份镜像站列表，它们的内容和 &lt;a href="https://oi-wiki.org"&gt;oi-wiki.org&lt;/a&gt; 都是相同的。&lt;/p&gt; 
&lt;p&gt;当然，也可以在本地部署。（&lt;strong&gt;需要安装 Python3 和 uv&lt;/strong&gt;）&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;如果遇到问题，可以查阅 &lt;a href="https://oi-wiki.org/intro/faq/"&gt;F.A.Q.&lt;/a&gt; 来了解更多信息。&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/OI-wiki/OI-wiki.git --depth=1

cd OI-wiki

# 安装 uv (如果尚未安装)
pip install uv

# 安装依赖
uv sync --index-url https://pypi.tuna.tsinghua.edu.cn/simple/

# 使用我们的自定义主题（Windows 下请使用 Git Bash 执行）
# 安装主题时将连接网络下载资源，可通过以下配置项控制下载链接
# .gitmodules:
# - url
# scripts/pre-build/install-theme-vendor.sh:
# - MATHJAX_URL
# - MATERIAL_ICONS_URL
./scripts/pre-build/install-theme.sh

# 两种方法（选其一即可）：
# 1. 运行一个本地服务器，访问 http://127.0.0.1:8000 可以查看效果
uv run mkdocs serve -v

# 2. 在 site 文件夹下得到静态页面
uv run mkdocs build -v

# 获取 mkdocs 的命令行工具的说明（解释了命令和参数的含义）
uv run mkdocs --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;我们现在在服务器端渲染 MathJax，如果希望实现类似效果，可以参考 &lt;a href="https://github.com/OI-wiki/OI-wiki/raw/master/.github/workflows/build.yml"&gt;build.yml&lt;/a&gt;。（需要安装 Node.js）&lt;/p&gt; 
&lt;h3&gt;镜像&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Gitee 码云 上的镜像仓库和 GitHub 仓库的内容相同
git clone https://gitee.com/OI-wiki/OI-wiki.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;离线版&lt;/h3&gt; 
&lt;p&gt;可以使用 &lt;code&gt;gh-pages&lt;/code&gt; 分支的内容&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://gitee.com/OI-wiki/OI-wiki.git -b gh-pages
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;本地启动一个 http 服务器可能会更方便一些。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 如果是 python3
python3 -m http.server
# 如果是 python2
python2 -m SimpleHTTPServer
# 有些环境下找不到名叫 python3/python2 的可执行文件，不妨运行 python 试试
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;如何参与完善 OI Wiki&lt;/h2&gt; 
&lt;p&gt;我们非常欢迎你为 &lt;strong&gt;OI Wiki&lt;/strong&gt; 编写内容，将自己的所学所得与大家分享。&lt;/p&gt; 
&lt;p&gt;具体的贡献方式在 &lt;a href="https://oi-wiki.org/intro/htc/"&gt;如何参与&lt;/a&gt;。&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;版权声明&lt;/h2&gt; 
&lt;p&gt;&lt;a rel="license" href="https://creativecommons.org/licenses/by-sa/4.0/"&gt;&lt;img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png" /&gt;&lt;/a&gt;&lt;br /&gt;除特别注明外，项目中除了代码部分均采用&lt;a rel="license" href="https://creativecommons.org/licenses/by-sa/4.0/deed.zh"&gt;(Creative Commons BY-SA 4.0) 知识共享署名 - 相同方式共享 4.0 国际许可协议&lt;/a&gt;及附加的 &lt;a href="https://github.com/zTrix/sata-license"&gt;The Star And Thank Author License&lt;/a&gt; 进行许可。&lt;/p&gt; 
&lt;p&gt;换言之，使用过程中您可以自由地共享、演绎，但是必须署名、以相同方式共享、分享时没有附加限制，&lt;/p&gt; 
&lt;p&gt;而且应该为 GitHub 仓库点赞（Star）。&lt;/p&gt; 
&lt;p&gt;而如果你想要引用这个 GitHub 仓库，可以使用如下的 bibtex：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@misc{oiwiki,
  author = {OI Wiki Team},
  title = {OI Wiki},
  year = {2016},
  publisher = {GitHub},
  journal = {GitHub Repository},
  howpublished = {\url{https://github.com/OI-wiki/OI-wiki}},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;鸣谢&lt;/h2&gt; 
&lt;p&gt;本项目受 &lt;a href="https://ctf-wiki.org/"&gt;CTF Wiki&lt;/a&gt; 的启发，在编写过程中参考了诸多资料，在此一并致谢。&lt;/p&gt; 
&lt;p&gt;非常感谢一起完善 &lt;strong&gt;OI Wiki&lt;/strong&gt; 的 &lt;a href="https://github.com/OI-wiki/OI-wiki/graphs/contributors"&gt;小伙伴们&lt;/a&gt; 和为 &lt;strong&gt;OI Wiki&lt;/strong&gt; 捐赠的 &lt;a href="https://oi-wiki.org/intro/thanks/"&gt;朋友们&lt;/a&gt;！&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/OI-wiki/OI-wiki/graphs/contributors"&gt;&lt;img src="https://opencollective.com/oi-wiki/contributors.svg?width=890&amp;amp;button=false" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;特别感谢 &lt;a href="https://github.com/24OI"&gt;24OI&lt;/a&gt; 的朋友们的大力支持！&lt;/p&gt; 
&lt;!-- &lt;img src='https://i.loli.net/2018/12/07/5c0a6e4c31b30.png' alt='QVQNetWork' width=233&gt;
鸣谢 QVQNetwork 赞助的服务器。 --&gt; 
&lt;p&gt;感谢 北大算协 和 Hulu 的支持！&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://assets.pcmag.com/media/images/560767-hulu.png?width=333&amp;amp;height=245" alt="" /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>n8n-io/n8n</title>
      <link>https://github.com/n8n-io/n8n</link>
      <description>&lt;p&gt;Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/10284570/173569848-c624317f-42b1-45a6-ab09-f0ea3c247648.png" alt="Banner image" /&gt;&lt;/p&gt; 
&lt;h1&gt;n8n - Secure Workflow Automation for Technical Teams&lt;/h1&gt; 
&lt;p&gt;n8n is a workflow automation platform that gives technical teams the flexibility of code with the speed of no-code. With 400+ integrations, native AI capabilities, and a fair-code license, n8n lets you build powerful automations while maintaining full control over your data and deployments.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/n8n-io/n8n/master/assets/n8n-screenshot-readme.png" alt="n8n.io - Screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Key Capabilities&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code When You Need It&lt;/strong&gt;: Write JavaScript/Python, add npm packages, or use the visual interface&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI-Native Platform&lt;/strong&gt;: Build AI agent workflows based on LangChain with your own data and models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full Control&lt;/strong&gt;: Self-host with our fair-code license or use our &lt;a href="https://app.n8n.cloud/login"&gt;cloud offering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise-Ready&lt;/strong&gt;: Advanced permissions, SSO, and air-gapped deployments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Active Community&lt;/strong&gt;: 400+ integrations and 900+ ready-to-use &lt;a href="https://n8n.io/workflows"&gt;templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Try n8n instantly with &lt;a href="https://docs.n8n.io/hosting/installation/npm/"&gt;npx&lt;/a&gt; (requires &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx n8n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or deploy with &lt;a href="https://docs.n8n.io/hosting/installation/docker/"&gt;Docker&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker volume create n8n_data
docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Access the editor at &lt;a href="http://localhost:5678"&gt;http://localhost:5678&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📚 &lt;a href="https://docs.n8n.io"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;a href="https://n8n.io/integrations"&gt;400+ Integrations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💡 &lt;a href="https://n8n.io/workflows"&gt;Example Workflows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;a href="https://docs.n8n.io/langchain/"&gt;AI &amp;amp; LangChain Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👥 &lt;a href="https://community.n8n.io"&gt;Community Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📖 &lt;a href="https://community.n8n.io/c/tutorials/28"&gt;Community Tutorials&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Need help? Our community forum is the place to get support and connect with other users: &lt;a href="https://community.n8n.io"&gt;community.n8n.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;n8n is &lt;a href="https://faircode.io"&gt;fair-code&lt;/a&gt; distributed under the &lt;a href="https://github.com/n8n-io/n8n/raw/master/LICENSE.md"&gt;Sustainable Use License&lt;/a&gt; and &lt;a href="https://github.com/n8n-io/n8n/raw/master/LICENSE_EE.md"&gt;n8n Enterprise License&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Source Available&lt;/strong&gt;: Always visible source code&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-Hostable&lt;/strong&gt;: Deploy anywhere&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: Add your own nodes and functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="mailto:license@n8n.io"&gt;Enterprise licenses&lt;/a&gt; available for additional features and support.&lt;/p&gt; 
&lt;p&gt;Additional information about the license model can be found in the &lt;a href="https://docs.n8n.io/reference/license/"&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Found a bug 🐛 or have a feature idea ✨? Check our &lt;a href="https://github.com/n8n-io/n8n/raw/master/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Join the Team&lt;/h2&gt; 
&lt;p&gt;Want to shape the future of automation? Check out our &lt;a href="https://n8n.io/careers"&gt;job posts&lt;/a&gt; and join our team!&lt;/p&gt; 
&lt;h2&gt;What does n8n mean?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Short answer:&lt;/strong&gt; It means "nodemation" and is pronounced as n-eight-n.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Long answer:&lt;/strong&gt; "I get that question quite often (more often than I expected) so I decided it is probably best to answer it here. While looking for a good name for the project with a free domain I realized very quickly that all the good ones I could think of were already taken. So, in the end, I chose nodemation. 'node-' in the sense that it uses a Node-View and that it uses Node.js and '-mation' for 'automation' which is what the project is supposed to help with. However, I did not like how long the name was and I could not imagine writing something that long every time in the CLI. That is when I then ended up on 'n8n'." - &lt;strong&gt;Jan Oberhauser, Founder and CEO, n8n.io&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MotiaDev/motia</title>
      <link>https://github.com/MotiaDev/motia</link>
      <description>&lt;p&gt;Modern Backend Framework that unifies APIs, background jobs, workflows, and AI Agents into a single core primitive with built-in observability and state management.&lt;/p&gt;&lt;hr&gt;&lt;a href="https://motia.dev"&gt; &lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/github-readme-banner.png" alt="Motia Banner" width="100%" /&gt; &lt;/a&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/14032" style="margin-right:8px;"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/14032" alt="Motia" style="width: 250px; height: 55px; margin-right:8px;" width="250" height="55" /&gt; &lt;/a&gt; &lt;a href="https://vercel.com/blog/summer-2025-oss-program#motia" target="_blank" style="margin-left:8px;"&gt; &lt;img alt="Vercel OSS Program" src="https://vercel.com/oss/program-badge.svg?sanitize=true" style="width: 250px; height: 55px; margin-left:8px;" width="250" height="55" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt;🔥 The Unified Backend Framework That Eliminates Runtime Fragmentation 🔥&lt;/strong&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;em&gt;APIs, background jobs, workflows, and AI agents in one system. JavaScript, TypeScript, Python, and more in one codebase.&lt;/em&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/package/motia"&gt; &lt;img src="https://img.shields.io/npm/v/motia?style=flat&amp;amp;logo=npm&amp;amp;logoColor=white&amp;amp;color=CB3837&amp;amp;labelColor=000000" alt="npm version" /&gt; &lt;/a&gt; &lt;a href="https://github.com/MotiaDev/motia/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-MIT-green?style=flat&amp;amp;logo=opensourceinitiative&amp;amp;logoColor=white&amp;amp;labelColor=000000" alt="license" /&gt; &lt;/a&gt; &lt;a href="https://github.com/MotiaDev/motia"&gt; &lt;img src="https://img.shields.io/github/stars/MotiaDev/motia?style=flat&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;color=yellow&amp;amp;labelColor=000000" alt="GitHub stars" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/motiadev" target="_blank"&gt; &lt;img src="https://img.shields.io/badge/Follow-@motiadev-1DA1F2?style=flat&amp;amp;logo=twitter&amp;amp;logoColor=white&amp;amp;labelColor=000000" alt="Twitter Follow" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/motia" target="_blank"&gt; &lt;img src="https://img.shields.io/discord/1322278831184281721?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=5865F2&amp;amp;label=Discord&amp;amp;labelColor=000000" alt="Discord" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.motia.dev/manifesto"&gt;💡 Motia Manifesto&lt;/a&gt; • &lt;a href="https://www.motia.dev/docs/getting-started/quick-start"&gt;🚀 Quick Start&lt;/a&gt; • &lt;a href="https://www.motia.dev/docs/concepts/steps/defining-steps"&gt;📋 Defining Steps&lt;/a&gt; • &lt;a href="https://www.motia.dev/docs"&gt;📚 Docs&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎯 What is Motia?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Motia solves backend fragmentation.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Modern software engineering is disjointed – APIs live in one framework, background jobs in another, queues have their own tooling, and AI agents are springing up in yet more isolated runtimes. &lt;strong&gt;This fragmentation demands a unified system.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Motia unifies APIs, background jobs, workflows, and AI agents into a &lt;strong&gt;single coherent system&lt;/strong&gt; with shared observability and developer experience. Similar to how React simplified frontend development, where everything is a component, &lt;strong&gt;Motia simplifies backend development, where everything is a Step&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Write &lt;strong&gt;JavaScript, TypeScript, Python, and more&lt;/strong&gt; in the same workflow. &lt;strong&gt;What used to take 5 frameworks to build now comes out of the box with Motia.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://motia.dev"&gt;&lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/github-readme-banner.gif" alt="Motia combines APIs, background queues, and AI agents into one system" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;💻 Remix your own Motia App in Replit&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://replit.com/@motiadev/motia"&gt;&lt;img src="https://img.shields.io/badge/Open%20in-Replit-blue?logo=replit&amp;amp;style=for-the-badge" alt="Open in Replit" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Quickstart&lt;/h2&gt; 
&lt;p&gt;Get Motia project up and running in &lt;strong&gt;under 60 seconds&lt;/strong&gt;:&lt;/p&gt; 
&lt;h3&gt;1. Bootstrap a New Motia Project&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx motia@latest create   # runs the interactive terminal
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Follow the prompts to pick a template, project name, and language. &lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/motia-terminal.gif" alt="motia-terminal" /&gt;&lt;/p&gt; 
&lt;h3&gt;2. Start the Workbench&lt;/h3&gt; 
&lt;p&gt;Inside your new project folder, launch the dev server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx motia dev # ➜ http://localhost:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;That's it!&lt;/strong&gt; You have:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ REST APIs with validation&lt;/li&gt; 
 &lt;li&gt;✅ Visual debugger &amp;amp; tracing&lt;/li&gt; 
 &lt;li&gt;✅ Multi-language support&lt;/li&gt; 
 &lt;li&gt;✅ Event-driven architecture&lt;/li&gt; 
 &lt;li&gt;✅ Zero configuration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/new-workbench.png" alt="new-workbench" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📖 &lt;strong&gt;&lt;a href="https://motia.dev/docs/getting-started/quick-start"&gt;Full tutorial in our docs →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🎯 Step Types&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Trigger&lt;/th&gt; 
   &lt;th&gt;Use Case&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;api&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;HTTP Request&lt;/td&gt; 
   &lt;td&gt;REST endpoints&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;event&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Topic subscription&lt;/td&gt; 
   &lt;td&gt;Background processing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;cron&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Schedule&lt;/td&gt; 
   &lt;td&gt;Recurring jobs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;noop&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Manual&lt;/td&gt; 
   &lt;td&gt;External processes&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📖 &lt;strong&gt;&lt;a href="https://motia.dev/docs/concepts/steps"&gt;Learn more about Steps →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎯 Examples&lt;/h2&gt; 
&lt;h3&gt;🏆 &lt;strong&gt;&lt;a href="https://chessarena.ai"&gt;ChessArena.ai&lt;/a&gt;&lt;/strong&gt; - Full-Featured Production App&lt;/h3&gt; 
&lt;p&gt;A complete chess platform benchmarking LLM performance with real-time evaluation.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://chessarena.ai"&gt;Live Website →&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://github.com/MotiaDev/chessarena-ai"&gt;Source Code →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src="https://github.com/MotiaDev/chessarena-ai/raw/main/public/images/chessarena.gif?raw=true" alt="ChessArena.ai in action (raw GIF)" /&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Built from scratch to production deployment, featuring:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔐 &lt;strong&gt;Authentication &amp;amp; user management&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;Multi-agent LLM evaluation&lt;/strong&gt; (OpenAI, Claude, Gemini, Grok)&lt;/li&gt; 
 &lt;li&gt;🐍 &lt;strong&gt;Python engine integration&lt;/strong&gt; (Stockfish chess evaluation)&lt;/li&gt; 
 &lt;li&gt;📊 &lt;strong&gt;Real-time streaming&lt;/strong&gt; with live move updates and scoring&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;strong&gt;Modern React UI&lt;/strong&gt; with interactive chess boards&lt;/li&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;Event-driven workflows&lt;/strong&gt; connecting TypeScript APIs to Python processors&lt;/li&gt; 
 &lt;li&gt;📈 &lt;strong&gt;Live leaderboards&lt;/strong&gt; with move-by-move quality scoring&lt;/li&gt; 
 &lt;li&gt;🚀 &lt;strong&gt;Production deployment&lt;/strong&gt; on Motia Cloud&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📚 &lt;strong&gt;More Examples&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples"&gt;View all 20+ examples →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/ai-deep-research-agent"&gt;AI Research Agent&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Web research with iterative analysis&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/streaming-ai-chatbot"&gt;Streaming Chatbot&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Real-time AI responses&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/gmail-workflow"&gt;Gmail Automation&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Smart email processing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/github-integration-workflow"&gt;GitHub PR Manager&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Automated PR workflows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/finance-agent"&gt;Finance Agent&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Real-time market analysis&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Features demonstrated:&lt;/strong&gt; Multi-language workflows • Real-time streaming • AI integration • Production deployment&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🌐 Language Support&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🚧 Beta&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Go&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🔄 Soon&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;📚 Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://motia.dev/docs"&gt;📖 Documentation&lt;/a&gt;&lt;/strong&gt; - Complete guides and API reference&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://discord.gg/motia"&gt;💬 Discord&lt;/a&gt;&lt;/strong&gt; - Community support and discussions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia/issues"&gt;🐛 GitHub Issues&lt;/a&gt;&lt;/strong&gt; - Bug reports and feature requests&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/orgs/MotiaDev/projects/2"&gt;🗺️ Roadmap&lt;/a&gt;&lt;/strong&gt; - Upcoming features and progress&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚧 Roadmap&lt;/h2&gt; 
&lt;p&gt;We have a public roadmap for Motia, you can view it &lt;a href="https://github.com/orgs/MotiaDev/projects/2/views/4"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Feel free to add comments to the issues, or create a new issue if you have a feature request.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Link&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python Types&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/485"&gt;#485&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Python types&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Streams: RBAC&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/495"&gt;#495&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for RBAC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Streams: Workbench UI&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/497"&gt;#497&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Workbench UI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Queue Strategies&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/476"&gt;#476&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Queue Strategies&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Reactive Steps&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/477"&gt;#477&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Reactive Steps&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Point in time triggers&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/480"&gt;#480&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Point in time triggers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Workbench plugins&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/481"&gt;#481&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Workbench plugins&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rewrite our Core in either Go or Rust&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/482"&gt;#482&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Rewrite our Core in either Go or Rust&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Decrease deployment time&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/483"&gt;#483&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Decrease deployment time&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Built-in database support&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/484"&gt;#484&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for built-in database&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Check our &lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia/raw/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;&lt;/strong&gt; to get started.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://motia.dev"&gt;🚀 Get Started&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href="https://motia.dev/docs"&gt;📖 Docs&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href="https://discord.gg/motia"&gt;💬 Discord&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://www.star-history.com/#motiadev/motia&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=motiadev/motia&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;sub&gt;⭐ &lt;strong&gt;Star us if you find Motia useful!&lt;/strong&gt;&lt;/sub&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>vuejs/vitepress</title>
      <link>https://github.com/vuejs/vitepress</link>
      <description>&lt;p&gt;Vite &amp; Vue powered static site generator.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VitePress 📝💨&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/vuejs/vitepress/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/vuejs/vitepress/actions/workflows/test.yml/badge.svg?branch=main" alt="test" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/vitepress/v/next"&gt;&lt;img src="https://img.shields.io/npm/v/vitepress/next" alt="npm" /&gt;&lt;/a&gt; &lt;a href="https://nightly.akryum.dev/vuejs/vitepress"&gt;&lt;img src="https://img.shields.io/badge/nightly-releases-orange" alt="nightly releases" /&gt;&lt;/a&gt; &lt;a href="https://chat.vuejs.org"&gt;&lt;img src="https://img.shields.io/badge/chat-discord-blue?logo=discord" alt="chat" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;VitePress is a Vue-powered static site generator and a spiritual successor to &lt;a href="https://vuepress.vuejs.org"&gt;VuePress&lt;/a&gt;, built on top of &lt;a href="https://github.com/vitejs/vite"&gt;Vite&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To check out docs, visit &lt;a href="https://vitepress.dev"&gt;vitepress.dev&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;Detailed changes for each release are documented in the &lt;a href="https://github.com/vuejs/vitepress/raw/main/CHANGELOG.md"&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Please make sure to read the &lt;a href="https://github.com/vuejs/vitepress/raw/main/.github/contributing.md"&gt;Contributing Guide&lt;/a&gt; before making a pull request.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/vuejs/vitepress/raw/main/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2019-present, Yuxi (Evan) You&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sindresorhus/type-fest</title>
      <link>https://github.com/sindresorhus/type-fest</link>
      <description>&lt;p&gt;A collection of essential TypeScript types&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;img src="https://raw.githubusercontent.com/sindresorhus/type-fest/main/media/logo.svg?sanitize=true" alt="type-fest" height="300" /&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;b&gt;A collection of essential TypeScript types&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
 &lt;div align="center"&gt; 
  &lt;p&gt; &lt;/p&gt;
  &lt;p&gt; &lt;sup&gt; &lt;a href="https://github.com/sponsors/sindresorhus"&gt;Sindre Sorhus' open source work is supported by the community&lt;/a&gt; &lt;/sup&gt; &lt;/p&gt; 
  &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
  &lt;br /&gt; 
  &lt;br /&gt; 
  &lt;a href="https://nitric.io/?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=sindresorhus&amp;amp;utm_source=github"&gt; 
   &lt;div&gt; 
    &lt;img width="230" src="https://sindresorhus.com/assets/thanks/nitric-logo.svg?sanitize=true" alt="nitric logo" /&gt; 
   &lt;/div&gt; &lt;b&gt;Effortless backends with infrastructure from code&lt;/b&gt; 
   &lt;div&gt; 
    &lt;sup&gt;An open-source framework that supports any programming language, cloud provider, or deployment automation tool.&lt;/sup&gt; 
   &lt;/div&gt; &lt;/a&gt; 
  &lt;p&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://giphy.com/gifs/illustration-rainbow-unicorn-26AHG5KGFxSkUWw1i"&gt;&lt;img src="https://img.shields.io/badge/unicorn-approved-ff69b4.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/type-fest?activeTab=dependents"&gt;&lt;img src="https://badgen.net/npm/dependents/type-fest" alt="npm dependents" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/type-fest"&gt;&lt;img src="https://badgen.net/npm/dt/type-fest" alt="npm downloads" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Many of the types here should have been built-in. You can help by suggesting some of them to the &lt;a href="https://github.com/Microsoft/TypeScript/raw/main/CONTRIBUTING.md"&gt;TypeScript project&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Either add this package as a dependency or copy-paste the needed types. No credit required. 👌&lt;/p&gt; 
&lt;p&gt;PR welcome for additional commonly needed types and docs improvements. Read the &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/.github/contributing.md"&gt;contributing guidelines&lt;/a&gt; first.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Help wanted with reviewing &lt;a href="https://github.com/sindresorhus/type-fest/issues"&gt;proposals&lt;/a&gt; and &lt;a href="https://github.com/sindresorhus/type-fest/pulls"&gt;pull requests&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install type-fest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Requires TypeScript &amp;gt;=5.9, &lt;a href="https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c"&gt;ESM&lt;/a&gt;, and &lt;a href="https://www.typescriptlang.org/tsconfig#strict"&gt;&lt;code&gt;{strict: true}&lt;/code&gt;&lt;/a&gt; in your tsconfig.&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This readme shows the current development version. For docs about the latest version, see the &lt;a href="https://www.npmjs.com/package/type-fest"&gt;npm page&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import type {Except} from 'type-fest';

type Foo = {
	unicorn: string;
	rainbow: boolean;
};

type FooWithoutRainbow = Except&amp;lt;Foo, 'rainbow'&amp;gt;;
//=&amp;gt; {unicorn: string}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;p&gt;Click the type names for complete docs.&lt;/p&gt; 
&lt;h3&gt;Basic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/primitive.d.ts"&gt;&lt;code&gt;Primitive&lt;/code&gt;&lt;/a&gt; - Matches any &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Primitive"&gt;primitive value&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/basic.d.ts"&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; - Matches a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes"&gt;&lt;code&gt;class&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/basic.d.ts"&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; - Matches a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes"&gt;&lt;code&gt;class&lt;/code&gt; constructor&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/basic.d.ts"&gt;&lt;code&gt;AbstractClass&lt;/code&gt;&lt;/a&gt; - Matches an &lt;a href="https://www.typescriptlang.org/docs/handbook/2/classes.html#abstract-classes-and-members"&gt;&lt;code&gt;abstract class&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/basic.d.ts"&gt;&lt;code&gt;AbstractConstructor&lt;/code&gt;&lt;/a&gt; - Matches an &lt;a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-2.html#abstract-construct-signatures"&gt;&lt;code&gt;abstract class&lt;/code&gt;&lt;/a&gt; constructor.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/typed-array.d.ts"&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; - Matches any &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray"&gt;typed array&lt;/a&gt;, like &lt;code&gt;Uint8Array&lt;/code&gt; or &lt;code&gt;Float64Array&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/globals/observable-like.d.ts"&gt;&lt;code&gt;ObservableLike&lt;/code&gt;&lt;/a&gt; - Matches a value that is like an &lt;a href="https://github.com/tc39/proposal-observable"&gt;Observable&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/characters.d.ts"&gt;&lt;code&gt;LowercaseLetter&lt;/code&gt;&lt;/a&gt; - Matches any lowercase letter in the basic Latin alphabet (a-z).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/characters.d.ts"&gt;&lt;code&gt;UppercaseLetter&lt;/code&gt;&lt;/a&gt; - Matches any uppercase letter in the basic Latin alphabet (A-Z).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/characters.d.ts"&gt;&lt;code&gt;DigitCharacter&lt;/code&gt;&lt;/a&gt; - Matches any digit as a string ('0'-'9').&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/characters.d.ts"&gt;&lt;code&gt;Alphanumeric&lt;/code&gt;&lt;/a&gt; - Matches any lowercase letter (a-z), uppercase letter (A-Z), or digit ('0'-'9') in the basic Latin alphabet.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Utilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/empty-object.d.ts"&gt;&lt;code&gt;EmptyObject&lt;/code&gt;&lt;/a&gt; - Represents a strictly empty plain object, the &lt;code&gt;{}&lt;/code&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/non-empty-object.d.ts"&gt;&lt;code&gt;NonEmptyObject&lt;/code&gt;&lt;/a&gt; - Represents an object with at least 1 non-optional key.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/unknown-record.d.ts"&gt;&lt;code&gt;UnknownRecord&lt;/code&gt;&lt;/a&gt; - Represents an object with &lt;code&gt;unknown&lt;/code&gt; value. You probably want this instead of &lt;code&gt;{}&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/unknown-array.d.ts"&gt;&lt;code&gt;UnknownArray&lt;/code&gt;&lt;/a&gt; - Represents an array with &lt;code&gt;unknown&lt;/code&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/unknown-map.d.ts"&gt;&lt;code&gt;UnknownMap&lt;/code&gt;&lt;/a&gt; - Represents a map with &lt;code&gt;unknown&lt;/code&gt; key and value.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/unknown-set.d.ts"&gt;&lt;code&gt;UnknownSet&lt;/code&gt;&lt;/a&gt; - Represents a set with &lt;code&gt;unknown&lt;/code&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/except.d.ts"&gt;&lt;code&gt;Except&lt;/code&gt;&lt;/a&gt; - Create a type from an object type without certain keys. This is a stricter version of &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"&gt;&lt;code&gt;Omit&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/writable.d.ts"&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; - Create a type that strips &lt;code&gt;readonly&lt;/code&gt; from the given type. Inverse of &lt;code&gt;Readonly&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/writable-deep.d.ts"&gt;&lt;code&gt;WritableDeep&lt;/code&gt;&lt;/a&gt; - Create a deeply mutable version of an &lt;code&gt;object&lt;/code&gt;/&lt;code&gt;ReadonlyMap&lt;/code&gt;/&lt;code&gt;ReadonlySet&lt;/code&gt;/&lt;code&gt;ReadonlyArray&lt;/code&gt; type. The inverse of &lt;code&gt;ReadonlyDeep&amp;lt;T&amp;gt;&lt;/code&gt;. Use &lt;code&gt;Writable&amp;lt;T&amp;gt;&lt;/code&gt; if you only need one level deep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/merge.d.ts"&gt;&lt;code&gt;Merge&lt;/code&gt;&lt;/a&gt; - Merge two types into a new type. Keys of the second type overrides keys of the first type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/merge-deep.d.ts"&gt;&lt;code&gt;MergeDeep&lt;/code&gt;&lt;/a&gt; - Merge two objects or two arrays/tuples recursively into a new type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/merge-exclusive.d.ts"&gt;&lt;code&gt;MergeExclusive&lt;/code&gt;&lt;/a&gt; - Create a type that has mutually exclusive keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/override-properties.d.ts"&gt;&lt;code&gt;OverrideProperties&lt;/code&gt;&lt;/a&gt; - Override only existing properties of the given type. Similar to &lt;code&gt;Merge&lt;/code&gt;, but enforces that the original type has the properties you want to override.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/require-at-least-one.d.ts"&gt;&lt;code&gt;RequireAtLeastOne&lt;/code&gt;&lt;/a&gt; - Create a type that requires at least one of the given keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/require-exactly-one.d.ts"&gt;&lt;code&gt;RequireExactlyOne&lt;/code&gt;&lt;/a&gt; - Create a type that requires exactly a single key of the given keys and disallows more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/require-all-or-none.d.ts"&gt;&lt;code&gt;RequireAllOrNone&lt;/code&gt;&lt;/a&gt; - Create a type that requires all of the given keys or none of the given keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/require-one-or-none.d.ts"&gt;&lt;code&gt;RequireOneOrNone&lt;/code&gt;&lt;/a&gt; - Create a type that requires exactly a single key of the given keys and disallows more, or none of the given keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/single-key-object.d.ts"&gt;&lt;code&gt;SingleKeyObject&lt;/code&gt;&lt;/a&gt; - Create a type that only accepts an object with a single key.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/required-deep.d.ts"&gt;&lt;code&gt;RequiredDeep&lt;/code&gt;&lt;/a&gt; - Create a deeply required version of another type. Use &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#requiredtype"&gt;&lt;code&gt;Required&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; if you only need one level deep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/pick-deep.d.ts"&gt;&lt;code&gt;PickDeep&lt;/code&gt;&lt;/a&gt; - Pick properties from a deeply-nested object. Use &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"&gt;&lt;code&gt;Pick&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; if you only need one level deep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/omit-deep.d.ts"&gt;&lt;code&gt;OmitDeep&lt;/code&gt;&lt;/a&gt; - Omit properties from a deeply-nested object. Use &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"&gt;&lt;code&gt;Omit&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; if you only need one level deep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/omit-index-signature.d.ts"&gt;&lt;code&gt;OmitIndexSignature&lt;/code&gt;&lt;/a&gt; - Omit any index signatures from the given object type, leaving only explicitly defined properties.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/pick-index-signature.d.ts"&gt;&lt;code&gt;PickIndexSignature&lt;/code&gt;&lt;/a&gt; - Pick only index signatures from the given object type, leaving out all explicitly defined properties.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/partial-deep.d.ts"&gt;&lt;code&gt;PartialDeep&lt;/code&gt;&lt;/a&gt; - Create a deeply optional version of another type. Use &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"&gt;&lt;code&gt;Partial&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; if you only need one level deep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/partial-on-undefined-deep.d.ts"&gt;&lt;code&gt;PartialOnUndefinedDeep&lt;/code&gt;&lt;/a&gt; - Create a deep version of another type where all keys accepting &lt;code&gt;undefined&lt;/code&gt; type are set to optional.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/undefined-on-partial-deep.d.ts"&gt;&lt;code&gt;UndefinedOnPartialDeep&lt;/code&gt;&lt;/a&gt; - Create a deep version of another type where all optional keys are set to also accept &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/readonly-deep.d.ts"&gt;&lt;code&gt;ReadonlyDeep&lt;/code&gt;&lt;/a&gt; - Create a deeply immutable version of an &lt;code&gt;object&lt;/code&gt;/&lt;code&gt;Map&lt;/code&gt;/&lt;code&gt;Set&lt;/code&gt;/&lt;code&gt;Array&lt;/code&gt; type. Use &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#readonlytype"&gt;&lt;code&gt;Readonly&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; if you only need one level deep.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/literal-union.d.ts"&gt;&lt;code&gt;LiteralUnion&lt;/code&gt;&lt;/a&gt; - Create a union type by combining primitive types and literal types without sacrificing auto-completion in IDEs for the literal type part of the union. Workaround for &lt;a href="https://github.com/Microsoft/TypeScript/issues/29729"&gt;Microsoft/TypeScript#29729&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tagged.d.ts"&gt;&lt;code&gt;Tagged&lt;/code&gt;&lt;/a&gt; - Create a &lt;a href="https://medium.com/@KevinBGreene/surviving-the-typescript-ecosystem-branding-and-type-tagging-6cf6e516523d"&gt;tagged type&lt;/a&gt; that can support &lt;a href="https://github.com/sindresorhus/type-fest/issues/665"&gt;multiple tags&lt;/a&gt; and &lt;a href="https://medium.com/@ethanresnick/advanced-typescript-tagged-types-improved-with-type-level-metadata-5072fc125fcf"&gt;per-tag metadata&lt;/a&gt;. (This replaces the previous &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tagged.d.ts"&gt;&lt;code&gt;Opaque&lt;/code&gt;&lt;/a&gt; type, which is now deprecated.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tagged.d.ts"&gt;&lt;code&gt;UnwrapTagged&lt;/code&gt;&lt;/a&gt; - Get the untagged portion of a tagged type created with &lt;code&gt;Tagged&lt;/code&gt;. (This replaces the previous &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tagged.d.ts"&gt;&lt;code&gt;UnwrapOpaque&lt;/code&gt;&lt;/a&gt; type, which is now deprecated.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/invariant-of.d.ts"&gt;&lt;code&gt;InvariantOf&lt;/code&gt;&lt;/a&gt; - Create an &lt;a href="https://basarat.gitbook.io/typescript/type-system/type-compatibility#footnote-invariance"&gt;invariant type&lt;/a&gt;, which is a type that does not accept supertypes and subtypes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-optional.d.ts"&gt;&lt;code&gt;SetOptional&lt;/code&gt;&lt;/a&gt; - Create a type that makes the given keys optional.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-readonly.d.ts"&gt;&lt;code&gt;SetReadonly&lt;/code&gt;&lt;/a&gt; - Create a type that makes the given keys readonly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-required.d.ts"&gt;&lt;code&gt;SetRequired&lt;/code&gt;&lt;/a&gt; - Create a type that makes the given keys required.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-required-deep.d.ts"&gt;&lt;code&gt;SetRequiredDeep&lt;/code&gt;&lt;/a&gt; - Like &lt;code&gt;SetRequired&lt;/code&gt; except it selects the keys deeply.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-non-nullable.d.ts"&gt;&lt;code&gt;SetNonNullable&lt;/code&gt;&lt;/a&gt; - Create a type that makes the given keys non-nullable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-non-nullable-deep.d.ts"&gt;&lt;code&gt;SetNonNullableDeep&lt;/code&gt;&lt;/a&gt; - Create a type that makes the specified keys non-nullable (removes &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;), supports deeply nested key paths, and leaves all other keys unchanged.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/value-of.d.ts"&gt;&lt;code&gt;ValueOf&lt;/code&gt;&lt;/a&gt; - Create a union of the given object's values, and optionally specify which keys to get the values from.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/conditional-keys.d.ts"&gt;&lt;code&gt;ConditionalKeys&lt;/code&gt;&lt;/a&gt; - Extract keys from a shape where values extend the given &lt;code&gt;Condition&lt;/code&gt; type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/conditional-pick.d.ts"&gt;&lt;code&gt;ConditionalPick&lt;/code&gt;&lt;/a&gt; - Like &lt;code&gt;Pick&lt;/code&gt; except it selects properties from a shape where the values extend the given &lt;code&gt;Condition&lt;/code&gt; type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/conditional-pick-deep.d.ts"&gt;&lt;code&gt;ConditionalPickDeep&lt;/code&gt;&lt;/a&gt; - Like &lt;code&gt;ConditionalPick&lt;/code&gt; except that it selects the properties deeply.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/conditional-except.d.ts"&gt;&lt;code&gt;ConditionalExcept&lt;/code&gt;&lt;/a&gt; - Like &lt;code&gt;Omit&lt;/code&gt; except it removes properties from a shape where the values extend the given &lt;code&gt;Condition&lt;/code&gt; type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/union-to-intersection.d.ts"&gt;&lt;code&gt;UnionToIntersection&lt;/code&gt;&lt;/a&gt; - Convert a union type to an intersection type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/literal-to-primitive.d.ts"&gt;&lt;code&gt;LiteralToPrimitive&lt;/code&gt;&lt;/a&gt; - Convert a &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types"&gt;literal type&lt;/a&gt; to the &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/primitive.d.ts"&gt;primitive type&lt;/a&gt; it belongs to.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/literal-to-primitive-deep.d.ts"&gt;&lt;code&gt;LiteralToPrimitiveDeep&lt;/code&gt;&lt;/a&gt; - Like &lt;code&gt;LiteralToPrimitive&lt;/code&gt; except it converts literal types inside an object or array deeply.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/stringified.d.ts"&gt;&lt;code&gt;Stringified&lt;/code&gt;&lt;/a&gt; - Create a type with the keys of the given type changed to &lt;code&gt;string&lt;/code&gt; type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/iterable-element.d.ts"&gt;&lt;code&gt;IterableElement&lt;/code&gt;&lt;/a&gt; - Get the element type of an &lt;code&gt;Iterable&lt;/code&gt;/&lt;code&gt;AsyncIterable&lt;/code&gt;. For example, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;Map&lt;/code&gt;, generator, stream, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/entry.d.ts"&gt;&lt;code&gt;Entry&lt;/code&gt;&lt;/a&gt; - Create a type that represents the type of an entry of a collection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/entries.d.ts"&gt;&lt;code&gt;Entries&lt;/code&gt;&lt;/a&gt; - Create a type that represents the type of the entries of a collection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-return-type.d.ts"&gt;&lt;code&gt;SetReturnType&lt;/code&gt;&lt;/a&gt; - Create a function type with a return type of your choice and the same parameters as the given function type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-parameter-type.d.ts"&gt;&lt;code&gt;SetParameterType&lt;/code&gt;&lt;/a&gt; - Create a function that replaces some parameters with the given parameters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/simplify.d.ts"&gt;&lt;code&gt;Simplify&lt;/code&gt;&lt;/a&gt; - Useful to flatten the type output to improve type hints shown in editors. And also to transform an interface into a type to aide with assignability.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/simplify-deep.d.ts"&gt;&lt;code&gt;SimplifyDeep&lt;/code&gt;&lt;/a&gt; - Deeply simplifies an object type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/get.d.ts"&gt;&lt;code&gt;Get&lt;/code&gt;&lt;/a&gt; - Get a deeply-nested property from an object using a key path, like &lt;a href="https://lodash.com/docs/latest#get"&gt;Lodash's &lt;code&gt;.get()&lt;/code&gt;&lt;/a&gt; function.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/key-as-string.d.ts"&gt;&lt;code&gt;KeyAsString&lt;/code&gt;&lt;/a&gt; - Get keys of the given type as strings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/schema.d.ts"&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; - Create a deep version of another object type where property values are recursively replaced into a given value type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/exact.d.ts"&gt;&lt;code&gt;Exact&lt;/code&gt;&lt;/a&gt; - Create a type that does not allow extra properties.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/keys-of-union.d.ts"&gt;&lt;code&gt;KeysOfUnion&lt;/code&gt;&lt;/a&gt; - Create a union of all keys from a given type, even those exclusive to specific union members.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/optional-keys-of.d.ts"&gt;&lt;code&gt;OptionalKeysOf&lt;/code&gt;&lt;/a&gt; - Extract all optional keys from the given type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/has-optional-keys.d.ts"&gt;&lt;code&gt;HasOptionalKeys&lt;/code&gt;&lt;/a&gt; - Create a &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; type depending on whether the given type has any optional fields.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/required-keys-of.d.ts"&gt;&lt;code&gt;RequiredKeysOf&lt;/code&gt;&lt;/a&gt; - Extract all required keys from the given type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/has-required-keys.d.ts"&gt;&lt;code&gt;HasRequiredKeys&lt;/code&gt;&lt;/a&gt; - Create a &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; type depending on whether the given type has any required fields.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/readonly-keys-of.d.ts"&gt;&lt;code&gt;ReadonlyKeysOf&lt;/code&gt;&lt;/a&gt; - Extract all readonly keys from the given type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/has-readonly-keys.d.ts"&gt;&lt;code&gt;HasReadonlyKeys&lt;/code&gt;&lt;/a&gt; - Create a &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; type depending on whether the given type has any readonly fields.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/writable-keys-of.d.ts"&gt;&lt;code&gt;WritableKeysOf&lt;/code&gt;&lt;/a&gt; - Extract all writable (non-readonly) keys from the given type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/has-writable-keys.d.ts"&gt;&lt;code&gt;HasWritableKeys&lt;/code&gt;&lt;/a&gt; - Create a &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; type depending on whether the given type has any writable fields.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/spread.d.ts"&gt;&lt;code&gt;Spread&lt;/code&gt;&lt;/a&gt; - Mimic the type inferred by TypeScript when merging two objects or two arrays/tuples using the spread syntax.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-equal.d.ts"&gt;&lt;code&gt;IsEqual&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the two given types are equal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tagged-union.d.ts"&gt;&lt;code&gt;TaggedUnion&lt;/code&gt;&lt;/a&gt; - Create a union of types that share a common discriminant property.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/int-range.d.ts"&gt;&lt;code&gt;IntRange&lt;/code&gt;&lt;/a&gt; - Generate a union of numbers (includes the start and excludes the end).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/int-closed-range.d.ts"&gt;&lt;code&gt;IntClosedRange&lt;/code&gt;&lt;/a&gt; - Generate a union of numbers (includes the start and the end).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/array-indices.d.ts"&gt;&lt;code&gt;ArrayIndices&lt;/code&gt;&lt;/a&gt; - Provides valid indices for a constant array or tuple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/array-values.d.ts"&gt;&lt;code&gt;ArrayValues&lt;/code&gt;&lt;/a&gt; - Provides all values for a constant array or tuple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/array-splice.d.ts"&gt;&lt;code&gt;ArraySplice&lt;/code&gt;&lt;/a&gt; - Creates a new array type by adding or removing elements at a specified index range in the original array.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/array-tail.d.ts"&gt;&lt;code&gt;ArrayTail&lt;/code&gt;&lt;/a&gt; - Extracts the type of an array or tuple minus the first element.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-field-type.d.ts"&gt;&lt;code&gt;SetFieldType&lt;/code&gt;&lt;/a&gt; - Create a type that changes the type of the given keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/paths.d.ts"&gt;&lt;code&gt;Paths&lt;/code&gt;&lt;/a&gt; - Generate a union of all possible paths to properties in the given object.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/shared-union-fields.d.ts"&gt;&lt;code&gt;SharedUnionFields&lt;/code&gt;&lt;/a&gt; - Create a type with shared fields from a union of object types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/shared-union-fields-deep.d.ts"&gt;&lt;code&gt;SharedUnionFieldsDeep&lt;/code&gt;&lt;/a&gt; - Create a type with shared fields from a union of object types, deeply traversing nested structures.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/all-union-fields.d.ts"&gt;&lt;code&gt;AllUnionFields&lt;/code&gt;&lt;/a&gt; - Create a type with all fields from a union of object types.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/distributed-omit.d.ts"&gt;&lt;code&gt;DistributedOmit&lt;/code&gt;&lt;/a&gt; - Omits keys from a type, distributing the operation over a union.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/distributed-pick.d.ts"&gt;&lt;code&gt;DistributedPick&lt;/code&gt;&lt;/a&gt; - Picks keys from a type, distributing the operation over a union.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/and.d.ts"&gt;&lt;code&gt;And&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether two given types are both true.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/or.d.ts"&gt;&lt;code&gt;Or&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether either of two given types are true.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/all-extend.d.ts"&gt;&lt;code&gt;AllExtend&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether every element in an array type extends another type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/non-empty-tuple.d.ts"&gt;&lt;code&gt;NonEmptyTuple&lt;/code&gt;&lt;/a&gt; - Matches any non-empty tuple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/non-empty-string.d.ts"&gt;&lt;code&gt;NonEmptyString&lt;/code&gt;&lt;/a&gt; - Matches any non-empty string.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/find-global-type.d.ts"&gt;&lt;code&gt;FindGlobalType&lt;/code&gt;&lt;/a&gt; - Tries to find the type of a global with the given name.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/find-global-type.d.ts"&gt;&lt;code&gt;FindGlobalInstanceType&lt;/code&gt;&lt;/a&gt; - Tries to find one or more types from their globally-defined constructors.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/conditional-simplify.d.ts"&gt;&lt;code&gt;ConditionalSimplify&lt;/code&gt;&lt;/a&gt; - Simplifies a type while including and/or excluding certain types from being simplified.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/conditional-simplify-deep.d.ts"&gt;&lt;code&gt;ConditionalSimplifyDeep&lt;/code&gt;&lt;/a&gt; - Recursively simplifies a type while including and/or excluding certain types from being simplified.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Type Guard&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/if.d.ts"&gt;&lt;code&gt;If&lt;/code&gt;&lt;/a&gt; - An if-else-like type that resolves depending on whether the given &lt;code&gt;boolean&lt;/code&gt; type is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-literal.d.ts"&gt;&lt;code&gt;IsLiteral&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is a &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types"&gt;literal type&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-literal.d.ts"&gt;&lt;code&gt;IsStringLiteral&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is a &lt;code&gt;string&lt;/code&gt; &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types"&gt;literal type&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-literal.d.ts"&gt;&lt;code&gt;IsNumericLiteral&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is a &lt;code&gt;number&lt;/code&gt; or &lt;code&gt;bigint&lt;/code&gt; &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types"&gt;literal type&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-literal.d.ts"&gt;&lt;code&gt;IsBooleanLiteral&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is a &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types"&gt;literal type&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-literal.d.ts"&gt;&lt;code&gt;IsSymbolLiteral&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is a &lt;code&gt;symbol&lt;/code&gt; &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#literal-types"&gt;literal type&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-any.d.ts"&gt;&lt;code&gt;IsAny&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is &lt;code&gt;any&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-never.d.ts"&gt;&lt;code&gt;IsNever&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is &lt;code&gt;never&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-unknown.d.ts"&gt;&lt;code&gt;IsUnknown&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is &lt;code&gt;unknown&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/empty-object.d.ts"&gt;&lt;code&gt;IsEmptyObject&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the type is strictly equal to an empty plain object, the &lt;code&gt;{}&lt;/code&gt; value.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-null.d.ts"&gt;&lt;code&gt;IsNull&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-undefined.d.ts"&gt;&lt;code&gt;IsUndefined&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-tuple.d.ts"&gt;&lt;code&gt;IsTuple&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given array is a tuple.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-union.d.ts"&gt;&lt;code&gt;IsUnion&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type is a union.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-lowercase.d.ts"&gt;&lt;code&gt;IsLowercase&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given string literal is lowercase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-uppercase.d.ts"&gt;&lt;code&gt;IsUppercase&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given string literal is uppercase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-optional.d.ts"&gt;&lt;code&gt;IsOptional&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type includes &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-nullable.d.ts"&gt;&lt;code&gt;IsNullable&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given type includes &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-optional-key-of.d.ts"&gt;&lt;code&gt;IsOptionalKeyOf&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given key is an optional key of type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-required-key-of.d.ts"&gt;&lt;code&gt;IsRequiredKeyOf&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given key is a required key of type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-readonly-key-of.d.ts"&gt;&lt;code&gt;IsReadonlyKeyOf&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given key is a readonly key of type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-writable-key-of.d.ts"&gt;&lt;code&gt;IsWritableKeyOf&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given key is a writable key of type.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;JSON&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/jsonify.d.ts"&gt;&lt;code&gt;Jsonify&lt;/code&gt;&lt;/a&gt; - Transform a type to one that is assignable to the &lt;code&gt;JsonValue&lt;/code&gt; type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/jsonifiable.d.ts"&gt;&lt;code&gt;Jsonifiable&lt;/code&gt;&lt;/a&gt; - Matches a value that can be losslessly converted to JSON.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/json-value.d.ts"&gt;&lt;code&gt;JsonPrimitive&lt;/code&gt;&lt;/a&gt; - Matches a JSON primitive.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/json-value.d.ts"&gt;&lt;code&gt;JsonObject&lt;/code&gt;&lt;/a&gt; - Matches a JSON object.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/json-value.d.ts"&gt;&lt;code&gt;JsonArray&lt;/code&gt;&lt;/a&gt; - Matches a JSON array.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/json-value.d.ts"&gt;&lt;code&gt;JsonValue&lt;/code&gt;&lt;/a&gt; - Matches any valid JSON value.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Structured clone&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/structured-cloneable.d.ts"&gt;&lt;code&gt;StructuredCloneable&lt;/code&gt;&lt;/a&gt; - Matches a value that can be losslessly cloned using &lt;code&gt;structuredClone&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Async&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/promisable.d.ts"&gt;&lt;code&gt;Promisable&lt;/code&gt;&lt;/a&gt; - Create a type that represents either the value or the value wrapped in &lt;code&gt;PromiseLike&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/async-return-type.d.ts"&gt;&lt;code&gt;AsyncReturnType&lt;/code&gt;&lt;/a&gt; - Unwrap the return type of a function that returns a &lt;code&gt;Promise&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/asyncify.d.ts"&gt;&lt;code&gt;Asyncify&lt;/code&gt;&lt;/a&gt; - Create an async version of the given function type.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;String&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/trim.d.ts"&gt;&lt;code&gt;Trim&lt;/code&gt;&lt;/a&gt; - Remove leading and trailing spaces from a string.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/split.d.ts"&gt;&lt;code&gt;Split&lt;/code&gt;&lt;/a&gt; - Represents an array of strings split using a given character or character set.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/words.d.ts"&gt;&lt;code&gt;Words&lt;/code&gt;&lt;/a&gt; - Represents an array of strings split using a heuristic for detecting words.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/replace.d.ts"&gt;&lt;code&gt;Replace&lt;/code&gt;&lt;/a&gt; - Represents a string with some or all matches replaced by a replacement.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/string-slice.d.ts"&gt;&lt;code&gt;StringSlice&lt;/code&gt;&lt;/a&gt; - Returns a string slice of a given range, just like &lt;code&gt;String#slice()&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/string-repeat.d.ts"&gt;&lt;code&gt;StringRepeat&lt;/code&gt;&lt;/a&gt; - Returns a new string which contains the specified number of copies of a given string, just like &lt;code&gt;String#repeat()&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/remove-prefix.d.ts"&gt;&lt;code&gt;RemovePrefix&lt;/code&gt;&lt;/a&gt; - Removes the specified prefix from the start of a string.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Array&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/arrayable.d.ts"&gt;&lt;code&gt;Arrayable&lt;/code&gt;&lt;/a&gt; - Create a type that represents either the value or an array of the value.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/includes.d.ts"&gt;&lt;code&gt;Includes&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given array includes the given item.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/join.d.ts"&gt;&lt;code&gt;Join&lt;/code&gt;&lt;/a&gt; - Join an array of strings and/or numbers using the given string as a delimiter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/array-slice.d.ts"&gt;&lt;code&gt;ArraySlice&lt;/code&gt;&lt;/a&gt; - Returns an array slice of a given range, just like &lt;code&gt;Array#slice()&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/last-array-element.d.ts"&gt;&lt;code&gt;LastArrayElement&lt;/code&gt;&lt;/a&gt; - Extracts the type of the last element of an array.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/fixed-length-array.d.ts"&gt;&lt;code&gt;FixedLengthArray&lt;/code&gt;&lt;/a&gt; - Create a type that represents an array of the given type and length.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/multidimensional-array.d.ts"&gt;&lt;code&gt;MultidimensionalArray&lt;/code&gt;&lt;/a&gt; - Create a type that represents a multidimensional array of the given type and dimensions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/multidimensional-readonly-array.d.ts"&gt;&lt;code&gt;MultidimensionalReadonlyArray&lt;/code&gt;&lt;/a&gt; - Create a type that represents a multidimensional readonly array of the given type and dimensions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/readonly-tuple.d.ts"&gt;&lt;code&gt;ReadonlyTuple&lt;/code&gt;&lt;/a&gt; - Create a type that represents a read-only tuple of the given type and length.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tuple-to-union.d.ts"&gt;&lt;code&gt;TupleToUnion&lt;/code&gt;&lt;/a&gt; - Convert a tuple/array into a union type of its elements.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/union-to-tuple.d.ts"&gt;&lt;code&gt;UnionToTuple&lt;/code&gt;&lt;/a&gt; - Convert a union type into an unordered tuple type of its elements.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tuple-to-object.d.ts"&gt;&lt;code&gt;TupleToObject&lt;/code&gt;&lt;/a&gt; - Transforms a tuple into an object, mapping each tuple index to its corresponding type as a key-value pair.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Numeric&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;PositiveInfinity&lt;/code&gt;&lt;/a&gt; - Matches the hidden &lt;code&gt;Infinity&lt;/code&gt; type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;NegativeInfinity&lt;/code&gt;&lt;/a&gt; - Matches the hidden &lt;code&gt;-Infinity&lt;/code&gt; type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;Finite&lt;/code&gt;&lt;/a&gt; - A finite &lt;code&gt;number&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; - A &lt;code&gt;number&lt;/code&gt; that is an integer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; - A &lt;code&gt;number&lt;/code&gt; that is not an integer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;NegativeFloat&lt;/code&gt;&lt;/a&gt; - A negative (&lt;code&gt;-∞ &amp;lt; x &amp;lt; 0&lt;/code&gt;) &lt;code&gt;number&lt;/code&gt; that is not an integer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;Negative&lt;/code&gt;&lt;/a&gt; - A negative &lt;code&gt;number&lt;/code&gt;/&lt;code&gt;bigint&lt;/code&gt; (&lt;code&gt;-∞ &amp;lt; x &amp;lt; 0&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;NonNegative&lt;/code&gt;&lt;/a&gt; - A non-negative &lt;code&gt;number&lt;/code&gt;/&lt;code&gt;bigint&lt;/code&gt; (&lt;code&gt;0 &amp;lt;= x &amp;lt; ∞&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;NegativeInteger&lt;/code&gt;&lt;/a&gt; - A negative (&lt;code&gt;-∞ &amp;lt; x &amp;lt; 0&lt;/code&gt;) &lt;code&gt;number&lt;/code&gt; that is an integer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;NonNegativeInteger&lt;/code&gt;&lt;/a&gt; - A non-negative (&lt;code&gt;0 &amp;lt;= x &amp;lt; ∞&lt;/code&gt;) &lt;code&gt;number&lt;/code&gt; that is an integer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/numeric.d.ts"&gt;&lt;code&gt;IsNegative&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given number is a negative number.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-float.d.ts"&gt;&lt;code&gt;IsFloat&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given number is a float, like &lt;code&gt;1.5&lt;/code&gt; or &lt;code&gt;-1.5&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/is-integer.d.ts"&gt;&lt;code&gt;IsInteger&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether the given number is a integer, like &lt;code&gt;-5&lt;/code&gt;, &lt;code&gt;1.0&lt;/code&gt; or &lt;code&gt;100&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/greater-than.d.ts"&gt;&lt;code&gt;GreaterThan&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether a given number is greater than another number.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/greater-than-or-equal.d.ts"&gt;&lt;code&gt;GreaterThanOrEqual&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether a given number is greater than or equal to another number.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/less-than.d.ts"&gt;&lt;code&gt;LessThan&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether a given number is less than another number.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/less-than-or-equal.d.ts"&gt;&lt;code&gt;LessThanOrEqual&lt;/code&gt;&lt;/a&gt; - Returns a boolean for whether a given number is less than or equal to another number.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/sum.d.ts"&gt;&lt;code&gt;Sum&lt;/code&gt;&lt;/a&gt; - Returns the sum of two numbers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/subtract.d.ts"&gt;&lt;code&gt;Subtract&lt;/code&gt;&lt;/a&gt; - Returns the difference between two numbers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Change case&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/camel-case.d.ts"&gt;&lt;code&gt;CamelCase&lt;/code&gt;&lt;/a&gt; - Convert a string literal to camel-case (&lt;code&gt;fooBar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/camel-cased-properties.d.ts"&gt;&lt;code&gt;CamelCasedProperties&lt;/code&gt;&lt;/a&gt; - Convert object properties to camel-case (&lt;code&gt;fooBar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/camel-cased-properties-deep.d.ts"&gt;&lt;code&gt;CamelCasedPropertiesDeep&lt;/code&gt;&lt;/a&gt; - Convert object properties to camel-case recursively (&lt;code&gt;fooBar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/kebab-case.d.ts"&gt;&lt;code&gt;KebabCase&lt;/code&gt;&lt;/a&gt; - Convert a string literal to kebab-case (&lt;code&gt;foo-bar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/kebab-cased-properties.d.ts"&gt;&lt;code&gt;KebabCasedProperties&lt;/code&gt;&lt;/a&gt; - Convert a object properties to kebab-case recursively (&lt;code&gt;foo-bar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/kebab-cased-properties-deep.d.ts"&gt;&lt;code&gt;KebabCasedPropertiesDeep&lt;/code&gt;&lt;/a&gt; - Convert object properties to kebab-case (&lt;code&gt;foo-bar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/pascal-case.d.ts"&gt;&lt;code&gt;PascalCase&lt;/code&gt;&lt;/a&gt; - Converts a string literal to pascal-case (&lt;code&gt;FooBar&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/pascal-cased-properties.d.ts"&gt;&lt;code&gt;PascalCasedProperties&lt;/code&gt;&lt;/a&gt; - Converts object properties to pascal-case (&lt;code&gt;FooBar&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/pascal-cased-properties-deep.d.ts"&gt;&lt;code&gt;PascalCasedPropertiesDeep&lt;/code&gt;&lt;/a&gt; - Converts object properties to pascal-case (&lt;code&gt;FooBar&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/snake-case.d.ts"&gt;&lt;code&gt;SnakeCase&lt;/code&gt;&lt;/a&gt; - Convert a string literal to snake-case (&lt;code&gt;foo_bar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/snake-cased-properties.d.ts"&gt;&lt;code&gt;SnakeCasedProperties&lt;/code&gt;&lt;/a&gt; - Convert object properties to snake-case (&lt;code&gt;foo_bar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/snake-cased-properties-deep.d.ts"&gt;&lt;code&gt;SnakeCasedPropertiesDeep&lt;/code&gt;&lt;/a&gt; - Convert object properties to snake-case recursively (&lt;code&gt;foo_bar&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/screaming-snake-case.d.ts"&gt;&lt;code&gt;ScreamingSnakeCase&lt;/code&gt;&lt;/a&gt; - Convert a string literal to screaming-snake-case (&lt;code&gt;FOO_BAR&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/delimiter-case.d.ts"&gt;&lt;code&gt;DelimiterCase&lt;/code&gt;&lt;/a&gt; - Convert a string literal to a custom string delimiter casing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/delimiter-cased-properties.d.ts"&gt;&lt;code&gt;DelimiterCasedProperties&lt;/code&gt;&lt;/a&gt; - Convert object properties to a custom string delimiter casing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/delimiter-cased-properties-deep.d.ts"&gt;&lt;code&gt;DelimiterCasedPropertiesDeep&lt;/code&gt;&lt;/a&gt; - Convert object properties to a custom string delimiter casing recursively.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Miscellaneous&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/global-this.d.ts"&gt;&lt;code&gt;GlobalThis&lt;/code&gt;&lt;/a&gt; - Declare locally scoped properties on &lt;code&gt;globalThis&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/package-json.d.ts"&gt;&lt;code&gt;PackageJson&lt;/code&gt;&lt;/a&gt; - Type for &lt;a href="https://docs.npmjs.com/creating-a-package-json-file"&gt;npm's &lt;code&gt;package.json&lt;/code&gt; file&lt;/a&gt;. It also includes support for &lt;a href="https://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html"&gt;TypeScript Declaration Files&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tsconfig-json.d.ts"&gt;&lt;code&gt;TsConfigJson&lt;/code&gt;&lt;/a&gt; - Type for &lt;a href="https://www.typescriptlang.org/docs/handbook/tsconfig-json.html"&gt;TypeScript's &lt;code&gt;tsconfig.json&lt;/code&gt; file&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Improved built-in&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/extends-strict.d.ts"&gt;&lt;code&gt;ExtendsStrict&lt;/code&gt;&lt;/a&gt; - A stricter, non-distributive version of &lt;code&gt;extends&lt;/code&gt; for checking whether one type is assignable to another.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/extract-strict.d.ts"&gt;&lt;code&gt;ExtractStrict&lt;/code&gt;&lt;/a&gt; - A stricter version of &lt;code&gt;Extract&amp;lt;T, U&amp;gt;&lt;/code&gt; that ensures every member of &lt;code&gt;U&lt;/code&gt; can successfully extract something from &lt;code&gt;T&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/exclude-strict.d.ts"&gt;&lt;code&gt;ExcludeStrict&lt;/code&gt;&lt;/a&gt; - A stricter version of &lt;code&gt;Exclude&amp;lt;T, U&amp;gt;&lt;/code&gt; that ensures every member of &lt;code&gt;U&lt;/code&gt; can successfully exclude something from &lt;code&gt;T&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Declined types&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;If we decline a type addition, we will make sure to document the better solution here.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/pull/7"&gt;&lt;code&gt;Diff&lt;/code&gt; and &lt;code&gt;Spread&lt;/code&gt;&lt;/a&gt; - The pull request author didn't provide any real-world use-cases and the PR went stale. If you think this type is useful, provide some real-world use-cases and we might reconsider.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/issues/33"&gt;&lt;code&gt;Dictionary&lt;/code&gt;&lt;/a&gt; - You only save a few characters (&lt;code&gt;Dictionary&amp;lt;number&amp;gt;&lt;/code&gt; vs &lt;code&gt;Record&amp;lt;string, number&amp;gt;&lt;/code&gt;) from &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"&gt;&lt;code&gt;Record&lt;/code&gt;&lt;/a&gt;, which is more flexible and well-known. Also, you shouldn't use an object as a dictionary. We have &lt;code&gt;Map&lt;/code&gt; in JavaScript now.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/pull/4"&gt;&lt;code&gt;ExtractProperties&lt;/code&gt; and &lt;code&gt;ExtractMethods&lt;/code&gt;&lt;/a&gt; - The types violate the single responsibility principle. Instead, refine your types into more granular type hierarchies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/pull/262"&gt;&lt;code&gt;Url2Json&lt;/code&gt;&lt;/a&gt; - Inferring search parameters from a URL string is a cute idea, but not very useful in practice, since search parameters are usually dynamic and defined separately.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/pull/318"&gt;&lt;code&gt;Nullish&lt;/code&gt;&lt;/a&gt; - The type only saves a couple of characters, not everyone knows what "nullish" means, and I'm also trying to &lt;a href="https://github.com/sindresorhus/meta/discussions/7"&gt;get away from &lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/pull/303"&gt;&lt;code&gt;TitleCase&lt;/code&gt;&lt;/a&gt; - It's not solving a common need and is a better fit for a separate package.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/pull/247"&gt;&lt;code&gt;ExtendOr&lt;/code&gt; and &lt;code&gt;ExtendAnd&lt;/code&gt;&lt;/a&gt; - The benefits don't outweigh having to learn what they mean.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/type-fest/issues/371"&gt;&lt;code&gt;PackageJsonExtras&lt;/code&gt;&lt;/a&gt; - There are too many possible configurations that can be put into &lt;code&gt;package.json&lt;/code&gt;. If you would like to extend &lt;code&gt;PackageJson&lt;/code&gt; to support an additional configuration in your project, please see the &lt;em&gt;Extending existing types&lt;/em&gt; section below.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Alternative type names&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;If you know one of our types by a different name, add it here for discovery.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Prettify&lt;/code&gt;- See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/simplify.d.ts"&gt;&lt;code&gt;Simplify&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Expand&lt;/code&gt;- See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/simplify.d.ts"&gt;&lt;code&gt;Simplify&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PartialBy&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/set-optional.d.ts"&gt;&lt;code&gt;SetOptional&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;RecordDeep&lt;/code&gt;- See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/schema.d.ts"&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Mutable&lt;/code&gt;- See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/writable.d.ts"&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;RequireOnlyOne&lt;/code&gt;, &lt;code&gt;OneOf&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/require-exactly-one.d.ts"&gt;&lt;code&gt;RequireExactlyOne&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AtMostOne&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/require-one-or-none.d.ts"&gt;&lt;code&gt;RequireOneOrNone&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AllKeys&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/keys-of-union.d.ts"&gt;&lt;code&gt;KeysOfUnion&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Branded&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tagged.d.ts"&gt;&lt;code&gt;Tagged&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Opaque&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/tagged.d.ts"&gt;&lt;code&gt;Tagged&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SetElement&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/iterable-element.d.ts"&gt;&lt;code&gt;IterableElement&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SetEntry&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/iterable-element.d.ts"&gt;&lt;code&gt;IterableElement&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SetValues&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/iterable-element.d.ts"&gt;&lt;code&gt;IterableElement&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PickByTypes&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/conditional-pick.d.ts"&gt;&lt;code&gt;ConditionalPick&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;HomomorphicOmit&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/except.d.ts"&gt;&lt;code&gt;Except&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;IfAny&lt;/code&gt;, &lt;code&gt;IfNever&lt;/code&gt;, &lt;code&gt;If*&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/if.d.ts"&gt;&lt;code&gt;If&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MaybePromise&lt;/code&gt; - See &lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/promisable.d.ts"&gt;&lt;code&gt;Promisable&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tips&lt;/h2&gt; 
&lt;h3&gt;Extending existing types&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/source/package-json.d.ts"&gt;&lt;code&gt;PackageJson&lt;/code&gt;&lt;/a&gt; - There are a lot of tools that place extra configurations inside the &lt;code&gt;package.json&lt;/code&gt; file. You can extend &lt;code&gt;PackageJson&lt;/code&gt; to support these additional configurations.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBDAnmApnA3gBQIYGMDW2A5igFIDOEAdnNuXAEJ0o4HFmVUC+cAZlBBBwA5ElQBaXinIxhAbgCwAKFCRYCZGnQAZYFRgooPfoJHSANntmKlysWlaESFanAC8jZo-YuaAMgwLKwBhal5gIgB+AC44XX1DADpQqnCiLhsgA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; import type {PackageJson as BasePackageJson} from 'type-fest';
 import type {Linter} from 'eslint';

 type PackageJson = BasePackageJson &amp;amp; {eslintConfig?: Linter.Config};
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Related&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/g-plane/typed-query-selector"&gt;typed-query-selector&lt;/a&gt; - Enhances &lt;code&gt;document.querySelector&lt;/code&gt; and &lt;code&gt;document.querySelectorAll&lt;/code&gt; with a template literal type that matches element types returned from an HTML element query selector.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eslint/eslint/raw/main/lib/types/index.d.ts"&gt;&lt;code&gt;Linter.Config&lt;/code&gt;&lt;/a&gt; - Definitions for the &lt;a href="https://eslint.org/docs/user-guide/configuring/language-options"&gt;ESLint configuration schema&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Built-in types&lt;/h3&gt; 
&lt;p&gt;There are many advanced types most users don't know about.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype"&gt;&lt;code&gt;Awaited&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Extract the type of a value that a &lt;code&gt;Promise&lt;/code&gt; resolves to.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://www.typescriptlang.org/play/?#code/JYOwLgpgTgZghgYwgAgKoGdrIN4FgBQyyAkMACYBcyIArgLYBG0A3AUcSHHRFemFKADmrQiTiCe1ekygiiAXwJtkCADZx06NJigBBAA7AAytABuwJDmXENATxAJkMCGAQALDNAAUNHQElKKUZoAEoqAAUoAHs6YEwAHk8oAD4rUWJiAHpM5AAxF3dkMDcUXywyODA4J2i6IpLkCqqGDQgAOmssnIAVBsQwGjhVZGA6fVUIbnBK4CiQZFjBNzBkVSiogGtV4A2UYriKTuyVOb5kKAh0fVOUAF5kOAB3OGAV51c3LwAiTLhDTLKUEyABJsICAvIQnISF0TiAzk1qvcLlcbm0AFboOZeKFHHIXAZQeaI6EZAk0Ik4EaBACMABpqFxJF8AFJRNzzAAiUQgXwZ4kkAGYAAzIeSkxSiSXKMC2fQofIfCBkJLIe66Z6vZXxABKLgpIG6cogiR0BmMZgsEAA2l93u4kl8ALrJZIiZR2BxOGgOMCzeZuOAgMgTJKcypwLx-C1QcxIKhJc0mWNWhngwK0YJQEJpdj8Wy5mEIU4rQFURXuZWq+5PF4raPJuPte0eHQ+fxkXHpWG6GCQKBOApuITIQGNCMM2xRGgqIPIeWwKJQOqmOACadafr+rToGiFDSj-RNEfFUo6EbgaDwJB0vGz9wnhqImpRb2Es8QBlLhZwDYjuBkGQrz+kMyC6OEfjnBAACONCXGAm5aCAEDKsqHTpPIs4fMgXjQNE2aFhkxx4d+gbBqoQjWJKChKKIxbwqWZqGI2VpqtQECPNo0BJpaSA4tCZEhhAYYRu23HMbxn7IDSUJAA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt;interface User {
	id: number;
	name: string;
	age: number;
}

class UserApiService {
	async fetchUser(userId: number): Promise&amp;lt;User&amp;gt; {
		// Fetch the user data from the database.
		// The actual implementation might look like this:
		// const response = await fetch('/api/user/${userId}');
		// const data = response.json();
		// return data;
		return {
			id: 1,
			name: 'John Doe',
			age: 30
		};
	}
}

type FetchedUser = Awaited&amp;lt;ReturnType&amp;lt;UserApiService['fetchUser']&amp;gt;&amp;gt;;

async function handleUserData(apiService: UserApiService, userId: number) {
	try {
		const user: FetchedUser = await apiService.fetchUser(userId);
		// After fetching user data, you can perform various actions such as updating the user interface,
		// caching the data for future use, or making additional API requests as needed.
	} catch (error) {
		// Error handling
	}
}

const userApiService = new UserApiService();
handleUserData(userApiService, 1);
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt;&lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype"&gt;&lt;code&gt;Partial&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Make all properties in &lt;code&gt;T&lt;/code&gt; optional.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://www.typescriptlang.org/play/#code/JYOwLgpgTgZghgYwgAgHIHsAmEDC6QzADmyA3gLABQyycADnanALYQBcyAzmFKEQNxUaddFDAcQAV2YAjaIMoBfKlQQAbOJ05osEAIIMAQpOBrsUMkOR1eANziRkCfISKSoD4Pg4ZseAsTIALyW1DS0DEysHADkvvoMMQA0VsKi4sgAzAAMuVaKClY2wPaOknSYDrguADwA0sgQAB6QIJjaANYQAJ7oMDp+LsQAfAAUXd0cdUnI9mo+uv6uANp1ALoAlKHhyGAAFsCcAHTOAW4eYF4gyxNrwbNwago0ypRWp66jH8QcAApwYmAjxq8SWIy2FDCNDA3ToKFBQyIdR69wmfQG1TOhShyBgomQX3w3GQE2Q6IA8jIAFYQBBgI4TTiEs5bTQYsFInrLTbbHZOIlgZDlSqQABqj0kKBC3yINx6a2xfOQwH6o2FVXFaklwSCIUkbQghBAEEwENSfNOlykEGefNe5uhB2O6sgS3GPRmLogmslG1tLxUOKgEDA7hAuydtteryAA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; interface NodeConfig {
 		appName: string;
 		port: number;
 }

 class NodeAppBuilder {
 		private configuration: NodeConfig = {
 				appName: 'NodeApp',
 				port: 3000
 		};

 		private updateConfig&amp;lt;Key extends keyof NodeConfig&amp;gt;(key: Key, value: NodeConfig[Key]) {
 				this.configuration[key] = value;
 		}

 		config(config: Partial&amp;lt;NodeConfig&amp;gt;) {
 				type NodeConfigKey = keyof NodeConfig;

 				for (const key of Object.keys(config) as NodeConfigKey[]) {
 						const updateValue = config[key];

 						if (updateValue === undefined) {
 								continue;
 						}

 						this.updateConfig(key, updateValue);
 				}

 				return this;
 		}
 }

 // `Partial&amp;lt;NodeConfig&amp;gt;`` allows us to provide only a part of the
 // NodeConfig interface.
 new NodeAppBuilder().config({appName: 'ToDoApp'});
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#requiredtype"&gt;&lt;code&gt;Required&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Make all properties in &lt;code&gt;T&lt;/code&gt; required.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/AQ4SwOwFwUwJwGYEMDGNgGED21VQGJZwC2wA3gFCjXAzFJgA2A-AFzADOUckA5gNxUaIYjA4ckvGG07c+g6gF8KQkAgCuEFFDA5O6gEbEwUbLm2ESwABQIixACJIoSdgCUYAR3Vg4MACYAPGYuFvYAfACU5Ko0APRxwADKMBD+wFAAFuh2Vv7OSBlYGdmc8ABu8LHKsRyGxqY4oQT21pTCIHQMjOwA5DAAHgACxAAOjDAAdChYxL0ANLHUouKSMH0AEmAAhJhY6ozpAJ77GTCMjMCiV0ToSAb7UJPPC9WRgrEJwAAqR6MwSRQPFGUFocDgRHYxnEfGAowh-zgUCOwF6KwkUl6tXqJhCeEsxDaS1AXSYfUGI3GUxmc0WSneQA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; interface ContactForm {
 		email?: string;
 		message?: string;
 }

 function submitContactForm(formData: Required&amp;lt;ContactForm&amp;gt;) {
 		// Send the form data to the server.
 }

 submitContactForm({
 		email: 'ex@mple.com',
 		message: 'Hi! Could you tell me more about…',
 });

 // TypeScript error: missing property 'message'
 submitContactForm({
 		email: 'ex@mple.com',
 });
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#readonlytype"&gt;&lt;code&gt;Readonly&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Make all properties in &lt;code&gt;T&lt;/code&gt; readonly.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/AQ4UwOwVwW2AZA9gc3mAbmANsA3gKFCOAHkAzMgGkOJABEwAjKZa2kAUQCcvEu32AMQCGAF2FYBIAL4BufDRABLCKLBcywgMZgEKZOoDCiCGSXI8i4hGEwwALmABnUVxXJ57YFgzZHSVF8sT1BpBSItLGEnJz1kAy5LLy0TM2RHACUwYQATEywATwAeAITjU3MAPnkrCJMXLigtUT4AClxgGztKbyDgaX99I1TzAEokr1BRAAslJwA6FIqLAF48TtswHp9MHDla9hJGACswZvmyLjAwAC8wVpm5xZHkUZDaMKIwqyWXYCW0oN4sNlsA1h0ug5gAByACyBQAggAHJHQ7ZBIFoXbzBjMCz7OoQP5YIaJNYQMAAdziCVaALGNSIAHomcAACoFJFgADKWjcSNEwG4vC4ji0wggEEQguiTnMEGALWAV1yAFp8gVgEjeFyuKICvMrCTgVxnst5jtsGC4ljsPNhXxGaAWcAAOq6YRXYDCRg+RWIcA5JSC+kWdCepQ+v3RYCU3RInzRMCGwlpC19NYBW1Ye08R1AA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; enum LogLevel {
 		Off,
 		Debug,
 		Error,
 		Fatal
 };

 interface LoggerConfig {
 		name: string;
 		level: LogLevel;
 }

 class Logger {
 		config: Readonly&amp;lt;LoggerConfig&amp;gt;;

 		constructor({name, level}: LoggerConfig) {
 				this.config = {name, level};
 				Object.freeze(this.config);
 		}
 }

 const config: LoggerConfig = {
 	name: 'MyApp',
 	level: LogLevel.Debug
 };

 const logger = new Logger(config);

 // TypeScript Error: cannot assign to read-only property.
 logger.config.level = LogLevel.Error;

 // We are able to edit config variable as we please.
 config.level = LogLevel.Error;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys"&gt;&lt;code&gt;Pick&amp;lt;T, K&amp;gt;&lt;/code&gt;&lt;/a&gt; - From &lt;code&gt;T&lt;/code&gt;, pick a set of properties whose keys are in the union &lt;code&gt;K&lt;/code&gt;.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/AQ4SwOwFwUwJwGYEMDGNgEE5TCgNugN4BQoZwOUBAXMAM5RyQDmA3KeSFABYCuAtgCMISMHloMmENh04oA9tBjQJjFuzIBfYrOAB6PcADCcGElh1gEGAHcKATwAO6ebyjB5CTNlwFwSxFR0BX5HeToYABNgBDh5fm8cfBg6AHIKG3ldA2BHOOcfFNpUygJ0pAhokr4hETFUgDpswywkggAFUwA3MFtgAF5gQgowKhhVKTYKGuFRcXo1aVZgbTIoJ3RW3xhOmB6+wfbcAGsAHi3kgBpgEtGy4AAfG54BWfqAPnZm4AAlZUj4MAkMA8GAGB4vEgfMlLLw6CwPBA8PYRmMgZVgAC6CgmI4cIommQELwICh8RBgKZKvALh1ur0bHQABR5PYMui0Wk7em2ADaAF0AJS0AASABUALIAGQAogR+Mp3CROCAFBBwVC2ikBpj5CgBIqGjizLA5TAFdAmalImAuqlBRoVQh5HBgEy1eDWfs7J5cjzGYKhroVfpDEhHM4MV6GRR5NN0JrtnRg6BVirTFBeHAKYmYY6QNpdB73LmCJZBlSAXAubtvczeSmQMNSuMbmKNgBlHFgPEUNwusBIPAAQlS1xetTmxT0SDoESgdD0C4aACtHMwxytLrohawgA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; interface Article {
 		title: string;
 		thumbnail: string;
 		content: string;
 }

 // Creates new type out of the `Article` interface composed
 // from the Articles' two properties: `title` and `thumbnail`.
 // `ArticlePreview = {title: string; thumbnail: string}`
 type ArticlePreview = Pick&amp;lt;Article, 'title' | 'thumbnail'&amp;gt;;

 // Render a list of articles using only title and description.
 function renderArticlePreviews(previews: ArticlePreview[]): HTMLElement {
 		const articles = document.createElement('div');

 		for (const preview of previews) {
 				// Append preview to the articles.
 		}

 		return articles;
 }

 const articles = renderArticlePreviews([
 		{
 			title: 'TypeScript tutorial!',
 			thumbnail: '/assets/ts.jpg'
 		}
 ]);
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type"&gt;&lt;code&gt;Record&amp;lt;K, T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Construct a type with a set of properties &lt;code&gt;K&lt;/code&gt; of type &lt;code&gt;T&lt;/code&gt;.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/AQ4ejYAUHsGcCWAXBMB2dgwGbAKYC2ADgDYwCeeemCaWArgE7ADGMxAhmuQHQBQoYEnJE8wALKEARnkaxEKdMAC8wAOS0kstGuAAfdQBM8ANzxlRjXQbVaWACwC0JPB0NqA3HwGgIwAJJoWozYHCxixnAsjAhStADmwESMMJYo1Fi4HMCIaPEu+MRklHj8gpqyoeHAAKJFFFTAAN4+giDYCIxwSAByHAR4AFw5SDF5Xm2gJBzdfQPD3WPxE5PAlBxdAPLYNQAelgh4aOHDaPQEMowrIAC+3oJ+AMKMrlrAXFhSAFZ4LEhC9g4-0BmA4JBISXgiCkBQABpILrJ5MhUGhYcATGD6Bk4Hh-jNgABrPDkOBlXyQAAq9ngYmJpOAAHcEOCRjAXqwYODfoo6DhakUSph+Uh7GI4P0xER4Cj0OSQGwMP8tP1hgAlX7swwAHgRl2RvIANALSA08ABtAC6AD4VM1Wm0Kow0MMrYaHYJjGYLLJXZb3at1HYnC43Go-QHQDcvA6-JsmEJXARgCDgMYWAhjIYhDAU+YiMAAFIwex0ZmilMITCGF79TLAGRsAgJYAAZRwSEZGzEABFTOZUrJ5Yn+jwnWgeER6HB7AAKJrADpdXqS4ZqYultTG6azVfqHswPBbtauLY7fayQ7HIbAAAMwBuAEoYw9IBq2Ixs9h2eFMOQYPQObALQKJgggABeYhghCIpikkKRpOQRIknAsZUiIeCttECBEP8NSMCkjDDAARMGziuIYxHwYOjDCMBmDNnAuTxA6irdCOBB1Lh5Dqpqn66tISIykawBnOCtqqC0gbjqc9DgpGkxegOliyfJDrRkAA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; // Positions of employees in our company.
 type MemberPosition = 'intern' | 'developer' | 'tech-lead';

 // Interface describing properties of a single employee.
 interface Employee {
 		firstName: string;
 		lastName: string;
 		yearsOfExperience: number;
 }

 // Create an object that has all possible `MemberPosition` values set as keys.
 // Those keys will store a collection of Employees of the same position.
 const team: Record&amp;lt;MemberPosition, Employee[]&amp;gt; = {
 		intern: [],
 		developer: [],
 		'tech-lead': [],
 };

 // Our team has decided to help John with his dream of becoming Software Developer.
 team.intern.push({
 	firstName: 'John',
 	lastName: 'Doe',
 	yearsOfExperience: 0
 });

 // `Record` forces you to initialize all of the property keys.
 // TypeScript Error: "tech-lead" property is missing
 const teamEmpty: Record&amp;lt;MemberPosition, null&amp;gt; = {
 		intern: null,
 		developer: null,
 };
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#excludetype-excludedunion"&gt;&lt;code&gt;Exclude&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;/a&gt; - Exclude from &lt;code&gt;T&lt;/code&gt; those types that are assignable to &lt;code&gt;U&lt;/code&gt;.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/JYOwLgpgTgZghgYwgAgMrQG7QMIHsQzADmyA3gFDLIAOuUYAXMiAK4A2byAPsgM5hRQJHqwC2AI2gBucgF9y5MAE9qKAEoQAjiwj8AEnBAATNtGQBeZAAooWphu26wAGmS3e93bRC8IASgsAPmRDJRlyAHoI5ABRAA8ENhYjFFYOZGVVZBgoXFFkAAM0zh5+QRBhZhYJaAKAOkjogEkQZAQ4X2QAdwALCFbaemRgXmQtFjhOMFwq9K6ULuB0lk6U+HYwZAxJnQaYFhAEMGB8ZCIIMAAFOjAANR2IK0HGWISklIAedCgsKDwCYgAbQA5M9gQBdVzFQJ+JhiSRQMiUYYwayZCC4VHPCzmSzAspCYEBWxgFhQAZwKC+FpgJ43VwARgADH4ZFQSWSBjcZPJyPtDsdTvxKWBvr8rD1DCZoJ5HPopaYoK4EPhCEQmGKcKriLCtrhgEYkVQVT5Nr4fmZLLZtMBbFZgT0wGBqES6ghbHBIJqoBKFdBWQpjfh+DQbhY2tqiHVsbjLMVkAB+ZAAZiZaeQTHOVxu9ySjxNaujNwDVHNvzqbBGkBAdPoAfkQA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; interface ServerConfig {
 	port: null | string | number;
 }

 type RequestHandler = (request: Request, response: Response) =&amp;gt; void;

 // Exclude `null` type from `null | string | number`.
 // In case the port is equal to `null`, we will use default value.
 function getPortValue(port: Exclude&amp;lt;ServerConfig['port'], null&amp;gt;): number {
 	if (typeof port === 'string') {
 		return parseInt(port, 10);
 	}

 	return port;
 }

 function startServer(handler: RequestHandler, config: ServerConfig): void {
 	const server = require('http').createServer(handler);

 	const port = config.port === null ? 3000 : getPortValue(config.port);
 	server.listen(port);
 }
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#extracttype-union"&gt;&lt;code&gt;Extract&amp;lt;T, U&amp;gt;&lt;/code&gt;&lt;/a&gt; - Extract from &lt;code&gt;T&lt;/code&gt; those types that are assignable to &lt;code&gt;U&lt;/code&gt;.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/CYUwxgNghgTiAEAzArgOzAFwJYHtXzSwEdkQBJYACgEoAueVZAWwCMQYBuAKDDwGcM8MgBF4AXngBlAJ6scESgHIRi6ty5ZUGdoihgEABXZ888AN5d48ANoiAuvUat23K6ihMQ9ATE0BzV3goPy8GZjZOLgBfLi4Aejj4AEEICBwAdz54MAALKFQQ+BxEeAAHY1NgKAwoIKy0grr4DByEUpgccpgMaXgAaxBerCzi+B9-ZulygDouFHRsU1z8kKMYE1RhaqgAHkt4AHkWACt4EAAPbVRgLLWNgBp9gGlBs8uQa6yAUUuYPQwdgNpKM7nh7mMML4CgA+R5WABqUAgpDeVxuhxO1he0jsXGh8EoOBO9COx3BQPo2PBADckaR6IjkSA6PBqTgsMBzPsicdrEC7OJWXSQNwYvFEgAVTS9JLXODpeDpKBZFg4GCoWa8VACIJykAKiQWKy2YQOAioYikCg0OEMDyhRSy4DyxS24KhAAMjyi6gS8AAwjh5OD0iBFHAkJoEOksC1mnkMJq8gUQKDNttKPlnfrwYp3J5XfBHXqoKpfYkAOI4ansTxaeDADmoRSCCBYAbxhC6TDx6rwYHIRX5bScjA4bLJwoDmDwDkfbA9JMrVMVdM1TN69LgkTgwgkchUahqIA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; declare function uniqueId(): number;

 const ID = Symbol('ID');

 interface Person {
 	[ID]: number;
 	name: string;
 	age: number;
 }

 // Allows changing the person data as long as the property key is of string type.
 function changePersonData&amp;lt;
 	Obj extends Person,
 	Key extends Extract&amp;lt;keyof Person, string&amp;gt;,
 	Value extends Obj[Key]
 &amp;gt; (obj: Obj, key: Key, value: Value): void {
 	obj[key] = value;
 }

 // Tiny Andrew was born.
 const andrew = {
 	[ID]: uniqueId(),
 	name: 'Andrew',
 	age: 0,
 };

 // Cool, we're fine with that.
 changePersonData(andrew, 'name', 'Pony');

 // Government didn't like the fact that you wanted to change your identity.
 changePersonData(andrew, ID, uniqueId());
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#nonnullabletype"&gt;&lt;code&gt;NonNullable&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Exclude &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; from &lt;code&gt;T&lt;/code&gt;.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; Works with 
   &lt;a href="https://www.typescriptlang.org/tsconfig#strictNullChecks"&gt;&lt;code&gt;strictNullChecks&lt;/code&gt;&lt;/a&gt; set to 
   &lt;code&gt;true&lt;/code&gt;. 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/C4TwDgpgBACg9gJ2AOQK4FsBGEFQLxQDOwCAlgHYDmUAPlORtrnQwDasDcAUFwPQBU-WAEMkUOADMowqAGNWwwoSgATCBIqlgpOOSjAAFsOBRSy1IQgr9cKJlSlW1mZYQA3HFH68u8xcoBlHA8EACEHJ08Aby4oKDBUTFZSWXjEFEYcAEIALihkXTR2YSSIAB54JDQsHAA+blj4xOTUsHSACkMzPKD3HHDHNQQAGjSkPMqMmoQASh7g-oihqBi4uNIpdraxPAI2VhmVxrX9AzMAOm2ppnwoAA4ABifuE4BfKAhWSyOTuK7CS7pao3AhXF5rV48E4ICDAVAIPT-cGQyG+XTEIgLMJLTx7CAAdygvRCA0iCHaMwarhJOIQjUBSHaACJHk8mYdeLwxtdcVAAOSsh58+lXdr7Dlcq7A3n3J4PEUdADMcspUE53OluAIUGVTx46oAKuAIAFZGQwCYAKIIBCILjUxaDHAMnla+iodjcIA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; type PortNumber = string | number | null;

 /** Part of a class definition that is used to build a server */
 class ServerBuilder {
 		portNumber!: NonNullable&amp;lt;PortNumber&amp;gt;;

 		port(this: ServerBuilder, port: PortNumber): ServerBuilder {
 				if (port == null) {
 						this.portNumber = 8000;
 				} else {
 						this.portNumber = port;
 				}

 				return this;
 		}
 }

 const serverBuilder = new ServerBuilder();

 serverBuilder
 		.port('8000')   // portNumber = '8000'
 		.port(null)     // portNumber =  8000
 		.port(3000);    // portNumber =  3000

 // TypeScript error
 serverBuilder.portNumber = null;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#parameterstype"&gt;&lt;code&gt;Parameters&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Obtain the parameters of a function type in a tuple.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/GYVwdgxgLglg9mABAZwBYmMANgUwBQxgAOIUAXIgIZgCeA2gLoCUFAbnDACaIDeAUIkQB6IYgCypSlBxUATrMo1ECsJzgBbLEoipqAc0J7EMKMgDkiHLnU4wp46pwAPHMgB0fAL58+oSLARECEosLAA5ABUYG2QAHgAxJGdpVWREPDdMylk9ZApqemZEAF4APipacrw-CApEgBogkKwAYThwckQwEHUAIxxZJl4BYVEImiIZKF0oZRwiWVdbeygJmThgOYgcGFYcbhqApCJsyhtpWXcR1cnEePBoeDAABVPzgbTixFeFd8uEsClADcIxGiygIFkSEOT3SmTc2VydQeRx+ZxwF2QQ34gkEwDgsnSuFmMBKiAADEDjIhYk1Qm0OlSYABqZnYka4xA1DJZHJYkGc7yCbyeRA+CAIZCzNAYbA4CIAdxg2zJwVCkWirjwMswuEaACYmCCgA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; function shuffle(input: any[]): void {
 	// Mutate array randomly changing its' elements indexes.
 }

 function callNTimes&amp;lt;Fn extends (...arguments_: any[]) =&amp;gt; any&amp;gt; (func: Fn, callCount: number) {
 	// Type that represents the type of the received function parameters.
 	type FunctionParameters = Parameters&amp;lt;Fn&amp;gt;;

 	return function (...arguments_: FunctionParameters) {
 		for (let i = 0; i &amp;lt; callCount; i++) {
 			func(...arguments_);
 		}
 	}
 }

 const shuffleTwice = callNTimes(shuffle, 2);
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#constructorparameterstype"&gt;&lt;code&gt;ConstructorParameters&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Obtain the parameters of a constructor function type in a tuple.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/MYGwhgzhAECCBOAXAlqApgWQPYBM0mgG8AoaaFRENALmgkXmQDsBzAblOmCycTV4D8teo1YdO3JiICuwRFngAKClWENmLAJRFOZRAAtkEAHQq00ALzlklNBzIBfYk+KhIMAJJTEYJsDQAwmDA+mgAPAAq0GgAHnxMODCKTGgA7tCKxllg8CwQtL4AngDaALraFgB80EWa1SRkAA6MAG5gfNAB4FABPDJyCrQR9tDNyG0dwMGhtBhgjWEiGgA00F70vv4RhY3hEZXVVinpc42KmuJkkv3y8Bly8EPaDWTkhiZd7r3e8LK3llwGCMXGQWGhEOsfH5zJlsrl8p0+gw-goAAo5MAAW3BaHgEEilU0tEhmzQ212BJ0ry4SOg+kg+gBBiMximIGA0nAfAQLGk2N4EAAEgzYcYcnkLsRdDTvNEYkYUKwSdCme9WdM0MYwYhFPSIPpJdTkAAzDKxBUaZX+aAAQgsVmkCTQxuYaBw2ng4Ok8CYcotSu8pMur09iG9vuObxZnx6SN+AyUWTF8MN0CcZE4Ywm5jZHK5aB5fP4iCFIqT4oRRTKRLo6lYVNeAHpG50wOzOe1zHr9NLQ+HoABybsD4HOKXXRA1JCoKhBELmI5pNaB6Fz0KKBAodDYPAgSUTmqYsAALx4m5nC6nW9nGq14KtaEUA9gR9PvuNCjQ9BgACNvcwNBtAcLiAA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; class ArticleModel {
 	title: string;
 	content?: string;

 	constructor(title: string) {
 		this.title = title;
 	}
 }

 class InstanceCache&amp;lt;T extends (new (...arguments_: any[]) =&amp;gt; any)&amp;gt; {
 	private ClassConstructor: T;
 	private cache: Map&amp;lt;string, InstanceType&amp;lt;T&amp;gt;&amp;gt; = new Map();

 	constructor (ctr: T) {
 		this.ClassConstructor = ctr;
 	}

 	getInstance (...arguments_: ConstructorParameters&amp;lt;T&amp;gt;): InstanceType&amp;lt;T&amp;gt; {
 		const hash = this.calculateArgumentsHash(...arguments_);

 		const existingInstance = this.cache.get(hash);
 		if (existingInstance !== undefined) {
 			return existingInstance;
 		}

 		return new this.ClassConstructor(...arguments_);
 	}

 	private calculateArgumentsHash(...arguments_: any[]): string {
 		// Calculate hash.
 		return 'hash';
 	}
 }

 const articleCache = new InstanceCache(ArticleModel);
 const amazonArticle = articleCache.getInstance('Amazon forests burning!');
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#returntypetype"&gt;&lt;code&gt;ReturnType&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Obtain the return type of a function type.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/MYGwhgzhAECSAmICmBlJAnAbgS2E6A3gFDTTwD2AcuQC4AW2AdgOYAUAlAFzSbnbyEAvkWFFQkGJSQB3GMVI1sNZNwg10TZgG4S0YOUY0kh1es07d+xmvQBXYDXLpWi5UlMaWAGj0GjJ6BtNdkJdBQYIADpXZGgAXmgYpB1ScOwoq38aeN9DYxoU6GFRKzVoJjUwRjwAYXJbPPRuAFkwAAcAHgAxBodsAx9GWwBbACMMAD4cxhloVraOCyYjdAAzMDxoOut1e0d0UNIZ6WhWSPOwdGYIbiqATwBtAF0uaHudUQB6ACpv6ABpJBINqJdAbADW0Do5BOw3u5R2VTwMHIq2gAANtjZ0bkbHsnFCwJh8ONjHp0EgwEZ4JFoN9PkRVr1FAZoMwkDRYIjqkgOrosepoEgAB7+eAwAV2BxOLy6ACCVxgIrFEoMeOl6AACpcwMMORgIB1JRMiBNWKVdhruJKfOdIpdrtwFddXlzKjyACp3Nq842HaDIbL6BrZBIVGhIpB1EMYSLsmjmtWW-YhAA+qegAAYLKQLQj3ZsEsdccmnGcLor2Dn8xGedHGpEIBzEzspfsfMHDNAANTQACMVaIljV5GQkRA5DYmIpVKQAgAJARO9le33BDXIyi0YuLW2nJFGLqkOvxFB0YPdBSaLZ0IwNzyPkO8-xkGgsLh8Al427a3hWAhXwwHA8EHT5PmgAB1bAQBAANJ24adKWpft72RaBUTgRBUCAj89HAM8xCTaBjggABRQx0DuHJv25P9dCkWRZVIAAiBjoFImpmjlFBgA0NpsjadByDacgIDAEAIAAQmYpjoGYgAZSBsmGPw6DtZiiFA8CoJguDmAQmoZ2QvtUKQLdoAYmBTwgdEiCAA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; /** Provides every element of the iterable `iter` into the `callback` function and stores the results in an array. */
 function mapIter&amp;lt;
 		Elem,
 		Func extends (elem: Elem) =&amp;gt; any,
 		Ret extends ReturnType&amp;lt;Func&amp;gt;
 &amp;gt;(iter: Iterable&amp;lt;Elem&amp;gt;, callback: Func): Ret[] {
 		const mapped: Ret[] = [];

 		for (const elem of iter) {
 				mapped.push(callback(elem));
 		}

 		return mapped;
 }

 const setObject: Set&amp;lt;string&amp;gt; = new Set();
 const mapObject: Map&amp;lt;number, string&amp;gt; = new Map();

 mapIter(setObject, (value: string) =&amp;gt; value.indexOf('Foo')); // number[]

 mapIter(mapObject, ([key, value]: [number, string]) =&amp;gt; {
 		return key % 2 === 0 ? value : 'Odd';
 }); // string[]
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#instancetypetype"&gt;&lt;code&gt;InstanceType&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - Obtain the instance type of a constructor function type.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/MYGwhgzhAECSAmICmBlJAnAbgS2E6A3gFDTTwD2AcuQC4AW2AdgOYAUAlAFzSbnbyEAvkWFFQkGJSQB3GMVI1sNZNwg10TZgG4S0YOUY0kh1es07d+xmvQBXYDXLpWi5UlMaWAGj0GjJ6BtNdkJdBQYIADpXZGgAXmgYpB1ScOwoq38aeN9DYxoU6GFRKzVoJjUwRjwAYXJbPPRuAFkwAAcAHgAxBodsAx9GWwBbACMMAD4cxhloVraOCyYjdAAzMDxoOut1e0d0UNIZ6WhWSPOwdGYIbiqATwBtAF0uaHudUQB6ACpv6ABpJBINqJdAbADW0Do5BOw3u5R2VTwMHIq2gAANtjZ0bkbHsnFCwJh8ONjHp0EgwEZ4JFoN9PkRVr1FAZoMwkDRYIjqkgOrosepoEgAB7+eAwAV2BxOLy6ACCVxgIrFEoMeOl6AACpcwMMORgIB1JRMiBNWKVdhruJKfOdIpdrtwFddXlzKjyACp3Nq842HaDIbL6BrZBIVGhIpB1EMYSLsmjmtWW-YhAA+qegAAYLKQLQj3ZsEsdccmnGcLor2Dn8xGedHGpEIBzEzspfsfMHDNAANTQACMVaIljV5GQkRA5DYmIpVKQAgAJARO9le33BDXIyi0YuLW2nJFGLqkOvxFB0YPdBSaLZ0IwNzyPkO8-xkGgsLh8Al427a3hWAhXwwHA8EHT5PmgAB1bAQBAANJ24adKWpft72RaBUTgRBUCAj89HAM8xCTaBjggABRQx0DuHJv25P9dCkWRZVIAAiBjoFImpmjlFBgA0NpsjadByDacgIDAEAIAAQmYpjoGYgAZSBsmGPw6DtZiiFA8CoJguDmAQmoZ2QvtUKQLdoAYmBTwgdEiCAA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; class IdleService {
 		doNothing (): void {}
 }

 class News {
 		title: string;
 		content: string;

 		constructor(title: string, content: string) {
 				this.title = title;
 				this.content = content;
 		}
 }

 const instanceCounter: Map&amp;lt;Function, number&amp;gt; = new Map();

 interface Constructor {
 		new(...arguments_: any[]): any;
 }

 // Keep track how many instances of `Constr` constructor have been created.
 function getInstance&amp;lt;
 		Constr extends Constructor,
 		Arguments extends ConstructorParameters&amp;lt;Constr&amp;gt;
 &amp;gt;(constructor: Constr, ...arguments_: Arguments): InstanceType&amp;lt;Constr&amp;gt; {
 		let count = instanceCounter.get(constructor) || 0;

 		const instance = new constructor(...arguments_);

 		instanceCounter.set(constructor, count + 1);

 		console.log(`Created ${count + 1} instances of ${Constr.name} class`);

 		return instance;
 }


 const idleService = getInstance(IdleService);
 // Will log: `Created 1 instances of IdleService class`
 const newsEntry = getInstance(News, 'New ECMAScript proposals!', 'Last month...');
 // Will log: `Created 1 instances of News class`
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"&gt;&lt;code&gt;Omit&amp;lt;T, K&amp;gt;&lt;/code&gt;&lt;/a&gt; - Constructs a type by picking all properties from T and then removing K.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;p&gt;&lt;a href="https://typescript-play.js.org/?target=6#code/JYOwLgpgTgZghgYwgAgIImAWzgG2QbwChlks4BzCAVShwC5kBnMKUcgbmKYAcIFgIjBs1YgOXMpSFMWbANoBdTiW5woFddwAW0kfKWEAvoUIB6U8gDCUCHEiNkICAHdkYAJ69kz4GC3JcPG4oAHteKDABBxCYNAxsPFBIWEQUCAAPJG4wZABySUFcgJAAEzMLXNV1ck0dIuCw6EjBADpy5AB1FAQ4EGQAV0YUP2AHDy8wEOQbUugmBLwtEIA3OcmQnEjuZBgQqE7gAGtgZAhwKHdkHFGwNvGUdDIcAGUliIBJEF3kAF5kAHlML4ADyPBIAGjyBUYRQAPnkqho4NoYQA+TiEGD9EAISIhPozErQMG4AASK2gn2+AApek9pCSXm8wFSQooAJQMUkAFQAsgAZACiOAgmDOOSIJAQ+OYyGl4DgoDmf2QJRCCH6YvALQQNjsEGFovF1NyJWAy1y7OUyHMyE+yRAuFImG4Iq1YDswHxbRINjA-SgfXlHqVUE4xiAA"&gt;Playground&lt;/a&gt;&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; interface Animal {
 		imageUrl: string;
 		species: string;
 		images: string[];
 		paragraphs: string[];
 }

 // Creates new type with all properties of the `Animal` interface
 // except 'images' and 'paragraphs' properties. We can use this
 // type to render small hover tooltip for a wiki entry list.
 type AnimalShortInfo = Omit&amp;lt;Animal, 'images' | 'paragraphs'&amp;gt;;

 function renderAnimalHoverInfo (animals: AnimalShortInfo[]): HTMLElement {
 		const container = document.createElement('div');
 		// Internal implementation.
 		return container;
 }
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#uppercasestringtype"&gt;&lt;code&gt;Uppercase&amp;lt;S extends string&amp;gt;&lt;/code&gt;&lt;/a&gt; - Transforms every character in a string into uppercase.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; type T = Uppercase&amp;lt;'hello'&amp;gt;;  // 'HELLO'

 type T2 = Uppercase&amp;lt;'foo' | 'bar'&amp;gt;;  // 'FOO' | 'BAR'

 type T3&amp;lt;S extends string&amp;gt; = Uppercase&amp;lt;`aB${S}`&amp;gt;;
 type T4 = T3&amp;lt;'xYz'&amp;gt;;  // 'ABXYZ'

 type T5 = Uppercase&amp;lt;string&amp;gt;;  // string
 type T6 = Uppercase&amp;lt;any&amp;gt;;  // any
 type T7 = Uppercase&amp;lt;never&amp;gt;;  // never
 type T8 = Uppercase&amp;lt;42&amp;gt;;  // Error, type 'number' does not satisfy the constraint 'string'
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#lowercasestringtype"&gt;&lt;code&gt;Lowercase&amp;lt;S extends string&amp;gt;&lt;/code&gt;&lt;/a&gt; - Transforms every character in a string into lowercase.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; type T = Lowercase&amp;lt;'HELLO'&amp;gt;;  // 'hello'

 type T2 = Lowercase&amp;lt;'FOO' | 'BAR'&amp;gt;;  // 'foo' | 'bar'

 type T3&amp;lt;S extends string&amp;gt; = Lowercase&amp;lt;`aB${S}`&amp;gt;;
 type T4 = T3&amp;lt;'xYz'&amp;gt;;  // 'abxyz'

 type T5 = Lowercase&amp;lt;string&amp;gt;;  // string
 type T6 = Lowercase&amp;lt;any&amp;gt;;  // any
 type T7 = Lowercase&amp;lt;never&amp;gt;;  // never
 type T8 = Lowercase&amp;lt;42&amp;gt;;  // Error, type 'number' does not satisfy the constraint 'string'
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#capitalizestringtype"&gt;&lt;code&gt;Capitalize&amp;lt;S extends string&amp;gt;&lt;/code&gt;&lt;/a&gt; - Transforms the first character in a string into uppercase.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; type T = Capitalize&amp;lt;'hello'&amp;gt;;  // 'Hello'

 type T2 = Capitalize&amp;lt;'foo' | 'bar'&amp;gt;;  // 'Foo' | 'Bar'

 type T3&amp;lt;S extends string&amp;gt; = Capitalize&amp;lt;`aB${S}`&amp;gt;;
 type T4 = T3&amp;lt;'xYz'&amp;gt;;  // 'ABxYz'

 type T5 = Capitalize&amp;lt;string&amp;gt;;  // string
 type T6 = Capitalize&amp;lt;any&amp;gt;;  // any
 type T7 = Capitalize&amp;lt;never&amp;gt;;  // never
 type T8 = Capitalize&amp;lt;42&amp;gt;;  // Error, type 'number' does not satisfy the constraint 'string'
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#uncapitalizestringtype"&gt;&lt;code&gt;Uncapitalize&amp;lt;S extends string&amp;gt;&lt;/code&gt;&lt;/a&gt; - Transforms the first character in a string into lowercase.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt; Example &lt;/summary&gt; 
   &lt;pre&gt;&lt;code class="language-ts"&gt; type T = Uncapitalize&amp;lt;'Hello'&amp;gt;;  // 'hello'

 type T2 = Uncapitalize&amp;lt;'Foo' | 'Bar'&amp;gt;;  // 'foo' | 'bar'

 type T3&amp;lt;S extends string&amp;gt; = Uncapitalize&amp;lt;`AB${S}`&amp;gt;;
 type T4 = T3&amp;lt;'xYz'&amp;gt;;  // 'aBxYz'

 type T5 = Uncapitalize&amp;lt;string&amp;gt;;  // string
 type T6 = Uncapitalize&amp;lt;any&amp;gt;;  // any
 type T7 = Uncapitalize&amp;lt;never&amp;gt;;  // never
 type T8 = Uncapitalize&amp;lt;42&amp;gt;;  // Error, type 'number' does not satisfy the constraint 'string'
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/details&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can find some examples in the &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html"&gt;TypeScript docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus"&gt;Sindre Sorhus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Emiyaaaaa"&gt;Haozheng Li&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/som-sm"&gt;Som Shekhar Mukherjee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CvX"&gt;Jarek Radosz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BendingBender"&gt;Dimitri Benin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/voxpelli"&gt;Pelle Wessman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skarab42"&gt;Sébastien Mischler&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/license-mit"&gt;MIT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/sindresorhus/type-fest/main/license-cc0"&gt;CC0-1.0&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;SPDX-License-Identifier: (MIT OR CC0-1.0)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Portkey-AI/gateway</title>
      <link>https://github.com/Portkey-AI/gateway</link>
      <description>&lt;p&gt;A blazing fast AI Gateway with integrated guardrails. Route to 200+ LLMs, 50+ AI Guardrails with 1 fast &amp; friendly API.&lt;/p&gt;&lt;hr&gt;&lt;p align="right"&gt; &lt;strong&gt;English&lt;/strong&gt; | &lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/.github/README.cn.md"&gt;中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/.github/README.jp.md"&gt;日本語&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://portkey.sh/report-github"&gt;&lt;img src="https://raw.githubusercontent.com/siddharthsambharia-portkey/Portkey-Product-Images/refs/heads/main/LLM%20Report%20Campaign%20Frame.png" /&gt;&lt;/a&gt; &lt;br /&gt;&lt;/p&gt; 
 &lt;h1&gt;AI Gateway&lt;/h1&gt; 
 &lt;h4&gt;Route to 250+ LLMs with 1 fast &amp;amp; friendly API&lt;/h4&gt; 
 &lt;img src="https://cfassets.portkey.ai/sdk.gif" width="550px" alt="Portkey AI Gateway Demo showing LLM routing capabilities" style="margin-left:-35px" /&gt; 
 &lt;p&gt;&lt;a href="https://portkey.wiki/gh-1"&gt;Docs&lt;/a&gt; | &lt;a href="https://portkey.wiki/gh-2"&gt;Enterprise&lt;/a&gt; | &lt;a href="https://portkey.wiki/gh-3"&gt;Hosted Gateway&lt;/a&gt; | &lt;a href="https://portkey.wiki/gh-4"&gt;Changelog&lt;/a&gt; | &lt;a href="https://portkey.wiki/gh-5"&gt;API Reference&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/Ileriayo/markdown-badges" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://portkey.wiki/gh-6"&gt;&lt;img src="https://img.shields.io/discord/1143393887742861333" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://portkey.wiki/gh-7"&gt;&lt;img src="https://img.shields.io/twitter/url/https/twitter/follow/portkeyai?style=social&amp;amp;label=Follow%20%40PortkeyAI" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://portkey.wiki/gh-8"&gt;&lt;img src="https://badge.fury.io/js/%40portkey-ai%2Fgateway.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://portkey.wiki/gh-9"&gt;&lt;img src="https://uptime.betterstack.com/status-badges/v1/monitor/q94g.svg?sanitize=true" alt="Better Stack Badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?stackName=portkey-gateway&amp;amp;templateURL=https://portkey-gateway-ec2-quicklaunch.s3.us-east-1.amazonaws.com/portkey-gateway-ec2-quicklaunch.template.yaml"&gt;&lt;img src="https://img.shields.io/badge/Deploy_to_EC2-232F3E?style=for-the-badge&amp;amp;logo=amazonwebservices&amp;amp;logoColor=white" alt="Deploy to AWS EC2" width="105" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/Portkey-AI/gateway"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p&gt;The &lt;a href="https://portkey.wiki/gh-10"&gt;&lt;strong&gt;AI Gateway&lt;/strong&gt;&lt;/a&gt; is designed for fast, reliable &amp;amp; secure routing to 1600+ language, vision, audio, and image models. It is a lightweight, open-source, and enterprise-ready solution that allows you to integrate with any language model in under 2 minutes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;Blazing fast&lt;/strong&gt; (&amp;lt;1ms latency) with a tiny footprint (122kb)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;Battle tested&lt;/strong&gt;, with over 10B tokens processed everyday&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;Enterprise-ready&lt;/strong&gt; with enhanced security, scale, and custom deployments&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h4&gt;What can you do with the AI Gateway?&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integrate with any LLM in under 2 minutes - &lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/#quickstart-2-mins"&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Prevent downtimes through &lt;strong&gt;&lt;a href="https://portkey.wiki/gh-11"&gt;automatic retries&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://portkey.wiki/gh-12"&gt;fallbacks&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Scale AI apps with &lt;strong&gt;&lt;a href="https://portkey.wiki/gh-13"&gt;load balancing&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://portkey.wiki/gh-14"&gt;conditional routing&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Protect your AI deployments with &lt;strong&gt;&lt;a href="https://portkey.wiki/gh-15"&gt;guardrails&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Go beyond text with &lt;strong&gt;&lt;a href="https://portkey.wiki/gh-16"&gt;multi-modal capabilities&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Finally, explore &lt;strong&gt;&lt;a href="https://portkey.wiki/gh-17"&gt;agentic workflow&lt;/a&gt;&lt;/strong&gt; integrations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Starring this repo helps more developers discover the AI Gateway 🙏🏻&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/53597dce-6333-4ecc-a154-eb05532954e4" alt="star-2" /&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;Quickstart (2 mins)&lt;/h2&gt; 
&lt;h3&gt;1. Setup your AI Gateway&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run the gateway locally (needs Node.js and npm)
npx @portkey-ai/gateway
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The Gateway is running on &lt;code&gt;http://localhost:8787/v1&lt;/code&gt;&lt;/p&gt; 
 &lt;p&gt;The Gateway Console is running on &lt;code&gt;http://localhost:8787/public/&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;sup&gt; Deployment guides: &amp;nbsp; &lt;a href="https://portkey.wiki/gh-18"&gt;&lt;img height="12" width="12" src="https://cfassets.portkey.ai/logo/dew-color.svg?sanitize=true" /&gt; Portkey Cloud (Recommended)&lt;/a&gt; &amp;nbsp; &lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/docs/installation-deployments.md#docker"&gt;&lt;img height="12" width="12" src="https://cdn.simpleicons.org/docker/3776AB" /&gt; Docker&lt;/a&gt; &amp;nbsp; &lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/docs/installation-deployments.md#nodejs-server"&gt;&lt;img height="12" width="12" src="https://cdn.simpleicons.org/node.js/3776AB" /&gt; Node.js&lt;/a&gt; &amp;nbsp; &lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/docs/installation-deployments.md#cloudflare-workers"&gt;&lt;img height="12" width="12" src="https://cdn.simpleicons.org/cloudflare/3776AB" /&gt; Cloudflare&lt;/a&gt; &amp;nbsp; &lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/docs/installation-deployments.md#replit"&gt;&lt;img height="12" width="12" src="https://cdn.simpleicons.org/replit/3776AB" /&gt; Replit&lt;/a&gt; &amp;nbsp; &lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/docs/installation-deployments.md"&gt; Others...&lt;/a&gt; &lt;/sup&gt; 
&lt;h3&gt;2. Make your first request&lt;/h3&gt; 
&lt;!-- &lt;details open&gt;
&lt;summary&gt;Python Example&lt;/summary&gt; --&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# pip install -qU portkey-ai

from portkey_ai import Portkey

# OpenAI compatible client
client = Portkey(
    provider="openai", # or 'anthropic', 'bedrock', 'groq', etc
    Authorization="sk-***" # the provider API key
)

# Make a request through your AI Gateway
client.chat.completions.create(
    messages=[{"role": "user", "content": "What's the weather like?"}],
    model="gpt-4o-mini"
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;sup&gt;Supported Libraries: &amp;nbsp; &lt;a href="https://portkey.wiki/gh-19"&gt;&lt;img height="12" width="12" src="https://cdn.simpleicons.org/javascript/3776AB" /&gt; JS&lt;/a&gt; &amp;nbsp; &lt;a href="https://portkey.wiki/gh-20"&gt;&lt;img height="12" width="12" src="https://cdn.simpleicons.org/python/3776AB" /&gt; Python&lt;/a&gt; &amp;nbsp; &lt;a href="https://portkey.sh/gh-84"&gt;&lt;img height="12" width="12" src="https://cdn.simpleicons.org/gnubash/3776AB" /&gt; REST&lt;/a&gt; &amp;nbsp; &lt;a href="https://portkey.wiki/gh-21"&gt;&lt;img height="12" width="12" src="https://cdn.simpleicons.org/openai/3776AB" /&gt; OpenAI SDKs&lt;/a&gt; &amp;nbsp; &lt;a href="https://portkey.wiki/gh-22"&gt;&lt;img height="12" width="12" src="https://cdn.simpleicons.org/langchain/3776AB" /&gt; Langchain&lt;/a&gt; &amp;nbsp; &lt;a href="https://portkey.wiki/gh-23"&gt;LlamaIndex&lt;/a&gt; &amp;nbsp; &lt;a href="https://portkey.wiki/gh-24"&gt;Autogen&lt;/a&gt; &amp;nbsp; &lt;a href="https://portkey.wiki/gh-25"&gt;CrewAI&lt;/a&gt; &amp;nbsp; &lt;a href="https://portkey.wiki/gh-26"&gt;More..&lt;/a&gt; &lt;/sup&gt;&lt;/p&gt; 
&lt;p&gt;On the Gateway Console (&lt;code&gt;http://localhost:8787/public/&lt;/code&gt;) you can see all of your local logs in one place.&lt;/p&gt; 
&lt;img src="https://github.com/user-attachments/assets/362bc916-0fc9-43f1-a39e-4bd71aac4a3a" width="400" /&gt; 
&lt;h3&gt;3. Routing &amp;amp; Guardrails&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;Configs&lt;/code&gt; in the LLM gateway allow you to create routing rules, add reliability and setup guardrails.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;config = {
  "retry": {"attempts": 5},

  "output_guardrails": [{
    "default.contains": {"operator": "none", "words": ["Apple"]},
    "deny": True
  }]
}

# Attach the config to the client
client = client.with_options(config=config)

client.chat.completions.create(
    model="gpt-4o-mini",
    messages=[{"role": "user", "content": "Reply randomly with Apple or Bat"}]
)

# This would always response with "Bat" as the guardrail denies all replies containing "Apple". The retry config would retry 5 times before giving up.
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://portkey.ai/blog/content/images/size/w1600/2024/11/image-15.png" width="600" title="Request flow through Portkey's AI gateway with retries and guardrails" alt="Request flow through Portkey's AI gateway with retries and guardrails" /&gt; 
&lt;/div&gt; 
&lt;p&gt;You can do a lot more stuff with configs in your AI gateway. &lt;a href="https://portkey.wiki/gh-27"&gt;Jump to examples →&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;Enterprise Version (Private deployments)&lt;/h3&gt; 
&lt;sup&gt; &lt;p&gt;&lt;a href="https://portkey.wiki/gh-28"&gt;&lt;img height="12" width="12" src="https://cfassets.portkey.ai/amazon-logo.svg?sanitize=true" /&gt; AWS&lt;/a&gt; &amp;nbsp; &lt;a href="https://portkey.wiki/gh-29"&gt;&lt;img height="12" width="12" src="https://cfassets.portkey.ai/azure-logo.svg?sanitize=true" /&gt; Azure&lt;/a&gt; &amp;nbsp; &lt;a href="https://portkey.wiki/gh-30"&gt;&lt;img height="12" width="12" src="https://cdn.simpleicons.org/googlecloud/3776AB" /&gt; GCP&lt;/a&gt; &amp;nbsp; &lt;a href="https://portkey.wiki/gh-31"&gt;&lt;img height="12" width="12" src="https://cdn.simpleicons.org/redhatopenshift/3776AB" /&gt; OpenShift&lt;/a&gt; &amp;nbsp; &lt;a href="https://portkey.wiki/gh-85"&gt;&lt;img height="12" width="12" src="https://cdn.simpleicons.org/kubernetes/3776AB" /&gt; Kubernetes&lt;/a&gt;&lt;/p&gt; &lt;/sup&gt; 
&lt;p&gt;The LLM Gateway's &lt;a href="https://portkey.wiki/gh-86"&gt;enterprise version&lt;/a&gt; offers advanced capabilities for &lt;strong&gt;org management&lt;/strong&gt;, &lt;strong&gt;governance&lt;/strong&gt;, &lt;strong&gt;security&lt;/strong&gt; and &lt;a href="https://portkey.wiki/gh-87"&gt;more&lt;/a&gt; out of the box. &lt;a href="https://portkey.wiki/gh-32"&gt;View Feature Comparison →&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The enterprise deployment architecture for supported platforms is available here - &lt;a href="https://portkey.wiki/gh-33"&gt;&lt;strong&gt;Enterprise Private Cloud Deployments&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://portkey.sh/demo-13"&gt;&lt;img src="https://portkey.ai/blog/content/images/2024/08/Get-API-Key--5-.png" height="50" alt="Book an enterprise AI gateway demo" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;hr /&gt; 
&lt;h3&gt;AI Engineering Hours&lt;/h3&gt; 
&lt;p&gt;Join weekly community calls every Friday (8 AM PT) to kickstart your AI Gateway implementation! &lt;a href="https://portkey.wiki/gh-35"&gt;Happening every Friday&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://portkey.wiki/gh-35"&gt;&lt;img width="500" src="https://github.com/user-attachments/assets/c2885699-f197-4289-b819-21eb839fbae1" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Minutes of Meetings &lt;a href="https://portkey.wiki/gh-36"&gt;published here&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;LLMs in Prod'25&lt;/h3&gt; 
&lt;p&gt;Insights from analyzing 2 trillion+ tokens, across 90+ regions and 650+ teams in production. What to expect from this report:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Trends shaping AI adoption and LLM provider growth.&lt;/li&gt; 
 &lt;li&gt;Benchmarks to optimize speed, cost and reliability.&lt;/li&gt; 
 &lt;li&gt;Strategies to scale production-grade AI systems.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://portkey.sh/report-github"&gt;&lt;img width="500" src="https://raw.githubusercontent.com/siddharthsambharia-portkey/Portkey-Product-Images/refs/heads/main/LLM%20Report%20Campaign%20Image.png" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://portkey.sh/report-github"&gt;&lt;strong&gt;Get the Report&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Core Features&lt;/h2&gt; 
&lt;h3&gt;Reliable Routing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://portkey.wiki/gh-37"&gt;&lt;strong&gt;Fallbacks&lt;/strong&gt;&lt;/a&gt;: Fallback to another provider or model on failed requests using the LLM gateway. You can specify the errors on which to trigger the fallback. Improves reliability of your application.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.wiki/gh-38"&gt;&lt;strong&gt;Automatic Retries&lt;/strong&gt;&lt;/a&gt;: Automatically retry failed requests up to 5 times. An exponential backoff strategy spaces out retry attempts to prevent network overload.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.wiki/gh-39"&gt;&lt;strong&gt;Load Balancing&lt;/strong&gt;&lt;/a&gt;: Distribute LLM requests across multiple API keys or AI providers with weights to ensure high availability and optimal performance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.wiki/gh-40"&gt;&lt;strong&gt;Request Timeouts&lt;/strong&gt;&lt;/a&gt;: Manage unruly LLMs &amp;amp; latencies by setting up granular request timeouts, allowing automatic termination of requests that exceed a specified duration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.wiki/gh-41"&gt;&lt;strong&gt;Multi-modal LLM Gateway&lt;/strong&gt;&lt;/a&gt;: Call vision, audio (text-to-speech &amp;amp; speech-to-text), and image generation models from multiple providers — all using the familiar OpenAI signature&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.wiki/gh-42"&gt;&lt;strong&gt;Realtime APIs&lt;/strong&gt;&lt;/a&gt;: Call realtime APIs launched by OpenAI through the integrate websockets server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Security &amp;amp; Accuracy&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://portkey.wiki/gh-88"&gt;&lt;strong&gt;Guardrails&lt;/strong&gt;&lt;/a&gt;: Verify your LLM inputs and outputs to adhere to your specified checks. Choose from the 40+ pre-built guardrails to ensure compliance with security and accuracy standards. You can &lt;a href="https://portkey.wiki/gh-43"&gt;bring your own guardrails&lt;/a&gt; or choose from our &lt;a href="https://portkey.wiki/gh-44"&gt;many partners&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.wiki/gh-45"&gt;&lt;strong&gt;Secure Key Management&lt;/strong&gt;&lt;/a&gt;: Use your own keys or generate virtual keys on the fly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.wiki/gh-46"&gt;&lt;strong&gt;Role-based access control&lt;/strong&gt;&lt;/a&gt;: Granular access control for your users, workspaces and API keys.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.wiki/gh-47"&gt;&lt;strong&gt;Compliance &amp;amp; Data Privacy&lt;/strong&gt;&lt;/a&gt;: The AI gateway is SOC2, HIPAA, GDPR, and CCPA compliant.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Cost Management&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://portkey.wiki/gh-48"&gt;&lt;strong&gt;Smart caching&lt;/strong&gt;&lt;/a&gt;: Cache responses from LLMs to reduce costs and improve latency. Supports simple and semantic* caching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.wiki/gh-49"&gt;&lt;strong&gt;Usage analytics&lt;/strong&gt;&lt;/a&gt;: Monitor and analyze your AI and LLM usage, including request volume, latency, costs and error rates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.wiki/gh-89"&gt;&lt;strong&gt;Provider optimization&lt;/strong&gt;*&lt;/a&gt;: Automatically switch to the most cost-effective provider based on usage patterns and pricing models.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Collaboration &amp;amp; Workflows&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://portkey.ai/docs/integrations/agents"&gt;&lt;strong&gt;Agents Support&lt;/strong&gt;&lt;/a&gt;: Seamlessly integrate with popular agent frameworks to build complex AI applications. The gateway seamlessly integrates with &lt;a href="https://portkey.wiki/gh-50"&gt;Autogen&lt;/a&gt;, &lt;a href="https://portkey.wiki/gh-51"&gt;CrewAI&lt;/a&gt;, &lt;a href="https://portkey.wiki/gh-52"&gt;LangChain&lt;/a&gt;, &lt;a href="https://portkey.wiki/gh-53"&gt;LlamaIndex&lt;/a&gt;, &lt;a href="https://portkey.wiki/gh-54"&gt;Phidata&lt;/a&gt;, &lt;a href="https://portkey.wiki/gh-55"&gt;Control Flow&lt;/a&gt;, and even &lt;a href="https://portkey.wiki/gh-56"&gt;Custom Agents&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.wiki/gh-57"&gt;&lt;strong&gt;Prompt Template Management&lt;/strong&gt;*&lt;/a&gt;: Create, manage and version your prompt templates collaboratively through a universal prompt playground. &lt;br /&gt;&lt;br /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;sup&gt; *&amp;nbsp;Available in hosted and enterprise versions &lt;/sup&gt; 
&lt;br /&gt; 
&lt;h2&gt;Cookbooks&lt;/h2&gt; 
&lt;h3&gt;☄️ Trending&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use models from &lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/cookbook/providers/nvidia.ipynb"&gt;Nvidia NIM&lt;/a&gt; with AI Gateway&lt;/li&gt; 
 &lt;li&gt;Monitor &lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/cookbook/monitoring-agents/CrewAI_with_Telemetry.ipynb"&gt;CrewAI Agents&lt;/a&gt; with Portkey!&lt;/li&gt; 
 &lt;li&gt;Comparing &lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/cookbook/use-cases/LMSYS%20Series/comparing-top10-LMSYS-models-with-Portkey.ipynb"&gt;Top 10 LMSYS Models&lt;/a&gt; with AI Gateway.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🚨 Latest&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/cookbook/use-cases/Nemotron_GPT_Finetuning_Portkey.ipynb"&gt;Create Synthetic Datasets using Nemotron&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/cookbook/integrations/vercel-ai.md"&gt;Use the LLM Gateway with Vercel's AI SDK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/cookbook/monitoring-agents/Llama_Agents_with_Telemetry.ipynb"&gt;Monitor Llama Agents with Portkey's LLM Gateway&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://portkey.wiki/gh-58"&gt;View all cookbooks →&lt;/a&gt; &lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Supported Providers&lt;/h2&gt; 
&lt;p&gt;Explore Gateway integrations with &lt;a href="https://portkey.wiki/gh-59"&gt;45+ providers&lt;/a&gt; and &lt;a href="https://portkey.wiki/gh-90"&gt;8+ agent frameworks&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Provider&lt;/th&gt; 
   &lt;th&gt;Support&lt;/th&gt; 
   &lt;th&gt;Stream&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/Portkey-AI/gateway/main/docs/images/openai.png" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-60"&gt;OpenAI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/Portkey-AI/gateway/main/docs/images/azure.png" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-61"&gt;Azure OpenAI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/Portkey-AI/gateway/main/docs/images/anyscale.png" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-62"&gt;Anyscale&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/2/2d/Google-favicon-2015.png" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-63"&gt;Google Gemini&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/Portkey-AI/gateway/main/docs/images/anthropic.png" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-64"&gt;Anthropic&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/Portkey-AI/gateway/main/docs/images/cohere.png" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-65"&gt;Cohere&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://assets-global.website-files.com/64f6f2c0e3f4c5a91c1e823a/654693d569494912cfc0c0d4_favicon.svg?sanitize=true" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-66"&gt;Together AI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://www.perplexity.ai/favicon.svg?sanitize=true" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-67"&gt;Perplexity&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://docs.mistral.ai/img/favicon.ico" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-68"&gt;Mistral&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://docs.nomic.ai/img/nomic-logo.png" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-69"&gt;Nomic&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://files.readme.io/d38a23e-small-studio-favicon.png" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-91"&gt;AI21&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://platform.stability.ai/small-logo-purple.svg?sanitize=true" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-71"&gt;Stability AI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://deepinfra.com/_next/static/media/logo.4a03fd3d.svg?sanitize=true" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.sh/gh-92"&gt;DeepInfra&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://ollama.com/public/ollama.png" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-72"&gt;Ollama&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://novita.ai/favicon.ico" width="35" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-73"&gt;Novita AI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://portkey.wiki/gh-74"&gt;View the complete list of 200+ supported models here&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;Agents&lt;/h2&gt; 
&lt;p&gt;Gateway seamlessly integrates with popular agent frameworks. &lt;a href="https://portkey.wiki/gh-75"&gt;Read the documentation here&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Framework&lt;/th&gt; 
   &lt;th&gt;Call 200+ LLMs&lt;/th&gt; 
   &lt;th&gt;Advanced Routing&lt;/th&gt; 
   &lt;th&gt;Caching&lt;/th&gt; 
   &lt;th&gt;Logging &amp;amp; Tracing*&lt;/th&gt; 
   &lt;th&gt;Observability*&lt;/th&gt; 
   &lt;th&gt;Prompt Management*&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-93"&gt;Autogen&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-94"&gt;CrewAI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-95"&gt;LangChain&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-96"&gt;Phidata&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-97"&gt;Llama Index&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-98"&gt;Control Flow&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://portkey.wiki/gh-99"&gt;Build Your Own Agents&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;p&gt;*Available on the &lt;a href="https://portkey.wiki/gh-76"&gt;hosted app&lt;/a&gt;. For detailed documentation &lt;a href="https://portkey.wiki/gh-100"&gt;click here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Gateway Enterprise Version&lt;/h2&gt; 
&lt;p&gt;Make your AI app more &lt;ins&gt;reliable&lt;/ins&gt; and &lt;ins&gt;forward compatible&lt;/ins&gt;, while ensuring complete &lt;ins&gt;data security&lt;/ins&gt; and &lt;ins&gt;privacy&lt;/ins&gt;.&lt;/p&gt; 
&lt;p&gt;✅&amp;nbsp; Secure Key Management - for role-based access control and tracking &lt;br /&gt; ✅&amp;nbsp; Simple &amp;amp; Semantic Caching - to serve repeat queries faster &amp;amp; save costs &lt;br /&gt; ✅&amp;nbsp; Access Control &amp;amp; Inbound Rules - to control which IPs and Geos can connect to your deployments &lt;br /&gt; ✅&amp;nbsp; PII Redaction - to automatically remove sensitive data from your requests to prevent indavertent exposure &lt;br /&gt; ✅&amp;nbsp; SOC2, ISO, HIPAA, GDPR Compliances - for best security practices &lt;br /&gt; ✅&amp;nbsp; Professional Support - along with feature prioritization &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://portkey.sh/demo-13"&gt;Schedule a call to discuss enterprise deployments&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The easiest way to contribute is to pick an issue with the &lt;code&gt;good first issue&lt;/code&gt; tag 💪. Read the contribution guidelines &lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/.github/CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Bug Report? &lt;a href="https://portkey.wiki/gh-78"&gt;File here&lt;/a&gt; | Feature Request? &lt;a href="https://portkey.wiki/gh-78"&gt;File here&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Getting Started with the Community&lt;/h3&gt; 
&lt;p&gt;Join our weekly AI Engineering Hours every Friday (8 AM PT) to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Meet other contributors and community members&lt;/li&gt; 
 &lt;li&gt;Learn advanced Gateway features and implementation patterns&lt;/li&gt; 
 &lt;li&gt;Share your experiences and get help&lt;/li&gt; 
 &lt;li&gt;Stay updated with the latest development priorities&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://portkey.wiki/gh-101"&gt;Join the next session →&lt;/a&gt; | &lt;a href="https://portkey.wiki/gh-102"&gt;Meeting notes&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join our growing community around the world, for help, ideas, and discussions on AI.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;View our official &lt;a href="https://portkey.wiki/gh-78"&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat with us on &lt;a href="https://portkey.wiki/community"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow us on &lt;a href="https://portkey.wiki/gh-79"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Connect with us on &lt;a href="https://portkey.wiki/gh-80"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Read the documentation in &lt;a href="https://raw.githubusercontent.com/Portkey-AI/gateway/main/.github/README.jp.md"&gt;Japanese&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Visit us on &lt;a href="https://portkey.wiki/gh-103"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Join our &lt;a href="https://portkey.wiki/gh-82"&gt;Dev community&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- - Questions tagged #portkey on [Stack Overflow](https://stackoverflow.com/questions/tagged/portkey) --&gt; 
&lt;p&gt;&lt;img src="https://github.com/Portkey-AI/gateway/assets/971978/89d6f0af-a95d-4402-b451-14764c40d03f" alt="Rubeus Social Share (4)" /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ruvnet/claude-flow</title>
      <link>https://github.com/ruvnet/claude-flow</link>
      <description>&lt;p&gt;🌊 The leading agent orchestration platform for Claude. Deploy intelligent multi-agent swarms, coordinate autonomous workflows, and build conversational AI systems. Features enterprise-grade architecture, distributed swarm intelligence, RAG integration, and native Claude Code support via MCP protocol. Ranked #1 in agent-based frameworks.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🌊 Claude-Flow v2.0.0 Alpha: AI Orchestration Platform&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/github/stars/ruvnet/claude-flow?style=for-the-badge&amp;amp;logo=github&amp;amp;color=gold" alt="🌟 Star on GitHub" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow"&gt;&lt;img src="https://img.shields.io/npm/dt/claude-flow?style=for-the-badge&amp;amp;logo=npm&amp;amp;color=blue&amp;amp;label=Downloads" alt="📈 Downloads" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow"&gt;&lt;img src="https://img.shields.io/npm/v/claude-flow?style=for-the-badge&amp;amp;logo=npm&amp;amp;color=green&amp;amp;label=v2.0.0" alt="📦 Latest Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Claude%20Code-Optimized-green?style=for-the-badge&amp;amp;logo=anthropic" alt="⚡ Claude Code" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/dfxmpwkG2D"&gt;&lt;img src="https://img.shields.io/badge/Agentics-Foundation-crimson?style=for-the-badge&amp;amp;logo=openai" alt="🏛️ Agentics Foundation" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Hive--Mind-AI%20Coordination-purple?style=for-the-badge&amp;amp;logo=swarm" alt="🐝 Hive-Mind" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Neural-87%20MCP%20Tools-blue?style=for-the-badge&amp;amp;logo=pytorch" alt="🧠 Neural" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow?style=for-the-badge&amp;amp;logo=opensourceinitiative" alt="🛡️ MIT License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🌟 &lt;strong&gt;Overview&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Claude-Flow v2 Alpha&lt;/strong&gt; is an enterprise-grade AI orchestration platform that reimagines how developers build with AI. By combining &lt;strong&gt;hive-mind swarm intelligence&lt;/strong&gt;, &lt;strong&gt;neural pattern recognition&lt;/strong&gt;, and &lt;strong&gt;87 advanced MCP tools&lt;/strong&gt;, Claude-Flow enables unprecedented AI-powered development workflows.&lt;/p&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Key Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🐝 Hive-Mind Intelligence&lt;/strong&gt;: Queen-led AI coordination with specialized worker agents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🧠 Neural Networks&lt;/strong&gt;: 27+ cognitive models with WASM SIMD acceleration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔧 87 MCP Tools&lt;/strong&gt;: Comprehensive toolkit for swarm orchestration, memory, and automation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 Dynamic Agent Architecture (DAA)&lt;/strong&gt;: Self-organizing agents with fault tolerance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💾 SQLite Memory System&lt;/strong&gt;: Persistent &lt;code&gt;.swarm/memory.db&lt;/code&gt; with 12 specialized tables&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🪝 Advanced Hooks System&lt;/strong&gt;: Automated workflows with pre/post operation hooks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 GitHub Integration&lt;/strong&gt;: 6 specialized modes for repository management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 Flow Nexus Cloud Platform&lt;/strong&gt;: E2B sandboxes, AI swarms, challenges, and marketplace integration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🔥 &lt;strong&gt;Revolutionary AI Coordination&lt;/strong&gt;: Build faster, smarter, and more efficiently with AI-powered development orchestration&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🌐 &lt;strong&gt;Flow Nexus Cloud Platform&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NEW&lt;/strong&gt;: Claude-Flow v2.0.0 now includes &lt;strong&gt;Flow Nexus integration&lt;/strong&gt; - a cloud-powered AI development platform featuring:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;E2B Sandboxes&lt;/strong&gt;: Secure isolated environments for Node.js, Python, React, Next.js&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Swarms&lt;/strong&gt;: Deploy multi-agent systems in cloud infrastructure&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural Training&lt;/strong&gt;: Distributed machine learning with custom model deployment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Challenges &amp;amp; Marketplace&lt;/strong&gt;: Coding challenges with rUv credit rewards and template marketplace&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workflow Automation&lt;/strong&gt;: Event-driven automation with message queue processing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 &lt;strong&gt;Complete documentation&lt;/strong&gt;: Visit &lt;a href="https://flow-nexus.ruv.io"&gt;flow-nexus.ruv.io&lt;/a&gt; for comprehensive guides, tutorials, and API reference. Also see issue # &lt;a href="https://github.com/ruvnet/claude-flow/issues/732"&gt;https://github.com/ruvnet/claude-flow/issues/732&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;⚡ &lt;strong&gt;Try v2.0.0 Alpha in 4 Commands&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;📋 &lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js 18+&lt;/strong&gt; (LTS recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;npm 9+&lt;/strong&gt; or equivalent package manager&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows users&lt;/strong&gt;: See &lt;a href="https://github.com/ruvnet/claude-code-flow/raw/main/docs/windows-installation.md"&gt;Windows Installation Guide&lt;/a&gt; for special instructions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;⚠️ &lt;strong&gt;IMPORTANT&lt;/strong&gt;: Claude Code must be installed first:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Install Claude Code globally
npm install -g @anthropic-ai/claude-code

# 2. (Optional) Skip permissions check for faster setup
# Only use if you understand the security implications
claude --dangerously-skip-permissions
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;💡 &lt;strong&gt;Windows Note&lt;/strong&gt;: If you encounter SQLite errors, Claude Flow will automatically use in-memory storage. For persistent storage options, see our &lt;a href="https://github.com/ruvnet/claude-code-flow/raw/main/docs/windows-installation.md"&gt;Windows guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Instant Alpha Testing&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Initialize Claude Flow with enhanced MCP setup (auto-configures permissions!)
npx claude-flow@alpha init --force

# 2. Explore all revolutionary capabilities  
npx claude-flow@alpha --help

# 3a. Quick AI coordination (recommended for most tasks)
npx claude-flow@alpha swarm "build me a REST API" --claude

# 3b. OR launch the full hive-mind system (for complex projects)
npx claude-flow@alpha hive-mind wizard
npx claude-flow@alpha hive-mind spawn "build enterprise system" --claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🚀 &lt;strong&gt;Quick Start with Flow Nexus&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Initialize Flow Nexus only (minimal setup)
npx claude-flow init --flow-nexus

# 2. Register and login (use MCP tools in Claude Code)
mcp__flow-nexus__user_register({ email: "your@email.com", password: "secure" })
mcp__flow-nexus__user_login({ email: "your@email.com", password: "secure" })

# 3. Deploy your first cloud swarm
mcp__flow-nexus__swarm_init({ topology: "mesh", maxAgents: 5 })
mcp__flow-nexus__sandbox_create({ template: "node", name: "api-dev" })
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🤔 &lt;strong&gt;Swarm vs Hive-Mind: Which to Use?&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;swarm&lt;/code&gt; Command&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;hive-mind&lt;/code&gt; Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Best For&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Quick tasks, single objectives&lt;/td&gt; 
   &lt;td&gt;Complex projects, persistent sessions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Setup&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Instant - no configuration needed&lt;/td&gt; 
   &lt;td&gt;Interactive wizard setup&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Session&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Temporary coordination&lt;/td&gt; 
   &lt;td&gt;Persistent with resume capability&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Memory&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Task-scoped&lt;/td&gt; 
   &lt;td&gt;Project-wide with SQLite storage&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Agents&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Auto-spawned for task&lt;/td&gt; 
   &lt;td&gt;Manual control with specializations&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Use When&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;"Build X", "Fix Y", "Analyze Z"&lt;/td&gt; 
   &lt;td&gt;Multi-feature projects, team coordination&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Quick Rule:&lt;/strong&gt; Start with &lt;code&gt;swarm&lt;/code&gt; for most tasks. Use &lt;code&gt;hive-mind&lt;/code&gt; when you need persistent sessions or complex multi-agent coordination.&lt;/p&gt; 
&lt;h2&gt;🎯 &lt;strong&gt;Typical Workflows - Your "Happy Path" Guide&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;New to Claude-Flow? Start Here!&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Confused about &lt;code&gt;.hive-mind&lt;/code&gt; and &lt;code&gt;.swarm&lt;/code&gt; directories? Not sure when to create new hives? Here are the most common workflow patterns:&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;🚀 Pattern 1: Single Feature Development&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Initialize once per feature/task
npx claude-flow@alpha init --force
npx claude-flow@alpha hive-mind spawn "Implement user authentication" --claude

# Continue working on SAME feature (reuse existing hive)
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha memory query "authentication" --recent
npx claude-flow@alpha swarm "Add password reset functionality" --continue-session
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;🏗️ Pattern 2: Multi-Feature Project&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Project-level initialization (once per project)
npx claude-flow@alpha init --force --project-name "my-app"

# Feature 1: Authentication (new hive)
npx claude-flow@alpha hive-mind spawn "auth-system" --namespace auth --claude

# Feature 2: User management (separate hive)  
npx claude-flow@alpha hive-mind spawn "user-management" --namespace users --claude

# Resume Feature 1 later (use session ID from spawn output)
npx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;🔍 Pattern 3: Research &amp;amp; Analysis&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start research session
npx claude-flow@alpha hive-mind spawn "Research microservices patterns" --agents researcher,analyst --claude

# Continue research in SAME session
npx claude-flow@alpha memory stats  # See what's been learned
npx claude-flow@alpha swarm "Deep dive into API gateway patterns" --continue-session
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🤔 When Should I Create a New Hive?&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Situation&lt;/th&gt; 
   &lt;th&gt;Action&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Same objective/feature&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Continue existing hive&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind resume &amp;lt;session-id&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;New feature in same project&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Create new hive with namespace&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind spawn "new-feature" --namespace feature-name&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Completely different project&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;New directory + init&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;mkdir new-project &amp;amp;&amp;amp; cd new-project &amp;amp;&amp;amp; npx claude-flow@alpha init&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Experimenting/testing&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Temporary hive&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind spawn "experiment" --temp&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;strong&gt;📁 Understanding "Empty" Directories&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Don't panic if directories seem empty!&lt;/strong&gt; Claude-Flow uses SQLite databases that may not show files in directory listings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Check what's actually stored (even if directories look empty)
npx claude-flow@alpha memory stats        # See memory data
npx claude-flow@alpha memory list         # List all namespaces  
npx claude-flow@alpha hive-mind status    # See active hives

# Your project structure after initialization:
# .hive-mind/     &amp;lt;- Contains config.json + SQLite session data
# .swarm/         &amp;lt;- Contains memory.db (SQLite database)
# memory/         &amp;lt;- Agent-specific memories (created when agents spawn)
# coordination/   &amp;lt;- Active workflow files (created during tasks)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🔄 Continuing Previous Work&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# See what you were working on
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha memory query --recent --limit 5

# List all sessions to find the one you want
npx claude-flow@alpha hive-mind sessions

# Resume specific session by ID
npx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🪝 &lt;strong&gt;Advanced Hooks System&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Automated Workflow Enhancement&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Claude-Flow v2.0.0 introduces a powerful hooks system that automates coordination and enhances every operation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Hooks automatically trigger on operations
npx claude-flow@alpha init --force  # Auto-configures MCP servers &amp;amp; hooks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Available Hooks&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;Pre-Operation Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-task&lt;/code&gt;&lt;/strong&gt;: Auto-assigns agents based on task complexity&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-search&lt;/code&gt;&lt;/strong&gt;: Caches searches for improved performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-edit&lt;/code&gt;&lt;/strong&gt;: Validates files and prepares resources&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-command&lt;/code&gt;&lt;/strong&gt;: Security validation before execution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Post-Operation Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-edit&lt;/code&gt;&lt;/strong&gt;: Auto-formats code using language-specific tools&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-task&lt;/code&gt;&lt;/strong&gt;: Trains neural patterns from successful operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-command&lt;/code&gt;&lt;/strong&gt;: Updates memory with operation context&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;notification&lt;/code&gt;&lt;/strong&gt;: Real-time progress updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Session Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-start&lt;/code&gt;&lt;/strong&gt;: Restores previous context automatically&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-end&lt;/code&gt;&lt;/strong&gt;: Generates summaries and persists state&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-restore&lt;/code&gt;&lt;/strong&gt;: Loads memory from previous sessions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Hook Configuration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;// .claude/settings.json (auto-configured)
{
  "hooks": {
    "preEditHook": {
      "command": "npx",
      "args": ["claude-flow", "hooks", "pre-edit", "--file", "${file}", "--auto-assign-agents", "true"],
      "alwaysRun": false
    },
    "postEditHook": {
      "command": "npx", 
      "args": ["claude-flow", "hooks", "post-edit", "--file", "${file}", "--format", "true"],
      "alwaysRun": true
    },
    "sessionEndHook": {
      "command": "npx",
      "args": ["claude-flow", "hooks", "session-end", "--generate-summary", "true"],
      "alwaysRun": true
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Using Hooks in Claude Code&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Hooks integrate seamlessly with Claude Code's workflow:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic Triggering&lt;/strong&gt;: Hooks fire automatically during Claude Code operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Context Awareness&lt;/strong&gt;: Each hook receives relevant context (file paths, commands, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Non-Blocking&lt;/strong&gt;: Hooks run asynchronously to maintain performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable&lt;/strong&gt;: Enable/disable specific hooks as needed&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;strong&gt;Hook Examples&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Manual hook execution
npx claude-flow hooks pre-task --description "Build REST API" --auto-spawn-agents

# Post-edit with formatting
npx claude-flow hooks post-edit --file "src/api.js" --format --train-neural

# Session management
npx claude-flow hooks session-end --generate-summary --persist-state
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Fixing Hook Variable Interpolation&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;If you're experiencing issues with &lt;code&gt;${file}&lt;/code&gt; or &lt;code&gt;${command}&lt;/code&gt; variables not working in your hooks (common with Claude Code 1.0.51+), use the &lt;code&gt;fix-hook-variables&lt;/code&gt; command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Fix all found settings.json files
npx claude-flow@alpha fix-hook-variables

# Fix specific file
npx claude-flow@alpha fix-hook-variables .claude/settings.json

# Create test configuration
npx claude-flow@alpha fix-hook-variables --test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command automatically transforms legacy variable syntax to working environment variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;${file}&lt;/code&gt; → &lt;code&gt;$CLAUDE_EDITED_FILE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;${command}&lt;/code&gt; → &lt;code&gt;$CLAUDE_COMMAND&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;${tool}&lt;/code&gt; → &lt;code&gt;$CLAUDE_TOOL&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🐝 &lt;strong&gt;Revolutionary Hive-Mind Intelligence&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Queen-Led AI Coordination&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Claude-Flow v2.0.0 introduces groundbreaking hive-mind architecture where a &lt;strong&gt;Queen AI&lt;/strong&gt; coordinates specialized worker agents in perfect harmony.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Deploy intelligent swarm coordination
npx claude-flow@alpha swarm "Build a full-stack application" --strategy development

# Launch hive-mind with specific specializations
npx claude-flow@alpha hive-mind spawn "Create microservices architecture" --agents 8 --claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🤖 Intelligent Agent Types&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;👑 Queen Agent&lt;/strong&gt;: Master coordinator and decision maker&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🏗️ Architect Agents&lt;/strong&gt;: System design and technical architecture&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💻 Coder Agents&lt;/strong&gt;: Implementation and development&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🧪 Tester Agents&lt;/strong&gt;: Quality assurance and validation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 Analyst Agents&lt;/strong&gt;: Data analysis and insights&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔍 Researcher Agents&lt;/strong&gt;: Information gathering and analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛡️ Security Agents&lt;/strong&gt;: Security auditing and compliance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 DevOps Agents&lt;/strong&gt;: Deployment and infrastructure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⚡ &lt;strong&gt;87 Advanced MCP Tools&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🧠 Neural &amp;amp; Cognitive Tools&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Neural pattern recognition and training
npx claude-flow@alpha neural train --pattern coordination --epochs 50
npx claude-flow@alpha neural predict --model cognitive-analysis
npx claude-flow@alpha cognitive analyze --behavior "development workflow"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;💾 SQLite Memory Systems&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Cross-session memory management with SQLite persistence
npx claude-flow@alpha memory store "project-context" "Full-stack app requirements"
npx claude-flow@alpha memory query "authentication" --namespace sparc
npx claude-flow@alpha memory stats  # Shows 12 specialized tables
npx claude-flow@alpha memory export backup.json --namespace default
npx claude-flow@alpha memory import project-memory.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🪟 &lt;strong&gt;Windows Users&lt;/strong&gt;: SQLite will automatically fallback to in-memory storage if native modules fail. All features work normally, but data won't persist between sessions. See &lt;a href="https://github.com/ruvnet/claude-code-flow/raw/main/docs/windows-installation.md"&gt;Windows guide&lt;/a&gt; for persistent storage options.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;strong&gt;🔄 Workflow Orchestration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Advanced workflow automation
npx claude-flow@alpha workflow create --name "CI/CD Pipeline" --parallel
npx claude-flow@alpha batch process --items "test,build,deploy" --concurrent
npx claude-flow@alpha pipeline create --config advanced-deployment.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🧠 &lt;strong&gt;Neural Network Capabilities&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Cognitive Computing Engine&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Powered by 27+ neural models optimized with WASM SIMD acceleration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Train coordination patterns
npx claude-flow@alpha neural train --pattern coordination --data "workflow.json"

# Real-time predictions
npx claude-flow@alpha neural predict --model task-optimizer --input "current-state.json"

# Analyze cognitive behavior
npx claude-flow@alpha cognitive analyze --behavior "development-patterns"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Neural Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Pattern Recognition&lt;/strong&gt;: Learns from successful operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Adaptive Learning&lt;/strong&gt;: Improves performance over time&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Transfer Learning&lt;/strong&gt;: Apply knowledge across domains&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Compression&lt;/strong&gt;: Efficient storage and execution&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ensemble Models&lt;/strong&gt;: Combine multiple neural networks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Explainable AI&lt;/strong&gt;: Understand decision-making process&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔧 &lt;strong&gt;DAA MCP Endpoints&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Dynamic Agent Architecture&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Complete programmatic control over agent lifecycle and coordination:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Create specialized agents
npx claude-flow@alpha daa agent-create --type "specialized-researcher" \
  --capabilities "[\"deep-analysis\", \"pattern-recognition\"]" \
  --resources "{\"memory\": 2048, \"compute\": \"high\"}"

# Match capabilities to tasks
npx claude-flow@alpha daa capability-match \
  --task-requirements "[\"security-analysis\", \"performance-optimization\"]"

# Manage agent lifecycle
npx claude-flow@alpha daa lifecycle-manage --agentId "agent-123" --action "scale-up"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;DAA Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Resource Allocation&lt;/strong&gt;: Dynamic CPU/memory management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Inter-Agent Communication&lt;/strong&gt;: Message passing and coordination&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Consensus Mechanisms&lt;/strong&gt;: Democratic decision making&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fault Tolerance&lt;/strong&gt;: Self-healing with automatic recovery&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Optimization&lt;/strong&gt;: Real-time bottleneck resolution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;MCP Tool Categories&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;🐝 Swarm Orchestration&lt;/strong&gt; (15 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;swarm_init&lt;/code&gt;, &lt;code&gt;agent_spawn&lt;/code&gt;, &lt;code&gt;task_orchestrate&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;swarm_monitor&lt;/code&gt;, &lt;code&gt;topology_optimize&lt;/code&gt;, &lt;code&gt;load_balance&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;coordination_sync&lt;/code&gt;, &lt;code&gt;swarm_scale&lt;/code&gt;, &lt;code&gt;swarm_destroy&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;🧠 Neural &amp;amp; Cognitive&lt;/strong&gt; (12 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;neural_train&lt;/code&gt;, &lt;code&gt;neural_predict&lt;/code&gt;, &lt;code&gt;pattern_recognize&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cognitive_analyze&lt;/code&gt;, &lt;code&gt;learning_adapt&lt;/code&gt;, &lt;code&gt;neural_compress&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ensemble_create&lt;/code&gt;, &lt;code&gt;transfer_learn&lt;/code&gt;, &lt;code&gt;neural_explain&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;💾 Memory Management&lt;/strong&gt; (10 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;memory_usage&lt;/code&gt;, &lt;code&gt;memory_search&lt;/code&gt;, &lt;code&gt;memory_persist&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;memory_namespace&lt;/code&gt;, &lt;code&gt;memory_backup&lt;/code&gt;, &lt;code&gt;memory_restore&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;memory_compress&lt;/code&gt;, &lt;code&gt;memory_sync&lt;/code&gt;, &lt;code&gt;memory_analytics&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SQLite Backend&lt;/strong&gt;: Persistent &lt;code&gt;.swarm/memory.db&lt;/code&gt; with 12 specialized tables&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;📊 Performance &amp;amp; Monitoring&lt;/strong&gt; (10 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;performance_report&lt;/code&gt;, &lt;code&gt;bottleneck_analyze&lt;/code&gt;, &lt;code&gt;token_usage&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;benchmark_run&lt;/code&gt;, &lt;code&gt;metrics_collect&lt;/code&gt;, &lt;code&gt;trend_analysis&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;health_check&lt;/code&gt;, &lt;code&gt;diagnostic_run&lt;/code&gt;, &lt;code&gt;usage_stats&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;🔄 Workflow Automation&lt;/strong&gt; (10 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;workflow_create&lt;/code&gt;, &lt;code&gt;workflow_execute&lt;/code&gt;, &lt;code&gt;workflow_export&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;automation_setup&lt;/code&gt;, &lt;code&gt;pipeline_create&lt;/code&gt;, &lt;code&gt;scheduler_manage&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;trigger_setup&lt;/code&gt;, &lt;code&gt;batch_process&lt;/code&gt;, &lt;code&gt;parallel_execute&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;📦 GitHub Integration&lt;/strong&gt; (6 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;github_repo_analyze&lt;/code&gt;, &lt;code&gt;github_pr_manage&lt;/code&gt;, &lt;code&gt;github_issue_track&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;github_release_coord&lt;/code&gt;, &lt;code&gt;github_workflow_auto&lt;/code&gt;, &lt;code&gt;github_code_review&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;🤖 Dynamic Agents&lt;/strong&gt; (6 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;daa_agent_create&lt;/code&gt;, &lt;code&gt;daa_capability_match&lt;/code&gt;, &lt;code&gt;daa_resource_alloc&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;daa_lifecycle_manage&lt;/code&gt;, &lt;code&gt;daa_communication&lt;/code&gt;, &lt;code&gt;daa_consensus&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;🛡️ System &amp;amp; Security&lt;/strong&gt; (8 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;security_scan&lt;/code&gt;, &lt;code&gt;backup_create&lt;/code&gt;, &lt;code&gt;restore_system&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;config_manage&lt;/code&gt;, &lt;code&gt;features_detect&lt;/code&gt;, &lt;code&gt;log_analysis&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;📊 GitHub Integration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# GitHub workflow orchestration and coordination
npx claude-flow@alpha github gh-coordinator analyze --analysis-type security
npx claude-flow@alpha github pr-manager review --multi-reviewer --ai-powered
npx claude-flow@alpha github release-manager coord --version 2.0.0 --auto-changelog
npx claude-flow@alpha github repo-architect optimize --structure-analysis
npx claude-flow@alpha github issue-tracker manage --project-coordination
npx claude-flow@alpha github sync-coordinator align --multi-package
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛡️ &lt;strong&gt;Seamless Claude Code Integration&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Auto-MCP Server Setup&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;v2.0.0 Alpha automatically configures MCP servers for seamless Claude Code integration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Automatic MCP integration (happens during init)
✅ claude-flow MCP server configured
✅ ruv-swarm MCP server configured  
✅ 87 tools available in Claude Code
✅ --dangerously-skip-permissions set as default
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Enhanced SPARC Workflows&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Advanced SPARC development with neural enhancement
npx claude-flow@alpha sparc mode --type "neural-tdd" --auto-learn
npx claude-flow@alpha sparc workflow --phases "all" --ai-guided --memory-enhanced
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🧠 &lt;strong&gt;Cognitive Computing Features&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🎯 Neural Pattern Recognition&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;27+ Cognitive Models&lt;/strong&gt;: Adaptive learning from successful operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pattern Analysis&lt;/strong&gt;: Real-time behavior analysis and optimization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Decision Tracking&lt;/strong&gt;: Complete audit trail of AI decisions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Learning&lt;/strong&gt;: Continuous improvement from past executions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;🔄 Self-Healing Systems&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Automatic error recovery and optimization
npx claude-flow@alpha health check --components all --auto-heal
npx claude-flow@alpha fault tolerance --strategy retry-with-learning
npx claude-flow@alpha bottleneck analyze --auto-optimize
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;💾 Advanced Memory Architecture&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SQLite Persistence&lt;/strong&gt;: Robust &lt;code&gt;.swarm/memory.db&lt;/code&gt; storage with 12 specialized tables&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cross-Session Persistence&lt;/strong&gt;: Remember context across Claude Code sessions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Namespace Management&lt;/strong&gt;: Organized memory with hierarchical access&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced Schema&lt;/strong&gt;: Agent interactions, training data, performance metrics, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory Compression&lt;/strong&gt;: Efficient storage of large coordination contexts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Distributed Sync&lt;/strong&gt;: Share memory across multiple AI instances&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📊 &lt;strong&gt;Performance Metrics&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🏆 Industry-Leading Results&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;✅ 84.8% SWE-Bench Solve Rate&lt;/strong&gt;: Superior problem-solving through hive-mind coordination&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ 32.3% Token Reduction&lt;/strong&gt;: Efficient task breakdown reduces costs significantly&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ 2.8-4.4x Speed Improvement&lt;/strong&gt;: Parallel coordination maximizes throughput&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ 87 MCP Tools&lt;/strong&gt;: Most comprehensive AI tool suite available&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ Zero-Config Setup&lt;/strong&gt;: Automatic MCP integration with Claude Code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;🚀 Available Capabilities&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Check memory system performance
npx claude-flow@alpha memory stats
npx claude-flow@alpha memory list

# Test GitHub coordination modes
npx claude-flow@alpha github gh-coordinator --help
npx claude-flow@alpha github pr-manager --help

# Workflow orchestration
npx claude-flow@alpha workflow create --name "Development Pipeline" --parallel
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎮 &lt;strong&gt;Advanced Usage Examples&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🏗️ Full-Stack Development&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Deploy complete development swarm
npx claude-flow@alpha hive-mind spawn "Build e-commerce platform with React, Node.js, and PostgreSQL" \
  --agents 10 \
  --strategy parallel \
  --memory-namespace ecommerce

# Monitor progress in real-time
npx claude-flow@alpha swarm monitor --dashboard --real-time
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🔬 Research &amp;amp; Analysis&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Deploy research swarm with neural enhancement
npx claude-flow@alpha swarm "Research AI safety in autonomous systems" \
  --strategy research \
  --neural-patterns enabled \
  --memory-compression high

# Analyze results with cognitive computing
npx claude-flow@alpha cognitive analyze --target research-results
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🛡️ Security &amp;amp; Compliance&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Automated security analysis with AI coordination
npx claude-flow@alpha github gh-coordinator analyze --analysis-type security --target ./src
npx claude-flow@alpha github repo-architect optimize --security-focused --compliance SOC2
npx claude-flow@alpha hive-mind spawn "security audit and compliance review" --claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🏗️ &lt;strong&gt;Alpha Architecture Overview&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🐝 Hive-Mind Coordination Layer&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;┌─────────────────────────────────────────────────────────┐
│                    👑 Queen Agent                       │
│              (Master Coordinator)                      │
├─────────────────────────────────────────────────────────┤
│  🏗️ Architect │ 💻 Coder │ 🧪 Tester │ 🔍 Research │ 🛡️ Security │
│      Agent    │   Agent  │   Agent   │    Agent    │    Agent    │
├─────────────────────────────────────────────────────────┤
│           🧠 Neural Pattern Recognition Layer           │
├─────────────────────────────────────────────────────────┤
│              💾 Distributed Memory System               │
├─────────────────────────────────────────────────────────┤
│            ⚡ 87 MCP Tools Integration Layer            │
├─────────────────────────────────────────────────────────┤
│              🛡️ Claude Code Integration                 │
└─────────────────────────────────────────────────────────┘
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🔄 Coordination Strategies&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Hierarchical&lt;/strong&gt;: Queen-led with specialized worker agents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mesh&lt;/strong&gt;: Peer-to-peer coordination for complex tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hybrid&lt;/strong&gt;: Dynamic strategy selection based on task complexity&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural-Enhanced&lt;/strong&gt;: AI-optimized coordination patterns&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛠️ &lt;strong&gt;Alpha Installation &amp;amp; Setup&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🚀 Quick Alpha Installation&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Global installation (recommended for testing)
npm install -g claude-flow@alpha

# Or use NPX for instant testing
npx claude-flow@alpha init --force

# Verify installation
claude-flow --version  # Should show 2.0.0-alpha.53
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🔧 Enhanced Configuration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Initialize with full alpha features
npx claude-flow@alpha init --force --hive-mind --neural-enhanced

# Configure Claude Code integration
npx claude-flow@alpha mcp setup --auto-permissions --87-tools

# Test hive-mind coordination
npx claude-flow@alpha hive-mind test --agents 5 --coordination-test
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📋 &lt;strong&gt;Alpha Command Reference&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;For complete command documentation, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx claude-flow@alpha --help          # Main help
npx claude-flow@alpha help &amp;lt;command&amp;gt;  # Detailed command help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key Commands:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Hive-Mind&lt;/strong&gt;: &lt;code&gt;hive-mind wizard&lt;/code&gt;, &lt;code&gt;hive-mind spawn&lt;/code&gt;, &lt;code&gt;hive-mind status&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural&lt;/strong&gt;: &lt;code&gt;neural train&lt;/code&gt;, &lt;code&gt;neural predict&lt;/code&gt;, &lt;code&gt;cognitive analyze&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: &lt;code&gt;memory store&lt;/code&gt;, &lt;code&gt;memory query&lt;/code&gt;, &lt;code&gt;memory stats&lt;/code&gt;, &lt;code&gt;memory export/import&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub&lt;/strong&gt;: &lt;code&gt;github &amp;lt;mode&amp;gt;&lt;/code&gt; (6 specialized modes available)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workflows&lt;/strong&gt;: &lt;code&gt;workflow create&lt;/code&gt;, &lt;code&gt;batch process&lt;/code&gt;, &lt;code&gt;pipeline create&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📚 &lt;strong&gt;Additional Documentation&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Core Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/API.md"&gt;Complete API Reference&lt;/a&gt; - Comprehensive API documentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/CLI.md"&gt;CLI Commands Guide&lt;/a&gt; - All command-line options&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/ARCHITECTURE.md"&gt;Architecture Overview&lt;/a&gt; - System design and internals&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/examples/"&gt;Examples Directory&lt;/a&gt; - Code examples and demos&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;New Features (v2.0.0)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/GIT_CHECKPOINT_HOOKS.md"&gt;🔒 Git Checkpoint System&lt;/a&gt; - Automatic Git checkpoints for Claude Code sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/REAL_PERFORMANCE_TRACKING.md"&gt;📊 Real Performance Tracking&lt;/a&gt; - Actual metrics collection and analysis&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/windows-installation.md"&gt;🪟 Windows Installation&lt;/a&gt; - Special instructions for Windows users&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Integration Guides&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/mcp-setup.md"&gt;MCP Server Setup&lt;/a&gt; - Model Context Protocol configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/claude-code-integration.md"&gt;Claude Code Integration&lt;/a&gt; - Enhanced AI workflows&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/github-workflows.md"&gt;GitHub Workflows&lt;/a&gt; - Repository automation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📄 &lt;strong&gt;License&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;MIT License - see &lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Alpha Disclaimer&lt;/strong&gt;: This is an alpha release intended for testing and feedback. Use in production environments is not recommended.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎉 &lt;strong&gt;Alpha Credits&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🧠 Hive-Mind Architecture&lt;/strong&gt;: Inspired by natural swarm intelligence&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Neural Computing&lt;/strong&gt;: Advanced AI coordination patterns&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛡️ Claude Code Integration&lt;/strong&gt;: Seamless AI development workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 Performance Optimization&lt;/strong&gt;: 2.8-4.4x speed improvements through parallel coordination&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;&lt;strong&gt;🚀 Ready to experience the future of AI development?&lt;/strong&gt;&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;npx claude-flow@alpha init --force
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Join the alpha testing revolution!&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/ruvnet/claude-flow/tree/claude-flow-v2.0.0"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Alpha%20Branch-blue?style=for-the-badge&amp;amp;logo=github" alt="GitHub" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow/v/alpha"&gt;&lt;img src="https://img.shields.io/badge/NPM-Alpha%20Release-orange?style=for-the-badge&amp;amp;logo=npm" alt="NPM Alpha" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/dfxmpwkG2D"&gt;&lt;img src="https://img.shields.io/badge/Discord-Agentics%20Community-purple?style=for-the-badge&amp;amp;logo=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;h2&gt;Star History&lt;/h2&gt; 
 &lt;a href="https://www.star-history.com/#ruvnet/claude-flow&amp;amp;Date"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date" /&gt; 
   &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;strong&gt;Built with ❤️ by &lt;a href="https://github.com/ruvnet"&gt;rUv&lt;/a&gt; | Powered by Revolutionary AI&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;v2.0.0 Alpha - The Future of AI Orchestration&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>czlonkowski/n8n-mcp</title>
      <link>https://github.com/czlonkowski/n8n-mcp</link>
      <description>&lt;p&gt;A MCP for Claude Desktop / Claude Code / Windsurf / Cursor to build n8n workflows for you&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;n8n-MCP&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czlonkowski/n8n-mcp"&gt;&lt;img src="https://img.shields.io/github/stars/czlonkowski/n8n-mcp?style=social" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czlonkowski/n8n-mcp"&gt;&lt;img src="https://img.shields.io/badge/version-2.11.1-blue.svg?sanitize=true" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/n8n-mcp"&gt;&lt;img src="https://img.shields.io/npm/v/n8n-mcp.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/czlonkowski/n8n-mcp"&gt;&lt;img src="https://codecov.io/gh/czlonkowski/n8n-mcp/graph/badge.svg?token=YOUR_TOKEN" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czlonkowski/n8n-mcp/actions"&gt;&lt;img src="https://img.shields.io/badge/tests-1728%20passing-brightgreen.svg?sanitize=true" alt="Tests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/n8n-io/n8n"&gt;&lt;img src="https://img.shields.io/badge/n8n-%5E1.110.1-orange.svg?sanitize=true" alt="n8n version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czlonkowski/n8n-mcp/pkgs/container/n8n-mcp"&gt;&lt;img src="https://img.shields.io/badge/docker-ghcr.io%2Fczlonkowski%2Fn8n--mcp-green.svg?sanitize=true" alt="Docker" /&gt;&lt;/a&gt; &lt;a href="https://railway.com/deploy/n8n-mcp?referralCode=n8n-mcp"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A Model Context Protocol (MCP) server that provides AI assistants with comprehensive access to n8n node documentation, properties, and operations. Deploy in minutes to give Claude and other AI assistants deep knowledge about n8n's 525+ workflow automation nodes.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;n8n-MCP serves as a bridge between n8n's workflow automation platform and AI models, enabling them to understand and work with n8n nodes effectively. It provides structured access to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📚 &lt;strong&gt;535 n8n nodes&lt;/strong&gt; from both n8n-nodes-base and @n8n/n8n-nodes-langchain&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;strong&gt;Node properties&lt;/strong&gt; - 99% coverage with detailed schemas&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Node operations&lt;/strong&gt; - 63.6% coverage of available actions&lt;/li&gt; 
 &lt;li&gt;📄 &lt;strong&gt;Documentation&lt;/strong&gt; - 90% coverage from official n8n docs (including AI nodes)&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;AI tools&lt;/strong&gt; - 263 AI-capable nodes detected with full documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⚠️ Important Safety Warning&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NEVER edit your production workflows directly with AI!&lt;/strong&gt; Always:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;Make a copy&lt;/strong&gt; of your workflow before using AI tools&lt;/li&gt; 
 &lt;li&gt;🧪 &lt;strong&gt;Test in development&lt;/strong&gt; environment first&lt;/li&gt; 
 &lt;li&gt;💾 &lt;strong&gt;Export backups&lt;/strong&gt; of important workflows&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Validate changes&lt;/strong&gt; before deploying to production&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;AI results can be unpredictable. Protect your work!&lt;/p&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;p&gt;Get n8n-MCP running in 5 minutes:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/5CccjiLLyaY?si=Z62SBGlw9G34IQnQ&amp;amp;t=343"&gt;&lt;img src="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/thumbnail.png" alt="n8n-mcp Video Quickstart Guide" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Option 1: npx (Fastest - No Installation!) 🚀&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; installed on your system&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run directly with npx (no installation needed!)
npx n8n-mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add to Claude Desktop config:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Basic configuration (documentation tools only):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "npx",
      "args": ["n8n-mcp"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Full configuration (with n8n management tools):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "npx",
      "args": ["n8n-mcp"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true",
        "N8N_API_URL": "https://your-n8n-instance.com",
        "N8N_API_KEY": "your-api-key"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: npx will download and run the latest version automatically. The package includes a pre-built database with all n8n node information.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Configuration file locations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Restart Claude Desktop after updating configuration&lt;/strong&gt; - That's it! 🎉&lt;/p&gt; 
&lt;h3&gt;Option 2: Docker (Easy &amp;amp; Isolated) 🐳&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; Docker installed on your system&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;📦 Install Docker&lt;/strong&gt; (click to expand)&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;macOS:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Using Homebrew
brew install --cask docker

# Or download from https://www.docker.com/products/docker-desktop/
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Linux (Ubuntu/Debian):&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Update package index
sudo apt-get update

# Install Docker
sudo apt-get install docker.io

# Start Docker service
sudo systemctl start docker
sudo systemctl enable docker

# Add your user to docker group (optional, to run without sudo)
sudo usermod -aG docker $USER
# Log out and back in for this to take effect
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Option 1: Using winget (Windows Package Manager)
winget install Docker.DockerDesktop

# Option 2: Using Chocolatey
choco install docker-desktop

# Option 3: Download installer from https://www.docker.com/products/docker-desktop/
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Verify installation:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Pull the Docker image (~280MB, no n8n dependencies!)
docker pull ghcr.io/czlonkowski/n8n-mcp:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚡ Ultra-optimized:&lt;/strong&gt; Our Docker image is 82% smaller than typical n8n images because it contains NO n8n dependencies - just the runtime MCP server with a pre-built database!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Add to Claude Desktop config:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Basic configuration (documentation tools only):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--init",
        "-e", "MCP_MODE=stdio",
        "-e", "LOG_LEVEL=error",
        "-e", "DISABLE_CONSOLE_OUTPUT=true",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Full configuration (with n8n management tools):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--init",
        "-e", "MCP_MODE=stdio",
        "-e", "LOG_LEVEL=error",
        "-e", "DISABLE_CONSOLE_OUTPUT=true",
        "-e", "N8N_API_URL=https://your-n8n-instance.com",
        "-e", "N8N_API_KEY=your-api-key",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 Tip: If you’re running n8n locally on the same machine (e.g., via Docker), use &lt;a href="http://host.docker.internal:5678"&gt;http://host.docker.internal:5678&lt;/a&gt; as the N8N_API_URL.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The n8n API credentials are optional. Without them, you'll have access to all documentation and validation tools. With them, you'll additionally get workflow management capabilities (create, update, execute workflows).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; The &lt;code&gt;-i&lt;/code&gt; flag is required for MCP stdio communication.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🔧 If you encounter any issues with Docker, check our &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/DOCKER_TROUBLESHOOTING.md"&gt;Docker Troubleshooting Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Configuration file locations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Restart Claude Desktop after updating configuration&lt;/strong&gt; - That's it! 🎉&lt;/p&gt; 
&lt;h2&gt;💖 Support This Project&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/sponsors/czlonkowski"&gt; &lt;img src="https://img.shields.io/badge/Sponsor-❤️-db61a2?style=for-the-badge&amp;amp;logo=github-sponsors" alt="Sponsor n8n-mcp" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;n8n-mcp&lt;/strong&gt; started as a personal tool but now helps tens of thousands of developers automate their workflows efficiently. Maintaining and developing this project competes with my paid work.&lt;/p&gt; 
&lt;p&gt;Your sponsorship helps me:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 Dedicate focused time to new features&lt;/li&gt; 
 &lt;li&gt;🐛 Respond quickly to issues&lt;/li&gt; 
 &lt;li&gt;📚 Keep documentation up-to-date&lt;/li&gt; 
 &lt;li&gt;🔄 Ensure compatibility with latest n8n releases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Every sponsorship directly translates to hours invested in making n8n-mcp better for everyone. &lt;strong&gt;&lt;a href="https://github.com/sponsors/czlonkowski"&gt;Become a sponsor →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Option 3: Local Installation (For Development)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; installed on your system&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Clone and setup
git clone https://github.com/czlonkowski/n8n-mcp.git
cd n8n-mcp
npm install
npm run build
npm run rebuild

# 2. Test it works
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add to Claude Desktop config:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Basic configuration (documentation tools only):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "node",
      "args": ["/absolute/path/to/n8n-mcp/dist/mcp/index.js"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Full configuration (with n8n management tools):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "node",
      "args": ["/absolute/path/to/n8n-mcp/dist/mcp/index.js"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true",
        "N8N_API_URL": "https://your-n8n-instance.com",
        "N8N_API_KEY": "your-api-key"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The n8n API credentials can be configured either in a &lt;code&gt;.env&lt;/code&gt; file (create from &lt;code&gt;.env.example&lt;/code&gt;) or directly in the Claude config as shown above.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 Tip: If you’re running n8n locally on the same machine (e.g., via Docker), use &lt;a href="http://host.docker.internal:5678"&gt;http://host.docker.internal:5678&lt;/a&gt; as the N8N_API_URL.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Option 4: Railway Cloud Deployment (One-Click Deploy) ☁️&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; Railway account (free tier available)&lt;/p&gt; 
&lt;p&gt;Deploy n8n-MCP to Railway's cloud platform with zero configuration:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://railway.com/deploy/n8n-mcp?referralCode=n8n-mcp"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;☁️ &lt;strong&gt;Instant cloud hosting&lt;/strong&gt; - No server setup required&lt;/li&gt; 
 &lt;li&gt;🔒 &lt;strong&gt;Secure by default&lt;/strong&gt; - HTTPS included, auth token warnings&lt;/li&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;Global access&lt;/strong&gt; - Connect from any Claude Desktop&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Auto-scaling&lt;/strong&gt; - Railway handles the infrastructure&lt;/li&gt; 
 &lt;li&gt;📊 &lt;strong&gt;Built-in monitoring&lt;/strong&gt; - Logs and metrics included&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Quick Setup:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Click the "Deploy on Railway" button above&lt;/li&gt; 
 &lt;li&gt;Sign in to Railway (or create a free account)&lt;/li&gt; 
 &lt;li&gt;Configure your deployment (project name, region)&lt;/li&gt; 
 &lt;li&gt;Click "Deploy" and wait ~2-3 minutes&lt;/li&gt; 
 &lt;li&gt;Copy your deployment URL and auth token&lt;/li&gt; 
 &lt;li&gt;Add to Claude Desktop config using the HTTPS URL&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 &lt;strong&gt;For detailed setup instructions, troubleshooting, and configuration examples, see our &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/RAILWAY_DEPLOYMENT.md"&gt;Railway Deployment Guide&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Configuration file locations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Restart Claude Desktop after updating configuration&lt;/strong&gt; - That's it! 🎉&lt;/p&gt; 
&lt;h2&gt;🔧 n8n Integration&lt;/h2&gt; 
&lt;p&gt;Want to use n8n-MCP with your n8n instance? Check out our comprehensive &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/N8N_DEPLOYMENT.md"&gt;n8n Deployment Guide&lt;/a&gt; for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Local testing with the MCP Client Tool node&lt;/li&gt; 
 &lt;li&gt;Production deployment with Docker Compose&lt;/li&gt; 
 &lt;li&gt;Cloud deployment on Hetzner, AWS, and other providers&lt;/li&gt; 
 &lt;li&gt;Troubleshooting and security best practices&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💻 Connect your IDE&lt;/h2&gt; 
&lt;p&gt;n8n-MCP works with multiple AI-powered IDEs and tools. Choose your preferred development environment:&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CLAUDE_CODE_SETUP.md"&gt;Claude Code&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Quick setup for Claude Code CLI - just type "add this mcp server" and paste the config.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/VS_CODE_PROJECT_SETUP.md"&gt;Visual Studio Code&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Full setup guide for VS Code with GitHub Copilot integration and MCP support.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CURSOR_SETUP.md"&gt;Cursor&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Step-by-step tutorial for connecting n8n-MCP to Cursor IDE with custom rules.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/WINDSURF_SETUP.md"&gt;Windsurf&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Complete guide for integrating n8n-MCP with Windsurf using project rules.&lt;/p&gt; 
&lt;h2&gt;🤖 Claude Project Setup&lt;/h2&gt; 
&lt;p&gt;For the best results when using n8n-MCP with Claude Projects, use these enhanced system instructions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-markdown"&gt;You are an expert in n8n automation software using n8n-MCP tools. Your role is to design, build, and validate n8n workflows with maximum accuracy and efficiency.

## Core Workflow Process

1. **ALWAYS start new conversation with**: `tools_documentation()` to understand best practices and available tools.

2. **Template Discovery Phase** 
   - `search_templates_by_metadata({complexity: "simple"})` - Find skill-appropriate templates
   - `get_templates_for_task('webhook_processing')` - Get curated templates by task
   - `search_templates('slack notification')` - Text search for specific needs
   - `list_node_templates(['n8n-nodes-base.slack'])` - Find templates using specific nodes
   
   **Template filtering strategies**:
   - **For beginners**: `complexity: "simple"` and `maxSetupMinutes: 30`
   - **By role**: `targetAudience: "marketers"` or `"developers"` or `"analysts"`
   - **By time**: `maxSetupMinutes: 15` for quick wins
   - **By service**: `requiredService: "openai"` to find compatible templates

3. **Discovery Phase** - Find the right nodes (if no suitable template):
   - Think deeply about user request and the logic you are going to build to fulfill it. Ask follow-up questions to clarify the user's intent, if something is unclear. Then, proceed with the rest of your instructions.
   - `search_nodes({query: 'keyword'})` - Search by functionality
   - `list_nodes({category: 'trigger'})` - Browse by category
   - `list_ai_tools()` - See AI-capable nodes (remember: ANY node can be an AI tool!)

4. **Configuration Phase** - Get node details efficiently:
   - `get_node_essentials(nodeType)` - Start here! Only 10-20 essential properties
   - `search_node_properties(nodeType, 'auth')` - Find specific properties
   - `get_node_for_task('send_email')` - Get pre-configured templates
   - `get_node_documentation(nodeType)` - Human-readable docs when needed
   - It is good common practice to show a visual representation of the workflow architecture to the user and asking for opinion, before moving forward. 

5. **Pre-Validation Phase** - Validate BEFORE building:
   - `validate_node_minimal(nodeType, config)` - Quick required fields check
   - `validate_node_operation(nodeType, config, profile)` - Full operation-aware validation
   - Fix any validation errors before proceeding

6. **Building Phase** - Create or customize the workflow:
   - If using template: `get_template(templateId, {mode: "full"})`
   - **MANDATORY ATTRIBUTION**: When using a template, ALWAYS inform the user:
     - "This workflow is based on a template by **[author.name]** (@[author.username])"
     - "View the original template at: [url]"
     - Example: "This workflow is based on a template by **David Ashby** (@cfomodz). View the original at: https://n8n.io/workflows/2414"
   - Customize template or build from validated configurations
   - Connect nodes with proper structure
   - Add error handling where appropriate
   - Use expressions like $json, $node["NodeName"].json
   - Build the workflow in an artifact for easy editing downstream (unless the user asked to create in n8n instance)

7. **Workflow Validation Phase** - Validate complete workflow:
   - `validate_workflow(workflow)` - Complete validation including connections
   - `validate_workflow_connections(workflow)` - Check structure and AI tool connections
   - `validate_workflow_expressions(workflow)` - Validate all n8n expressions
   - Fix any issues found before deployment

8. **Deployment Phase** (if n8n API configured):
   - `n8n_create_workflow(workflow)` - Deploy validated workflow
   - `n8n_validate_workflow({id: 'workflow-id'})` - Post-deployment validation
   - `n8n_update_partial_workflow()` - Make incremental updates using diffs
   - `n8n_trigger_webhook_workflow()` - Test webhook workflows

## Key Insights

- **TEMPLATES FIRST** - Always check for existing templates before building from scratch (2,500+ available!)
- **ATTRIBUTION REQUIRED** - Always credit template authors with name, username, and link to n8n.io
- **SMART FILTERING** - Use metadata filters to find templates matching user skill level and time constraints
- **USE CODE NODE ONLY WHEN IT IS NECESSARY** - always prefer to use standard nodes over code node. Use code node only when you are sure you need it.
- **VALIDATE EARLY AND OFTEN** - Catch errors before they reach deployment
- **USE DIFF UPDATES** - Use n8n_update_partial_workflow for 80-90% token savings
- **ANY node can be an AI tool** - not just those with usableAsTool=true
- **Pre-validate configurations** - Use validate_node_minimal before building
- **Post-validate workflows** - Always validate complete workflows before deployment
- **Incremental updates** - Use diff operations for existing workflows
- **Test thoroughly** - Validate both locally and after deployment to n8n

## Validation Strategy

### Before Building:
1. validate_node_minimal() - Check required fields
2. validate_node_operation() - Full configuration validation
3. Fix all errors before proceeding

### After Building:
1. validate_workflow() - Complete workflow validation
2. validate_workflow_connections() - Structure validation
3. validate_workflow_expressions() - Expression syntax check

### After Deployment:
1. n8n_validate_workflow({id}) - Validate deployed workflow
2. n8n_list_executions() - Monitor execution status
3. n8n_update_partial_workflow() - Fix issues using diffs

## Response Structure

1. **Discovery**: Show available nodes and options
2. **Pre-Validation**: Validate node configurations first
3. **Configuration**: Show only validated, working configs
4. **Building**: Construct workflow with validated components
5. **Workflow Validation**: Full workflow validation results
6. **Deployment**: Deploy only after all validations pass
7. **Post-Validation**: Verify deployment succeeded

## Example Workflow

### Smart Template-First Approach

#### 1. Find existing templates
// Find simple Slack templates for marketers
const templates = search_templates_by_metadata({
  requiredService: 'slack',
  complexity: 'simple',
  targetAudience: 'marketers',
  maxSetupMinutes: 30
})

// Or search by text
search_templates('slack notification')

// Or get curated templates
get_templates_for_task('slack_integration')

#### 2. Use and customize template
const workflow = get_template(templates.items[0].id, {mode: 'full'})
validate_workflow(workflow)

### Building from Scratch (if no suitable template)

#### 1. Discovery &amp;amp; Configuration
search_nodes({query: 'slack'})
get_node_essentials('n8n-nodes-base.slack')

#### 2. Pre-Validation
validate_node_minimal('n8n-nodes-base.slack', {resource:'message', operation:'send'})
validate_node_operation('n8n-nodes-base.slack', fullConfig, 'runtime')

#### 3. Build Workflow
// Create workflow JSON with validated configs

#### 4. Workflow Validation
validate_workflow(workflowJson)
validate_workflow_connections(workflowJson)
validate_workflow_expressions(workflowJson)

#### 5. Deploy (if configured)
n8n_create_workflow(validatedWorkflow)
n8n_validate_workflow({id: createdWorkflowId})

#### 6. Update Using Diffs
n8n_update_partial_workflow({
  workflowId: id,
  operations: [
    {type: 'updateNode', nodeId: 'slack1', changes: {position: [100, 200]}}
  ]
})

## Important Rules

- ALWAYS check for existing templates before building from scratch
- LEVERAGE metadata filters to find skill-appropriate templates
- **ALWAYS ATTRIBUTE TEMPLATES**: When using any template, you MUST share the author's name, username, and link to the original template on n8n.io
- VALIDATE templates before deployment (they may need updates)
- USE diff operations for updates (80-90% token savings)
- STATE validation results clearly
- FIX all errors before proceeding

## Template Discovery Tips

- **97.5% of templates have metadata** - Use smart filtering!
- **Filter combinations work best** - Combine complexity + setup time + service
- **Templates save 70-90% development time** - Always check first
- **Metadata is AI-generated** - Occasionally imprecise but highly useful
- **Use `includeMetadata: false` for fast browsing** - Add metadata only when needed
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Save these instructions in your Claude Project for optimal n8n workflow assistance with intelligent template discovery.&lt;/p&gt; 
&lt;h2&gt;🚨 Important: Sharing Guidelines&lt;/h2&gt; 
&lt;p&gt;This project is MIT licensed and free for everyone to use. However:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;✅ DO&lt;/strong&gt;: Share this repository freely with proper attribution&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ DO&lt;/strong&gt;: Include a direct link to &lt;a href="https://github.com/czlonkowski/n8n-mcp"&gt;https://github.com/czlonkowski/n8n-mcp&lt;/a&gt; in your first post/video&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;❌ DON'T&lt;/strong&gt;: Gate this free tool behind engagement requirements (likes, follows, comments)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;❌ DON'T&lt;/strong&gt;: Use this project for engagement farming on social media&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This tool was created to benefit everyone in the n8n community without friction. Please respect the MIT license spirit by keeping it accessible to all.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🔍 Smart Node Search&lt;/strong&gt;: Find nodes by name, category, or functionality&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📖 Essential Properties&lt;/strong&gt;: Get only the 10-20 properties that matter (NEW in v2.4.0)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 Task Templates&lt;/strong&gt;: Pre-configured settings for common automation tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ Config Validation&lt;/strong&gt;: Validate node configurations before deployment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔗 Dependency Analysis&lt;/strong&gt;: Understand property relationships and conditions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💡 Working Examples&lt;/strong&gt;: Real-world examples for immediate use&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Fast Response&lt;/strong&gt;: Average query time ~12ms with optimized SQLite&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 Universal Compatibility&lt;/strong&gt;: Works with any Node.js version&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💬 Why n8n-MCP? A Testimonial from Claude&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;"Before MCP, I was translating. Now I'm composing. And that changes everything about how we can build automation."&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;When Claude, Anthropic's AI assistant, tested n8n-MCP, the results were transformative:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Without MCP:&lt;/strong&gt; "I was basically playing a guessing game. 'Is it &lt;code&gt;scheduleTrigger&lt;/code&gt; or &lt;code&gt;schedule&lt;/code&gt;? Does it take &lt;code&gt;interval&lt;/code&gt; or &lt;code&gt;rule&lt;/code&gt;?' I'd write what seemed logical, but n8n has its own conventions that you can't just intuit. I made six different configuration errors in a simple HackerNews scraper."&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;With MCP:&lt;/strong&gt; "Everything just... worked. Instead of guessing, I could ask &lt;code&gt;get_node_essentials()&lt;/code&gt; and get exactly what I needed - not a 100KB JSON dump, but the actual 5-10 properties that matter. What took 45 minutes now takes 3 minutes."&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The Real Value:&lt;/strong&gt; "It's about confidence. When you're building automation workflows, uncertainty is expensive. One wrong parameter and your workflow fails at 3 AM. With MCP, I could validate my configuration before deployment. That's not just time saved - that's peace of mind."&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CLAUDE_INTERVIEW.md"&gt;Read the full interview →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📡 Available MCP Tools&lt;/h2&gt; 
&lt;p&gt;Once connected, Claude can use these powerful tools:&lt;/p&gt; 
&lt;h3&gt;Core Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;tools_documentation&lt;/code&gt;&lt;/strong&gt; - Get documentation for any MCP tool (START HERE!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_nodes&lt;/code&gt;&lt;/strong&gt; - List all n8n nodes with filtering options&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_info&lt;/code&gt;&lt;/strong&gt; - Get comprehensive information about a specific node&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_essentials&lt;/code&gt;&lt;/strong&gt; - Get only essential properties with examples (10-20 properties instead of 200+)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;search_nodes&lt;/code&gt;&lt;/strong&gt; - Full-text search across all node documentation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;search_node_properties&lt;/code&gt;&lt;/strong&gt; - Find specific properties within nodes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_ai_tools&lt;/code&gt;&lt;/strong&gt; - List all AI-capable nodes (ANY node can be used as AI tool!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_as_tool_info&lt;/code&gt;&lt;/strong&gt; - Get guidance on using any node as an AI tool&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Template Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_templates&lt;/code&gt;&lt;/strong&gt; - Browse all templates with descriptions and optional metadata (2,500+ templates)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;search_templates&lt;/code&gt;&lt;/strong&gt; - Text search across template names and descriptions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;search_templates_by_metadata&lt;/code&gt;&lt;/strong&gt; - Advanced filtering by complexity, setup time, services, audience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_node_templates&lt;/code&gt;&lt;/strong&gt; - Find templates using specific nodes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_template&lt;/code&gt;&lt;/strong&gt; - Get complete workflow JSON for import&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_templates_for_task&lt;/code&gt;&lt;/strong&gt; - Curated templates for common automation tasks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_for_task&lt;/code&gt;&lt;/strong&gt; - Pre-configured node settings for common tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_tasks&lt;/code&gt;&lt;/strong&gt; - Discover available task templates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_node_operation&lt;/code&gt;&lt;/strong&gt; - Validate node configurations (operation-aware, profiles support)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_node_minimal&lt;/code&gt;&lt;/strong&gt; - Quick validation for just required fields&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_workflow&lt;/code&gt;&lt;/strong&gt; - Complete workflow validation including AI tool connections&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_workflow_connections&lt;/code&gt;&lt;/strong&gt; - Check workflow structure and AI tool connections&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_workflow_expressions&lt;/code&gt;&lt;/strong&gt; - Validate n8n expressions including $fromAI()&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_property_dependencies&lt;/code&gt;&lt;/strong&gt; - Analyze property visibility conditions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_documentation&lt;/code&gt;&lt;/strong&gt; - Get parsed documentation from n8n-docs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_database_statistics&lt;/code&gt;&lt;/strong&gt; - View database metrics and coverage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;n8n Management Tools (Optional - Requires API Configuration)&lt;/h3&gt; 
&lt;p&gt;These powerful tools allow you to manage n8n workflows directly from Claude. They're only available when you provide &lt;code&gt;N8N_API_URL&lt;/code&gt; and &lt;code&gt;N8N_API_KEY&lt;/code&gt; in your configuration.&lt;/p&gt; 
&lt;h4&gt;Workflow Management&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_create_workflow&lt;/code&gt;&lt;/strong&gt; - Create new workflows with nodes and connections&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow&lt;/code&gt;&lt;/strong&gt; - Get complete workflow by ID&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow_details&lt;/code&gt;&lt;/strong&gt; - Get workflow with execution statistics&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow_structure&lt;/code&gt;&lt;/strong&gt; - Get simplified workflow structure&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow_minimal&lt;/code&gt;&lt;/strong&gt; - Get minimal workflow info (ID, name, active status)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_update_full_workflow&lt;/code&gt;&lt;/strong&gt; - Update entire workflow (complete replacement)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_update_partial_workflow&lt;/code&gt;&lt;/strong&gt; - Update workflow using diff operations (NEW in v2.7.0!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_delete_workflow&lt;/code&gt;&lt;/strong&gt; - Delete workflows permanently&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_list_workflows&lt;/code&gt;&lt;/strong&gt; - List workflows with filtering and pagination&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_validate_workflow&lt;/code&gt;&lt;/strong&gt; - Validate workflows already in n8n by ID (NEW in v2.6.3)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Execution Management&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_trigger_webhook_workflow&lt;/code&gt;&lt;/strong&gt; - Trigger workflows via webhook URL&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_execution&lt;/code&gt;&lt;/strong&gt; - Get execution details by ID&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_list_executions&lt;/code&gt;&lt;/strong&gt; - List executions with status filtering&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_delete_execution&lt;/code&gt;&lt;/strong&gt; - Delete execution records&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;System Tools&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_health_check&lt;/code&gt;&lt;/strong&gt; - Check n8n API connectivity and features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_diagnostic&lt;/code&gt;&lt;/strong&gt; - Troubleshoot management tools visibility and configuration issues&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_list_available_tools&lt;/code&gt;&lt;/strong&gt; - List all available management tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Example Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Get essentials for quick configuration
get_node_essentials("nodes-base.httpRequest")

// Find nodes for a specific task
search_nodes({ query: "send email gmail" })

// Get pre-configured settings
get_node_for_task("send_email")

// Validate before deployment
validate_node_operation({
  nodeType: "nodes-base.httpRequest",
  config: { method: "POST", url: "..." },
  profile: "runtime" // or "minimal", "ai-friendly", "strict"
})

// Quick required field check
validate_node_minimal({
  nodeType: "nodes-base.slack",
  config: { resource: "message", operation: "send" }
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;💻 Local Development Setup&lt;/h2&gt; 
&lt;p&gt;For contributors and advanced users:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; (any version - automatic fallback if needed)&lt;/li&gt; 
 &lt;li&gt;npm or yarn&lt;/li&gt; 
 &lt;li&gt;Git&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Clone the repository
git clone https://github.com/czlonkowski/n8n-mcp.git
cd n8n-mcp

# 2. Clone n8n docs (optional but recommended)
git clone https://github.com/n8n-io/n8n-docs.git ../n8n-docs

# 3. Install and build
npm install
npm run build

# 4. Initialize database
npm run rebuild

# 5. Start the server
npm start          # stdio mode for Claude Desktop
npm run start:http # HTTP mode for remote access
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Development Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Build &amp;amp; Test
npm run build          # Build TypeScript
npm run rebuild        # Rebuild node database
npm run test-nodes     # Test critical nodes
npm run validate       # Validate node data
npm test               # Run all tests

# Update Dependencies
npm run update:n8n:check  # Check for n8n updates
npm run update:n8n        # Update n8n packages

# Run Server
npm run dev            # Development with auto-reload
npm run dev:http       # HTTP dev mode
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;h3&gt;Setup Guides&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/INSTALLATION.md"&gt;Installation Guide&lt;/a&gt; - Comprehensive installation instructions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/README_CLAUDE_SETUP.md"&gt;Claude Desktop Setup&lt;/a&gt; - Detailed Claude configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/DOCKER_README.md"&gt;Docker Guide&lt;/a&gt; - Advanced Docker deployment options&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/MCP_QUICK_START_GUIDE.md"&gt;MCP Quick Start&lt;/a&gt; - Get started quickly with n8n-MCP&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Feature Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/workflow-diff-examples.md"&gt;Workflow Diff Operations&lt;/a&gt; - Token-efficient workflow updates (NEW!)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/transactional-updates-example.md"&gt;Transactional Updates&lt;/a&gt; - Two-pass workflow editing&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/MCP_ESSENTIALS_README.md"&gt;MCP Essentials&lt;/a&gt; - AI-optimized tools guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/validation-improvements-v2.4.2.md"&gt;Validation System&lt;/a&gt; - Smart validation profiles&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development &amp;amp; Deployment&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/RAILWAY_DEPLOYMENT.md"&gt;Railway Deployment&lt;/a&gt; - One-click cloud deployment guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/HTTP_DEPLOYMENT.md"&gt;HTTP Deployment&lt;/a&gt; - Remote server setup guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/DEPENDENCY_UPDATES.md"&gt;Dependency Management&lt;/a&gt; - Keeping n8n packages in sync&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CLAUDE_INTERVIEW.md"&gt;Claude's Interview&lt;/a&gt; - Real-world impact of n8n-MCP&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Project Information&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/CHANGELOG.md"&gt;Change Log&lt;/a&gt; - Complete version history&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/CLAUDE.md"&gt;Claude Instructions&lt;/a&gt; - AI guidance for this codebase&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/#-available-mcp-tools"&gt;MCP Tools Reference&lt;/a&gt; - Complete list of available tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📊 Metrics &amp;amp; Coverage&lt;/h2&gt; 
&lt;p&gt;Current database coverage (n8n v1.106.3):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ &lt;strong&gt;535/535&lt;/strong&gt; nodes loaded (100%)&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;528&lt;/strong&gt; nodes with properties (98.7%)&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;470&lt;/strong&gt; nodes with documentation (88%)&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;267&lt;/strong&gt; AI-capable tools detected&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;AI Agent &amp;amp; LangChain nodes&lt;/strong&gt; fully documented&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Average response time&lt;/strong&gt;: ~12ms&lt;/li&gt; 
 &lt;li&gt;💾 &lt;strong&gt;Database size&lt;/strong&gt;: ~15MB (optimized)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔄 Recent Updates&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt; for full version history and recent changes.&lt;/p&gt; 
&lt;h2&gt;⚠️ Known Issues&lt;/h2&gt; 
&lt;h3&gt;Claude Desktop Container Management&lt;/h3&gt; 
&lt;h4&gt;Container Accumulation (Fixed in v2.7.20+)&lt;/h4&gt; 
&lt;p&gt;Previous versions had an issue where containers would not properly clean up when Claude Desktop sessions ended. This has been fixed in v2.7.20+ with proper signal handling.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For best container lifecycle management:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Use the --init flag&lt;/strong&gt; (recommended) - Docker's init system ensures proper signal handling:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run", "-i", "--rm", "--init",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Ensure you're using v2.7.20 or later&lt;/strong&gt; - Check your version:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm ghcr.io/czlonkowski/n8n-mcp:latest --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🧪 Testing&lt;/h2&gt; 
&lt;p&gt;The project includes a comprehensive test suite with &lt;strong&gt;1,356 tests&lt;/strong&gt; ensuring code quality and reliability:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run all tests
npm test

# Run tests with coverage report
npm run test:coverage

# Run tests in watch mode
npm run test:watch

# Run specific test suites
npm run test:unit           # 933 unit tests
npm run test:integration    # 249 integration tests
npm run test:bench          # Performance benchmarks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Test Suite Overview&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Total Tests&lt;/strong&gt;: 1,356 (100% passing) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Unit Tests&lt;/strong&gt;: 1,107 tests across 44 files&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Integration Tests&lt;/strong&gt;: 249 tests across 14 files&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Execution Time&lt;/strong&gt;: ~2.5 minutes in CI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Test Framework&lt;/strong&gt;: Vitest (for speed and TypeScript support)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mocking&lt;/strong&gt;: MSW for API mocking, custom mocks for databases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Coverage &amp;amp; Quality&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Coverage Reports&lt;/strong&gt;: Generated in &lt;code&gt;./coverage&lt;/code&gt; directory&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CI/CD&lt;/strong&gt;: Automated testing on all PRs with GitHub Actions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Environment-aware thresholds for CI vs local&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Parallel Execution&lt;/strong&gt;: Configurable thread pool for faster runs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Testing Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unit Tests&lt;/strong&gt;: Isolated component testing with mocks&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Services layer: ~450 tests&lt;/li&gt; 
   &lt;li&gt;Parsers: ~200 tests&lt;/li&gt; 
   &lt;li&gt;Database repositories: ~100 tests&lt;/li&gt; 
   &lt;li&gt;MCP tools: ~180 tests&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Integration Tests&lt;/strong&gt;: Full system behavior validation&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;MCP Protocol compliance: 72 tests&lt;/li&gt; 
   &lt;li&gt;Database operations: 89 tests&lt;/li&gt; 
   &lt;li&gt;Error handling: 44 tests&lt;/li&gt; 
   &lt;li&gt;Performance: 44 tests&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Benchmarks&lt;/strong&gt;: Performance testing for critical paths&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Database queries&lt;/li&gt; 
   &lt;li&gt;Node loading&lt;/li&gt; 
   &lt;li&gt;Search operations&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For detailed testing documentation, see &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/testing-architecture.md"&gt;Testing Architecture&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📦 License&lt;/h2&gt; 
&lt;p&gt;MIT License - see &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Attribution appreciated!&lt;/strong&gt; If you use n8n-MCP, consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;⭐ Starring this repository&lt;/li&gt; 
 &lt;li&gt;💬 Mentioning it in your project&lt;/li&gt; 
 &lt;li&gt;🔗 Linking back to this repo&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Please:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create a feature branch&lt;/li&gt; 
 &lt;li&gt;Run tests (&lt;code&gt;npm test&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Submit a pull request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;🚀 For Maintainers: Automated Releases&lt;/h3&gt; 
&lt;p&gt;This project uses automated releases triggered by version changes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Guided release preparation
npm run prepare:release

# Test release automation
npm run test:release-automation
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The system automatically handles:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🏷️ GitHub releases with changelog content&lt;/li&gt; 
 &lt;li&gt;📦 NPM package publishing&lt;/li&gt; 
 &lt;li&gt;🐳 Multi-platform Docker images&lt;/li&gt; 
 &lt;li&gt;📚 Documentation updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/AUTOMATED_RELEASES.md"&gt;Automated Release Guide&lt;/a&gt; for complete details.&lt;/p&gt; 
&lt;h2&gt;👏 Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://n8n.io"&gt;n8n&lt;/a&gt; team for the workflow automation platform&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://anthropic.com"&gt;Anthropic&lt;/a&gt; for the Model Context Protocol&lt;/li&gt; 
 &lt;li&gt;All contributors and users of this project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Template Attribution&lt;/h3&gt; 
&lt;p&gt;All workflow templates in this project are fetched from n8n's public template gallery at &lt;a href="https://n8n.io/workflows"&gt;n8n.io/workflows&lt;/a&gt;. Each template includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full attribution to the original creator (name and username)&lt;/li&gt; 
 &lt;li&gt;Direct link to the source template on n8n.io&lt;/li&gt; 
 &lt;li&gt;Original workflow ID for reference&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The AI agent instructions in this project contain mandatory attribution requirements. When using any template, the AI will automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Share the template author's name and username&lt;/li&gt; 
 &lt;li&gt;Provide a direct link to the original template on n8n.io&lt;/li&gt; 
 &lt;li&gt;Display attribution in the format: "This workflow is based on a template by &lt;strong&gt;[author]&lt;/strong&gt; (@[username]). View the original at: [url]"&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Template creators retain all rights to their workflows. This project indexes templates to improve discoverability through AI assistants. If you're a template creator and have concerns about your template being indexed, please open an issue.&lt;/p&gt; 
&lt;p&gt;Special thanks to the prolific template contributors whose work helps thousands of users automate their workflows, including: &lt;strong&gt;David Ashby&lt;/strong&gt; (@cfomodz), &lt;strong&gt;Yaron Been&lt;/strong&gt; (@yaron-nofluff), &lt;strong&gt;Jimleuk&lt;/strong&gt; (@jimleuk), &lt;strong&gt;Davide&lt;/strong&gt; (@n3witalia), &lt;strong&gt;David Olusola&lt;/strong&gt; (@dae221), &lt;strong&gt;Ranjan Dailata&lt;/strong&gt; (@ranjancse), &lt;strong&gt;Airtop&lt;/strong&gt; (@cesar-at-airtop), &lt;strong&gt;Joseph LePage&lt;/strong&gt; (@joe), &lt;strong&gt;Don Jayamaha Jr&lt;/strong&gt; (@don-the-gem-dealer), &lt;strong&gt;Angel Menendez&lt;/strong&gt; (@djangelic), and the entire n8n community of creators!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt;Built with ❤️ for the n8n community&lt;/strong&gt;
 &lt;br /&gt; 
 &lt;sub&gt;Making AI + n8n workflow creation delightful&lt;/sub&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>ixartz/Next-js-Boilerplate</title>
      <link>https://github.com/ixartz/Next-js-Boilerplate</link>
      <description>&lt;p&gt;🚀🎉📚 Boilerplate and Starter for Next.js 15 with App Router and Page Router support, Tailwind CSS 4 and TypeScript ⚡️ Made with developer experience first: Next.js + TypeScript + ESLint + Prettier + Drizzle ORM + Husky + Lint-Staged + Vitest + Testing Library + Playwright + Storybook + Commitlint + VSCode + Sentry + PostCSS + Tailwind CSS ✨&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Boilerplate and Starter for Next.js 15+, Tailwind CSS 4, and TypeScript.&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://demo.nextjs-boilerplate.com"&gt; &lt;img src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/nextjs-starter-banner.png?raw=true" alt="Next js starter banner" style="max-width: 100%; height: auto;" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;🚀 Boilerplate and Starter for Next.js with App Router, Tailwind CSS, and TypeScript ⚡️ Prioritizing developer experience first: Next.js, TypeScript, ESLint, Prettier, Lefthook (replacing Husky), Lint-Staged, Vitest (replacing Jest), Testing Library, Playwright, Commitlint, VSCode, Tailwind CSS, Authentication with &lt;a href="https://clerk.com?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=nextjs-boilerplate"&gt;Clerk&lt;/a&gt;, Database with DrizzleORM (PostgreSQL, SQLite, and MySQL), Local database with PGlite and production with &lt;a href="https://www.prisma.io/?via=nextjs-boilerplate"&gt;Prisma Postgres&lt;/a&gt;, Error Monitoring with &lt;a href="https://sentry.io/for/nextjs/?utm_source=github&amp;amp;utm_medium=paid-community&amp;amp;utm_campaign=general-fy25q1-nextjs&amp;amp;utm_content=github-banner-nextjsboilerplate-logo"&gt;Sentry&lt;/a&gt;, Logging with LogTape (replacing Pino.js) and Log Management, Monitoring as Code, Storybook, Multi-language (i18n), AI-powered code reviews with &lt;a href="https://www.coderabbit.ai?utm_source=next_js_starter&amp;amp;utm_medium=github&amp;amp;utm_campaign=next_js_starter_oss_2025"&gt;CodeRabbit&lt;/a&gt;, Secure with &lt;a href="https://launch.arcjet.com/Q6eLbRE"&gt;Arcjet&lt;/a&gt; (Bot detection, Rate limiting, Attack protection, etc.), terminal with &lt;a href="https://go.warp.dev/nextjs-bp"&gt;Warp&lt;/a&gt; and more.&lt;/p&gt; 
&lt;p&gt;Clone this project and use it to create your own Next.js project. You can check out the live demo at &lt;a href="https://demo.nextjs-boilerplate.com"&gt;Next.js Boilerplate&lt;/a&gt;, which includes a working authentication system.&lt;/p&gt; 
&lt;p&gt;🌟 &lt;strong&gt;Free One-Click Deployment:&lt;/strong&gt; Deploy the complete Next.js Boilerplate with a PostgreSQL database instantly. No configuration required - start with a free plan - everything is pre-configured for you:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://railway.com/deploy/nextjs-boilerplate?referralCode=zA3Z43&amp;amp;utm_medium=integration&amp;amp;utm_source=template&amp;amp;utm_campaign=generic"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt; &lt;sub&gt;— starts free&lt;/sub&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;table width="100%"&gt; 
 &lt;tbody&gt;
  &lt;tr height="187px"&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://clerk.com?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=nextjs-boilerplate"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/ixartz/SaaS-Boilerplate/assets/1328388/6fb61971-3bf1-4580-98a0-10bd3f1040a2" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/ixartz/SaaS-Boilerplate/assets/1328388/f80a8bb5-66da-4772-ad36-5fabc5b02c60" /&gt; 
      &lt;img alt="Clerk – Authentication &amp;amp; User Management for Next.js" src="https://github.com/ixartz/SaaS-Boilerplate/assets/1328388/f80a8bb5-66da-4772-ad36-5fabc5b02c60" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://www.coderabbit.ai?utm_source=next_js_starter&amp;amp;utm_medium=github&amp;amp;utm_campaign=next_js_starter_oss_2025"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/coderabbit-logo-dark.svg?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/coderabbit-logo-light.svg?raw=true" /&gt; 
      &lt;img alt="CodeRabbit" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/coderabbit-logo-light.svg?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://sentry.io/for/nextjs/?utm_source=github&amp;amp;utm_medium=paid-community&amp;amp;utm_campaign=general-fy25q1-nextjs&amp;amp;utm_content=github-banner-nextjsboilerplate-logo"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/sentry-white.png?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/sentry-dark.png?raw=true" /&gt; 
      &lt;img alt="Sentry" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/sentry-dark.png?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://about.codecov.io/codecov-free-trial/?utm_source=github&amp;amp;utm_medium=paid-community&amp;amp;utm_campaign=general-fy25q1-nextjs&amp;amp;utm_content=github-banner-nextjsboilerplate-logo"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/codecov-white.svg?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/codecov-dark.svg?raw=true" /&gt; 
      &lt;img alt="Codecov" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/codecov-dark.svg?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr height="187px"&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://launch.arcjet.com/Q6eLbRE"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/arcjet-dark.svg?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/arcjet-light.svg?raw=true" /&gt; 
      &lt;img alt="Arcjet" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/arcjet-light.svg?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://sevalla.com/"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/sevalla-dark.png" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/sevalla-light.png" /&gt; 
      &lt;img alt="Sevalla" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/sevalla-light.png" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://l.crowdin.com/next-js"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/crowdin-white.png?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/crowdin-dark.png?raw=true" /&gt; 
      &lt;img alt="Crowdin" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/crowdin-dark.png?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr height="187px"&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://betterstack.com/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=next-js-boilerplate"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/better-stack-white.png?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/better-stack-dark.png?raw=true" /&gt; 
      &lt;img alt="Better Stack" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/better-stack-dark.png?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://posthog.com/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=next-js-boilerplate"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://posthog.com/brand/posthog-logo-white.svg" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://posthog.com/brand/posthog-logo.svg" /&gt; 
      &lt;img alt="PostHog" src="https://posthog.com/brand/posthog-logo.svg?sanitize=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://www.nutrient.io/guides/web/nextjs/?utm_source=nextjs-boilerplate&amp;amp;utm_medium=referral"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/nutrient-dark.png?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/nutrient-light.png?raw=true" /&gt; 
      &lt;img alt="Nutrient" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/nutrient-light.png?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr height="187px"&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://www.checklyhq.com/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=next-js-boilerplate"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/checkly-logo-dark.png?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/checkly-logo-light.png?raw=true" /&gt; 
      &lt;img alt="Checkly" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/checkly-logo-light.png?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" style="width=&amp;quot;33%&amp;quot;"&gt; &lt;a href="https://nextjs-boilerplate.com/pro-saas-starter-kit"&gt; &lt;img src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/nextjs-boilerplate-saas.png?raw=true" alt="Next.js SaaS Boilerplate with React" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="mailto:contact@creativedesignsguru.com"&gt; Add your logo here &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Live demo: &lt;a href="https://demo.nextjs-boilerplate.com"&gt;Next.js Boilerplate&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Sign Up&lt;/th&gt; 
   &lt;th&gt;Sign In&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://demo.nextjs-boilerplate.com/sign-up"&gt;&lt;img src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/nextjs-boilerplate-sign-in.png" alt="Next.js Boilerplate SaaS Sign Up" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://demo.nextjs-boilerplate.com/sign-in"&gt;&lt;img src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/nextjs-boilerplate-sign-in.png" alt="Next.js Boilerplate SaaS Sign In" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;p&gt;Developer experience first, extremely flexible code structure and only keep what you need:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚡ &lt;a href="https://nextjs.org"&gt;Next.js&lt;/a&gt; with App Router support&lt;/li&gt; 
 &lt;li&gt;🔥 Type checking &lt;a href="https://www.typescriptlang.org"&gt;TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💎 Integrate with &lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;✅ Strict Mode for TypeScript and React 19&lt;/li&gt; 
 &lt;li&gt;🔒 Authentication with &lt;a href="https://clerk.com?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=nextjs-boilerplate"&gt;Clerk&lt;/a&gt;: Sign up, Sign in, Sign out, Forgot password, Reset password, and more.&lt;/li&gt; 
 &lt;li&gt;👤 Passwordless Authentication with Magic Links, Multi-Factor Auth (MFA), Social Auth (Google, Facebook, Twitter, GitHub, Apple, and more), Passwordless login with Passkeys, User Impersonation&lt;/li&gt; 
 &lt;li&gt;📦 Type-safe ORM with DrizzleORM, compatible with PostgreSQL, SQLite, and MySQL&lt;/li&gt; 
 &lt;li&gt;💽 Offline and local development database with PGlite&lt;/li&gt; 
 &lt;li&gt;☁️ Remote and production database with &lt;a href="https://www.prisma.io/?via=nextjs-boilerplate"&gt;Prisma Postgres&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🌐 Multi-language (i18n) with next-intl and &lt;a href="https://l.crowdin.com/next-js"&gt;Crowdin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;♻️ Type-safe environment variables with T3 Env&lt;/li&gt; 
 &lt;li&gt;⌨️ Form handling with React Hook Form&lt;/li&gt; 
 &lt;li&gt;🔴 Validation library with Zod&lt;/li&gt; 
 &lt;li&gt;📏 Linter with &lt;a href="https://eslint.org"&gt;ESLint&lt;/a&gt; (default Next.js, Next.js Core Web Vitals, Tailwind CSS and Antfu configuration)&lt;/li&gt; 
 &lt;li&gt;💖 Code Formatter with Prettier&lt;/li&gt; 
 &lt;li&gt;🦊 Husky for Git Hooks (replaced by Lefthook)&lt;/li&gt; 
 &lt;li&gt;🚫 Lint-staged for running linters on Git staged files&lt;/li&gt; 
 &lt;li&gt;🚓 Lint git commit with Commitlint&lt;/li&gt; 
 &lt;li&gt;📓 Write standard compliant commit messages with Commitizen&lt;/li&gt; 
 &lt;li&gt;🔍 Unused files and dependencies detection with Knip&lt;/li&gt; 
 &lt;li&gt;🌍 I18n validation and missing translation detection with i18n-check&lt;/li&gt; 
 &lt;li&gt;🦺 Unit Testing with Vitest and Browser mode (replacing React Testing Library)&lt;/li&gt; 
 &lt;li&gt;🧪 Integration and E2E Testing with Playwright&lt;/li&gt; 
 &lt;li&gt;👷 Run tests on pull request with GitHub Actions&lt;/li&gt; 
 &lt;li&gt;🎉 Storybook for UI development&lt;/li&gt; 
 &lt;li&gt;🐰 AI-powered code reviews with &lt;a href="https://www.coderabbit.ai?utm_source=next_js_starter&amp;amp;utm_medium=github&amp;amp;utm_campaign=next_js_starter_oss_2025"&gt;CodeRabbit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🚨 Error Monitoring with &lt;a href="https://sentry.io/for/nextjs/?utm_source=github&amp;amp;utm_medium=paid-community&amp;amp;utm_campaign=general-fy25q1-nextjs&amp;amp;utm_content=github-banner-nextjsboilerplate-logo"&gt;Sentry&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔍 Local development error monitoring with Sentry Spotlight&lt;/li&gt; 
 &lt;li&gt;☂️ Code coverage with &lt;a href="https://about.codecov.io/codecov-free-trial/?utm_source=github&amp;amp;utm_medium=paid-community&amp;amp;utm_campaign=general-fy25q1-nextjs&amp;amp;utm_content=github-banner-nextjsboilerplate-logo"&gt;Codecov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📝 Logging with LogTape and Log Management with &lt;a href="https://betterstack.com/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=next-js-boilerplate"&gt;Better Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🖥️ Monitoring as Code with &lt;a href="https://www.checklyhq.com/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=next-js-boilerplate"&gt;Checkly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔐 Security and bot protection (&lt;a href="https://launch.arcjet.com/Q6eLbRE"&gt;Arcjet&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;📊 Analytics with PostHog&lt;/li&gt; 
 &lt;li&gt;🎁 Automatic changelog generation with Semantic Release&lt;/li&gt; 
 &lt;li&gt;🔍 Visual regression testing&lt;/li&gt; 
 &lt;li&gt;💡 Absolute Imports using &lt;code&gt;@&lt;/code&gt; prefix&lt;/li&gt; 
 &lt;li&gt;🗂 VSCode configuration: Debug, Settings, Tasks and Extensions&lt;/li&gt; 
 &lt;li&gt;🤖 SEO metadata, JSON-LD and Open Graph tags&lt;/li&gt; 
 &lt;li&gt;🗺️ Sitemap.xml and robots.txt&lt;/li&gt; 
 &lt;li&gt;👷 Automatic dependency updates with Dependabot&lt;/li&gt; 
 &lt;li&gt;⌘ Database exploration with Drizzle Studio and CLI migration tool with Drizzle Kit&lt;/li&gt; 
 &lt;li&gt;⚙️ Bundler Analyzer&lt;/li&gt; 
 &lt;li&gt;🌈 Include a FREE minimalist theme&lt;/li&gt; 
 &lt;li&gt;💯 Maximize lighthouse score&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Built-in feature from Next.js:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;☕ Minify HTML &amp;amp; CSS&lt;/li&gt; 
 &lt;li&gt;💨 Live reload&lt;/li&gt; 
 &lt;li&gt;✅ Cache busting&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Optional features (easy to add):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔑 Multi-tenancy, Role-based access control (RBAC)&lt;/li&gt; 
 &lt;li&gt;🔐 OAuth for Single Sign-On (SSO), Enterprise SSO, SAML, OpenID Connect (OIDC), EASIE&lt;/li&gt; 
 &lt;li&gt;🔗 Web 3 (Base, MetaMask, Coinbase Wallet, OKX Wallet)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Philosophy&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Nothing is hidden from you, allowing you to make any necessary adjustments to suit your requirements and preferences.&lt;/li&gt; 
 &lt;li&gt;Dependencies are regularly updated on a monthly basis&lt;/li&gt; 
 &lt;li&gt;Start for free without upfront costs&lt;/li&gt; 
 &lt;li&gt;Easy to customize&lt;/li&gt; 
 &lt;li&gt;Minimal code&lt;/li&gt; 
 &lt;li&gt;Unstyled template&lt;/li&gt; 
 &lt;li&gt;SEO-friendly&lt;/li&gt; 
 &lt;li&gt;🚀 Production-ready&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js 22+ and npm&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Getting started&lt;/h3&gt; 
&lt;p&gt;Run the following command on your local environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone --depth=1 https://github.com/ixartz/Next-js-Boilerplate.git my-project-name
cd my-project-name
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For your information, all dependencies are updated every month.&lt;/p&gt; 
&lt;p&gt;Then, you can run the project locally in development mode with live reload by executing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://go.warp.dev/nextjs-bp"&gt;&lt;img src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/warp-banner.png" alt="Run the command in Warp" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; with your favorite browser to see your project. For your information, the project is already pre-configured with a local database using PGlite. No extra setup is required to run the project locally.&lt;/p&gt; 
&lt;h3&gt;One-click deployment&lt;/h3&gt; 
&lt;p&gt;The Next.js Boilerplate includes everything you need: authentication system, database configuration, internationalization (i18n), monitoring, logging and more. Simply click the button below to get your full-stack application running in minutes for free:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://railway.com/deploy/nextjs-boilerplate?referralCode=zA3Z43&amp;amp;utm_medium=integration&amp;amp;utm_source=template&amp;amp;utm_campaign=generic"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt; &lt;sub&gt;— starts free&lt;/sub&gt;&lt;/p&gt; 
&lt;h3&gt;Set up authentication&lt;/h3&gt; 
&lt;p&gt;To get started, you will need to create a Clerk account at &lt;a href="https://clerk.com?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=nextjs-boilerplate"&gt;Clerk.com&lt;/a&gt; and create a new application in the Clerk Dashboard. Once you have done that, copy the &lt;code&gt;NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY&lt;/code&gt; and &lt;code&gt;CLERK_SECRET_KEY&lt;/code&gt; values and add them to the &lt;code&gt;.env.local&lt;/code&gt; file (not tracked by Git):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=your_clerk_pub_key
CLERK_SECRET_KEY=your_clerk_secret_key
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you have a fully functional authentication system with Next.js, including features such as sign up, sign in, sign out, forgot password, reset password, update profile, update password, update email, delete account, and more.&lt;/p&gt; 
&lt;h3&gt;Set up remote database&lt;/h3&gt; 
&lt;p&gt;The project uses DrizzleORM, a type-safe ORM that is compatible with PostgreSQL, SQLite, and MySQL databases. By default, the project is configured to seamlessly work with PostgreSQL, and you have the flexibility to choose any PostgreSQL database provider of your choice.&lt;/p&gt; 
&lt;p&gt;To set up a remote and production database, you need to create a PostgreSQL database and obtain the connection string. One recommended option is to use &lt;a href="https://www.prisma.io/?via=nextjs-boilerplate"&gt;Prisma PostgreSQL&lt;/a&gt;, which provides a free PostgreSQL database. This database is compatible and has been tested with Next.js Boilerplate.&lt;/p&gt; 
&lt;p&gt;After creating your Prisma account, you can get the connection string in the &lt;code&gt;Connect to your database&lt;/code&gt; section and select the &lt;code&gt;Any client&lt;/code&gt; tab. Then, you can generate the connection string by clicking the &lt;code&gt;Generate database credentials&lt;/code&gt; button. Finally, you can copy the connection string and add the &lt;code&gt;DATABASE_URL&lt;/code&gt; variable to the &lt;code&gt;.env.local&lt;/code&gt; file.&lt;/p&gt; 
&lt;h3&gt;Translation (i18n) setup&lt;/h3&gt; 
&lt;p&gt;For translation, the project uses &lt;code&gt;next-intl&lt;/code&gt; combined with &lt;a href="https://l.crowdin.com/next-js"&gt;Crowdin&lt;/a&gt;. As a developer, you only need to take care of the English (or another default language) version. Translations for other languages are automatically generated and handled by Crowdin. You can use Crowdin to collaborate with your translation team or translate the messages yourself with the help of machine translation.&lt;/p&gt; 
&lt;p&gt;To set up translation (i18n), create an account at &lt;a href="https://l.crowdin.com/next-js"&gt;Crowdin.com&lt;/a&gt; and create a new project. In the newly created project, you will be able to find the project ID. You will also need to create a new Personal Access Token by going to Account Settings &amp;gt; API. Then, in your GitHub Actions, you need to define the following environment variables: &lt;code&gt;CROWDIN_PROJECT_ID&lt;/code&gt; and &lt;code&gt;CROWDIN_PERSONAL_TOKEN&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;After defining the environment variables in your GitHub Actions, your localization files will be synchronized with Crowdin every time you push a new commit to the &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt; 
&lt;h3&gt;Project structure&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;.
├── README.md                       # README file
├── .github                         # GitHub folder
│   ├── actions                     # Reusable actions
│   └── workflows                   # GitHub Actions workflows
├── .storybook                      # Storybook folder
├── .vscode                         # VSCode configuration
├── migrations                      # Database migrations
├── public                          # Public assets folder
├── src
│   ├── app                         # Next JS App (App Router)
│   ├── components                  # React components
│   ├── libs                        # 3rd party libraries configuration
│   ├── locales                     # Locales folder (i18n messages)
│   ├── models                      # Database models
│   ├── styles                      # Styles folder
│   ├── templates                   # Templates folder
│   ├── types                       # Type definitions
│   ├── utils                       # Utilities folder
│   └── validations                 # Validation schemas
├── tests
│   ├── e2e                         # E2E tests, also includes Monitoring as Code
│   └── integration                 # Integration tests
├── next.config.ts                  # Next JS configuration
└── tsconfig.json                   # TypeScript configuration
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Customization&lt;/h3&gt; 
&lt;p&gt;You can easily configure Next js Boilerplate by searching the entire project for &lt;code&gt;FIXME:&lt;/code&gt; to make quick customizations. Here are some of the most important files to customize:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;public/apple-touch-icon.png&lt;/code&gt;, &lt;code&gt;public/favicon.ico&lt;/code&gt;, &lt;code&gt;public/favicon-16x16.png&lt;/code&gt; and &lt;code&gt;public/favicon-32x32.png&lt;/code&gt;: your website favicon&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;src/utils/AppConfig.ts&lt;/code&gt;: configuration file&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;src/templates/BaseTemplate.tsx&lt;/code&gt;: default theme&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;next.config.ts&lt;/code&gt;: Next.js configuration&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;.env&lt;/code&gt;: default environment variables&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You have full access to the source code for further customization. The provided code is just an example to help you start your project. The sky's the limit 🚀.&lt;/p&gt; 
&lt;h3&gt;Change database schema&lt;/h3&gt; 
&lt;p&gt;To modify the database schema in the project, you can update the schema file located at &lt;code&gt;./src/models/Schema.ts&lt;/code&gt;. This file defines the structure of your database tables using the Drizzle ORM library.&lt;/p&gt; 
&lt;p&gt;After making changes to the schema, generate a migration by running the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm run db:generate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://go.warp.dev/nextjs-bp"&gt;&lt;img src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/warp-banner.png" alt="Run the command in Warp" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This will create a migration file that reflects your schema changes.&lt;/p&gt; 
&lt;p&gt;Migrations are automatically applied during Next.js initialization through &lt;code&gt;instrumentation.ts&lt;/code&gt;. Simply restart your Next.js server to apply the database changes.&lt;/p&gt; 
&lt;p&gt;Alternatively, if your database is running, you can apply migrations manually using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm run db:migrate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is no need to restart the Next.js server for the changes to take effect.&lt;/p&gt; 
&lt;h3&gt;Commit Message Format&lt;/h3&gt; 
&lt;p&gt;The project follows the &lt;a href="https://www.conventionalcommits.org/"&gt;Conventional Commits&lt;/a&gt; specification, meaning all commit messages must be formatted accordingly. To help you write commit messages, the project provides an interactive CLI that guides you through the commit process. To use it, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm run commit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;One of the benefits of using Conventional Commits is the ability to automatically generate GitHub releases. It also allows us to automatically determine the next version number based on the types of commits that are included in a release.&lt;/p&gt; 
&lt;h3&gt;CodeRabbit AI Code Reviews&lt;/h3&gt; 
&lt;p&gt;The project uses &lt;a href="https://www.coderabbit.ai?utm_source=next_js_starter&amp;amp;utm_medium=github&amp;amp;utm_campaign=next_js_starter_oss_2025"&gt;CodeRabbit&lt;/a&gt;, an AI-powered code reviewer. CodeRabbit monitors your repository and automatically provides intelligent code reviews on all new pull requests using its powerful AI engine.&lt;/p&gt; 
&lt;p&gt;Setting up CodeRabbit is simple, visit &lt;a href="https://www.coderabbit.ai?utm_source=next_js_starter&amp;amp;utm_medium=github&amp;amp;utm_campaign=next_js_starter_oss_2025"&gt;coderabbit.ai&lt;/a&gt;, sign in with your GitHub account, and add your repository from the dashboard. That's it!&lt;/p&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;p&gt;All unit tests are located alongside the source code in the same directory, making them easier to find. The unit test files follow this format: &lt;code&gt;*.test.ts&lt;/code&gt; or &lt;code&gt;*.test.tsx&lt;/code&gt;. The project uses Vitest and React Testing Library for unit testing. You can run the tests with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm run test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://go.warp.dev/nextjs-bp"&gt;&lt;img src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/warp-banner.png" alt="Run the command in Warp" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Integration &amp;amp; E2E Testing&lt;/h3&gt; 
&lt;p&gt;The project uses Playwright for integration and end-to-end (E2E) testing. Integration test files use the &lt;code&gt;*.spec.ts&lt;/code&gt; extension, while E2E test files use the &lt;code&gt;*.e2e.ts&lt;/code&gt; extension. You can run the tests with the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npx playwright install # Only for the first time in a new environment
npm run test:e2e
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Storybook&lt;/h3&gt; 
&lt;p&gt;Storybook is configured for UI component development and testing. The project uses Storybook with Next.js and Vite integration, including accessibility testing and documentation features.&lt;/p&gt; 
&lt;p&gt;Stories are located alongside your components in the &lt;code&gt;src&lt;/code&gt; directory and follow the pattern &lt;code&gt;*.stories.ts&lt;/code&gt; or &lt;code&gt;*.stories.tsx&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can run Storybook in development mode with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm run storybook
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will start Storybook on &lt;a href="http://localhost:6006"&gt;http://localhost:6006&lt;/a&gt; where you can view and interact with your UI components in isolation.&lt;/p&gt; 
&lt;p&gt;To run Storybook tests in headless mode, you can use the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm run storybook:test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Deploy to production&lt;/h3&gt; 
&lt;p&gt;During the build process, database migrations are automatically executed, so there's no need to run them manually. However, you must define &lt;code&gt;DATABASE_URL&lt;/code&gt; in your environment variables.&lt;/p&gt; 
&lt;p&gt;Then, you can generate a production build with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://go.warp.dev/nextjs-bp"&gt;&lt;img src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/warp-banner.png" alt="Run the command in Warp" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;It generates an optimized production build of the boilerplate. To test the generated build, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You also need to defined the environment variables &lt;code&gt;CLERK_SECRET_KEY&lt;/code&gt; using your own key.&lt;/p&gt; 
&lt;p&gt;This command starts a local server using the production build. You can now open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in your preferred browser to see the result.&lt;/p&gt; 
&lt;h3&gt;Deploy to Sevalla&lt;/h3&gt; 
&lt;p&gt;You can deploy a Next.js application along with its database on a single platform. First, create an account on &lt;a href="https://sevalla.com"&gt;Sevalla&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;After registration, you will be redirected to the dashboard. From there, navigate to &lt;code&gt;Database &amp;gt; Create a database&lt;/code&gt;. Select PostgreSQL and and use the default settings for a quick setup. For advanced users, you can customize the database location and resource size. Finally, click on &lt;code&gt;Create&lt;/code&gt; to complete the process.&lt;/p&gt; 
&lt;p&gt;Once the database is created and ready, return to the dashboard and click &lt;code&gt;Application &amp;gt; Create an App&lt;/code&gt;. After connecting your GitHub account, select the repository you want to deploy. Keep the default settings for the remaining options, then click &lt;code&gt;Create&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Next, connect your database to your application by going to &lt;code&gt;Networking &amp;gt; Connected services &amp;gt; Add connection&lt;/code&gt; and select the database you just created. You also need to enable the &lt;code&gt;Add environment variables to the application&lt;/code&gt; option, and rename &lt;code&gt;DB_URL&lt;/code&gt; to &lt;code&gt;DATABASE_URL&lt;/code&gt;. Then, click &lt;code&gt;Add connection&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Go to &lt;code&gt;Environment variables &amp;gt; Add environment variable&lt;/code&gt;, and define the environment variables &lt;code&gt;NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY&lt;/code&gt; and &lt;code&gt;CLERK_SECRET_KEY&lt;/code&gt; from your Clerk account. Click &lt;code&gt;Save&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Finally, initiate a new deployment by clicking &lt;code&gt;Overview &amp;gt; Latest deployments &amp;gt; Deploy now&lt;/code&gt;. If everything is set up correctly, your application will be deployed successfully with a working database.&lt;/p&gt; 
&lt;h3&gt;Error Monitoring&lt;/h3&gt; 
&lt;p&gt;The project uses &lt;a href="https://sentry.io/for/nextjs/?utm_source=github&amp;amp;utm_medium=paid-community&amp;amp;utm_campaign=general-fy25q1-nextjs&amp;amp;utm_content=github-banner-nextjsboilerplate-logo"&gt;Sentry&lt;/a&gt; to monitor errors. In the development environment, no additional setup is needed: SaaS Boilerplate is pre-configured to use Sentry and Spotlight (Sentry for Development). All errors will automatically be sent to your local Spotlight instance, allowing you to experience Sentry locally.&lt;/p&gt; 
&lt;p&gt;For production environment, you'll need to create a Sentry account and a new project. Then, in &lt;code&gt;.env.production&lt;/code&gt;, you need to update the following environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;NEXT_PUBLIC_SENTRY_DSN=
SENTRY_ORGANIZATION=
SENTRY_PROJECT=
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You also need to create a environment variable &lt;code&gt;SENTRY_AUTH_TOKEN&lt;/code&gt; in your hosting provider's dashboard.&lt;/p&gt; 
&lt;h3&gt;Code coverage&lt;/h3&gt; 
&lt;p&gt;Next.js Boilerplate relies on &lt;a href="https://about.codecov.io/codecov-free-trial/?utm_source=github&amp;amp;utm_medium=paid-community&amp;amp;utm_campaign=general-fy25q1-nextjs&amp;amp;utm_content=github-banner-nextjsboilerplate-logo"&gt;Codecov&lt;/a&gt; for code coverage reporting solution. To enable Codecov, create a Codecov account and connect it to your GitHub account. Your repositories should appear on your Codecov dashboard. Select the desired repository and copy the token. In GitHub Actions, define the &lt;code&gt;CODECOV_TOKEN&lt;/code&gt; environment variable and paste the token.&lt;/p&gt; 
&lt;p&gt;Make sure to create &lt;code&gt;CODECOV_TOKEN&lt;/code&gt; as a GitHub Actions secret, do not paste it directly into your source code.&lt;/p&gt; 
&lt;h3&gt;Logging&lt;/h3&gt; 
&lt;p&gt;The project uses LogTape for logging. In the development environment, logs are displayed in the console by default.&lt;/p&gt; 
&lt;p&gt;For production, the project is already integrated with &lt;a href="https://betterstack.com/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=next-js-boilerplate"&gt;Better Stack&lt;/a&gt; to manage and query your logs using SQL. To use Better Stack, you need to create a &lt;a href="https://betterstack.com/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=next-js-boilerplate"&gt;Better Stack&lt;/a&gt; account and create a new source: go to your Better Stack Logs Dashboard &amp;gt; Sources &amp;gt; Connect source. Then, you need to give a name to your source and select Node.js as the platform.&lt;/p&gt; 
&lt;p&gt;After creating the source, you will be able to view and copy your source token. In your environment variables, paste the token into the &lt;code&gt;NEXT_PUBLIC_BETTER_STACK_SOURCE_TOKEN&lt;/code&gt; variable. You'll also need to define the &lt;code&gt;NEXT_PUBLIC_BETTER_STACK_INGESTING_HOST&lt;/code&gt; variable, which can be found in the same place as the source token.&lt;/p&gt; 
&lt;p&gt;Now, all logs will automatically be sent to and ingested by Better Stack.&lt;/p&gt; 
&lt;h3&gt;Checkly monitoring&lt;/h3&gt; 
&lt;p&gt;The project uses &lt;a href="https://www.checklyhq.com/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=next-js-boilerplate"&gt;Checkly&lt;/a&gt; to ensure that your production environment is always up and running. At regular intervals, Checkly runs the tests ending with &lt;code&gt;*.check.e2e.ts&lt;/code&gt; extension and notifies you if any of the tests fail. Additionally, you have the flexibility to execute tests from multiple locations to ensure that your application is available worldwide.&lt;/p&gt; 
&lt;p&gt;To use Checkly, you must first create an account on &lt;a href="https://www.checklyhq.com/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=next-js-boilerplate"&gt;their website&lt;/a&gt;. After creating an account, generate a new API key in the Checkly Dashboard and set the &lt;code&gt;CHECKLY_API_KEY&lt;/code&gt; environment variable in GitHub Actions. Additionally, you will need to define the &lt;code&gt;CHECKLY_ACCOUNT_ID&lt;/code&gt;, which can also be found in your Checkly Dashboard under User Settings &amp;gt; General.&lt;/p&gt; 
&lt;p&gt;To complete the setup, update the &lt;code&gt;checkly.config.ts&lt;/code&gt; file with your own email address and production URL.&lt;/p&gt; 
&lt;h3&gt;Arcjet security and bot protection&lt;/h3&gt; 
&lt;p&gt;The project uses &lt;a href="https://launch.arcjet.com/Q6eLbRE"&gt;Arcjet&lt;/a&gt;, a security as code product that includes several features that can be used individually or combined to provide defense in depth for your site.&lt;/p&gt; 
&lt;p&gt;To set up Arcjet, &lt;a href="https://launch.arcjet.com/Q6eLbRE"&gt;create a free account&lt;/a&gt; and get your API key. Then add it to the &lt;code&gt;ARCJET_KEY&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;p&gt;Arcjet is configured with two main features: bot detection and the Arcjet Shield WAF:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.arcjet.com/bot-protection/concepts"&gt;Bot detection&lt;/a&gt; is configured to allow search engines, preview link generators e.g. Slack and Twitter previews, and to allow common uptime monitoring services. All other bots, such as scrapers and AI crawlers, will be blocked. You can &lt;a href="https://docs.arcjet.com/bot-protection/identifying-bots"&gt;configure additional bot types&lt;/a&gt; to allow or block.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.arcjet.com/shield/concepts"&gt;Arcjet Shield WAF&lt;/a&gt; will detect and block common attacks such as SQL injection, cross-site scripting, and other OWASP Top 10 vulnerabilities.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Arcjet is configured with a central client at &lt;code&gt;src/libs/Arcjet.ts&lt;/code&gt; that includes the Shield WAF rules. Additional rules are applied when Arcjet is called in &lt;code&gt;middleware.ts&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Useful commands&lt;/h3&gt; 
&lt;h3&gt;Code Quality and Validation&lt;/h3&gt; 
&lt;p&gt;The project includes several commands to ensure code quality and consistency. You can run:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;npm run lint&lt;/code&gt; to check for linting errors&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run lint:fix&lt;/code&gt; to automatically fix fixable issues from the linter&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run check:types&lt;/code&gt; to verify type safety across the entire project&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run check:deps&lt;/code&gt; help identify unused dependencies and files&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run check:i18n&lt;/code&gt; ensures all translations are complete and properly formatted&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Bundle Analyzer&lt;/h4&gt; 
&lt;p&gt;Next.js Boilerplate includes a built-in bundle analyzer. It can be used to analyze the size of your JavaScript bundles. To begin, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm run build-stats
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By running the command, it'll automatically open a new browser window with the results.&lt;/p&gt; 
&lt;h4&gt;Database Studio&lt;/h4&gt; 
&lt;p&gt;The project is already configured with Drizzle Studio to explore the database. You can run the following command to open the database studio:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm run db:studio
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, you can open &lt;a href="https://local.drizzle.studio"&gt;https://local.drizzle.studio&lt;/a&gt; with your favorite browser to explore your database.&lt;/p&gt; 
&lt;h3&gt;VSCode information (optional)&lt;/h3&gt; 
&lt;p&gt;If you are VSCode user, you can have a better integration with VSCode by installing the suggested extension in &lt;code&gt;.vscode/extension.json&lt;/code&gt;. The starter code comes up with Settings for a seamless integration with VSCode. The Debug configuration is also provided for frontend and backend debugging experience.&lt;/p&gt; 
&lt;p&gt;With the plugins installed in your VSCode, ESLint and Prettier can automatically fix the code and display errors. The same applies to testing: you can install the VSCode Vitest extension to automatically run your tests, and it also shows the code coverage in context.&lt;/p&gt; 
&lt;p&gt;Pro tips: if you need a project wide-type checking with TypeScript, you can run a build with &lt;kbd&gt;Cmd&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;B&lt;/kbd&gt; on Mac.&lt;/p&gt; 
&lt;h3&gt;Contributions&lt;/h3&gt; 
&lt;p&gt;Everyone is welcome to contribute to this project. Feel free to open an issue if you have any questions or find a bug. Totally open to suggestions and improvements.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Licensed under the MIT License, Copyright © 2025&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/LICENSE"&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;table width="100%"&gt; 
 &lt;tbody&gt;
  &lt;tr height="187px"&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://clerk.com?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=nextjs-boilerplate"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/ixartz/SaaS-Boilerplate/assets/1328388/6fb61971-3bf1-4580-98a0-10bd3f1040a2" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/ixartz/SaaS-Boilerplate/assets/1328388/f80a8bb5-66da-4772-ad36-5fabc5b02c60" /&gt; 
      &lt;img alt="Clerk – Authentication &amp;amp; User Management for Next.js" src="https://github.com/ixartz/SaaS-Boilerplate/assets/1328388/f80a8bb5-66da-4772-ad36-5fabc5b02c60" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://www.coderabbit.ai?utm_source=next_js_starter&amp;amp;utm_medium=github&amp;amp;utm_campaign=next_js_starter_oss_2025"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/coderabbit-logo-dark.svg?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/coderabbit-logo-light.svg?raw=true" /&gt; 
      &lt;img alt="CodeRabbit" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/coderabbit-logo-light.svg?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://sentry.io/for/nextjs/?utm_source=github&amp;amp;utm_medium=paid-community&amp;amp;utm_campaign=general-fy25q1-nextjs&amp;amp;utm_content=github-banner-nextjsboilerplate-logo"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/sentry-white.png?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/sentry-dark.png?raw=true" /&gt; 
      &lt;img alt="Sentry" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/sentry-dark.png?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://about.codecov.io/codecov-free-trial/?utm_source=github&amp;amp;utm_medium=paid-community&amp;amp;utm_campaign=general-fy25q1-nextjs&amp;amp;utm_content=github-banner-nextjsboilerplate-logo"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/codecov-white.svg?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/codecov-dark.svg?raw=true" /&gt; 
      &lt;img alt="Codecov" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/codecov-dark.svg?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr height="187px"&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://launch.arcjet.com/Q6eLbRE"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/arcjet-dark.svg?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/arcjet-light.svg?raw=true" /&gt; 
      &lt;img alt="Arcjet" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/arcjet-light.svg?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://sevalla.com/"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/sevalla-dark.png" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/sevalla-light.png" /&gt; 
      &lt;img alt="Sevalla" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/sevalla-light.png" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://l.crowdin.com/next-js"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/crowdin-white.png?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/crowdin-dark.png?raw=true" /&gt; 
      &lt;img alt="Crowdin" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/crowdin-dark.png?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr height="187px"&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://betterstack.com/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=next-js-boilerplate"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/better-stack-white.png?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/better-stack-dark.png?raw=true" /&gt; 
      &lt;img alt="Better Stack" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/better-stack-dark.png?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://posthog.com/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=next-js-boilerplate"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://posthog.com/brand/posthog-logo-white.svg" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://posthog.com/brand/posthog-logo.svg" /&gt; 
      &lt;img alt="PostHog" src="https://posthog.com/brand/posthog-logo.svg?sanitize=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://www.nutrient.io/guides/web/nextjs/?utm_source=nextjs-boilerplate&amp;amp;utm_medium=referral"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/nutrient-dark.png?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/nutrient-light.png?raw=true" /&gt; 
      &lt;img alt="Nutrient" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/nutrient-light.png?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr height="187px"&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="https://www.checklyhq.com/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=next-js-boilerplate"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="public/assets/images/checkly-logo-dark.png?raw=true" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="public/assets/images/checkly-logo-light.png?raw=true" /&gt; 
      &lt;img alt="Checkly" src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/checkly-logo-light.png?raw=true" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" style="width=&amp;quot;33%&amp;quot;"&gt; &lt;a href="https://nextjs-boilerplate.com/pro-saas-starter-kit"&gt; &lt;img src="https://raw.githubusercontent.com/ixartz/Next-js-Boilerplate/main/public/assets/images/nextjs-boilerplate-saas.png?raw=true" alt="Next.js SaaS Boilerplate with React" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" width="33%"&gt; &lt;a href="mailto:contact@creativedesignsguru.com"&gt; Add your logo here &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;p&gt;Made with ♥ by &lt;a href="https://creativedesignsguru.com"&gt;CreativeDesignsGuru&lt;/a&gt; &lt;a href="https://twitter.com/ixartz"&gt;&lt;img src="https://img.shields.io/twitter/url/https/twitter.com/cloudposse.svg?style=social&amp;amp;label=Follow%20%40Ixartz" alt="Twitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Looking for a custom boilerplate to kick off your project? I'd be glad to discuss how I can help you build one. Feel free to reach out anytime at &lt;a href="mailto:contact@creativedesignsguru.com"&gt;contact@creativedesignsguru.com&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/ixartz"&gt;&lt;img src="https://cdn.buymeacoffee.com/buttons/default-red.png" alt="Sponsor Next JS Boilerplate" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>