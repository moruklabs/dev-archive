<rss version="2.0">
  <channel>
    <title>GitHub All Languages Daily Trending</title>
    <description>Daily Trending of All Languages in GitHub</description>
    <pubDate>Tue, 16 Sep 2025 01:30:04 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>PowerShell/PowerShell</title>
      <link>https://github.com/PowerShell/PowerShell</link>
      <description>&lt;p&gt;PowerShell for every system!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://raw.githubusercontent.com/PowerShell/PowerShell/master/assets/ps_black_64.svg?sanitize=true" alt="logo" /&gt; PowerShell&lt;/h1&gt; 
&lt;p&gt;Welcome to the PowerShell GitHub Community! &lt;a href="https://learn.microsoft.com/powershell/scripting/overview"&gt;PowerShell&lt;/a&gt; is a cross-platform (Windows, Linux, and macOS) automation and configuration tool/framework that works well with your existing tools and is optimized for dealing with structured data (e.g. JSON, CSV, XML, etc.), REST APIs, and object models. It includes a command-line shell, an associated scripting language, and a framework for processing cmdlets.&lt;/p&gt; 
&lt;h2&gt;Windows PowerShell vs. PowerShell 7+&lt;/h2&gt; 
&lt;p&gt;Although this repository started as a fork of the Windows PowerShell codebase, changes made in this repository are not ported back to Windows PowerShell 5.1. This also means that &lt;a href="https://github.com/PowerShell/PowerShell/issues"&gt;issues tracked here&lt;/a&gt; are only for PowerShell 7.x and higher. Windows PowerShell specific issues should be reported with the &lt;a href="https://support.microsoft.com/windows/send-feedback-to-microsoft-with-the-feedback-hub-app-f59187f8-8739-22d6-ba93-f66612949332"&gt;Feedback Hub app&lt;/a&gt;, by choosing "Apps &amp;gt; PowerShell" in the category.&lt;/p&gt; 
&lt;h2&gt;New to PowerShell?&lt;/h2&gt; 
&lt;p&gt;If you are new to PowerShell and want to learn more, we recommend reviewing the &lt;a href="https://learn.microsoft.com/powershell/scripting/learn/more-powershell-learning"&gt;getting started&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;Get PowerShell&lt;/h2&gt; 
&lt;p&gt;PowerShell is supported on Windows, macOS, and a variety of Linux platforms. For more information, see &lt;a href="https://learn.microsoft.com/powershell/scripting/install/installing-powershell"&gt;Installing PowerShell&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Upgrading PowerShell&lt;/h2&gt; 
&lt;p&gt;For best results when upgrading, you should use the same install method you used when you first installed PowerShell. The update method is different for each platform and install method.&lt;/p&gt; 
&lt;h2&gt;Community Dashboard&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://aka.ms/PSPublicDashboard"&gt;Dashboard&lt;/a&gt; with visualizations for community contributions and project status using PowerShell, Azure, and PowerBI.&lt;/p&gt; 
&lt;p&gt;For more information on how and why we built this dashboard, check out this &lt;a href="https://devblogs.microsoft.com/powershell/powershell-open-source-community-dashboard/"&gt;blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Discussions&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.github.com/discussions/quickstart"&gt;GitHub Discussions&lt;/a&gt; is a feature to enable free and open discussions within the community for topics that are not related to code, unlike issues.&lt;/p&gt; 
&lt;p&gt;This is an experiment we are trying in our repositories, to see if it helps move discussions out of issues so that issues remain actionable by the team or members of the community. There should be no expectation that PowerShell team members are regular participants in these discussions. Individual PowerShell team members may choose to participate in discussions, but the expectation is that community members help drive discussions so that team members can focus on issues.&lt;/p&gt; 
&lt;p&gt;Create or join a &lt;a href="https://github.com/PowerShell/PowerShell/discussions"&gt;discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Chat&lt;/h2&gt; 
&lt;p&gt;Want to chat with other members of the PowerShell community?&lt;/p&gt; 
&lt;p&gt;There are dozens of topic-specific channels on our community-driven PowerShell Virtual User Group, which you can join on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gitter.im/PowerShell/PowerShell"&gt;Gitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/PowerShell"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://web.libera.chat/#powershell"&gt;IRC&lt;/a&gt; on Libera.Chat&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/psslack"&gt;Slack&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Build status of nightly builds&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Azure CI (Windows)&lt;/th&gt; 
   &lt;th align="left"&gt;Azure CI (Linux)&lt;/th&gt; 
   &lt;th align="left"&gt;Azure CI (macOS)&lt;/th&gt; 
   &lt;th align="left"&gt;CodeFactor Grade&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://powershell.visualstudio.com/PowerShell/_build?definitionId=32"&gt;&lt;img src="https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-Windows-daily" alt="windows-nightly-image" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://powershell.visualstudio.com/PowerShell/_build?definitionId=23"&gt;&lt;img src="https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-linux-daily?branchName=master" alt="linux-nightly-image" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://powershell.visualstudio.com/PowerShell/_build?definitionId=24"&gt;&lt;img src="https://powershell.visualstudio.com/PowerShell/_apis/build/status/PowerShell-CI-macos-daily?branchName=master" alt="macOS-nightly-image" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://www.codefactor.io/repository/github/powershell/powershell"&gt;&lt;img src="https://www.codefactor.io/repository/github/powershell/powershell/badge" alt="cf-image" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Developing and Contributing&lt;/h2&gt; 
&lt;p&gt;Want to contribute to PowerShell? Please start with the &lt;a href="https://raw.githubusercontent.com/PowerShell/PowerShell/master/.github/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt; to learn how to develop and contribute.&lt;/p&gt; 
&lt;p&gt;If you are developing .NET Core C# applications targeting PowerShell Core, &lt;a href="https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/FAQ.md#where-do-i-get-the-powershell-core-sdk-package"&gt;check out our FAQ&lt;/a&gt; to learn more about the PowerShell SDK NuGet package.&lt;/p&gt; 
&lt;p&gt;Also, make sure to check out our &lt;a href="https://github.com/powershell/powershell-rfc"&gt;PowerShell-RFC repository&lt;/a&gt; for request-for-comments (RFC) documents to submit and give comments on proposed and future designs.&lt;/p&gt; 
&lt;h2&gt;Building PowerShell&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Linux&lt;/th&gt; 
   &lt;th&gt;Windows&lt;/th&gt; 
   &lt;th&gt;macOS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/building/linux.md"&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/building/windows-core.md"&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/building/macos.md"&gt;Instructions&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you have any problems building PowerShell, please start by consulting the developer &lt;a href="https://raw.githubusercontent.com/PowerShell/PowerShell/master/docs/FAQ.md"&gt;FAQ&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Downloading the Source Code&lt;/h2&gt; 
&lt;p&gt;You can clone the repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/PowerShell/PowerShell.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information, see &lt;a href="https://github.com/PowerShell/PowerShell/tree/master/docs/git"&gt;working with the PowerShell repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;For support, see the &lt;a href="https://github.com/PowerShell/PowerShell/tree/master/.github/SUPPORT.md"&gt;Support Section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Legal and Licensing&lt;/h2&gt; 
&lt;p&gt;PowerShell is licensed under the &lt;a href="https://github.com/PowerShell/PowerShell/tree/master/LICENSE.txt"&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Docker Containers&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!Important] The PowerShell container images are now &lt;a href="https://github.com/PowerShell/Announcements/issues/75"&gt;maintained by the .NET team&lt;/a&gt;. The containers at &lt;code&gt;mcr.microsoft.com/powershell&lt;/code&gt; are currently not maintained.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;License: By requesting and using the Container OS Image for Windows containers, you acknowledge, understand, and consent to the Supplemental License Terms available on &lt;a href="https://mcr.microsoft.com/en-us/product/powershell/tags"&gt;Microsoft Artifact Registry&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Telemetry&lt;/h3&gt; 
&lt;p&gt;Please visit our &lt;a href="https://learn.microsoft.com/powershell/module/microsoft.powershell.core/about/about_telemetry"&gt;about_Telemetry&lt;/a&gt; topic to read details about telemetry gathered by PowerShell.&lt;/p&gt; 
&lt;h2&gt;Governance&lt;/h2&gt; 
&lt;p&gt;The governance policy for the PowerShell project is described the &lt;a href="https://github.com/PowerShell/PowerShell/raw/master/docs/community/governance.md"&gt;PowerShell Governance&lt;/a&gt; document.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/PowerShell/PowerShell/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Please see our &lt;a href="https://raw.githubusercontent.com/PowerShell/PowerShell/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; before participating in this project.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/PowerShell/PowerShell/master/.github/SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;For any security issues, please see our &lt;a href="https://raw.githubusercontent.com/PowerShell/PowerShell/master/.github/SECURITY.md"&gt;Security Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>simdjson/simdjson</title>
      <link>https://github.com/simdjson/simdjson</link>
      <description>&lt;p&gt;Parsing gigabytes of JSON per second : used by Facebook/Meta Velox, the Node.js runtime, ClickHouse, WatermelonDB, Apache Doris, Milvus, StarRocks&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202-blue.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/LICENSE-MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://simdjson.github.io/simdjson/"&gt;&lt;img src="https://img.shields.io/badge/docs-doxygen-green.svg?sanitize=true" alt="Doxygen Documentation" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;simdjson : Parsing gigabytes of JSON per second&lt;/h1&gt; 
&lt;img src="https://raw.githubusercontent.com/simdjson/simdjson/master/images/logo.png" width="10%" style="float: right" /&gt; JSON is everywhere on the Internet. Servers spend a *lot* of time parsing it. We need a fresh approach. The simdjson library uses commonly available SIMD instructions and microparallel algorithms to parse JSON 4x faster than RapidJSON and 25x faster than JSON for Modern C++. 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Fast:&lt;/strong&gt; Over 4x faster than commonly used production-grade JSON parsers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Record Breaking Features:&lt;/strong&gt; Minify JSON at 6 GB/s, validate UTF-8 at 13 GB/s, NDJSON at 3.5 GB/s.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy:&lt;/strong&gt; First-class, easy to use and carefully documented APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Strict:&lt;/strong&gt; Full JSON and UTF-8 validation, lossless parsing. Performance with no compromises.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic:&lt;/strong&gt; Selects a CPU-tailored parser at runtime. No configuration needed.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reliable:&lt;/strong&gt; From memory allocation to error handling, simdjson's design avoids surprises.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Peer Reviewed:&lt;/strong&gt; Our research appears in venues like VLDB Journal, Software: Practice and Experience.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This library is part of the &lt;a href="https://awesomecpp.com"&gt;Awesome Modern C++&lt;/a&gt; list.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/#real-world-usage"&gt;Real-world usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/#godbolt"&gt;Godbolt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/#performance-results"&gt;Performance results&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/#packages"&gt;Packages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/#bindings-and-ports-of-simdjson"&gt;Bindings and Ports of simdjson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/#about-simdjson"&gt;About simdjson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/#funding"&gt;Funding&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/#contributing-to-simdjson"&gt;Contributing to simdjson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Real-world usage&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ClickHouse/ClickHouse"&gt;ClickHouse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://velox-lib.io"&gt;Meta Velox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/paxml"&gt;Google Pax&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/milvus-io/milvus"&gt;milvus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://questdb.io/blog/questdb-release-8-0-3/"&gt;QuestDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aras-p/ClangBuildAnalyzer"&gt;Clang Build Analyzer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Shopify/heap-profiler"&gt;Shopify HeapProfiler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StarRocks/starrocks"&gt;StarRocks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/FishStore"&gt;Microsoft FishStore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/intel/pcm"&gt;Intel PCM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Nozbe/WatermelonDB"&gt;WatermelonDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apache/doris"&gt;Apache Doris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dgraph-io/dgraph"&gt;Dgraph&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unum-cloud/ujrpc"&gt;UJRPC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spnda/fastgltf"&gt;fastgltf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tenzir/vast"&gt;vast&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ada-url/ada"&gt;ada-url&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adamritter/fastgron"&gt;fastgron&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wasmedge.org"&gt;WasmEdge&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logicalclocks/rondb"&gt;RonDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GreptimeTeam/greptimedb"&gt;GreptimeDB&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are planning to use simdjson in a product, please work from one of our releases.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;The simdjson library is easily consumable with a single .h and .cpp file.&lt;/p&gt; 
&lt;ol start="0"&gt; 
 &lt;li&gt; &lt;p&gt;Prerequisites: &lt;code&gt;g++&lt;/code&gt; (version 7 or better) or &lt;code&gt;clang++&lt;/code&gt; (version 6 or better), and a 64-bit system with a command-line shell (e.g., Linux, macOS, freeBSD). We also support programming environments like Visual Studio and Xcode, but different steps are needed. Users of clang++ may need to specify the C++ version (e.g., &lt;code&gt;c++ -std=c++17&lt;/code&gt;) since clang++ tends to default on C++98.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Pull &lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/singleheader/simdjson.h"&gt;simdjson.h&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/singleheader/simdjson.cpp"&gt;simdjson.cpp&lt;/a&gt; into a directory, along with the sample file &lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/jsonexamples/twitter.json"&gt;twitter.json&lt;/a&gt;. You can download them with the &lt;code&gt;wget&lt;/code&gt; utility:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;wget https://raw.githubusercontent.com/simdjson/simdjson/master/singleheader/simdjson.h https://raw.githubusercontent.com/simdjson/simdjson/master/singleheader/simdjson.cpp https://raw.githubusercontent.com/simdjson/simdjson/master/jsonexamples/twitter.json
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create &lt;code&gt;quickstart.cpp&lt;/code&gt;:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;#include &amp;lt;iostream&amp;gt;
#include "simdjson.h"
using namespace simdjson;
int main(void) {
    ondemand::parser parser;
    padded_string json = padded_string::load("twitter.json");
    ondemand::document tweets = parser.iterate(json);
    std::cout &amp;lt;&amp;lt; uint64_t(tweets["search_metadata"]["count"]) &amp;lt;&amp;lt; " results." &amp;lt;&amp;lt; std::endl;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;code&gt;c++ -o quickstart quickstart.cpp simdjson.cpp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;./quickstart&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt; 100 results.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Usage documentation is available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/doc/basics.md"&gt;Basics&lt;/a&gt; is an overview of how to use simdjson and its APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/doc/builder.md"&gt;Builder&lt;/a&gt; is an overview of how to efficiently write JSON strings using simdjson.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/doc/performance.md"&gt;Performance&lt;/a&gt; shows some more advanced scenarios and how to tune for them.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/doc/implementation-selection.md"&gt;Implementation Selection&lt;/a&gt; describes runtime CPU detection and how you can work with it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://simdjson.github.io/simdjson/"&gt;API&lt;/a&gt; contains the automatically generated API documentation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Godbolt&lt;/h2&gt; 
&lt;p&gt;Some users may want to browse code along with the compiled assembly. You want to check out the following lists of examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://godbolt.org/z/K3Px64TqK"&gt;C++26 reflection example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://godbolt.org/z/7G5qE4sr9"&gt;simdjson examples with errors handled through exceptions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://godbolt.org/z/e9dWb9E4v"&gt;simdjson examples with errors without exceptions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Performance results&lt;/h2&gt; 
&lt;p&gt;The simdjson library uses three-quarters less instructions than state-of-the-art parser &lt;a href="https://rapidjson.org"&gt;RapidJSON&lt;/a&gt;. To our knowledge, simdjson is the first fully-validating JSON parser to run at &lt;a href="https://en.wikipedia.org/wiki/Gigabyte"&gt;gigabytes per second&lt;/a&gt; (GB/s) on commodity processors. It can parse millions of JSON documents per second on a single core.&lt;/p&gt; 
&lt;p&gt;The following figure represents parsing speed in GB/s for parsing various files on an Intel Skylake processor (3.4 GHz) using the GNU GCC 10 compiler (with the -O3 flag). We compare against the best and fastest C++ libraries on benchmarks that load and process the data. The simdjson library offers full unicode (&lt;a href="https://en.wikipedia.org/wiki/UTF-8"&gt;UTF-8&lt;/a&gt;) validation and exact number parsing.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/simdjson/simdjson/master/doc/rome.png" width="60%" /&gt; 
&lt;p&gt;The simdjson library offers high speed whether it processes tiny files (e.g., 300 bytes) or larger files (e.g., 3MB). The following plot presents parsing speed for &lt;a href="https://github.com/simdjson/simdjson_experiments_vldb2019/raw/master/experiments/growing/gen.py"&gt;synthetic files over various sizes generated with a script&lt;/a&gt; on a 3.4 GHz Skylake processor (GNU GCC 9, -O3).&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/simdjson/simdjson/master/doc/growing.png" width="60%" /&gt; 
&lt;p&gt;&lt;a href="https://github.com/simdjson/simdjson_experiments_vldb2019"&gt;All our experiments are reproducible&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For NDJSON files, we can exceed 3 GB/s with &lt;a href="https://github.com/simdjson/simdjson/raw/master/doc/parse_many.md"&gt;our multithreaded parsing functions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/simdjson/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/simdjson.svg?sanitize=true" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Bindings and Ports of simdjson&lt;/h2&gt; 
&lt;p&gt;We distinguish between "bindings" (which just wrap the C++ code) and a port to another programming language (which reimplements everything).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/michaeleisel/zippyjson"&gt;ZippyJSON&lt;/a&gt;: Swift bindings for the simdjson project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gerrymanoim/libpy_simdjson/"&gt;libpy_simdjson&lt;/a&gt;: high-speed Python bindings for simdjson using &lt;a href="https://github.com/quantopian/libpy"&gt;libpy&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TkTech/pysimdjson"&gt;pysimdjson&lt;/a&gt;: Python bindings for the simdjson project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TeskaLabs/cysimdjson"&gt;cysimdjson&lt;/a&gt;: high-speed Python bindings for the simdjson project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/simd-lite"&gt;simdjson-rs&lt;/a&gt;: Rust port.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SunDoge/simdjson-rust"&gt;simdjson-rust&lt;/a&gt;: Rust wrapper (bindings).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EgorBo/SimdJsonSharp"&gt;SimdJsonSharp&lt;/a&gt;: C# version for .NET Core (bindings and full port).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/luizperes/simdjson_nodejs"&gt;simdjson_nodejs&lt;/a&gt;: Node.js bindings for the simdjson project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/crazyxman/simdjson_php"&gt;simdjson_php&lt;/a&gt;: PHP bindings for the simdjson project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/saka1/simdjson_ruby"&gt;simdjson_ruby&lt;/a&gt;: Ruby bindings for the simdjson project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anilmaurya/fast_jsonparser"&gt;fast_jsonparser&lt;/a&gt;: Ruby bindings for the simdjson project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/minio/simdjson-go"&gt;simdjson-go&lt;/a&gt;: Go port using Golang assembly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eddelbuettel/rcppsimdjson"&gt;rcppsimdjson&lt;/a&gt;: R bindings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChomperT/simdjson_erlang"&gt;simdjson_erlang&lt;/a&gt;: erlang bindings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/saleyn/simdjsone"&gt;simdjsone&lt;/a&gt;: erlang bindings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/FourierTransformer/lua-simdjson"&gt;lua-simdjson&lt;/a&gt;: lua bindings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackage.haskell.org/package/hermes-json"&gt;hermes-json&lt;/a&gt;: haskell bindings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EzequielRamis/zimdjson"&gt;zimdjson&lt;/a&gt;: Zig port.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/travisstaloch/simdjzon"&gt;simdjzon&lt;/a&gt;: Zig port.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rawleyfowler/JSON-simd"&gt;JSON-Simd&lt;/a&gt;: Raku bindings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://metacpan.org/pod/JSON::SIMD"&gt;JSON::SIMD&lt;/a&gt;: Perl bindings; fully-featured JSON module that uses simdjson for decoding.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sainttttt/gemmaJSON"&gt;gemmaJSON&lt;/a&gt;: Nim JSON parser based on simdjson bindings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/simdjson/simdjson-java"&gt;simdjson-java&lt;/a&gt;: Java port.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About simdjson&lt;/h2&gt; 
&lt;p&gt;The simdjson library takes advantage of modern microarchitectures, parallelizing with SIMD vector instructions, reducing branch misprediction, and reducing data dependency to take advantage of each CPU's multiple execution cores.&lt;/p&gt; 
&lt;p&gt;Our default front-end is called On-Demand, and we wrote a paper about it:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;John Keiser, Daniel Lemire, &lt;a href="http://arxiv.org/abs/2312.17149"&gt;On-Demand JSON: A Better Way to Parse Documents?&lt;/a&gt;, Software: Practice and Experience 54 (6), 2024.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some people &lt;a href="https://arxiv.org/abs/1902.08318"&gt;enjoy reading the first (2019) simdjson paper&lt;/a&gt;: A description of the design and implementation of simdjson is in our research article:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Geoff Langdale, Daniel Lemire, &lt;a href="https://arxiv.org/abs/1902.08318"&gt;Parsing Gigabytes of JSON per Second&lt;/a&gt;, VLDB Journal 28 (6), 2019.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We have an in-depth paper focused on the UTF-8 validation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;John Keiser, Daniel Lemire, &lt;a href="https://arxiv.org/abs/2010.03090"&gt;Validating UTF-8 In Less Than One Instruction Per Byte&lt;/a&gt;, Software: Practice &amp;amp; Experience 51 (5), 2021.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We also have an informal &lt;a href="https://branchfree.org/2019/02/25/paper-parsing-gigabytes-of-json-per-second/"&gt;blog post providing some background and context&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For the video inclined, &lt;br /&gt; &lt;a href="http://www.youtube.com/watch?v=wlvKAT7SZIQ"&gt;&lt;img src="http://img.youtube.com/vi/wlvKAT7SZIQ/0.jpg" alt="simdjson at QCon San Francisco 2019" /&gt;&lt;/a&gt;&lt;br /&gt; (It was the best voted talk, we're kinda proud of it.)&lt;/p&gt; 
&lt;h2&gt;Funding&lt;/h2&gt; 
&lt;p&gt;The work is supported by the Natural Sciences and Engineering Research Council of Canada under grants RGPIN-2017-03910 and RGPIN-2024-03787.&lt;/p&gt; 
&lt;h2&gt;Contributing to simdjson&lt;/h2&gt; 
&lt;p&gt;Head over to &lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for information on contributing to simdjson, and &lt;a href="https://raw.githubusercontent.com/simdjson/simdjson/master/HACKING.md"&gt;HACKING.md&lt;/a&gt; for information on source, building, and architecture/design.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This code is made available under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0.html"&gt;Apache License 2.0&lt;/a&gt; as well as under the MIT License. As a user, you can pick the license you prefer.&lt;/p&gt; 
&lt;p&gt;Under Windows, we build some tools using the windows/dirent_portable.h file (which is outside our library code): it is under the liberal (business-friendly) MIT license.&lt;/p&gt; 
&lt;p&gt;For compilers that do not support &lt;a href="https://en.wikipedia.org/wiki/C%2B%2B17"&gt;C++17&lt;/a&gt;, we bundle the string-view library which is published under the &lt;a href="http://www.boost.org/LICENSE_1_0.txt"&gt;Boost license&lt;/a&gt;. Like the Apache license, the Boost license is a permissive license allowing commercial redistribution.&lt;/p&gt; 
&lt;p&gt;For efficient number serialization, we bundle Florian Loitsch's implementation of the Grisu2 algorithm for binary to decimal floating-point numbers. The implementation was slightly modified by JSON for Modern C++ library. Both Florian Loitsch's implementation and JSON for Modern C++ are provided under the MIT license.&lt;/p&gt; 
&lt;p&gt;For runtime dispatching, we use some code from the PyTorch project licensed under 3-clause BSD.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/markitdown</title>
      <link>https://github.com/microsoft/markitdown</link>
      <description>&lt;p&gt;Python tool for converting files and office documents to Markdown.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MarkItDown&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://pypi.org/project/markitdown/"&gt;&lt;img src="https://img.shields.io/pypi/v/markitdown.svg?sanitize=true" alt="PyPI" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/pypi/dd/markitdown" alt="PyPI - Downloads" /&gt; &lt;a href="https://github.com/microsoft/autogen"&gt;&lt;img src="https://img.shields.io/badge/Built%20by-AutoGen%20Team-blue" alt="Built by AutoGen Team" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] MarkItDown now offers an MCP (Model Context Protocol) server for integration with LLM applications like Claude Desktop. See &lt;a href="https://github.com/microsoft/markitdown/tree/main/packages/markitdown-mcp"&gt;markitdown-mcp&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Breaking changes between 0.0.1 to 0.1.0:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Dependencies are now organized into optional feature-groups (further details below). Use &lt;code&gt;pip install 'markitdown[all]'&lt;/code&gt; to have backward-compatible behavior.&lt;/li&gt; 
  &lt;li&gt;convert_stream() now requires a binary file-like object (e.g., a file opened in binary mode, or an io.BytesIO object). This is a breaking change from the previous version, where it previously also accepted text file-like objects, like io.StringIO.&lt;/li&gt; 
  &lt;li&gt;The DocumentConverter class interface has changed to read from file-like streams rather than file paths. &lt;em&gt;No temporary files are created anymore&lt;/em&gt;. If you are the maintainer of a plugin, or custom DocumentConverter, you likely need to update your code. Otherwise, if only using the MarkItDown class or CLI (as in these examples), you should not need to change anything.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;MarkItDown is a lightweight Python utility for converting various files to Markdown for use with LLMs and related text analysis pipelines. To this end, it is most comparable to &lt;a href="https://github.com/deanmalmgren/textract"&gt;textract&lt;/a&gt;, but with a focus on preserving important document structure and content as Markdown (including: headings, lists, tables, links, etc.) While the output is often reasonably presentable and human-friendly, it is meant to be consumed by text analysis tools -- and may not be the best option for high-fidelity document conversions for human consumption.&lt;/p&gt; 
&lt;p&gt;MarkItDown currently supports the conversion from:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;PDF&lt;/li&gt; 
 &lt;li&gt;PowerPoint&lt;/li&gt; 
 &lt;li&gt;Word&lt;/li&gt; 
 &lt;li&gt;Excel&lt;/li&gt; 
 &lt;li&gt;Images (EXIF metadata and OCR)&lt;/li&gt; 
 &lt;li&gt;Audio (EXIF metadata and speech transcription)&lt;/li&gt; 
 &lt;li&gt;HTML&lt;/li&gt; 
 &lt;li&gt;Text-based formats (CSV, JSON, XML)&lt;/li&gt; 
 &lt;li&gt;ZIP files (iterates over contents)&lt;/li&gt; 
 &lt;li&gt;Youtube URLs&lt;/li&gt; 
 &lt;li&gt;EPubs&lt;/li&gt; 
 &lt;li&gt;... and more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why Markdown?&lt;/h2&gt; 
&lt;p&gt;Markdown is extremely close to plain text, with minimal markup or formatting, but still provides a way to represent important document structure. Mainstream LLMs, such as OpenAI's GPT-4o, natively "&lt;em&gt;speak&lt;/em&gt;" Markdown, and often incorporate Markdown into their responses unprompted. This suggests that they have been trained on vast amounts of Markdown-formatted text, and understand it well. As a side benefit, Markdown conventions are also highly token-efficient.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;MarkItDown requires Python 3.10 or higher. It is recommended to use a virtual environment to avoid dependency conflicts.&lt;/p&gt; 
&lt;p&gt;With the standard Python installation, you can create and activate a virtual environment using the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -m venv .venv
source .venv/bin/activate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If using &lt;code&gt;uv&lt;/code&gt;, you can create a virtual environment with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uv venv --python=3.12 .venv
source .venv/bin/activate
# NOTE: Be sure to use 'uv pip install' rather than just 'pip install' to install packages in this virtual environment
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are using Anaconda, you can create a virtual environment with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;conda create -n markitdown python=3.12
conda activate markitdown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;To install MarkItDown, use pip: &lt;code&gt;pip install 'markitdown[all]'&lt;/code&gt;. Alternatively, you can install it from the source:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:microsoft/markitdown.git
cd markitdown
pip install -e 'packages/markitdown[all]'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Command-Line&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;markitdown path-to-file.pdf &amp;gt; document.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use &lt;code&gt;-o&lt;/code&gt; to specify the output file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;markitdown path-to-file.pdf -o document.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also pipe content:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cat path-to-file.pdf | markitdown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Optional Dependencies&lt;/h3&gt; 
&lt;p&gt;MarkItDown has optional dependencies for activating various file formats. Earlier in this document, we installed all optional dependencies with the &lt;code&gt;[all]&lt;/code&gt; option. However, you can also install them individually for more control. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install 'markitdown[pdf, docx, pptx]'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;will install only the dependencies for PDF, DOCX, and PPTX files.&lt;/p&gt; 
&lt;p&gt;At the moment, the following optional dependencies are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;[all]&lt;/code&gt; Installs all optional dependencies&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[pptx]&lt;/code&gt; Installs dependencies for PowerPoint files&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[docx]&lt;/code&gt; Installs dependencies for Word files&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[xlsx]&lt;/code&gt; Installs dependencies for Excel files&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[xls]&lt;/code&gt; Installs dependencies for older Excel files&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[pdf]&lt;/code&gt; Installs dependencies for PDF files&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[outlook]&lt;/code&gt; Installs dependencies for Outlook messages&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[az-doc-intel]&lt;/code&gt; Installs dependencies for Azure Document Intelligence&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[audio-transcription]&lt;/code&gt; Installs dependencies for audio transcription of wav and mp3 files&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[youtube-transcription]&lt;/code&gt; Installs dependencies for fetching YouTube video transcription&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Plugins&lt;/h3&gt; 
&lt;p&gt;MarkItDown also supports 3rd-party plugins. Plugins are disabled by default. To list installed plugins:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;markitdown --list-plugins
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To enable plugins use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;markitdown --use-plugins path-to-file.pdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To find available plugins, search GitHub for the hashtag &lt;code&gt;#markitdown-plugin&lt;/code&gt;. To develop a plugin, see &lt;code&gt;packages/markitdown-sample-plugin&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Azure Document Intelligence&lt;/h3&gt; 
&lt;p&gt;To use Microsoft Document Intelligence for conversion:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;markitdown path-to-file.pdf -o document.md -d -e "&amp;lt;document_intelligence_endpoint&amp;gt;"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More information about how to set up an Azure Document Intelligence Resource can be found &lt;a href="https://learn.microsoft.com/en-us/azure/ai-services/document-intelligence/how-to-guides/create-document-intelligence-resource?view=doc-intel-4.0.0"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Python API&lt;/h3&gt; 
&lt;p&gt;Basic usage in Python:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from markitdown import MarkItDown

md = MarkItDown(enable_plugins=False) # Set to True to enable plugins
result = md.convert("test.xlsx")
print(result.text_content)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Document Intelligence conversion in Python:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from markitdown import MarkItDown

md = MarkItDown(docintel_endpoint="&amp;lt;document_intelligence_endpoint&amp;gt;")
result = md.convert("test.pdf")
print(result.text_content)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use Large Language Models for image descriptions (currently only for pptx and image files), provide &lt;code&gt;llm_client&lt;/code&gt; and &lt;code&gt;llm_model&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from markitdown import MarkItDown
from openai import OpenAI

client = OpenAI()
md = MarkItDown(llm_client=client, llm_model="gpt-4o", llm_prompt="optional custom prompt")
result = md.convert("example.jpg")
print(result.text_content)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker build -t markitdown:latest .
docker run --rm -i markitdown:latest &amp;lt; ~/your-file.pdf &amp;gt; output.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href="https://cla.opensource.microsoft.com"&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h3&gt;How to Contribute&lt;/h3&gt; 
&lt;p&gt;You can help by looking at issues or helping review PRs. Any issue or PR is welcome, but we have also marked some as 'open for contribution' and 'open for reviewing' to help facilitate community contributions. These are of course just suggestions and you are welcome to contribute in any way you like.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;&lt;/th&gt; 
    &lt;th&gt;All&lt;/th&gt; 
    &lt;th&gt;Especially Needs Help from Community&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;strong&gt;Issues&lt;/strong&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://github.com/microsoft/markitdown/issues"&gt;All Issues&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://github.com/microsoft/markitdown/issues?q=is%3Aissue+is%3Aopen+label%3A%22open+for+contribution%22"&gt;Issues open for contribution&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;strong&gt;PRs&lt;/strong&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://github.com/microsoft/markitdown/pulls"&gt;All PRs&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://github.com/microsoft/markitdown/pulls?q=is%3Apr+is%3Aopen+label%3A%22open+for+reviewing%22"&gt;PRs open for reviewing&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h3&gt;Running Tests and Checks&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Navigate to the MarkItDown package:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;cd packages/markitdown
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;code&gt;hatch&lt;/code&gt; in your environment and run tests:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;pip install hatch  # Other ways of installing hatch: https://hatch.pypa.io/dev/install/
hatch shell
hatch test
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(Alternative) Use the Devcontainer which has all the dependencies installed:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;# Reopen the project in Devcontainer and run:
hatch test
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run pre-commit checks before submitting a PR: &lt;code&gt;pre-commit run --all-files&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing 3rd-party Plugins&lt;/h3&gt; 
&lt;p&gt;You can also contribute by creating and sharing 3rd party plugins. See &lt;code&gt;packages/markitdown-sample-plugin&lt;/code&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href="https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general"&gt;Microsoft's Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rasbt/LLMs-from-scratch</title>
      <link>https://github.com/rasbt/LLMs-from-scratch</link>
      <description>&lt;p&gt;Implement a ChatGPT-like LLM in PyTorch from scratch, step by step&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Build a Large Language Model (From Scratch)&lt;/h1&gt; 
&lt;p&gt;This repository contains the code for developing, pretraining, and finetuning a GPT-like LLM and is the official code repository for the book &lt;a href="https://amzn.to/4fqvn0D"&gt;Build a Large Language Model (From Scratch)&lt;/a&gt;.&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://amzn.to/4fqvn0D"&gt;&lt;img src="https://sebastianraschka.com/images/LLMs-from-scratch-images/cover.jpg?123" width="250px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;In &lt;a href="http://mng.bz/orYv"&gt;&lt;em&gt;Build a Large Language Model (From Scratch)&lt;/em&gt;&lt;/a&gt;, you'll learn and understand how large language models (LLMs) work from the inside out by coding them from the ground up, step by step. In this book, I'll guide you through creating your own LLM, explaining each stage with clear text, diagrams, and examples.&lt;/p&gt; 
&lt;p&gt;The method described in this book for training and developing your own small-but-functional model for educational purposes mirrors the approach used in creating large-scale foundational models such as those behind ChatGPT. In addition, this book includes code for loading the weights of larger pretrained models for finetuning.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Link to the official &lt;a href="https://github.com/rasbt/LLMs-from-scratch"&gt;source code repository&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://mng.bz/orYv"&gt;Link to the book at Manning (the publisher's website)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/gp/product/1633437167"&gt;Link to the book page on Amazon.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ISBN 9781633437166&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="http://mng.bz/orYv#reviews"&gt;&lt;img src="https://sebastianraschka.com//images/LLMs-from-scratch-images/other/reviews.png" width="220px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;p&gt;To download a copy of this repository, click on the &lt;a href="https://github.com/rasbt/LLMs-from-scratch/archive/refs/heads/main.zip"&gt;Download ZIP&lt;/a&gt; button or execute the following command in your terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone --depth 1 https://github.com/rasbt/LLMs-from-scratch.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;p&gt;(If you downloaded the code bundle from the Manning website, please consider visiting the official code repository on GitHub at &lt;a href="https://github.com/rasbt/LLMs-from-scratch"&gt;https://github.com/rasbt/LLMs-from-scratch&lt;/a&gt; for the latest updates.)&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;p&gt;Please note that this &lt;code&gt;README.md&lt;/code&gt; file is a Markdown (&lt;code&gt;.md&lt;/code&gt;) file. If you have downloaded this code bundle from the Manning website and are viewing it on your local computer, I recommend using a Markdown editor or previewer for proper viewing. If you haven't installed a Markdown editor yet, &lt;a href="https://ghostwriter.kde.org"&gt;Ghostwriter&lt;/a&gt; is a good free option.&lt;/p&gt; 
&lt;p&gt;You can alternatively view this and other files on GitHub at &lt;a href="https://github.com/rasbt/LLMs-from-scratch"&gt;https://github.com/rasbt/LLMs-from-scratch&lt;/a&gt; in your browser, which renders Markdown automatically.&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; If you're seeking guidance on installing Python and Python packages and setting up your code environment, I suggest reading the &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/setup/README.md"&gt;README.md&lt;/a&gt; file located in the &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/setup"&gt;setup&lt;/a&gt; directory.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://github.com/rasbt/LLMs-from-scratch/actions/workflows/basic-tests-linux-uv.yml"&gt;&lt;img src="https://github.com/rasbt/LLMs-from-scratch/actions/workflows/basic-tests-linux-uv.yml/badge.svg?sanitize=true" alt="Code tests Linux" /&gt;&lt;/a&gt; &lt;a href="https://github.com/rasbt/LLMs-from-scratch/actions/workflows/basic-tests-windows-uv-pip.yml"&gt;&lt;img src="https://github.com/rasbt/LLMs-from-scratch/actions/workflows/basic-tests-windows-uv-pip.yml/badge.svg?sanitize=true" alt="Code tests Windows" /&gt;&lt;/a&gt; &lt;a href="https://github.com/rasbt/LLMs-from-scratch/actions/workflows/basic-tests-macos-uv.yml"&gt;&lt;img src="https://github.com/rasbt/LLMs-from-scratch/actions/workflows/basic-tests-macos-uv.yml/badge.svg?sanitize=true" alt="Code tests macOS" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Chapter Title&lt;/th&gt; 
   &lt;th&gt;Main Code (for Quick Access)&lt;/th&gt; 
   &lt;th&gt;All Code + Supplementary&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/setup"&gt;Setup recommendations&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ch 1: Understanding Large Language Models&lt;/td&gt; 
   &lt;td&gt;No code&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ch 2: Working with Text Data&lt;/td&gt; 
   &lt;td&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch02/01_main-chapter-code/ch02.ipynb"&gt;ch02.ipynb&lt;/a&gt;&lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch02/01_main-chapter-code/dataloader.ipynb"&gt;dataloader.ipynb&lt;/a&gt; (summary)&lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch02/01_main-chapter-code/exercise-solutions.ipynb"&gt;exercise-solutions.ipynb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch02"&gt;./ch02&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ch 3: Coding Attention Mechanisms&lt;/td&gt; 
   &lt;td&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch03/01_main-chapter-code/ch03.ipynb"&gt;ch03.ipynb&lt;/a&gt;&lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch03/01_main-chapter-code/multihead-attention.ipynb"&gt;multihead-attention.ipynb&lt;/a&gt; (summary) &lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch03/01_main-chapter-code/exercise-solutions.ipynb"&gt;exercise-solutions.ipynb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch03"&gt;./ch03&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ch 4: Implementing a GPT Model from Scratch&lt;/td&gt; 
   &lt;td&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch04/01_main-chapter-code/ch04.ipynb"&gt;ch04.ipynb&lt;/a&gt;&lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch04/01_main-chapter-code/gpt.py"&gt;gpt.py&lt;/a&gt; (summary)&lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch04/01_main-chapter-code/exercise-solutions.ipynb"&gt;exercise-solutions.ipynb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch04"&gt;./ch04&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ch 5: Pretraining on Unlabeled Data&lt;/td&gt; 
   &lt;td&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/01_main-chapter-code/ch05.ipynb"&gt;ch05.ipynb&lt;/a&gt;&lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/01_main-chapter-code/gpt_train.py"&gt;gpt_train.py&lt;/a&gt; (summary) &lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/01_main-chapter-code/gpt_generate.py"&gt;gpt_generate.py&lt;/a&gt; (summary) &lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/01_main-chapter-code/exercise-solutions.ipynb"&gt;exercise-solutions.ipynb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05"&gt;./ch05&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ch 6: Finetuning for Text Classification&lt;/td&gt; 
   &lt;td&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch06/01_main-chapter-code/ch06.ipynb"&gt;ch06.ipynb&lt;/a&gt; &lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch06/01_main-chapter-code/gpt_class_finetune.py"&gt;gpt_class_finetune.py&lt;/a&gt; &lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch06/01_main-chapter-code/exercise-solutions.ipynb"&gt;exercise-solutions.ipynb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch06"&gt;./ch06&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ch 7: Finetuning to Follow Instructions&lt;/td&gt; 
   &lt;td&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch07/01_main-chapter-code/ch07.ipynb"&gt;ch07.ipynb&lt;/a&gt;&lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch07/01_main-chapter-code/gpt_instruction_finetuning.py"&gt;gpt_instruction_finetuning.py&lt;/a&gt; (summary)&lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch07/01_main-chapter-code/ollama_evaluate.py"&gt;ollama_evaluate.py&lt;/a&gt; (summary)&lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch07/01_main-chapter-code/exercise-solutions.ipynb"&gt;exercise-solutions.ipynb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch07"&gt;./ch07&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Appendix A: Introduction to PyTorch&lt;/td&gt; 
   &lt;td&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-A/01_main-chapter-code/code-part1.ipynb"&gt;code-part1.ipynb&lt;/a&gt;&lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-A/01_main-chapter-code/code-part2.ipynb"&gt;code-part2.ipynb&lt;/a&gt;&lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-A/01_main-chapter-code/DDP-script.py"&gt;DDP-script.py&lt;/a&gt;&lt;br /&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-A/01_main-chapter-code/exercise-solutions.ipynb"&gt;exercise-solutions.ipynb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-A"&gt;./appendix-A&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Appendix B: References and Further Reading&lt;/td&gt; 
   &lt;td&gt;No code&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Appendix C: Exercise Solutions&lt;/td&gt; 
   &lt;td&gt;No code&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Appendix D: Adding Bells and Whistles to the Training Loop&lt;/td&gt; 
   &lt;td&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-D/01_main-chapter-code/appendix-D.ipynb"&gt;appendix-D.ipynb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-D"&gt;./appendix-D&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Appendix E: Parameter-efficient Finetuning with LoRA&lt;/td&gt; 
   &lt;td&gt;- &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-E/01_main-chapter-code/appendix-E.ipynb"&gt;appendix-E.ipynb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/appendix-E"&gt;./appendix-E&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; &amp;nbsp; 
&lt;p&gt;The mental model below summarizes the contents covered in this book.&lt;/p&gt; 
&lt;img src="https://sebastianraschka.com/images/LLMs-from-scratch-images/mental-model.jpg" width="650px" /&gt; 
&lt;br /&gt; &amp;nbsp; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;The most important prerequisite is a strong foundation in Python programming. With this knowledge, you will be well prepared to explore the fascinating world of LLMs and understand the concepts and code examples presented in this book.&lt;/p&gt; 
&lt;p&gt;If you have some experience with deep neural networks, you may find certain concepts more familiar, as LLMs are built upon these architectures.&lt;/p&gt; 
&lt;p&gt;This book uses PyTorch to implement the code from scratch without using any external LLM libraries. While proficiency in PyTorch is not a prerequisite, familiarity with PyTorch basics is certainly useful. If you are new to PyTorch, Appendix A provides a concise introduction to PyTorch. Alternatively, you may find my book, &lt;a href="https://sebastianraschka.com/teaching/pytorch-1h/"&gt;PyTorch in One Hour: From Tensors to Training Neural Networks on Multiple GPUs&lt;/a&gt;, helpful for learning about the essentials.&lt;/p&gt; 
&lt;br /&gt; &amp;nbsp; 
&lt;h2&gt;Hardware Requirements&lt;/h2&gt; 
&lt;p&gt;The code in the main chapters of this book is designed to run on conventional laptops within a reasonable timeframe and does not require specialized hardware. This approach ensures that a wide audience can engage with the material. Additionally, the code automatically utilizes GPUs if they are available. (Please see the &lt;a href="https://github.com/rasbt/LLMs-from-scratch/raw/main/setup/README.md"&gt;setup&lt;/a&gt; doc for additional recommendations.)&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;Video Course&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.manning.com/livevideo/master-and-build-large-language-models"&gt;A 17-hour and 15-minute companion video course&lt;/a&gt; where I code through each chapter of the book. The course is organized into chapters and sections that mirror the book's structure so that it can be used as a standalone alternative to the book or complementary code-along resource.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.manning.com/livevideo/master-and-build-large-language-models"&gt;&lt;img src="https://sebastianraschka.com/images/LLMs-from-scratch-images/video-screenshot.webp?123" width="350px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;Companion Book / Sequel&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://mng.bz/lZ5B"&gt;&lt;em&gt;Build A Reasoning Model (From Scratch)&lt;/em&gt;&lt;/a&gt;, while a standalone book, can be considered as a sequel to &lt;em&gt;Build A Large Language Model (From Scratch)&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;It starts with a pretrained model and implements different reasoning approaches, including inference-time scaling, reinforcement learning, and distillation, to improve the model's reasoning capabilities.&lt;/p&gt; 
&lt;p&gt;Similar to &lt;em&gt;Build A Large Language Model (From Scratch)&lt;/em&gt;, &lt;a href="https://mng.bz/lZ5B"&gt;&lt;em&gt;Build A Reasoning Model (From Scratch)&lt;/em&gt;&lt;/a&gt; takes a hands-on approach implementing these methods from scratch.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://mng.bz/lZ5B"&gt;&lt;img src="https://sebastianraschka.com/images/reasoning-from-scratch-images/cover.webp?123" width="120px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Amazon link (TBD)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mng.bz/lZ5B"&gt;Manning link&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rasbt/reasoning-from-scratch"&gt;GitHub repository&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;Exercises&lt;/h2&gt; 
&lt;p&gt;Each chapter of the book includes several exercises. The solutions are summarized in Appendix C, and the corresponding code notebooks are available in the main chapter folders of this repository (for example, &lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch02/01_main-chapter-code/exercise-solutions.ipynb"&gt;./ch02/01_main-chapter-code/exercise-solutions.ipynb&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In addition to the code exercises, you can download a free 170-page PDF titled &lt;a href="https://www.manning.com/books/test-yourself-on-build-a-large-language-model-from-scratch"&gt;Test Yourself On Build a Large Language Model (From Scratch)&lt;/a&gt; from the Manning website. It contains approximately 30 quiz questions and solutions per chapter to help you test your understanding.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.manning.com/books/test-yourself-on-build-a-large-language-model-from-scratch"&gt;&lt;img src="https://sebastianraschka.com/images/LLMs-from-scratch-images/test-yourself-cover.jpg?123" width="150px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;Bonus Material&lt;/h2&gt; 
&lt;p&gt;Several folders contain optional materials as a bonus for interested readers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Setup&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/setup/01_optional-python-setup-preferences"&gt;Python Setup Tips&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/setup/02_installing-python-libraries"&gt;Installing Python Packages and Libraries Used In This Book&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/setup/03_optional-docker-environment"&gt;Docker Environment Setup Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 2: Working with text data&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch02/05_bpe-from-scratch/bpe-from-scratch.ipynb"&gt;Byte Pair Encoding (BPE) Tokenizer From Scratch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch02/02_bonus_bytepair-encoder"&gt;Comparing Various Byte Pair Encoding (BPE) Implementations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch02/03_bonus_embedding-vs-matmul"&gt;Understanding the Difference Between Embedding Layers and Linear Layers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch02/04_bonus_dataloader-intuition"&gt;Dataloader Intuition with Simple Numbers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 3: Coding attention mechanisms&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch03/02_bonus_efficient-multihead-attention/mha-implementations.ipynb"&gt;Comparing Efficient Multi-Head Attention Implementations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch03/03_understanding-buffers/understanding-buffers.ipynb"&gt;Understanding PyTorch Buffers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 4: Implementing a GPT model from scratch&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch04/02_performance-analysis/flops-analysis.ipynb"&gt;FLOPS Analysis&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch04/03_kv-cache"&gt;KV Cache&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 5: Pretraining on unlabeled data:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/02_alternative_weight_loading/"&gt;Alternative Weight Loading Methods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/03_bonus_pretraining_on_gutenberg"&gt;Pretraining GPT on the Project Gutenberg Dataset&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/04_learning_rate_schedulers"&gt;Adding Bells and Whistles to the Training Loop&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/05_bonus_hparam_tuning"&gt;Optimizing Hyperparameters for Pretraining&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/06_user_interface"&gt;Building a User Interface to Interact With the Pretrained LLM&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/07_gpt_to_llama"&gt;Converting GPT to Llama&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/07_gpt_to_llama/standalone-llama32.ipynb"&gt;Llama 3.2 From Scratch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/11_qwen3/"&gt;Qwen3 Dense and Mixture-of-Experts (MoE) From Scratch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/12_gemma3/"&gt;Gemma 3 From Scratch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/08_memory_efficient_weight_loading/memory-efficient-state-dict.ipynb"&gt;Memory-efficient Model Weight Loading&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/09_extending-tokenizers/extend-tiktoken.ipynb"&gt;Extending the Tiktoken BPE Tokenizer with New Tokens&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch05/10_llm-training-speed"&gt;PyTorch Performance Tips for Faster LLM Training&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 6: Finetuning for classification&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch06/02_bonus_additional-experiments"&gt;Additional experiments finetuning different layers and using larger models&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch06/03_bonus_imdb-classification"&gt;Finetuning different models on 50k IMDb movie review dataset&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch06/04_user_interface"&gt;Building a User Interface to Interact With the GPT-based Spam Classifier&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chapter 7: Finetuning to follow instructions&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch07/02_dataset-utilities"&gt;Dataset Utilities for Finding Near Duplicates and Creating Passive Voice Entries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch07/03_model-evaluation"&gt;Evaluating Instruction Responses Using the OpenAI API and Ollama&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch07/05_dataset-generation/llama3-ollama.ipynb"&gt;Generating a Dataset for Instruction Finetuning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch07/05_dataset-generation/reflection-gpt4.ipynb"&gt;Improving a Dataset for Instruction Finetuning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch07/04_preference-tuning-with-dpo/create-preference-data-ollama.ipynb"&gt;Generating a Preference Dataset with Llama 3.1 70B and Ollama&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch07/04_preference-tuning-with-dpo/dpo-from-scratch.ipynb"&gt;Direct Preference Optimization (DPO) for LLM Alignment&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rasbt/LLMs-from-scratch/main/ch07/06_user_interface"&gt;Building a User Interface to Interact With the Instruction Finetuned GPT Model&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; &amp;nbsp; 
&lt;h2&gt;Questions, Feedback, and Contributing to This Repository&lt;/h2&gt; 
&lt;p&gt;I welcome all sorts of feedback, best shared via the &lt;a href="https://livebook.manning.com/forum?product=raschka&amp;amp;page=1"&gt;Manning Forum&lt;/a&gt; or &lt;a href="https://github.com/rasbt/LLMs-from-scratch/discussions"&gt;GitHub Discussions&lt;/a&gt;. Likewise, if you have any questions or just want to bounce ideas off others, please don't hesitate to post these in the forum as well.&lt;/p&gt; 
&lt;p&gt;Please note that since this repository contains the code corresponding to a print book, I currently cannot accept contributions that would extend the contents of the main chapter code, as it would introduce deviations from the physical book. Keeping it consistent helps ensure a smooth experience for everyone.&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If you find this book or code useful for your research, please consider citing it.&lt;/p&gt; 
&lt;p&gt;Chicago-style citation:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Raschka, Sebastian. &lt;em&gt;Build A Large Language Model (From Scratch)&lt;/em&gt;. Manning, 2024. ISBN: 978-1633437166.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;BibTeX entry:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@book{build-llms-from-scratch-book,
  author       = {Sebastian Raschka},
  title        = {Build A Large Language Model (From Scratch)},
  publisher    = {Manning},
  year         = {2024},
  isbn         = {978-1633437166},
  url          = {https://www.manning.com/books/build-a-large-language-model-from-scratch},
  github       = {https://github.com/rasbt/LLMs-from-scratch}
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ml-explore/mlx-lm</title>
      <link>https://github.com/ml-explore/mlx-lm</link>
      <description>&lt;p&gt;Run LLMs with MLX&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;MLX LM&lt;/h2&gt; 
&lt;p&gt;MLX LM is a Python package for generating text and fine-tuning large language models on Apple silicon with MLX.&lt;/p&gt; 
&lt;p&gt;Some key features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integration with the Hugging Face Hub to easily use thousands of LLMs with a single command.&lt;/li&gt; 
 &lt;li&gt;Support for quantizing and uploading models to the Hugging Face Hub.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ml-explore/mlx-lm/raw/main/mlx_lm/LORA.md"&gt;Low-rank and full model fine-tuning&lt;/a&gt; with support for quantized models.&lt;/li&gt; 
 &lt;li&gt;Distributed inference and fine-tuning with &lt;code&gt;mx.distributed&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The easiest way to get started is to install the &lt;code&gt;mlx-lm&lt;/code&gt; package:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;With &lt;code&gt;pip&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pip install mlx-lm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;With &lt;code&gt;conda&lt;/code&gt;&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;conda install -c conda-forge mlx-lm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;p&gt;To generate text with an LLM use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mlx_lm.generate --prompt "How tall is Mt Everest?"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To chat with an LLM use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mlx_lm.chat
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will give you a chat REPL that you can use to interact with the LLM. The chat context is preserved during the lifetime of the REPL.&lt;/p&gt; 
&lt;p&gt;Commands in &lt;code&gt;mlx-lm&lt;/code&gt; typically take command line options which let you specify the model, sampling parameters, and more. Use &lt;code&gt;-h&lt;/code&gt; to see a list of available options for a command, e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mlx_lm.generate -h
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The default model for generation and chat is &lt;code&gt;mlx-community/Llama-3.2-3B-Instruct-4bit&lt;/code&gt;. You can specify any MLX-compatible model with the &lt;code&gt;--model&lt;/code&gt; flag. Thousands are available in the &lt;a href="https://huggingface.co/mlx-community"&gt;MLX Community&lt;/a&gt; Hugging Face organization.&lt;/p&gt; 
&lt;h3&gt;Python API&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;mlx-lm&lt;/code&gt; as a module:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from mlx_lm import load, generate

model, tokenizer = load("mlx-community/Mistral-7B-Instruct-v0.3-4bit")

prompt = "Write a story about Einstein"

messages = [{"role": "user", "content": prompt}]
prompt = tokenizer.apply_chat_template(
    messages, add_generation_prompt=True
)

text = generate(model, tokenizer, prompt=prompt, verbose=True)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To see a description of all the arguments you can do:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; help(generate)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check out the &lt;a href="https://github.com/ml-explore/mlx-lm/tree/main/mlx_lm/examples/generate_response.py"&gt;generation example&lt;/a&gt; to see how to use the API in more detail. Check out the &lt;a href="https://github.com/ml-explore/mlx-lm/tree/main/mlx_lm/examples/batch_generate_response.py"&gt;batch generation example&lt;/a&gt; to see how to efficiently generate continuations for a batch of prompts.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;mlx-lm&lt;/code&gt; package also comes with functionality to quantize and optionally upload models to the Hugging Face Hub.&lt;/p&gt; 
&lt;p&gt;You can convert models using the Python API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from mlx_lm import convert

repo = "mistralai/Mistral-7B-Instruct-v0.3"
upload_repo = "mlx-community/My-Mistral-7B-Instruct-v0.3-4bit"

convert(repo, quantize=True, upload_repo=upload_repo)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will generate a 4-bit quantized Mistral 7B and upload it to the repo &lt;code&gt;mlx-community/My-Mistral-7B-Instruct-v0.3-4bit&lt;/code&gt;. It will also save the converted model in the path &lt;code&gt;mlx_model&lt;/code&gt; by default.&lt;/p&gt; 
&lt;p&gt;To see a description of all the arguments you can do:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; help(convert)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Streaming&lt;/h4&gt; 
&lt;p&gt;For streaming generation, use the &lt;code&gt;stream_generate&lt;/code&gt; function. This yields a generation response object.&lt;/p&gt; 
&lt;p&gt;For example,&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from mlx_lm import load, stream_generate

repo = "mlx-community/Mistral-7B-Instruct-v0.3-4bit"
model, tokenizer = load(repo)

prompt = "Write a story about Einstein"

messages = [{"role": "user", "content": prompt}]
prompt = tokenizer.apply_chat_template(
    messages, add_generation_prompt=True
)

for response in stream_generate(model, tokenizer, prompt, max_tokens=512):
    print(response.text, end="", flush=True)
print()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Sampling&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;generate&lt;/code&gt; and &lt;code&gt;stream_generate&lt;/code&gt; functions accept &lt;code&gt;sampler&lt;/code&gt; and &lt;code&gt;logits_processors&lt;/code&gt; keyword arguments. A sampler is any callable which accepts a possibly batched logits array and returns an array of sampled tokens. The &lt;code&gt;logits_processors&lt;/code&gt; must be a list of callables which take the token history and current logits as input and return the processed logits. The logits processors are applied in order.&lt;/p&gt; 
&lt;p&gt;Some standard sampling functions and logits processors are provided in &lt;code&gt;mlx_lm.sample_utils&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Command Line&lt;/h3&gt; 
&lt;p&gt;You can also use &lt;code&gt;mlx-lm&lt;/code&gt; from the command line with:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mlx_lm.generate --model mistralai/Mistral-7B-Instruct-v0.3 --prompt "hello"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will download a Mistral 7B model from the Hugging Face Hub and generate text using the given prompt.&lt;/p&gt; 
&lt;p&gt;For a full list of options run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mlx_lm.generate --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To quantize a model from the command line run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mlx_lm.convert --hf-path mistralai/Mistral-7B-Instruct-v0.3 -q
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more options run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mlx_lm.convert --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can upload new models to Hugging Face by specifying &lt;code&gt;--upload-repo&lt;/code&gt; to &lt;code&gt;convert&lt;/code&gt;. For example, to upload a quantized Mistral-7B model to the &lt;a href="https://huggingface.co/mlx-community"&gt;MLX Hugging Face community&lt;/a&gt; you can do:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mlx_lm.convert \
    --hf-path mistralai/Mistral-7B-Instruct-v0.3 \
    -q \
    --upload-repo mlx-community/my-4bit-mistral
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Models can also be converted and quantized directly in the &lt;a href="https://huggingface.co/spaces/mlx-community/mlx-my-repo"&gt;mlx-my-repo&lt;/a&gt; Hugging Face Space.&lt;/p&gt; 
&lt;h3&gt;Long Prompts and Generations&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;mlx-lm&lt;/code&gt; has some tools to scale efficiently to long prompts and generations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A rotating fixed-size key-value cache.&lt;/li&gt; 
 &lt;li&gt;Prompt caching&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To use the rotating key-value cache pass the argument &lt;code&gt;--max-kv-size n&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; can be any integer. Smaller values like &lt;code&gt;512&lt;/code&gt; will use very little RAM but result in worse quality. Larger values like &lt;code&gt;4096&lt;/code&gt; or higher will use more RAM but have better quality.&lt;/p&gt; 
&lt;p&gt;Caching prompts can substantially speedup reusing the same long context with different queries. To cache a prompt use &lt;code&gt;mlx_lm.cache_prompt&lt;/code&gt;. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cat prompt.txt | mlx_lm.cache_prompt \
  --model mistralai/Mistral-7B-Instruct-v0.3 \
  --prompt - \
  --prompt-cache-file mistral_prompt.safetensors
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then use the cached prompt with &lt;code&gt;mlx_lm.generate&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mlx_lm.generate \
    --prompt-cache-file mistral_prompt.safetensors \
    --prompt "\nSummarize the above text."
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The cached prompt is treated as a prefix to the supplied prompt. Also notice when using a cached prompt, the model to use is read from the cache and need not be supplied explicitly.&lt;/p&gt; 
&lt;p&gt;Prompt caching can also be used in the Python API in order to avoid recomputing the prompt. This is useful in multi-turn dialogues or across requests that use the same context. See the &lt;a href="https://github.com/ml-explore/mlx-lm/raw/main/mlx_lm/examples/chat.py"&gt;example&lt;/a&gt; for more usage details.&lt;/p&gt; 
&lt;h3&gt;Supported Models&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;mlx-lm&lt;/code&gt; supports thousands of Hugging Face format LLMs. If the model you want to run is not supported, file an &lt;a href="https://github.com/ml-explore/mlx-lm/issues/new"&gt;issue&lt;/a&gt; or better yet, submit a pull request.&lt;/p&gt; 
&lt;p&gt;Here are a few examples of Hugging Face models that work with this example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://huggingface.co/mistralai/Mistral-7B-v0.1"&gt;mistralai/Mistral-7B-v0.1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://huggingface.co/meta-llama/Llama-2-7b-hf"&gt;meta-llama/Llama-2-7b-hf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://huggingface.co/deepseek-ai/deepseek-coder-6.7b-instruct"&gt;deepseek-ai/deepseek-coder-6.7b-instruct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://huggingface.co/01-ai/Yi-6B-Chat"&gt;01-ai/Yi-6B-Chat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://huggingface.co/microsoft/phi-2"&gt;microsoft/phi-2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://huggingface.co/mistralai/Mixtral-8x7B-Instruct-v0.1"&gt;mistralai/Mixtral-8x7B-Instruct-v0.1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://huggingface.co/Qwen/Qwen-7B"&gt;Qwen/Qwen-7B&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://huggingface.co/pfnet/plamo-13b"&gt;pfnet/plamo-13b&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://huggingface.co/pfnet/plamo-13b-instruct"&gt;pfnet/plamo-13b-instruct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://huggingface.co/stabilityai/stablelm-2-zephyr-1_6b"&gt;stabilityai/stablelm-2-zephyr-1_6b&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://huggingface.co/internlm/internlm2-7b"&gt;internlm/internlm2-7b&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://huggingface.co/tiiuae/falcon-mamba-7b-instruct"&gt;tiiuae/falcon-mamba-7b-instruct&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Most &lt;a href="https://huggingface.co/models?library=transformers,safetensors&amp;amp;other=mistral&amp;amp;sort=trending"&gt;Mistral&lt;/a&gt;, &lt;a href="https://huggingface.co/models?library=transformers,safetensors&amp;amp;other=llama&amp;amp;sort=trending"&gt;Llama&lt;/a&gt;, &lt;a href="https://huggingface.co/models?library=transformers,safetensors&amp;amp;other=phi&amp;amp;sort=trending"&gt;Phi-2&lt;/a&gt;, and &lt;a href="https://huggingface.co/models?library=transformers,safetensors&amp;amp;other=mixtral&amp;amp;sort=trending"&gt;Mixtral&lt;/a&gt; style models should work out of the box.&lt;/p&gt; 
&lt;p&gt;For some models (such as &lt;code&gt;Qwen&lt;/code&gt; and &lt;code&gt;plamo&lt;/code&gt;) the tokenizer requires you to enable the &lt;code&gt;trust_remote_code&lt;/code&gt; option. You can do this by passing &lt;code&gt;--trust-remote-code&lt;/code&gt; in the command line. If you don't specify the flag explicitly, you will be prompted to trust remote code in the terminal when running the model.&lt;/p&gt; 
&lt;p&gt;For &lt;code&gt;Qwen&lt;/code&gt; models you must also specify the &lt;code&gt;eos_token&lt;/code&gt;. You can do this by passing &lt;code&gt;--eos-token "&amp;lt;|endoftext|&amp;gt;"&lt;/code&gt; in the command line.&lt;/p&gt; 
&lt;p&gt;These options can also be set in the Python API. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;model, tokenizer = load(
    "qwen/Qwen-7B",
    tokenizer_config={"eos_token": "&amp;lt;|endoftext|&amp;gt;", "trust_remote_code": True},
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Large Models&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This requires macOS 15.0 or higher to work.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Models which are large relative to the total RAM available on the machine can be slow. &lt;code&gt;mlx-lm&lt;/code&gt; will attempt to make them faster by wiring the memory occupied by the model and cache. This requires macOS 15 or higher to work.&lt;/p&gt; 
&lt;p&gt;If you see the following warning message:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[WARNING] Generating with a model that requires ...&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;then the model will likely be slow on the given machine. If the model fits in RAM then it can often be sped up by increasing the system wired memory limit. To increase the limit, set the following &lt;code&gt;sysctl&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo sysctl iogpu.wired_limit_mb=N
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The value &lt;code&gt;N&lt;/code&gt; should be larger than the size of the model in megabytes but smaller than the memory size of the machine.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CorentinJ/Real-Time-Voice-Cloning</title>
      <link>https://github.com/CorentinJ/Real-Time-Voice-Cloning</link>
      <description>&lt;p&gt;Clone a voice in 5 seconds to generate arbitrary speech in real-time&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Real-Time Voice Cloning&lt;/h1&gt; 
&lt;p&gt;This repository is an implementation of &lt;a href="https://arxiv.org/pdf/1806.04558.pdf"&gt;Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis&lt;/a&gt; (SV2TTS) with a vocoder that works in real-time. This was my &lt;a href="https://matheo.uliege.be/handle/2268.2/6801"&gt;master's thesis&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;SV2TTS is a deep learning framework in three stages. In the first stage, one creates a digital representation of a voice from a few seconds of audio. In the second and third stages, this representation is used as reference to generate speech given arbitrary text.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Video demonstration&lt;/strong&gt; (click the picture):&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=-O_hYhToKoA"&gt;&lt;img src="https://i.imgur.com/8lFUlgz.png" alt="Toolbox demo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Papers implemented&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;URL&lt;/th&gt; 
   &lt;th&gt;Designation&lt;/th&gt; 
   &lt;th&gt;Title&lt;/th&gt; 
   &lt;th&gt;Implementation source&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://arxiv.org/pdf/1806.04558.pdf"&gt;&lt;strong&gt;1806.04558&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;SV2TTS&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;This repo&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://arxiv.org/pdf/1802.08435.pdf"&gt;1802.08435&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;WaveRNN (vocoder)&lt;/td&gt; 
   &lt;td&gt;Efficient Neural Audio Synthesis&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/fatchord/WaveRNN"&gt;fatchord/WaveRNN&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://arxiv.org/pdf/1703.10135.pdf"&gt;1703.10135&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Tacotron (synthesizer)&lt;/td&gt; 
   &lt;td&gt;Tacotron: Towards End-to-End Speech Synthesis&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/fatchord/WaveRNN"&gt;fatchord/WaveRNN&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://arxiv.org/pdf/1710.10467.pdf"&gt;1710.10467&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;GE2E (encoder)&lt;/td&gt; 
   &lt;td&gt;Generalized End-To-End Loss for Speaker Verification&lt;/td&gt; 
   &lt;td&gt;This repo&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Heads up&lt;/h2&gt; 
&lt;p&gt;Like everything else in Deep Learning, this repo has quickly gotten old. Many SaaS apps (often paying) will give you a better audio quality than this repository will. If you wish for an open-source solution with a high voice quality:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out &lt;a href="https://paperswithcode.com/task/speech-synthesis/"&gt;paperswithcode&lt;/a&gt; for other repositories and recent research in the field of speech synthesis.&lt;/li&gt; 
 &lt;li&gt;Check out &lt;a href="https://github.com/resemble-ai/chatterbox"&gt;Chatterbox&lt;/a&gt; for a similar project up to date with the 2025 SOTA in voice cloning&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;h3&gt;1. Install Requirements&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Both Windows and Linux are supported. A GPU is recommended for training and for inference speed, but is not mandatory.&lt;/li&gt; 
 &lt;li&gt;Python 3.7 is recommended. Python 3.5 or greater should work, but you'll probably have to tweak the dependencies' versions. I recommend setting up a virtual environment using &lt;code&gt;venv&lt;/code&gt;, but this is optional.&lt;/li&gt; 
 &lt;li&gt;Install &lt;a href="https://ffmpeg.org/download.html#get-packages"&gt;ffmpeg&lt;/a&gt;. This is necessary for reading audio files.&lt;/li&gt; 
 &lt;li&gt;Install &lt;a href="https://pytorch.org/get-started/locally/"&gt;PyTorch&lt;/a&gt;. Pick the latest stable version, your operating system, your package manager (pip by default) and finally pick any of the proposed CUDA versions if you have a GPU, otherwise pick CPU. Run the given command.&lt;/li&gt; 
 &lt;li&gt;Install the remaining requirements with &lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;2. (Optional) Download Pretrained Models&lt;/h3&gt; 
&lt;p&gt;Pretrained models are now downloaded automatically. If this doesn't work for you, you can manually download them &lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/wiki/Pretrained-models"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;3. (Optional) Test Configuration&lt;/h3&gt; 
&lt;p&gt;Before you download any dataset, you can begin by testing your configuration with:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;python demo_cli.py&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If all tests pass, you're good to go.&lt;/p&gt; 
&lt;h3&gt;4. (Optional) Download Datasets&lt;/h3&gt; 
&lt;p&gt;For playing with the toolbox alone, I only recommend downloading &lt;a href="https://www.openslr.org/resources/12/train-clean-100.tar.gz"&gt;&lt;code&gt;LibriSpeech/train-clean-100&lt;/code&gt;&lt;/a&gt;. Extract the contents as &lt;code&gt;&amp;lt;datasets_root&amp;gt;/LibriSpeech/train-clean-100&lt;/code&gt; where &lt;code&gt;&amp;lt;datasets_root&amp;gt;&lt;/code&gt; is a directory of your choosing. Other datasets are supported in the toolbox, see &lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/wiki/Training#datasets"&gt;here&lt;/a&gt;. You're free not to download any dataset, but then you will need your own data as audio files or you will have to record it with the toolbox.&lt;/p&gt; 
&lt;h3&gt;5. Launch the Toolbox&lt;/h3&gt; 
&lt;p&gt;You can then try the toolbox:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;python demo_toolbox.py -d &amp;lt;datasets_root&amp;gt;&lt;/code&gt;&lt;br /&gt; or&lt;br /&gt; &lt;code&gt;python demo_toolbox.py&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;depending on whether you downloaded any datasets. If you are running an X-server or if you have the error &lt;code&gt;Aborted (core dumped)&lt;/code&gt;, see &lt;a href="https://github.com/CorentinJ/Real-Time-Voice-Cloning/issues/11#issuecomment-504733590"&gt;this issue&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>x1xhlol/system-prompts-and-models-of-ai-tools</title>
      <link>https://github.com/x1xhlol/system-prompts-and-models-of-ai-tools</link>
      <description>&lt;p&gt;FULL Augment Code, Claude Code, Cluely, CodeBuddy, Cursor, Devin AI, Junie, Kiro, Leap.new, Lovable, Manus Agent Tools, NotionAI, Orchids.app, Perplexity, Poke, Qoder, Replit, Same.dev, Trae, Traycer AI, VSCode Agent, Warp.dev, Windsurf, Xcode, Z.ai Code, dia &amp; v0. (And other Open Sourced) System Prompts, Internal Tools &amp; AI Models&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;strong&gt;System Prompts and Models of AI Tools&lt;/strong&gt;&lt;/h1&gt; 
&lt;hr /&gt; 
&lt;a href="https://discord.gg/NwzrWErdMU" target="_blank"&gt; &lt;img src="https://img.shields.io/discord/1402660735833604126?label=LeaksLab%20Discord&amp;amp;logo=discord&amp;amp;style=for-the-badge" alt="LeaksLab Discord" /&gt; &lt;/a&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Join the Conversation:&lt;/strong&gt; New system instructions are released on Discord &lt;strong&gt;before&lt;/strong&gt; they appear in this repository. Get early access and discuss them in real time.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://trendshift.io/repositories/14084" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/14084" alt="x1xhlol%2Fsystem-prompts-and-models-of-ai-tools | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;📜 Over &lt;strong&gt;20,000+ lines&lt;/strong&gt; of insights into their structure and functionality.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://cloudback.it"&gt;&lt;img src="https://app.cloudback.it/badge/x1xhlol/system-prompts-and-models-of-ai-tools" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/x1xhlol/system-prompts-and-models-of-ai-tools"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;❤️ Support the Project&lt;/h2&gt; 
&lt;p&gt;If you find this collection valuable and appreciate the effort involved in obtaining and sharing these insights, please consider supporting the project. Your contribution helps keep this resource updated and allows for further exploration.&lt;/p&gt; 
&lt;p&gt;You can show your support via:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;PayPal:&lt;/strong&gt; &lt;code&gt;lucknitelol@proton.me&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cryptocurrency:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;BTC:&lt;/strong&gt; &lt;code&gt;bc1q7zldmzjwspnaa48udvelwe6k3fef7xrrhg5625&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;LTC:&lt;/strong&gt; &lt;code&gt;LRWgqwEYDwqau1WeiTs6Mjg85NJ7m3fsdQ&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;ETH:&lt;/strong&gt; &lt;code&gt;0x3f844B2cc3c4b7242964373fB0A41C4fdffB192A&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Patreon:&lt;/strong&gt; &lt;a href="https://patreon.com/lucknite"&gt;https://patreon.com/lucknite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ko-fi:&lt;/strong&gt; &lt;a href="https://ko-fi.com/lucknite"&gt;https://ko-fi.com/lucknite&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🙏 Thank you for your support!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📑 Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/#-table-of-contents"&gt;📑 Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/#-available-files"&gt;📂 Available Files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/#-roadmap--feedback"&gt;🛠 Roadmap &amp;amp; Feedback&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/#-connect-with-me"&gt;🔗 Connect With Me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/#%EF%B8%8F-security-notice-for-ai-startups"&gt;🛡️ Security Notice for AI Startups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/#-star-history"&gt;📊 Star History&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📂 Available Files&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/v0%20Prompts%20and%20Tools/"&gt;&lt;strong&gt;v0&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Manus%20Agent%20Tools%20&amp;amp;%20Prompt/"&gt;&lt;strong&gt;Manus&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Augment%20Code/"&gt;&lt;strong&gt;Augment Code&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Lovable/"&gt;&lt;strong&gt;Lovable&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Devin%20AI/"&gt;&lt;strong&gt;Devin&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Same.dev/"&gt;&lt;strong&gt;Same.dev&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Replit/"&gt;&lt;strong&gt;Replit&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Windsurf/"&gt;&lt;strong&gt;Windsurf Agent&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/VSCode%20Agent/"&gt;&lt;strong&gt;VSCode (Copilot) Agent&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Cursor%20Prompts/"&gt;&lt;strong&gt;Cursor&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/dia/"&gt;&lt;strong&gt;Dia&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Trae/"&gt;&lt;strong&gt;Trae AI&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Perplexity/"&gt;&lt;strong&gt;Perplexity&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Cluely/"&gt;&lt;strong&gt;Cluely&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Xcode/"&gt;&lt;strong&gt;Xcode&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Leap.new/"&gt;&lt;strong&gt;Leap.new&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/NotionAi/"&gt;&lt;strong&gt;Notion AI&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Orchids.app/"&gt;&lt;strong&gt;Orchids.app&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Junie/"&gt;&lt;strong&gt;Junie&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Kiro/"&gt;&lt;strong&gt;Kiro&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Warp.dev/"&gt;&lt;strong&gt;Warp.dev&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Z.ai%20Code/"&gt;&lt;strong&gt;Z.ai Code&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Qoder/"&gt;&lt;strong&gt;Qoder&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Claude%20Code/"&gt;&lt;strong&gt;Claude Code&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Open%20Source%20prompts/"&gt;&lt;strong&gt;Open Source prompts&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Open%20Source%20prompts/Codex%20CLI/"&gt;Codex CLI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Open%20Source%20prompts/Cline/"&gt;Cline&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Open%20Source%20prompts/Bolt/"&gt;Bolt&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Open%20Source%20prompts/RooCode/"&gt;RooCode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Open%20Source%20prompts/Lumo/"&gt;Lumo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Open%20Source%20prompts/Gemini%20CLI/"&gt;Gemini CLI&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/CodeBuddy%20Prompts/"&gt;&lt;strong&gt;CodeBuddy&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/x1xhlol/system-prompts-and-models-of-ai-tools/main/Poke/"&gt;&lt;strong&gt;Poke&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛠 Roadmap &amp;amp; Feedback&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Open an issue.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Latest Update:&lt;/strong&gt; 15/09/2025&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔗 Connect With Me&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;X:&lt;/strong&gt; &lt;a href="https://x.com/NotLucknite"&gt;NotLucknite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Discord&lt;/strong&gt;: &lt;code&gt;x1xh&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛡️ Security Notice for AI Startups&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;Warning:&lt;/strong&gt; If you're an AI startup, make sure your data is secure. Exposed prompts or AI models can easily become a target for hackers.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🔐 &lt;strong&gt;Important:&lt;/strong&gt; Interested in securing your AI systems?&lt;br /&gt; Check out &lt;strong&gt;&lt;a href="https://zeroleaks.io/"&gt;ZeroLeaks&lt;/a&gt;&lt;/strong&gt;, a service designed to help startups &lt;strong&gt;identify and secure&lt;/strong&gt; leaks in system instructions, internal tools, and model configurations. &lt;strong&gt;Get a free AI security audit&lt;/strong&gt; to ensure your AI is protected from vulnerabilities.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;em&gt;The company is mine, this is NOT a 3rd party AD.&lt;/em&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📊 Star History&lt;/h2&gt; 
&lt;a href="https://www.star-history.com/#x1xhlol/system-prompts-and-models-of-ai-tools&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=x1xhlol/system-prompts-and-models-of-ai-tools&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=x1xhlol/system-prompts-and-models-of-ai-tools&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=x1xhlol/system-prompts-and-models-of-ai-tools&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;p&gt;⭐ &lt;strong&gt;Drop a star if you find this useful!&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ItzCrazyKns/Perplexica</title>
      <link>https://github.com/ItzCrazyKns/Perplexica</link>
      <description>&lt;p&gt;Perplexica is an AI-powered search engine. It is an Open source alternative to Perplexity AI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🚀 Perplexica - An AI-powered search engine 🔎 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;div align="center" markdown="1"&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.warp.dev/perplexica"&gt; &lt;img alt="Warp sponsorship" width="400" src="https://github.com/user-attachments/assets/775dd593-9b5f-40f1-bf48-479faff4c27b" /&gt; &lt;/a&gt; 
 &lt;h3&gt;&lt;a href="https://www.warp.dev/perplexica"&gt;Warp, the AI Devtool that lives in your terminal&lt;/a&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;a href="https://www.warp.dev/perplexica"&gt;Available for MacOS, Linux, &amp;amp; Windows&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/26aArMy8tT"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/26aArMy8tT?style=flat" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/.assets/perplexica-screenshot.png?" alt="preview" /&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents 
 &lt;!-- omit in toc --&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#preview"&gt;Preview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#installation"&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#getting-started-with-docker-recommended"&gt;Getting Started with Docker (Recommended)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#non-docker-installation"&gt;Non-Docker Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#ollama-connection-errors"&gt;Ollama Connection Errors&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#using-as-a-search-engine"&gt;Using as a Search Engine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#using-perplexicas-api"&gt;Using Perplexica's API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#expose-perplexica-to-network"&gt;Expose Perplexica to a network&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#one-click-deployment"&gt;One-Click Deployment&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#upcoming-features"&gt;Upcoming Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#support-us"&gt;Support Us&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#donations"&gt;Donations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#contribution"&gt;Contribution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#help-and-support"&gt;Help and Support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Perplexica is an open-source AI-powered searching tool or an AI-powered search engine that goes deep into the internet to find answers. Inspired by Perplexity AI, it's an open-source option that not just searches the web but understands your questions. It uses advanced machine learning algorithms like similarity searching and embeddings to refine results and provides clear answers with sources cited.&lt;/p&gt; 
&lt;p&gt;Using SearxNG to stay current and fully open source, Perplexica ensures you always get the most up-to-date information without compromising your privacy.&lt;/p&gt; 
&lt;p&gt;Want to know more about its architecture and how it works? You can read it &lt;a href="https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/architecture/README.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/.assets/perplexica-preview.gif" alt="video-preview" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Local LLMs&lt;/strong&gt;: You can utilize local LLMs such as Qwen, DeepSeek, Llama, and Mistral.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Two Main Modes:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Copilot Mode:&lt;/strong&gt; (In development) Boosts search by generating different queries to find more relevant internet sources. Like normal search instead of just using the context by SearxNG, it visits the top matches and tries to find relevant sources to the user's query directly from the page.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Normal Mode:&lt;/strong&gt; Processes your query and performs a web search.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Focus Modes:&lt;/strong&gt; Special modes to better answer specific types of questions. Perplexica currently has 6 focus modes: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;All Mode:&lt;/strong&gt; Searches the entire web to find the best results.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Writing Assistant Mode:&lt;/strong&gt; Helpful for writing tasks that do not require searching the web.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Academic Search Mode:&lt;/strong&gt; Finds articles and papers, ideal for academic research.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;YouTube Search Mode:&lt;/strong&gt; Finds YouTube videos based on the search query.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Wolfram Alpha Search Mode:&lt;/strong&gt; Answers queries that need calculations or data analysis using Wolfram Alpha.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Reddit Search Mode:&lt;/strong&gt; Searches Reddit for discussions and opinions related to the query.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Current Information:&lt;/strong&gt; Some search tools might give you outdated info because they use data from crawling bots and convert them into embeddings and store them in a index. Unlike them, Perplexica uses SearxNG, a metasearch engine to get the results and rerank and get the most relevant source out of it, ensuring you always get the latest information without the overhead of daily data updates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API&lt;/strong&gt;: Integrate Perplexica into your existing applications and make use of its capibilities.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It has many more features like image and video search. Some of the planned features are mentioned in &lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#upcoming-features"&gt;upcoming features&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;There are mainly 2 ways of installing Perplexica - With Docker, Without Docker. Using Docker is highly recommended.&lt;/p&gt; 
&lt;h3&gt;Getting Started with Docker (Recommended)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Ensure Docker is installed and running on your system.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the Perplexica repository:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/ItzCrazyKns/Perplexica.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After cloning, navigate to the directory containing the project files.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Rename the &lt;code&gt;sample.config.toml&lt;/code&gt; file to &lt;code&gt;config.toml&lt;/code&gt;. For Docker setups, you need only fill in the following fields:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;OPENAI&lt;/code&gt;: Your OpenAI API key. &lt;strong&gt;You only need to fill this if you wish to use OpenAI's models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;CUSTOM_OPENAI&lt;/code&gt;: Your OpenAI-API-compliant local server URL, model name, and API key. You should run your local server with host set to &lt;code&gt;0.0.0.0&lt;/code&gt;, take note of which port number it is running on, and then use that port number to set &lt;code&gt;API_URL = http://host.docker.internal:PORT_NUMBER&lt;/code&gt;. You must specify the model name, such as &lt;code&gt;MODEL_NAME = "unsloth/DeepSeek-R1-0528-Qwen3-8B-GGUF:Q4_K_XL"&lt;/code&gt;. Finally, set &lt;code&gt;API_KEY&lt;/code&gt; to the appropriate value. If you have not defined an API key, just put anything you want in-between the quotation marks: &lt;code&gt;API_KEY = "whatever-you-want-but-not-blank"&lt;/code&gt; &lt;strong&gt;You only need to configure these settings if you want to use a local OpenAI-compliant server, such as Llama.cpp's &lt;a href="https://github.com/ggml-org/llama.cpp/raw/master/tools/server/README.md"&gt;&lt;code&gt;llama-server&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;OLLAMA&lt;/code&gt;: Your Ollama API URL. You should enter it as &lt;code&gt;http://host.docker.internal:PORT_NUMBER&lt;/code&gt;. If you installed Ollama on port 11434, use &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;. For other ports, adjust accordingly. &lt;strong&gt;You need to fill this if you wish to use Ollama's models instead of OpenAI's&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;GROQ&lt;/code&gt;: Your Groq API key. &lt;strong&gt;You only need to fill this if you wish to use Groq's hosted models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;ANTHROPIC&lt;/code&gt;: Your Anthropic API key. &lt;strong&gt;You only need to fill this if you wish to use Anthropic models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;Gemini&lt;/code&gt;: Your Gemini API key. &lt;strong&gt;You only need to fill this if you wish to use Google's models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;DEEPSEEK&lt;/code&gt;: Your Deepseek API key. &lt;strong&gt;Only needed if you want Deepseek models.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;AIMLAPI&lt;/code&gt;: Your AI/ML API key. &lt;strong&gt;Only needed if you want to use AI/ML API models and embeddings.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can change these after starting Perplexica from the settings dialog.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;SIMILARITY_MEASURE&lt;/code&gt;: The similarity measure to use (This is filled by default; you can leave it as is if you are unsure about it.)&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ensure you are in the directory containing the &lt;code&gt;docker-compose.yaml&lt;/code&gt; file and execute:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Wait a few minutes for the setup to complete. You can access Perplexica at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in your web browser.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: After the containers are built, you can start Perplexica directly from Docker without having to open a terminal.&lt;/p&gt; 
&lt;h3&gt;Non-Docker Installation&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install SearXNG and allow &lt;code&gt;JSON&lt;/code&gt; format in the SearXNG settings.&lt;/li&gt; 
 &lt;li&gt;Clone the repository and rename the &lt;code&gt;sample.config.toml&lt;/code&gt; file to &lt;code&gt;config.toml&lt;/code&gt; in the root directory. Ensure you complete all required fields in this file.&lt;/li&gt; 
 &lt;li&gt;After populating the configuration run &lt;code&gt;npm i&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Install the dependencies and then execute &lt;code&gt;npm run build&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Finally, start the app by running &lt;code&gt;npm run start&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Using Docker is recommended as it simplifies the setup process, especially for managing environment variables and dependencies.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/installation"&gt;installation documentation&lt;/a&gt; for more information like updating, etc.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;h4&gt;Local OpenAI-API-Compliant Servers&lt;/h4&gt; 
&lt;p&gt;If Perplexica tells you that you haven't configured any chat model providers, ensure that:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Your server is running on &lt;code&gt;0.0.0.0&lt;/code&gt; (not &lt;code&gt;127.0.0.1&lt;/code&gt;) and on the same port you put in the API URL.&lt;/li&gt; 
 &lt;li&gt;You have specified the correct model name loaded by your local LLM server.&lt;/li&gt; 
 &lt;li&gt;You have specified the correct API key, or if one is not defined, you have put &lt;em&gt;something&lt;/em&gt; in the API key field and not left it empty.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Ollama Connection Errors&lt;/h4&gt; 
&lt;p&gt;If you're encountering an Ollama connection error, it is likely due to the backend being unable to connect to Ollama's API. To fix this issue you can:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Check your Ollama API URL:&lt;/strong&gt; Ensure that the API URL is correctly set in the settings menu.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Update API URL Based on OS:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Windows:&lt;/strong&gt; Use &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Mac:&lt;/strong&gt; Use &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Linux:&lt;/strong&gt; Use &lt;code&gt;http://&amp;lt;private_ip_of_host&amp;gt;:11434&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;Adjust the port number if you're using a different one.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux Users - Expose Ollama to Network:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Inside &lt;code&gt;/etc/systemd/system/ollama.service&lt;/code&gt;, you need to add &lt;code&gt;Environment="OLLAMA_HOST=0.0.0.0:11434"&lt;/code&gt;. (Change the port number if you are using a different one.) Then reload the systemd manager configuration with &lt;code&gt;systemctl daemon-reload&lt;/code&gt;, and restart Ollama by &lt;code&gt;systemctl restart ollama&lt;/code&gt;. For more information see &lt;a href="https://github.com/ollama/ollama/raw/main/docs/faq.md#setting-environment-variables-on-linux"&gt;Ollama docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Ensure that the port (default is 11434) is not blocked by your firewall.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Using as a Search Engine&lt;/h2&gt; 
&lt;p&gt;If you wish to use Perplexica as an alternative to traditional search engines like Google or Bing, or if you want to add a shortcut for quick access from your browser's search bar, follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open your browser's settings.&lt;/li&gt; 
 &lt;li&gt;Navigate to the 'Search Engines' section.&lt;/li&gt; 
 &lt;li&gt;Add a new site search with the following URL: &lt;code&gt;http://localhost:3000/?q=%s&lt;/code&gt;. Replace &lt;code&gt;localhost&lt;/code&gt; with your IP address or domain name, and &lt;code&gt;3000&lt;/code&gt; with the port number if Perplexica is not hosted locally.&lt;/li&gt; 
 &lt;li&gt;Click the add button. Now, you can use Perplexica directly from your browser's search bar.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Using Perplexica's API&lt;/h2&gt; 
&lt;p&gt;Perplexica also provides an API for developers looking to integrate its powerful search engine into their own applications. You can run searches, use multiple models and get answers to your queries.&lt;/p&gt; 
&lt;p&gt;For more details, check out the full documentation &lt;a href="https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/API/SEARCH.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Expose Perplexica to network&lt;/h2&gt; 
&lt;p&gt;Perplexica runs on Next.js and handles all API requests. It works right away on the same network and stays accessible even with port forwarding.&lt;/p&gt; 
&lt;h2&gt;One-Click Deployment&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://usw.sealos.io/?openapp=system-template%3FtemplateName%3Dperplexica"&gt;&lt;img src="https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg?sanitize=true" alt="Deploy to Sealos" /&gt;&lt;/a&gt; &lt;a href="https://repocloud.io/details/?app_id=267"&gt;&lt;img src="https://d16t0pc4846x52.cloudfront.net/deploylobe.svg?sanitize=true" alt="Deploy to RepoCloud" /&gt;&lt;/a&gt; &lt;a href="https://template.run.claw.cloud/?referralCode=U11MRQ8U9RM4&amp;amp;openapp=system-fastdeploy%3FtemplateName%3Dperplexica"&gt;&lt;img src="https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg?sanitize=true" alt="Run on ClawCloud" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Upcoming Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Add settings page&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Adding support for local LLMs&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; History Saving features&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Introducing various Focus Modes&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Adding API support&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Adding Discover&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Finalizing Copilot Mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support Us&lt;/h2&gt; 
&lt;p&gt;If you find Perplexica useful, consider giving us a star on GitHub. This helps more people discover Perplexica and supports the development of new features. Your support is greatly appreciated.&lt;/p&gt; 
&lt;h3&gt;Donations&lt;/h3&gt; 
&lt;p&gt;We also accept donations to help sustain our project. If you would like to contribute, you can use the following options to donate. Thank you for your support!&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Ethereum&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Address: &lt;code&gt;0xB025a84b2F269570Eb8D4b05DEdaA41D8525B6DD&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Perplexica is built on the idea that AI and large language models should be easy for everyone to use. If you find bugs or have ideas, please share them in via GitHub Issues. For more information on contributing to Perplexica you can read the &lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file to learn more about Perplexica and how you can contribute to it.&lt;/p&gt; 
&lt;h2&gt;Help and Support&lt;/h2&gt; 
&lt;p&gt;If you have any questions or feedback, please feel free to reach out to us. You can create an issue on GitHub or join our Discord server. There, you can connect with other users, share your experiences and reviews, and receive more personalized help. &lt;a href="https://discord.gg/EFwsmQDgAu"&gt;Click here&lt;/a&gt; to join the Discord server. To discuss matters outside of regular support, feel free to contact me on Discord at &lt;code&gt;itzcrazykns&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Thank you for exploring Perplexica, the AI-powered search engine designed to enhance your search experience. We are constantly working to improve Perplexica and expand its capabilities. We value your feedback and contributions which help us make Perplexica even better. Don't forget to check back for updates and new features!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>virattt/ai-hedge-fund</title>
      <link>https://github.com/virattt/ai-hedge-fund</link>
      <description>&lt;p&gt;An AI Hedge Fund Team&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AI Hedge Fund&lt;/h1&gt; 
&lt;p&gt;This is a proof of concept for an AI-powered hedge fund. The goal of this project is to explore the use of AI to make trading decisions. This project is for &lt;strong&gt;educational&lt;/strong&gt; purposes only and is not intended for real trading or investment.&lt;/p&gt; 
&lt;p&gt;This system employs several agents working together:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Aswath Damodaran Agent - The Dean of Valuation, focuses on story, numbers, and disciplined valuation&lt;/li&gt; 
 &lt;li&gt;Ben Graham Agent - The godfather of value investing, only buys hidden gems with a margin of safety&lt;/li&gt; 
 &lt;li&gt;Bill Ackman Agent - An activist investor, takes bold positions and pushes for change&lt;/li&gt; 
 &lt;li&gt;Cathie Wood Agent - The queen of growth investing, believes in the power of innovation and disruption&lt;/li&gt; 
 &lt;li&gt;Charlie Munger Agent - Warren Buffett's partner, only buys wonderful businesses at fair prices&lt;/li&gt; 
 &lt;li&gt;Michael Burry Agent - The Big Short contrarian who hunts for deep value&lt;/li&gt; 
 &lt;li&gt;Mohnish Pabrai Agent - The Dhandho investor, who looks for doubles at low risk&lt;/li&gt; 
 &lt;li&gt;Peter Lynch Agent - Practical investor who seeks "ten-baggers" in everyday businesses&lt;/li&gt; 
 &lt;li&gt;Phil Fisher Agent - Meticulous growth investor who uses deep "scuttlebutt" research&lt;/li&gt; 
 &lt;li&gt;Rakesh Jhunjhunwala Agent - The Big Bull of India&lt;/li&gt; 
 &lt;li&gt;Stanley Druckenmiller Agent - Macro legend who hunts for asymmetric opportunities with growth potential&lt;/li&gt; 
 &lt;li&gt;Warren Buffett Agent - The oracle of Omaha, seeks wonderful companies at a fair price&lt;/li&gt; 
 &lt;li&gt;Valuation Agent - Calculates the intrinsic value of a stock and generates trading signals&lt;/li&gt; 
 &lt;li&gt;Sentiment Agent - Analyzes market sentiment and generates trading signals&lt;/li&gt; 
 &lt;li&gt;Fundamentals Agent - Analyzes fundamental data and generates trading signals&lt;/li&gt; 
 &lt;li&gt;Technicals Agent - Analyzes technical indicators and generates trading signals&lt;/li&gt; 
 &lt;li&gt;Risk Manager - Calculates risk metrics and sets position limits&lt;/li&gt; 
 &lt;li&gt;Portfolio Manager - Makes final trading decisions and generates orders&lt;/li&gt; 
&lt;/ol&gt; 
&lt;img width="1042" alt="Screenshot 2025-03-22 at 6 19 07 PM" src="https://github.com/user-attachments/assets/cbae3dcf-b571-490d-b0ad-3f0f035ac0d4" /&gt; 
&lt;p&gt;Note: the system does not actually make any trades.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://twitter.com/virattt"&gt;&lt;img src="https://img.shields.io/twitter/follow/virattt?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project is for &lt;strong&gt;educational and research purposes only&lt;/strong&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Not intended for real trading or investment&lt;/li&gt; 
 &lt;li&gt;No investment advice or guarantees provided&lt;/li&gt; 
 &lt;li&gt;Creator assumes no liability for financial losses&lt;/li&gt; 
 &lt;li&gt;Consult a financial advisor for investment decisions&lt;/li&gt; 
 &lt;li&gt;Past performance does not indicate future results&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;By using this software, you agree to use it solely for learning purposes.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/virattt/ai-hedge-fund/main/#how-to-install"&gt;How to Install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/virattt/ai-hedge-fund/main/#how-to-run"&gt;How to Run&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/virattt/ai-hedge-fund/main/#%EF%B8%8F-command-line-interface"&gt;⌨️ Command Line Interface&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/virattt/ai-hedge-fund/main/#%EF%B8%8F-web-application"&gt;🖥️ Web Application&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/virattt/ai-hedge-fund/main/#how-to-contribute"&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/virattt/ai-hedge-fund/main/#feature-requests"&gt;Feature Requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/virattt/ai-hedge-fund/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to Install&lt;/h2&gt; 
&lt;p&gt;Before you can run the AI Hedge Fund, you'll need to install it and set up your API keys. These steps are common to both the full-stack web application and command line interface.&lt;/p&gt; 
&lt;h3&gt;1. Clone the Repository&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/virattt/ai-hedge-fund.git
cd ai-hedge-fund
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. Set up API keys&lt;/h3&gt; 
&lt;p&gt;Create a &lt;code&gt;.env&lt;/code&gt; file for your API keys:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Create .env file for your API keys (in the root directory)
cp .env.example .env
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open and edit the &lt;code&gt;.env&lt;/code&gt; file to add your API keys:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# For running LLMs hosted by openai (gpt-4o, gpt-4o-mini, etc.)
OPENAI_API_KEY=your-openai-api-key

# For getting financial data to power the hedge fund
FINANCIAL_DATASETS_API_KEY=your-financial-datasets-api-key
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: You must set at least one LLM API key (e.g. &lt;code&gt;OPENAI_API_KEY&lt;/code&gt;, &lt;code&gt;GROQ_API_KEY&lt;/code&gt;, &lt;code&gt;ANTHROPIC_API_KEY&lt;/code&gt;, or &lt;code&gt;DEEPSEEK_API_KEY&lt;/code&gt;) for the hedge fund to work.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Financial Data&lt;/strong&gt;: Data for AAPL, GOOGL, MSFT, NVDA, and TSLA is free and does not require an API key. For any other ticker, you will need to set the &lt;code&gt;FINANCIAL_DATASETS_API_KEY&lt;/code&gt; in the .env file.&lt;/p&gt; 
&lt;h2&gt;How to Run&lt;/h2&gt; 
&lt;h3&gt;⌨️ Command Line Interface&lt;/h3&gt; 
&lt;p&gt;You can run the AI Hedge Fund directly via terminal. This approach offers more granular control and is useful for automation, scripting, and integration purposes.&lt;/p&gt; 
&lt;img width="992" alt="Screenshot 2025-01-06 at 5 50 17 PM" src="https://github.com/user-attachments/assets/e8ca04bf-9989-4a7d-a8b4-34e04666663b" /&gt; 
&lt;h4&gt;Quick Start&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Poetry (if not already installed):&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL https://install.python-poetry.org | python3 -
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Install dependencies:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;poetry install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Run the AI Hedge Fund&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;poetry run python src/main.py --ticker AAPL,MSFT,NVDA
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also specify a &lt;code&gt;--ollama&lt;/code&gt; flag to run the AI hedge fund using local LLMs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;poetry run python src/main.py --ticker AAPL,MSFT,NVDA --ollama
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can optionally specify the start and end dates to make decisions over a specific time period.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;poetry run python src/main.py --ticker AAPL,MSFT,NVDA --start-date 2024-01-01 --end-date 2024-03-01
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Run the Backtester&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;poetry run python src/backtester.py --ticker AAPL,MSFT,NVDA
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Example Output:&lt;/strong&gt; &lt;img width="941" alt="Screenshot 2025-01-06 at 5 47 52 PM" src="https://github.com/user-attachments/assets/00e794ea-8628-44e6-9a84-8f8a31ad3b47" /&gt;&lt;/p&gt; 
&lt;p&gt;Note: The &lt;code&gt;--ollama&lt;/code&gt;, &lt;code&gt;--start-date&lt;/code&gt;, and &lt;code&gt;--end-date&lt;/code&gt; flags work for the backtester, as well!&lt;/p&gt; 
&lt;h3&gt;🖥️ Web Application&lt;/h3&gt; 
&lt;p&gt;The new way to run the AI Hedge Fund is through our web application that provides a user-friendly interface. This is recommended for users who prefer visual interfaces over command line tools.&lt;/p&gt; 
&lt;p&gt;Please see detailed instructions on how to install and run the web application &lt;a href="https://github.com/virattt/ai-hedge-fund/tree/main/app"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;img width="1721" alt="Screenshot 2025-06-28 at 6 41 03 PM" src="https://github.com/user-attachments/assets/b95ab696-c9f4-416c-9ad1-51feb1f5374b" /&gt; 
&lt;h2&gt;How to Contribute&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create a feature branch&lt;/li&gt; 
 &lt;li&gt;Commit your changes&lt;/li&gt; 
 &lt;li&gt;Push to the branch&lt;/li&gt; 
 &lt;li&gt;Create a Pull Request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: Please keep your pull requests small and focused. This will make it easier to review and merge.&lt;/p&gt; 
&lt;h2&gt;Feature Requests&lt;/h2&gt; 
&lt;p&gt;If you have a feature request, please open an &lt;a href="https://github.com/virattt/ai-hedge-fund/issues"&gt;issue&lt;/a&gt; and make sure it is tagged with &lt;code&gt;enhancement&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the LICENSE file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Zie619/n8n-workflows</title>
      <link>https://github.com/Zie619/n8n-workflows</link>
      <description>&lt;p&gt;all of the workflows of n8n i could find (also from the site itself)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;⚡ N8N Workflow Collection &amp;amp; Documentation&lt;/h1&gt; 
&lt;p&gt;A professionally organized collection of &lt;strong&gt;2,053 n8n workflows&lt;/strong&gt; with a lightning-fast documentation system that provides instant search, analysis, and browsing capabilities.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚠️ IMPORTANT NOTICE (Aug 14, 2025):&lt;/strong&gt; Repository history has been rewritten due to DMCA compliance. If you have a fork or local clone, please see &lt;a href="https://github.com/Zie619/n8n-workflows/issues"&gt;Issue #X&lt;/a&gt; for instructions on syncing your copy.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Support My Work&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/zie619"&gt;&lt;img src="https://img.shields.io/badge/-Buy%20Me%20a%20Coffee-ffdd00?logo=buy-me-a-coffee&amp;amp;logoColor=black&amp;amp;style=flat" alt="Buy Me a Coffee" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you'd like to say thanks, consider buying me a coffee—your support helps me keep improving this project!&lt;/p&gt; 
&lt;h2&gt;🚀 &lt;strong&gt;NEW: High-Performance Documentation System&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Experience 100x performance improvement over traditional documentation!&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Quick Start - Fast Documentation System&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install dependencies
pip install -r requirements.txt

# Start the fast API server
python run.py

# Open in browser
http://localhost:8000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Sub-100ms response times&lt;/strong&gt; with SQLite FTS5 search&lt;/li&gt; 
 &lt;li&gt;🔍 &lt;strong&gt;Instant full-text search&lt;/strong&gt; with advanced filtering&lt;/li&gt; 
 &lt;li&gt;📱 &lt;strong&gt;Responsive design&lt;/strong&gt; - works perfectly on mobile&lt;/li&gt; 
 &lt;li&gt;🌙 &lt;strong&gt;Dark/light themes&lt;/strong&gt; with system preference detection&lt;/li&gt; 
 &lt;li&gt;📊 &lt;strong&gt;Live statistics&lt;/strong&gt; - 365 unique integrations, 29,445 total nodes&lt;/li&gt; 
 &lt;li&gt;🎯 &lt;strong&gt;Smart categorization&lt;/strong&gt; by trigger type and complexity&lt;/li&gt; 
 &lt;li&gt;🎯 &lt;strong&gt;Use case categorization&lt;/strong&gt; by service name mapped to categories&lt;/li&gt; 
 &lt;li&gt;📄 &lt;strong&gt;On-demand JSON viewing&lt;/strong&gt; and download&lt;/li&gt; 
 &lt;li&gt;🔗 &lt;strong&gt;Mermaid diagram generation&lt;/strong&gt; for workflow visualization&lt;/li&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;Real-time workflow naming&lt;/strong&gt; with intelligent formatting&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Performance Comparison&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Metric&lt;/th&gt; 
   &lt;th&gt;Old System&lt;/th&gt; 
   &lt;th&gt;New System&lt;/th&gt; 
   &lt;th&gt;Improvement&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;File Size&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;71MB HTML&lt;/td&gt; 
   &lt;td&gt;&amp;lt;100KB&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;700x smaller&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Load Time&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;10+ seconds&lt;/td&gt; 
   &lt;td&gt;&amp;lt;1 second&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;10x faster&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Search&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Client-side only&lt;/td&gt; 
   &lt;td&gt;Full-text with FTS5&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Instant&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Memory Usage&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;~2GB RAM&lt;/td&gt; 
   &lt;td&gt;&amp;lt;50MB RAM&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;40x less&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Mobile Support&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Poor&lt;/td&gt; 
   &lt;td&gt;Excellent&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Fully responsive&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📂 Repository Organization&lt;/h2&gt; 
&lt;h3&gt;Workflow Collection&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;2,053 workflows&lt;/strong&gt; with meaningful, searchable names&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;365 unique integrations&lt;/strong&gt; across popular platforms&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;29,445 total nodes&lt;/strong&gt; with professional categorization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Quality assurance&lt;/strong&gt; - All workflows analyzed and categorized&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Naming System ✨&lt;/h3&gt; 
&lt;p&gt;Our intelligent naming system converts technical filenames into readable titles:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Before&lt;/strong&gt;: &lt;code&gt;2051_Telegram_Webhook_Automation_Webhook.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;After&lt;/strong&gt;: &lt;code&gt;Telegram Webhook Automation&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;100% meaningful names&lt;/strong&gt; with smart capitalization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic integration detection&lt;/strong&gt; from node analysis&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Use Case Category ✨&lt;/h3&gt; 
&lt;p&gt;The search interface includes a dropdown filter that lets you browse 2,000+ workflows by category.&lt;/p&gt; 
&lt;p&gt;The system includes an automated categorization feature that organizes workflows by service categories to make them easier to discover and filter.&lt;/p&gt; 
&lt;h3&gt;How Categorization Works&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the categorization script&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;python create_categories.py
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Service Name Recognition&lt;/strong&gt; The script analyzes each workflow JSON filename to identify recognized service names (e.g., "Twilio", "Slack", "Gmail", etc.)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Category Mapping&lt;/strong&gt; Each recognized service name is matched to its corresponding category using the definitions in &lt;code&gt;context/def_categories.json&lt;/code&gt;. For example:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Twilio → Communication &amp;amp; Messaging&lt;/li&gt; 
   &lt;li&gt;Gmail → Communication &amp;amp; Messaging&lt;/li&gt; 
   &lt;li&gt;Airtable → Data Processing &amp;amp; Analysis&lt;/li&gt; 
   &lt;li&gt;Salesforce → CRM &amp;amp; Sales&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Search Categories Generation&lt;/strong&gt; The script produces a &lt;code&gt;search_categories.json&lt;/code&gt; file that contains the categorized workflow data&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Filter Interface&lt;/strong&gt; Users can then filter workflows by category in the search interface, making it easier to find workflows for specific use cases&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Available Categories&lt;/h3&gt; 
&lt;p&gt;The categorization system includes the following main categories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AI Agent Development&lt;/li&gt; 
 &lt;li&gt;Business Process Automation&lt;/li&gt; 
 &lt;li&gt;Cloud Storage &amp;amp; File Management&lt;/li&gt; 
 &lt;li&gt;Communication &amp;amp; Messaging&lt;/li&gt; 
 &lt;li&gt;Creative Content &amp;amp; Video Automation&lt;/li&gt; 
 &lt;li&gt;Creative Design Automation&lt;/li&gt; 
 &lt;li&gt;CRM &amp;amp; Sales&lt;/li&gt; 
 &lt;li&gt;Data Processing &amp;amp; Analysis&lt;/li&gt; 
 &lt;li&gt;E-commerce &amp;amp; Retail&lt;/li&gt; 
 &lt;li&gt;Financial &amp;amp; Accounting&lt;/li&gt; 
 &lt;li&gt;Marketing &amp;amp; Advertising Automation&lt;/li&gt; 
 &lt;li&gt;Project Management&lt;/li&gt; 
 &lt;li&gt;Social Media Management&lt;/li&gt; 
 &lt;li&gt;Technical Infrastructure &amp;amp; DevOps&lt;/li&gt; 
 &lt;li&gt;Web Scraping &amp;amp; Data Extraction&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contribute Categories&lt;/h3&gt; 
&lt;p&gt;You can help expand the categorization by adding more service-to-category mappings (e.g., Twilio → Communication &amp;amp; Messaging) in context/defs_categories.json.&lt;/p&gt; 
&lt;p&gt;Many workflow JSON files are conveniently named with the service name, often separated by underscores (_).&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛠 Usage Instructions&lt;/h2&gt; 
&lt;h3&gt;Option 1: Modern Fast System (Recommended)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone repository
git clone &amp;lt;repo-url&amp;gt;
cd n8n-workflows

# Install Python dependencies
pip install -r requirements.txt

# Start the documentation server
python run.py

# Browse workflows at http://localhost:8000
# - Instant search across 2,053 workflows
# - Professional responsive interface
# - Real-time workflow statistics
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Option 2: Development Mode&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start with auto-reload for development
python run.py --dev

# Or specify custom host/port
python run.py --host 0.0.0.0 --port 3000

# Force database reindexing
python run.py --reindex
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Import Workflows into n8n&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Use the Python importer (recommended)
python import_workflows.py

# Or manually import individual workflows:
# 1. Open your n8n Editor UI
# 2. Click menu (☰) → Import workflow
# 3. Choose any .json file from the workflows/ folder
# 4. Update credentials/webhook URLs before running
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📊 Workflow Statistics&lt;/h2&gt; 
&lt;h3&gt;Current Collection Stats&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Total Workflows&lt;/strong&gt;: 2,053 automation workflows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Active Workflows&lt;/strong&gt;: 215 (10.5% active rate)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Total Nodes&lt;/strong&gt;: 29,445 (avg 14.3 nodes per workflow)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unique Integrations&lt;/strong&gt;: 365 different services and APIs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Database&lt;/strong&gt;: SQLite with FTS5 full-text search&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Trigger Distribution&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Complex&lt;/strong&gt;: 831 workflows (40.5%) - Multi-trigger systems&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Webhook&lt;/strong&gt;: 519 workflows (25.3%) - API-triggered automations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Manual&lt;/strong&gt;: 477 workflows (23.2%) - User-initiated workflows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scheduled&lt;/strong&gt;: 226 workflows (11.0%) - Time-based executions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Complexity Analysis&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Low (≤5 nodes)&lt;/strong&gt;: ~35% - Simple automations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Medium (6-15 nodes)&lt;/strong&gt;: ~45% - Standard workflows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;High (16+ nodes)&lt;/strong&gt;: ~20% - Complex enterprise systems&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Popular Integrations&lt;/h3&gt; 
&lt;p&gt;Top services by usage frequency:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Communication&lt;/strong&gt;: Telegram, Discord, Slack, WhatsApp&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cloud Storage&lt;/strong&gt;: Google Drive, Google Sheets, Dropbox&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Databases&lt;/strong&gt;: PostgreSQL, MySQL, MongoDB, Airtable&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI/ML&lt;/strong&gt;: OpenAI, Anthropic, Hugging Face&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Development&lt;/strong&gt;: HTTP Request, Webhook, GraphQL&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔍 Advanced Search Features&lt;/h2&gt; 
&lt;h3&gt;Smart Search Categories&lt;/h3&gt; 
&lt;p&gt;Our system automatically categorizes workflows into 12 service categories:&lt;/p&gt; 
&lt;h4&gt;Available Categories:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;messaging&lt;/strong&gt;: Telegram, Discord, Slack, WhatsApp, Teams&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ai_ml&lt;/strong&gt;: OpenAI, Anthropic, Hugging Face&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;database&lt;/strong&gt;: PostgreSQL, MySQL, MongoDB, Redis, Airtable&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;email&lt;/strong&gt;: Gmail, Mailjet, Outlook, SMTP/IMAP&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;cloud_storage&lt;/strong&gt;: Google Drive, Google Docs, Dropbox, OneDrive&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;project_management&lt;/strong&gt;: Jira, GitHub, GitLab, Trello, Asana&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;social_media&lt;/strong&gt;: LinkedIn, Twitter/X, Facebook, Instagram&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ecommerce&lt;/strong&gt;: Shopify, Stripe, PayPal&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;analytics&lt;/strong&gt;: Google Analytics, Mixpanel&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;calendar_tasks&lt;/strong&gt;: Google Calendar, Cal.com, Calendly&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;forms&lt;/strong&gt;: Typeform, Google Forms, Form Triggers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;development&lt;/strong&gt;: Webhook, HTTP Request, GraphQL, SSE&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;API Usage Examples&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Search workflows by text
curl "http://localhost:8000/api/workflows?q=telegram+automation"

# Filter by trigger type and complexity
curl "http://localhost:8000/api/workflows?trigger=Webhook&amp;amp;complexity=high"

# Find all messaging workflows
curl "http://localhost:8000/api/workflows/category/messaging"

# Get database statistics
curl "http://localhost:8000/api/stats"

# Browse available categories
curl "http://localhost:8000/api/categories"
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🏗 Technical Architecture&lt;/h2&gt; 
&lt;h3&gt;Modern Stack&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SQLite Database&lt;/strong&gt; - FTS5 full-text search with 365 indexed integrations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;FastAPI Backend&lt;/strong&gt; - RESTful API with automatic OpenAPI documentation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Responsive Frontend&lt;/strong&gt; - Modern HTML5 with embedded CSS/JavaScript&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Smart Analysis&lt;/strong&gt; - Automatic workflow categorization and naming&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Key Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Change Detection&lt;/strong&gt; - MD5 hashing for efficient re-indexing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Background Processing&lt;/strong&gt; - Non-blocking workflow analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Compressed Responses&lt;/strong&gt; - Gzip middleware for optimal speed&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Error Handling&lt;/strong&gt; - Graceful degradation and comprehensive logging&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mobile Optimization&lt;/strong&gt; - Touch-friendly interface design&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database Performance&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;-- Optimized schema for lightning-fast queries
CREATE TABLE workflows (
    id INTEGER PRIMARY KEY,
    filename TEXT UNIQUE,
    name TEXT,
    active BOOLEAN,
    trigger_type TEXT,
    complexity TEXT,
    node_count INTEGER,
    integrations TEXT,  -- JSON array of 365 unique services
    description TEXT,
    file_hash TEXT,     -- MD5 for change detection
    analyzed_at TIMESTAMP
);

-- Full-text search with ranking
CREATE VIRTUAL TABLE workflows_fts USING fts5(
    filename, name, description, integrations, tags,
    content='workflows', content_rowid='id'
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔧 Setup &amp;amp; Requirements&lt;/h2&gt; 
&lt;h3&gt;System Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Python 3.7+&lt;/strong&gt; - For running the documentation system&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modern Browser&lt;/strong&gt; - Chrome, Firefox, Safari, Edge&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;50MB Storage&lt;/strong&gt; - For SQLite database and indexes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;n8n Instance&lt;/strong&gt; - For importing and running workflows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone repository
git clone &amp;lt;repo-url&amp;gt;
cd n8n-workflows

# Install dependencies
pip install -r requirements.txt

# Start documentation server
python run.py

# Access at http://localhost:8000
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Development Setup&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Create virtual environment
python3 -m venv .venv
source .venv/bin/activate  # Linux/Mac
# or .venv\Scripts\activate  # Windows

# Install dependencies
pip install -r requirements.txt

# Run with auto-reload for development
python api_server.py --reload

# Force database reindexing
python workflow_db.py --index --force
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📋 Naming Convention&lt;/h2&gt; 
&lt;h3&gt;Intelligent Formatting System&lt;/h3&gt; 
&lt;p&gt;Our system automatically converts technical filenames to user-friendly names:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Automatic transformations:
2051_Telegram_Webhook_Automation_Webhook.json → "Telegram Webhook Automation"
0250_HTTP_Discord_Import_Scheduled.json → "HTTP Discord Import Scheduled"  
0966_OpenAI_Data_Processing_Manual.json → "OpenAI Data Processing Manual"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Technical Format&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;[ID]_[Service1]_[Service2]_[Purpose]_[Trigger].json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Smart Capitalization Rules&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP&lt;/strong&gt; → HTTP (not Http)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API&lt;/strong&gt; → API (not Api)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;webhook&lt;/strong&gt; → Webhook&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;automation&lt;/strong&gt; → Automation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;scheduled&lt;/strong&gt; → Scheduled&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 API Documentation&lt;/h2&gt; 
&lt;h3&gt;Core Endpoints&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GET /&lt;/code&gt; - Main workflow browser interface&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GET /api/stats&lt;/code&gt; - Database statistics and metrics&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GET /api/workflows&lt;/code&gt; - Search with filters and pagination&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GET /api/workflows/{filename}&lt;/code&gt; - Detailed workflow information&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GET /api/workflows/{filename}/download&lt;/code&gt; - Download workflow JSON&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GET /api/workflows/{filename}/diagram&lt;/code&gt; - Generate Mermaid diagram&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Search&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GET /api/workflows/category/{category}&lt;/code&gt; - Search by service category&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GET /api/categories&lt;/code&gt; - List all available categories&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GET /api/integrations&lt;/code&gt; - Get integration statistics&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST /api/reindex&lt;/code&gt; - Trigger background reindexing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Response Examples&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;// GET /api/stats
{
  "total": 2053,
  "active": 215,
  "inactive": 1838,
  "triggers": {
    "Complex": 831,
    "Webhook": 519,
    "Manual": 477,
    "Scheduled": 226
  },
  "total_nodes": 29445,
  "unique_integrations": 365
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;h3&gt;Adding New Workflows&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Export workflow&lt;/strong&gt; as JSON from n8n&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Name descriptively&lt;/strong&gt; following the established pattern&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Add to workflows/&lt;/strong&gt; directory&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Remove sensitive data&lt;/strong&gt; (credentials, personal URLs)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Run reindexing&lt;/strong&gt; to update the database&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Quality Standards&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ Workflow must be functional and tested&lt;/li&gt; 
 &lt;li&gt;✅ Remove all credentials and sensitive data&lt;/li&gt; 
 &lt;li&gt;✅ Follow naming convention for consistency&lt;/li&gt; 
 &lt;li&gt;✅ Verify compatibility with recent n8n versions&lt;/li&gt; 
 &lt;li&gt;✅ Include meaningful description or comments&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⚠️ Important Notes&lt;/h2&gt; 
&lt;h3&gt;Security &amp;amp; Privacy&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Review before use&lt;/strong&gt; - All workflows shared as-is for educational purposes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Update credentials&lt;/strong&gt; - Replace API keys, tokens, and webhooks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Test safely&lt;/strong&gt; - Verify in development environment first&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Check permissions&lt;/strong&gt; - Ensure proper access rights for integrations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Compatibility&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;n8n Version&lt;/strong&gt; - Compatible with n8n 1.0+ (most workflows)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Community Nodes&lt;/strong&gt; - Some workflows may require additional node installations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API Changes&lt;/strong&gt; - External services may have updated their APIs since creation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dependencies&lt;/strong&gt; - Verify required integrations before importing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📚 Resources &amp;amp; References&lt;/h2&gt; 
&lt;h3&gt;Workflow Sources&lt;/h3&gt; 
&lt;p&gt;This comprehensive collection includes workflows from:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Official n8n.io&lt;/strong&gt; - Documentation and community examples&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub repositories&lt;/strong&gt; - Open source community contributions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Blog posts &amp;amp; tutorials&lt;/strong&gt; - Real-world automation patterns&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User submissions&lt;/strong&gt; - Tested and verified workflows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise use cases&lt;/strong&gt; - Business process automations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Learn More&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.n8n.io/"&gt;n8n Documentation&lt;/a&gt; - Official documentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://community.n8n.io/"&gt;n8n Community&lt;/a&gt; - Community forum and support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://n8n.io/workflows/"&gt;Workflow Templates&lt;/a&gt; - Official template library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.n8n.io/integrations/"&gt;Integration Docs&lt;/a&gt; - Service-specific guides&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🏆 Project Achievements&lt;/h2&gt; 
&lt;h3&gt;Repository Transformation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;2,053 workflows&lt;/strong&gt; professionally organized and named&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;365 unique integrations&lt;/strong&gt; automatically detected and categorized&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;100% meaningful names&lt;/strong&gt; (improved from basic filename patterns)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zero data loss&lt;/strong&gt; during intelligent renaming process&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced search&lt;/strong&gt; with 12 service categories&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Performance Revolution&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Sub-100ms search&lt;/strong&gt; with SQLite FTS5 full-text indexing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Instant filtering&lt;/strong&gt; across 29,445 workflow nodes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mobile-optimized&lt;/strong&gt; responsive design for all devices&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-time statistics&lt;/strong&gt; with live database queries&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Professional interface&lt;/strong&gt; with modern UX principles&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;System Reliability&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Robust error handling&lt;/strong&gt; with graceful degradation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Change detection&lt;/strong&gt; for efficient database updates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Background processing&lt;/strong&gt; for non-blocking operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive logging&lt;/strong&gt; for debugging and monitoring&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Production-ready&lt;/strong&gt; with proper middleware and security&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;em&gt;This repository represents the most comprehensive and well-organized collection of n8n workflows available, featuring cutting-edge search technology and professional documentation that makes workflow discovery and usage a delightful experience.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🎯 Perfect for&lt;/strong&gt;: Developers, automation engineers, business analysts, and anyone looking to streamline their workflows with proven n8n automations.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Zie619/n8n-workflows/main/README_ZH.md"&gt;中文&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SoftFever/OrcaSlicer</title>
      <link>https://github.com/SoftFever/OrcaSlicer</link>
      <description>&lt;p&gt;G-code generator for 3D printers (Bambu, Prusa, Voron, VzBot, RatRig, Creality, etc.)&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;img alt="OrcaSlicer logo" src="https://raw.githubusercontent.com/SoftFever/OrcaSlicer/main/resources/images/OrcaSlicer.png" width="15%" height="15%" /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/952" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/952" alt="SoftFever%2FOrcaSlicer | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/SoftFever/OrcaSlicer" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SoftFever/OrcaSlicer/actions/workflows/build_all.yml"&gt;&lt;img src="https://github.com/SoftFever/OrcaSlicer/actions/workflows/build_all.yml/badge.svg?branch=main" alt="Build all" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;OrcaSlicer: an open source Next-Gen Slicing Software for Precision 3D Prints.&lt;br /&gt; Optimize your prints with ultra-fast slicing, intelligent support generation, and seamless printer compatibility—engineered for perfection.&lt;/p&gt; 
 &lt;h3&gt; &lt;/h3&gt;
 &lt;h1&gt;Official links and community&lt;/h1&gt; 
 &lt;h4&gt;Official Website:&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://www.orcaslicer.com/" style="font-size:2em;"&gt;OrcaSlicer.com&lt;/a&gt;&lt;/p&gt; 
 &lt;h4&gt;Github Repository:&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer"&gt;&lt;img src="https://img.shields.io/badge/OrcaSlicer-181717?style=flat&amp;amp;logo=github&amp;amp;logoColor=white" width="200" alt="GitHub Logo" /&gt; &lt;/a&gt;&lt;/p&gt; 
 &lt;h4&gt;Follow us:&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://twitter.com/real_OrcaSlicer"&gt;&lt;img src="https://img.shields.io/badge/real__OrcaSlicer-000000?style=flat&amp;amp;logo=x&amp;amp;logoColor=white" width="200" alt="X Logo" /&gt; &lt;/a&gt;&lt;/p&gt; 
 &lt;h4&gt;Join our Discord community:&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://discord.gg/P4VE9UY9gJ"&gt;&lt;img src="https://img.shields.io/badge/-Discord-5865F2?style=flat&amp;amp;logo=discord&amp;amp;logoColor=fff" width="200" alt="discord logo" /&gt; &lt;/a&gt;&lt;/p&gt; 
 &lt;table border="2" style="border-color: #ffa500; background-color:rgb(232, 220, 180); color: #856404;"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td&gt; &lt;strong&gt;⚠️ CAUTION:&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt; There are several clickbait and malicious websites pretending to be Official OrcaSlicer. These sites may redirect you to dangerous downloads or contain misleading information. &lt;br /&gt;&lt;br /&gt; If you come across any of these in search results, please &lt;a href="https://safebrowsing.google.com/safebrowsing/report_phish/?"&gt;report them as unsafe or phishing&lt;/a&gt; to help keep the community secure. &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h1&gt;Main features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer/wiki/Calibration"&gt;Advanced Calibration Tools&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt; Comprehensive suite: temperature towers, flow rate, retraction &amp;amp; more for optimal performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer/wiki/quality_settings_precision#precise-wall"&gt;Precise Wall&lt;/a&gt; and &lt;a href="https://github.com/SoftFever/OrcaSlicer/wiki/quality_settings_seam"&gt;Seam Control&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt; Adjust outer wall spacing and apply scarf seams to enhance print accuracy.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer/wiki/quality_settings_wall_and_surfaces#innerouterinner"&gt;Sandwich Mode&lt;/a&gt; and &lt;a href="https://github.com/SoftFever/OrcaSlicer/wiki/quality_settings_precision#polyholes"&gt;Polyholes&lt;/a&gt; Support&lt;/strong&gt;&lt;br /&gt; Use varied infill &lt;a href="https://github.com/SoftFever/OrcaSlicer/wiki/strength_settings_patterns"&gt;patterns&lt;/a&gt; and accurate hole shapes for improved clarity.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer/wiki/quality_settings_overhangs"&gt;Overhang&lt;/a&gt; and &lt;a href="https://github.com/SoftFever/OrcaSlicer/wiki#support-settings"&gt;Support Optimization&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt; Modify geometry for printable overhangs with precise support placement.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer/wiki#process-settings"&gt;Granular Controls&lt;/a&gt; and Customization&lt;/strong&gt;&lt;br /&gt; Fine-tune print speed, layer height, pressure, and temperature with precision.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Network Printer Support&lt;/strong&gt;&lt;br /&gt; Seamless integration with Klipper, PrusaLink, and OctoPrint for remote control.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer/wiki/others_settings_brim"&gt;Mouse Ear Brims&lt;/a&gt; &amp;amp; Adaptive Bed Mesh&lt;/strong&gt;&lt;br /&gt; Automatic brims and adaptive mesh calibration ensure consistent adhesion.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User-Friendly Interface&lt;/strong&gt;&lt;br /&gt; Intuitive drag-and-drop design with pre-made profiles for popular printers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer"&gt;Open-Source&lt;/a&gt; &amp;amp; &lt;a href="https://discord.gg/P4VE9UY9gJ"&gt;Community Driven&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt; Regular updates fueled by continuous community contributions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Wide Printer Compatibility&lt;/strong&gt;&lt;br /&gt; Supports a broad range of printers: Bambu Lab, Prusa, Creality, Voron, and more.&lt;/li&gt; 
 &lt;li&gt;Additional features can be found in the &lt;a href="https://github.com/SoftFever/OrcaSlicer/releases/"&gt;change notes&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Wiki&lt;/h1&gt; 
&lt;p&gt;The wiki below aims to provide a detailed explanation of the slicer settings, including how to maximize their use and how to calibrate and set up your printer.&lt;/p&gt; 
&lt;p&gt;Please note that the wiki is a work in progress. We appreciate your patience as we continue to develop and improve it!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer/wiki"&gt;Access the wiki here&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer/wiki/How-to-wiki"&gt;Contribute to the wiki&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Download&lt;/h1&gt; 
&lt;h2&gt;Stable Release&lt;/h2&gt; 
&lt;p&gt;📥 &lt;strong&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer/releases/latest"&gt;Download the Latest Stable Release&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt; Visit our GitHub Releases page for the latest stable version of OrcaSlicer, recommended for most users.&lt;/p&gt; 
&lt;h2&gt;Nightly Builds&lt;/h2&gt; 
&lt;p&gt;🌙 &lt;strong&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer/releases/tag/nightly-builds"&gt;Download the Latest Nightly Build&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt; Explore the latest developments in OrcaSlicer with our nightly builds. Feedback on these versions is highly appreciated.&lt;/p&gt; 
&lt;h1&gt;How to install&lt;/h1&gt; 
&lt;h2&gt;Windows&lt;/h2&gt; 
&lt;p&gt;Download the &lt;strong&gt;Windows Installer exe&lt;/strong&gt; for your preferred version from the &lt;a href="https://github.com/SoftFever/OrcaSlicer/releases"&gt;releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;For convenience there is also a portable build available.&lt;/em&gt;&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Troubleshooting&lt;/summary&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;em&gt;If you have troubles to run the build, you might need to install following runtimes:&lt;/em&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer/releases/download/v1.0.10-sf2/MicrosoftEdgeWebView2RuntimeInstallerX64.exe"&gt;MicrosoftEdgeWebView2RuntimeInstallerX64&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://aka.ms/webview2"&gt;Details of this runtime&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://go.microsoft.com/fwlink/p/?LinkId=2124703"&gt;Alternative Download Link Hosted by Microsoft&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://github.com/SoftFever/OrcaSlicer/releases/download/v1.0.10-sf2/vcredist2019_x64.exe"&gt;vcredist2019_x64&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://aka.ms/vs/17/release/vc_redist.x64.exe"&gt;Alternative Download Link Hosted by Microsoft&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;This file may already be available on your computer if you've installed visual studio. Check the following location: &lt;code&gt;%VCINSTALLDIR%Redist\MSVC\v142&lt;/code&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/details&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Windows Package Manager&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;winget install --id=SoftFever.OrcaSlicer -e
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Mac&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Download the DMG for your computer: &lt;code&gt;arm64&lt;/code&gt; version for Apple Silicon and &lt;code&gt;x86_64&lt;/code&gt; for Intel CPU.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Drag OrcaSlicer.app to Application folder.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;If you want to run a build from a PR, you also need to follow the instructions below:&lt;/em&gt;&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Quarantine&lt;/summary&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;Option 1 (You only need to do this once. After that the app can be opened normally.):&lt;/p&gt; 
     &lt;ul&gt; 
      &lt;li&gt;Step 1: Hold &lt;em&gt;cmd&lt;/em&gt; and right click the app, from the context menu choose &lt;strong&gt;Open&lt;/strong&gt;.&lt;/li&gt; 
      &lt;li&gt;Step 2: A warning window will pop up, click &lt;em&gt;Open&lt;/em&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Option 2: Execute this command in terminal:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;xattr -dr com.apple.quarantine /Applications/OrcaSlicer.app
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Option 3:&lt;/p&gt; 
     &lt;ul&gt; 
      &lt;li&gt;Step 1: open the app, a warning window will pop up&lt;br /&gt; &lt;img src="https://raw.githubusercontent.com/SoftFever/OrcaSlicer/main/SoftFever_doc/mac_cant_open.png" alt="mac_cant_open" /&gt;&lt;/li&gt; 
      &lt;li&gt;Step 2: in &lt;code&gt;System Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Privacy &amp;amp; Security&lt;/code&gt;, click &lt;code&gt;Open Anyway&lt;/code&gt;:&lt;br /&gt; &lt;img src="https://raw.githubusercontent.com/SoftFever/OrcaSlicer/main/SoftFever_doc/mac_security_setting.png" alt="mac_security_setting" /&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/details&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Linux (Ubuntu)&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you run into trouble executing it, try this command in the terminal: &lt;code&gt;chmod +x /path_to_appimage/OrcaSlicer_Linux.AppImage&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;How to Compile&lt;/h1&gt; 
&lt;p&gt;All updated build instructions for Windows, macOS, and Linux are now available on the official &lt;a href="https://github.com/SoftFever/OrcaSlicer/wiki/How-to-build"&gt;OrcaSlicer Wiki - How to build&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;Please refer to the wiki to ensure you're following the latest and most accurate steps for your platform.&lt;/p&gt; 
&lt;h1&gt;Klipper Note&lt;/h1&gt; 
&lt;p&gt;If you're running Klipper, it's recommended to add the following configuration to your &lt;code&gt;printer.cfg&lt;/code&gt; file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-gcode"&gt;# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Supports&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;OrcaSlicer&lt;/strong&gt; is an open-source project and I'm deeply grateful to all my sponsors and backers.&lt;br /&gt; Their generous support enables me to purchase filaments and other essential 3D printing materials for the project.&lt;br /&gt; Thank you! :)&lt;/p&gt; 
&lt;h2&gt;Sponsors:&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://qidi3d.com/" style="display:inline-block; border-radius:8px; background:#fff;"&gt; &lt;img src="SoftFever_doc\sponsor_logos\QIDI.png" alt="QIDI" width="100" height="100" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://bigtree-tech.com/" style="display:inline-block; border-radius:8px; background:#222;"&gt; &lt;img src="SoftFever_doc\sponsor_logos\BigTreeTech.png" alt="BIGTREE TECH" width="100" height="100" /&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Backers:&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Ko-fi supporters&lt;/strong&gt; ☕: &lt;a href="https://github.com/user-attachments/files/16147016/Supporters_638561417699952499.csv"&gt;Backers list&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support me&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/SoftFever"&gt;&lt;img src="https://img.shields.io/badge/GitHub%20Sponsors-30363D?style=flat&amp;amp;logo=GitHub-Sponsors&amp;amp;logoColor=EA4AAA" height="50" /&gt;&lt;/a&gt; &lt;a href="https://ko-fi.com/G2G5IP3CP"&gt;&lt;img src="https://img.shields.io/badge/Support_me_on_Ko--fi-FF5E5B?style=flat&amp;amp;logo=ko-fi&amp;amp;logoColor=white" height="50" /&gt;&lt;/a&gt; &lt;a href="https://paypal.me/softfever3d"&gt;&lt;img src="https://img.shields.io/badge/PayPal-003087?style=flat&amp;amp;logo=paypal&amp;amp;logoColor=fff" height="50" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Some background&lt;/h2&gt; 
&lt;p&gt;OrcaSlicer was originally forked from Bambu Studio, it was previously known as BambuStudio-SoftFever.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/bambulab/BambuStudio"&gt;Bambu Studio&lt;/a&gt; is forked from &lt;a href="https://github.com/prusa3d/PrusaSlicer"&gt;PrusaSlicer&lt;/a&gt; by Prusa Research, which is from &lt;a href="https://github.com/Slic3r/Slic3r"&gt;Slic3r&lt;/a&gt; by Alessandro Ranellucci and the RepRap community. OrcaSlicer incorporates a lot of features from &lt;a href="https://github.com/supermerill/SuperSlicer"&gt;SuperSlicer&lt;/a&gt; by @supermerill OrcaSlicer's logo is designed by community member Justin Levine (@freejstnalxndr).&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;OrcaSlicer&lt;/strong&gt; is licensed under the GNU Affero General Public License, version 3. OrcaSlicer is based on Bambu Studio by BambuLab.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bambu Studio&lt;/strong&gt; is licensed under the GNU Affero General Public License, version 3. Bambu Studio is based on PrusaSlicer by PrusaResearch.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;PrusaSlicer&lt;/strong&gt; is licensed under the GNU Affero General Public License, version 3. PrusaSlicer is owned by Prusa Research. PrusaSlicer is originally based on Slic3r by Alessandro Ranellucci.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Slic3r&lt;/strong&gt; is licensed under the GNU Affero General Public License, version 3. Slic3r was created by Alessandro Ranellucci with the help of many other contributors.&lt;/li&gt; 
 &lt;li&gt;The &lt;strong&gt;GNU Affero General Public License&lt;/strong&gt;, version 3 ensures that if you use any part of this software in any way (even behind a web server), your software must be released under the same license.&lt;/li&gt; 
 &lt;li&gt;OrcaSlicer includes a &lt;strong&gt;pressure advance calibration pattern test&lt;/strong&gt; adapted from Andrew Ellis' generator, which is licensed under GNU General Public License, version 3. Ellis' generator is itself adapted from a generator developed by Sineos for Marlin, which is licensed under GNU General Public License, version 3.&lt;/li&gt; 
 &lt;li&gt;The &lt;strong&gt;Bambu networking plugin&lt;/strong&gt; is based on non-free libraries from BambuLab. It is optional to the OrcaSlicer and provides extended functionalities for Bambulab printer users.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>sst/opencode</title>
      <link>https://github.com/sst/opencode</link>
      <description>&lt;p&gt;AI coding agent, built for the terminal.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://opencode.ai"&gt; 
  &lt;picture&gt; 
   &lt;source srcset="packages/web/src/assets/logo-ornate-dark.svg" media="(prefers-color-scheme: dark)" /&gt; 
   &lt;source srcset="packages/web/src/assets/logo-ornate-light.svg" media="(prefers-color-scheme: light)" /&gt; 
   &lt;img src="https://raw.githubusercontent.com/sst/opencode/dev/packages/web/src/assets/logo-ornate-light.svg?sanitize=true" alt="opencode logo" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;AI coding agent, built for the terminal.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://opencode.ai/discord"&gt;&lt;img alt="Discord" src="https://img.shields.io/discord/1391832426048651334?style=flat-square&amp;amp;label=discord" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/opencode-ai"&gt;&lt;img alt="npm" src="https://img.shields.io/npm/v/opencode-ai?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sst/opencode/actions/workflows/publish.yml"&gt;&lt;img alt="Build status" src="https://img.shields.io/github/actions/workflow/status/sst/opencode/publish.yml?style=flat-square&amp;amp;branch=dev" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencode.ai"&gt;&lt;img src="https://raw.githubusercontent.com/sst/opencode/dev/packages/web/src/assets/lander/screenshot.png" alt="opencode Terminal UI" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# YOLO
curl -fsSL https://opencode.ai/install | bash

# Package managers
npm i -g opencode-ai@latest        # or bun/pnpm/yarn
brew install sst/tap/opencode      # macOS and Linux
paru -S opencode-bin               # Arch Linux
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Remove versions older than 0.1.x before installing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Installation Directory&lt;/h4&gt; 
&lt;p&gt;The install script respects the following priority order for the installation path:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;$OPENCODE_INSTALL_DIR&lt;/code&gt; - Custom installation directory&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$XDG_BIN_DIR&lt;/code&gt; - XDG Base Directory Specification compliant path&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/bin&lt;/code&gt; - Standard user binary directory (if exists or can be created)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/.opencode/bin&lt;/code&gt; - Default fallback&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Examples
OPENCODE_INSTALL_DIR=/usr/local/bin curl -fsSL https://opencode.ai/install | bash
XDG_BIN_DIR=$HOME/.local/bin curl -fsSL https://opencode.ai/install | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;For more info on how to configure opencode &lt;a href="https://opencode.ai/docs"&gt;&lt;strong&gt;head over to our docs&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;opencode is an opinionated tool so any fundamental feature needs to go through a design process with the core team.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] We do not accept PRs for core features.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;However we still merge a ton of PRs - you can contribute:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bug fixes&lt;/li&gt; 
 &lt;li&gt;Improvements to LLM performance&lt;/li&gt; 
 &lt;li&gt;Support for new providers&lt;/li&gt; 
 &lt;li&gt;Fixes for env specific quirks&lt;/li&gt; 
 &lt;li&gt;Missing standard behavior&lt;/li&gt; 
 &lt;li&gt;Documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Take a look at the git history to see what kind of PRs we end up merging.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you do not follow the above guidelines we might close your PR.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To run opencode locally you need.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bun&lt;/li&gt; 
 &lt;li&gt;Golang 1.24.x&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And run.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ bun install
$ bun dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Development Notes&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;API Client&lt;/strong&gt;: After making changes to the TypeScript API endpoints in &lt;code&gt;packages/opencode/src/server/server.ts&lt;/code&gt;, you will need the opencode team to generate a new stainless sdk for the clients.&lt;/p&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;h4&gt;How is this different than Claude Code?&lt;/h4&gt; 
&lt;p&gt;It's very similar to Claude Code in terms of capability. Here are the key differences:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;100% open source&lt;/li&gt; 
 &lt;li&gt;Not coupled to any provider. Although Anthropic is recommended, opencode can be used with OpenAI, Google or even local models. As models evolve the gaps between them will close and pricing will drop so being provider-agnostic is important.&lt;/li&gt; 
 &lt;li&gt;A focus on TUI. opencode is built by neovim users and the creators of &lt;a href="https://terminal.shop"&gt;terminal.shop&lt;/a&gt;; we are going to push the limits of what's possible in the terminal.&lt;/li&gt; 
 &lt;li&gt;A client/server architecture. This for example can allow opencode to run on your computer, while you can drive it remotely from a mobile app. Meaning that the TUI frontend is just one of the possible clients.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;What's the other repo?&lt;/h4&gt; 
&lt;p&gt;The other confusingly named repo has no relation to this one. You can &lt;a href="https://x.com/thdxr/status/1933561254481666466"&gt;read the story behind it here&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Join our community&lt;/strong&gt; &lt;a href="https://discord.gg/opencode"&gt;Discord&lt;/a&gt; | &lt;a href="https://x.com/opencode"&gt;X.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>midday-ai/midday</title>
      <link>https://github.com/midday-ai/midday</link>
      <description>&lt;p&gt;Invoicing, Time tracking, File reconciliation, Storage, Financial Overview &amp; your own Assistant made for Freelancers&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/midday-ai/midday/main/github.png" alt="hero" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;&lt;b&gt;Midday&lt;/b&gt;&lt;/h1&gt; 
&lt;p align="center"&gt; Run your business smarter &lt;br /&gt; &lt;br /&gt; &lt;a href="https://go.midday.ai/anPiuRx"&gt;Discord&lt;/a&gt; · &lt;a href="https://midday.ai"&gt;Website&lt;/a&gt; · &lt;a href="https://github.com/midday-ai/midday/issues"&gt;Issues&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://go.midday.ai/K7GwMoQ"&gt; &lt;img src="https://img.shields.io/badge/Supabase-3ECF8E?style=for-the-badge&amp;amp;logo=supabase&amp;amp;logoColor=white" alt="Supabase" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;About Midday&lt;/h2&gt; 
&lt;p&gt;Midday is an all-in-one tool designed to help freelancers, contractors, consultants, and solo entrepreneurs manage their business operations more efficiently. It integrates various functions typically scattered across multiple platforms into a single, cohesive system.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Time Tracking&lt;/strong&gt;: Allows for live time tracking of projects to boost productivity and collaboration, providing insightful project overviews.&lt;br /&gt; &lt;strong&gt;Invoicing&lt;/strong&gt;: An upcoming feature that will enable users to create web-based invoices, collaborate in real-time, and synchronize projects seamlessly.&lt;br /&gt; &lt;strong&gt;Magic Inbox&lt;/strong&gt;: Automatically matches incoming invoices or receipts to the correct transactions, simplifying financial tracking and organization.&lt;br /&gt; &lt;strong&gt;Vault&lt;/strong&gt;: Secure storage for important files like contracts and agreements, keeping everything in one place for easy access​.&lt;br /&gt; &lt;strong&gt;Seamless Export&lt;/strong&gt;: Facilitates easy export of financial data, packaged neatly in CSV files for accountants.&lt;br /&gt; &lt;strong&gt;Assistant&lt;/strong&gt;: Provides tailored insights into financial situations, helping users understand spending patterns, cut costs, and find documents.&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;We are working on the documentation to get started with Midday for local development: &lt;a href="https://docs.midday.ai"&gt;https://docs.midday.ai&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;App Architecture&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monorepo&lt;/li&gt; 
 &lt;li&gt;Bun&lt;/li&gt; 
 &lt;li&gt;React&lt;/li&gt; 
 &lt;li&gt;TypeScript&lt;/li&gt; 
 &lt;li&gt;Nextjs&lt;/li&gt; 
 &lt;li&gt;Supabase&lt;/li&gt; 
 &lt;li&gt;Shadcn&lt;/li&gt; 
 &lt;li&gt;Tauri&lt;/li&gt; 
 &lt;li&gt;Expo&lt;/li&gt; 
 &lt;li&gt;TailwindCSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hosting&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supabase (database, storage, realtime, auth)&lt;/li&gt; 
 &lt;li&gt;Vercel (Website, Dashboard)&lt;/li&gt; 
 &lt;li&gt;Fly.io (API/tRPC)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Services&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Trigger.dev (background jobs)&lt;/li&gt; 
 &lt;li&gt;Resend (Transactional &amp;amp; Marketing)&lt;/li&gt; 
 &lt;li&gt;Github Actions (CI/CD)&lt;/li&gt; 
 &lt;li&gt;GoCardLess (Bank connection EU)&lt;/li&gt; 
 &lt;li&gt;Plaid (Bank connection in Canada and US)&lt;/li&gt; 
 &lt;li&gt;Teller (Bank connection in the US)&lt;/li&gt; 
 &lt;li&gt;OpenPanel (Events and Analytics)&lt;/li&gt; 
 &lt;li&gt;Polar (Payment processing)&lt;/li&gt; 
 &lt;li&gt;Typesense (Search)&lt;/li&gt; 
 &lt;li&gt;Mistral&lt;/li&gt; 
 &lt;li&gt;Gemini&lt;/li&gt; 
 &lt;li&gt;OpenAI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Repo Activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/96aae855e5dd87c30d53c1d154b37cf7aa5a89b3.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;strong&gt;&lt;a href="https://opensource.org/licenses/AGPL-3.0"&gt;AGPL-3.0&lt;/a&gt;&lt;/strong&gt; for non-commercial use.&lt;/p&gt; 
&lt;h3&gt;Commercial Use&lt;/h3&gt; 
&lt;p&gt;For commercial use or deployments requiring a setup fee, please contact us for a commercial license at &lt;a href="mailto:engineer@midday.ai"&gt;engineer@midday.ai&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;By using this software, you agree to the terms of the license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mnh-jansson/open-battery-information</title>
      <link>https://github.com/mnh-jansson/open-battery-information</link>
      <description>&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open Battery Information&lt;/h1&gt; 
&lt;p&gt;This project aims to provide tools and information about various batteries in order to aid repair. It is very common for manufacturers to lock the BMS when a fault is detected to protect the device and the user. Very important feature! So when is it a problem? Well, there is always a chance for false triggering of this protection, or the fault could have been temporary or even repaired. In this case it would be wasteful to throw out a perfectly good BMS just because its software says it is faulty.&lt;/p&gt; 
&lt;p&gt;This is the problem we would like to solve!&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/mnh-jansson/open-battery-information/main/docs/images/obi-1.png" alt="screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Contact information&lt;/h2&gt; 
&lt;p&gt;For any questions, please e-mail: &lt;a href="mailto:openbatteryinformation@gmail.com"&gt;openbatteryinformation@gmail.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;I have spent alot of time on this project and now releasing all this information to the public in hope that it will help other people save batteries and money. If you would like to show some appreciation for my work, please consider supporting me by buying me a coffee or sponsor me on Github!&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://www.buymeacoffee.com/mnhjansson"&gt;&lt;img src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt="&amp;quot;Buy Me A Coffee&amp;quot;" /&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;h1&gt;Instructions&lt;/h1&gt; 
&lt;h2&gt;Step 1: Set Up ArduinoOBI&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate to the ArduinoOBI folder in the project directory.&lt;/li&gt; 
 &lt;li&gt;Follow the instructions in the README.md. This section will guide you through configuring the Arduino part of the system, ensuring everything is set up correctly.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Step 2: Set Up OpenBatteryInformation&lt;/h2&gt; 
&lt;p&gt;After setting up the Arduino part, you have two options for setting up the software on your computer.&lt;/p&gt; 
&lt;h3&gt;Option 1: Use Precompiled Binary for Windows&lt;/h3&gt; 
&lt;p&gt;If you prefer not to deal with Python dependencies, you can download a precompiled binary for Windows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate to the &lt;a href="https://github.com/mnh-jansson/open-battery-information/releases"&gt;Releases&lt;/a&gt; section of the repository.&lt;/li&gt; 
 &lt;li&gt;Download the Windows precompiled binary for your system.&lt;/li&gt; 
 &lt;li&gt;Simply run the executable and follow any on-screen instructions to use the software.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Option 2: Install Python Requirements - Clone the Repository and Install Dependencies&lt;/h3&gt; 
&lt;p&gt;Clone the repository to your local machine:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/yourusername/OpenBatteryInformation.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Navigate into the project folder:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd OpenBatteryInformation
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install the required Python dependencies:&lt;/p&gt; 
&lt;p&gt;If you don't have pip installed, follow the installation guide for your platform here. Install the required libraries by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should now be ready to run OpenBatteryInformation!&lt;/p&gt; 
&lt;h2&gt;Step 3: Run OpenBatteryInformation&lt;/h2&gt; 
&lt;p&gt;If you installed the Python version, you can run the program by executing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python main.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're using the Windows binary, simply double-click the downloaded OBI.exe file to start the application.&lt;/p&gt; 
&lt;hr /&gt;</description>
    </item>
    
    <item>
      <title>unclecode/crawl4ai</title>
      <link>https://github.com/unclecode/crawl4ai</link>
      <description>&lt;p&gt;🚀🤖 Crawl4AI: Open-source LLM Friendly Web Crawler &amp; Scraper. Don't be shy, join here: https://discord.gg/jP8KfhDhyN&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🚀🤖 Crawl4AI: Open-source LLM Friendly Web Crawler &amp;amp; Scraper.&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/11716" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/11716" alt="unclecode%2Fcrawl4ai | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/unclecode/crawl4ai/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/unclecode/crawl4ai?style=social" alt="GitHub Stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/unclecode/crawl4ai/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/unclecode/crawl4ai?style=social" alt="GitHub Forks" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://badge.fury.io/py/crawl4ai"&gt;&lt;img src="https://badge.fury.io/py/crawl4ai.svg?sanitize=true" alt="PyPI version" /&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/crawl4ai/"&gt;&lt;img src="https://img.shields.io/pypi/pyversions/crawl4ai" alt="Python Version" /&gt;&lt;/a&gt; &lt;a href="https://pepy.tech/project/crawl4ai"&gt;&lt;img src="https://static.pepy.tech/badge/crawl4ai/month" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/unclecode"&gt;&lt;img src="https://img.shields.io/github/sponsors/unclecode?style=flat&amp;amp;logo=GitHub-Sponsors&amp;amp;label=Sponsors&amp;amp;color=pink" alt="GitHub Sponsors" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p align="center"&gt; &lt;a href="https://x.com/crawl4ai"&gt; &lt;img src="https://img.shields.io/badge/Follow%20on%20X-000000?style=for-the-badge&amp;amp;logo=x&amp;amp;logoColor=white" alt="Follow on X" /&gt; &lt;/a&gt; &lt;a href="https://www.linkedin.com/company/crawl4ai"&gt; &lt;img src="https://img.shields.io/badge/Follow%20on%20LinkedIn-0077B5?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white" alt="Follow on LinkedIn" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/jP8KfhDhyN"&gt; &lt;img src="https://img.shields.io/badge/Join%20our%20Discord-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Join our Discord" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Crawl4AI turns the web into clean, LLM ready Markdown for RAG, agents, and data pipelines. Fast, controllable, battle tested by a 50k+ star community.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/unclecode/crawl4ai/main/#-recent-updates"&gt;✨ Check out latest update v0.7.4&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;✨ New in v0.7.4: Revolutionary LLM Table Extraction with intelligent chunking, enhanced concurrency fixes, memory management refactor, and critical stability improvements. &lt;a href="https://github.com/unclecode/crawl4ai/raw/main/docs/blog/release-v0.7.4.md"&gt;Release notes →&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;✨ Recent v0.7.3: Undetected Browser Support, Multi-URL Configurations, Memory Monitoring, Enhanced Table Extraction, GitHub Sponsors. &lt;a href="https://github.com/unclecode/crawl4ai/raw/main/docs/blog/release-v0.7.3.md"&gt;Release notes →&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;🤓 &lt;strong&gt;My Personal Story&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;I grew up on an Amstrad, thanks to my dad, and never stopped building. In grad school I specialized in NLP and built crawlers for research. That’s where I learned how much extraction matters.&lt;/p&gt; 
 &lt;p&gt;In 2023, I needed web-to-Markdown. The “open source” option wanted an account, API token, and $16, and still under-delivered. I went turbo anger mode, built Crawl4AI in days, and it went viral. Now it’s the most-starred crawler on GitHub.&lt;/p&gt; 
 &lt;p&gt;I made it open source for &lt;strong&gt;availability&lt;/strong&gt;, anyone can use it without a gate. Now I’m building the platform for &lt;strong&gt;affordability&lt;/strong&gt;, anyone can run serious crawls without breaking the bank. If that resonates, join in, send feedback, or just crawl something amazing.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Why developers pick Crawl4AI&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;LLM ready output&lt;/strong&gt;, smart Markdown with headings, tables, code, citation hints&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Fast in practice&lt;/strong&gt;, async browser pool, caching, minimal hops&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Full control&lt;/strong&gt;, sessions, proxies, cookies, user scripts, hooks&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Adaptive intelligence&lt;/strong&gt;, learns site patterns, explores only what matters&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Deploy anywhere&lt;/strong&gt;, zero keys, CLI and Docker, cloud friendly&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Crawl4AI:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install the package
pip install -U crawl4ai

# For pre release versions
pip install crawl4ai --pre

# Run post-installation setup
crawl4ai-setup

# Verify your installation
crawl4ai-doctor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you encounter any browser-related issues, you can install them manually:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -m playwright install --with-deps chromium
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Run a simple web crawl with Python:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import asyncio
from crawl4ai import *

async def main():
    async with AsyncWebCrawler() as crawler:
        result = await crawler.arun(
            url="https://www.nbcnews.com/business",
        )
        print(result.markdown)

if __name__ == "__main__":
    asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Or use the new command-line interface:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Basic crawl with markdown output
crwl https://www.nbcnews.com/business -o markdown

# Deep crawl with BFS strategy, max 10 pages
crwl https://docs.crawl4ai.com --deep-crawl bfs --max-pages 10

# Use LLM extraction with a specific question
crwl https://www.example.com/products -q "Extract all product prices"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;💖 Support Crawl4AI&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🎉 &lt;strong&gt;Sponsorship Program Now Open!&lt;/strong&gt; After powering 51K+ developers and 1 year of growth, Crawl4AI is launching dedicated support for &lt;strong&gt;startups&lt;/strong&gt; and &lt;strong&gt;enterprises&lt;/strong&gt;. Be among the first 50 &lt;strong&gt;Founding Sponsors&lt;/strong&gt; for permanent recognition in our Hall of Fame.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Crawl4AI is the #1 trending open-source web crawler on GitHub. Your support keeps it independent, innovative, and free for the community — while giving you direct access to premium benefits.&lt;/p&gt; 
&lt;div align=""&gt; 
 &lt;p&gt;&lt;a href="https://github.com/sponsors/unclecode"&gt;&lt;img src="https://img.shields.io/badge/Become%20a%20Sponsor-pink?style=for-the-badge&amp;amp;logo=github-sponsors&amp;amp;logoColor=white" alt="Become a Sponsor" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="https://github.com/sponsors/unclecode"&gt;&lt;img src="https://img.shields.io/github/sponsors/unclecode?style=for-the-badge&amp;amp;logo=github&amp;amp;label=Current%20Sponsors&amp;amp;color=green" alt="Current Sponsors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;🤝 Sponsorship Tiers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🌱 Believer ($5/mo)&lt;/strong&gt; — Join the movement for data democratization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 Builder ($50/mo)&lt;/strong&gt; — Priority support &amp;amp; early access to features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💼 Growing Team ($500/mo)&lt;/strong&gt; — Bi-weekly syncs &amp;amp; optimization help&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🏢 Data Infrastructure Partner ($2000/mo)&lt;/strong&gt; — Full partnership with dedicated support&lt;br /&gt; &lt;em&gt;Custom arrangements available - see &lt;a href="https://raw.githubusercontent.com/unclecode/crawl4ai/main/SPONSORS.md"&gt;SPONSORS.md&lt;/a&gt; for details &amp;amp; contact&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Why sponsor?&lt;/strong&gt;&lt;br /&gt; No rate-limited APIs. No lock-in. Build and own your data pipeline with direct guidance from the creator of Crawl4AI.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/unclecode"&gt;See All Tiers &amp;amp; Benefits →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;📝 &lt;strong&gt;Markdown Generation&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;🧹 &lt;strong&gt;Clean Markdown&lt;/strong&gt;: Generates clean, structured Markdown with accurate formatting.&lt;/li&gt; 
  &lt;li&gt;🎯 &lt;strong&gt;Fit Markdown&lt;/strong&gt;: Heuristic-based filtering to remove noise and irrelevant parts for AI-friendly processing.&lt;/li&gt; 
  &lt;li&gt;🔗 &lt;strong&gt;Citations and References&lt;/strong&gt;: Converts page links into a numbered reference list with clean citations.&lt;/li&gt; 
  &lt;li&gt;🛠️ &lt;strong&gt;Custom Strategies&lt;/strong&gt;: Users can create their own Markdown generation strategies tailored to specific needs.&lt;/li&gt; 
  &lt;li&gt;📚 &lt;strong&gt;BM25 Algorithm&lt;/strong&gt;: Employs BM25-based filtering for extracting core information and removing irrelevant content.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;📊 &lt;strong&gt;Structured Data Extraction&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;🤖 &lt;strong&gt;LLM-Driven Extraction&lt;/strong&gt;: Supports all LLMs (open-source and proprietary) for structured data extraction.&lt;/li&gt; 
  &lt;li&gt;🧱 &lt;strong&gt;Chunking Strategies&lt;/strong&gt;: Implements chunking (topic-based, regex, sentence-level) for targeted content processing.&lt;/li&gt; 
  &lt;li&gt;🌌 &lt;strong&gt;Cosine Similarity&lt;/strong&gt;: Find relevant content chunks based on user queries for semantic extraction.&lt;/li&gt; 
  &lt;li&gt;🔎 &lt;strong&gt;CSS-Based Extraction&lt;/strong&gt;: Fast schema-based data extraction using XPath and CSS selectors.&lt;/li&gt; 
  &lt;li&gt;🔧 &lt;strong&gt;Schema Definition&lt;/strong&gt;: Define custom schemas for extracting structured JSON from repetitive patterns.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;🌐 &lt;strong&gt;Browser Integration&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;🖥️ &lt;strong&gt;Managed Browser&lt;/strong&gt;: Use user-owned browsers with full control, avoiding bot detection.&lt;/li&gt; 
  &lt;li&gt;🔄 &lt;strong&gt;Remote Browser Control&lt;/strong&gt;: Connect to Chrome Developer Tools Protocol for remote, large-scale data extraction.&lt;/li&gt; 
  &lt;li&gt;👤 &lt;strong&gt;Browser Profiler&lt;/strong&gt;: Create and manage persistent profiles with saved authentication states, cookies, and settings.&lt;/li&gt; 
  &lt;li&gt;🔒 &lt;strong&gt;Session Management&lt;/strong&gt;: Preserve browser states and reuse them for multi-step crawling.&lt;/li&gt; 
  &lt;li&gt;🧩 &lt;strong&gt;Proxy Support&lt;/strong&gt;: Seamlessly connect to proxies with authentication for secure access.&lt;/li&gt; 
  &lt;li&gt;⚙️ &lt;strong&gt;Full Browser Control&lt;/strong&gt;: Modify headers, cookies, user agents, and more for tailored crawling setups.&lt;/li&gt; 
  &lt;li&gt;🌍 &lt;strong&gt;Multi-Browser Support&lt;/strong&gt;: Compatible with Chromium, Firefox, and WebKit.&lt;/li&gt; 
  &lt;li&gt;📐 &lt;strong&gt;Dynamic Viewport Adjustment&lt;/strong&gt;: Automatically adjusts the browser viewport to match page content, ensuring complete rendering and capturing of all elements.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;🔎 &lt;strong&gt;Crawling &amp;amp; Scraping&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;🖼️ &lt;strong&gt;Media Support&lt;/strong&gt;: Extract images, audio, videos, and responsive image formats like &lt;code&gt;srcset&lt;/code&gt; and &lt;code&gt;picture&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;🚀 &lt;strong&gt;Dynamic Crawling&lt;/strong&gt;: Execute JS and wait for async or sync for dynamic content extraction.&lt;/li&gt; 
  &lt;li&gt;📸 &lt;strong&gt;Screenshots&lt;/strong&gt;: Capture page screenshots during crawling for debugging or analysis.&lt;/li&gt; 
  &lt;li&gt;📂 &lt;strong&gt;Raw Data Crawling&lt;/strong&gt;: Directly process raw HTML (&lt;code&gt;raw:&lt;/code&gt;) or local files (&lt;code&gt;file://&lt;/code&gt;).&lt;/li&gt; 
  &lt;li&gt;🔗 &lt;strong&gt;Comprehensive Link Extraction&lt;/strong&gt;: Extracts internal, external links, and embedded iframe content.&lt;/li&gt; 
  &lt;li&gt;🛠️ &lt;strong&gt;Customizable Hooks&lt;/strong&gt;: Define hooks at every step to customize crawling behavior.&lt;/li&gt; 
  &lt;li&gt;💾 &lt;strong&gt;Caching&lt;/strong&gt;: Cache data for improved speed and to avoid redundant fetches.&lt;/li&gt; 
  &lt;li&gt;📄 &lt;strong&gt;Metadata Extraction&lt;/strong&gt;: Retrieve structured metadata from web pages.&lt;/li&gt; 
  &lt;li&gt;📡 &lt;strong&gt;IFrame Content Extraction&lt;/strong&gt;: Seamless extraction from embedded iframe content.&lt;/li&gt; 
  &lt;li&gt;🕵️ &lt;strong&gt;Lazy Load Handling&lt;/strong&gt;: Waits for images to fully load, ensuring no content is missed due to lazy loading.&lt;/li&gt; 
  &lt;li&gt;🔄 &lt;strong&gt;Full-Page Scanning&lt;/strong&gt;: Simulates scrolling to load and capture all dynamic content, perfect for infinite scroll pages.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;🚀 &lt;strong&gt;Deployment&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;🐳 &lt;strong&gt;Dockerized Setup&lt;/strong&gt;: Optimized Docker image with FastAPI server for easy deployment.&lt;/li&gt; 
  &lt;li&gt;🔑 &lt;strong&gt;Secure Authentication&lt;/strong&gt;: Built-in JWT token authentication for API security.&lt;/li&gt; 
  &lt;li&gt;🔄 &lt;strong&gt;API Gateway&lt;/strong&gt;: One-click deployment with secure token authentication for API-based workflows.&lt;/li&gt; 
  &lt;li&gt;🌐 &lt;strong&gt;Scalable Architecture&lt;/strong&gt;: Designed for mass-scale production and optimized server performance.&lt;/li&gt; 
  &lt;li&gt;☁️ &lt;strong&gt;Cloud Deployment&lt;/strong&gt;: Ready-to-deploy configurations for major cloud platforms.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;🎯 &lt;strong&gt;Additional Features&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;🕶️ &lt;strong&gt;Stealth Mode&lt;/strong&gt;: Avoid bot detection by mimicking real users.&lt;/li&gt; 
  &lt;li&gt;🏷️ &lt;strong&gt;Tag-Based Content Extraction&lt;/strong&gt;: Refine crawling based on custom tags, headers, or metadata.&lt;/li&gt; 
  &lt;li&gt;🔗 &lt;strong&gt;Link Analysis&lt;/strong&gt;: Extract and analyze all links for detailed data exploration.&lt;/li&gt; 
  &lt;li&gt;🛡️ &lt;strong&gt;Error Handling&lt;/strong&gt;: Robust error management for seamless execution.&lt;/li&gt; 
  &lt;li&gt;🔐 &lt;strong&gt;CORS &amp;amp; Static Serving&lt;/strong&gt;: Supports filesystem-based caching and cross-origin requests.&lt;/li&gt; 
  &lt;li&gt;📖 &lt;strong&gt;Clear Documentation&lt;/strong&gt;: Simplified and updated guides for onboarding and advanced usage.&lt;/li&gt; 
  &lt;li&gt;🙌 &lt;strong&gt;Community Recognition&lt;/strong&gt;: Acknowledges contributors and pull requests for transparency.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Try it Now!&lt;/h2&gt; 
&lt;p&gt;✨ Play around with this &lt;a href="https://colab.research.google.com/drive/1SgRPrByQLzjRfwoRNq1wSGE9nYY_EE8C?usp=sharing"&gt;&lt;img src="https://colab.research.google.com/assets/colab-badge.svg?sanitize=true" alt="Open In Colab" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;✨ Visit our &lt;a href="https://docs.crawl4ai.com/"&gt;Documentation Website&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation 🛠️&lt;/h2&gt; 
&lt;p&gt;Crawl4AI offers flexible installation options to suit various use cases. You can install it as a Python package or use Docker.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;🐍 &lt;strong&gt;Using pip&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Choose the installation option that best fits your needs:&lt;/p&gt; 
 &lt;h3&gt;Basic Installation&lt;/h3&gt; 
 &lt;p&gt;For basic web crawling and scraping tasks:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;pip install crawl4ai
crawl4ai-setup # Setup the browser
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;By default, this will install the asynchronous version of Crawl4AI, using Playwright for web crawling.&lt;/p&gt; 
 &lt;p&gt;👉 &lt;strong&gt;Note&lt;/strong&gt;: When you install Crawl4AI, the &lt;code&gt;crawl4ai-setup&lt;/code&gt; should automatically install and set up Playwright. However, if you encounter any Playwright-related errors, you can manually install it using one of these methods:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Through the command line:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;playwright install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;If the above doesn't work, try this more specific command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;python -m playwright install chromium
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;This second method has proven to be more reliable in some cases.&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;h3&gt;Installation with Synchronous Version&lt;/h3&gt; 
 &lt;p&gt;The sync version is deprecated and will be removed in future versions. If you need the synchronous version using Selenium:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;pip install crawl4ai[sync]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr /&gt; 
 &lt;h3&gt;Development Installation&lt;/h3&gt; 
 &lt;p&gt;For contributors who plan to modify the source code:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/unclecode/crawl4ai.git
cd crawl4ai
pip install -e .                    # Basic installation in editable mode
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Install optional features:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;pip install -e ".[torch]"           # With PyTorch features
pip install -e ".[transformer]"     # With Transformer features
pip install -e ".[cosine]"          # With cosine similarity features
pip install -e ".[sync]"            # With synchronous crawling (Selenium)
pip install -e ".[all]"             # Install all optional features
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;🐳 &lt;strong&gt;Docker Deployment&lt;/strong&gt;&lt;/summary&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;🚀 &lt;strong&gt;Now Available!&lt;/strong&gt; Our completely redesigned Docker implementation is here! This new solution makes deployment more efficient and seamless than ever.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;h3&gt;New Docker Features&lt;/h3&gt; 
 &lt;p&gt;The new Docker implementation includes:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Browser pooling&lt;/strong&gt; with page pre-warming for faster response times&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Interactive playground&lt;/strong&gt; to test and generate request code&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;MCP integration&lt;/strong&gt; for direct connection to AI tools like Claude Code&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Comprehensive API endpoints&lt;/strong&gt; including HTML extraction, screenshots, PDF generation, and JavaScript execution&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Multi-architecture support&lt;/strong&gt; with automatic detection (AMD64/ARM64)&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Optimized resources&lt;/strong&gt; with improved memory management&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Getting Started&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Pull and run the latest release candidate
docker pull unclecode/crawl4ai:0.7.0
docker run -d -p 11235:11235 --name crawl4ai --shm-size=1g unclecode/crawl4ai:0.7.0

# Visit the playground at http://localhost:11235/playground
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Quick Test&lt;/h3&gt; 
 &lt;p&gt;Run a quick test (works for both Docker options):&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;import requests

# Submit a crawl job
response = requests.post(
    "http://localhost:11235/crawl",
    json={"urls": ["https://example.com"], "priority": 10}
)
if response.status_code == 200:
    print("Crawl job submitted successfully.")
    
if "results" in response.json():
    results = response.json()["results"]
    print("Crawl job completed. Results:")
    for result in results:
        print(result)
else:
    task_id = response.json()["task_id"]
    print(f"Crawl job submitted. Task ID:: {task_id}")
    result = requests.get(f"http://localhost:11235/task/{task_id}")
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;For more examples, see our &lt;a href="https://github.com/unclecode/crawl4ai/raw/main/docs/examples/docker_example.py"&gt;Docker Examples&lt;/a&gt;. For advanced configuration, environment variables, and usage examples, see our &lt;a href="https://docs.crawl4ai.com/basic/docker-deployment/"&gt;Docker Deployment Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔬 Advanced Usage Examples 🔬&lt;/h2&gt; 
&lt;p&gt;You can check the project structure in the directory &lt;a href="https://github.com/unclecode/crawl4ai/tree/main/docs/examples"&gt;docs/examples&lt;/a&gt;. Over there, you can find a variety of examples; here, some popular examples are shared.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;📝 &lt;strong&gt;Heuristic Markdown Generation with Clean and Fit Markdown&lt;/strong&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;import asyncio
from crawl4ai import AsyncWebCrawler, BrowserConfig, CrawlerRunConfig, CacheMode
from crawl4ai.content_filter_strategy import PruningContentFilter, BM25ContentFilter
from crawl4ai.markdown_generation_strategy import DefaultMarkdownGenerator

async def main():
    browser_config = BrowserConfig(
        headless=True,  
        verbose=True,
    )
    run_config = CrawlerRunConfig(
        cache_mode=CacheMode.ENABLED,
        markdown_generator=DefaultMarkdownGenerator(
            content_filter=PruningContentFilter(threshold=0.48, threshold_type="fixed", min_word_threshold=0)
        ),
        # markdown_generator=DefaultMarkdownGenerator(
        #     content_filter=BM25ContentFilter(user_query="WHEN_WE_FOCUS_BASED_ON_A_USER_QUERY", bm25_threshold=1.0)
        # ),
    )
    
    async with AsyncWebCrawler(config=browser_config) as crawler:
        result = await crawler.arun(
            url="https://docs.micronaut.io/4.7.6/guide/",
            config=run_config
        )
        print(len(result.markdown.raw_markdown))
        print(len(result.markdown.fit_markdown))

if __name__ == "__main__":
    asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;🖥️ &lt;strong&gt;Executing JavaScript &amp;amp; Extract Structured Data without LLMs&lt;/strong&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;import asyncio
from crawl4ai import AsyncWebCrawler, BrowserConfig, CrawlerRunConfig, CacheMode
from crawl4ai import JsonCssExtractionStrategy
import json

async def main():
    schema = {
    "name": "KidoCode Courses",
    "baseSelector": "section.charge-methodology .w-tab-content &amp;gt; div",
    "fields": [
        {
            "name": "section_title",
            "selector": "h3.heading-50",
            "type": "text",
        },
        {
            "name": "section_description",
            "selector": ".charge-content",
            "type": "text",
        },
        {
            "name": "course_name",
            "selector": ".text-block-93",
            "type": "text",
        },
        {
            "name": "course_description",
            "selector": ".course-content-text",
            "type": "text",
        },
        {
            "name": "course_icon",
            "selector": ".image-92",
            "type": "attribute",
            "attribute": "src"
        }
    }
}

    extraction_strategy = JsonCssExtractionStrategy(schema, verbose=True)

    browser_config = BrowserConfig(
        headless=False,
        verbose=True
    )
    run_config = CrawlerRunConfig(
        extraction_strategy=extraction_strategy,
        js_code=["""(async () =&amp;gt; {const tabs = document.querySelectorAll("section.charge-methodology .tabs-menu-3 &amp;gt; div");for(let tab of tabs) {tab.scrollIntoView();tab.click();await new Promise(r =&amp;gt; setTimeout(r, 500));}})();"""],
        cache_mode=CacheMode.BYPASS
    )
        
    async with AsyncWebCrawler(config=browser_config) as crawler:
        
        result = await crawler.arun(
            url="https://www.kidocode.com/degrees/technology",
            config=run_config
        )

        companies = json.loads(result.extracted_content)
        print(f"Successfully extracted {len(companies)} companies")
        print(json.dumps(companies[0], indent=2))


if __name__ == "__main__":
    asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;📚 &lt;strong&gt;Extracting Structured Data with LLMs&lt;/strong&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;import os
import asyncio
from crawl4ai import AsyncWebCrawler, BrowserConfig, CrawlerRunConfig, CacheMode, LLMConfig
from crawl4ai import LLMExtractionStrategy
from pydantic import BaseModel, Field

class OpenAIModelFee(BaseModel):
    model_name: str = Field(..., description="Name of the OpenAI model.")
    input_fee: str = Field(..., description="Fee for input token for the OpenAI model.")
    output_fee: str = Field(..., description="Fee for output token for the OpenAI model.")

async def main():
    browser_config = BrowserConfig(verbose=True)
    run_config = CrawlerRunConfig(
        word_count_threshold=1,
        extraction_strategy=LLMExtractionStrategy(
            # Here you can use any provider that Litellm library supports, for instance: ollama/qwen2
            # provider="ollama/qwen2", api_token="no-token", 
            llm_config = LLMConfig(provider="openai/gpt-4o", api_token=os.getenv('OPENAI_API_KEY')), 
            schema=OpenAIModelFee.schema(),
            extraction_type="schema",
            instruction="""From the crawled content, extract all mentioned model names along with their fees for input and output tokens. 
            Do not miss any models in the entire content. One extracted model JSON format should look like this: 
            {"model_name": "GPT-4", "input_fee": "US$10.00 / 1M tokens", "output_fee": "US$30.00 / 1M tokens"}."""
        ),            
        cache_mode=CacheMode.BYPASS,
    )
    
    async with AsyncWebCrawler(config=browser_config) as crawler:
        result = await crawler.arun(
            url='https://openai.com/api/pricing/',
            config=run_config
        )
        print(result.extracted_content)

if __name__ == "__main__":
    asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;🤖 &lt;strong&gt;Using Your own Browser with Custom User Profile&lt;/strong&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;import os, sys
from pathlib import Path
import asyncio, time
from crawl4ai import AsyncWebCrawler, BrowserConfig, CrawlerRunConfig, CacheMode

async def test_news_crawl():
    # Create a persistent user data directory
    user_data_dir = os.path.join(Path.home(), ".crawl4ai", "browser_profile")
    os.makedirs(user_data_dir, exist_ok=True)

    browser_config = BrowserConfig(
        verbose=True,
        headless=True,
        user_data_dir=user_data_dir,
        use_persistent_context=True,
    )
    run_config = CrawlerRunConfig(
        cache_mode=CacheMode.BYPASS
    )
    
    async with AsyncWebCrawler(config=browser_config) as crawler:
        url = "ADDRESS_OF_A_CHALLENGING_WEBSITE"
        
        result = await crawler.arun(
            url,
            config=run_config,
            magic=True,
        )
        
        print(f"Successfully crawled {url}")
        print(f"Content length: {len(result.markdown)}")
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;✨ Recent Updates&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Version 0.7.4 Release Highlights - The Intelligent Table Extraction &amp;amp; Performance Update&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;🚀 LLMTableExtraction&lt;/strong&gt;: Revolutionary table extraction with intelligent chunking for massive tables:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from crawl4ai import LLMTableExtraction, LLMConfig

# Configure intelligent table extraction
table_strategy = LLMTableExtraction(
    llm_config=LLMConfig(provider="openai/gpt-4.1-mini"),
    enable_chunking=True,           # Handle massive tables
    chunk_token_threshold=5000,     # Smart chunking threshold
    overlap_threshold=100,          # Maintain context between chunks
    extraction_type="structured"    # Get structured data output
)

config = CrawlerRunConfig(table_extraction_strategy=table_strategy)
result = await crawler.arun("https://complex-tables-site.com", config=config)

# Tables are automatically chunked, processed, and merged
for table in result.tables:
    print(f"Extracted table: {len(table['data'])} rows")
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;⚡ Dispatcher Bug Fix&lt;/strong&gt;: Fixed sequential processing bottleneck in arun_many for fast-completing tasks&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;🧹 Memory Management Refactor&lt;/strong&gt;: Consolidated memory utilities into main utils module for cleaner architecture&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;🔧 Browser Manager Fixes&lt;/strong&gt;: Resolved race conditions in concurrent page creation with thread-safe locking&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;🔗 Advanced URL Processing&lt;/strong&gt;: Better handling of raw:// URLs and base tag link resolution&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;🛡️ Enhanced Proxy Support&lt;/strong&gt;: Flexible proxy configuration supporting both dict and string formats&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;a href="https://github.com/unclecode/crawl4ai/raw/main/docs/blog/release-v0.7.4.md"&gt;Full v0.7.4 Release Notes →&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Version 0.7.3 Release Highlights - The Multi-Config Intelligence Update&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;🕵️ Undetected Browser Support&lt;/strong&gt;: Bypass sophisticated bot detection systems:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from crawl4ai import AsyncWebCrawler, BrowserConfig

browser_config = BrowserConfig(
    browser_type="undetected",  # Use undetected Chrome
    headless=True,              # Can run headless with stealth
    extra_args=[
        "--disable-blink-features=AutomationControlled",
        "--disable-web-security"
    ]
)

async with AsyncWebCrawler(config=browser_config) as crawler:
    result = await crawler.arun("https://protected-site.com")
# Successfully bypass Cloudflare, Akamai, and custom bot detection
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;🎨 Multi-URL Configuration&lt;/strong&gt;: Different strategies for different URL patterns in one batch:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from crawl4ai import CrawlerRunConfig, MatchMode

configs = [
    # Documentation sites - aggressive caching
    CrawlerRunConfig(
        url_matcher=["*docs*", "*documentation*"],
        cache_mode="write",
        markdown_generator_options={"include_links": True}
    ),
    
    # News/blog sites - fresh content
    CrawlerRunConfig(
        url_matcher=lambda url: 'blog' in url or 'news' in url,
        cache_mode="bypass"
    ),
    
    # Fallback for everything else
    CrawlerRunConfig()
]

results = await crawler.arun_many(urls, config=configs)
# Each URL gets the perfect configuration automatically
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;🧠 Memory Monitoring&lt;/strong&gt;: Track and optimize memory usage during crawling:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from crawl4ai.memory_utils import MemoryMonitor

monitor = MemoryMonitor()
monitor.start_monitoring()

results = await crawler.arun_many(large_url_list)

report = monitor.get_report()
print(f"Peak memory: {report['peak_mb']:.1f} MB")
print(f"Efficiency: {report['efficiency']:.1f}%")
# Get optimization recommendations
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;📊 Enhanced Table Extraction&lt;/strong&gt;: Direct DataFrame conversion from web tables:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;result = await crawler.arun("https://site-with-tables.com")

# New way - direct table access
if result.tables:
    import pandas as pd
    for table in result.tables:
        df = pd.DataFrame(table['data'])
        print(f"Table: {df.shape[0]} rows × {df.shape[1]} columns")
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;💰 GitHub Sponsors&lt;/strong&gt;: 4-tier sponsorship system for project sustainability&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;🐳 Docker LLM Flexibility&lt;/strong&gt;: Configure providers via environment variables&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;a href="https://github.com/unclecode/crawl4ai/raw/main/docs/blog/release-v0.7.3.md"&gt;Full v0.7.3 Release Notes →&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Version 0.7.0 Release Highlights - The Adaptive Intelligence Update&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;🧠 Adaptive Crawling&lt;/strong&gt;: Your crawler now learns and adapts to website patterns automatically:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;config = AdaptiveConfig(
    confidence_threshold=0.7, # Min confidence to stop crawling
    max_depth=5, # Maximum crawl depth
    max_pages=20, # Maximum number of pages to crawl
    strategy="statistical"
)

async with AsyncWebCrawler() as crawler:
    adaptive_crawler = AdaptiveCrawler(crawler, config)
    state = await adaptive_crawler.digest(
        start_url="https://news.example.com",
        query="latest news content"
    )
# Crawler learns patterns and improves extraction over time
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;🌊 Virtual Scroll Support&lt;/strong&gt;: Complete content extraction from infinite scroll pages:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;scroll_config = VirtualScrollConfig(
    container_selector="[data-testid='feed']",
    scroll_count=20,
    scroll_by="container_height",
    wait_after_scroll=1.0
)

result = await crawler.arun(url, config=CrawlerRunConfig(
    virtual_scroll_config=scroll_config
))
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;🔗 Intelligent Link Analysis&lt;/strong&gt;: 3-layer scoring system for smart link prioritization:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;link_config = LinkPreviewConfig(
    query="machine learning tutorials",
    score_threshold=0.3,
    concurrent_requests=10
)

result = await crawler.arun(url, config=CrawlerRunConfig(
    link_preview_config=link_config,
    score_links=True
))
# Links ranked by relevance and quality
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;🎣 Async URL Seeder&lt;/strong&gt;: Discover thousands of URLs in seconds:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;seeder = AsyncUrlSeeder(SeedingConfig(
    source="sitemap+cc",
    pattern="*/blog/*",
    query="python tutorials",
    score_threshold=0.4
))

urls = await seeder.discover("https://example.com")
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;⚡ Performance Boost&lt;/strong&gt;: Up to 3x faster with optimized resource handling and memory efficiency&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Read the full details in our &lt;a href="https://docs.crawl4ai.com/blog/release-v0.7.0"&gt;0.7.0 Release Notes&lt;/a&gt; or check the &lt;a href="https://github.com/unclecode/crawl4ai/raw/main/CHANGELOG.md"&gt;CHANGELOG&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Version Numbering in Crawl4AI&lt;/h2&gt; 
&lt;p&gt;Crawl4AI follows standard Python version numbering conventions (PEP 440) to help users understand the stability and features of each release.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;📈 &lt;strong&gt;Version Numbers Explained&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Our version numbers follow this pattern: &lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt; (e.g., 0.4.3)&lt;/p&gt; 
 &lt;h4&gt;Pre-release Versions&lt;/h4&gt; 
 &lt;p&gt;We use different suffixes to indicate development stages:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;dev&lt;/code&gt; (0.4.3dev1): Development versions, unstable&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;a&lt;/code&gt; (0.4.3a1): Alpha releases, experimental features&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;b&lt;/code&gt; (0.4.3b1): Beta releases, feature complete but needs testing&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;rc&lt;/code&gt; (0.4.3): Release candidates, potential final version&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Installation&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;Regular installation (stable version):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install -U crawl4ai
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Install pre-release versions:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install crawl4ai --pre
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Install specific version:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install crawl4ai==0.4.3b1
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Why Pre-releases?&lt;/h4&gt; 
 &lt;p&gt;We use pre-releases to:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Test new features in real-world scenarios&lt;/li&gt; 
  &lt;li&gt;Gather feedback before final releases&lt;/li&gt; 
  &lt;li&gt;Ensure stability for production users&lt;/li&gt; 
  &lt;li&gt;Allow early adopters to try new features&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;For production environments, we recommend using the stable version. For testing new features, you can opt-in to pre-releases using the &lt;code&gt;--pre&lt;/code&gt; flag.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;📖 Documentation &amp;amp; Roadmap&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🚨 &lt;strong&gt;Documentation Update Alert&lt;/strong&gt;: We're undertaking a major documentation overhaul next week to reflect recent updates and improvements. Stay tuned for a more comprehensive and up-to-date guide!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For current documentation, including installation instructions, advanced features, and API reference, visit our &lt;a href="https://docs.crawl4ai.com/"&gt;Documentation Website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To check our development plans and upcoming features, visit our &lt;a href="https://github.com/unclecode/crawl4ai/raw/main/ROADMAP.md"&gt;Roadmap&lt;/a&gt;.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;📈 &lt;strong&gt;Development TODOs&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 0. Graph Crawler: Smart website traversal using graph search algorithms for comprehensive nested page extraction&lt;/li&gt; 
  &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 1. Question-Based Crawler: Natural language driven web discovery and content extraction&lt;/li&gt; 
  &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 2. Knowledge-Optimal Crawler: Smart crawling that maximizes knowledge while minimizing data extraction&lt;/li&gt; 
  &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 3. Agentic Crawler: Autonomous system for complex multi-step crawling operations&lt;/li&gt; 
  &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 4. Automated Schema Generator: Convert natural language to extraction schemas&lt;/li&gt; 
  &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 5. Domain-Specific Scrapers: Pre-configured extractors for common platforms (academic, e-commerce)&lt;/li&gt; 
  &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 6. Web Embedding Index: Semantic search infrastructure for crawled content&lt;/li&gt; 
  &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 7. Interactive Playground: Web UI for testing, comparing strategies with AI assistance&lt;/li&gt; 
  &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 8. Performance Monitor: Real-time insights into crawler operations&lt;/li&gt; 
  &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 9. Cloud Integration: One-click deployment solutions across cloud providers&lt;/li&gt; 
  &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 10. Sponsorship Program: Structured support system with tiered benefits&lt;/li&gt; 
  &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 11. Educational Content: "How to Crawl" video series and interactive tutorials&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from the open-source community. Check out our &lt;a href="https://github.com/unclecode/crawl4ai/raw/main/CONTRIBUTORS.md"&gt;contribution guidelines&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;I'll help modify the license section with badges. For the halftone effect, here's a version with it:&lt;/p&gt; 
&lt;p&gt;Here's the updated license section:&lt;/p&gt; 
&lt;h2&gt;📄 License &amp;amp; Attribution&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the Apache License 2.0, attribution is recommended via the badges below. See the &lt;a href="https://github.com/unclecode/crawl4ai/raw/main/LICENSE"&gt;Apache 2.0 License&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h3&gt;Attribution Requirements&lt;/h3&gt; 
&lt;p&gt;When using Crawl4AI, you must include one of the following attribution methods:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;📈 &lt;strong&gt;1. Badge Attribution (Recommended)&lt;/strong&gt;&lt;/summary&gt; Add one of these badges to your README, documentation, or website: 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Theme&lt;/th&gt; 
    &lt;th&gt;Badge&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;strong&gt;Disco Theme (Animated)&lt;/strong&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://github.com/unclecode/crawl4ai"&gt;&lt;img src="https://raw.githubusercontent.com/unclecode/crawl4ai/main/docs/assets/powered-by-disco.svg?sanitize=true" alt="Powered by Crawl4AI" width="200" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;strong&gt;Night Theme (Dark with Neon)&lt;/strong&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://github.com/unclecode/crawl4ai"&gt;&lt;img src="https://raw.githubusercontent.com/unclecode/crawl4ai/main/docs/assets/powered-by-night.svg?sanitize=true" alt="Powered by Crawl4AI" width="200" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;strong&gt;Dark Theme (Classic)&lt;/strong&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://github.com/unclecode/crawl4ai"&gt;&lt;img src="https://raw.githubusercontent.com/unclecode/crawl4ai/main/docs/assets/powered-by-dark.svg?sanitize=true" alt="Powered by Crawl4AI" width="200" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;strong&gt;Light Theme (Classic)&lt;/strong&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href="https://github.com/unclecode/crawl4ai"&gt;&lt;img src="https://raw.githubusercontent.com/unclecode/crawl4ai/main/docs/assets/powered-by-light.svg?sanitize=true" alt="Powered by Crawl4AI" width="200" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;HTML code for adding the badges:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;!-- Disco Theme (Animated) --&amp;gt;
&amp;lt;a href="https://github.com/unclecode/crawl4ai"&amp;gt;
  &amp;lt;img src="https://raw.githubusercontent.com/unclecode/crawl4ai/main/docs/assets/powered-by-disco.svg" alt="Powered by Crawl4AI" width="200"/&amp;gt;
&amp;lt;/a&amp;gt;

&amp;lt;!-- Night Theme (Dark with Neon) --&amp;gt;
&amp;lt;a href="https://github.com/unclecode/crawl4ai"&amp;gt;
  &amp;lt;img src="https://raw.githubusercontent.com/unclecode/crawl4ai/main/docs/assets/powered-by-night.svg" alt="Powered by Crawl4AI" width="200"/&amp;gt;
&amp;lt;/a&amp;gt;

&amp;lt;!-- Dark Theme (Classic) --&amp;gt;
&amp;lt;a href="https://github.com/unclecode/crawl4ai"&amp;gt;
  &amp;lt;img src="https://raw.githubusercontent.com/unclecode/crawl4ai/main/docs/assets/powered-by-dark.svg" alt="Powered by Crawl4AI" width="200"/&amp;gt;
&amp;lt;/a&amp;gt;

&amp;lt;!-- Light Theme (Classic) --&amp;gt;
&amp;lt;a href="https://github.com/unclecode/crawl4ai"&amp;gt;
  &amp;lt;img src="https://raw.githubusercontent.com/unclecode/crawl4ai/main/docs/assets/powered-by-light.svg" alt="Powered by Crawl4AI" width="200"/&amp;gt;
&amp;lt;/a&amp;gt;

&amp;lt;!-- Simple Shield Badge --&amp;gt;
&amp;lt;a href="https://github.com/unclecode/crawl4ai"&amp;gt;
  &amp;lt;img src="https://img.shields.io/badge/Powered%20by-Crawl4AI-blue?style=flat-square" alt="Powered by Crawl4AI"/&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;📖 &lt;strong&gt;2. Text Attribution&lt;/strong&gt;&lt;/summary&gt; Add this line to your documentation: ``` This project uses Crawl4AI (https://github.com/unclecode/crawl4ai) for web data extraction. ``` 
&lt;/details&gt; 
&lt;h2&gt;📚 Citation&lt;/h2&gt; 
&lt;p&gt;If you use Crawl4AI in your research or project, please cite:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@software{crawl4ai2024,
  author = {UncleCode},
  title = {Crawl4AI: Open-source LLM Friendly Web Crawler &amp;amp; Scraper},
  year = {2024},
  publisher = {GitHub},
  journal = {GitHub Repository},
  howpublished = {\url{https://github.com/unclecode/crawl4ai}},
  commit = {Please use the commit hash you're working with}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Text citation format:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;UncleCode. (2024). Crawl4AI: Open-source LLM Friendly Web Crawler &amp;amp; Scraper [Computer software]. 
GitHub. https://github.com/unclecode/crawl4ai
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📧 Contact&lt;/h2&gt; 
&lt;p&gt;For questions, suggestions, or feedback, feel free to reach out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub: &lt;a href="https://github.com/unclecode"&gt;unclecode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Twitter: &lt;a href="https://twitter.com/unclecode"&gt;@unclecode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Website: &lt;a href="https://crawl4ai.com"&gt;crawl4ai.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Happy Crawling! 🕸️🚀&lt;/p&gt; 
&lt;h2&gt;🗾 Mission&lt;/h2&gt; 
&lt;p&gt;Our mission is to unlock the value of personal and enterprise data by transforming digital footprints into structured, tradeable assets. Crawl4AI empowers individuals and organizations with open-source tools to extract and structure data, fostering a shared data economy.&lt;/p&gt; 
&lt;p&gt;We envision a future where AI is powered by real human knowledge, ensuring data creators directly benefit from their contributions. By democratizing data and enabling ethical sharing, we are laying the foundation for authentic AI advancement.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;🔑 &lt;strong&gt;Key Opportunities&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Data Capitalization&lt;/strong&gt;: Transform digital footprints into measurable, valuable assets.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Authentic AI Data&lt;/strong&gt;: Provide AI systems with real human insights.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Shared Economy&lt;/strong&gt;: Create a fair data marketplace that benefits data creators.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;🚀 &lt;strong&gt;Development Pathway&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;Open-Source Tools&lt;/strong&gt;: Community-driven platforms for transparent data extraction.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Digital Asset Structuring&lt;/strong&gt;: Tools to organize and value digital knowledge.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Ethical Data Marketplace&lt;/strong&gt;: A secure, fair platform for exchanging structured data.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;For more details, see our &lt;a href="https://raw.githubusercontent.com/unclecode/crawl4ai/main/MISSION.md"&gt;full mission statement&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#unclecode/crawl4ai&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=unclecode/crawl4ai&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HKUDS/DeepCode</title>
      <link>https://github.com/HKUDS/DeepCode</link>
      <description>&lt;p&gt;"DeepCode: Open Agentic Coding (Paper2Code &amp; Text2Web &amp; Text2Backend)"&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;table style="border: none; margin: 0 auto; padding: 0; border-collapse: collapse;"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align="center" style="vertical-align: middle; padding: 10px; border: none; width: 250px;"&gt; &lt;img src="https://raw.githubusercontent.com/HKUDS/DeepCode/main/assets/logo.png" alt="DeepCode Logo" width="200" style="margin: 0; padding: 0; display: block;" /&gt; &lt;/td&gt; 
    &lt;td align="left" style="vertical-align: middle; padding: 10px 0 10px 30px; border: none;"&gt; &lt;pre style="font-family: 'Courier New', monospace; font-size: 16px; color: #0EA5E9; margin: 0; padding: 0; text-shadow: 0 0 10px #0EA5E9, 0 0 20px rgba(14,165,233,0.5); line-height: 1.2; transform: skew(-1deg, 0deg); display: block;"&gt;    ██████╗ ███████╗███████╗██████╗  ██████╗ ██████╗ ██████╗ ███████╗
    ██╔══██╗██╔════╝██╔════╝██╔══██╗██╔════╝██╔═══██╗██╔══██╗██╔════╝
    ██║  ██║█████╗  █████╗  ██████╔╝██║     ██║   ██║██║  ██║█████╗
    ██║  ██║██╔══╝  ██╔══╝  ██╔═══╝ ██║     ██║   ██║██║  ██║██╔══╝
    ██████╔╝███████╗███████╗██║     ╚██████╗╚██████╔╝██████╔╝███████╗
    ╚═════╝ ╚══════╝╚══════╝╚═╝      ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝&lt;/pre&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
 &lt;div align="center"&gt; 
  &lt;a href="https://trendshift.io/repositories/14665" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/14665" alt="HKUDS%2FDeepCode | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;!-- &lt;img src="https://readme-typing-svg.herokuapp.com?font=Russo+One&amp;size=28&amp;duration=2000&amp;pause=800&amp;color=06B6D4&amp;background=00000000&amp;center=true&amp;vCenter=true&amp;width=800&amp;height=50&amp;lines=%E2%9A%A1+OPEN+AGENTIC+CODING+%E2%9A%A1" alt="DeepCode Tech Subtitle" style="margin-top: 5px; filter: drop-shadow(0 0 12px #06B6D4) drop-shadow(0 0 24px rgba(6,182,212,0.4));"/&gt; --&gt; 
 &lt;h1&gt;&lt;img src="https://github.com/Zongwei9888/Experiment_Images/raw/43c585dca3d21b8e4b6390d835cdd34dc4b4b23d/DeepCode_images/title_logo.svg?sanitize=true" alt="DeepCode Logo" width="32" height="32" style="vertical-align: middle; margin-right: 8px;" /&gt; DeepCode: Open Agentic Coding&lt;/h1&gt; 
 &lt;h3&gt;&lt;em&gt;Advancing Code Generation with Multi-Agent Systems&lt;/em&gt;&lt;/h3&gt; 
 &lt;!-- &lt;p align="center"&gt;
  &lt;img src="https://img.shields.io/badge/Version-1.0.0-00d4ff?style=for-the-badge&amp;logo=rocket&amp;logoColor=white" alt="Version"&gt;

  &lt;img src="https://img.shields.io/badge/License-MIT-4ecdc4?style=for-the-badge&amp;logo=opensourceinitiative&amp;logoColor=white" alt="License"&gt;
  &lt;img src="https://img.shields.io/badge/AI-Multi--Agent-9b59b6?style=for-the-badge&amp;logo=brain&amp;logoColor=white" alt="AI"&gt;
  &lt;img src="https://img.shields.io/badge/HKU-Data_Intelligence_Lab-f39c12?style=for-the-badge&amp;logo=university&amp;logoColor=white" alt="HKU"&gt;
&lt;/p&gt; --&gt; 
 &lt;p&gt; &lt;a href="https://github.com/HKUDS/DeepCode/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/HKUDS/DeepCode?color=00d9ff&amp;amp;style=for-the-badge&amp;amp;logo=star&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/🐍Python-3.13-4ecdc4?style=for-the-badge&amp;amp;logo=python&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt; &lt;a href="https://pypi.org/project/deepcode-hku/"&gt;&lt;img src="https://img.shields.io/pypi/v/deepcode-hku.svg?style=for-the-badge&amp;amp;logo=pypi&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e&amp;amp;color=ff6b6b" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;a href="https://discord.gg/yF2MmDJyGJ"&gt;&lt;img src="https://img.shields.io/badge/💬Discord-Community-7289da?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HKUDS/DeepCode/issues/11"&gt;&lt;img src="https://img.shields.io/badge/💬WeChat-Group-07c160?style=for-the-badge&amp;amp;logo=wechat&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;div align="center"&gt; 
  &lt;div style="width: 100%; height: 2px; margin: 20px 0; background: linear-gradient(90deg, transparent, #00d9ff, transparent);"&gt;&lt;/div&gt; 
 &lt;/div&gt; 
 &lt;div align="center"&gt; 
  &lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-quick-start" style="text-decoration: none;"&gt; &lt;img src="https://img.shields.io/badge/Quick%20Start-Get%20Started%20Now-00d9ff?style=for-the-badge&amp;amp;logo=rocket&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt; &lt;/a&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;🖥️ &lt;strong&gt;Interface Showcase&lt;/strong&gt;&lt;/h3&gt; 
 &lt;table align="center" width="100%" style="border: none; border-collapse: collapse; margin: 30px 0;"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td width="50%" align="center" style="vertical-align: top; padding: 20px;"&gt; &lt;h4&gt;🖥️ &lt;strong&gt;CLI Interface&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;Terminal-Based Development&lt;/strong&gt;&lt;/p&gt; 
     &lt;div align="center"&gt; 
      &lt;img src="https://github.com/Zongwei9888/Experiment_Images/raw/8882a7313c504ca97ead6e7b36c51aa761b6a4f3/DeepCode_images/CLI.gif" alt="CLI Interface Demo" width="100%" style="border-radius: 10px; box-shadow: 0 8px 20px rgba(45,55,72,0.3); margin: 15px 0;" /&gt; 
      &lt;div style="background: linear-gradient(135deg, #2D3748 0%, #4A5568 100%); border-radius: 12px; padding: 15px; margin: 15px 0; color: white;"&gt; 
       &lt;strong&gt;🚀 Advanced Terminal Experience&lt;/strong&gt;
       &lt;br /&gt; 
       &lt;small&gt;⚡ Fast command-line workflow&lt;br /&gt;🔧 Developer-friendly interface&lt;br /&gt;📊 Real-time progress tracking&lt;/small&gt; 
      &lt;/div&gt; 
      &lt;p&gt;&lt;em&gt;Professional terminal interface for advanced users and CI/CD integration&lt;/em&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
    &lt;td width="50%" align="center" style="vertical-align: top; padding: 20px;"&gt; &lt;h4&gt;🌐 &lt;strong&gt;Web Interface&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;Visual Interactive Experience&lt;/strong&gt;&lt;/p&gt; 
     &lt;div align="center"&gt; 
      &lt;img src="https://github.com/Zongwei9888/Experiment_Images/raw/8882a7313c504ca97ead6e7b36c51aa761b6a4f3/DeepCode_images/UI.gif" alt="Web Interface Demo" width="100%" style="border-radius: 10px; box-shadow: 0 8px 20px rgba(14,165,233,0.3); margin: 15px 0;" /&gt; 
      &lt;div style="background: linear-gradient(135deg, #0EA5E9 0%, #00D4FF 100%); border-radius: 12px; padding: 15px; margin: 15px 0; color: white;"&gt; 
       &lt;strong&gt;🎨 Modern Web Dashboard&lt;/strong&gt;
       &lt;br /&gt; 
       &lt;small&gt;🖱️ Intuitive drag-and-drop&lt;br /&gt;📱 Responsive design&lt;br /&gt;🎯 Visual progress tracking&lt;/small&gt; 
      &lt;/div&gt; 
      &lt;p&gt;&lt;em&gt;Beautiful web interface with streamlined workflow for all skill levels&lt;/em&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
 &lt;hr /&gt; 
 &lt;div align="center"&gt; 
  &lt;h3&gt;🎬 &lt;strong&gt;Introduction Video&lt;/strong&gt;&lt;/h3&gt; 
  &lt;div style="margin: 20px 0;"&gt; 
   &lt;a href="https://youtu.be/PRgmP8pOI08" target="_blank"&gt; &lt;img src="https://img.youtube.com/vi/PRgmP8pOI08/maxresdefault.jpg" alt="DeepCode Introduction Video" width="75%" style="border-radius: 12px; box-shadow: 0 8px 25px rgba(0,0,0,0.15); transition: transform 0.3s ease;" /&gt; &lt;/a&gt; 
  &lt;/div&gt; 
  &lt;p&gt;&lt;em&gt;🎯 &lt;strong&gt;Watch our complete introduction&lt;/strong&gt; - See how DeepCode transforms research papers and natural language into production-ready code&lt;/em&gt;&lt;/p&gt; 
  &lt;p&gt; &lt;a href="https://youtu.be/PRgmP8pOI08" target="_blank"&gt; &lt;img src="https://img.shields.io/badge/▶️_Watch_Video-FF0000?style=for-the-badge&amp;amp;logo=youtube&amp;amp;logoColor=white" alt="Watch Video" /&gt; &lt;/a&gt; &lt;/p&gt; 
 &lt;/div&gt; 
 &lt;hr /&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;em&gt;"Where AI Agents Transform Ideas into Production-Ready Code"&lt;/em&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📑 Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-key-features"&gt;🚀 Key Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#%EF%B8%8F-architecture"&gt;🏗️ Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-quick-start"&gt;🚀 Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-examples"&gt;💡 Examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-live-demonstrations"&gt;🎬 Live Demonstrations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-star-history"&gt;⭐ Star History&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-license"&gt;📄 License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Key Features&lt;/h2&gt; 
&lt;br /&gt; 
&lt;table align="center" width="100%" style="border: none; table-layout: fixed;"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="30%" align="center" style="vertical-align: top; padding: 20px;"&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;h3 style="margin: 0; padding: 0;"&gt;🚀 &lt;strong&gt;Paper2Code&lt;/strong&gt;&lt;/h3&gt; 
    &lt;/div&gt; 
    &lt;div align="center" style="margin: 15px 0;"&gt; 
     &lt;img src="https://img.shields.io/badge/ALGORITHM-IMPLEMENTATION-ff6b6b?style=for-the-badge&amp;amp;logo=algorithm&amp;amp;logoColor=white" alt="Algorithm Badge" /&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;&lt;strong&gt;Automated Implementation of Complex Algorithms&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 60px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;Effortlessly converts complex algorithms from research papers into &lt;strong&gt;high-quality&lt;/strong&gt;, &lt;strong&gt;production-ready&lt;/strong&gt; code, accelerating algorithm reproduction.&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td width="30%" align="center" style="vertical-align: top; padding: 20px;"&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;h3 style="margin: 0; padding: 0;"&gt;🎨 &lt;strong&gt;Text2Web&lt;/strong&gt;&lt;/h3&gt; 
    &lt;/div&gt; 
    &lt;div align="center" style="margin: 15px 0;"&gt; 
     &lt;img src="https://img.shields.io/badge/FRONTEND-DEVELOPMENT-4ecdc4?style=for-the-badge&amp;amp;logo=react&amp;amp;logoColor=white" alt="Frontend Badge" /&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;&lt;strong&gt;Automated Front-End Web Development&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 60px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;Translates plain textual descriptions into &lt;strong&gt;fully functional&lt;/strong&gt;, &lt;strong&gt;visually appealing&lt;/strong&gt; front-end web code for rapid interface creation.&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td width="30%" align="center" style="vertical-align: top; padding: 20px;"&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;h3 style="margin: 0; padding: 0;"&gt;⚙️ &lt;strong&gt;Text2Backend&lt;/strong&gt;&lt;/h3&gt; 
    &lt;/div&gt; 
    &lt;div align="center" style="margin: 15px 0;"&gt; 
     &lt;img src="https://img.shields.io/badge/BACKEND-DEVELOPMENT-9b59b6?style=for-the-badge&amp;amp;logo=server&amp;amp;logoColor=white" alt="Backend Badge" /&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;&lt;strong&gt;Automated Back-End Development&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 60px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;Generates &lt;strong&gt;efficient&lt;/strong&gt;, &lt;strong&gt;scalable&lt;/strong&gt;, and &lt;strong&gt;feature-rich&lt;/strong&gt; back-end code from simple text inputs, streamlining server-side development.&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;br /&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Autonomous Multi-Agent Workflow&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;The Challenges&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;📄 &lt;strong&gt;Implementation Complexity&lt;/strong&gt;: Converting academic papers and complex algorithms into working code requires significant technical effort and domain expertise&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔬 &lt;strong&gt;Research Bottleneck&lt;/strong&gt;: Researchers spend valuable time implementing algorithms instead of focusing on their core research and discovery work&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;⏱️ &lt;strong&gt;Development Delays&lt;/strong&gt;: Product teams experience long wait times between concept and testable prototypes, slowing down innovation cycles&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔄 &lt;strong&gt;Repetitive Coding&lt;/strong&gt;: Developers repeatedly implement similar patterns and functionality instead of building on existing solutions&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;DeepCode&lt;/strong&gt; addresses these workflow inefficiencies by providing reliable automation for common development tasks, streamlining your development workflow from concept to code.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;pre&gt;&lt;code class="language-mermaid"&gt;flowchart LR
    A["📄 Research Papers&amp;lt;br/&amp;gt;💬 Text Prompts&amp;lt;br/&amp;gt;🌐 URLs &amp;amp; Document&amp;lt;br/&amp;gt;📎 Files: PDF, DOC, PPTX, TXT, HTML"] --&amp;gt; B["🧠 DeepCode&amp;lt;br/&amp;gt;Multi-Agent Engine"]
    B --&amp;gt; C["🚀 Algorithm Implementation &amp;lt;br/&amp;gt;🎨 Frontend Development &amp;lt;br/&amp;gt;⚙️ Backend Development"]

    style A fill:#ff6b6b,stroke:#c0392b,stroke-width:2px,color:#000
    style B fill:#00d4ff,stroke:#0984e3,stroke-width:3px,color:#000
    style C fill:#00b894,stroke:#00a085,stroke-width:2px,color:#000
&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🏗️ Architecture&lt;/h2&gt; 
&lt;h3&gt;📊 &lt;strong&gt;System Overview&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;DeepCode&lt;/strong&gt; is an AI-powered development platform that automates code generation and implementation tasks. Our multi-agent system handles the complexity of translating requirements into functional, well-structured code, allowing you to focus on innovation rather than implementation details.&lt;/p&gt; 
&lt;p&gt;🎯 &lt;strong&gt;Technical Capabilities&lt;/strong&gt;:&lt;/p&gt; 
&lt;p&gt;🧬 &lt;strong&gt;Research-to-Production Pipeline&lt;/strong&gt;&lt;br /&gt; Multi-modal document analysis engine that extracts algorithmic logic and mathematical models from academic papers. Generates optimized implementations with proper data structures while preserving computational complexity characteristics.&lt;/p&gt; 
&lt;p&gt;🪄 &lt;strong&gt;Natural Language Code Synthesis&lt;/strong&gt;&lt;br /&gt; Context-aware code generation using fine-tuned language models trained on curated code repositories. Maintains architectural consistency across modules while supporting multiple programming languages and frameworks.&lt;/p&gt; 
&lt;p&gt;⚡ &lt;strong&gt;Automated Prototyping Engine&lt;/strong&gt;&lt;br /&gt; Intelligent scaffolding system generating complete application structures including database schemas, API endpoints, and frontend components. Uses dependency analysis to ensure scalable architecture from initial generation.&lt;/p&gt; 
&lt;p&gt;💎 &lt;strong&gt;Quality Assurance Automation&lt;/strong&gt;&lt;br /&gt; Integrated static analysis with automated unit test generation and documentation synthesis. Employs AST analysis for code correctness and property-based testing for comprehensive coverage.&lt;/p&gt; 
&lt;p&gt;🔮 &lt;strong&gt;CodeRAG Integration System&lt;/strong&gt;&lt;br /&gt; Advanced retrieval-augmented generation combining semantic vector embeddings with graph-based dependency analysis. Automatically discovers optimal libraries and implementation patterns from large-scale code corpus.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;🔧 &lt;strong&gt;Core Techniques&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🧠 &lt;strong&gt;Intelligent Orchestration Agent&lt;/strong&gt;: Central decision-making system that coordinates workflow phases and analyzes requirements. Employs dynamic planning algorithms to adapt execution strategies in real-time based on evolving project complexity. Dynamically selects optimal processing strategies for each implementation step. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;💾 &lt;strong&gt;Efficient Memory Mechanism&lt;/strong&gt;: Advanced context engineering system that manages large-scale code contexts efficiently. Implements hierarchical memory structures with intelligent compression for handling complex codebases. This component enables instant retrieval of implementation patterns and maintains semantic coherence across extended development sessions. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔍 &lt;strong&gt;Advanced CodeRAG System&lt;/strong&gt;: Global code comprehension engine that analyzes complex inter-dependencies across repositories. Performs cross-codebase relationship mapping to understand architectural patterns from a holistic perspective. This module leverages dependency graphs and semantic analysis to provide globally-aware code recommendations during implementation.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;🤖 &lt;strong&gt;Multi-Agent Architecture of DeepCode&lt;/strong&gt;:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🎯 Central Orchestrating Agent&lt;/strong&gt;: Orchestrates entire workflow execution and makes strategic decisions. Coordinates specialized agents based on input complexity analysis. Implements dynamic task planning and resource allocation algorithms. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;📝 Intent Understanding Agent&lt;/strong&gt;: Performs deep semantic analysis of user requirements to decode complex intentions. Extracts functional specifications and technical constraints through advanced NLP processing. Transforms ambiguous human descriptions into precise, actionable development specifications with structured task decomposition. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;📄 Document Parsing Agent&lt;/strong&gt;: Processes complex technical documents and research papers with advanced parsing capabilities. Extracts algorithms and methodologies using document understanding models. Converts academic concepts into practical implementation specifications through intelligent content analysis. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🏗️ Code Planning Agent&lt;/strong&gt;: Performs architectural design and technology stack optimization. Dynamic planning for adaptive development roadmaps. Enforces coding standards and generates modular structures through automated design pattern selection.&lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🔍 Code Reference Mining Agent&lt;/strong&gt;: Discovers relevant repositories and frameworks through intelligent search algorithms. Analyzes codebases for compatibility and integration potential. Provides recommendations based on similarity metrics and automated dependency analysis. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;📚 Code Indexing Agent&lt;/strong&gt;: Builds comprehensive knowledge graphs of discovered codebases. Maintains semantic relationships between code components. Enables intelligent retrieval and cross-reference capabilities. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🧬 Code Generation Agent&lt;/strong&gt;: Synthesizes gathered information into executable code implementations. Creates functional interfaces and integrates discovered components. Generates comprehensive test suites and documentation for reproducibility.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h4&gt;🛠️ &lt;strong&gt;Implementation Tools Matrix&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;🔧 Powered by MCP (Model Context Protocol)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;DeepCode leverages the &lt;strong&gt;Model Context Protocol (MCP)&lt;/strong&gt; standard to seamlessly integrate with various tools and services. This standardized approach ensures reliable communication between AI agents and external systems, enabling powerful automation capabilities.&lt;/p&gt; 
&lt;h5&gt;📡 &lt;strong&gt;MCP Servers &amp;amp; Tools&lt;/strong&gt;&lt;/h5&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;🛠️ &lt;strong&gt;MCP Server&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;🔧 &lt;strong&gt;Primary Function&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;💡 &lt;strong&gt;Purpose &amp;amp; Capabilities&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🔍 brave&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Web Search Engine&lt;/td&gt; 
   &lt;td&gt;Real-time information retrieval via Brave Search API&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🌐 bocha-mcp&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Alternative Search&lt;/td&gt; 
   &lt;td&gt;Secondary search option with independent API access&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📂 filesystem&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;File System Operations&lt;/td&gt; 
   &lt;td&gt;Local file and directory management, read/write operations&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🌐 fetch&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Web Content Retrieval&lt;/td&gt; 
   &lt;td&gt;Fetch and extract content from URLs and web resources&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📥 github-downloader&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Repository Management&lt;/td&gt; 
   &lt;td&gt;Clone and download GitHub repositories for analysis&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📋 file-downloader&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Document Processing&lt;/td&gt; 
   &lt;td&gt;Download and convert files (PDF, DOCX, etc.) to Markdown&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;⚡ command-executor&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;System Commands&lt;/td&gt; 
   &lt;td&gt;Execute bash/shell commands for environment management&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🧬 code-implementation&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Code Generation Hub&lt;/td&gt; 
   &lt;td&gt;Comprehensive code reproduction with execution and testing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📚 code-reference-indexer&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Smart Code Search&lt;/td&gt; 
   &lt;td&gt;Intelligent indexing and search of code repositories&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📄 document-segmentation&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Smart Document Analysis&lt;/td&gt; 
   &lt;td&gt;Intelligent document segmentation for large papers and technical documents&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h5&gt;🔧 &lt;strong&gt;Legacy Tool Functions&lt;/strong&gt; &lt;em&gt;(for reference)&lt;/em&gt;&lt;/h5&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;🛠️ &lt;strong&gt;Function&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;🎯 &lt;strong&gt;Usage Context&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📄 read_code_mem&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Efficient code context retrieval from memory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;✍️ write_file&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Direct file content generation and modification&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🐍 execute_python&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Python code testing and validation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📁 get_file_structure&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Project structure analysis and organization&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;⚙️ set_workspace&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Dynamic workspace and environment configuration&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📊 get_operation_history&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Process monitoring and operation tracking&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;p&gt;🎛️ &lt;strong&gt;Multi-Interface Framework&lt;/strong&gt;&lt;br /&gt; RESTful API with CLI and web frontends featuring real-time code streaming, interactive debugging, and extensible plugin architecture for CI/CD integration.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🚀 Multi-Agent Intelligent Pipeline:&lt;/strong&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;🌟 &lt;strong&gt;Intelligence Processing Flow&lt;/strong&gt;&lt;/h3&gt; 
 &lt;table align="center" width="100%" style="border: none; border-collapse: collapse;"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 15px; color: white; font-weight: bold;"&gt; 💡 &lt;strong&gt;INPUT LAYER&lt;/strong&gt;&lt;br /&gt; 📄 Research Papers • 💬 Natural Language • 🌐 URLs • 📋 Requirements &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="20"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 15px; background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); border-radius: 12px; color: white; font-weight: bold;"&gt; 🎯 &lt;strong&gt;CENTRAL ORCHESTRATION&lt;/strong&gt;&lt;br /&gt; Strategic Decision Making • Workflow Coordination • Agent Management &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="center" style="padding: 12px; background: linear-gradient(135deg, #3742fa 0%, #2f3542 100%); border-radius: 10px; color: white; width: 50%;"&gt; 📝 &lt;strong&gt;TEXT ANALYSIS&lt;/strong&gt;&lt;br /&gt; &lt;small&gt;Requirement Processing&lt;/small&gt; &lt;/td&gt; 
    &lt;td width="10"&gt;&lt;/td&gt; 
    &lt;td align="center" style="padding: 12px; background: linear-gradient(135deg, #8c7ae6 0%, #9c88ff 100%); border-radius: 10px; color: white; width: 50%;"&gt; 📄 &lt;strong&gt;DOCUMENT ANALYSIS&lt;/strong&gt;&lt;br /&gt; &lt;small&gt;Paper &amp;amp; Spec Processing&lt;/small&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 15px; background: linear-gradient(135deg, #00d2d3 0%, #54a0ff 100%); border-radius: 12px; color: white; font-weight: bold;"&gt; 📋 &lt;strong&gt;REPRODUCTION PLANNING&lt;/strong&gt;&lt;br /&gt; Deep Paper Analysis • Code Requirements Parsing • Reproduction Strategy Development &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="center" style="padding: 12px; background: linear-gradient(135deg, #ffa726 0%, #ff7043 100%); border-radius: 10px; color: white; width: 50%;"&gt; 🔍 &lt;strong&gt;REFERENCE ANALYSIS&lt;/strong&gt;&lt;br /&gt; &lt;small&gt;Repository Discovery&lt;/small&gt; &lt;/td&gt; 
    &lt;td width="10"&gt;&lt;/td&gt; 
    &lt;td align="center" style="padding: 12px; background: linear-gradient(135deg, #e056fd 0%, #f368e0 100%); border-radius: 10px; color: white; width: 50%;"&gt; 📚 &lt;strong&gt;CODE INDEXING&lt;/strong&gt;&lt;br /&gt; &lt;small&gt;Knowledge Graph Building&lt;/small&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 15px; background: linear-gradient(135deg, #26de81 0%, #20bf6b 100%); border-radius: 12px; color: white; font-weight: bold;"&gt; 🧬 &lt;strong&gt;CODE IMPLEMENTATION&lt;/strong&gt;&lt;br /&gt; Implementation Generation • Testing • Documentation &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 20px; background: linear-gradient(135deg, #045de9 0%, #09c6f9 100%); border-radius: 15px; color: white; font-weight: bold;"&gt; ⚡ &lt;strong&gt;OUTPUT DELIVERY&lt;/strong&gt;&lt;br /&gt; 📦 Complete Codebase • 🧪 Test Suite • 📚 Documentation • 🚀 Deployment Ready &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;h3&gt;🔄 &lt;strong&gt;Process Intelligence Features&lt;/strong&gt;&lt;/h3&gt; 
 &lt;table align="center" style="border: none;"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align="center" width="25%" style="padding: 15px;"&gt; 
     &lt;div style="background: #f8f9fa; border-radius: 10px; padding: 15px; border-left: 4px solid #ff6b6b;"&gt; 
      &lt;h4&gt;🎯 Adaptive Flow&lt;/h4&gt; 
      &lt;p&gt;&lt;small&gt;Dynamic agent selection based on input complexity&lt;/small&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
    &lt;td align="center" width="25%" style="padding: 15px;"&gt; 
     &lt;div style="background: #f8f9fa; border-radius: 10px; padding: 15px; border-left: 4px solid #4ecdc4;"&gt; 
      &lt;h4&gt;🧠 Smart Coordination&lt;/h4&gt; 
      &lt;p&gt;&lt;small&gt;Intelligent task distribution and parallel processing&lt;/small&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
    &lt;td align="center" width="25%" style="padding: 15px;"&gt; 
     &lt;div style="background: #f8f9fa; border-radius: 10px; padding: 15px; border-left: 4px solid #45b7d1;"&gt; 
      &lt;h4&gt;🔍 Context Awareness&lt;/h4&gt; 
      &lt;p&gt;&lt;small&gt;Deep understanding through CodeRAG integration&lt;/small&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
    &lt;td align="center" width="25%" style="padding: 15px;"&gt; 
     &lt;div style="background: #f8f9fa; border-radius: 10px; padding: 15px; border-left: 4px solid #96ceb4;"&gt; 
      &lt;h4&gt;⚡ Quality Assurance&lt;/h4&gt; 
      &lt;p&gt;&lt;small&gt;Automated testing and validation throughout&lt;/small&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;h3&gt;📦 &lt;strong&gt;Step 1: Installation&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;⚡ &lt;strong&gt;Direct Installation (Recommended)&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 🚀 Install DeepCode package directly
pip install deepcode-hku

# 🔑 Download configuration files
curl -O https://raw.githubusercontent.com/HKUDS/DeepCode/main/mcp_agent.config.yaml
curl -O https://raw.githubusercontent.com/HKUDS/DeepCode/main/mcp_agent.secrets.yaml

# 🔑 Configure API keys (required)
# Edit mcp_agent.secrets.yaml with your API keys and base_url:
# - openai: api_key, base_url (for OpenAI/custom endpoints)
# - anthropic: api_key (for Claude models)

# 🔑 Configure search API keys for web search (optional)
# Edit mcp_agent.config.yaml to set your API keys:
# - For Brave Search: Set BRAVE_API_KEY: "your_key_here" in brave.env section (line ~28)
# - For Bocha-MCP: Set BOCHA_API_KEY: "your_key_here" in bocha-mcp.env section (line ~74)

# 📄 Configure document segmentation (optional)
# Edit mcp_agent.config.yaml to control document processing:
# - enabled: true/false (whether to use intelligent document segmentation)
# - size_threshold_chars: 50000 (document size threshold to trigger segmentation)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;🔧 &lt;strong&gt;Development Installation (From Source)&lt;/strong&gt;&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;📂 Click to expand development installation options&lt;/strong&gt;&lt;/summary&gt; 
 &lt;h5&gt;🔥 &lt;strong&gt;Using UV (Recommended for Development)&lt;/strong&gt;&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 🔽 Clone the repository
git clone https://github.com/HKUDS/DeepCode.git
cd DeepCode/

# 📦 Install UV package manager
curl -LsSf https://astral.sh/uv/install.sh | sh

# 🔧 Install dependencies with UV
uv venv --python=3.13
source .venv/bin/activate  # On Windows: .venv\Scripts\activate
uv pip install -r requirements.txt

# 🔑 Configure API keys (required)
# Edit mcp_agent.secrets.yaml with your API keys and base_url:
# - openai: api_key, base_url (for OpenAI/custom endpoints)
# - anthropic: api_key (for Claude models)

# 🔑 Configure search API keys for web search (optional)
# Edit mcp_agent.config.yaml to set your API keys:
# - For Brave Search: Set BRAVE_API_KEY: "your_key_here" in brave.env section (line ~28)
# - For Bocha-MCP: Set BOCHA_API_KEY: "your_key_here" in bocha-mcp.env section (line ~74)

# 📄 Configure document segmentation (optional)
# Edit mcp_agent.config.yaml to control document processing:
# - enabled: true/false (whether to use intelligent document segmentation)
# - size_threshold_chars: 50000 (document size threshold to trigger segmentation)
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;🐍 &lt;strong&gt;Using Traditional pip&lt;/strong&gt;&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 🔽 Clone the repository
git clone https://github.com/HKUDS/DeepCode.git
cd DeepCode/

# 📦 Install dependencies
pip install -r requirements.txt

# 🔑 Configure API keys (required)
# Edit mcp_agent.secrets.yaml with your API keys and base_url:
# - openai: api_key, base_url (for OpenAI/custom endpoints)
# - anthropic: api_key (for Claude models)

# 🔑 Configure search API keys for web search (optional)
# Edit mcp_agent.config.yaml to set your API keys:
# - For Brave Search: Set BRAVE_API_KEY: "your_key_here" in brave.env section (line ~28)
# - For Bocha-MCP: Set BOCHA_API_KEY: "your_key_here" in bocha-mcp.env section (line ~74)

# 📄 Configure document segmentation (optional)
# Edit mcp_agent.config.yaml to control document processing:
# - enabled: true/false (whether to use intelligent document segmentation)
# - size_threshold_chars: 50000 (document size threshold to trigger segmentation)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h4&gt;🪟 &lt;strong&gt;Windows Users: Additional MCP Server Configuration&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;If you're using Windows, you may need to configure MCP servers manually in &lt;code&gt;mcp_agent.config.yaml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Install MCP servers globally
npm i -g @modelcontextprotocol/server-brave-search
npm i -g @modelcontextprotocol/server-filesystem

# 2. Find your global node_modules path
npm -g root
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then update your &lt;code&gt;mcp_agent.config.yaml&lt;/code&gt; to use absolute paths:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;mcp:
  servers:
    brave:
      command: "node"
      args: ["C:/Program Files/nodejs/node_modules/@modelcontextprotocol/server-brave-search/dist/index.js"]
    filesystem:
      command: "node"
      args: ["C:/Program Files/nodejs/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js", "."]
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Replace the path with your actual global node_modules path from step 2.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;🔍 &lt;strong&gt;Search Server Configuration (Optional)&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;DeepCode supports multiple search servers for web search functionality. You can configure your preferred option in &lt;code&gt;mcp_agent.config.yaml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# Default search server configuration
# Options: "brave" or "bocha-mcp"
default_search_server: "brave"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Available Options:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🔍 Brave Search&lt;/strong&gt; (&lt;code&gt;"brave"&lt;/code&gt;):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Default option with high-quality search results&lt;/li&gt; 
   &lt;li&gt;Requires BRAVE_API_KEY configuration&lt;/li&gt; 
   &lt;li&gt;Recommended for most users&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🌐 Bocha-MCP&lt;/strong&gt; (&lt;code&gt;"bocha-mcp"&lt;/code&gt;):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Alternative search server option&lt;/li&gt; 
   &lt;li&gt;Requires BOCHA_API_KEY configuration&lt;/li&gt; 
   &lt;li&gt;Uses local Python server implementation&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;API Key Configuration in mcp_agent.config.yaml:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# For Brave Search (default) - around line 28
brave:
  command: "npx"
  args: ["-y", "@modelcontextprotocol/server-brave-search"]
  env:
    BRAVE_API_KEY: "your_brave_api_key_here"

# For Bocha-MCP (alternative) - around line 74
bocha-mcp:
  command: "python"
  args: ["tools/bocha_search_server.py"]
  env:
    PYTHONPATH: "."
    BOCHA_API_KEY: "your_bocha_api_key_here"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;💡 Tip&lt;/strong&gt;: Both search servers require API key configuration. Choose the one that best fits your API access and requirements.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;⚡ &lt;strong&gt;Step 2: Launch Application&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;🚀 &lt;strong&gt;Using Installed Package (Recommended)&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 🌐 Launch web interface directly
deepcode

# The application will automatically start at http://localhost:8501
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;🛠️ &lt;strong&gt;Using Source Code&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;Choose your preferred interface:&lt;/p&gt; 
&lt;h5&gt;🌐 &lt;strong&gt;Web Interface&lt;/strong&gt; (Recommended)&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using UV
uv run streamlit run ui/streamlit_app.py
# Or using traditional Python
streamlit run ui/streamlit_app.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://img.shields.io/badge/Access-localhost:8501-00d4ff?style=flat-square&amp;amp;logo=streamlit&amp;amp;logoColor=white" alt="Web Access" /&gt; 
&lt;/div&gt; 
&lt;h5&gt;🖥️ &lt;strong&gt;CLI Interface&lt;/strong&gt; (Advanced Users)&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using UV
uv run python cli/main_cli.py
# Or using traditional Python
python cli/main_cli.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://img.shields.io/badge/Mode-Interactive_Terminal-9b59b6?style=flat-square&amp;amp;logo=terminal&amp;amp;logoColor=white" alt="CLI Mode" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Step 3: Generate Code&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;📄 Input&lt;/strong&gt;: Upload your research paper, provide requirements, or paste a URL&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🤖 Processing&lt;/strong&gt;: Watch the multi-agent system analyze and plan&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Output&lt;/strong&gt;: Receive production-ready code with tests and documentation&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h2&gt;💡 Examples&lt;/h2&gt; 
&lt;h3&gt;🎬 &lt;strong&gt;Live Demonstrations&lt;/strong&gt;&lt;/h3&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="33%" align="center"&gt; &lt;h4&gt;📄 &lt;strong&gt;Paper2Code Demo&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;Research to Implementation&lt;/strong&gt;&lt;/p&gt; 
    &lt;div align="center"&gt; 
     &lt;a href="https://www.youtube.com/watch?v=MQZYpLkzsbw"&gt; &lt;img src="https://img.youtube.com/vi/MQZYpLkzsbw/maxresdefault.jpg" alt="Paper2Code Demo" width="100%" style="border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);" /&gt; &lt;/a&gt; 
     &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=MQZYpLkzsbw"&gt;▶️ Watch Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
     &lt;p&gt;&lt;em&gt;Transform academic papers into production-ready code automatically&lt;/em&gt;&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td width="33%" align="center"&gt; &lt;h4&gt;🖼️ &lt;strong&gt;Image Processing Demo&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;AI-Powered Image Tools&lt;/strong&gt;&lt;/p&gt; 
    &lt;div align="center"&gt; 
     &lt;a href="https://www.youtube.com/watch?v=nFt5mLaMEac"&gt; &lt;img src="https://img.youtube.com/vi/nFt5mLaMEac/maxresdefault.jpg" alt="Image Processing Demo" width="100%" style="border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);" /&gt; &lt;/a&gt; 
     &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=nFt5mLaMEac"&gt;▶️ Watch Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
     &lt;p&gt;&lt;em&gt;Intelligent image processing with background removal and enhancement&lt;/em&gt;&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td width="33%" align="center"&gt; &lt;h4&gt;🌐 &lt;strong&gt;Frontend Implementation&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;Complete Web Application&lt;/strong&gt;&lt;/p&gt; 
    &lt;div align="center"&gt; 
     &lt;a href="https://www.youtube.com/watch?v=78wx3dkTaAU"&gt; &lt;img src="https://img.youtube.com/vi/78wx3dkTaAU/maxresdefault.jpg" alt="Frontend Demo" width="100%" style="border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);" /&gt; &lt;/a&gt; 
     &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=78wx3dkTaAU"&gt;▶️ Watch Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
     &lt;p&gt;&lt;em&gt;Full-stack web development from concept to deployment&lt;/em&gt;&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;🆕 &lt;strong&gt;Recent Updates&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;📄 &lt;strong&gt;Smart Document Segmentation (v1.2.0)&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Intelligent Processing&lt;/strong&gt;: Automatically handles large research papers and technical documents that exceed LLM token limits&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable Control&lt;/strong&gt;: Toggle segmentation via configuration with size-based thresholds&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Semantic Analysis&lt;/strong&gt;: Advanced content understanding with algorithm, concept, and formula preservation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backward Compatibility&lt;/strong&gt;: Seamlessly falls back to traditional processing for smaller documents&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🚀 &lt;strong&gt;Coming Soon&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;We're continuously enhancing DeepCode with exciting new features:&lt;/p&gt; 
&lt;h4&gt;🔧 &lt;strong&gt;Enhanced Code Reliability &amp;amp; Validation&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Automated Testing&lt;/strong&gt;: Comprehensive functionality testing with execution verification and error detection.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code Quality Assurance&lt;/strong&gt;: Multi-level validation through static analysis, dynamic testing, and performance benchmarking.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Smart Debugging&lt;/strong&gt;: AI-powered error detection with automatic correction suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📊 &lt;strong&gt;PaperBench Performance Showcase&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Benchmark Dashboard&lt;/strong&gt;: Comprehensive performance metrics on the PaperBench evaluation suite.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Accuracy Metrics&lt;/strong&gt;: Detailed comparison with state-of-the-art paper reproduction systems.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Success Analytics&lt;/strong&gt;: Statistical analysis across paper categories and complexity levels.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;⚡ &lt;strong&gt;System-wide Optimizations&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Boost&lt;/strong&gt;: Multi-threaded processing and optimized agent coordination for faster generation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced Reasoning&lt;/strong&gt;: Advanced reasoning capabilities with improved context understanding.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Expanded Support&lt;/strong&gt;: Extended compatibility with additional programming languages and frameworks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⭐ Star History&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;em&gt;Community Growth Trajectory&lt;/em&gt;&lt;/p&gt; 
 &lt;a href="https://star-history.com/#HKUDS/DeepCode&amp;amp;Date"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=HKUDS/DeepCode&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=HKUDS/DeepCode&amp;amp;type=Date" /&gt; 
   &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=HKUDS/DeepCode&amp;amp;type=Date" style="border-radius: 15px; box-shadow: 0 0 30px rgba(0, 217, 255, 0.3);" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h3&gt;🚀 &lt;strong&gt;Ready to Transform Development?&lt;/strong&gt;&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt; &lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-quick-start"&gt;&lt;img src="https://img.shields.io/badge/🚀_Get_Started-00d4ff?style=for-the-badge&amp;amp;logo=rocket&amp;amp;logoColor=white" alt="Get Started" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HKUDS"&gt;&lt;img src="https://img.shields.io/badge/🏛️_View_on_GitHub-00d4ff?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="View on GitHub" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HKUDS/deepcode-agent"&gt;&lt;img src="https://img.shields.io/badge/⭐_Star_Project-00d4ff?style=for-the-badge&amp;amp;logo=star&amp;amp;logoColor=white" alt="Star Project" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;h3&gt;📄 &lt;strong&gt;License&lt;/strong&gt;&lt;/h3&gt; 
 &lt;img src="https://img.shields.io/badge/License-MIT-4ecdc4?style=for-the-badge&amp;amp;logo=opensourceinitiative&amp;amp;logoColor=white" alt="MIT License" /&gt; 
 &lt;p&gt;&lt;strong&gt;MIT License&lt;/strong&gt; - Copyright (c) 2025 Data Intelligence Lab, The University of Hong Kong&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;img src="https://visitor-badge.laobi.icu/badge?page_id=deepcode.readme&amp;amp;style=for-the-badge&amp;amp;color=00d4ff" alt="Visitors" /&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>ccxt/ccxt</title>
      <link>https://github.com/ccxt/ccxt</link>
      <description>&lt;p&gt;A cryptocurrency trading API with more than 100 exchanges in JavaScript / TypeScript / Python / C# / PHP / Go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CCXT – CryptoCurrency eXchange Trading Library&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/ccxt"&gt;&lt;img src="https://img.shields.io/npm/dy/ccxt.svg?sanitize=true" alt="NPM Downloads" /&gt;&lt;/a&gt; &lt;a href="https://npmjs.com/package/ccxt"&gt;&lt;img src="https://img.shields.io/npm/v/ccxt.svg?sanitize=true" alt="npm" /&gt;&lt;/a&gt; &lt;a href="https://pypi.python.org/pypi/ccxt"&gt;&lt;img src="https://img.shields.io/pypi/v/ccxt.svg?sanitize=true" alt="PyPI" /&gt;&lt;/a&gt; &lt;a href="https://www.nuget.org/packages/ccxt"&gt;&lt;img src="https://img.shields.io/nuget/v/ccxt" alt="NuGet version" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/ccxt/ccxt/go/v4"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/ccxt/ccxt/go/v4?utm_source=godoc" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/ccxt"&gt;&lt;img src="https://img.shields.io/discord/690203284119617602?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ccxt/ccxt/wiki/Exchange-Markets"&gt;&lt;img src="https://img.shields.io/badge/exchanges-105-blue.svg?sanitize=true" alt="Supported Exchanges" /&gt;&lt;/a&gt; &lt;a href="https://x.com/ccxt_official"&gt;&lt;img src="https://img.shields.io/twitter/follow/ccxt_official.svg?style=social&amp;amp;label=CCXT" alt="Follow CCXT at x.com" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A cryptocurrency trading API with more than 100 exchanges in JavaScript / TypeScript / Python / C# / PHP / Go.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/ccxt/ccxt/master/#install"&gt;Install&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/ccxt/ccxt/master/#usage"&gt;Usage&lt;/a&gt; · &lt;a href="https://github.com/ccxt/ccxt/wiki"&gt;Manual&lt;/a&gt; · &lt;a href="https://github.com/ccxt/ccxt/wiki/FAQ"&gt;FAQ&lt;/a&gt; · &lt;a href="https://github.com/ccxt/ccxt/tree/master/examples"&gt;Examples&lt;/a&gt; · &lt;a href="https://github.com/ccxt/ccxt/raw/master/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/ccxt/ccxt/master/#disclaimer"&gt;Disclaimer&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/ccxt/ccxt/master/#social"&gt;Social&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;The &lt;strong&gt;CCXT&lt;/strong&gt; library is used to connect and trade with cryptocurrency exchanges and payment processing services worldwide. It provides quick access to market data for storage, analysis, visualization, indicator development, algorithmic trading, strategy backtesting, bot programming, and related software engineering.&lt;/p&gt; 
&lt;p&gt;It is intended to be used by &lt;strong&gt;coders, developers, technically-skilled traders, data-scientists and financial analysts&lt;/strong&gt; for building trading algorithms.&lt;/p&gt; 
&lt;p&gt;Current feature list:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;support for many cryptocurrency exchanges — more coming soon&lt;/li&gt; 
 &lt;li&gt;fully implemented public and private APIs&lt;/li&gt; 
 &lt;li&gt;optional normalized data for cross-exchange analytics and arbitrage&lt;/li&gt; 
 &lt;li&gt;an out of the box unified API that is extremely easy to integrate&lt;/li&gt; 
 &lt;li&gt;works in Node 10.4+, Python 3, PHP 8.1+, netstandard2.0/2.1, Go 1.20+ and web browsers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;See Also&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;sub&gt;&lt;a href="https://tab-trader.com/?utm_source=ccxt"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/66755907-9c3e8880-eea1-11e9-846e-0bff349ceb87.png" alt="TabTrader" /&gt;&lt;/a&gt;&lt;/sub&gt; &lt;strong&gt;&lt;a href="https://tab-trader.com/?utm_source=ccxt"&gt;TabTrader&lt;/a&gt;&lt;/strong&gt; – trading on all exchanges in one app. Available on &lt;strong&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.tabtrader.android&amp;amp;referrer=utm_source%3Dccxt"&gt;Android&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://itunes.apple.com/app/apple-store/id1095716562?mt=8"&gt;iOS&lt;/a&gt;&lt;/strong&gt;!&lt;/li&gt; 
 &lt;li&gt;&lt;sub&gt;&lt;a href="https://www.freqtrade.io"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/114340585-8e35fa80-9b60-11eb-860f-4379125e2db6.png" alt="Freqtrade" /&gt;&lt;/a&gt;&lt;/sub&gt; &lt;strong&gt;&lt;a href="https://www.freqtrade.io"&gt;Freqtrade&lt;/a&gt;&lt;/strong&gt; – leading opensource cryptocurrency algorithmic trading software!&lt;/li&gt; 
 &lt;li&gt;&lt;sub&gt;&lt;a href="https://www.octobot.online"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/132113722-007fc092-7530-4b41-b929-b8ed380b7b2e.png" alt="OctoBot" /&gt;&lt;/a&gt;&lt;/sub&gt; &lt;strong&gt;&lt;a href="https://www.octobot.online"&gt;OctoBot&lt;/a&gt;&lt;/strong&gt; – cryptocurrency trading bot with an advanced web interface.&lt;/li&gt; 
 &lt;li&gt;&lt;sub&gt;&lt;a href="https://tokenbot.com/?utm_source=github&amp;amp;utm_medium=ccxt&amp;amp;utm_campaign=algodevs"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/152720975-0522b803-70f0-4f18-a305-3c99b37cd990.png" alt="TokenBot" /&gt;&lt;/a&gt;&lt;/sub&gt; &lt;strong&gt;&lt;a href="https://tokenbot.com/?utm_source=github&amp;amp;utm_medium=ccxt&amp;amp;utm_campaign=algodevs"&gt;TokenBot&lt;/a&gt;&lt;/strong&gt; – discover and copy the best algorithmic traders in the world.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Certified Cryptocurrency Exchanges&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;logo&lt;/th&gt; 
   &lt;th&gt;id&lt;/th&gt; 
   &lt;th&gt;name&lt;/th&gt; 
   &lt;th align="center"&gt;ver&lt;/th&gt; 
   &lt;th&gt;type&lt;/th&gt; 
   &lt;th&gt;certified&lt;/th&gt; 
   &lt;th align="center"&gt;pro&lt;/th&gt; 
   &lt;th&gt;discount&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;&lt;img src="https://github.com/user-attachments/assets/e9419b93-ccb0-46aa-9bff-c883f096274b" alt="binance" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;binance&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;Binance&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://developers.binance.com/en"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;&lt;img src="https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d10%25&amp;amp;color=orange" alt="Sign up with Binance using CCXT's referral link for a 10% discount!" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;&lt;img src="https://github.com/user-attachments/assets/871cbea7-eebb-4b28-b260-c1c91df0487a" alt="binanceusdm" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;binanceusdm&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;Binance USDⓈ-M&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://binance-docs.github.io/apidocs/futures/en/"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;&lt;img src="https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d10%25&amp;amp;color=orange" alt="Sign up with Binance USDⓈ-M using CCXT's referral link for a 10% discount!" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;&lt;img src="https://github.com/user-attachments/assets/387cfc4e-5f33-48cd-8f5c-cd4854dabf0c" alt="binancecoinm" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;binancecoinm&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;Binance COIN-M&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://binance-docs.github.io/apidocs/delivery/en/"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;&lt;img src="https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d10%25&amp;amp;color=orange" alt="Sign up with Binance COIN-M using CCXT's referral link for a 10% discount!" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.bybit.com/register?affiliate_id=35953"&gt;&lt;img src="https://github.com/user-attachments/assets/97a5d0b3-de10-423d-90e1-6620960025ed" alt="bybit" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bybit&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.bybit.com/register?affiliate_id=35953"&gt;Bybit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://bybit-exchange.github.io/docs/inverse/"&gt;&lt;img src="https://img.shields.io/badge/5-lightgray" alt="API Version 5" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.okx.com/join/CCXT2023"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/152485636-38b19e4a-bece-4dec-979a-5982859ffc04.jpg" alt="okx" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;okx&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.okx.com/join/CCXT2023"&gt;OKX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.okx.com/docs-v5/en/"&gt;&lt;img src="https://img.shields.io/badge/5-lightgray" alt="API Version 5" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.okx.com/join/CCXT2023"&gt;&lt;img src="https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d20%25&amp;amp;color=orange" alt="Sign up with OKX using CCXT's referral link for a 20% discount!" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.gate.io/signup/2436035"&gt;&lt;img src="https://github.com/user-attachments/assets/64f988c5-07b6-4652-b5c1-679a6bf67c85" alt="gate" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;gate&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.gate.io/signup/2436035"&gt;Gate.io&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.gate.io/docs/developers/apiv4/en/"&gt;&lt;img src="https://img.shields.io/badge/4-lightgray" alt="API Version 4" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.gate.io/signup/2436035"&gt;&lt;img src="https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d20%25&amp;amp;color=orange" alt="Sign up with Gate.io using CCXT's referral link for a 20% discount!" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.kucoin.com/ucenter/signup?rcode=E5wkqe"&gt;&lt;img src="https://user-images.githubusercontent.com/51840849/87295558-132aaf80-c50e-11ea-9801-a2fb0c57c799.jpg" alt="kucoin" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;kucoin&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.kucoin.com/ucenter/signup?rcode=E5wkqe"&gt;KuCoin&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.kucoin.com"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://futures.kucoin.com/?rcode=E5wkqe"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/147508995-9e35030a-d046-43a1-a006-6fabd981b554.jpg" alt="kucoinfutures" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;kucoinfutures&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://futures.kucoin.com/?rcode=E5wkqe"&gt;KuCoin Futures&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.kucoin.com/futures"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.bitget.com/expressly?languageType=0&amp;amp;channelCode=ccxt&amp;amp;vipCode=tg9j"&gt;&lt;img src="https://github.com/user-attachments/assets/fbaa10cc-a277-441d-a5b7-997dd9a87658" alt="bitget" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitget&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.bitget.com/expressly?languageType=0&amp;amp;channelCode=ccxt&amp;amp;vipCode=tg9j"&gt;Bitget&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.bitget.com/api-doc/common/intro"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://app.hyperliquid.xyz/"&gt;&lt;img src="https://github.com/ccxt/ccxt/assets/43336371/b371bc6c-4a8c-489f-87f4-20a913dd8d4b" alt="hyperliquid" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;hyperliquid&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.hyperliquid.xyz/"&gt;Hyperliquid&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/api"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/DEX-blue.svg?sanitize=true" alt="DEX - Distributed EXchange" title="DEX - Distributed EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.bitmex.com/app/register/NZTR1q"&gt;&lt;img src="https://github.com/user-attachments/assets/c78425ab-78d5-49d6-bd14-db7734798f04" alt="bitmex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitmex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.bitmex.com/app/register/NZTR1q"&gt;BitMEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.bitmex.com/app/apiOverview"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.bitmex.com/app/register/NZTR1q"&gt;&lt;img src="https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d10%25&amp;amp;color=orange" alt="Sign up with BitMEX using CCXT's referral link for a 10% discount!" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://bingx.com/invite/OHETOM"&gt;&lt;img src="https://github-production-user-asset-6210df.s3.amazonaws.com/1294454/253675376-6983b72e-4999-4549-b177-33b374c195e3.jpg" alt="bingx" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bingx&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://bingx.com/invite/OHETOM"&gt;BingX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://bingx-api.github.io/docs/"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.htx.com.vc/invite/en-us/1h?invite_code=6rmm2223"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/76137448-22748a80-604e-11ea-8069-6e389271911d.jpg" alt="htx" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;htx&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.htx.com.vc/invite/en-us/1h?invite_code=6rmm2223"&gt;HTX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://huobiapi.github.io/docs/spot/v1/en/"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.htx.com.vc/invite/en-us/1h?invite_code=6rmm2223"&gt;&lt;img src="https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d15%25&amp;amp;color=orange" alt="Sign up with HTX using CCXT's referral link for a 15% discount!" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.mexc.com/register?inviteCode=mexc-1FQ1GNu1"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/137283979-8b2a818d-8633-461b-bfca-de89e8c446b2.jpg" alt="mexc" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;mexc&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.mexc.com/register?inviteCode=mexc-1FQ1GNu1"&gt;MEXC Global&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://mexcdevelop.github.io/apidocs/"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://www.bitmart.com/?r=rQCFLh"&gt;&lt;img src="https://github.com/user-attachments/assets/0623e9c4-f50e-48c9-82bd-65c3908c3a14" alt="bitmart" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitmart&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://www.bitmart.com/?r=rQCFLh"&gt;BitMart&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://developer-pro.bitmart.com/"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://www.bitmart.com/?r=rQCFLh"&gt;&lt;img src="https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d30%25&amp;amp;color=orange" alt="Sign up with BitMart using CCXT's referral link for a 30% discount!" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://crypto.com/exch/kdacthrnxt"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/147792121-38ed5e36-c229-48d6-b49a-48d05fc19ed4.jpeg" alt="cryptocom" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;cryptocom&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://crypto.com/exch/kdacthrnxt"&gt;Crypto.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://exchange-docs.crypto.com/exchange/v1/rest-ws/index.html"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://crypto.com/exch/kdacthrnxt"&gt;&lt;img src="https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d75%25&amp;amp;color=orange" alt="Sign up with Crypto.com using CCXT's referral link for a 75% discount!" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.coinex.com/register?refer_code=yw5fz"&gt;&lt;img src="https://user-images.githubusercontent.com/51840849/87182089-1e05fa00-c2ec-11ea-8da9-cc73b45abbbc.jpg" alt="coinex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.coinex.com/register?refer_code=yw5fz"&gt;CoinEx&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.coinex.com/api/v2"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://global.hashkey.com/en-US/register/invite?invite_code=82FQUN"&gt;&lt;img src="https://github.com/user-attachments/assets/6dd6127b-cc19-4a13-9b29-a98d81f80e98" alt="hashkey" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;hashkey&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://global.hashkey.com/en-US/register/invite?invite_code=82FQUN"&gt;HashKey Global&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://hashkeyglobal-apidoc.readme.io/"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://woox.io/register?ref=DIJT0CNL"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/150730761-1a00e5e0-d28c-480f-9e65-089ce3e6ef3b.jpg" alt="woo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;woo&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://woox.io/register?ref=DIJT0CNL"&gt;WOO X&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.woox.io/"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://woox.io/register?ref=DIJT0CNL"&gt;&lt;img src="https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d35%25&amp;amp;color=orange" alt="Sign up with WOO X using CCXT's referral link for a 35% discount!" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://dex.woo.org/en/trade?ref=CCXT"&gt;&lt;img src="https://github.com/user-attachments/assets/9ba21b8a-a9c7-4770-b7f1-ce3bcbde68c1" alt="woofipro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;woofipro&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://dex.woo.org/en/trade?ref=CCXT"&gt;WOOFI PRO&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://orderly.network/docs/build-on-evm/building-on-evm"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/DEX-blue.svg?sanitize=true" alt="DEX - Distributed EXchange" title="DEX - Distributed EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://dex.woo.org/en/trade?ref=CCXT"&gt;&lt;img src="https://img.shields.io/static/v1?label=Fee&amp;amp;message=%2d5%25&amp;amp;color=orange" alt="Sign up with WOOFI PRO using CCXT's referral link for a 5% discount!" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Supported Cryptocurrency Exchanges&lt;/h2&gt; 
&lt;!-- init list --&gt;The CCXT library currently supports the following 102 cryptocurrency exchange markets and trading APIs: 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;logo&lt;/th&gt; 
   &lt;th&gt;id&lt;/th&gt; 
   &lt;th&gt;name&lt;/th&gt; 
   &lt;th align="center"&gt;ver&lt;/th&gt; 
   &lt;th&gt;type&lt;/th&gt; 
   &lt;th&gt;certified&lt;/th&gt; 
   &lt;th&gt;pro&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://alpaca.markets"&gt;&lt;img src="https://github.com/user-attachments/assets/e9476df8-a450-4c3e-ab9a-1a7794219e1b" alt="alpaca" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;alpaca&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://alpaca.markets"&gt;Alpaca&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://alpaca.markets/docs/"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://omni.apex.exchange/trade"&gt;&lt;img src="https://github.com/user-attachments/assets/fef8f2f7-4265-46aa-965e-33a91881cb00" alt="apex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;apex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://omni.apex.exchange/trade"&gt;Apex&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://api-docs.pro.apex.exchange"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/DEX-blue.svg?sanitize=true" alt="DEX - Distributed EXchange" title="DEX - Distributed EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://ascendex.com/en-us/register?inviteCode=EL6BXBQM"&gt;&lt;img src="https://github.com/user-attachments/assets/55bab6b9-d4ca-42a8-a0e6-fac81ae557f1" alt="ascendex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;ascendex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ascendex.com/en-us/register?inviteCode=EL6BXBQM"&gt;AscendEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://ascendex.github.io/ascendex-pro-api/#ascendex-pro-api-documentation"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://bequant.io/referral/dd104e3bee7634ec"&gt;&lt;img src="https://github.com/user-attachments/assets/0583ef1f-29fe-4b7c-8189-63565a0e2867" alt="bequant" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bequant&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://bequant.io/referral/dd104e3bee7634ec"&gt;Bequant&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://api.bequant.io/"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://b1.run/users/new?code=D3LLBVFT"&gt;&lt;img src="https://github.com/user-attachments/assets/4e5cfd53-98cc-4b90-92cd-0d7b512653d1" alt="bigone" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bigone&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://b1.run/users/new?code=D3LLBVFT"&gt;BigONE&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://open.big.one/docs/api.html"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;&lt;img src="https://github.com/user-attachments/assets/e9419b93-ccb0-46aa-9bff-c883f096274b" alt="binance" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;binance&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;Binance&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://developers.binance.com/en"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;&lt;img src="https://github.com/user-attachments/assets/387cfc4e-5f33-48cd-8f5c-cd4854dabf0c" alt="binancecoinm" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;binancecoinm&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;Binance COIN-M&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://binance-docs.github.io/apidocs/delivery/en/"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.binance.us/?ref=35005074"&gt;&lt;img src="https://github.com/user-attachments/assets/a9667919-b632-4d52-a832-df89f8a35e8c" alt="binanceus" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;binanceus&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.binance.us/?ref=35005074"&gt;Binance US&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/binance-us/binance-official-api-docs"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;&lt;img src="https://github.com/user-attachments/assets/871cbea7-eebb-4b28-b260-c1c91df0487a" alt="binanceusdm" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;binanceusdm&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://accounts.binance.com/en/register?ref=D7YA7CLY"&gt;Binance USDⓈ-M&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://binance-docs.github.io/apidocs/futures/en/"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://bingx.com/invite/OHETOM"&gt;&lt;img src="https://github-production-user-asset-6210df.s3.amazonaws.com/1294454/253675376-6983b72e-4999-4549-b177-33b374c195e3.jpg" alt="bingx" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bingx&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://bingx.com/invite/OHETOM"&gt;BingX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://bingx-api.github.io/docs/"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://bit2c.co.il/Aff/63bfed10-e359-420c-ab5a-ad368dab0baf"&gt;&lt;img src="https://github.com/user-attachments/assets/db0bce50-6842-4c09-a1d5-0c87d22118aa" alt="bit2c" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bit2c&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://bit2c.co.il/Aff/63bfed10-e359-420c-ab5a-ad368dab0baf"&gt;Bit2C&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.bit2c.co.il/home/api"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://bitbank.cc/"&gt;&lt;img src="https://github.com/user-attachments/assets/9d616de0-8a88-4468-8e38-d269acab0348" alt="bitbank" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitbank&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://bitbank.cc/"&gt;bitbank&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.bitbank.cc/"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://ref.bitbns.com/1090961"&gt;&lt;img src="https://github.com/user-attachments/assets/a5b9a562-cdd8-4bea-9fa7-fd24c1dad3d9" alt="bitbns" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitbns&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ref.bitbns.com/1090961"&gt;Bitbns&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://bitbns.com/trade/#/api-trading/"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.bitfinex.com"&gt;&lt;img src="https://github.com/user-attachments/assets/4a8e947f-ab46-481a-a8ae-8b20e9b03178" alt="bitfinex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitfinex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.bitfinex.com"&gt;Bitfinex&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.bitfinex.com/v2/docs/"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://bitflyer.com"&gt;&lt;img src="https://github.com/user-attachments/assets/d0217747-e54d-4533-8416-0d553dca74bb" alt="bitflyer" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitflyer&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://bitflyer.com"&gt;bitFlyer&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://lightning.bitflyer.com/docs?lang=en"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.bitget.com/expressly?languageType=0&amp;amp;channelCode=ccxt&amp;amp;vipCode=tg9j"&gt;&lt;img src="https://github.com/user-attachments/assets/fbaa10cc-a277-441d-a5b7-997dd9a87658" alt="bitget" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitget&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.bitget.com/expressly?languageType=0&amp;amp;channelCode=ccxt&amp;amp;vipCode=tg9j"&gt;Bitget&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.bitget.com/api-doc/common/intro"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.bithumb.com"&gt;&lt;img src="https://github.com/user-attachments/assets/c9e0eefb-4777-46b9-8f09-9d7f7c4af82d" alt="bithumb" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bithumb&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.bithumb.com"&gt;Bithumb&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://apidocs.bithumb.com"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://www.bitmart.com/?r=rQCFLh"&gt;&lt;img src="https://github.com/user-attachments/assets/0623e9c4-f50e-48c9-82bd-65c3908c3a14" alt="bitmart" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitmart&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://www.bitmart.com/?r=rQCFLh"&gt;BitMart&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://developer-pro.bitmart.com/"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.bitmex.com/app/register/NZTR1q"&gt;&lt;img src="https://github.com/user-attachments/assets/c78425ab-78d5-49d6-bd14-db7734798f04" alt="bitmex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitmex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.bitmex.com/app/register/NZTR1q"&gt;BitMEX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.bitmex.com/app/apiOverview"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.bitopro.com"&gt;&lt;img src="https://github.com/user-attachments/assets/affc6337-b95a-44bf-aacd-04f9722364f6" alt="bitopro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitopro&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.bitopro.com"&gt;BitoPro&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/bitoex/bitopro-offical-api-docs/raw/master/v3-1/rest-1/rest.md"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.bitrue.com/affiliate/landing?cn=600000&amp;amp;inviteCode=EZWETQE"&gt;&lt;img src="https://github.com/user-attachments/assets/67abe346-1273-461a-bd7c-42fa32907c8e" alt="bitrue" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitrue&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.bitrue.com/affiliate/landing?cn=600000&amp;amp;inviteCode=EZWETQE"&gt;Bitrue&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/Bitrue-exchange/bitrue-official-api-docs"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://bitso.com/?ref=itej"&gt;&lt;img src="https://github.com/user-attachments/assets/178c8e56-9054-4107-b192-5e5053d4f975" alt="bitso" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitso&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://bitso.com/?ref=itej"&gt;Bitso&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://bitso.com/api_info"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.bitstamp.net"&gt;&lt;img src="https://github.com/user-attachments/assets/d5480572-1fee-43cb-b900-d38c522d0024" alt="bitstamp" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitstamp&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.bitstamp.net"&gt;Bitstamp&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.bitstamp.net/api"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://bit.team/auth/sign-up?ref=bitboy2023"&gt;&lt;img src="https://github.com/user-attachments/assets/b41b5e0d-98e5-4bd3-8a6e-aeb230a4a135" alt="bitteam" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitteam&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://bit.team/auth/sign-up?ref=bitboy2023"&gt;BIT.TEAM&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://bit.team/trade/api/documentation"&gt;&lt;img src="https://img.shields.io/badge/2.0.6-lightgray" alt="API Version 2.0.6" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.bittrade.co.jp/register/?invite_code=znnq3"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/85734211-85755480-b705-11ea-8b35-0b7f1db33a2f.jpg" alt="bittrade" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bittrade&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.bittrade.co.jp/register/?invite_code=znnq3"&gt;BitTrade&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://api-doc.bittrade.co.jp"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://bitvavo.com/?a=24F34952F7"&gt;&lt;img src="https://github.com/user-attachments/assets/d213155c-8c71-4701-9bd5-45351febc2a8" alt="bitvavo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bitvavo&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://bitvavo.com/?a=24F34952F7"&gt;Bitvavo&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.bitvavo.com/"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://blockchain.com"&gt;&lt;img src="https://github.com/user-attachments/assets/975e3054-3399-4363-bcee-ec3c6d63d4e8" alt="blockchaincom" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;blockchaincom&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://blockchain.com"&gt;Blockchain.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://api.blockchain.com/v3"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://blofin.com/register?referral_code=f79EsS"&gt;&lt;img src="https://github.com/user-attachments/assets/518cdf80-f05d-4821-a3e3-d48ceb41d73b" alt="blofin" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;blofin&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://blofin.com/register?referral_code=f79EsS"&gt;BloFin&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://blofin.com/docs"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://btc-alpha.com/?r=123788"&gt;&lt;img src="https://github.com/user-attachments/assets/dce49f3a-61e5-4ba0-a2fe-41d192fd0e5d" alt="btcalpha" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;btcalpha&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://btc-alpha.com/?r=123788"&gt;BTC-Alpha&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://btc-alpha.github.io/api-docs"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.btcbox.co.jp/"&gt;&lt;img src="https://github.com/user-attachments/assets/1e2cb499-8d0f-4f8f-9464-3c015cfbc76b" alt="btcbox" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;btcbox&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.btcbox.co.jp/"&gt;BtcBox&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://blog.btcbox.jp/en/archives/8762"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://btcmarkets.net"&gt;&lt;img src="https://github.com/user-attachments/assets/8c8d6907-3873-4cc4-ad20-e22fba28247e" alt="btcmarkets" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;btcmarkets&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://btcmarkets.net"&gt;BTC Markets&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://api.btcmarkets.net/doc/v3"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.btcturk.com"&gt;&lt;img src="https://github.com/user-attachments/assets/10e0a238-9f60-4b06-9dda-edfc7602f1d6" alt="btcturk" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;btcturk&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.btcturk.com"&gt;BTCTurk&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/BTCTrader/broker-api-docs"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.bybit.com/register?affiliate_id=35953"&gt;&lt;img src="https://github.com/user-attachments/assets/97a5d0b3-de10-423d-90e1-6620960025ed" alt="bybit" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;bybit&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.bybit.com/register?affiliate_id=35953"&gt;Bybit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://bybit-exchange.github.io/docs/inverse/"&gt;&lt;img src="https://img.shields.io/badge/5-lightgray" alt="API Version 5" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://cex.io/r/0/up105393824/0/"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/27766442-8ddc33b0-5ed8-11e7-8b98-f786aef0f3c9.jpg" alt="cex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;cex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://cex.io/r/0/up105393824/0/"&gt;CEX.IO&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://trade.cex.io/docs/"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.coinbase.com/join/58cbe25a355148797479dbd2"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/40811661-b6eceae2-653a-11e8-829e-10bfadb078cf.jpg" alt="coinbase" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinbase&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.coinbase.com/join/58cbe25a355148797479dbd2"&gt;Coinbase Advanced&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://developers.coinbase.com/api/v2"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://coinbase.com/"&gt;&lt;img src="https://github.com/ccxt/ccxt/assets/43336371/34a65553-88aa-4a38-a714-064bd228b97e" alt="coinbaseexchange" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinbaseexchange&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://coinbase.com/"&gt;Coinbase Exchange&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.cloud.coinbase.com/exchange/docs/"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://international.coinbase.com"&gt;&lt;img src="https://github.com/ccxt/ccxt/assets/43336371/866ae638-6ab5-4ebf-ab2c-cdcce9545625" alt="coinbaseinternational" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinbaseinternational&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://international.coinbase.com"&gt;Coinbase International&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.cloud.coinbase.com/intx/docs"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://partner.coincatch.cc/bg/92hy70391729607848548"&gt;&lt;img src="https://github.com/user-attachments/assets/3d49065f-f05d-4573-88a2-1b5201ec6ff3" alt="coincatch" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coincatch&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://partner.coincatch.cc/bg/92hy70391729607848548"&gt;CoinCatch&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://coincatch.github.io/github.io/en/"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://coincheck.com"&gt;&lt;img src="https://user-images.githubusercontent.com/51840849/87182088-1d6d6380-c2ec-11ea-9c64-8ab9f9b289f5.jpg" alt="coincheck" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coincheck&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://coincheck.com"&gt;coincheck&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://coincheck.com/documents/exchange/api"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.coinex.com/register?refer_code=yw5fz"&gt;&lt;img src="https://user-images.githubusercontent.com/51840849/87182089-1e05fa00-c2ec-11ea-8da9-cc73b45abbbc.jpg" alt="coinex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.coinex.com/register?refer_code=yw5fz"&gt;CoinEx&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.coinex.com/api/v2"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0"&gt;&lt;img src="https://user-images.githubusercontent.com/51840849/87460806-1c9f3f00-c616-11ea-8c46-a77018a8f3f4.jpg" alt="coinmate" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinmate&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0"&gt;CoinMate&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://coinmate.docs.apiary.io"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://go.coinmetro.com/?ref=crypto24"&gt;&lt;img src="https://github.com/ccxt/ccxt/assets/43336371/e86f87ec-6ba3-4410-962b-f7988c5db539" alt="coinmetro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinmetro&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://go.coinmetro.com/?ref=crypto24"&gt;Coinmetro&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://documenter.getpostman.com/view/3653795/SVfWN6KS"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://coinone.co.kr"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/38003300-adc12fba-323f-11e8-8525-725f53c4a659.jpg" alt="coinone" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinone&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://coinone.co.kr"&gt;CoinOne&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://doc.coinone.co.kr"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://coins.ph/"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/225719995-48ab2026-4ddb-496c-9da7-0d7566617c9b.jpg" alt="coinsph" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinsph&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://coins.ph/"&gt;Coins.ph&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://coins-docs.github.io/rest-api"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.coinspot.com.au/register?code=PJURCU"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/28208429-3cacdf9a-6896-11e7-854e-4c79a772a30f.jpg" alt="coinspot" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;coinspot&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.coinspot.com.au/register?code=PJURCU"&gt;CoinSpot&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.coinspot.com.au/api"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://crypto.com/exch/kdacthrnxt"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/147792121-38ed5e36-c229-48d6-b49a-48d05fc19ed4.jpeg" alt="cryptocom" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;cryptocom&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://crypto.com/exch/kdacthrnxt"&gt;Crypto.com&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://exchange-docs.crypto.com/exchange/v1/rest-ws/index.html"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://app.cryptomus.com/signup/?ref=JRP4yj"&gt;&lt;img src="https://github.com/user-attachments/assets/8e0b1c48-7c01-4177-9224-f1b01d89d7e7" alt="cryptomus" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;cryptomus&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.cryptomus.com/signup/?ref=JRP4yj"&gt;Cryptomus&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://doc.cryptomus.com/personal"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://app.defx.com/join/6I2CZ7"&gt;&lt;img src="https://github.com/user-attachments/assets/4e92bace-d7a9-45ea-92be-122168dc87e4" alt="defx" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;defx&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.defx.com/join/6I2CZ7"&gt;Defx X&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.defx.com/docs"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/DEX-blue.svg?sanitize=true" alt="DEX - Distributed EXchange" title="DEX - Distributed EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.delta.exchange/app/signup/?code=IULYNB"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/99450025-3be60a00-2931-11eb-9302-f4fd8d8589aa.jpg" alt="delta" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;delta&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.delta.exchange/app/signup/?code=IULYNB"&gt;Delta Exchange&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.delta.exchange"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.deribit.com/reg-1189.4038"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/41933112-9e2dd65a-798b-11e8-8440-5bab2959fcb8.jpg" alt="deribit" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;deribit&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.deribit.com/reg-1189.4038"&gt;Deribit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.deribit.com/v2"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.derive.xyz/invite/3VB0B"&gt;&lt;img src="https://github.com/user-attachments/assets/f835b95f-033a-43dd-b6bb-24e698fc498c" alt="derive" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;derive&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.derive.xyz/invite/3VB0B"&gt;derive&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.derive.xyz/docs/"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/DEX-blue.svg?sanitize=true" alt="DEX - Distributed EXchange" title="DEX - Distributed EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.digifinex.com/en-ww/from/DhOzBg?channelCode=ljaUPp"&gt;&lt;img src="https://user-images.githubusercontent.com/51840849/87443315-01283a00-c5fe-11ea-8628-c2a0feaf07ac.jpg" alt="digifinex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;digifinex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.digifinex.com/en-ww/from/DhOzBg?channelCode=ljaUPp"&gt;DigiFinex&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.digifinex.com"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://exmo.me/?ref=131685"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/27766491-1b0ea956-5eda-11e7-9225-40d67b481b8d.jpg" alt="exmo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;exmo&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://exmo.me/?ref=131685"&gt;EXMO&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://exmo.me/en/api_doc?ref=131685"&gt;&lt;img src="https://img.shields.io/badge/1.1-lightgray" alt="API Version 1.1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://fmfw.io/referral/da948b21d6c92d69"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/159177712-b685b40c-5269-4cea-ac83-f7894c49525d.jpg" alt="fmfwio" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;fmfwio&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://fmfw.io/referral/da948b21d6c92d69"&gt;FMFW.io&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://api.fmfw.io/"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://app.foxbit.com.br"&gt;&lt;img src="https://github.com/user-attachments/assets/1f8faca2-ae2f-4222-b33e-5671e7d873dd" alt="foxbit" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;foxbit&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.foxbit.com.br"&gt;Foxbit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.foxbit.com.br"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.gate.io/signup/2436035"&gt;&lt;img src="https://github.com/user-attachments/assets/64f988c5-07b6-4652-b5c1-679a6bf67c85" alt="gate" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;gate&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.gate.io/signup/2436035"&gt;Gate.io&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.gate.io/docs/developers/apiv4/en/"&gt;&lt;img src="https://img.shields.io/badge/4-lightgray" alt="API Version 4" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://gemini.com/"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/27816857-ce7be644-6096-11e7-82d6-3c257263229c.jpg" alt="gemini" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;gemini&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gemini.com/"&gt;Gemini&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.gemini.com/rest-api"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://global.hashkey.com/en-US/register/invite?invite_code=82FQUN"&gt;&lt;img src="https://github.com/user-attachments/assets/6dd6127b-cc19-4a13-9b29-a98d81f80e98" alt="hashkey" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;hashkey&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://global.hashkey.com/en-US/register/invite?invite_code=82FQUN"&gt;HashKey Global&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://hashkeyglobal-apidoc.readme.io/"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/ccxt/ccxt/master/hibachi.xyz/r/ZBL2YFWIHU"&gt;&lt;img src="https://github.com/user-attachments/assets/7301bbb1-4f27-4167-8a55-75f74b14e973" alt="hibachi" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;hibachi&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/ccxt/ccxt/master/hibachi.xyz/r/ZBL2YFWIHU"&gt;Hibachi&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/ccxt/ccxt/master/undefined"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/DEX-blue.svg?sanitize=true" alt="DEX - Distributed EXchange" title="DEX - Distributed EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://hitbtc.com/?ref_id=5a5d39a65d466"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg" alt="hitbtc" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;hitbtc&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://hitbtc.com/?ref_id=5a5d39a65d466"&gt;HitBTC&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://api.hitbtc.com"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://pro.hollaex.com/signup?affiliation_code=QSWA6G"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/75841031-ca375180-5ddd-11ea-8417-b975674c23cb.jpg" alt="hollaex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;hollaex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://pro.hollaex.com/signup?affiliation_code=QSWA6G"&gt;HollaEx&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://apidocs.hollaex.com"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.htx.com.vc/invite/en-us/1h?invite_code=6rmm2223"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/76137448-22748a80-604e-11ea-8069-6e389271911d.jpg" alt="htx" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;htx&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.htx.com.vc/invite/en-us/1h?invite_code=6rmm2223"&gt;HTX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://huobiapi.github.io/docs/spot/v1/en/"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://app.hyperliquid.xyz/"&gt;&lt;img src="https://github.com/ccxt/ccxt/assets/43336371/b371bc6c-4a8c-489f-87f4-20a913dd8d4b" alt="hyperliquid" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;hyperliquid&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.hyperliquid.xyz/"&gt;Hyperliquid&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://hyperliquid.gitbook.io/hyperliquid-docs/for-developers/api"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/DEX-blue.svg?sanitize=true" alt="DEX - Distributed EXchange" title="DEX - Distributed EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.independentreserve.com"&gt;&lt;img src="https://user-images.githubusercontent.com/51840849/87182090-1e9e9080-c2ec-11ea-8e49-563db9a38f37.jpg" alt="independentreserve" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;independentreserve&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.independentreserve.com"&gt;Independent Reserve&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.independentreserve.com/API"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://indodax.com/ref/testbitcoincoid/1"&gt;&lt;img src="https://user-images.githubusercontent.com/51840849/87070508-9358c880-c221-11ea-8dc5-5391afbbb422.jpg" alt="indodax" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;indodax&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://indodax.com/ref/testbitcoincoid/1"&gt;INDODAX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/btcid/indodax-official-api-docs"&gt;&lt;img src="https://img.shields.io/badge/2.0-lightgray" alt="API Version 2.0" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.kraken.com"&gt;&lt;img src="https://user-images.githubusercontent.com/51840849/76173629-fc67fb00-61b1-11ea-84fe-f2de582f58a3.jpg" alt="kraken" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;kraken&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.kraken.com"&gt;Kraken&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.kraken.com/rest/"&gt;&lt;img src="https://img.shields.io/badge/0-lightgray" alt="API Version 0" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://futures.kraken.com/"&gt;&lt;img src="https://user-images.githubusercontent.com/24300605/81436764-b22fd580-9172-11ea-9703-742783e6376d.jpg" alt="krakenfutures" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;krakenfutures&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://futures.kraken.com/"&gt;Kraken Futures&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.kraken.com/api/docs/futures-api/trading/market-data/"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.kucoin.com/ucenter/signup?rcode=E5wkqe"&gt;&lt;img src="https://user-images.githubusercontent.com/51840849/87295558-132aaf80-c50e-11ea-9801-a2fb0c57c799.jpg" alt="kucoin" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;kucoin&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.kucoin.com/ucenter/signup?rcode=E5wkqe"&gt;KuCoin&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.kucoin.com"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://futures.kucoin.com/?rcode=E5wkqe"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/147508995-9e35030a-d046-43a1-a006-6fabd981b554.jpg" alt="kucoinfutures" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;kucoinfutures&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://futures.kucoin.com/?rcode=E5wkqe"&gt;KuCoin Futures&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.kucoin.com/futures"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://latoken.com/invite?r=mvgp2djk"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/61511972-24c39f00-aa01-11e9-9f7c-471f1d6e5214.jpg" alt="latoken" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;latoken&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://latoken.com/invite?r=mvgp2djk"&gt;Latoken&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://api.latoken.com"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.lbank.com/login/?icode=7QCY"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/38063602-9605e28a-3302-11e8-81be-64b1e53c4cfb.jpg" alt="lbank" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;lbank&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.lbank.com/login/?icode=7QCY"&gt;LBank&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.lbank.com/en-US/docs/index.html"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.luno.com/invite/44893A"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/27766607-8c1a69d8-5ede-11e7-930c-540b5eb9be24.jpg" alt="luno" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;luno&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.luno.com/invite/44893A"&gt;luno&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.luno.com/en/api"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.mercadobitcoin.com.br"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/27837060-e7c58714-60ea-11e7-9192-f05e86adb83f.jpg" alt="mercado" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;mercado&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.mercadobitcoin.com.br"&gt;Mercado Bitcoin&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.mercadobitcoin.com.br/api-doc"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.mexc.com/register?inviteCode=mexc-1FQ1GNu1"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/137283979-8b2a818d-8633-461b-bfca-de89e8c446b2.jpg" alt="mexc" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;mexc&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.mexc.com/register?inviteCode=mexc-1FQ1GNu1"&gt;MEXC Global&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://mexcdevelop.github.io/apidocs/"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://trade.mode.network?ref=MODETRADE"&gt;&lt;img src="https://github.com/user-attachments/assets/cec2b7f1-3b2b-4502-971b-447ee1937d6b" alt="modetrade" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;modetrade&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://trade.mode.network?ref=MODETRADE"&gt;Mode Trade&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/ccxt/ccxt/master/undefined"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/DEX-blue.svg?sanitize=true" alt="DEX - Distributed EXchange" title="DEX - Distributed EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.my.okx.com/join/CCXT2023"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/152485636-38b19e4a-bece-4dec-979a-5982859ffc04.jpg" alt="myokx" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;myokx&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.my.okx.com/join/CCXT2023"&gt;MyOKX (EEA)&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://my.okx.com/docs-v5/en/#overview"&gt;&lt;img src="https://img.shields.io/badge/5-lightgray" alt="API Version 5" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://one.ndax.io/bfQiSL"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/108623144-67a3ef00-744e-11eb-8140-75c6b851e945.jpg" alt="ndax" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;ndax&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://one.ndax.io/bfQiSL"&gt;NDAX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://apidoc.ndax.io/"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.novadax.com.br/?s=ccxt"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/92337550-2b085500-f0b3-11ea-98e7-5794fb07dd3b.jpg" alt="novadax" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;novadax&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.novadax.com.br/?s=ccxt"&gt;NovaDAX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://doc.novadax.com/pt-BR/"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://oceanex.pro/signup?referral=VE24QX"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/58385970-794e2d80-8001-11e9-889c-0567cd79b78e.jpg" alt="oceanex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;oceanex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://oceanex.pro/signup?referral=VE24QX"&gt;OceanEx&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://api.oceanex.pro/doc/v1"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.okcoin.com/account/register?flag=activity&amp;amp;channelId=600001513"&gt;&lt;img src="https://user-images.githubusercontent.com/51840849/87295551-102fbf00-c50e-11ea-90a9-462eebba5829.jpg" alt="okcoin" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;okcoin&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.okcoin.com/account/register?flag=activity&amp;amp;channelId=600001513"&gt;OKCoin&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.okcoin.com/docs/en/"&gt;&lt;img src="https://img.shields.io/badge/5-lightgray" alt="API Version 5" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.okx.com/join/CCXT2023"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/152485636-38b19e4a-bece-4dec-979a-5982859ffc04.jpg" alt="okx" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;okx&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.okx.com/join/CCXT2023"&gt;OKX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.okx.com/docs-v5/en/"&gt;&lt;img src="https://img.shields.io/badge/5-lightgray" alt="API Version 5" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.app.okx.com/join/CCXT2023"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/152485636-38b19e4a-bece-4dec-979a-5982859ffc04.jpg" alt="okxus" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;okxus&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.app.okx.com/join/CCXT2023"&gt;OKX (US)&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://app.okx.com/docs-v5/en/#overview"&gt;&lt;img src="https://img.shields.io/badge/5-lightgray" alt="API Version 5" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://onetrading.com/"&gt;&lt;img src="https://github.com/ccxt/ccxt/assets/43336371/bdbc26fd-02f2-4ca7-9f1e-17333690bb1c" alt="onetrading" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;onetrading&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://onetrading.com/"&gt;One Trading&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.onetrading.com"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://ox.fun/register?shareAccountId=5ZUD4a7G"&gt;&lt;img src="https://github.com/ccxt/ccxt/assets/43336371/6a196124-c1ee-4fae-8573-962071b61a85" alt="oxfun" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;oxfun&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ox.fun/register?shareAccountId=5ZUD4a7G"&gt;OXFUN&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.ox.fun/"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://p2pb2b.com?referral=ee784c53"&gt;&lt;img src="https://github.com/ccxt/ccxt/assets/43336371/8da13a80-1f0a-49be-bb90-ff8b25164755" alt="p2b" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;p2b&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://p2pb2b.com?referral=ee784c53"&gt;p2b&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/P2B-team/p2b-api-docs/raw/master/api-doc.md"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://app.paradex.trade/r/ccxt24"&gt;&lt;img src="https://github.com/user-attachments/assets/84628770-784e-4ec4-a759-ec2fbb2244ea" alt="paradex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;paradex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.paradex.trade/r/ccxt24"&gt;Paradex&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.api.testnet.paradex.trade/"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/DEX-blue.svg?sanitize=true" alt="DEX - Distributed EXchange" title="DEX - Distributed EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.paymium.com/page/sign-up?referral=eDAzPoRQFMvaAB8sf-qj"&gt;&lt;img src="https://user-images.githubusercontent.com/51840849/87153930-f0f02200-c2c0-11ea-9c0a-40337375ae89.jpg" alt="paymium" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;paymium&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.paymium.com/page/sign-up?referral=eDAzPoRQFMvaAB8sf-qj"&gt;Paymium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/Paymium/api-documentation"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://phemex.com/register?referralCode=EDNVJ"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/85225056-221eb600-b3d7-11ea-930d-564d2690e3f6.jpg" alt="phemex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;phemex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://phemex.com/register?referralCode=EDNVJ"&gt;Phemex&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://phemex-docs.github.io/#overview"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://poloniex.com/signup?c=UBFZJRPJ"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg" alt="poloniex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;poloniex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://poloniex.com/signup?c=UBFZJRPJ"&gt;Poloniex&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://api-docs.poloniex.com/spot/"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.probit.com/r/34608773"&gt;&lt;img src="https://user-images.githubusercontent.com/51840849/79268032-c4379480-7ea2-11ea-80b3-dd96bb29fd0d.jpg" alt="probit" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;probit&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.probit.com/r/34608773"&gt;ProBit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs-en.probit.com"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://timex.io/?refcode=1x27vNkTbP1uwkCck"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/70423869-6839ab00-1a7f-11ea-8f94-13ae72c31115.jpg" alt="timex" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;timex&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://timex.io/?refcode=1x27vNkTbP1uwkCck"&gt;TimeX&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://plasma-relay-backend.timex.io/swagger-ui/index.html"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://tokocrypto.com"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/183870484-d3398d0c-f6a1-4cce-91b8-d58792308716.jpg" alt="tokocrypto" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;tokocrypto&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://tokocrypto.com"&gt;Tokocrypto&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.tokocrypto.com/apidocs/"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://tradeogre.com"&gt;&lt;img src="https://github.com/ccxt/ccxt/assets/43336371/3aa748b7-ea44-45e9-a9e7-b1d207a2578a" alt="tradeogre" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;tradeogre&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://tradeogre.com"&gt;tradeogre&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://tradeogre.com/help/api"&gt;&lt;img src="https://img.shields.io/badge/2-lightgray" alt="API Version 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://upbit.com"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/49245610-eeaabe00-f423-11e8-9cba-4b0aed794799.jpg" alt="upbit" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;upbit&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://upbit.com"&gt;Upbit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.upbit.com/docs/%EC%9A%94%EC%B2%AD-%EC%88%98-%EC%A0%9C%ED%95%9C"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://wx.network"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/84547058-5fb27d80-ad0b-11ea-8711-78ac8b3c7f31.jpg" alt="wavesexchange" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;wavesexchange&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://wx.network"&gt;Waves.Exchange&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.wx.network"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/DEX-blue.svg?sanitize=true" alt="DEX - Distributed EXchange" title="DEX - Distributed EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://whitebit.com/referral/d9bdf40e-28f2-4b52-b2f9-cd1415d82963"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/66732963-8eb7dd00-ee66-11e9-849b-10d9282bb9e0.jpg" alt="whitebit" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;whitebit&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://whitebit.com/referral/d9bdf40e-28f2-4b52-b2f9-cd1415d82963"&gt;WhiteBit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/whitebit-exchange/api-docs"&gt;&lt;img src="https://img.shields.io/badge/4-lightgray" alt="API Version 4" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://woox.io/register?ref=DIJT0CNL"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/150730761-1a00e5e0-d28c-480f-9e65-089ce3e6ef3b.jpg" alt="woo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;woo&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://woox.io/register?ref=DIJT0CNL"&gt;WOO X&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.woox.io/"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://dex.woo.org/en/trade?ref=CCXT"&gt;&lt;img src="https://github.com/user-attachments/assets/9ba21b8a-a9c7-4770-b7f1-ce3bcbde68c1" alt="woofipro" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;woofipro&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://dex.woo.org/en/trade?ref=CCXT"&gt;WOOFI PRO&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://orderly.network/docs/build-on-evm/building-on-evm"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/DEX-blue.svg?sanitize=true" alt="DEX - Distributed EXchange" title="DEX - Distributed EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ccxt/ccxt/wiki/Certification"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Certified-green.svg?sanitize=true" alt="CCXT Certified" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.xt.com/en/accounts/register?ref=9PTM9VW"&gt;&lt;img src="https://user-images.githubusercontent.com/14319357/232636712-466df2fc-560a-4ca4-aab2-b1d954a58e24.jpg" alt="xt" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;xt&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.xt.com/en/accounts/register?ref=9PTM9VW"&gt;XT&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://doc.xt.com/"&gt;&lt;img src="https://img.shields.io/badge/4-lightgray" alt="API Version 4" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ccxt.pro"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Pro-black" alt="CCXT Pro" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.yobit.net"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/27766910-cdcbfdae-5eea-11e7-9859-03fea873272d.jpg" alt="yobit" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;yobit&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.yobit.net"&gt;YoBit&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.yobit.net/en/api/"&gt;&lt;img src="https://img.shields.io/badge/3-lightgray" alt="API Version 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://zaif.jp"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/27766927-39ca2ada-5eeb-11e7-972f-1b4199518ca6.jpg" alt="zaif" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;zaif&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://zaif.jp"&gt;Zaif&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://techbureau-api-document.readthedocs.io/ja/latest/index.html"&gt;&lt;img src="https://img.shields.io/badge/1-lightgray" alt="API Version 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://auth.zondaglobal.com/ref/jHlbB4mIkdS1"&gt;&lt;img src="https://user-images.githubusercontent.com/1294454/159202310-a0e38007-5e7c-4ba9-a32f-c8263a0291fe.jpg" alt="zonda" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;zonda&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://auth.zondaglobal.com/ref/jHlbB4mIkdS1"&gt;Zonda&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.zondacrypto.exchange/"&gt;&lt;img src="https://img.shields.io/badge/*-lightgray" alt="API Version *" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/badge/CEX-green.svg?sanitize=true" alt="CEX – Centralized EXchange" title="CEX – Centralized EXchange" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!-- end list --&gt; 
&lt;p&gt;The list above is updated frequently, new crypto markets, exchanges, bug fixes, and API endpoints are introduced on a regular basis. See the &lt;a href="https://github.com/ccxt/ccxt/wiki/"&gt;Manual&lt;/a&gt; for more details. If you can't find a cryptocurrency exchange in the list above and want it to be added, post a link to it by opening an issue here on GitHub or send us an email.&lt;/p&gt; 
&lt;p&gt;The library is under &lt;a href="https://github.com/ccxt/ccxt/raw/master/LICENSE.txt"&gt;MIT license&lt;/a&gt;, that means it's absolutely free for any developer to build commercial and opensource software on top of it, but use it at your own risk with no warranties, as is.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;The easiest way to install the CCXT library is to use a package manager:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/ccxt"&gt;ccxt in &lt;strong&gt;NPM&lt;/strong&gt;&lt;/a&gt; (JavaScript / Node v7.6+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.python.org/pypi/ccxt"&gt;ccxt in &lt;strong&gt;PyPI&lt;/strong&gt;&lt;/a&gt; (Python 3.7.0+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://packagist.org/packages/ccxt/ccxt"&gt;ccxt in &lt;strong&gt;Packagist/Composer&lt;/strong&gt;&lt;/a&gt; (PHP 8.1+)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.nuget.org/packages/ccxt"&gt;ccxt in &lt;strong&gt;Nuget&lt;/strong&gt;&lt;/a&gt; (netstandard 2.0)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/github.com/ccxt/ccxt/go/v4"&gt;ccxt in &lt;strong&gt;GO&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This library is shipped as an all-in-one module implementation with minimalistic dependencies and requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ccxt/ccxt/raw/master/js/"&gt;js/&lt;/a&gt; in JavaScript&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ccxt/ccxt/raw/master/python/"&gt;python/&lt;/a&gt; in Python (generated from TS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ccxt/ccxt/raw/master/php/"&gt;php/&lt;/a&gt; in PHP (generated from TS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ccxt/ccxt/raw/master/cs/"&gt;cs/&lt;/a&gt; in C# (generated from TS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ccxt/ccxt/raw/master/go/"&gt;go/&lt;/a&gt; in Go (generated from TS)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also clone it into your project directory from &lt;a href="https://github.com/ccxt/ccxt"&gt;ccxt GitHub repository&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/ccxt/ccxt.git  # including 1GB of commit history

# or

git clone https://github.com/ccxt/ccxt.git --depth 1  # avoid downloading 1GB of commit history
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;JavaScript (NPM)&lt;/h3&gt; 
&lt;p&gt;JavaScript version of CCXT works in both Node and web browsers. Requires ES6 and &lt;code&gt;async/await&lt;/code&gt; syntax support (Node 7.6.0+). When compiling with Webpack and Babel, make sure it is &lt;a href="https://github.com/ccxt/ccxt/issues/225#issuecomment-331905178"&gt;not excluded&lt;/a&gt; in your &lt;code&gt;babel-loader&lt;/code&gt; config.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/ccxt"&gt;ccxt in &lt;strong&gt;NPM&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm install ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-JavaScript"&gt;//cjs
var ccxt = require ('ccxt')
console.log (ccxt.exchanges) // print all available exchanges
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-Javascript"&gt;//esm
import {version, exchanges} from 'ccxt';
console.log(version, Object.keys(exchanges));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;JavaScript (for use with the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag):&lt;/h3&gt; 
&lt;p&gt;All-in-one browser bundle (dependencies included), served from a CDN of your choice:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;jsDelivr: &lt;a href="https://cdn.jsdelivr.net/npm/ccxt@4.5.4/dist/ccxt.browser.min.js"&gt;https://cdn.jsdelivr.net/npm/ccxt@4.5.4/dist/ccxt.browser.min.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;unpkg: &lt;a href="https://unpkg.com/ccxt@4.5.4/dist/ccxt.browser.min.js"&gt;https://unpkg.com/ccxt@4.5.4/dist/ccxt.browser.min.js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;CDNs are not updated in real-time and may have delays. Defaulting to the most recent version without specifying the version number is not recommended. Please, keep in mind that we are not responsible for the correct operation of those CDN servers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-HTML"&gt;&amp;lt;script type="text/javascript" src="https://cdn.jsdelivr.net/npm/ccxt@4.5.4/dist/ccxt.browser.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Creates a global &lt;code&gt;ccxt&lt;/code&gt; object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-JavaScript"&gt;console.log (ccxt.exchanges) // print all available exchanges
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/ccxt"&gt;ccxt in &lt;strong&gt;PyPI&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pip install ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-Python"&gt;import ccxt
print(ccxt.exchanges) # print a list of all available exchange classes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The library supports concurrent asynchronous mode with asyncio and async/await in Python 3.7.0+&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Python"&gt;import ccxt.async_support as ccxt # link against the asynchronous version of ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;orjson support&lt;/h4&gt; 
&lt;p&gt;CCXT also supports &lt;code&gt;orjson&lt;/code&gt; for parsing JSON since it is much faster than the builtin library. This is especially important when using websockets because some exchanges return big messages that need to be parsed and dispatched as quickly as possible.&lt;/p&gt; 
&lt;p&gt;However, &lt;code&gt;orjson&lt;/code&gt; is not enabled by default because it is not supported by every python interpreter. If you want to opt-in, you just need to install it (&lt;code&gt;pip install orjson&lt;/code&gt;) on your local environment. CCXT will detect the installion and pick it up automatically.&lt;/p&gt; 
&lt;h3&gt;PHP&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://packagist.org/packages/ccxt/ccxt"&gt;ccxt in PHP with &lt;strong&gt;Packagist/Composer&lt;/strong&gt;&lt;/a&gt; (PHP 8.1+)&lt;/p&gt; 
&lt;p&gt;It requires common PHP modules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;cURL&lt;/li&gt; 
 &lt;li&gt;mbstring (using UTF-8 is highly recommended)&lt;/li&gt; 
 &lt;li&gt;PCRE&lt;/li&gt; 
 &lt;li&gt;iconv&lt;/li&gt; 
 &lt;li&gt;gmp&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-PHP"&gt;include "ccxt.php";
var_dump (\ccxt\Exchange::$exchanges); // print a list of all available exchange classes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The library supports concurrent asynchronous mode using tools from &lt;a href="https://reactphp.org/"&gt;ReactPHP&lt;/a&gt; in PHP 8.1+. Read the &lt;a href="https://github.com/ccxt/ccxt/wiki/"&gt;Manual&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;.net/C#&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.nuget.org/packages/ccxt"&gt;ccxt in C# with &lt;strong&gt;Nuget&lt;/strong&gt;&lt;/a&gt; (netstandard 2.0 and netstandard 2.1)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-c#"&gt;using ccxt;
Console.WriteLine(ccxt.Exchanges) // check this later
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Go&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/ccxt/ccxt/go/v4"&gt;ccxt in GO with &lt;strong&gt;PKG&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;go install github.com/ccxt/ccxt/go/v4@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-Go"&gt;import "ccxt"
fmt.Println(ccxt.Exchanges)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;You can get CCXT installed in a container along with all the supported languages and dependencies. This may be useful if you want to contribute to CCXT (e.g. run the build scripts and tests — please see the &lt;a href="https://github.com/ccxt/ccxt/raw/master/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; document for the details on that).&lt;/p&gt; 
&lt;p&gt;Using &lt;code&gt;docker-compose&lt;/code&gt; (in the cloned CCXT repository):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker-compose run --rm ccxt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You don't need the Docker image if you're not going to develop CCXT. If you just want to use CCXT –&amp;nbsp;just install it as a regular package into your project.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Intro&lt;/h3&gt; 
&lt;p&gt;The CCXT library consists of a public part and a private part. Anyone can use the public part immediately after installation. Public APIs provide unrestricted access to public information for all exchange markets without the need to register a user account or have an API key.&lt;/p&gt; 
&lt;p&gt;Public APIs include the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;market data&lt;/li&gt; 
 &lt;li&gt;instruments/trading pairs&lt;/li&gt; 
 &lt;li&gt;price feeds (exchange rates)&lt;/li&gt; 
 &lt;li&gt;order books&lt;/li&gt; 
 &lt;li&gt;trade history&lt;/li&gt; 
 &lt;li&gt;tickers&lt;/li&gt; 
 &lt;li&gt;OHLC(V) for charting&lt;/li&gt; 
 &lt;li&gt;other public endpoints&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In order to trade with private APIs you need to obtain API keys from an exchange's website. It usually means signing up to the exchange and creating API keys for your account. Some exchanges require personal info or identification. Sometimes verification may be necessary as well. In this case you will need to register yourself, this library will not create accounts or API keys for you. Some exchanges expose API endpoints for registering an account, but most exchanges don't. You will have to sign up and create API keys on their websites.&lt;/p&gt; 
&lt;p&gt;Private APIs allow the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;manage personal account info&lt;/li&gt; 
 &lt;li&gt;query account balances&lt;/li&gt; 
 &lt;li&gt;trade by making market and limit orders&lt;/li&gt; 
 &lt;li&gt;deposit and withdraw fiat and crypto funds&lt;/li&gt; 
 &lt;li&gt;query personal orders&lt;/li&gt; 
 &lt;li&gt;get ledger history&lt;/li&gt; 
 &lt;li&gt;transfer funds between accounts&lt;/li&gt; 
 &lt;li&gt;use merchant services&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This library implements full public and private REST and WebSocket APIs for all exchanges in TypeScript, JavaScript, PHP and Python.&lt;/p&gt; 
&lt;p&gt;The CCXT library supports both camelcase notation (preferred in TypeScript and JavaScript) and underscore notation (preferred in Python and PHP), therefore all methods can be called in either notation or coding style in any language.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-JavaScript"&gt;// both of these notations work in JavaScript/Python/PHP
exchange.methodName ()  // camelcase pseudocode
exchange.method_name () // underscore pseudocode
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read the &lt;a href="https://github.com/ccxt/ccxt/wiki/"&gt;Manual&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;JavaScript&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;CCXT now supports ESM and CJS modules&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;CJS&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-JavaScript"&gt;// cjs example
'use strict';
const ccxt = require ('ccxt');

(async function () {
    let kraken    = new ccxt.kraken ()
    let bitfinex  = new ccxt.bitfinex ({ verbose: true })
    let huobipro  = new ccxt.huobipro ()
    let okcoinusd = new ccxt.okcoin ({
        apiKey: 'YOUR_PUBLIC_API_KEY',
        secret: 'YOUR_SECRET_PRIVATE_KEY',
    })

    const exchangeId = 'binance'
        , exchangeClass = ccxt[exchangeId]
        , exchange = new exchangeClass ({
            'apiKey': 'YOUR_API_KEY',
            'secret': 'YOUR_SECRET',
        })

    console.log (kraken.id,    await kraken.loadMarkets ())
    console.log (bitfinex.id,  await bitfinex.loadMarkets  ())
    console.log (huobipro.id,  await huobipro.loadMarkets ())

    console.log (kraken.id,    await kraken.fetchOrderBook (kraken.symbols[0]))
    console.log (bitfinex.id,  await bitfinex.fetchTicker ('BTC/USD'))
    console.log (huobipro.id,  await huobipro.fetchTrades ('ETH/USDT'))

    console.log (okcoinusd.id, await okcoinusd.fetchBalance ())

    // sell 1 BTC/USD for market price, sell a bitcoin for dollars immediately
    console.log (okcoinusd.id, await okcoinusd.createMarketSellOrder ('BTC/USD', 1))

    // buy 1 BTC/USD for $2500, you pay $2500 and receive ฿1 when the order is closed
    console.log (okcoinusd.id, await okcoinusd.createLimitBuyOrder ('BTC/USD', 1, 2500.00))

    // pass/redefine custom exchange-specific order params: type, amount, price or whatever
    // use a custom order type
    bitfinex.createLimitSellOrder ('BTC/USD', 1, 10, { 'type': 'trailing-stop' })

}) ();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ESM&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-Javascript"&gt;//esm example
import {version, binance} from 'ccxt';

console.log(version);
const exchange = new binance();
const ticker = await exchange.fetchTicker('BTC/USDT');
console.log(ticker);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-Python"&gt;# coding=utf-8

import ccxt

hitbtc   = ccxt.hitbtc({'verbose': True})
bitmex   = ccxt.bitmex()
huobipro = ccxt.huobipro()
exmo     = ccxt.exmo({
    'apiKey': 'YOUR_PUBLIC_API_KEY',
    'secret': 'YOUR_SECRET_PRIVATE_KEY',
})
kraken = ccxt.kraken({
    'apiKey': 'YOUR_PUBLIC_API_KEY',
    'secret': 'YOUR_SECRET_PRIVATE_KEY',
})

exchange_id = 'binance'
exchange_class = getattr(ccxt, exchange_id)
exchange = exchange_class({
    'apiKey': 'YOUR_API_KEY',
    'secret': 'YOUR_SECRET',
})

hitbtc_markets = hitbtc.load_markets()

print(hitbtc.id, hitbtc_markets)
print(bitmex.id, bitmex.load_markets())
print(huobipro.id, huobipro.load_markets())

print(hitbtc.fetch_order_book(hitbtc.symbols[0]))
print(bitmex.fetch_ticker('BTC/USD'))
print(huobipro.fetch_trades('LTC/USDT'))

print(exmo.fetch_balance())

# sell one ฿ for market price and receive $ right now
print(exmo.id, exmo.create_market_sell_order('BTC/USD', 1))

# limit buy BTC/EUR, you pay €2500 and receive ฿1  when the order is closed
print(exmo.id, exmo.create_limit_buy_order('BTC/EUR', 1, 2500.00))

# pass/redefine custom exchange-specific order params: type, amount, price, flags, etc...
kraken.create_market_buy_order('BTC/USD', 1, {'trading_agreement': 'agree'})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;PHP&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-PHP"&gt;include 'ccxt.php';

$poloniex = new \ccxt\poloniex ();
$bittrex  = new \ccxt\bittrex  (array ('verbose' =&amp;gt; true));
$quoinex  = new \ccxt\quoinex   ();
$zaif     = new \ccxt\zaif     (array (
    'apiKey' =&amp;gt; 'YOUR_PUBLIC_API_KEY',
    'secret' =&amp;gt; 'YOUR_SECRET_PRIVATE_KEY',
));
$hitbtc   = new \ccxt\hitbtc   (array (
    'apiKey' =&amp;gt; 'YOUR_PUBLIC_API_KEY',
    'secret' =&amp;gt; 'YOUR_SECRET_PRIVATE_KEY',
));

$exchange_id = 'binance';
$exchange_class = "\\ccxt\\$exchange_id";
$exchange = new $exchange_class (array (
    'apiKey' =&amp;gt; 'YOUR_API_KEY',
    'secret' =&amp;gt; 'YOUR_SECRET',
));

$poloniex_markets = $poloniex-&amp;gt;load_markets ();

var_dump ($poloniex_markets);
var_dump ($bittrex-&amp;gt;load_markets ());
var_dump ($quoinex-&amp;gt;load_markets ());

var_dump ($poloniex-&amp;gt;fetch_order_book ($poloniex-&amp;gt;symbols[0]));
var_dump ($bittrex-&amp;gt;fetch_trades ('BTC/USD'));
var_dump ($quoinex-&amp;gt;fetch_ticker ('ETH/EUR'));
var_dump ($zaif-&amp;gt;fetch_ticker ('BTC/JPY'));

var_dump ($zaif-&amp;gt;fetch_balance ());

// sell 1 BTC/JPY for market price, you pay ¥ and receive ฿ immediately
var_dump ($zaif-&amp;gt;id, $zaif-&amp;gt;create_market_sell_order ('BTC/JPY', 1));

// buy BTC/JPY, you receive ฿1 for ¥285000 when the order closes
var_dump ($zaif-&amp;gt;id, $zaif-&amp;gt;create_limit_buy_order ('BTC/JPY', 1, 285000));

// set a custom user-defined id to your order
$hitbtc-&amp;gt;create_order ('BTC/USD', 'limit', 'buy', 1, 3000, array ('clientOrderId' =&amp;gt; '123'));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;.net/C#&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-C#"&gt;using ccxt; // importing ccxt
namespace Project;
class Project {
    public async static Task CreateOrder() {
        var exchange = new Binance();
        exchange.apiKey = "my api key";
        exchange.secret = "my secret";
        // always use the capitalized method (CreateOrder instead of createOrder)
        var order = await exchange.CreateOrder("BTC/USDT", "limit", "buy", 1, 50);
        Console.WriteLine("Placed Order, order id: " + order.id);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Go&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-Go"&gt;package main
import (
	"github.com/ccxt/ccxt/go/v4/go"
	"fmt"
)

func main() {
	exchange := ccxt.NewBinance(map[string]interface{}{
		"apiKey": "MY KEY",
		"secret": "MY SECRET",
	})
	orderParams := map[string]interface{}{
		"clientOrderId": "myOrderId68768678",
	}

    &amp;lt;-exchange.LoadMarkets()

	order, err := exchange.CreateOrder("BTC/USDT", "limit", "buy", 0.001, ccxt.WithCreateOrderPrice(6000), ccxt.WithCreateOrderParams(orderParams))
	if err != nil {
		if ccxtError, ok := err.(*ccxt.Error); ok {
			if ccxtError.Type == "InvalidOrder" {
				fmt.Println("Invalid order")
			} else {
				fmt.Println("Some other error")
			}
		}
	} else {
		fmt.Println(*order.Id)
	}


    // fetching OHLCV
	ohlcv, err := exchange.FetchOHLCV("BTC/USDT", ccxt.WithFetchOHLCVTimeframe("5m"), ccxt.WithFetchOHLCVLimit(100))

	if err != nil {
		fmt.Println("Error: ", err)
	} else {
		fmt.Println("Got OHLCV!")
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Optional parameters&lt;/h4&gt; 
&lt;p&gt;Unlike Javascript/Python/PHP/C# Go does not support "traditional" optional parameters like &lt;code&gt;function a(optional = false)&lt;/code&gt;. However, the CCXT language and structure have some methods with optional params, and since the Go language is transpiled from the Typescript source, we had to find a way of representing them.&lt;/p&gt; 
&lt;p&gt;We have decided to "go" (pun intended) with Option structs and the &lt;code&gt;WithX&lt;/code&gt; methods.&lt;/p&gt; 
&lt;p&gt;For example, this function &lt;code&gt;FetchMyTrades&lt;/code&gt; supports 4 different "optional" parameters, symbol, since, limit, and params.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Golang"&gt;func (this *Binance) FetchMyTrades(options ...FetchMyTradesOptions) ([]Trade, error)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And we can provide them by doing&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Golang"&gt;trades, error := exchange.FetchMyTrades(ccxt.withFetchMyTradesSymbol("BTC/USDT"), ccxt.WithFetchOHLCVLimit(5), ccxt.WithFetchMyTradesParams(orderParams))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Lastly, just because the signature dictates that some argument like &lt;code&gt;symbol&lt;/code&gt; is optional, it will depend from exchange to exchange and you might need to provide it to avoid getting a &lt;code&gt;SymbolRequired&lt;/code&gt; error.&lt;/p&gt; 
&lt;p&gt;You can check different examples in the &lt;code&gt;examples/go&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h2&gt;CCXT CLI&lt;/h2&gt; 
&lt;p&gt;Read the documentation for more information and details: &lt;a href="https://github.com/ccxt/ccxt/tree/master/cli/README.md"&gt;docs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CCXT also provides a command-line interface (CLI) that enables direct interaction with any supported exchange from the terminal. You can quickly check balances, place orders, or fetch trade data—without the need to write or execute custom code. This is especially useful for simple or time-sensitive tasks that don’t warrant the overhead of building a full application.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;The CLI is available as a npm package and can be installed by doing&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm i ccxt-cli -g
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;--help&lt;/code&gt; option to view a general overview of how the CLI works. The tool allows you to invoke any CCXT method by specifying the exchange id, the methodName, and any required arguments.&lt;/p&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ccxt binance createOrder BTC/USDT market buy 0.1 // places an order
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are not sure which arguments should be provided you can always use the &lt;code&gt;explain&lt;/code&gt; command.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ccxt explain createOrder
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;result:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Method: createOrder
Usage:
  binance createOrder &amp;lt;symbol&amp;gt; &amp;lt;type&amp;gt; &amp;lt;side&amp;gt; &amp;lt;amount&amp;gt; [price] [params]

Arguments:
  - symbol       (required) — Market symbol e.g., BTC/USDT
  - type         (required) — (no description available)
  - side         (required) — order side e.g., buy or sell
  - amount       (required) — (no description available)
  - price        (optional) — Price per unit of asset e.g., 26000.50
  - params       (optional) — Extra parameters for the exchange e.g., { "recvWindow": 5000 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can easily provide API keys by setting them as environment varibales eg: &lt;code&gt;BINANCE_APIKEY="XXXX"&lt;/code&gt; or adding them to the config file located at &lt;code&gt;$CACHE/config.json&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read the &lt;a href="https://github.com/ccxt/ccxt/raw/master/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; document before making changes that you would like adopted in the code. Also, read the &lt;a href="https://github.com/ccxt/ccxt/wiki"&gt;Manual&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Support Developer Team&lt;/h2&gt; 
&lt;p&gt;We are investing a significant amount of time into the development of this library. If CCXT made your life easier and you want to help us improve it further, or if you want to speed up development of new features and exchanges, please support us with a tip. We appreciate all contributions!&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://vitalitycrypto.com/"&gt;&lt;img src="https://github.com/user-attachments/assets/0981aae2-3e12-4b57-8d2f-c5ae2b3b8b1c" alt="Vitality" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Support this project by becoming a sponsor.&lt;/p&gt; 
&lt;p&gt;[&lt;a href="https://opencollective.com/ccxt#sponsor"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/ccxt/tiers/sponsor/0/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/sponsor/0/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/sponsor/1/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/sponsor/1/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/sponsor/2/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/sponsor/2/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/sponsor/3/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/sponsor/3/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/sponsor/4/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/sponsor/4/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/sponsor/5/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/sponsor/5/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/sponsor/6/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/sponsor/6/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/sponsor/7/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/sponsor/7/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/sponsor/8/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/sponsor/8/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/sponsor/9/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/sponsor/9/avatar.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Supporters&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a supporter. Your avatar will show up here with a link to your website.&lt;/p&gt; 
&lt;p&gt;[&lt;a href="https://opencollective.com/ccxt#supporter"&gt;Become a supporter&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/ccxt/tiers/supporter/0/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/supporter/0/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/supporter/1/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/supporter/1/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/supporter/2/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/supporter/2/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/supporter/3/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/supporter/3/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/supporter/4/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/supporter/4/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/supporter/5/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/supporter/5/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/supporter/6/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/supporter/6/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/supporter/7/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/supporter/7/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/supporter/8/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/supporter/8/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/ccxt/tiers/supporter/9/website" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/supporter/9/avatar.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! [&lt;a href="https://opencollective.com/ccxt#backer"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/ccxt#backers" target="_blank"&gt;&lt;img src="https://opencollective.com/ccxt/tiers/backer.svg?width=890" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thank you!&lt;/p&gt; 
&lt;h2&gt;Social&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;sub&gt;&lt;a href="https://twitter.com/ccxt_official"&gt;&lt;img src="https://img.shields.io/twitter/follow/ccxt_official?style=social" alt="Twitter" /&gt;&lt;/a&gt;&lt;/sub&gt; Follow us on Twitter&lt;/li&gt; 
 &lt;li&gt;&lt;sub&gt;&lt;a href="https://medium.com/@ccxt"&gt;&lt;img src="https://img.shields.io/badge/read-our%20blog-black?logo=medium" alt="Medium" /&gt;&lt;/a&gt;&lt;/sub&gt; Read our blog on Medium&lt;/li&gt; 
 &lt;li&gt;&lt;sub&gt;&lt;a href="https://discord.gg/dhzSKYU"&gt;&lt;img src="https://img.shields.io/discord/690203284119617602?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/sub&gt; Join our Discord&lt;/li&gt; 
 &lt;li&gt;&lt;sub&gt;&lt;a href="https://t.me/ccxt_announcements"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Channel-blue?logo=telegram" alt="Telegram Announcements" /&gt;&lt;/a&gt;&lt;/sub&gt; CCXT Channel on Telegram (important announcements)&lt;/li&gt; 
 &lt;li&gt;&lt;sub&gt;&lt;a href="https://t.me/ccxt_chat"&gt;&lt;img src="https://img.shields.io/badge/CCXT-Chat-blue?logo=telegram" alt="Telegram Chat" /&gt;&lt;/a&gt;&lt;/sub&gt; CCXT Chat on Telegram (technical support)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#ccxt/ccxt&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=ccxt/ccxt&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;CCXT is not a service nor a server. CCXT is a software. &lt;strong&gt;CCXT is a free open source non-custodian API broker software under MIT license&lt;/strong&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Non-custodian&lt;/strong&gt; means CCXT is not an intermediary in trading, it does not hold traders' money at any point in time, traders install CCXT and use CCXT to talk to exchanges directly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MIT license&lt;/strong&gt; means CCXT can be used for any purpose, but use at your own risk without any warranties.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API broker&lt;/strong&gt; means CCXT is funded with rebates from exchanges' API broker programs and it is an official API broker with many exchanges, all rebates and related fees are handled by the exchanges solely in accordance with exchanges' respective terms and conditions established by each partner exchange.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Free software&lt;/strong&gt; means CCXT is free to use and has no hidden fees, with CCXT traders pay the same trading fees they would pay to the exchanges directly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Open source&lt;/strong&gt; means anyone is allowed to use it, to look inside the code and to change everything, including other brokers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;p&gt;For business inquiries: &lt;a href="mailto:info@ccxt.trade"&gt;info@ccxt.trade&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>