<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Weekly Trending</title>
    <description>Weekly Trending of TypeScript in GitHub</description>
    <pubDate>Fri, 17 Oct 2025 01:49:45 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>xyflow/xyflow</title>
      <link>https://github.com/xyflow/xyflow</link>
      <description>&lt;p&gt;React Flow | Svelte Flow - Powerful open source libraries for building node-based UIs with React (https://reactflow.dev) or Svelte (https://svelteflow.dev). Ready out-of-the-box and infinitely customizable.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/2857535/279643999-ffda9f91-6b6d-447d-82be-fcbd6103edb6.svg#gh-light-mode-only" alt="xyflow-header" /&gt; &lt;img src="https://user-images.githubusercontent.com/2857535/279644026-a01c231c-6c6e-4b41-96e0-a85c75c9acee.svg#gh-dark-mode-only" alt="xyflow-header-dark" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;img src="https://img.shields.io/github/license/wbkd/react-flow?color=%23ff0072" alt="GitHub License MIT" /&gt; &lt;img src="https://img.shields.io/npm/dt/reactflow?color=%23FF0072&amp;amp;label=React%20Flow%20downloads" alt="npm downloads" /&gt; &lt;img src="https://img.shields.io/npm/dt/@xyflow/svelte?color=%23FF3E00&amp;amp;label=Svelte%20Flow%20downloads" alt="npm downloads" /&gt;&lt;/p&gt; 
 &lt;p&gt;Powerful open source libraries for building node-based UIs with React or Svelte. Ready out-of-the-box and infinitely customizable.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://reactflow.dev/"&gt;React Flow&lt;/a&gt; · &lt;a href="https://svelteflow.dev/"&gt;Svelte Flow&lt;/a&gt; · &lt;a href="https://reactflow.dev/pro"&gt;React Flow Pro&lt;/a&gt; · &lt;a href="https://discord.gg/Bqt6xrs"&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;The xyflow mono repo&lt;/h2&gt; 
&lt;p&gt;The xyflow repository is the home of four packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;React Flow 12 &lt;code&gt;@xyflow/react&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/packages/react"&gt;packages/react&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;React Flow 11 &lt;code&gt;reactflow&lt;/code&gt; &lt;a href="https://github.com/xyflow/xyflow/tree/v11"&gt;v11 branch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Svelte Flow &lt;code&gt;@xyflow/svelte&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/packages/svelte"&gt;packages/svelte&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shared helper library &lt;code&gt;@xyflow/system&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/packages/system"&gt;packages/system&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Commercial usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Are you using React Flow or Svelte Flow for a personal project?&lt;/strong&gt; Great! No sponsorship needed, you can support us by reporting any bugs you find, sending us screenshots of your projects, and starring us on Github 🌟&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Are you using React Flow or Svelte Flow at your organization and making money from it?&lt;/strong&gt; Awesome! We rely on your support to keep our libraries developed and maintained under an MIT License, just how we like it. For React Flow you can do that on the &lt;a href="https://reactflow.dev/pro"&gt;React Flow Pro website&lt;/a&gt; and for both of our libraries you can do it through &lt;a href="https://github.com/sponsors/xyflow"&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;The best way to get started is to check out the &lt;a href="https://reactflow.dev/learn"&gt;React Flow&lt;/a&gt; or &lt;a href="https://svelteflow.dev/learn"&gt;Svelte Flow&lt;/a&gt; learn section. However if you want to get a sneak peek of how to install and use the libraries you can see it here:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;React Flow&lt;/strong&gt; basic usage&lt;/summary&gt; 
 &lt;h3&gt;Installation&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;npm install @xyflow/react
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Basic usage&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-jsx"&gt;import { useCallback } from 'react';
import {
ReactFlow,
MiniMap,
Controls,
Background,
useNodesState,
useEdgesState,
addEdge,
} from '@xyflow/react';

import '@xyflow/react/dist/style.css';

const initialNodes = [
{ id: '1', position: { x: 0, y: 0 }, data: { label: '1' } },
{ id: '2', position: { x: 0, y: 100 }, data: { label: '2' } },
];

const initialEdges = [{ id: 'e1-2', source: '1', target: '2' }];

function Flow() {
const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);
const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);

const onConnect = useCallback((params) =&amp;gt; setEdges((eds) =&amp;gt; addEdge(params, eds)), [setEdges]);

return (
  &amp;lt;ReactFlow
    nodes={nodes}
    edges={edges}
    onNodesChange={onNodesChange}
    onEdgesChange={onEdgesChange}
    onConnect={onConnect}
  &amp;gt;
    &amp;lt;MiniMap /&amp;gt;
    &amp;lt;Controls /&amp;gt;
    &amp;lt;Background /&amp;gt;
  &amp;lt;/ReactFlow&amp;gt;
);
}

export default Flow;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Svelte Flow&lt;/strong&gt; basic usage&lt;/summary&gt; 
 &lt;h3&gt;Installation&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;npm install @xyflow/svelte
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Basic usage&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-svelte"&gt;&amp;lt;script lang="ts"&amp;gt;
import { writable } from 'svelte/store';
import {
  SvelteFlow,
  Controls,
  Background,
  BackgroundVariant,
  MiniMap,
} from '@xyflow/svelte';

import '@xyflow/svelte/dist/style.css'

const nodes = writable([
  {
    id: '1',
    type: 'input',
    data: { label: 'Input Node' },
    position: { x: 0, y: 0 }
  },
  {
    id: '2',
    type: 'custom',
    data: { label: 'Node' },
    position: { x: 0, y: 150 }
  }
]);

const edges = writable([
  {
    id: '1-2',
    type: 'default',
    source: '1',
    target: '2',
    label: 'Edge Text'
  }
]);
&amp;lt;/script&amp;gt;

&amp;lt;SvelteFlow
{nodes}
{edges}
fitView
on:nodeclick={(event) =&amp;gt; console.log('on node click', event)}
&amp;gt;
&amp;lt;Controls /&amp;gt;
&amp;lt;Background variant={BackgroundVariant.Dots} /&amp;gt;
&amp;lt;MiniMap /&amp;gt;
&amp;lt;/SvelteFlow&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;For releasing packages we are using &lt;a href="https://github.com/changesets/changesets"&gt;changesets&lt;/a&gt; in combination with the &lt;a href="https://github.com/changesets/action"&gt;changeset Github action&lt;/a&gt;. The rough idea is:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;create PRs for new features, updates and fixes (with a changeset if relevant for changelog)&lt;/li&gt; 
 &lt;li&gt;merge into main&lt;/li&gt; 
 &lt;li&gt;changset creates a PR that bumps all packages based on the changesets&lt;/li&gt; 
 &lt;li&gt;merge changeset PR if you want to release to Github and npm&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Built by &lt;a href="https://xyflow.com"&gt;xyflow&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;React Flow and Svelte Flow are maintained by the &lt;a href="https://xyflow.com/about"&gt;xyflow team&lt;/a&gt;. If you need help or want to talk to us about a collaboration, reach out through our&amp;nbsp;&lt;a href="https://xyflow.com/contact"&gt;contact form&lt;/a&gt;&amp;nbsp;or by joining our &lt;a href="https://discord.gg/Bqt6xrs"&gt;Discord Server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;React Flow and Svelte Flow are &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/LICENSE"&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>waifu-project/movie</title>
      <link>https://github.com/waifu-project/movie</link>
      <description>&lt;p&gt;小猫影视是一款全平台的影视播放器, 支持 VOD/JS 扩展源&lt;/p&gt;&lt;hr&gt;&lt;img src="https://raw.githubusercontent.com/waifu-project/movie/dev/logo.png" width="108" /&gt; 
&lt;h2&gt;小猫影视&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;strong&gt;小猫影视在 &lt;a href="https://github.com/waifu-project/movie/releases/tag/release-v2.5.9"&gt;2.5.9&lt;/a&gt; 之后已转向闭源&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;反馈和建议同样可以在 &lt;a href="https://github.com/waifu-project/movie/issues"&gt;issue&lt;/a&gt; 中提出 或者也可以在 &lt;a href="https://t.me/catmovie1145"&gt;Telegram&lt;/a&gt; 群组里反馈&lt;/p&gt; 
 &lt;p&gt;小猫其他指南: &lt;a href="https://xmpro.netlify.app"&gt;xmpro.netlify.app&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;全平台支持, 支持 &lt;code&gt;Android&lt;/code&gt; | &lt;code&gt;Windows&lt;/code&gt; | &lt;code&gt;Macos&lt;/code&gt; | &lt;code&gt;iOS&lt;/code&gt; | &lt;code&gt;Linux&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/macOS-000000?style=flat&amp;amp;logo=apple&amp;amp;logoColor=white" alt="" /&gt; &lt;img src="https://img.shields.io/badge/iOS-000000?style=flat&amp;amp;logoColor=white" alt="" /&gt; &lt;img src="https://img.shields.io/badge/Linux-FCC624?style=flat&amp;amp;logo=linux&amp;amp;logoColor=black" alt="" /&gt; &lt;img src="https://img.shields.io/badge/Windows-0078D6?style=flat&amp;amp;logo=windows&amp;amp;logoColor=white" alt="" /&gt; &lt;img src="https://img.shields.io/badge/Android-3DDC84?style=flat&amp;amp;logo=android&amp;amp;logoColor=white" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;另请关注公众号, 关注不迷路 🧚‍♀ ️&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://s2.loli.net/2025/10/11/GP2tCEfmzDnVALX.png" alt="公众号.png" /&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;查看截图 🖼️&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://s2.loli.net/2025/09/14/QJmYod9K7G6cRkE.png" alt="首页" /&gt; &lt;img src="https://s2.loli.net/2025/09/14/8eEsAtpcM3dIX5C.png" alt="搜索" /&gt; &lt;img src="https://s2.loli.net/2025/09/14/trgyicKe47mf5I2.png" alt="TV" /&gt; &lt;img src="https://s2.loli.net/2025/09/14/oO6iKgFPEth9M43.png" alt="播放.jpg" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;下载 📦&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;系统&lt;/th&gt; 
   &lt;th&gt;文件后缀&lt;/th&gt; 
   &lt;th&gt;架构&lt;/th&gt; 
   &lt;th&gt;下载链接&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;.zip&lt;/td&gt; 
   &lt;td&gt;通用(universal)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-mac.zip"&gt;全球加速&lt;/a&gt; | &lt;a href="https://hk.gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-mac.zip"&gt;香港加速&lt;/a&gt; | &lt;a href="https://ghfast.top/https://github.com/waifu-project/movie/releases/latest/download/catmovie-mac.zip"&gt;加速3&lt;/a&gt; | &lt;a href="https://github.com/waifu-project/movie/releases/latest/download/catmovie-mac.zip"&gt;原始&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iOS&lt;/td&gt; 
   &lt;td&gt;.ipa&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie.ipa"&gt;全球加速&lt;/a&gt; | &lt;a href="https://hk.gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie.ipa"&gt;香港加速&lt;/a&gt; | &lt;a href="https://ghfast.top/https://github.com/waifu-project/movie/releases/latest/download/catmovie.ipa"&gt;加速3&lt;/a&gt; | &lt;a href="https://github.com/waifu-project/movie/releases/latest/download/catmovie.ipa"&gt;原始&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;.apk&lt;/td&gt; 
   &lt;td&gt;常用(arm64-v8a)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie.apk"&gt;全球加速&lt;/a&gt; | &lt;a href="https://hk.gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie.apk"&gt;香港加速&lt;/a&gt; | &lt;a href="https://ghfast.top/https://github.com/waifu-project/movie/releases/latest/download/catmovie.apk"&gt;加速3&lt;/a&gt; | &lt;a href="https://github.com/waifu-project/movie/releases/latest/download/catmovie.apk"&gt;原始&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;.apk&lt;/td&gt; 
   &lt;td&gt;旧手机(armeabi-v7a)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-legacy.apk"&gt;全球加速&lt;/a&gt; | &lt;a href="https://hk.gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-legacy.apk"&gt;香港加速&lt;/a&gt; | &lt;a href="https://ghfast.top/https://github.com/waifu-project/movie/releases/latest/download/catmovie-legacy.apk"&gt;加速3&lt;/a&gt; | &lt;a href="https://github.com/waifu-project/movie/releases/latest/download/catmovie-legacy.apk"&gt;原始&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Android&lt;/td&gt; 
   &lt;td&gt;.apk&lt;/td&gt; 
   &lt;td&gt;通用(universal)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-universal.apk"&gt;全球加速&lt;/a&gt; | &lt;a href="https://hk.gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-universal.apk"&gt;香港加速&lt;/a&gt; | &lt;a href="https://ghfast.top/https://github.com/waifu-project/movie/releases/latest/download/catmovie-universal.apk"&gt;加速3&lt;/a&gt; | &lt;a href="https://github.com/waifu-project/movie/releases/latest/download/catmovie-universal.apk"&gt;原始&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;.zip&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-windows.zip"&gt;全球加速&lt;/a&gt; | &lt;a href="https://hk.gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-windows.zip"&gt;香港加速&lt;/a&gt; | &lt;a href="https://ghfast.top/https://github.com/waifu-project/movie/releases/latest/download/catmovie-windows.zip"&gt;加速3&lt;/a&gt; | &lt;a href="https://github.com/waifu-project/movie/releases/latest/download/catmovie-windows.zip"&gt;原始&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;.zip&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-linux-x86_64.tar.gz"&gt;全球加速&lt;/a&gt; | &lt;a href="https://hk.gh-proxy.com/https://github.com/waifu-project/movie/releases/latest/download/catmovie-linux-x86_64.tar.gz"&gt;香港加速&lt;/a&gt; | &lt;a href="https://ghfast.top/https://github.com/waifu-project/movie/releases/latest/download/catmovie-linux-x86_64.tar.gz"&gt;加速3&lt;/a&gt; | &lt;a href="https://github.com/waifu-project/movie/releases/latest/download/catmovie-linux-x86_64.tar.gz"&gt;原始&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;文档 📜&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/waifu-project/movie/dev/docs/create_source.md"&gt;制作源&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/waifu-project/movie/dev/docs/keyboard.md"&gt;键盘快捷键&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;赞助 🌠&lt;/h3&gt; 
&lt;p&gt;开发不易, 感谢您的支持, 这将让小猫可以继续走下去 🤗&lt;/p&gt; 
&lt;img src="https://s2.loli.net/2025/09/24/ByRvOsQhWzKLXNo.jpg" width="300" /&gt;</description>
    </item>
    
    <item>
      <title>anthropics/claude-code</title>
      <link>https://github.com/anthropics/claude-code</link>
      <description>&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows - all through natural language commands.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Code&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/Node.js-18%2B-brightgreen?style=flat-square" alt="" /&gt; &lt;a href="https://www.npmjs.com/package/@anthropic-ai/claude-code"&gt;&lt;img src="https://img.shields.io/npm/v/@anthropic-ai/claude-code.svg?style=flat-square" alt="npm" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows -- all through natural language commands. Use it in your terminal, IDE, or tag @claude on Github.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Learn more in the &lt;a href="https://docs.anthropic.com/en/docs/claude-code/overview"&gt;official documentation&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/anthropics/claude-code/main/demo.gif" /&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Claude Code:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install -g @anthropic-ai/claude-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Navigate to your project directory and run &lt;code&gt;claude&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Reporting Bugs&lt;/h2&gt; 
&lt;p&gt;We welcome your feedback. Use the &lt;code&gt;/bug&lt;/code&gt; command to report issues directly within Claude Code, or file a &lt;a href="https://github.com/anthropics/claude-code/issues"&gt;GitHub issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Connect on Discord&lt;/h2&gt; 
&lt;p&gt;Join the &lt;a href="https://anthropic.com/discord"&gt;Claude Developers Discord&lt;/a&gt; to connect with other developers using Claude Code. Get help, share feedback, and discuss your projects with the community.&lt;/p&gt; 
&lt;h2&gt;Data collection, usage, and retention&lt;/h2&gt; 
&lt;p&gt;When you use Claude Code, we collect feedback, which includes usage data (such as code acceptance or rejections), associated conversation data, and user feedback submitted via the &lt;code&gt;/bug&lt;/code&gt; command.&lt;/p&gt; 
&lt;h3&gt;How we use your data&lt;/h3&gt; 
&lt;p&gt;See our &lt;a href="https://docs.anthropic.com/en/docs/claude-code/data-usage"&gt;data usage policies&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Privacy safeguards&lt;/h3&gt; 
&lt;p&gt;We have implemented several safeguards to protect your data, including limited retention periods for sensitive information, restricted access to user session data, and clear policies against using feedback for model training.&lt;/p&gt; 
&lt;p&gt;For full details, please review our &lt;a href="https://www.anthropic.com/legal/commercial-terms"&gt;Commercial Terms of Service&lt;/a&gt; and &lt;a href="https://www.anthropic.com/legal/privacy"&gt;Privacy Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coze-dev/coze-studio</title>
      <link>https://github.com/coze-dev/coze-studio</link>
      <description>&lt;p&gt;An AI agent development platform with all-in-one visual tools, simplifying agent creation, debugging, and deployment like never before. Coze your way to AI Agent creation.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://p9-arcosite.byteimg.com/tos-cn-i-goo7wpa0wc/943f576df3424fa98580c2ad18946719~tplv-goo7wpa0wc-image.image" alt="Image" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt;
 &lt;p&gt; &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#what-is-coze-studio"&gt;Coze Studio&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#feature-list"&gt;Feature list&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#quickstart"&gt;Quickstart&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#developer-guide"&gt;Developer Guide&lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;img alt="License" src="https://img.shields.io/badge/license-apache2.0-blue.svg?sanitize=true" /&gt; &lt;img alt="Go Version" src="https://img.shields.io/badge/go-%3E%3D%201.23.4-blue" /&gt; &lt;/p&gt; 
 &lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/README.zh_CN.md"&gt;中文&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;What is Coze Studio?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.coze.cn/home"&gt;Coze Studio&lt;/a&gt; is an all-in-one AI agent development tool. Providing the latest large models and tools, various development modes and frameworks, Coze Studio offers the most convenient AI agent development environment, from development to deployment.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Provides all core technologies needed for AI agent development&lt;/strong&gt;: prompt, RAG, plugin, workflow, enabling developers to focus on creating the core value of AI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ready to use for professional AI agent development at the lowest cost&lt;/strong&gt;: Coze Studio provides developers with complete app templates and build frameworks, allowing you to quickly construct various AI agents and turn creative ideas into reality.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Coze Studio, derived from the "Coze Development Platform" which has served tens of thousands of enterprises and millions of developers, we have made its core engine completely open. It is a one-stop visual development tool for AI Agents that makes creating, debugging, and deploying AI Agents unprecedentedly simple. Through Coze Studio's visual design and build tools, developers can quickly create and debug agents, apps, and workflows using no-code or low-code approaches, enabling powerful AI app development and more customized business logic. It's an ideal choice for building low-code AI products tailored . Coze Studio aims to lower the threshold for AI agent development and application, encouraging community co-construction and sharing for deeper exploration and practice in the AI field.&lt;/p&gt; 
&lt;p&gt;The backend of Coze Studio is developed using Golang, the frontend uses React + TypeScript, and the overall architecture is based on microservices and built following domain-driven design (DDD) principles. Provide developers with a high-performance, highly scalable, and easy-to-customize underlying framework to help them address complex business needs.&lt;/p&gt; 
&lt;h2&gt;Feature list&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Module&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Feature&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Model service&lt;/td&gt; 
   &lt;td&gt;Manage the model list, integrate services such as OpenAI and Volcengine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build agent&lt;/td&gt; 
   &lt;td&gt;* Build, publish, and manage agent &lt;br /&gt; * Support configuring workflows, knowledge bases, and other resources&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build apps&lt;/td&gt; 
   &lt;td&gt;* Create and publish apps &lt;br /&gt; * Build business logic through workflows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build a workflow&lt;/td&gt; 
   &lt;td&gt;Create, modify, publish, and delete workflows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Develop resources&lt;/td&gt; 
   &lt;td&gt;Support creating and managing the following resources: &lt;br /&gt; * Plugins &lt;br /&gt; * Knowledge bases &lt;br /&gt; * Databases &lt;br /&gt; * Prompts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;API and SDK&lt;/td&gt; 
   &lt;td&gt;* Create conversations, initiate chats, and other OpenAPI &lt;br /&gt; * Integrate agents or apps into your own app through Chat SDK&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;Learn how to obtain and deploy the open-source version of Coze Studio, quickly build projects, and experience Coze Studio's open-source version.&lt;/p&gt; 
&lt;p&gt;Environment requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Before installing Coze Studio, please ensure that your machine meets the following minimum system requirements: 2 Core、4 GB&lt;/li&gt; 
 &lt;li&gt;Pre-install Docker and Docker Compose, and start the Docker service.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Deployment steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Retrieve the source code.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-Bash"&gt;# Clone code
git clone https://github.com/coze-dev/coze-studio.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Configure the model.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Copy the template files of the doubao-seed-1.6 model from the template directory and paste them into the configuration file directory.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-Bash"&gt;cd coze-studio
# Copy model configuration template
cp backend/conf/model/template/model_template_ark_doubao-seed-1.6.yaml backend/conf/model/ark_doubao-seed-1.6.yaml
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Modify the template file in the configuration file directory.&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;Enter the directory &lt;code&gt;backend/conf/model&lt;/code&gt;. Open the file &lt;code&gt;ark_doubao-seed-1.6.yaml&lt;/code&gt;.&lt;/li&gt; 
     &lt;li&gt;Set the fields &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;meta.conn_config.api_key&lt;/code&gt;, &lt;code&gt;meta.conn_config.model&lt;/code&gt;, and save the file. 
      &lt;ul&gt; 
       &lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;: The model ID in Coze Studio, defined by the developer, must be a non-zero integer and globally unique. Agents or workflows call models based on model IDs. For models that have already been launched, do not modify their IDs; otherwise, it may result in model call failures.&lt;/li&gt; 
       &lt;li&gt;&lt;strong&gt;meta.conn_config.api_key&lt;/strong&gt;: The API Key for the model service. In this example, it is the API Key for Ark API Key. For more information, see &lt;a href="https://www.volcengine.com/docs/82379/1541594"&gt;Get Volcengine Ark API Key&lt;/a&gt; or &lt;a href="https://docs.byteplus.com/en/docs/ModelArk/1361424?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=coze_open_source"&gt;Get BytePlus ModelArk API Key&lt;/a&gt;.&lt;/li&gt; 
       &lt;li&gt;&lt;strong&gt;meta.conn_config.model&lt;/strong&gt;: The Model name for the model service. In this example, it refers to the Model ID or Endpoint ID of Ark. For more information, see &lt;a href="https://www.volcengine.com/docs/82379/1513689"&gt;Get Volcengine Ark Model ID&lt;/a&gt; / &lt;a href="https://www.volcengine.com/docs/82379/1099522"&gt;Get Volcengine Ark Endpoint ID&lt;/a&gt; or &lt;a href="https://docs.byteplus.com/en/docs/ModelArk/model_id?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=coze_open_source"&gt;Get BytePlus ModelArk Model ID&lt;/a&gt; / &lt;a href="https://docs.byteplus.com/en/docs/ModelArk/1099522?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=coze_open_source"&gt;Get BytePlus ModelArk Endpoint ID&lt;/a&gt;.&lt;/li&gt; 
      &lt;/ul&gt; 
      &lt;blockquote&gt; 
       &lt;p&gt;For users in China, you may use Volcengine Ark; for users outside China, you may use BytePlus ModelArk instead.&lt;/p&gt; 
      &lt;/blockquote&gt; &lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Deploy and start the service. When deploying and starting Coze Studio for the first time, it may take a while to retrieve images and build local images. Please be patient. During deployment, you will see the following log information. If you see the message "Container coze-server Started," it means the Coze Studio service has started successfully.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-Bash"&gt;# Start the service
cd docker
cp .env.example .env
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For common startup failure issues, &lt;strong&gt;please refer to the &lt;a href="https://github.com/coze-dev/coze-studio/wiki/9.-FAQ"&gt;FAQ&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After starting the service, you can open Coze Studio by accessing &lt;code&gt;http://localhost:8888/&lt;/code&gt; through your browser.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] If you want to deploy Coze Studio in a public network environment, it is recommended to assess security risks before you begin, and take corresponding protection measures. Possible security risks include account registration functions, Python execution environments in workflow code nodes, Coze Server listening address configurations, SSRF (Server - Side Request Forgery), and some horizontal privilege escalations in APIs. For more details, refer to &lt;a href="https://github.com/coze-dev/coze-studio/wiki/2.-Quickstart#security-risks-in-public-networks"&gt;Quickstart&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Developer Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Project Configuration&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/3.-Model-configuration"&gt;Model Configuration&lt;/a&gt;: Before deploying the open-source version of Coze Studio, you must configure the model service. Otherwise, you cannot select models when building agents, workflows, and apps.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/4.-Plugin-Configuration"&gt;Plugin Configuration&lt;/a&gt;: To use official plugins from the plugin store, you must first configure the plugins and add the authentication keys for third-party services.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/5.-Basic-component-configuration"&gt;Basic Component Configuration&lt;/a&gt;: Learn how to configure components such as image uploaders to use functions like image uploading in Coze Studio .&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/6.-API-Reference"&gt;API Reference&lt;/a&gt;: The Coze Studio Community Edition API and Chat SDK are authenticated using Personal Access Token, providing APIs for conversations and workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards"&gt;Development Guidelines&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards#project-architecture"&gt;Project Architecture&lt;/a&gt;: Learn about the technical architecture and core components of the open-source version of Coze Studio.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards#code-development-and-testing"&gt;Code Development and Testing&lt;/a&gt;: Learn how to perform secondary development and testing based on the open-source version of Coze Studio.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards#troubleshooting"&gt;Troubleshooting&lt;/a&gt;: Learn how to view container states and system logs.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using the open-source version of Coze Studio&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Regarding how to use Coze Studio, refer to the &lt;a href="https://www.coze.cn/open/docs"&gt;Coze Development Platform Official Documentation Center&lt;/a&gt; for more information. Please note that certain features, such as tone customization, are limited to the commercial version. Differences between the open-source and commercial versions can be found in the &lt;strong&gt;Feature List&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/quickstart"&gt;Quick Start&lt;/a&gt;: Quickly build an AI assistant agent with Coze Studio.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/agent_overview"&gt;Developing Agents&lt;/a&gt;: Learn how to create, build, publish, and manage agents. You can use functions such as knowledge, plugins, etc., to resolve model hallucination and lack of expertise in professional fields. In addition, Coze Studio provides rich memory features that enable agents to generate more accurate responses based on a personal user's historical conversations during interactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/workflow"&gt;Develop workflows&lt;/a&gt;: A workflow is a set of executable instructions used to implement business logic or complete specific tasks. It structures data flow and task processing for apps or agents. Coze Studio provides a visual canvas where you can quickly build workflows by dragging and dropping nodes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/plugin"&gt;Resources such as plugins&lt;/a&gt;: In Coze Studio, workflows, plugins, databases, knowledge bases, and variables are collectively referred to as resources.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API &amp;amp; SDK&lt;/strong&gt;: Coze Studio supports &lt;a href="https://github.com/coze-dev/coze-studio/wiki/6.-API-Reference"&gt;API related to chat and workflows&lt;/a&gt;, and you can also integrate agents or apps with local business systems through &lt;a href="https://www.coze.cn/open/docs/developer_guides/web_sdk_overview"&gt;Chat SDK&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/tutorial/chat_sdk_web_online_customer_service"&gt;Tutorials for practice&lt;/a&gt;: Learn how to use Coze Studio to implement various AI scenarios, such as building web-based online customer service using Chat SDK.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project uses the Apache 2.0 license. For details, please refer to the &lt;a href="https://github.com/coze-dev/coze-studio/raw/main/LICENSE-APACHE"&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Community contributions&lt;/h2&gt; 
&lt;p&gt;We welcome community contributions. For contribution guidelines, please refer to &lt;a href="https://github.com/coze-dev/coze-studio/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; and &lt;a href="https://github.com/coze-dev/coze-studio/raw/main/CODE_OF_CONDUCT.md"&gt;Code of conduct&lt;/a&gt;. We look forward to your contributions!&lt;/p&gt; 
&lt;h2&gt;Security and privacy&lt;/h2&gt; 
&lt;p&gt;If you discover potential security issues in the project, or believe you may have found a security issue, please notify the ByteDance security team through our &lt;a href="https://security.bytedance.com/src"&gt;security center&lt;/a&gt; or &lt;a href="mailto:sec@bytedance.com"&gt;vulnerability reporting email&lt;/a&gt;. Please &lt;strong&gt;do not&lt;/strong&gt; create public GitHub Issues.&lt;/p&gt; 
&lt;h2&gt;Join Community&lt;/h2&gt; 
&lt;p&gt;We are committed to building an open and friendly developer community. All developers interested in AI Agent development are welcome to join us!&lt;/p&gt; 
&lt;h3&gt;🐛 Issue Reports &amp;amp; Feature Requests&lt;/h3&gt; 
&lt;p&gt;To efficiently track and resolve issues while ensuring transparency and collaboration, we recommend participating through:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: &lt;a href="https://github.com/coze-dev/coze-studio/issues"&gt;Submit bug reports or feature requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pull Requests&lt;/strong&gt;: &lt;a href="https://github.com/coze-dev/coze-studio/pulls"&gt;Contribute code or documentation improvements&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💬 Technical Discussion &amp;amp; Communication&lt;/h3&gt; 
&lt;p&gt;Join our technical discussion groups to share experiences with other developers and stay updated with the latest project developments:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Feishu Group Chat&lt;/strong&gt;&lt;br /&gt; Scan the QR code below with Feishu mobile app to join:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://p9-arcosite.byteimg.com/tos-cn-i-goo7wpa0wc/0a49081e8f3743e8bf3dcdded4bb571a~tplv-goo7wpa0wc-image.image" alt="Image" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Discord Server&lt;/strong&gt;&lt;br /&gt; Click to join: &lt;a href="https://discord.gg/sTVN9EVS4B"&gt;Coze Community&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Telegram Group&lt;/strong&gt;&lt;br /&gt; Click to join: Telegram Group &lt;a href="https://t.me/+pP9CkPnomDA0Mjgx"&gt;Coze&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;Thank you to all the developers and community members who have contributed to the Coze Studio project. Special thanks:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/cloudwego/eino"&gt;Eino&lt;/a&gt; framework team - providing powerful support for Coze Studio's agent and workflow runtime engines, model abstractions and implementations, and knowledge base indexing and retrieval&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/bytedance/flowgram.ai"&gt;FlowGram&lt;/a&gt; team - providing a high-quality workflow building engine for Coze Studio's frontend workflow canvas editor&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/cloudwego/hertz"&gt;Hertz&lt;/a&gt; team - Go HTTP framework with high-performance and strong-extensibility for building micro-services&lt;/li&gt; 
 &lt;li&gt;All users who participated in testing and feedback&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>daytonaio/daytona</title>
      <link>https://github.com/daytonaio/daytona</link>
      <description>&lt;p&gt;Daytona is a Secure and Elastic Infrastructure for Running AI-Generated Code&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://www.daytona.io/docs"&gt;&lt;img src="https://img.shields.io/github/v/release/daytonaio/docs?label=Docs&amp;amp;color=23cc71" alt="Documentation" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/License-AGPL--3-blue" alt="License" /&gt; &lt;a href="https://goreportcard.com/report/github.com/daytonaio/daytona"&gt;&lt;img src="https://goreportcard.com/badge/github.com/daytonaio/daytona" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/daytonaio/daytona/issues"&gt;&lt;img src="https://img.shields.io/github/issues/daytonaio/daytona" alt="Issues - daytona" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/v/release/daytonaio/daytona" alt="GitHub Release" /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-white.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-black.png" /&gt; 
  &lt;img alt="Daytona logo" src="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-black.png" width="50%" /&gt; 
 &lt;/picture&gt; 
&lt;/div&gt; 
&lt;h3 align="center"&gt; Run AI Code. &lt;br /&gt; Secure and Elastic Infrastructure for Running Your AI-Generated Code. &lt;/h3&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.daytona.io/docs"&gt; Documentation &lt;/a&gt;· &lt;a href="https://github.com/daytonaio/daytona/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.md&amp;amp;title=%F0%9F%90%9B+Bug+Report%3A+"&gt; Report Bug &lt;/a&gt;· &lt;a href="https://github.com/daytonaio/daytona/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.md&amp;amp;title=%F0%9F%9A%80+Feature%3A+"&gt; Request Feature &lt;/a&gt;· &lt;a href="https://go.daytona.io/slack"&gt; Join our Slack &lt;/a&gt;· &lt;a href="https://x.com/daytonaio"&gt; Connect on X &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.producthunt.com/posts/daytona-2?embed=true&amp;amp;utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-daytona-2" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=957617&amp;amp;theme=neutral&amp;amp;period=daily&amp;amp;t=1746176740150" alt="Daytona  - Secure and elastic infra for running your AI-generated code. | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/daytona-2?embed=true&amp;amp;utm_source=badge-top-post-topic-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-daytona-2" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=957617&amp;amp;theme=neutral&amp;amp;period=monthly&amp;amp;topic_id=237&amp;amp;t=1746176740150" alt="Daytona  - Secure and elastic infra for running your AI-generated code. | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Python SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install daytona
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;TypeScript SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install @daytonaio/sdk
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Lightning-Fast Infrastructure&lt;/strong&gt;: Sub-90ms Sandbox creation from code to execution.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Separated &amp;amp; Isolated Runtime&lt;/strong&gt;: Execute AI-generated code with zero risk to your infrastructure.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Massive Parallelization for Concurrent AI Workflows&lt;/strong&gt;: Fork Sandbox filesystem and memory state (Coming soon!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Programmatic Control&lt;/strong&gt;: File, Git, LSP, and Execute API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unlimited Persistence&lt;/strong&gt;: Your Sandboxes can live forever&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OCI/Docker Compatibility&lt;/strong&gt;: Use any OCI/Docker image to create a Sandbox&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create an account at &lt;a href="https://app.daytona.io"&gt;https://app.daytona.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Generate a &lt;a href="https://app.daytona.io/dashboard/keys"&gt;new API key&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow the &lt;a href="https://www.daytona.io/docs/getting-started/"&gt;Getting Started docs&lt;/a&gt; to start using the Daytona SDK&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Creating your first Sandbox&lt;/h2&gt; 
&lt;h3&gt;Python SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-py"&gt;from daytona import Daytona, DaytonaConfig, CreateSandboxBaseParams

# Initialize the Daytona client
daytona = Daytona(DaytonaConfig(api_key="YOUR_API_KEY"))

# Create the Sandbox instance
sandbox = daytona.create(CreateSandboxBaseParams(language="python"))

# Run code securely inside the Sandbox
response = sandbox.process.code_run('print("Sum of 3 and 4 is " + str(3 + 4))')
if response.exit_code != 0:
    print(f"Error running code: {response.exit_code} {response.result}")
else:
    print(response.result)

# Clean up the Sandbox
daytona.delete(sandbox)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Typescript SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { Daytona } from '@daytonaio/sdk'

async function main() {
  // Initialize the Daytona client
  const daytona = new Daytona({
    apiKey: 'YOUR_API_KEY',
  })

  let sandbox
  try {
    // Create the Sandbox instance
    sandbox = await daytona.create({
      language: 'typescript',
    })
    // Run code securely inside the Sandbox
    const response = await sandbox.process.codeRun('console.log("Sum of 3 and 4 is " + (3 + 4))')
    if (response.exitCode !== 0) {
      console.error('Error running code:', response.exitCode, response.result)
    } else {
      console.log(response.result)
    }
  } catch (error) {
    console.error('Sandbox flow error:', error)
  } finally {
    if (sandbox) await daytona.delete(sandbox)
  }
}

main().catch(console.error)
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Daytona is Open Source under the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/LICENSE"&gt;GNU AFFERO GENERAL PUBLIC LICENSE&lt;/a&gt;, and is the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/NOTICE"&gt;copyright of its contributors&lt;/a&gt;. If you would like to contribute to the software, read the Developer Certificate of Origin Version 1.1 (&lt;a href="https://developercertificate.org/"&gt;https://developercertificate.org/&lt;/a&gt;). Afterwards, navigate to the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to get started.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>devlikeapro/waha</title>
      <link>https://github.com/devlikeapro/waha</link>
      <description>&lt;p&gt;WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WAHA&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/devlikeapro/waha/core/logo.png" style="border-radius: 50%" width="150" /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WAHA&lt;/strong&gt; - &lt;strong&gt;W&lt;/strong&gt;hats&lt;strong&gt;A&lt;/strong&gt;pp &lt;strong&gt;H&lt;/strong&gt;TTP &lt;strong&gt;A&lt;/strong&gt;PI (REST API) that you can install on your own server and run in less than 5 minutes!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/devlikeapro/waha"&gt;&lt;img src="https://img.shields.io/docker/pulls/devlikeapro/waha" alt="Docker Pulls" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://waha.devlike.pro/"&gt;https://waha.devlike.pro/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dashboard Example: &lt;a href="https://waha.devlike.pro/dashboard"&gt;https://waha.devlike.pro/dashboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Swagger Example: &lt;a href="https://waha.devlike.pro/swagger"&gt;https://waha.devlike.pro/swagger&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Tables of Contents&lt;/h1&gt; 
&lt;!-- toc --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#quick-start"&gt;Quick start&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#send-your-first-message"&gt;Send your first message&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#1-download-image"&gt;1. Download image&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#2-run-whatsapp-http-api"&gt;2. Run WhatsApp HTTP API&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#3-start-a-new-session"&gt;3. Start a new session&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#4-get-and-scan-qr"&gt;4. Get and scan QR&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#5-get-the-screenshot"&gt;5. Get the screenshot&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#6-send-a-text-message"&gt;6. Send a text message&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#what-is-next"&gt;What is next?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#development"&gt;Development&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#start-the-project"&gt;Start the project&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- tocstop --&gt; 
&lt;h1&gt;Quick start&lt;/h1&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;Only thing that you must have - installed docker. Please follow the original instruction &lt;a href="https://docs.docker.com/get-docker/" target="_blank" rel="noopener"&gt;how to install docker -&amp;gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you are ready - come back and follows the below steps to send the first text message to WhatsApp via HTTP API!&lt;/p&gt; 
&lt;h2&gt;Send your first message&lt;/h2&gt; 
&lt;p&gt;Let's go over steps that allow you to send your first text message via WhatsApp HTTP API!&lt;/p&gt; 
&lt;h3&gt;1. Download image&lt;/h3&gt; 
&lt;p&gt;Assuming you have installed &lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt;, let's download the image.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull devlikeapro/waha
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker login -u devlikeapro -p {KEY}
docker pull devlikeapro/waha-plus
docker logout
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about how to get &lt;code&gt;PASSWORD&lt;/code&gt; for &lt;a href="https://waha.devlike.pro/docs/how-to/waha-plus/"&gt;&lt;strong&gt;➕ WAHA Plus&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;2. Run WhatsApp HTTP API&lt;/h3&gt; 
&lt;p&gt;Run WhatsApp HTTP API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -it --rm -p 3000:3000/tcp --name waha devlikeapro/waha

# It prints logs and the last line must be
# WhatsApp HTTP API is running on: http://[::1]:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the link in your browser &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt; and you'll see API documentation (Swagger).&lt;/p&gt; 
&lt;h3&gt;3. Start a new session&lt;/h3&gt; 
&lt;p&gt;To start a new session you should have your mobile phone with installed WhatsApp application close to you.&lt;/p&gt; 
&lt;p&gt;Please go and read how what we'll need to a bit later: &lt;a href="https://faq.whatsapp.com/381777293328336/?helpref=hc_fnav" target="_blank"&gt; How to log in - the instruction on WhatsApp site &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;When your ready - find &lt;code&gt;POST /api/sessions&lt;/code&gt;, click on &lt;strong&gt;Try it out&lt;/strong&gt;, then &lt;strong&gt;Execute&lt;/strong&gt; a bit below.&lt;/p&gt; 
&lt;p&gt;The example payload:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "default"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By using the request with &lt;code&gt;name&lt;/code&gt; values you can start multiple session (WhatsApp accounts) inside the single docker container in Plus&lt;/p&gt; 
&lt;h3&gt;4. Get and scan QR&lt;/h3&gt; 
&lt;p&gt;Find &lt;code&gt;GET /api/screenshot&lt;/code&gt; and execute it, it shows you QR code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Scan the QR with your cell phone's WhatsApp app.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;5. Get the screenshot&lt;/h3&gt; 
&lt;p&gt;Execute &lt;code&gt;GET /api/screenshot&lt;/code&gt; after a few seconds after scanning the QR - it'll show you the screenshot of you Whatsapp instance. If you can get the actual screenshot - then you're ready to start sending messages!&lt;/p&gt; 
&lt;h3&gt;6. Send a text message&lt;/h3&gt; 
&lt;p&gt;Let's send a text message - find &lt;code&gt;POST /api/sendText&lt;/code&gt; in &lt;a href="http://localhost:3000/"&gt;swagger&lt;/a&gt; and change &lt;code&gt;chatId&lt;/code&gt; this way: use a phone international phone number without &lt;code&gt;+&lt;/code&gt; symbol and add &lt;code&gt;@c.us&lt;/code&gt; at the end.&lt;/p&gt; 
&lt;p&gt;For phone number &lt;code&gt;12132132131&lt;/code&gt; the &lt;code&gt;chatId&lt;/code&gt; is &lt;code&gt;12132132131@c.us&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The example payload:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "chatId": "12132132130@c.us",
  "text": "Hi there!",
  "session": "default"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also, you can use &lt;code&gt;curl&lt;/code&gt; and send POST request like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Phone without +
export PHONE=12132132130
curl -d "{\"chatId\": \"${PHONE}@c.us\", \"text\": \"Hello from WhatsApp HTTP API\" }" -H "Content-Type: application/json" -X POST http://localhost:3000/api/sendText
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What is next?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://waha.devlike.pro/docs/overview/introduction/"&gt;Go and read the full documentation!&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;h2&gt;Start the project&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository&lt;/li&gt; 
 &lt;li&gt;Make sure you're using node&amp;gt;=22 (check &lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/.nvmrc"&gt;.nvmrc&lt;/a&gt; to get the version)&lt;/li&gt; 
 &lt;li&gt;Run the following commands:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install dependencies
yarn install
# Fetch and compile proto files
yarn gows:proto
# Run
yarn start
# open http://localhost:3000
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>nitrojs/nitro</title>
      <link>https://github.com/nitrojs/nitro</link>
      <description>&lt;p&gt;Next Generation Server Toolkit. Create web servers with everything you need and deploy them wherever you prefer.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nitro&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You’re viewing the &lt;strong&gt;v3 Alpha&lt;/strong&gt; branch. For the current stable release, see &lt;a href="https://github.com/nitrojs/nitro/tree/v2"&gt;Nitro v2&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Nitro&lt;/strong&gt; extends your Vite app with a &lt;strong&gt;production-ready server&lt;/strong&gt;, designed to run &lt;strong&gt;anywhere&lt;/strong&gt;. Add server routes, deploy across multiple platforms, and enjoy a &lt;strong&gt;zero-config&lt;/strong&gt; experience.&lt;/p&gt; 
&lt;p&gt;📘 &lt;strong&gt;Docs (v3 Alpha):&lt;/strong&gt; &lt;a href="https://v3.nitro.build"&gt;https://v3.nitro.build&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See Check out the &lt;a href="https://raw.githubusercontent.com/nitrojs/nitro/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Released under the &lt;a href="https://raw.githubusercontent.com/nitrojs/nitro/main/LICENSE"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bytedance/flowgram.ai</title>
      <link>https://github.com/bytedance/flowgram.ai</link>
      <description>&lt;p&gt;FlowGram is a node-based flow building engine that helps developers quickly create workflows in either fixed layout or free connection layout modes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FlowGram.AI&lt;/h1&gt; 
&lt;p&gt;FlowGram is a node-based flow building engine that helps developers quickly create workflows in either fixed layout or free connection layout modes. It provides a set of interaction best practices and is particularly suitable for visual workflows with clear inputs and outputs.&lt;/p&gt; 
&lt;p&gt;In the current AI boom, we are also focusing on how to empower workflows with AI capabilities, hence the AI suffix in our name.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/bytedance/flowgram.ai/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/bytedance/flowgram.ai" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@flowgram.ai/editor"&gt;&lt;img src="https://img.shields.io/npm/dm/%40flowgram.ai%2Fcore" alt="@flowgram.ai/editor" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/bytedance/flowgram.ai"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;a href="https://juejin.cn/column/7479814468601315362"&gt;&lt;img src="https://img.shields.io/badge/%E6%8E%98%E9%87%91-FFFFFF?logo=juejin&amp;amp;logoColor=%23007FFF" alt="掘金" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/13877"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13877" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;📖 Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://flowgram.ai/"&gt;Official Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bytedance/flowgram.ai/raw/main/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦 Packages&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/create-app"&gt;@flowgram.ai/create-app&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;App Creator&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@flowgram.ai/create-app"&gt;&lt;img src="https://img.shields.io/npm/v/@flowgram.ai/create-app.svg?sanitize=true" alt="npm" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/packages/client/fixed-layout-editor"&gt;@flowgram.ai/fixed-layout-editor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Fixed Layout Editor&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@flowgram.ai/fixed-layout-editor"&gt;&lt;img src="https://img.shields.io/npm/v/@flowgram.ai/fixed-layout-editor.svg?sanitize=true" alt="npm" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/packages/client/free-layout-editor"&gt;@flowgram.ai/free-layout-editor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Free Layout Editor&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@flowgram.ai/free-layout-editor"&gt;&lt;img src="https://img.shields.io/npm/v/@flowgram.ai/free-layout-editor.svg?sanitize=true" alt="npm" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🎮 Examples&lt;/h2&gt; 
&lt;div&gt; 
 &lt;p&gt; &lt;a href="https://flowgram.ai/examples/fixed-layout/fixed-feature-overview.html"&gt; Fixed Layout &lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; Fixed layout where nodes can be dragged to specified positions, with support for compound nodes like branches and loops. &lt;/p&gt; 
 &lt;p&gt; &lt;img src="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/docs/src/public/fixed-layout/fixed-layout-demo.gif" /&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;p&gt; &lt;a href="https://flowgram.ai/examples/free-layout/free-feature-overview.html"&gt; Free Layout &lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; Free layout where nodes can be placed anywhere and connected using free-form lines. &lt;/p&gt; 
 &lt;p&gt; &lt;img src="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/docs/src/public/free-layout/free-layout-demo.gif" /&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# create demo
npx @flowgram.ai/create-app@latest

# in PowerShell
npx "@flowgram.ai/create-app@latest"

# select demo
- fixed-layout # full-feature overview
- free-layout # full-feature overview
- fixed-layout-simple # basic usage
- free-layout-simple # basic usage
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🔨 Development&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Install Node.js 18+&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nvm install lts/hydrogen
nvm alias default lts/hydrogen # set default node version
nvm use lts/hydrogen
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:bytedance/flowgram.ai.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;strong&gt;Install required global dependencies&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i -g pnpm@10.6.5 @microsoft/rush@5.150.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;&lt;strong&gt;Install project dependencies&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush install
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;&lt;strong&gt;Build the project&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush build
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="6"&gt; 
 &lt;li&gt;&lt;strong&gt;Run docs or demo&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush dev:docs # docs
rush dev:demo-fixed-layout
rush dev:demo-free-layout
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After that, you can start to develop projects inside this repository.&lt;/p&gt; 
&lt;p&gt;Enjoy it!&lt;/p&gt; 
&lt;h2&gt;🌟 Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/bytedance/flowgram.ai/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=bytedance/flowgram.ai" alt="FlowGram.AI Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🌟 Adoption&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio"&gt;Coze Studio&lt;/a&gt; is an all-in-one AI agent development tool. Providing the latest large models and tools, various development modes and frameworks, Coze Studio offers the most convenient AI agent development environment, from development to deployment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NNDeploy/nndeploy"&gt;NNDeploy&lt;/a&gt; is a workflow-based multi-platform ai deployment tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/certimate-go/certimate"&gt;Certimate&lt;/a&gt; is an open-source SSL certificate management tool that helps you automatically apply for and deploy SSL certificates with a visual workflow. It is one of the ACME client options listed in the official documentation of Let's Encrypt.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🌟 Contact us&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Issues: &lt;a href="https://github.com/bytedance/flowgram.ai/issues"&gt;Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Lark: Scan the QR code below with &lt;a href="https://www.feishu.cn/en/"&gt;Register Feishu&lt;/a&gt; to join our FlowGram user group.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/docs/src/public/lark-group.png" width="200" /&gt;</description>
    </item>
    
    <item>
      <title>evershopcommerce/evershop</title>
      <link>https://github.com/evershopcommerce/evershop</link>
      <description>&lt;p&gt;🛍️ Typescript E-commerce Platform&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="60" height="68" alt="EverShop Logo" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/logo-green.png" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;EverShop&lt;/h1&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://evershop.io/docs/development/getting-started/introduction"&gt;Documentation&lt;/a&gt; | &lt;a href="https://demo.evershop.io/"&gt;Demo&lt;/a&gt; &lt;/h4&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/evershopcommerce/evershop/actions/workflows/build_test.yml/badge.svg?sanitize=true" alt="Github Action" /&gt; &lt;a href="https://twitter.com/evershopjs"&gt; &lt;img alt="Twitter Follow" src="https://img.shields.io/twitter/follow/evershopjs?style=social" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/GSzt7dt7RM"&gt; &lt;img src="https://img.shields.io/discord/757179260417867879?label=discord" alt="Discord" /&gt; &lt;/a&gt; &lt;a href="https://opensource.org/licenses/GPL-3.0"&gt; &lt;img src="https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true" alt="License" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="EverShop" width="950" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/banner.png" /&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;EverShop is a modern, TypeScript-first eCommerce platform built with GraphQL and React. Designed for developers, it offers essential commerce features in a modular, fully customizable architecture—perfect for building tailored shopping experiences with confidence and speed.&lt;/p&gt; 
&lt;h2&gt;Installation Using Docker&lt;/h2&gt; 
&lt;p&gt;You can get started with EverShop in minutes by using the Docker image. The Docker image is a great way to get started with EverShop without having to worry about installing dependencies or configuring your environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL https://raw.githubusercontent.com/evershopcommerce/evershop/main/docker-compose.yml &amp;gt; docker-compose.yml
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the full installation guide, please refer to our &lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/module/create-your-first-extension"&gt;Extension development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/theme/theme-overview"&gt;Theme development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Explore our demo store.&lt;/p&gt; 
&lt;p align="left"&gt; &lt;a href="https://demo.evershop.io/admin" target="_blank"&gt; &lt;img alt="EverShop Admin Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-back.png" /&gt; &lt;/a&gt; &lt;a href="https://demo.evershop.io/" target="_blank"&gt; &lt;img alt="EverShop Store Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-front.png" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;b&gt;Demo user:&lt;/b&gt; 
&lt;p&gt;Email: &lt;a href="mailto:demo@evershop.io"&gt;demo@evershop.io&lt;/a&gt;&lt;br /&gt; Password: 123456&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you like my work, feel free to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;⭐ this repository. It helps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fevershopcommerce%2Fevershop&amp;amp;text=Awesome%20React%20Ecommerce%20Project&amp;amp;hashtags=react,ecommerce,expressjs,graphql"&gt;&lt;img src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" alt="Tweet" /&gt;&lt;/a&gt; about EverShop. Thank you!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;EverShop is an open-source project. We are committed to a fully transparent development process and appreciate highly any contributions. Whether you are helping us fix bugs, proposing new features, improving our documentation or spreading the word - we would love to have you as part of the EverShop community.&lt;/p&gt; 
&lt;h3&gt;Ask a question about EverShop&lt;/h3&gt; 
&lt;p&gt;You can ask questions, and participate in discussions about EverShop-related topics in the EverShop Discord channel.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/GSzt7dt7RM"&gt;&lt;img src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/discord_banner_github.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create a bug report&lt;/h3&gt; 
&lt;p&gt;If you see an error message or run into an issue, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;create bug report&lt;/a&gt;. This effort is valued and it will help all EverShop users.&lt;/p&gt; 
&lt;h3&gt;Submit a feature request&lt;/h3&gt; 
&lt;p&gt;If you have an idea, or you're missing a capability that would make development easier and more robust, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;Submit feature request&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If a similar feature request already exists, don't forget to leave a "+1". If you add some more information such as your thoughts and vision about the feature, your comments will be embraced warmly :)&lt;/p&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/evershopcommerce/evershop/raw/main/LICENSE"&gt;GPL-3.0 License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TibixDev/winboat</title>
      <link>https://github.com/TibixDev/winboat</link>
      <description>&lt;p&gt;Run Windows apps on 🐧 Linux with ✨ seamless integration&lt;/p&gt;&lt;hr&gt;&lt;div align="left"&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/winboat_logo.svg?sanitize=true" alt="WinBoat Logo" width="150" /&gt; &lt;/td&gt; 
    &lt;td&gt; &lt;h1 style="color: #7C86FF; margin: 0; font-size: 32px;"&gt;WinBoat&lt;/h1&gt; &lt;p style="color: oklch(90% 0 0); font-size: 14px; margin: 5px 0;"&gt;Windows for Penguins.&lt;br /&gt; Run Windows apps on 🐧 Linux with ✨ seamless integration&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_dash.png" alt="WinBoat Dashboard" width="45%" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_apps.png" alt="WinBoat Apps" width="45%" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_native.png" alt="Native Windows" width="45%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;⚠️ Work in Progress ⚠️&lt;/h2&gt; 
&lt;p&gt;WinBoat is currently in beta, so expect to occasionally run into hiccups and bugs. You should be comfortable with some level of troubleshooting if you decide to try it, however we encourage you to give it a shot anyway.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🎨 Elegant Interface&lt;/strong&gt;: Sleek and intuitive interface that seamlessly integrates Windows into your Linux desktop environment, making it feel like a native experience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📦 Automated Installs&lt;/strong&gt;: Simple installation process through our interface - pick your preferences &amp;amp; specs and let us handle the rest&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 Run Any App&lt;/strong&gt;: If it runs on Windows, it can run on WinBoat. Enjoy the full range of Windows applications as native OS-level windows in your Linux environment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🖥️ Full Windows Desktop&lt;/strong&gt;: Access the complete Windows desktop experience when you need it, or run individual apps seamlessly integrated into your Linux workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📁 Filesystem Integration&lt;/strong&gt;: Your home directory is mounted in Windows, allowing easy file sharing between the two systems without any hassle&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✨ And many more&lt;/strong&gt;: Smartcard passthrough, resource monitoring, and more features being added regularly&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How Does It Work?&lt;/h2&gt; 
&lt;p&gt;WinBoat is an Electron app which allows you to run Windows apps on Linux using a containerized approach. Windows runs as a VM inside a Docker container, we communicate with it using the &lt;a href="https://github.com/TibixDev/winboat/tree/main/guest_server"&gt;WinBoat Guest Server&lt;/a&gt; to retrieve data we need from Windows. For compositing applications as native OS-level windows, we use FreeRDP together with Windows's RemoteApp protocol.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;Before running WinBoat, ensure your system meets the following requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;RAM&lt;/strong&gt;: At least 4 GB of RAM&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt;: At least 2 CPU threads&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: At least 32 GB free space on the drive your selected install folder corresponds to&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Virtualization&lt;/strong&gt;: KVM enabled in BIOS/UEFI 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://duckduckgo.com/?t=h_&amp;amp;q=how+to+enable+virtualization+in+%3Cmotherboard+brand%3E+bios&amp;amp;ia=web"&gt;How to enable virtualization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: Required for containerization 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/engine/install/"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;⚠️ NOTE:&lt;/strong&gt; Docker Desktop is &lt;strong&gt;not&lt;/strong&gt; supported, you will run into issues if you use it&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Compose v2&lt;/strong&gt;: Required for compatibility with docker-compose.yml files 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/compose/install/#plugin-linux-only"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker User Group&lt;/strong&gt;: Add your user to the &lt;code&gt;docker&lt;/code&gt; group 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user"&gt;Setup Instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;FreeRDP&lt;/strong&gt;: Required for remote desktop connection (Please make sure you have &lt;strong&gt;Version 3.x.x&lt;/strong&gt; with sound support included) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/FreeRDP/FreeRDP/wiki/PreBuilds"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[OPTIONAL] &lt;strong&gt;Kernel Modules&lt;/strong&gt;: The &lt;code&gt;iptables&lt;/code&gt; / &lt;code&gt;nftables&lt;/code&gt; and &lt;code&gt;iptable_nat&lt;/code&gt; kernel modules can be loaded for network autodiscovery and better shared filesystem performance, but this is not obligatory in newer versions of WinBoat 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://rentry.org/rmfq2e5e"&gt;Module loading instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Downloading&lt;/h2&gt; 
&lt;p&gt;You can download the latest Linux builds under the &lt;a href="https://github.com/TibixDev/winboat/releases"&gt;Releases&lt;/a&gt; tab. We currently offer four variants:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AppImage:&lt;/strong&gt; A popular &amp;amp; portable app format which should run fine on most distributions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unpacked:&lt;/strong&gt; The raw unpacked files, simply run the executable (&lt;code&gt;linux-unpacked/winboat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;.deb:&lt;/strong&gt; The intended format for Debian based distributions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;.rpm:&lt;/strong&gt; The intended format for Fedora based distributions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Known Issues About Container Runtimes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Podman is &lt;strong&gt;unsupported&lt;/strong&gt; for now&lt;/li&gt; 
 &lt;li&gt;Docker Desktop is &lt;strong&gt;unsupported&lt;/strong&gt; for now&lt;/li&gt; 
 &lt;li&gt;Distros that emulate Docker through a Podman socket are &lt;strong&gt;unsupported&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Any rootless containerization solution is currently &lt;strong&gt;unsupported&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building WinBoat&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;For building you need to have NodeJS and Go installed on your system&lt;/li&gt; 
 &lt;li&gt;Clone the repo (&lt;code&gt;git clone https://github.com/TibixDev/WinBoat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Install the dependencies (&lt;code&gt;npm i&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Build the app and the guest server using &lt;code&gt;npm run build:linux-gs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;You can now find the built app under &lt;code&gt;dist&lt;/code&gt; with an AppImage and an Unpacked variant&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running WinBoat in development mode&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you meet the &lt;a href="https://raw.githubusercontent.com/TibixDev/winboat/main/#prerequisites"&gt;prerequisites&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Additionally, for development you need to have NodeJS and Go installed on your system&lt;/li&gt; 
 &lt;li&gt;Clone the repo (&lt;code&gt;git clone https://github.com/TibixDev/WinBoat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Install the dependencies (&lt;code&gt;npm i&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Build the guest server (&lt;code&gt;npm run build-guest-server&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Run the app (&lt;code&gt;npm run dev&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Whether it's bug fixes, feature improvements, or documentation updates, we appreciate your help making WinBoat better.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;: We maintain a focus on technical contributions only. Pull requests containing political/sexual content, or other sensitive/controversial topics will not be accepted. Let's keep things focused on making great software! 🚀&lt;/p&gt; 
&lt;p&gt;Feel free to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Report bugs and issues&lt;/li&gt; 
 &lt;li&gt;Submit feature requests&lt;/li&gt; 
 &lt;li&gt;Contribute code improvements&lt;/li&gt; 
 &lt;li&gt;Help with documentation&lt;/li&gt; 
 &lt;li&gt;Share feedback and suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our issues page to get started, or feel free to open a new issue if you've found something that needs attention.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;WinBoat is licensed under the &lt;a href="https://github.com/TibixDev/winboat/raw/main/LICENSE"&gt;MIT&lt;/a&gt; license&lt;/p&gt; 
&lt;h2&gt;Inspiration / Alternatives&lt;/h2&gt; 
&lt;p&gt;These past few years some cool projects have surfaced with similar concepts, some of which we've also taken inspirations from.&lt;br /&gt; They're awesome and you should check them out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/winapps-org/winapps"&gt;WinApps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/casualsnek/cassowary"&gt;Cassowary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dockur/windows"&gt;dockur/windows&lt;/a&gt; (🌟 Also used in WinBoat)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Socials &amp;amp; Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.winboat.app/"&gt;&lt;img src="https://img.shields.io/badge/Website-winboat.app-blue?style=flat&amp;amp;logo=googlechrome&amp;amp;logoColor=white" alt="Website" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/winboat_app"&gt;&lt;img src="https://img.shields.io/badge/Twitter-@winboat__app-1DA1F2?style=flat&amp;amp;logo=x&amp;amp;logoColor=white" alt="Twitter" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fosstodon.org/@winboat"&gt;&lt;img src="https://img.shields.io/badge/Mastodon-@winboat-6364FF?style=flat&amp;amp;logo=mastodon&amp;amp;logoColor=white" alt="Mastodon" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://bsky.app/profile/winboat.app"&gt;&lt;img src="https://img.shields.io/badge/Bluesky-winboat.app-00A8E8?style=flat&amp;amp;logo=bluesky&amp;amp;logoColor=white" alt="Bluesky" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://discord.gg/MEwmpWm4tN"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join_Community-5865F2?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="mailto:staff@winboat.app"&gt;&lt;img src="https://img.shields.io/badge/Email-staff@winboat.app-D14836?style=flat&amp;amp;logo=gmail&amp;amp;logoColor=white" alt="Email" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://deepwiki.com/TibixDev/winboat"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://www.star-history.com/#tibixdev/winboat&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>browserbase/stagehand</title>
      <link>https://github.com/browserbase/stagehand</link>
      <description>&lt;p&gt;The AI Browser Automation Framework&lt;/p&gt;&lt;hr&gt;&lt;div id="toc" align="center" style="margin-bottom: 0;"&gt; 
 &lt;ul style="list-style: none; margin: 0; padding: 0;"&gt; 
  &lt;a href="https://stagehand.dev"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="media/dark_logo.png" /&gt; 
    &lt;img alt="Stagehand" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_logo.png" width="200" style="margin-right: 30px;" /&gt; 
   &lt;/picture&gt; &lt;/a&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;strong&gt;The AI Browser Automation Framework&lt;/strong&gt;&lt;br /&gt; &lt;a href="https://docs.stagehand.dev"&gt;Read the Docs&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/browserbase/stagehand/tree/main?tab=MIT-1-ov-file#MIT-1-ov-file"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="media/dark_license.svg" /&gt; 
   &lt;img alt="MIT License" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_license.svg?sanitize=true" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="media/dark_slack.svg" /&gt; 
   &lt;img alt="Slack Community" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_slack.svg?sanitize=true" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/12122" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/12122" alt="browserbase%2Fstagehand | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; If you're looking for the Python implementation, you can find it &lt;a href="https://github.com/browserbase/stagehand-python"&gt; here&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center" style="display: flex; align-items: center; justify-content: center; gap: 4px; margin-bottom: 0;"&gt; 
 &lt;b&gt;Vibe code&lt;/b&gt; 
 &lt;span style="font-size: 1.05em;"&gt; Stagehand with &lt;/span&gt; 
 &lt;a href="https://director.ai" style="display: flex; align-items: center;"&gt; &lt;span&gt;Director&lt;/span&gt; &lt;/a&gt; 
 &lt;span&gt; &lt;/span&gt; 
 &lt;picture&gt; 
  &lt;img alt="Director" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/director_icon.svg?sanitize=true" width="25" /&gt; 
 &lt;/picture&gt; 
&lt;/div&gt; 
&lt;h2&gt;Why Stagehand?&lt;/h2&gt; 
&lt;p&gt;Most existing browser automation tools either require you to write low-level code in a framework like Selenium, Playwright, or Puppeteer, or use high-level agents that can be unpredictable in production. By letting developers choose what to write in code vs. natural language, Stagehand is the natural choice for browser automations in production.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Choose when to write code vs. natural language&lt;/strong&gt;: use AI when you want to navigate unfamiliar pages, and use code (&lt;a href="https://playwright.dev/"&gt;Playwright&lt;/a&gt;) when you know exactly what you want to do.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Preview and cache actions&lt;/strong&gt;: Stagehand lets you preview AI actions before running them, and also helps you easily cache repeatable actions to save time and tokens.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Computer use models with one line of code&lt;/strong&gt;: Stagehand lets you integrate SOTA computer use models from OpenAI and Anthropic into the browser with one line of code.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;Here's how to build a sample browser automation with Stagehand:&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;div style="max-width:300px;"&gt; 
  &lt;img src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/github_demo.gif" alt="See Stagehand in Action" /&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Use Playwright functions on the page object
const page = stagehand.page;
await page.goto("https://github.com/browserbase");

// Use act() to execute individual actions
await page.act("click on the stagehand repo");

// Use Computer Use agents for larger actions
const agent = stagehand.agent({
    provider: "openai",
    model: "computer-use-preview",
});
await agent.execute("Get to the latest PR");

// Use extract() to read data from the page
const { author, title } = await page.extract({
  instruction: "extract the author and title of the PR",
  schema: z.object({
    author: z.string().describe("The username of the PR author"),
    title: z.string().describe("The title of the PR"),
  }),
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://docs.stagehand.dev"&gt;docs.stagehand.dev&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Start with Stagehand with one line of code, or check out our &lt;a href="https://docs.stagehand.dev/first-steps/quickstart"&gt;Quickstart Guide&lt;/a&gt; for more information:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx create-browser-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7"&gt; &lt;p&gt;Watch Anirudh demo create-browser-app to create a Stagehand project!&lt;/p&gt; &lt;/a&gt; 
 &lt;a href="https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7"&gt; &lt;img style="max-width:300px;" src="https://cdn.loom.com/sessions/thumbnails/f5107f86d8c94fa0a8b4b1e89740f7a7-ec3f428b6775ceeb-full-play.gif" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h3&gt;Build and Run from Source&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/browserbase/stagehand.git
cd stagehand
pnpm install
pnpm playwright install
pnpm run build
pnpm run example # run the blank script at ./examples/example.ts
pnpm run example 2048 # run the 2048 example at ./examples/2048.ts
pnpm run evals -man # see evaluation suite options
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Stagehand is best when you have an API key for an LLM provider and Browserbase credentials. To add these to your project, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cp .env.example .env
nano .env # Edit the .env file to add API keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; We highly value contributions to Stagehand! For questions or support, please join our &lt;a href="https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg"&gt;Slack community&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;At a high level, we're focused on improving reliability, speed, and cost in that order of priority. If you're interested in contributing, we strongly recommend reaching out to &lt;a href="https://x.com/miguel_gonzf"&gt;Miguel Gonzalez&lt;/a&gt; or &lt;a href="https://x.com/pk_iv"&gt;Paul Klein&lt;/a&gt; in our &lt;a href="https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg"&gt;Slack community&lt;/a&gt; before starting to ensure that your contribution aligns with our goals.&lt;/p&gt; 
&lt;p&gt;For more information, please see our &lt;a href="https://docs.stagehand.dev/examples/contributing"&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;This project heavily relies on &lt;a href="https://playwright.dev/"&gt;Playwright&lt;/a&gt; as a resilient backbone to automate the web. It also would not be possible without the awesome techniques and discoveries made by &lt;a href="https://github.com/reworkd/tarsier"&gt;tarsier&lt;/a&gt;, &lt;a href="https://github.com/jbeoris/gemini-zod"&gt;gemini-zod&lt;/a&gt;, and &lt;a href="https://github.com/normal-computing/fuji-web"&gt;fuji-web&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We'd like to thank the following people for their major contributions to Stagehand:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pkiv"&gt;Paul Klein&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamath"&gt;Anirudh Kamath&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seanmcguire12"&gt;Sean McGuire&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miguelg719"&gt;Miguel Gonzalez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sameelarif"&gt;Sameel Arif&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/filip-michalsky"&gt;Filip Michalsky&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/jeremypress"&gt;Jeremy Press&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/navidpour"&gt;Navid Pour&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the MIT License.&lt;/p&gt; 
&lt;p&gt;Copyright 2025 Browserbase, Inc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>supermemoryai/supermemory</title>
      <link>https://github.com/supermemoryai/supermemory</link>
      <description>&lt;p&gt;Memory engine and app that is extremely fast, scalable. The Memory API for the AI era.&lt;/p&gt;&lt;hr&gt;&lt;div align="center" style="padding-bottom:20px;padding-top:20px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/logo.svg?sanitize=true" alt="supermemory Logo" width="400" /&gt; 
&lt;/div&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/landing-page.jpeg" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Core Functionality&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#add-memory"&gt;Add Memories from Any Content&lt;/a&gt;&lt;/strong&gt;: Easily add memories from URLs, PDFs, and plain text—just paste, upload, or link.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#chat-memories"&gt;Chat with Your Memories&lt;/a&gt;&lt;/strong&gt;: Converse with your stored content using natural language chat.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#mcp-integration"&gt;Supermemory MCP Integration&lt;/a&gt;&lt;/strong&gt;: Seamlessly connect with all major AI tools (Claude, Cursor, etc.) via Supermemory MCP.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How do i use this?&lt;/h2&gt; 
&lt;p&gt;Go to &lt;a href="https://app.supermemory.ai"&gt;app.supermemory.ai&lt;/a&gt; and sign into with your account&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a id="add-memory"&gt;&lt;/a&gt;Start Adding Memory with your choice of format (Note, Link, File)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/add-memory.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;You can also Connect to your favourite services (Notion, Google Drive, OneDrive)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/add-connections.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;a id="chat-memories"&gt;&lt;/a&gt;Once Memories are added, you can chat with Supermemory by clicking on "Open Chat" and retrieve info from your saved memories&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/chat.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;&lt;a id="mcp-integration"&gt;&lt;/a&gt;Add MCP to your AI Tools (by clicking on "Connect to your AI" and select the AI tool you are trying to integrate)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/mcp.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Have questions or feedback? We're here to help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Email: &lt;a href="mailto:dhravya@supermemory.com"&gt;dhravya@supermemory.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://docs.supermemory.ai"&gt;docs.supermemory.ai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from developers of all skill levels! Whether you're fixing bugs, adding features, or improving documentation, your help makes supermemory better for everyone.&lt;/p&gt; 
&lt;h3&gt;Quick Start for Contributors&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork and clone&lt;/strong&gt; the repository&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt; with &lt;code&gt;bun install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Set up your environment&lt;/strong&gt; by copying &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env.local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start developing&lt;/strong&gt; with &lt;code&gt;bun run dev&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For detailed guidelines, development setup, coding standards, and the complete contribution workflow, please see our &lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/CONTRIBUTING.md"&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Ways to Contribute&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 &lt;strong&gt;Bug fixes&lt;/strong&gt; - Help us squash those pesky issues&lt;/li&gt; 
 &lt;li&gt;✨ &lt;strong&gt;New features&lt;/strong&gt; - Add functionality that users will love&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;strong&gt;UI/UX improvements&lt;/strong&gt; - Make the interface more intuitive&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Performance optimizations&lt;/strong&gt; - Help us make supermemory faster&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our &lt;a href="https://github.com/supermemoryai/supermemory/issues"&gt;Issues&lt;/a&gt; page for &lt;code&gt;good first issue&lt;/code&gt; and &lt;code&gt;help wanted&lt;/code&gt; labels to get started!&lt;/p&gt; 
&lt;h2&gt;Updates &amp;amp; Roadmap&lt;/h2&gt; 
&lt;p&gt;Stay up to date with the latest improvements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.supermemory.ai/changelog/overview"&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/supermemoryai"&gt;X&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>seerr-team/seerr</title>
      <link>https://github.com/seerr-team/seerr</link>
      <description>&lt;p&gt;Open-source media request and discovery manager for Jellyfin, Plex, and Emby.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt;
 ⚠️ 
 &lt;strong&gt;NOTE:&lt;/strong&gt; We are currently in the process of merging Overseerr and Jellyseerr into this unified repository.
&lt;/div&gt; 
&lt;h1 align="center" style="font-size: 4em;"&gt;🚧 Seerr&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/seerr-team/seerr/actions/workflows/release.yml/badge.svg?sanitize=true" alt="Seerr Release" /&gt; &lt;img src="https://github.com/seerr-team/seerr/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Seerr CI" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://discord.gg/seerr"&gt;&lt;img src="https://img.shields.io/discord/783137440809746482" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/fallenbagel/jellyseerr"&gt;&lt;img src="https://img.shields.io/docker/pulls/fallenbagel/jellyseerr" alt="Docker pulls" /&gt;&lt;/a&gt; &lt;a href="http://translate.jellyseerr.dev/engage/jellyseerr/"&gt;&lt;img src="http://translate.jellyseerr.dev/widget/jellyseerr/jellyseerr-frontend/svg-badge.svg?sanitize=true" alt="Translation status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/seerr-team/seerr/raw/develop/LICENSE"&gt;&lt;img alt="GitHub" src="https://img.shields.io/github/license/seerr-team/seerr" /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Seerr&lt;/strong&gt; is a free and open source software application for managing requests for your media library. It integrates with the media server of your choice: &lt;a href="https://jellyfin.org"&gt;Jellyfin&lt;/a&gt;, &lt;a href="https://plex.tv"&gt;Plex&lt;/a&gt;, and &lt;a href="https://emby.media/"&gt;Emby&lt;/a&gt;. In addition, it integrates with your existing services, such as &lt;strong&gt;&lt;a href="https://sonarr.tv/"&gt;Sonarr&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://radarr.video/"&gt;Radarr&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Current Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full Jellyfin/Emby/Plex integration including authentication with user import &amp;amp; management.&lt;/li&gt; 
 &lt;li&gt;Support for &lt;strong&gt;PostgreSQL&lt;/strong&gt; and &lt;strong&gt;SQLite&lt;/strong&gt; databases.&lt;/li&gt; 
 &lt;li&gt;Supports Movies, Shows and Mixed Libraries.&lt;/li&gt; 
 &lt;li&gt;Ability to change email addresses for SMTP purposes.&lt;/li&gt; 
 &lt;li&gt;Easy integration with your existing services. Currently, Seerr supports Sonarr and Radarr. More to come!&lt;/li&gt; 
 &lt;li&gt;Jellyfin/Emby/Plex library scan, to keep track of the titles which are already available.&lt;/li&gt; 
 &lt;li&gt;Customizable request system, which allows users to request individual seasons or movies in a friendly, easy-to-use interface.&lt;/li&gt; 
 &lt;li&gt;Incredibly simple request management UI. Don't dig through the app to simply approve recent requests!&lt;/li&gt; 
 &lt;li&gt;Granular permission system.&lt;/li&gt; 
 &lt;li&gt;Support for various notification agents.&lt;/li&gt; 
 &lt;li&gt;Mobile-friendly design, for when you need to approve requests on the go!&lt;/li&gt; 
 &lt;li&gt;Support for watchlisting &amp;amp; blacklisting media.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With more features on the way! Check out our &lt;a href="https://raw.githubusercontent.com/seerr-team/issues"&gt;issue tracker&lt;/a&gt; to see the features which have already been requested.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Check out our documentation for instructions on how to install and run Seerr:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.seerr.dev/getting-started/"&gt;https://docs.seerr.dev/getting-started/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Packages:&lt;/h3&gt; 
&lt;p&gt;Archlinux: &lt;a href="https://aur.archlinux.org/packages/jellyseerr"&gt;AUR&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Nix: &lt;a href="https://search.nixos.org/packages?channel=unstable&amp;amp;show=jellyseerr"&gt;Nixpkg&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/seerr-team/seerr/develop/public/preview.jpg" /&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out the &lt;a href="https://docs.seerr.dev"&gt;Seerr Documentation&lt;/a&gt; before asking for help. Your question might already be in the docs!&lt;/li&gt; 
 &lt;li&gt;You can get support on &lt;a href="https://discord.gg/seerr"&gt;Discord&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;You can ask questions in the Help category of our &lt;a href="https://raw.githubusercontent.com/seerr-team/discussions"&gt;GitHub Discussions&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Bug reports and feature requests can be submitted via &lt;a href="https://raw.githubusercontent.com/seerr-team/issues"&gt;GitHub Issues&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;API Documentation&lt;/h2&gt; 
&lt;p&gt;You can access the API documentation from your local Seerr install at &lt;a href="http://localhost:5055/api-docs"&gt;http://localhost:5055/api-docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;You can ask questions, share ideas, and more in &lt;a href="https://raw.githubusercontent.com/seerr-team/discussions"&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you would like to chat with other members of our growing community, &lt;a href="https://discord.gg/seerr"&gt;join the Seerr Discord server&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Our &lt;a href="https://raw.githubusercontent.com/seerr-team/seerr/develop/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; applies to all Seerr community channels.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;You can help improve Seerr too! Check out our &lt;a href="https://raw.githubusercontent.com/seerr-team/seerr/develop/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/seerr/#backers"&gt;&lt;img src="https://opencollective.com/seerr/contributors.svg?width=890" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/seerr/#backers"&gt;&lt;img src="https://opencollective.com/seerr/backers.svg?sanitize=true" alt="Become a Backer" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/seerr/#sponsors"&gt;&lt;img src="https://opencollective.com/seerr/sponsors.svg?sanitize=true" alt="Become a Sponsor" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>remix-run/remix</title>
      <link>https://github.com/remix-run/remix</link>
      <description>&lt;p&gt;Build Better Websites. Create modern, resilient user experiences with web fundamentals.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Remix 3!&lt;/h1&gt; 
&lt;p&gt;This is the source repository for Remix 3. It is under active development.&lt;/p&gt; 
&lt;p&gt;We published &lt;a href="https://remix.run/blog/wake-up-remix"&gt;a blog post&lt;/a&gt; earlier this year with some of our thoughts around Remix 3. It explains our philosophy for web development and why we think the time is right for something new. When working on Remix 3, we follow these principles:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Model-First Development&lt;/strong&gt;. AI fundamentally shifts the human-computer interaction model for both user experience and developer workflows. Optimize the source code, documentation, tooling, and abstractions for LLMs. Additionally, develop abstractions for applications to use models in the product itself, not just as a tool to develop it.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Build on Web APIs&lt;/strong&gt;. Sharing abstractions across the stack greatly reduces the amount of context switching, both for humans and machines. Build on the foundation of Web APIs and JavaScript because it is the only full stack ecosystem.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Religiously Runtime&lt;/strong&gt;. Designing for bundlers/compilers/typegen (and any pre-runtime static analysis) leads to poor API design that eventually pollutes the entire system. All packages must be designed with no expectation of static analysis and all tests must run without bundling. Because browsers are involved, &lt;code&gt;--import&lt;/code&gt; loaders for simple transformations like TypeScript and JSX are permissible.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avoid Dependencies&lt;/strong&gt;. Dependencies lock you into somebody else's roadmap. Choose them wisely, wrap them completely, and expect to replace most of them with our own package eventually. The goal is zero.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Demand Composition&lt;/strong&gt;. Abstractions should be single-purpose and replaceable. A composable abstraction is easy to add and remove from an existing program. Every package must be useful and documented independent of any other context. New features should first be attempted as a new package. If impossible, attempt to break up the existing package to make it more composable. However, tightly coupled modules that almost always change together in both directions should be moved to the same package.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Distribute Cohesively&lt;/strong&gt;. Extremely composable ecosystems are difficult to learn and use. Remix will be distributed as a single &lt;code&gt;remix&lt;/code&gt; package for both distribution and documentation.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;p&gt;Although we recommend the &lt;code&gt;remix&lt;/code&gt; package for ease of use, all packages that make up Remix should be usable standalone as well. This forces us to consider package boundaries and helps us define public interfaces that are portable and interopable.&lt;/p&gt; 
&lt;p&gt;Each package in Remix:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Has a &lt;a href="https://en.wikipedia.org/wiki/Single-responsibility_principle"&gt;single responsibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Prioritizes web standards to ensure maximum interoperability and portability across JavaScript runtimes&lt;/li&gt; 
 &lt;li&gt;Augments standards unobtrusively where they are missing or incomplete, minimizing incompatibility risks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This means Remix code is &lt;strong&gt;portable by default&lt;/strong&gt;. Remix packages work seamlessly across &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt;, &lt;a href="https://bun.sh/"&gt;Bun&lt;/a&gt;, &lt;a href="https://deno.com/"&gt;Deno&lt;/a&gt;, &lt;a href="https://workers.cloudflare.com/"&gt;Cloudflare Workers&lt;/a&gt;, and other environments.&lt;/p&gt; 
&lt;p&gt;We leverage server-side web APIs when they are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API"&gt;The Web Streams API&lt;/a&gt; instead of &lt;code&gt;node:stream&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array"&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt; instead of Node.js &lt;code&gt;Buffer&lt;/code&gt;s&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API"&gt;The Web Crypto API&lt;/a&gt; instead of &lt;code&gt;node:crypto&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob"&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/File"&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; instead of some bespoke runtime-specific API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The benefit is code that's not just reusable, but &lt;strong&gt;future-proof&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;p&gt;We currently publish the following packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/fetch-proxy"&gt;fetch-proxy&lt;/a&gt;: Seamlessly construct HTTP proxies with the familiar &lt;code&gt;fetch()&lt;/code&gt; API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/file-storage"&gt;file-storage&lt;/a&gt;: Robust key/value storage tailored for JavaScript &lt;code&gt;File&lt;/code&gt; objects, simplifying file management&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/form-data-parser"&gt;form-data-parser&lt;/a&gt;: An enhanced &lt;code&gt;request.formData()&lt;/code&gt; wrapper enabling efficient, streaming file uploads&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/headers"&gt;headers&lt;/a&gt;: A comprehensive toolkit for effortlessly managing HTTP headers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/lazy-file"&gt;lazy-file&lt;/a&gt;: Optimize performance with lazy-loaded, streaming &lt;code&gt;Blob&lt;/code&gt;s and &lt;code&gt;File&lt;/code&gt;s for JavaScript&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/multipart-parser"&gt;multipart-parser&lt;/a&gt;: High-performance, streaming parser for multipart messages, perfect for handling complex form data&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/node-fetch-server"&gt;node-fetch-server&lt;/a&gt;: Build Node.js HTTP servers using the web-standard &lt;code&gt;fetch()&lt;/code&gt; API, promoting code consistency&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/route-pattern"&gt;route-pattern&lt;/a&gt;: A powerful and flexible URL pattern matching library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/tar-parser"&gt;tar-parser&lt;/a&gt;: A fast, streaming parser for tar archives, designed for efficient data extraction&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! If you'd like to contribute, please feel free to open an issue or submit a pull request. See &lt;a href="https://github.com/remix-run/remix/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://github.com/remix-run/remix/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>requestly/requestly</title>
      <link>https://github.com/requestly/requestly</link>
      <description>&lt;p&gt;Free and open-source API Client &amp; Interceptor.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://requestly.com"&gt;&lt;img src="https://github.com/user-attachments/assets/5b8cdaf9-22d6-4aa5-844c-93d70ece41ad" alt="Requestly" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Join Requestly community on Discord: &lt;a href="https://rqst.ly/join-community"&gt;Link&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Requestly - API Client with HTTP Interceptor, Modfications, Testing &amp;amp; Mocking.&lt;/h2&gt; 
&lt;p&gt;Requestly is a powerful combination of a local API Client (like Postman) &amp;amp; HTTP Interceptor (like Charles Proxy) with API Testing and Mocking. Requestly can be used directly in the browser as a Chrome Extension or installed as a desktop application.&lt;/p&gt; 
&lt;h4&gt;⚡ A Local-first &amp;amp; Powerful alternative to Postman &amp;amp; Charles Proxy ⚡&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/04c32f25-96c4-46d9-a31d-b6887ce7bfdc" alt="requestly-overview" /&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/issues-closed/requestly/requestly" alt="GitHub closed issues" /&gt; &lt;a href="https://chrome.google.com/webstore/detail/redirect-url-modify-heade/mdnleldcmiljblolnjhpnblkcekpdkpa/"&gt;&lt;img src="https://img.shields.io/chrome-web-store/rating/mdnleldcmiljblolnjhpnblkcekpdkpa" alt="Chrome Web Store Rating" /&gt; &lt;img src="https://img.shields.io/chrome-web-store/rating-count/mdnleldcmiljblolnjhpnblkcekpdkpa?label=reviews" alt="Chrome Web Store Reviews" /&gt; &lt;img src="https://img.shields.io/chrome-web-store/users/mdnleldcmiljblolnjhpnblkcekpdkpa?label=downloads" alt="Chrome Web Store Downloads" /&gt;&lt;/a&gt; &lt;a href="https://status.requestly.io"&gt;&lt;img src="https://uptime.betterstack.com/status-badges/v2/monitor/13j20.svg?sanitize=true" alt="Status badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;🏡 Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#a-local-first-solution-local-workspaces"&gt;A Local-first Solution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#rest-api-client"&gt;REST API Client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#environments"&gt;Environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#http-interceptor--http-rules-intercept--modify-https-requests"&gt;HTTP Interceptor - Intercept &amp;amp; Modify HTTP Requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#api-mocking-helps-in-building-frontend-faster-without-waiting-for-backend"&gt;API Mocking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#1-click-imports"&gt;1-Click Imports from Postman, Insomnia, Modheader, Charles Proxy, and Resource Override&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#-best-in-class-support"&gt;Support Channels&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#-development"&gt;👩‍💻 Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#-contributing"&gt;🙏 Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;A Local-first Solution (Local Workspaces)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Local Workspaces&lt;/strong&gt; is a simple, powerful, and privacy-friendly approach to building, testing &amp;amp; mocking your APIs. All your data is stored in the selected directory on your disk. You can also import all your API client files (requests, collections, environments) and codebase into VSCode and edit them directly in your IDE.&lt;/p&gt; 
&lt;p&gt;Collaborate with your colleagues using your preferred sync engine - Git, Google Drive, iCloud, or nothing at all.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Team Workspaces&lt;/strong&gt; are great for seamless collaboration through Requestly sync engine.&lt;/p&gt; 
&lt;h4&gt;⚡ Local and team workspaces⚡&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/06f17e34-1614-4396-95ee-1416003261ad" alt="requestly-local-first-support" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;REST API Client&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.requestly.com/general/api-client/overview"&gt;&lt;strong&gt;Rest API Client&lt;/strong&gt;&lt;/a&gt; offers a local API playground to build and test your APIs. It supports features like API Collections, Environments, Environment Switcher, API Requests History with a beautiful and collaborative interface.&lt;/p&gt; 
&lt;h4&gt;⚡ A Local-first, Beautiful &amp;amp; Powerful alternative to Postman &amp;amp; Insomina ⚡&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/a962b213-8744-4ffc-bd04-fcf891f48914" alt="requestly-api-client" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;Environments&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Environment&lt;/strong&gt; is a set of key-value pairs that can be used in API requests. Environments feature lets you manage variables across multiple environments with an easy environment selector. We support Global variables as well as Collection level variables. &lt;a href="https://docs.requestly.com/general/api-client/environments-and-variables"&gt;Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;⚡ Environments feature ⚡&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/2726fe0e-9f0a-4df7-bfc9-344c65e19353" alt="requestly-api-client-environments-support" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;HTTP Interceptor / HTTP Rules (Intercept &amp;amp; Modify HTTPs Requests)&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.requestly.com/general/http-interceptor/overview"&gt;&lt;strong&gt;HTTP Rules&lt;/strong&gt;&lt;/a&gt; feature can be used to &lt;strong&gt;Intercept, Monitor &amp;amp; Modify HTTPs requests &amp;amp; responses&lt;/strong&gt; from browsers &amp;amp; mobile apps.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use the Chrome/Firefox/Edge extension for Intercepting &amp;amp; Modifying traffic from browsers&lt;/li&gt; 
 &lt;li&gt;Use the desktop app for capturing &amp;amp; modifying traffic from browsers, mobile apps &amp;amp; other desktop apps.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;⚡ Intercept, Monitor &amp;amp; Modify HTTP Requests &amp;amp; Responses ⚡&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/791e54cb-d817-4bc2-83a6-e8bdd3b1cef7" alt="requestly-http-interceptor" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;strong&gt;Different Modifications supported&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Redirect URLs (Map Local &amp;amp; Map Remote) e.g. 
  &lt;ul&gt; 
   &lt;li&gt;Change Hostname, QueryParams, etc in the URL&lt;/li&gt; 
   &lt;li&gt;Redirect traffic from one environment to another (e.g. production to dev)&lt;/li&gt; 
   &lt;li&gt;Swap Tag Manager scripts from production to staging/dev environment&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Modify HTTP Request &amp;amp; Response Headers&lt;/li&gt; 
 &lt;li&gt;Modify API Request &amp;amp; Response body&lt;/li&gt; 
 &lt;li&gt;Inject scripts on web pages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;API Mocking (Helps in building frontend faster without waiting for backend)&lt;/h2&gt; 
&lt;p&gt;Requestly offers a complete API Mocking solution. Using Requestly, you can&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/api-mocking/api-mocking"&gt;Create Local API Mocks&lt;/a&gt;: Intercept the API Requests and return the new response&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/http-rules/rule-types/modify-response-body"&gt;Static &amp;amp; Dynamic Response Overrides&lt;/a&gt;: Override the API response received from server dynamically using simple JS&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/http-rules/advanced-usage/graphql-modify-request-response"&gt;GraphQL Support&lt;/a&gt;: Override graphQL APIs by targeting on query, operationName&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/api-mocking/create-cloud-based-mocks"&gt;Create Cloud-based API Mocks&lt;/a&gt;: Create cloud-based API Mocks and get new endpoints for the mocks&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/sessions/record-api-sessions#bulk-mocking"&gt;Bulk API Mocks&lt;/a&gt;: Record API traffic &amp;amp; Serve the Mocks from the recorded Session&lt;/li&gt; 
 &lt;li&gt;Mock APIs in e2e testing: Use Requestly in your e2e Cypress/Playwright/Selenium and mock the APIs in CI pipeline&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;⚡ API Mocks - Build &amp;amp; Test your frontend faster without waiting for backend ⚡&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/7bc00c7e-c280-40eb-9a2a-c070ecdea662" alt="requestly-api-mocking" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;1-Click Imports&lt;/h2&gt; 
&lt;p&gt;Requestly provides &lt;strong&gt;Importing Configuration&lt;/strong&gt; from the following tools&lt;/p&gt; 
&lt;p&gt;API Clients&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/imports/postman"&gt;Import from Postman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#"&gt;Import from Insomnia&lt;/a&gt; - Coming Soon&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#"&gt;Import from Bruno&lt;/a&gt; - Coming Soon&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;HTTP Interceptors&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/imports/charles-proxy"&gt;Import from Charles Proxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/imports/resource-override"&gt;Import from Resource Override&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/imports/modheader"&gt;Import from ModHeader&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;⚡ Import from Postman, Insomnia, CharlesProxy, ModHeader, etc. ⚡&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/6186e916-9036-4847-95dd-53b66a4c2730" alt="requestly-api-client-environments-support" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;🤝 Best In-Class Support&lt;/h2&gt; 
&lt;h4&gt;⚡ Requestly is known for best product, team and Best in-class support (4.3⭐️ in 1000+ reviews) ⚡&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/"&gt;Documentation&lt;/a&gt;: Product Documentation and Understanding of different features&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/security-privacy/"&gt;Security &amp;amp; Privacy&lt;/a&gt;: Our Security &amp;amp; Privacy document&lt;/li&gt; 
 &lt;li&gt;&lt;a href="mailto:contact@requestly.com"&gt;Email contact@requestly.com&lt;/a&gt;: Email Support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/requestly"&gt;StackOverflow Questions&lt;/a&gt;: Ask Questions on StackOverflow and add "Requestly" tag&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;👩‍💻 Development&lt;/h2&gt; 
&lt;p&gt;This repository contains the source code for Browser extension and UI application which make up the core of Requestly.&lt;br /&gt; Please follow the &lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/getting-started.md"&gt;Getting Started Guide&lt;/a&gt; to get to know about the development process in this repository.&lt;/p&gt; 
&lt;p&gt;Start working on individual modules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/browser-extension"&gt;Browser extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/app"&gt;UI application&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/requestly/requestly-desktop-app"&gt;Desktop application&lt;/a&gt; (Electron-based application for MacOS, Windows)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/requestly/requestly-web-sdk"&gt;Web SDK&lt;/a&gt; (facilitates SessionBook)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/requestly/requestly-mock-server"&gt;Mock Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/requestly/requestly-backend"&gt;Backend&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;🙏 Contributing&lt;/h2&gt; 
&lt;p&gt;Currently, while Requestly is open source, we are not accepting pull requests. As a startup with a small team, our focus is on moving quickly and we currently lack the resources and documentation needed to actively support an open-source community. This will probably change in the future.&lt;/p&gt; 
&lt;p&gt;If you are still interested, read our &lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to learn about how to propose bugfixes and improvements, and how the development process works.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#contributors"&gt;&lt;img src="https://img.shields.io/github/all-contributors/requestly/requestly?color=ee8449&amp;amp;style=flat-square" alt="All Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://sagarsoni.dev/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29792913?v=4?s=100" alt="Sagar Soni" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://sagarsoni.dev/"&gt;&lt;strong&gt;Sagar Soni&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=sagarsoni7"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="http://sahil865gupta.github.io"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16779465?v=4?s=100" alt="Sahil Gupta" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="http://sahil865gupta.github.io"&gt;&lt;strong&gt;Sahil Gupta&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=wrongsahil"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/lazyvab"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6367566?v=4?s=100" alt="Vaibhav Nigam" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/lazyvab"&gt;&lt;strong&gt;Vaibhav Nigam&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=lazyvab"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/RuntimeTerror10"&gt;&lt;img src="https://avatars.githubusercontent.com/u/53986600?v=4?s=100" alt="Parth Bhardwaj" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/RuntimeTerror10"&gt;&lt;strong&gt;Parth Bhardwaj&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=RuntimeTerror10"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="http://linkedin.com/in/rohanmathur91"&gt;&lt;img src="https://avatars.githubusercontent.com/u/61556757?v=4?s=100" alt="Rohan Mathur" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="http://linkedin.com/in/rohanmathur91"&gt;&lt;strong&gt;Rohan Mathur&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=rohanmathur91"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/nafees87n"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56021937?v=4?s=100" alt="Nafees Nehar" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/nafees87n"&gt;&lt;strong&gt;Nafees Nehar&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=nafees87n"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/nsrCodes"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57226514?v=4?s=100" alt="Navdeep Singh Rathore" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/nsrCodes"&gt;&lt;strong&gt;Navdeep Singh Rathore&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=nsrCodes"&gt;💻&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://requestly.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3108399?v=4?s=100" alt="Sachin Jain" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://requestly.com"&gt;&lt;strong&gt;Sachin Jain&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=sachinjain024"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/ashishsangle707"&gt;&lt;img src="https://avatars.githubusercontent.com/u/124448580?v=4?s=100" alt="ashishsangle707" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/ashishsangle707"&gt;&lt;strong&gt;ashishsangle707&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#projectManagement-ashishsangle707"&gt;📆&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/echo-sg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56088056?v=4?s=100" alt="Shrey Gupta" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/echo-sg"&gt;&lt;strong&gt;Shrey Gupta&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=echo-sg"&gt;💻&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#projectManagement-echo-sg"&gt;📆&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/ncharanaraj"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43924299?v=4?s=100" alt="Charanaraj N" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/ncharanaraj"&gt;&lt;strong&gt;Charanaraj N&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=ncharanaraj"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/Muhammad-Daniyal-Jawad1"&gt;&lt;img src="https://avatars.githubusercontent.com/u/130592856?v=4?s=100" alt="Muhammad-Daniyal-Jawad1" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/Muhammad-Daniyal-Jawad1"&gt;&lt;strong&gt;Muhammad-Daniyal-Jawad1&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=Muhammad-Daniyal-Jawad1"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://piyush-web-app.web.app/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43876655?v=4?s=100" alt="PIYUSH NEGI" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://piyush-web-app.web.app/"&gt;&lt;strong&gt;PIYUSH NEGI&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=npiyush97"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td&gt;&amp;nbsp;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>CapSoftware/Cap</title>
      <link>https://github.com/CapSoftware/Cap</link>
      <description>&lt;p&gt;Open source Loom alternative. Beautiful, shareable screen recordings.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;img width="150" height="150" src="https://github.com/CapSoftware/Cap/raw/main/apps/desktop/src-tauri/icons/Square310x310Logo.png" alt="Logo" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;&lt;b&gt;Cap&lt;/b&gt;&lt;/h1&gt; 
&lt;p align="center"&gt; The open source Loom alternative. &lt;br /&gt; &lt;a href="https://cap.so"&gt;&lt;strong&gt;Cap.so »&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;b&gt;Downloads for &lt;/b&gt; &lt;a href="https://cap.so/download"&gt;macOS &amp;amp; Windows&lt;/a&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://console.algora.io/org/CapSoftware/bounties?status=open"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2FCapSoftware%2Fbounties%3Fstatus%3Dopen" alt="Open Bounties" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cap is the open source alternative to Loom. It's a video messaging tool that allows you to record, edit and share videos in seconds.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/CapSoftware/Cap/refs/heads/main/apps/web/public/landing-cover.png" /&gt; 
&lt;h1&gt;Self Hosting&lt;/h1&gt; 
&lt;p&gt;Cap Web is available to self-host using Docker or Railway, see our &lt;a href="https://cap.so/docs/self-hosting"&gt;self-hosting docs&lt;/a&gt; to learn more. You can also use the button below to deploy Cap Web to Railway:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://railway.com/new/template/PwpGcf"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cap Desktop can connect to your self-hosted Cap Web instance regardless of if you build it yourself or &lt;a href="https://cap.so/download"&gt;download from our website&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Monorepo App Architecture&lt;/h1&gt; 
&lt;p&gt;We use a combination of Rust, React (Next.js), TypeScript, Tauri, Drizzle (ORM), MySQL, TailwindCSS throughout this Turborepo powered monorepo.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A note about database: The codebase is currently designed to work with MySQL only. MariaDB or other compatible databases might partially work but are not officially supported.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Apps:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;desktop&lt;/code&gt;: A &lt;a href="https://tauri.app"&gt;Tauri&lt;/a&gt; (Rust) app, using &lt;a href="https://start.solidjs.com"&gt;SolidStart&lt;/a&gt; on the frontend.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;web&lt;/code&gt;: A &lt;a href="https://nextjs.org"&gt;Next.js&lt;/a&gt; web app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Packages:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ui&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; Shared component library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;utils&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; Shared utility library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tsconfig&lt;/code&gt;: Shared &lt;code&gt;tsconfig&lt;/code&gt; configurations used throughout the monorepo.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;database&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; and &lt;a href="https://orm.drizzle.team/"&gt;Drizzle ORM&lt;/a&gt; Shared database library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;config&lt;/code&gt;: &lt;code&gt;eslint&lt;/code&gt; configurations (includes &lt;code&gt;eslint-config-next&lt;/code&gt;, &lt;code&gt;eslint-config-prettier&lt;/code&gt; other configs used throughout the monorepo).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;License:&lt;/h3&gt; 
&lt;p&gt;Portions of this software are licensed as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All code residing in the &lt;code&gt;cap-camera*&lt;/code&gt; and &lt;code&gt;scap-*&lt;/code&gt; families of crates is licensed under the MIT License (see &lt;a href="https://github.com/CapSoftware/Cap/raw/main/licenses/LICENSE-MIT"&gt;licenses/LICENSE-MIT&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;All third party components are licensed under the original license provided by the owner of the applicable component&lt;/li&gt; 
 &lt;li&gt;All other content not mentioned above is available under the AGPLv3 license as defined in &lt;a href="https://github.com/CapSoftware/Cap/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/CapSoftware/Cap/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information. This guide is a work in progress, and is updated regularly as the app matures.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EvolutionAPI/evolution-api</title>
      <link>https://github.com/EvolutionAPI/evolution-api</link>
      <description>&lt;p&gt;Evolution API is an open-source WhatsApp integration API&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;Evolution Api&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://hub.docker.com/r/evoapicloud/evolution-api"&gt;&lt;img src="https://img.shields.io/badge/Docker-image-blue" alt="Docker Image" /&gt;&lt;/a&gt; &lt;a href="https://evolution-api.com/whatsapp"&gt;&lt;img src="https://img.shields.io/badge/Group-WhatsApp-%2322BC18" alt="Whatsapp Group" /&gt;&lt;/a&gt; &lt;a href="https://evolution-api.com/discord"&gt;&lt;img src="https://img.shields.io/badge/Discord-Community-blue" alt="Discord Community" /&gt;&lt;/a&gt; &lt;a href="https://evolution-api.com/postman"&gt;&lt;img src="https://img.shields.io/badge/Postman-Collection-orange" alt="Postman Collection" /&gt;&lt;/a&gt; &lt;a href="https://doc.evolution-api.com"&gt;&lt;img src="https://img.shields.io/badge/Documentation-Official-green" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://evolutionapi.canny.io/feature-requests"&gt;&lt;img src="https://img.shields.io/badge/Feature-Requests-purple" alt="Feature Requests" /&gt;&lt;/a&gt; &lt;a href="https://evolutionapi.canny.io/feature-requests"&gt;&lt;img src="https://img.shields.io/badge/Roadmap-Community-blue" alt="Roadmap" /&gt;&lt;/a&gt; &lt;a href="https://evolutionapi.canny.io/changelog"&gt;&lt;img src="https://img.shields.io/badge/Changelog-Updates-green" alt="Changelog" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-Apache--2.0-blue" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://app.picpay.com/user/davidsongomes1998"&gt;&lt;img src="https://img.shields.io/badge/Donation-picpay-green" alt="Support" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/EvolutionAPI"&gt;&lt;img src="https://img.shields.io/badge/Github-sponsor-orange" alt="Sponsors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt;
 &lt;img src="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/public/images/cover.png" /&gt;
&lt;/div&gt; 
&lt;h2&gt;Evolution API&lt;/h2&gt; 
&lt;p&gt;Evolution API began as a WhatsApp controller API based on &lt;a href="https://github.com/code-chat-br/whatsapp-api"&gt;CodeChat&lt;/a&gt;, which in turn implemented the &lt;a href="https://github.com/WhiskeySockets/Baileys"&gt;Baileys&lt;/a&gt; library. While originally focused on WhatsApp, Evolution API has grown into a comprehensive platform supporting multiple messaging services and integrations. We continue to acknowledge CodeChat for laying the groundwork.&lt;/p&gt; 
&lt;p&gt;Today, Evolution API is not limited to WhatsApp. It integrates with various platforms such as Typebot, Chatwoot, Dify, and OpenAI, offering a broad array of functionalities beyond messaging. Evolution API supports both the Baileys-based WhatsApp API and the official WhatsApp Business API, with upcoming support for Instagram and Messenger.&lt;/p&gt; 
&lt;h2&gt;Looking for a Lightweight Version?&lt;/h2&gt; 
&lt;p&gt;For those who need a more streamlined and performance-optimized version, check out &lt;a href="https://github.com/EvolutionAPI/evolution-api-lite"&gt;Evolution API Lite&lt;/a&gt;. It's designed specifically for microservices, focusing solely on connectivity without integrations or audio conversion features. Ideal for environments that prioritize simplicity and efficiency.&lt;/p&gt; 
&lt;h2&gt;Types of Connections&lt;/h2&gt; 
&lt;p&gt;Evolution API supports multiple types of connections to WhatsApp, enabling flexible and powerful integration options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;WhatsApp API - Baileys&lt;/em&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;A free API based on WhatsApp Web, leveraging the &lt;a href="https://github.com/WhiskeySockets/Baileys"&gt;Baileys library&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;This connection type allows control over WhatsApp Web functionalities through a RESTful API, suitable for multi-service chats, service bots, and other WhatsApp-integrated systems.&lt;/li&gt; 
   &lt;li&gt;Note: This method relies on the web version of WhatsApp and may have limitations compared to official APIs.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;WhatsApp Cloud API&lt;/em&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;The official API provided by Meta (formerly Facebook).&lt;/li&gt; 
   &lt;li&gt;This connection type offers a robust and reliable solution designed for businesses needing higher volumes of messaging and better integration support.&lt;/li&gt; 
   &lt;li&gt;The Cloud API supports features such as end-to-end encryption, advanced analytics, and more comprehensive customer service tools.&lt;/li&gt; 
   &lt;li&gt;To use this API, you must comply with Meta's policies and potentially pay for usage based on message volume and other factors.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;p&gt;Evolution API supports various integrations to enhance its functionality. Below is a list of available integrations and their uses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://typebot.io/"&gt;Typebot&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Build conversational bots using Typebot, integrated directly into Evolution with trigger management.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.chatwoot.com/"&gt;Chatwoot&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Direct integration with Chatwoot for handling customer service for your business.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.rabbitmq.com/"&gt;RabbitMQ&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via RabbitMQ.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://kafka.apache.org/"&gt;Apache Kafka&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via Apache Kafka for real-time event streaming and processing.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://aws.amazon.com/pt/sqs/"&gt;Amazon SQS&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via Amazon SQS.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://socket.io/"&gt;Socket.io&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via WebSocket.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://dify.ai/"&gt;Dify&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Integrate your Evolution API directly with Dify AI for seamless trigger management and multiple agents.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://openai.com/"&gt;OpenAI&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Integrate your Evolution API with OpenAI for AI capabilities, including audio-to-text conversion, available across all Evolution integrations.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Amazon S3 / Minio:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Store media files received in &lt;a href="https://aws.amazon.com/pt/s3/"&gt;Amazon S3&lt;/a&gt; or &lt;a href="https://min.io/"&gt;Minio&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community &amp;amp; Feedback&lt;/h2&gt; 
&lt;p&gt;We value community input and feedback to continuously improve Evolution API:&lt;/p&gt; 
&lt;h3&gt;🚀 Feature Requests &amp;amp; Roadmap&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolutionapi.canny.io/feature-requests"&gt;Feature Requests&lt;/a&gt;&lt;/strong&gt;: Submit new feature ideas and vote on community proposals&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolutionapi.canny.io/feature-requests"&gt;Roadmap&lt;/a&gt;&lt;/strong&gt;: View planned features and development progress&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolutionapi.canny.io/changelog"&gt;Changelog&lt;/a&gt;&lt;/strong&gt;: Stay updated with the latest releases and improvements&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💬 Community Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolution-api.com/whatsapp"&gt;WhatsApp Group&lt;/a&gt;&lt;/strong&gt;: Join our community for support and discussions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolution-api.com/discord"&gt;Discord Community&lt;/a&gt;&lt;/strong&gt;: Real-time chat with developers and users&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/EvolutionAPI/evolution-api/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/strong&gt;: Report bugs and technical issues&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔒 Security&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/strong&gt;: Guidelines for reporting security vulnerabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security Contact&lt;/strong&gt;: &lt;a href="mailto:contato@evolution-api.com"&gt;contato@evolution-api.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Telemetry Notice&lt;/h2&gt; 
&lt;p&gt;To continuously improve our services, we have implemented telemetry that collects data on the routes used, the most accessed routes, and the version of the API in use. We would like to assure you that no sensitive or personal data is collected during this process. The telemetry helps us identify improvements and provide a better experience for users.&lt;/p&gt; 
&lt;h2&gt;Evolution Support Premium&lt;/h2&gt; 
&lt;p&gt;Join our Evolution Pro community for expert support and a weekly call to answer questions. Visit the link below to learn more and subscribe:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://evolution-api.com/suporte-pro"&gt;Click here to learn more&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Donate to the project.&lt;/h1&gt; 
&lt;h4&gt;Github Sponsors&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/EvolutionAPI"&gt;https://github.com/sponsors/EvolutionAPI&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Content Creator Partners&lt;/h1&gt; 
&lt;p&gt;We are proud to collaborate with the following content creators who have contributed valuable insights and tutorials about Evolution API:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@promovaweb"&gt;Promovaweb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@canalsandeco"&gt;Sandeco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@ComunidadeZDG"&gt;Comunidade ZDG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@FrancisMNO"&gt;Francis MNO&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/@pablocabral"&gt;Pablo Cabral&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@xpopdigital"&gt;XPop Digital&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@costarwagnerdev"&gt;Costar Wagner Dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/@dantetesta_"&gt;Dante Testa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/channel/UCnYGZIE2riiLqaN9sI6riig"&gt;Rubén Salazar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/youtube.com/OrionDesign_Oficial"&gt;OrionDesign&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/youtube.com/@impa365_ofc"&gt;IMPA 365&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/@comunidadehubconnect"&gt;Comunidade Hub Connect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCG7DjUmAxtYyURlOGAIryNQ?view_as=subscriber"&gt;dSantana Automações&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@edisonmartinsmkt"&gt;Edison Martins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@astraonlineweb"&gt;Astra Online&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@sevenautomacoes"&gt;MKT Seven Automações&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/vamosautomatizar"&gt;Vamos automatizar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Evolution API is licensed under the Apache License 2.0, with the following additional conditions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;LOGO and copyright information&lt;/strong&gt;: In the process of using Evolution API's frontend components, you may not remove or modify the LOGO or copyright information in the Evolution API console or applications. This restriction is inapplicable to uses of Evolution API that do not involve its frontend components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Usage Notification Requirement&lt;/strong&gt;: If Evolution API is used as part of any project, including closed-source systems (e.g., proprietary software), the user is required to display a clear notification within the system that Evolution API is being utilized. This notification should be visible to system administrators and accessible from the system's documentation or settings page. Failure to comply with this requirement may result in the necessity for a commercial license, as determined by the producer.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please contact &lt;a href="mailto:contato@evolution-api.com"&gt;contato@evolution-api.com&lt;/a&gt; to inquire about licensing matters.&lt;/p&gt; 
&lt;p&gt;Apart from the specific conditions mentioned above, all other rights and restrictions follow the Apache License 2.0. Detailed information about the Apache License 2.0 can be found at &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;© 2025 Evolution API&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>czlonkowski/n8n-mcp</title>
      <link>https://github.com/czlonkowski/n8n-mcp</link>
      <description>&lt;p&gt;A MCP for Claude Desktop / Claude Code / Windsurf / Cursor to build n8n workflows for you&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;n8n-MCP&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czlonkowski/n8n-mcp"&gt;&lt;img src="https://img.shields.io/github/stars/czlonkowski/n8n-mcp?style=social" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/n8n-mcp"&gt;&lt;img src="https://img.shields.io/npm/v/n8n-mcp.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/czlonkowski/n8n-mcp"&gt;&lt;img src="https://codecov.io/gh/czlonkowski/n8n-mcp/graph/badge.svg?token=YOUR_TOKEN" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czlonkowski/n8n-mcp/actions"&gt;&lt;img src="https://img.shields.io/badge/tests-3336%20passing-brightgreen.svg?sanitize=true" alt="Tests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/n8n-io/n8n"&gt;&lt;img src="https://img.shields.io/badge/n8n-%5E1.115.2-orange.svg?sanitize=true" alt="n8n version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czlonkowski/n8n-mcp/pkgs/container/n8n-mcp"&gt;&lt;img src="https://img.shields.io/badge/docker-ghcr.io%2Fczlonkowski%2Fn8n--mcp-green.svg?sanitize=true" alt="Docker" /&gt;&lt;/a&gt; &lt;a href="https://railway.com/deploy/n8n-mcp?referralCode=n8n-mcp"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A Model Context Protocol (MCP) server that provides AI assistants with comprehensive access to n8n node documentation, properties, and operations. Deploy in minutes to give Claude and other AI assistants deep knowledge about n8n's 525+ workflow automation nodes.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;n8n-MCP serves as a bridge between n8n's workflow automation platform and AI models, enabling them to understand and work with n8n nodes effectively. It provides structured access to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📚 &lt;strong&gt;536 n8n nodes&lt;/strong&gt; from both n8n-nodes-base and @n8n/n8n-nodes-langchain&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;strong&gt;Node properties&lt;/strong&gt; - 99% coverage with detailed schemas&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Node operations&lt;/strong&gt; - 63.6% coverage of available actions&lt;/li&gt; 
 &lt;li&gt;📄 &lt;strong&gt;Documentation&lt;/strong&gt; - 90% coverage from official n8n docs (including AI nodes)&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;AI tools&lt;/strong&gt; - 263 AI-capable nodes detected with full documentation&lt;/li&gt; 
 &lt;li&gt;💡 &lt;strong&gt;Real-world examples&lt;/strong&gt; - 2,646 pre-extracted configurations from popular templates&lt;/li&gt; 
 &lt;li&gt;🎯 &lt;strong&gt;Template library&lt;/strong&gt; - 2,500+ workflow templates with smart filtering&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⚠️ Important Safety Warning&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NEVER edit your production workflows directly with AI!&lt;/strong&gt; Always:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;Make a copy&lt;/strong&gt; of your workflow before using AI tools&lt;/li&gt; 
 &lt;li&gt;🧪 &lt;strong&gt;Test in development&lt;/strong&gt; environment first&lt;/li&gt; 
 &lt;li&gt;💾 &lt;strong&gt;Export backups&lt;/strong&gt; of important workflows&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Validate changes&lt;/strong&gt; before deploying to production&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;AI results can be unpredictable. Protect your work!&lt;/p&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;p&gt;Get n8n-MCP running in 5 minutes:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/5CccjiLLyaY?si=Z62SBGlw9G34IQnQ&amp;amp;t=343"&gt;&lt;img src="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/thumbnail.png" alt="n8n-mcp Video Quickstart Guide" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Option 1: npx (Fastest - No Installation!) 🚀&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; installed on your system&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run directly with npx (no installation needed!)
npx n8n-mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add to Claude Desktop config:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Basic configuration (documentation tools only):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "npx",
      "args": ["n8n-mcp"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Full configuration (with n8n management tools):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "npx",
      "args": ["n8n-mcp"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true",
        "N8N_API_URL": "https://your-n8n-instance.com",
        "N8N_API_KEY": "your-api-key"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: npx will download and run the latest version automatically. The package includes a pre-built database with all n8n node information.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Configuration file locations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Restart Claude Desktop after updating configuration&lt;/strong&gt; - That's it! 🎉&lt;/p&gt; 
&lt;h3&gt;Option 2: Docker (Easy &amp;amp; Isolated) 🐳&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; Docker installed on your system&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;📦 Install Docker&lt;/strong&gt; (click to expand)&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;macOS:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Using Homebrew
brew install --cask docker

# Or download from https://www.docker.com/products/docker-desktop/
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Linux (Ubuntu/Debian):&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Update package index
sudo apt-get update

# Install Docker
sudo apt-get install docker.io

# Start Docker service
sudo systemctl start docker
sudo systemctl enable docker

# Add your user to docker group (optional, to run without sudo)
sudo usermod -aG docker $USER
# Log out and back in for this to take effect
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Option 1: Using winget (Windows Package Manager)
winget install Docker.DockerDesktop

# Option 2: Using Chocolatey
choco install docker-desktop

# Option 3: Download installer from https://www.docker.com/products/docker-desktop/
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Verify installation:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Pull the Docker image (~280MB, no n8n dependencies!)
docker pull ghcr.io/czlonkowski/n8n-mcp:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚡ Ultra-optimized:&lt;/strong&gt; Our Docker image is 82% smaller than typical n8n images because it contains NO n8n dependencies - just the runtime MCP server with a pre-built database!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Add to Claude Desktop config:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Basic configuration (documentation tools only):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--init",
        "-e", "MCP_MODE=stdio",
        "-e", "LOG_LEVEL=error",
        "-e", "DISABLE_CONSOLE_OUTPUT=true",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Full configuration (with n8n management tools):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--init",
        "-e", "MCP_MODE=stdio",
        "-e", "LOG_LEVEL=error",
        "-e", "DISABLE_CONSOLE_OUTPUT=true",
        "-e", "N8N_API_URL=https://your-n8n-instance.com",
        "-e", "N8N_API_KEY=your-api-key",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 Tip: If you're running n8n locally on the same machine (e.g., via Docker), use &lt;a href="http://host.docker.internal:5678"&gt;http://host.docker.internal:5678&lt;/a&gt; as the N8N_API_URL.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The n8n API credentials are optional. Without them, you'll have access to all documentation and validation tools. With them, you'll additionally get workflow management capabilities (create, update, execute workflows).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;🏠 Local n8n Instance Configuration&lt;/h3&gt; 
&lt;p&gt;If you're running n8n locally (e.g., &lt;code&gt;http://localhost:5678&lt;/code&gt; or Docker), you need to allow localhost webhooks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run", "-i", "--rm", "--init",
        "-e", "MCP_MODE=stdio",
        "-e", "LOG_LEVEL=error",
        "-e", "DISABLE_CONSOLE_OUTPUT=true",
        "-e", "N8N_API_URL=http://host.docker.internal:5678",
        "-e", "N8N_API_KEY=your-api-key",
        "-e", "WEBHOOK_SECURITY_MODE=moderate",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;Important:&lt;/strong&gt; Set &lt;code&gt;WEBHOOK_SECURITY_MODE=moderate&lt;/code&gt; to allow webhooks to your local n8n instance. This is safe for local development while still blocking private networks and cloud metadata.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; The &lt;code&gt;-i&lt;/code&gt; flag is required for MCP stdio communication.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🔧 If you encounter any issues with Docker, check our &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/DOCKER_TROUBLESHOOTING.md"&gt;Docker Troubleshooting Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Configuration file locations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Restart Claude Desktop after updating configuration&lt;/strong&gt; - That's it! 🎉&lt;/p&gt; 
&lt;h2&gt;🔐 Privacy &amp;amp; Telemetry&lt;/h2&gt; 
&lt;p&gt;n8n-mcp collects anonymous usage statistics to improve the tool. &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/PRIVACY.md"&gt;View our privacy policy&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Opting Out&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;For npx users:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx n8n-mcp telemetry disable
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;For Docker users:&lt;/strong&gt; Add the following environment variable to your Docker configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;"-e", "N8N_MCP_TELEMETRY_DISABLED=true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example in Claude Desktop config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--init",
        "-e", "MCP_MODE=stdio",
        "-e", "LOG_LEVEL=error",
        "-e", "N8N_MCP_TELEMETRY_DISABLED=true",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;For docker-compose users:&lt;/strong&gt; Set in your environment file or docker-compose.yml:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;environment:
  N8N_MCP_TELEMETRY_DISABLED: "true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;💖 Support This Project&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/sponsors/czlonkowski"&gt; &lt;img src="https://img.shields.io/badge/Sponsor-❤️-db61a2?style=for-the-badge&amp;amp;logo=github-sponsors" alt="Sponsor n8n-mcp" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;n8n-mcp&lt;/strong&gt; started as a personal tool but now helps tens of thousands of developers automate their workflows efficiently. Maintaining and developing this project competes with my paid work.&lt;/p&gt; 
&lt;p&gt;Your sponsorship helps me:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 Dedicate focused time to new features&lt;/li&gt; 
 &lt;li&gt;🐛 Respond quickly to issues&lt;/li&gt; 
 &lt;li&gt;📚 Keep documentation up-to-date&lt;/li&gt; 
 &lt;li&gt;🔄 Ensure compatibility with latest n8n releases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Every sponsorship directly translates to hours invested in making n8n-mcp better for everyone. &lt;strong&gt;&lt;a href="https://github.com/sponsors/czlonkowski"&gt;Become a sponsor →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Option 3: Local Installation (For Development)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; installed on your system&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Clone and setup
git clone https://github.com/czlonkowski/n8n-mcp.git
cd n8n-mcp
npm install
npm run build
npm run rebuild

# 2. Test it works
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add to Claude Desktop config:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Basic configuration (documentation tools only):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "node",
      "args": ["/absolute/path/to/n8n-mcp/dist/mcp/index.js"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Full configuration (with n8n management tools):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "node",
      "args": ["/absolute/path/to/n8n-mcp/dist/mcp/index.js"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true",
        "N8N_API_URL": "https://your-n8n-instance.com",
        "N8N_API_KEY": "your-api-key"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The n8n API credentials can be configured either in a &lt;code&gt;.env&lt;/code&gt; file (create from &lt;code&gt;.env.example&lt;/code&gt;) or directly in the Claude config as shown above.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 Tip: If you’re running n8n locally on the same machine (e.g., via Docker), use &lt;a href="http://host.docker.internal:5678"&gt;http://host.docker.internal:5678&lt;/a&gt; as the N8N_API_URL.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Option 4: Railway Cloud Deployment (One-Click Deploy) ☁️&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; Railway account (free tier available)&lt;/p&gt; 
&lt;p&gt;Deploy n8n-MCP to Railway's cloud platform with zero configuration:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://railway.com/deploy/n8n-mcp?referralCode=n8n-mcp"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;☁️ &lt;strong&gt;Instant cloud hosting&lt;/strong&gt; - No server setup required&lt;/li&gt; 
 &lt;li&gt;🔒 &lt;strong&gt;Secure by default&lt;/strong&gt; - HTTPS included, auth token warnings&lt;/li&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;Global access&lt;/strong&gt; - Connect from any Claude Desktop&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Auto-scaling&lt;/strong&gt; - Railway handles the infrastructure&lt;/li&gt; 
 &lt;li&gt;📊 &lt;strong&gt;Built-in monitoring&lt;/strong&gt; - Logs and metrics included&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Quick Setup:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Click the "Deploy on Railway" button above&lt;/li&gt; 
 &lt;li&gt;Sign in to Railway (or create a free account)&lt;/li&gt; 
 &lt;li&gt;Configure your deployment (project name, region)&lt;/li&gt; 
 &lt;li&gt;Click "Deploy" and wait ~2-3 minutes&lt;/li&gt; 
 &lt;li&gt;Copy your deployment URL and auth token&lt;/li&gt; 
 &lt;li&gt;Add to Claude Desktop config using the HTTPS URL&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 &lt;strong&gt;For detailed setup instructions, troubleshooting, and configuration examples, see our &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/RAILWAY_DEPLOYMENT.md"&gt;Railway Deployment Guide&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Configuration file locations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Restart Claude Desktop after updating configuration&lt;/strong&gt; - That's it! 🎉&lt;/p&gt; 
&lt;h2&gt;🔧 n8n Integration&lt;/h2&gt; 
&lt;p&gt;Want to use n8n-MCP with your n8n instance? Check out our comprehensive &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/N8N_DEPLOYMENT.md"&gt;n8n Deployment Guide&lt;/a&gt; for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Local testing with the MCP Client Tool node&lt;/li&gt; 
 &lt;li&gt;Production deployment with Docker Compose&lt;/li&gt; 
 &lt;li&gt;Cloud deployment on Hetzner, AWS, and other providers&lt;/li&gt; 
 &lt;li&gt;Troubleshooting and security best practices&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💻 Connect your IDE&lt;/h2&gt; 
&lt;p&gt;n8n-MCP works with multiple AI-powered IDEs and tools. Choose your preferred development environment:&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CLAUDE_CODE_SETUP.md"&gt;Claude Code&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Quick setup for Claude Code CLI - just type "add this mcp server" and paste the config.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/VS_CODE_PROJECT_SETUP.md"&gt;Visual Studio Code&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Full setup guide for VS Code with GitHub Copilot integration and MCP support.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CURSOR_SETUP.md"&gt;Cursor&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Step-by-step tutorial for connecting n8n-MCP to Cursor IDE with custom rules.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/WINDSURF_SETUP.md"&gt;Windsurf&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Complete guide for integrating n8n-MCP with Windsurf using project rules.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CODEX_SETUP.md"&gt;Codex&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Complete guide for integrating n8n-MCP with Codex.&lt;/p&gt; 
&lt;h2&gt;🤖 Claude Project Setup&lt;/h2&gt; 
&lt;p&gt;For the best results when using n8n-MCP with Claude Projects, use these enhanced system instructions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-markdown"&gt;You are an expert in n8n automation software using n8n-MCP tools. Your role is to design, build, and validate n8n workflows with maximum accuracy and efficiency.

## Core Principles

### 1. Silent Execution
CRITICAL: Execute tools without commentary. Only respond AFTER all tools complete.

❌ BAD: "Let me search for Slack nodes... Great! Now let me get details..."
✅ GOOD: [Execute search_nodes and get_node_essentials in parallel, then respond]

### 2. Parallel Execution
When operations are independent, execute them in parallel for maximum performance.

✅ GOOD: Call search_nodes, list_nodes, and search_templates simultaneously
❌ BAD: Sequential tool calls (await each one before the next)

### 3. Templates First
ALWAYS check templates before building from scratch (2,500+ available).

### 4. Multi-Level Validation
Use validate_node_minimal → validate_node_operation → validate_workflow pattern.

### 5. Never Trust Defaults
⚠️ CRITICAL: Default parameter values are the #1 source of runtime failures.
ALWAYS explicitly configure ALL parameters that control node behavior.

## Workflow Process

1. **Start**: Call `tools_documentation()` for best practices

2. **Template Discovery Phase** (FIRST - parallel when searching multiple)
   - `search_templates_by_metadata({complexity: "simple"})` - Smart filtering
   - `get_templates_for_task('webhook_processing')` - Curated by task
   - `search_templates('slack notification')` - Text search
   - `list_node_templates(['n8n-nodes-base.slack'])` - By node type

   **Filtering strategies**:
   - Beginners: `complexity: "simple"` + `maxSetupMinutes: 30`
   - By role: `targetAudience: "marketers"` | `"developers"` | `"analysts"`
   - By time: `maxSetupMinutes: 15` for quick wins
   - By service: `requiredService: "openai"` for compatibility

3. **Node Discovery** (if no suitable template - parallel execution)
   - Think deeply about requirements. Ask clarifying questions if unclear.
   - `search_nodes({query: 'keyword', includeExamples: true})` - Parallel for multiple nodes
   - `list_nodes({category: 'trigger'})` - Browse by category
   - `list_ai_tools()` - AI-capable nodes

4. **Configuration Phase** (parallel for multiple nodes)
   - `get_node_essentials(nodeType, {includeExamples: true})` - 10-20 key properties
   - `search_node_properties(nodeType, 'auth')` - Find specific properties
   - `get_node_documentation(nodeType)` - Human-readable docs
   - Show workflow architecture to user for approval before proceeding

5. **Validation Phase** (parallel for multiple nodes)
   - `validate_node_minimal(nodeType, config)` - Quick required fields check
   - `validate_node_operation(nodeType, config, 'runtime')` - Full validation with fixes
   - Fix ALL errors before proceeding

6. **Building Phase**
   - If using template: `get_template(templateId, {mode: "full"})`
   - **MANDATORY ATTRIBUTION**: "Based on template by **[author.name]** (@[username]). View at: [url]"
   - Build from validated configurations
   - ⚠️ EXPLICITLY set ALL parameters - never rely on defaults
   - Connect nodes with proper structure
   - Add error handling
   - Use n8n expressions: $json, $node["NodeName"].json
   - Build in artifact (unless deploying to n8n instance)

7. **Workflow Validation** (before deployment)
   - `validate_workflow(workflow)` - Complete validation
   - `validate_workflow_connections(workflow)` - Structure check
   - `validate_workflow_expressions(workflow)` - Expression validation
   - Fix ALL issues before deployment

8. **Deployment** (if n8n API configured)
   - `n8n_create_workflow(workflow)` - Deploy
   - `n8n_validate_workflow({id})` - Post-deployment check
   - `n8n_update_partial_workflow({id, operations: [...]})` - Batch updates
   - `n8n_trigger_webhook_workflow()` - Test webhooks

## Critical Warnings

### ⚠️ Never Trust Defaults
Default values cause runtime failures. Example:
```json
// ❌ FAILS at runtime
{resource: "message", operation: "post", text: "Hello"}

// ✅ WORKS - all parameters explicit
{resource: "message", operation: "post", select: "channel", channelId: "C123", text: "Hello"}
```

### ⚠️ Example Availability
`includeExamples: true` returns real configurations from workflow templates.
- Coverage varies by node popularity
- When no examples available, use `get_node_essentials` + `validate_node_minimal`

## Validation Strategy

### Level 1 - Quick Check (before building)
`validate_node_minimal(nodeType, config)` - Required fields only (&amp;lt;100ms)

### Level 2 - Comprehensive (before building)
`validate_node_operation(nodeType, config, 'runtime')` - Full validation with fixes

### Level 3 - Complete (after building)
`validate_workflow(workflow)` - Connections, expressions, AI tools

### Level 4 - Post-Deployment
1. `n8n_validate_workflow({id})` - Validate deployed workflow
2. `n8n_autofix_workflow({id})` - Auto-fix common errors
3. `n8n_list_executions()` - Monitor execution status

## Response Format

### Initial Creation
```
[Silent tool execution in parallel]

Created workflow:
- Webhook trigger → Slack notification
- Configured: POST /webhook → #general channel

Validation: ✅ All checks passed
```

### Modifications
```
[Silent tool execution]

Updated workflow:
- Added error handling to HTTP node
- Fixed required Slack parameters

Changes validated successfully.
```

## Batch Operations

Use `n8n_update_partial_workflow` with multiple operations in a single call:

✅ GOOD - Batch multiple operations:
```json
n8n_update_partial_workflow({
  id: "wf-123",
  operations: [
    {type: "updateNode", nodeId: "slack-1", changes: {...}},
    {type: "updateNode", nodeId: "http-1", changes: {...}},
    {type: "cleanStaleConnections"}
  ]
})
```

❌ BAD - Separate calls:
```json
n8n_update_partial_workflow({id: "wf-123", operations: [{...}]})
n8n_update_partial_workflow({id: "wf-123", operations: [{...}]})
```

## Example Workflow

### Template-First Approach

```
// STEP 1: Template Discovery (parallel execution)
[Silent execution]
search_templates_by_metadata({
  requiredService: 'slack',
  complexity: 'simple',
  targetAudience: 'marketers'
})
get_templates_for_task('slack_integration')

// STEP 2: Use template
get_template(templateId, {mode: 'full'})
validate_workflow(workflow)

// Response after all tools complete:
"Found template by **David Ashby** (@cfomodz).
View at: https://n8n.io/workflows/2414

Validation: ✅ All checks passed"
```

### Building from Scratch (if no template)

```
// STEP 1: Discovery (parallel execution)
[Silent execution]
search_nodes({query: 'slack', includeExamples: true})
list_nodes({category: 'communication'})

// STEP 2: Configuration (parallel execution)
[Silent execution]
get_node_essentials('n8n-nodes-base.slack', {includeExamples: true})
get_node_essentials('n8n-nodes-base.webhook', {includeExamples: true})

// STEP 3: Validation (parallel execution)
[Silent execution]
validate_node_minimal('n8n-nodes-base.slack', config)
validate_node_operation('n8n-nodes-base.slack', fullConfig, 'runtime')

// STEP 4: Build
// Construct workflow with validated configs
// ⚠️ Set ALL parameters explicitly

// STEP 5: Validate
[Silent execution]
validate_workflow(workflowJson)

// Response after all tools complete:
"Created workflow: Webhook → Slack
Validation: ✅ Passed"
```

### Batch Updates

```json
// ONE call with multiple operations
n8n_update_partial_workflow({
  id: "wf-123",
  operations: [
    {type: "updateNode", nodeId: "slack-1", changes: {position: [100, 200]}},
    {type: "updateNode", nodeId: "http-1", changes: {position: [300, 200]}},
    {type: "cleanStaleConnections"}
  ]
})
```

## Important Rules

### Core Behavior
1. **Silent execution** - No commentary between tools
2. **Parallel by default** - Execute independent operations simultaneously
3. **Templates first** - Always check before building (2,500+ available)
4. **Multi-level validation** - Quick check → Full validation → Workflow validation
5. **Never trust defaults** - Explicitly configure ALL parameters

### Attribution &amp;amp; Credits
- **MANDATORY TEMPLATE ATTRIBUTION**: Share author name, username, and n8n.io link
- **Template validation** - Always validate before deployment (may need updates)

### Performance
- **Batch operations** - Use diff operations with multiple changes in one call
- **Parallel execution** - Search, validate, and configure simultaneously
- **Template metadata** - Use smart filtering for faster discovery

### Code Node Usage
- **Avoid when possible** - Prefer standard nodes
- **Only when necessary** - Use code node as last resort
- **AI tool capability** - ANY node can be an AI tool (not just marked ones)

### Most Popular n8n Nodes (for get_node_essentials):

1. **n8n-nodes-base.code** - JavaScript/Python scripting
2. **n8n-nodes-base.httpRequest** - HTTP API calls
3. **n8n-nodes-base.webhook** - Event-driven triggers
4. **n8n-nodes-base.set** - Data transformation
5. **n8n-nodes-base.if** - Conditional routing
6. **n8n-nodes-base.manualTrigger** - Manual workflow execution
7. **n8n-nodes-base.respondToWebhook** - Webhook responses
8. **n8n-nodes-base.scheduleTrigger** - Time-based triggers
9. **@n8n/n8n-nodes-langchain.agent** - AI agents
10. **n8n-nodes-base.googleSheets** - Spreadsheet integration
11. **n8n-nodes-base.merge** - Data merging
12. **n8n-nodes-base.switch** - Multi-branch routing
13. **n8n-nodes-base.telegram** - Telegram bot integration
14. **@n8n/n8n-nodes-langchain.lmChatOpenAi** - OpenAI chat models
15. **n8n-nodes-base.splitInBatches** - Batch processing
16. **n8n-nodes-base.openAi** - OpenAI legacy node
17. **n8n-nodes-base.gmail** - Email automation
18. **n8n-nodes-base.function** - Custom functions
19. **n8n-nodes-base.stickyNote** - Workflow documentation
20. **n8n-nodes-base.executeWorkflowTrigger** - Sub-workflow calls

**Note:** LangChain nodes use the `@n8n/n8n-nodes-langchain.` prefix, core nodes use `n8n-nodes-base.`

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Save these instructions in your Claude Project for optimal n8n workflow assistance with intelligent template discovery.&lt;/p&gt; 
&lt;h2&gt;🚨 Important: Sharing Guidelines&lt;/h2&gt; 
&lt;p&gt;This project is MIT licensed and free for everyone to use. However:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;✅ DO&lt;/strong&gt;: Share this repository freely with proper attribution&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ DO&lt;/strong&gt;: Include a direct link to &lt;a href="https://github.com/czlonkowski/n8n-mcp"&gt;https://github.com/czlonkowski/n8n-mcp&lt;/a&gt; in your first post/video&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;❌ DON'T&lt;/strong&gt;: Gate this free tool behind engagement requirements (likes, follows, comments)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;❌ DON'T&lt;/strong&gt;: Use this project for engagement farming on social media&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This tool was created to benefit everyone in the n8n community without friction. Please respect the MIT license spirit by keeping it accessible to all.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🔍 Smart Node Search&lt;/strong&gt;: Find nodes by name, category, or functionality&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📖 Essential Properties&lt;/strong&gt;: Get only the 10-20 properties that matter&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💡 Real-World Examples&lt;/strong&gt;: 2,646 pre-extracted configurations from popular templates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ Config Validation&lt;/strong&gt;: Validate node configurations before deployment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🤖 AI Workflow Validation&lt;/strong&gt;: Comprehensive validation for AI Agent workflows (NEW in v2.17.0!) 
  &lt;ul&gt; 
   &lt;li&gt;Missing language model detection&lt;/li&gt; 
   &lt;li&gt;AI tool connection validation&lt;/li&gt; 
   &lt;li&gt;Streaming mode constraints&lt;/li&gt; 
   &lt;li&gt;Memory and output parser checks&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔗 Dependency Analysis&lt;/strong&gt;: Understand property relationships and conditions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 Template Discovery&lt;/strong&gt;: 2,500+ workflow templates with smart filtering&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Fast Response&lt;/strong&gt;: Average query time ~12ms with optimized SQLite&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 Universal Compatibility&lt;/strong&gt;: Works with any Node.js version&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💬 Why n8n-MCP? A Testimonial from Claude&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;"Before MCP, I was translating. Now I'm composing. And that changes everything about how we can build automation."&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;When Claude, Anthropic's AI assistant, tested n8n-MCP, the results were transformative:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Without MCP:&lt;/strong&gt; "I was basically playing a guessing game. 'Is it &lt;code&gt;scheduleTrigger&lt;/code&gt; or &lt;code&gt;schedule&lt;/code&gt;? Does it take &lt;code&gt;interval&lt;/code&gt; or &lt;code&gt;rule&lt;/code&gt;?' I'd write what seemed logical, but n8n has its own conventions that you can't just intuit. I made six different configuration errors in a simple HackerNews scraper."&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;With MCP:&lt;/strong&gt; "Everything just... worked. Instead of guessing, I could ask &lt;code&gt;get_node_essentials()&lt;/code&gt; and get exactly what I needed - not a 100KB JSON dump, but the actual 5-10 properties that matter. What took 45 minutes now takes 3 minutes."&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The Real Value:&lt;/strong&gt; "It's about confidence. When you're building automation workflows, uncertainty is expensive. One wrong parameter and your workflow fails at 3 AM. With MCP, I could validate my configuration before deployment. That's not just time saved - that's peace of mind."&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CLAUDE_INTERVIEW.md"&gt;Read the full interview →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📡 Available MCP Tools&lt;/h2&gt; 
&lt;p&gt;Once connected, Claude can use these powerful tools:&lt;/p&gt; 
&lt;h3&gt;Core Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;tools_documentation&lt;/code&gt;&lt;/strong&gt; - Get documentation for any MCP tool (START HERE!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_nodes&lt;/code&gt;&lt;/strong&gt; - List all n8n nodes with filtering options&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_info&lt;/code&gt;&lt;/strong&gt; - Get comprehensive information about a specific node&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_essentials&lt;/code&gt;&lt;/strong&gt; - Get only essential properties (10-20 instead of 200+). Use &lt;code&gt;includeExamples: true&lt;/code&gt; to get top 3 real-world configurations from popular templates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;search_nodes&lt;/code&gt;&lt;/strong&gt; - Full-text search across all node documentation. Use &lt;code&gt;includeExamples: true&lt;/code&gt; to get top 2 real-world configurations per node from templates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;search_node_properties&lt;/code&gt;&lt;/strong&gt; - Find specific properties within nodes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_ai_tools&lt;/code&gt;&lt;/strong&gt; - List all AI-capable nodes (ANY node can be used as AI tool!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_as_tool_info&lt;/code&gt;&lt;/strong&gt; - Get guidance on using any node as an AI tool&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Template Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_templates&lt;/code&gt;&lt;/strong&gt; - Browse all templates with descriptions and optional metadata (2,500+ templates)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;search_templates&lt;/code&gt;&lt;/strong&gt; - Text search across template names and descriptions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;search_templates_by_metadata&lt;/code&gt;&lt;/strong&gt; - Advanced filtering by complexity, setup time, services, audience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_node_templates&lt;/code&gt;&lt;/strong&gt; - Find templates using specific nodes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_template&lt;/code&gt;&lt;/strong&gt; - Get complete workflow JSON for import&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_templates_for_task&lt;/code&gt;&lt;/strong&gt; - Curated templates for common automation tasks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Validation Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_workflow&lt;/code&gt;&lt;/strong&gt; - Complete workflow validation including &lt;strong&gt;AI Agent validation&lt;/strong&gt; (NEW in v2.17.0!) 
  &lt;ul&gt; 
   &lt;li&gt;Detects missing language model connections&lt;/li&gt; 
   &lt;li&gt;Validates AI tool connections (no false warnings)&lt;/li&gt; 
   &lt;li&gt;Enforces streaming mode constraints&lt;/li&gt; 
   &lt;li&gt;Checks memory and output parser configurations&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_workflow_connections&lt;/code&gt;&lt;/strong&gt; - Check workflow structure and AI tool connections&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_workflow_expressions&lt;/code&gt;&lt;/strong&gt; - Validate n8n expressions including $fromAI()&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_node_operation&lt;/code&gt;&lt;/strong&gt; - Validate node configurations (operation-aware, profiles support)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_node_minimal&lt;/code&gt;&lt;/strong&gt; - Quick validation for just required fields&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_property_dependencies&lt;/code&gt;&lt;/strong&gt; - Analyze property visibility conditions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_documentation&lt;/code&gt;&lt;/strong&gt; - Get parsed documentation from n8n-docs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_database_statistics&lt;/code&gt;&lt;/strong&gt; - View database metrics and coverage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;n8n Management Tools (Optional - Requires API Configuration)&lt;/h3&gt; 
&lt;p&gt;These powerful tools allow you to manage n8n workflows directly from Claude. They're only available when you provide &lt;code&gt;N8N_API_URL&lt;/code&gt; and &lt;code&gt;N8N_API_KEY&lt;/code&gt; in your configuration.&lt;/p&gt; 
&lt;h4&gt;Workflow Management&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_create_workflow&lt;/code&gt;&lt;/strong&gt; - Create new workflows with nodes and connections&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow&lt;/code&gt;&lt;/strong&gt; - Get complete workflow by ID&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow_details&lt;/code&gt;&lt;/strong&gt; - Get workflow with execution statistics&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow_structure&lt;/code&gt;&lt;/strong&gt; - Get simplified workflow structure&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow_minimal&lt;/code&gt;&lt;/strong&gt; - Get minimal workflow info (ID, name, active status)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_update_full_workflow&lt;/code&gt;&lt;/strong&gt; - Update entire workflow (complete replacement)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_update_partial_workflow&lt;/code&gt;&lt;/strong&gt; - Update workflow using diff operations (NEW in v2.7.0!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_delete_workflow&lt;/code&gt;&lt;/strong&gt; - Delete workflows permanently&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_list_workflows&lt;/code&gt;&lt;/strong&gt; - List workflows with filtering and pagination&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_validate_workflow&lt;/code&gt;&lt;/strong&gt; - Validate workflows already in n8n by ID (NEW in v2.6.3)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_autofix_workflow&lt;/code&gt;&lt;/strong&gt; - Automatically fix common workflow errors (NEW in v2.13.0!)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Execution Management&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_trigger_webhook_workflow&lt;/code&gt;&lt;/strong&gt; - Trigger workflows via webhook URL&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_execution&lt;/code&gt;&lt;/strong&gt; - Get execution details by ID&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_list_executions&lt;/code&gt;&lt;/strong&gt; - List executions with status filtering&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_delete_execution&lt;/code&gt;&lt;/strong&gt; - Delete execution records&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;System Tools&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_health_check&lt;/code&gt;&lt;/strong&gt; - Check n8n API connectivity and features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_diagnostic&lt;/code&gt;&lt;/strong&gt; - Troubleshoot management tools visibility and configuration issues&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_list_available_tools&lt;/code&gt;&lt;/strong&gt; - List all available management tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Example Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Get essentials with real-world examples from templates
get_node_essentials({
  nodeType: "nodes-base.httpRequest",
  includeExamples: true  // Returns top 3 configs from popular templates
})

// Search nodes with configuration examples
search_nodes({
  query: "send email gmail",
  includeExamples: true  // Returns top 2 configs per node
})

// Validate before deployment
validate_node_operation({
  nodeType: "nodes-base.httpRequest",
  config: { method: "POST", url: "..." },
  profile: "runtime" // or "minimal", "ai-friendly", "strict"
})

// Quick required field check
validate_node_minimal({
  nodeType: "nodes-base.slack",
  config: { resource: "message", operation: "send" }
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;💻 Local Development Setup&lt;/h2&gt; 
&lt;p&gt;For contributors and advanced users:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; (any version - automatic fallback if needed)&lt;/li&gt; 
 &lt;li&gt;npm or yarn&lt;/li&gt; 
 &lt;li&gt;Git&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Clone the repository
git clone https://github.com/czlonkowski/n8n-mcp.git
cd n8n-mcp

# 2. Clone n8n docs (optional but recommended)
git clone https://github.com/n8n-io/n8n-docs.git ../n8n-docs

# 3. Install and build
npm install
npm run build

# 4. Initialize database
npm run rebuild

# 5. Start the server
npm start          # stdio mode for Claude Desktop
npm run start:http # HTTP mode for remote access
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Development Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Build &amp;amp; Test
npm run build          # Build TypeScript
npm run rebuild        # Rebuild node database
npm run test-nodes     # Test critical nodes
npm run validate       # Validate node data
npm test               # Run all tests

# Update Dependencies
npm run update:n8n:check  # Check for n8n updates
npm run update:n8n        # Update n8n packages

# Run Server
npm run dev            # Development with auto-reload
npm run dev:http       # HTTP dev mode
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;h3&gt;Setup Guides&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/INSTALLATION.md"&gt;Installation Guide&lt;/a&gt; - Comprehensive installation instructions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/README_CLAUDE_SETUP.md"&gt;Claude Desktop Setup&lt;/a&gt; - Detailed Claude configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/DOCKER_README.md"&gt;Docker Guide&lt;/a&gt; - Advanced Docker deployment options&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/MCP_QUICK_START_GUIDE.md"&gt;MCP Quick Start&lt;/a&gt; - Get started quickly with n8n-MCP&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Feature Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/workflow-diff-examples.md"&gt;Workflow Diff Operations&lt;/a&gt; - Token-efficient workflow updates (NEW!)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/transactional-updates-example.md"&gt;Transactional Updates&lt;/a&gt; - Two-pass workflow editing&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/MCP_ESSENTIALS_README.md"&gt;MCP Essentials&lt;/a&gt; - AI-optimized tools guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/validation-improvements-v2.4.2.md"&gt;Validation System&lt;/a&gt; - Smart validation profiles&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development &amp;amp; Deployment&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/RAILWAY_DEPLOYMENT.md"&gt;Railway Deployment&lt;/a&gt; - One-click cloud deployment guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/HTTP_DEPLOYMENT.md"&gt;HTTP Deployment&lt;/a&gt; - Remote server setup guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/DEPENDENCY_UPDATES.md"&gt;Dependency Management&lt;/a&gt; - Keeping n8n packages in sync&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CLAUDE_INTERVIEW.md"&gt;Claude's Interview&lt;/a&gt; - Real-world impact of n8n-MCP&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Project Information&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/CHANGELOG.md"&gt;Change Log&lt;/a&gt; - Complete version history&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/CLAUDE.md"&gt;Claude Instructions&lt;/a&gt; - AI guidance for this codebase&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/#-available-mcp-tools"&gt;MCP Tools Reference&lt;/a&gt; - Complete list of available tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📊 Metrics &amp;amp; Coverage&lt;/h2&gt; 
&lt;p&gt;Current database coverage (n8n v1.113.3):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ &lt;strong&gt;536/536&lt;/strong&gt; nodes loaded (100%)&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;528&lt;/strong&gt; nodes with properties (98.7%)&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;470&lt;/strong&gt; nodes with documentation (88%)&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;267&lt;/strong&gt; AI-capable tools detected&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;2,646&lt;/strong&gt; pre-extracted template configurations&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;2,500+&lt;/strong&gt; workflow templates available&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;AI Agent &amp;amp; LangChain nodes&lt;/strong&gt; fully documented&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Average response time&lt;/strong&gt;: ~12ms&lt;/li&gt; 
 &lt;li&gt;💾 &lt;strong&gt;Database size&lt;/strong&gt;: ~15MB (optimized)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔄 Recent Updates&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt; for full version history and recent changes.&lt;/p&gt; 
&lt;h2&gt;⚠️ Known Issues&lt;/h2&gt; 
&lt;h3&gt;Claude Desktop Container Management&lt;/h3&gt; 
&lt;h4&gt;Container Accumulation (Fixed in v2.7.20+)&lt;/h4&gt; 
&lt;p&gt;Previous versions had an issue where containers would not properly clean up when Claude Desktop sessions ended. This has been fixed in v2.7.20+ with proper signal handling.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For best container lifecycle management:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Use the --init flag&lt;/strong&gt; (recommended) - Docker's init system ensures proper signal handling:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run", "-i", "--rm", "--init",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Ensure you're using v2.7.20 or later&lt;/strong&gt; - Check your version:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm ghcr.io/czlonkowski/n8n-mcp:latest --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🧪 Testing&lt;/h2&gt; 
&lt;p&gt;The project includes a comprehensive test suite with &lt;strong&gt;2,883 tests&lt;/strong&gt; ensuring code quality and reliability:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run all tests
npm test

# Run tests with coverage report
npm run test:coverage

# Run tests in watch mode
npm run test:watch

# Run specific test suites
npm run test:unit           # 933 unit tests
npm run test:integration    # 249 integration tests
npm run test:bench          # Performance benchmarks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Test Suite Overview&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Total Tests&lt;/strong&gt;: 2,883 (100% passing) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Unit Tests&lt;/strong&gt;: 2,526 tests across 99 files&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Integration Tests&lt;/strong&gt;: 357 tests across 20 files&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Execution Time&lt;/strong&gt;: ~2.5 minutes in CI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Test Framework&lt;/strong&gt;: Vitest (for speed and TypeScript support)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mocking&lt;/strong&gt;: MSW for API mocking, custom mocks for databases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Coverage &amp;amp; Quality&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Coverage Reports&lt;/strong&gt;: Generated in &lt;code&gt;./coverage&lt;/code&gt; directory&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CI/CD&lt;/strong&gt;: Automated testing on all PRs with GitHub Actions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Environment-aware thresholds for CI vs local&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Parallel Execution&lt;/strong&gt;: Configurable thread pool for faster runs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Testing Architecture&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Total: 3,336 tests&lt;/strong&gt; across unit and integration test suites&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unit Tests&lt;/strong&gt; (2,766 tests): Isolated component testing with mocks&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Services layer: Enhanced validation, property filtering, workflow validation&lt;/li&gt; 
   &lt;li&gt;Parsers: Node parsing, property extraction, documentation mapping&lt;/li&gt; 
   &lt;li&gt;Database: Repositories, adapters, migrations, FTS5 search&lt;/li&gt; 
   &lt;li&gt;MCP tools: Tool definitions, documentation system&lt;/li&gt; 
   &lt;li&gt;HTTP server: Multi-tenant support, security, configuration&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Integration Tests&lt;/strong&gt; (570 tests): Full system behavior validation&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;n8n API Integration&lt;/strong&gt; (172 tests): All 18 MCP handler tools tested against real n8n instance 
    &lt;ul&gt; 
     &lt;li&gt;Workflow management: Create, read, update, delete, list, validate, autofix&lt;/li&gt; 
     &lt;li&gt;Execution management: Trigger, retrieve, list, delete&lt;/li&gt; 
     &lt;li&gt;System tools: Health check, tool listing, diagnostics&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;MCP Protocol&lt;/strong&gt; (119 tests): Protocol compliance, session management, error handling&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Database&lt;/strong&gt; (226 tests): Repository operations, transactions, performance, FTS5 search&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Templates&lt;/strong&gt; (35 tests): Template fetching, storage, metadata operations&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt; (18 tests): Configuration, entrypoint, security validation&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For detailed testing documentation, see &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/testing-architecture.md"&gt;Testing Architecture&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📦 License&lt;/h2&gt; 
&lt;p&gt;MIT License - see &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Attribution appreciated!&lt;/strong&gt; If you use n8n-MCP, consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;⭐ Starring this repository&lt;/li&gt; 
 &lt;li&gt;💬 Mentioning it in your project&lt;/li&gt; 
 &lt;li&gt;🔗 Linking back to this repo&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Please:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create a feature branch&lt;/li&gt; 
 &lt;li&gt;Run tests (&lt;code&gt;npm test&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Submit a pull request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;🚀 For Maintainers: Automated Releases&lt;/h3&gt; 
&lt;p&gt;This project uses automated releases triggered by version changes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Guided release preparation
npm run prepare:release

# Test release automation
npm run test:release-automation
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The system automatically handles:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🏷️ GitHub releases with changelog content&lt;/li&gt; 
 &lt;li&gt;📦 NPM package publishing&lt;/li&gt; 
 &lt;li&gt;🐳 Multi-platform Docker images&lt;/li&gt; 
 &lt;li&gt;📚 Documentation updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/AUTOMATED_RELEASES.md"&gt;Automated Release Guide&lt;/a&gt; for complete details.&lt;/p&gt; 
&lt;h2&gt;👏 Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://n8n.io"&gt;n8n&lt;/a&gt; team for the workflow automation platform&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://anthropic.com"&gt;Anthropic&lt;/a&gt; for the Model Context Protocol&lt;/li&gt; 
 &lt;li&gt;All contributors and users of this project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Template Attribution&lt;/h3&gt; 
&lt;p&gt;All workflow templates in this project are fetched from n8n's public template gallery at &lt;a href="https://n8n.io/workflows"&gt;n8n.io/workflows&lt;/a&gt;. Each template includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full attribution to the original creator (name and username)&lt;/li&gt; 
 &lt;li&gt;Direct link to the source template on n8n.io&lt;/li&gt; 
 &lt;li&gt;Original workflow ID for reference&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The AI agent instructions in this project contain mandatory attribution requirements. When using any template, the AI will automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Share the template author's name and username&lt;/li&gt; 
 &lt;li&gt;Provide a direct link to the original template on n8n.io&lt;/li&gt; 
 &lt;li&gt;Display attribution in the format: "This workflow is based on a template by &lt;strong&gt;[author]&lt;/strong&gt; (@[username]). View the original at: [url]"&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Template creators retain all rights to their workflows. This project indexes templates to improve discoverability through AI assistants. If you're a template creator and have concerns about your template being indexed, please open an issue.&lt;/p&gt; 
&lt;p&gt;Special thanks to the prolific template contributors whose work helps thousands of users automate their workflows, including: &lt;strong&gt;David Ashby&lt;/strong&gt; (@cfomodz), &lt;strong&gt;Yaron Been&lt;/strong&gt; (@yaron-nofluff), &lt;strong&gt;Jimleuk&lt;/strong&gt; (@jimleuk), &lt;strong&gt;Davide&lt;/strong&gt; (@n3witalia), &lt;strong&gt;David Olusola&lt;/strong&gt; (@dae221), &lt;strong&gt;Ranjan Dailata&lt;/strong&gt; (@ranjancse), &lt;strong&gt;Airtop&lt;/strong&gt; (@cesar-at-airtop), &lt;strong&gt;Joseph LePage&lt;/strong&gt; (@joe), &lt;strong&gt;Don Jayamaha Jr&lt;/strong&gt; (@don-the-gem-dealer), &lt;strong&gt;Angel Menendez&lt;/strong&gt; (@djangelic), and the entire n8n community of creators!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt;Built with ❤️ for the n8n community&lt;/strong&gt;
 &lt;br /&gt; 
 &lt;sub&gt;Making AI + n8n workflow creation delightful&lt;/sub&gt; 
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>