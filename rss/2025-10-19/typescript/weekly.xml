<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Weekly Trending</title>
    <description>Weekly Trending of TypeScript in GitHub</description>
    <pubDate>Sat, 18 Oct 2025 01:48:21 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>nitrojs/nitro</title>
      <link>https://github.com/nitrojs/nitro</link>
      <description>&lt;p&gt;Next Generation Server Toolkit. Create web servers with everything you need and deploy them wherever you prefer.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nitro&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You’re viewing the &lt;strong&gt;v3 Alpha&lt;/strong&gt; branch. For the current stable release, see &lt;a href="https://github.com/nitrojs/nitro/tree/v2"&gt;Nitro v2&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Nitro&lt;/strong&gt; extends your Vite app with a &lt;strong&gt;production-ready server&lt;/strong&gt;, designed to run &lt;strong&gt;anywhere&lt;/strong&gt;. Add server routes, deploy across multiple platforms, and enjoy a &lt;strong&gt;zero-config&lt;/strong&gt; experience.&lt;/p&gt; 
&lt;p&gt;📘 &lt;strong&gt;Docs (v3 Alpha):&lt;/strong&gt; &lt;a href="https://v3.nitro.build"&gt;https://v3.nitro.build&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See Check out the &lt;a href="https://raw.githubusercontent.com/nitrojs/nitro/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Released under the &lt;a href="https://raw.githubusercontent.com/nitrojs/nitro/main/LICENSE"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>devlikeapro/waha</title>
      <link>https://github.com/devlikeapro/waha</link>
      <description>&lt;p&gt;WAHA - WhatsApp HTTP API (REST API) that you can configure in a click! 3 engines: WEBJS (browser based), NOWEB (websocket nodejs), GOWS (websocket go)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WAHA&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/devlikeapro/waha/core/logo.png" style="border-radius: 50%" width="150" /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WAHA&lt;/strong&gt; - &lt;strong&gt;W&lt;/strong&gt;hats&lt;strong&gt;A&lt;/strong&gt;pp &lt;strong&gt;H&lt;/strong&gt;TTP &lt;strong&gt;A&lt;/strong&gt;PI (REST API) that you can install on your own server and run in less than 5 minutes!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/devlikeapro/waha"&gt;&lt;img src="https://img.shields.io/docker/pulls/devlikeapro/waha" alt="Docker Pulls" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://waha.devlike.pro/"&gt;https://waha.devlike.pro/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dashboard Example: &lt;a href="https://waha.devlike.pro/dashboard"&gt;https://waha.devlike.pro/dashboard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Swagger Example: &lt;a href="https://waha.devlike.pro/swagger"&gt;https://waha.devlike.pro/swagger&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Tables of Contents&lt;/h1&gt; 
&lt;!-- toc --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#quick-start"&gt;Quick start&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#send-your-first-message"&gt;Send your first message&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#1-download-image"&gt;1. Download image&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#2-run-whatsapp-http-api"&gt;2. Run WhatsApp HTTP API&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#3-start-a-new-session"&gt;3. Start a new session&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#4-get-and-scan-qr"&gt;4. Get and scan QR&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#5-get-the-screenshot"&gt;5. Get the screenshot&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#6-send-a-text-message"&gt;6. Send a text message&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#what-is-next"&gt;What is next?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#development"&gt;Development&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/#start-the-project"&gt;Start the project&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- tocstop --&gt; 
&lt;h1&gt;Quick start&lt;/h1&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;Only thing that you must have - installed docker. Please follow the original instruction &lt;a href="https://docs.docker.com/get-docker/" target="_blank" rel="noopener"&gt;how to install docker -&amp;gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you are ready - come back and follows the below steps to send the first text message to WhatsApp via HTTP API!&lt;/p&gt; 
&lt;h2&gt;Send your first message&lt;/h2&gt; 
&lt;p&gt;Let's go over steps that allow you to send your first text message via WhatsApp HTTP API!&lt;/p&gt; 
&lt;h3&gt;1. Download image&lt;/h3&gt; 
&lt;p&gt;Assuming you have installed &lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt;, let's download the image.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull devlikeapro/waha
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker login -u devlikeapro -p {KEY}
docker pull devlikeapro/waha-plus
docker logout
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about how to get &lt;code&gt;PASSWORD&lt;/code&gt; for &lt;a href="https://waha.devlike.pro/docs/how-to/waha-plus/"&gt;&lt;strong&gt;➕ WAHA Plus&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;2. Run WhatsApp HTTP API&lt;/h3&gt; 
&lt;p&gt;Run WhatsApp HTTP API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -it --rm -p 3000:3000/tcp --name waha devlikeapro/waha

# It prints logs and the last line must be
# WhatsApp HTTP API is running on: http://[::1]:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the link in your browser &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt; and you'll see API documentation (Swagger).&lt;/p&gt; 
&lt;h3&gt;3. Start a new session&lt;/h3&gt; 
&lt;p&gt;To start a new session you should have your mobile phone with installed WhatsApp application close to you.&lt;/p&gt; 
&lt;p&gt;Please go and read how what we'll need to a bit later: &lt;a href="https://faq.whatsapp.com/381777293328336/?helpref=hc_fnav" target="_blank"&gt; How to log in - the instruction on WhatsApp site &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;When your ready - find &lt;code&gt;POST /api/sessions&lt;/code&gt;, click on &lt;strong&gt;Try it out&lt;/strong&gt;, then &lt;strong&gt;Execute&lt;/strong&gt; a bit below.&lt;/p&gt; 
&lt;p&gt;The example payload:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "name": "default"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By using the request with &lt;code&gt;name&lt;/code&gt; values you can start multiple session (WhatsApp accounts) inside the single docker container in Plus&lt;/p&gt; 
&lt;h3&gt;4. Get and scan QR&lt;/h3&gt; 
&lt;p&gt;Find &lt;code&gt;GET /api/screenshot&lt;/code&gt; and execute it, it shows you QR code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Scan the QR with your cell phone's WhatsApp app.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;5. Get the screenshot&lt;/h3&gt; 
&lt;p&gt;Execute &lt;code&gt;GET /api/screenshot&lt;/code&gt; after a few seconds after scanning the QR - it'll show you the screenshot of you Whatsapp instance. If you can get the actual screenshot - then you're ready to start sending messages!&lt;/p&gt; 
&lt;h3&gt;6. Send a text message&lt;/h3&gt; 
&lt;p&gt;Let's send a text message - find &lt;code&gt;POST /api/sendText&lt;/code&gt; in &lt;a href="http://localhost:3000/"&gt;swagger&lt;/a&gt; and change &lt;code&gt;chatId&lt;/code&gt; this way: use a phone international phone number without &lt;code&gt;+&lt;/code&gt; symbol and add &lt;code&gt;@c.us&lt;/code&gt; at the end.&lt;/p&gt; 
&lt;p&gt;For phone number &lt;code&gt;12132132131&lt;/code&gt; the &lt;code&gt;chatId&lt;/code&gt; is &lt;code&gt;12132132131@c.us&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The example payload:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "chatId": "12132132130@c.us",
  "text": "Hi there!",
  "session": "default"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also, you can use &lt;code&gt;curl&lt;/code&gt; and send POST request like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Phone without +
export PHONE=12132132130
curl -d "{\"chatId\": \"${PHONE}@c.us\", \"text\": \"Hello from WhatsApp HTTP API\" }" -H "Content-Type: application/json" -X POST http://localhost:3000/api/sendText
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What is next?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://waha.devlike.pro/docs/overview/introduction/"&gt;Go and read the full documentation!&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;h2&gt;Start the project&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository&lt;/li&gt; 
 &lt;li&gt;Make sure you're using node&amp;gt;=22 (check &lt;a href="https://raw.githubusercontent.com/devlikeapro/waha/core/.nvmrc"&gt;.nvmrc&lt;/a&gt; to get the version)&lt;/li&gt; 
 &lt;li&gt;Run the following commands:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install dependencies
yarn install
# Fetch and compile proto files
yarn gows:proto
# Run
yarn start
# open http://localhost:3000
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>bytedance/flowgram.ai</title>
      <link>https://github.com/bytedance/flowgram.ai</link>
      <description>&lt;p&gt;FlowGram is a node-based flow building engine that helps developers quickly create workflows in either fixed layout or free connection layout modes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FlowGram.AI&lt;/h1&gt; 
&lt;p&gt;FlowGram is a node-based flow building engine that helps developers quickly create workflows in either fixed layout or free connection layout modes. It provides a set of interaction best practices and is particularly suitable for visual workflows with clear inputs and outputs.&lt;/p&gt; 
&lt;p&gt;In the current AI boom, we are also focusing on how to empower workflows with AI capabilities, hence the AI suffix in our name.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/bytedance/flowgram.ai/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/bytedance/flowgram.ai" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@flowgram.ai/editor"&gt;&lt;img src="https://img.shields.io/npm/dm/%40flowgram.ai%2Fcore" alt="@flowgram.ai/editor" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/bytedance/flowgram.ai"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;a href="https://juejin.cn/column/7479814468601315362"&gt;&lt;img src="https://img.shields.io/badge/%E6%8E%98%E9%87%91-FFFFFF?logo=juejin&amp;amp;logoColor=%23007FFF" alt="掘金" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/13877"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13877" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;📖 Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://flowgram.ai/"&gt;Official Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bytedance/flowgram.ai/raw/main/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦 Packages&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/create-app"&gt;@flowgram.ai/create-app&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;App Creator&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@flowgram.ai/create-app"&gt;&lt;img src="https://img.shields.io/npm/v/@flowgram.ai/create-app.svg?sanitize=true" alt="npm" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/packages/client/fixed-layout-editor"&gt;@flowgram.ai/fixed-layout-editor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Fixed Layout Editor&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@flowgram.ai/fixed-layout-editor"&gt;&lt;img src="https://img.shields.io/npm/v/@flowgram.ai/fixed-layout-editor.svg?sanitize=true" alt="npm" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/packages/client/free-layout-editor"&gt;@flowgram.ai/free-layout-editor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Free Layout Editor&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@flowgram.ai/free-layout-editor"&gt;&lt;img src="https://img.shields.io/npm/v/@flowgram.ai/free-layout-editor.svg?sanitize=true" alt="npm" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🎮 Examples&lt;/h2&gt; 
&lt;div&gt; 
 &lt;p&gt; &lt;a href="https://flowgram.ai/examples/fixed-layout/fixed-feature-overview.html"&gt; Fixed Layout &lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; Fixed layout where nodes can be dragged to specified positions, with support for compound nodes like branches and loops. &lt;/p&gt; 
 &lt;p&gt; &lt;img src="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/docs/src/public/fixed-layout/fixed-layout-demo.gif" /&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;p&gt; &lt;a href="https://flowgram.ai/examples/free-layout/free-feature-overview.html"&gt; Free Layout &lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; Free layout where nodes can be placed anywhere and connected using free-form lines. &lt;/p&gt; 
 &lt;p&gt; &lt;img src="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/docs/src/public/free-layout/free-layout-demo.gif" /&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# create demo
npx @flowgram.ai/create-app@latest

# in PowerShell
npx "@flowgram.ai/create-app@latest"

# select demo
- fixed-layout # full-feature overview
- free-layout # full-feature overview
- fixed-layout-simple # basic usage
- free-layout-simple # basic usage
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🔨 Development&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Install Node.js 18+&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nvm install lts/hydrogen
nvm alias default lts/hydrogen # set default node version
nvm use lts/hydrogen
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:bytedance/flowgram.ai.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;strong&gt;Install required global dependencies&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i -g pnpm@10.6.5 @microsoft/rush@5.150.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;&lt;strong&gt;Install project dependencies&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush install
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;&lt;strong&gt;Build the project&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush build
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="6"&gt; 
 &lt;li&gt;&lt;strong&gt;Run docs or demo&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush dev:docs # docs
rush dev:demo-fixed-layout
rush dev:demo-free-layout
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After that, you can start to develop projects inside this repository.&lt;/p&gt; 
&lt;p&gt;Enjoy it!&lt;/p&gt; 
&lt;h2&gt;🌟 Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/bytedance/flowgram.ai/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=bytedance/flowgram.ai" alt="FlowGram.AI Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🌟 Adoption&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio"&gt;Coze Studio&lt;/a&gt; is an all-in-one AI agent development tool. Providing the latest large models and tools, various development modes and frameworks, Coze Studio offers the most convenient AI agent development environment, from development to deployment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NNDeploy/nndeploy"&gt;NNDeploy&lt;/a&gt; is a workflow-based multi-platform ai deployment tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/certimate-go/certimate"&gt;Certimate&lt;/a&gt; is an open-source SSL certificate management tool that helps you automatically apply for and deploy SSL certificates with a visual workflow. It is one of the ACME client options listed in the official documentation of Let's Encrypt.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🌟 Contact us&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Issues: &lt;a href="https://github.com/bytedance/flowgram.ai/issues"&gt;Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Lark: Scan the QR code below with &lt;a href="https://www.feishu.cn/en/"&gt;Register Feishu&lt;/a&gt; to join our FlowGram user group.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/bytedance/flowgram.ai/main/apps/docs/src/public/lark-group.png" width="200" /&gt;</description>
    </item>
    
    <item>
      <title>westonbrown/Cyber-AutoAgent</title>
      <link>https://github.com/westonbrown/Cyber-AutoAgent</link>
      <description>&lt;p&gt;AI agent for autonomous cyber operations&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/docs/cover_art.png" alt="Cyber-AutoAgent Cover Art" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;img src="https://img.shields.io/github/license/westonbrown/Cyber-AutoAgent?style=flat-square" alt="GitHub License" /&gt; &lt;img src="https://img.shields.io/github/v/release/westonbrown/Cyber-AutoAgent?style=flat-square" alt="GitHub release (latest by date)" /&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/westonbrown/Cyber-AutoAgent/ci.yml?branch=main&amp;amp;style=flat-square" alt="GitHub Workflow Status" /&gt; &lt;img src="https://img.shields.io/github/issues/westonbrown/Cyber-AutoAgent?style=flat-square" alt="GitHub issues" /&gt; &lt;img src="https://img.shields.io/github/issues-pr/westonbrown/Cyber-AutoAgent?style=flat-square" alt="GitHub pull requests" /&gt; &lt;img src="https://img.shields.io/github/commit-activity/m/westonbrown/Cyber-AutoAgent?style=flat-square" alt="GitHub commit activity" /&gt; &lt;img src="https://img.shields.io/github/contributors/westonbrown/Cyber-AutoAgent?style=flat-square" alt="GitHub contributors" /&gt; &lt;img src="https://img.shields.io/github/stars/westonbrown/Cyber-AutoAgent?style=flat-square" alt="GitHub stars" /&gt; &lt;img src="https://img.shields.io/github/forks/westonbrown/Cyber-AutoAgent?style=flat-square" alt="GitHub forks" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;[!] EXPERIMENTAL SOFTWARE - USE ONLY IN AUTHORIZED, SAFE, SANDBOXED ENVIRONMENTS [!]&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt; &lt;strong&gt;Cyber-AutoAgent&lt;/strong&gt; is a proactive security assessment tool that autonomously conducts intelligent penetration testing with natural language reasoning, dynamic tool selection, and evidence collection using AWS Bedrock, Litellm or local Ollama models with the core Strands framework. &lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://hub.docker.com/r/cyberautoagent/cyber-autoagent"&gt;&lt;img src="https://img.shields.io/badge/Docker-Ready-blue?logo=docker&amp;amp;style=for-the-badge" alt="Docker" /&gt;&lt;/a&gt; &lt;a href="https://www.python.org"&gt;&lt;img src="https://img.shields.io/badge/Python-3.10+-yellow?logo=python&amp;amp;style=for-the-badge" alt="Python" /&gt;&lt;/a&gt; &lt;a href="https://aws.amazon.com/bedrock/"&gt;&lt;img src="https://img.shields.io/badge/AWS-Bedrock-orange?logo=amazon-aws&amp;amp;style=for-the-badge" alt="AWS Bedrock" /&gt;&lt;/a&gt; &lt;a href="https://ollama.ai"&gt;&lt;img src="https://img.shields.io/badge/Ollama-Local_AI-green?style=for-the-badge" alt="Ollama" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/WNHhsnkTc3"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join_Us-5865F2?logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/docs/agent_demo.gif" alt="Demo GIF" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;em&gt;Cyber-AutoAgent in action - Autonomous security operations with AI reasoning&lt;/em&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/#important-disclaimer"&gt;Important Disclaimer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/#architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/#model-providers"&gt;Model Providers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/#observability"&gt;Observability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/#installation--deployment"&gt;Installation &amp;amp; Deployment&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/#development--testing"&gt;Development &amp;amp; Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Important Disclaimer&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;THIS TOOL IS FOR EDUCATIONAL AND AUTHORIZED SECURITY TESTING PURPOSES ONLY.&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Requirement&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Authorization&lt;/td&gt; 
   &lt;td&gt;Use only on systems you own or have explicit written permission to test&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Legal Compliance&lt;/td&gt; 
   &lt;td&gt;Ensure compliance with all applicable laws and regulations&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Sandboxed Environment&lt;/td&gt; 
   &lt;td&gt;Deploy in safe, sandboxed environments isolated from production systems&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Responsibility&lt;/td&gt; 
   &lt;td&gt;Never use on unauthorized systems or networks - users are fully responsible for legal and ethical use&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;The React-based terminal interface is now the &lt;strong&gt;default UI&lt;/strong&gt;, providing interactive configuration, real-time operation monitoring, and guided setup in all deployment modes.&lt;/p&gt; 
&lt;h3&gt;Local Development - Recommended&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone and setup
git clone https://github.com/westonbrown/Cyber-AutoAgent.git
cd Cyber-AutoAgent

# Build React terminal interface
cd src/modules/interfaces/react
npm install
npm run build

# Run interactive terminal (guided setup on first launch)
npm start

# Or run directly with parameters
node dist/index.js \
  --target "http://testphp.vulnweb.com" \
  --objective "Security assessment" \
  --auto-run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The React terminal will automatically spawn the Python agent as a subprocess and guide you through configuration on first launch.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/docs/user-instructions.md"&gt;Complete User Guide&lt;/a&gt;&lt;/strong&gt; - Detailed setup, configuration, operation modules, troubleshooting, and examples&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Docker Deployment&lt;/h3&gt; 
&lt;h4&gt;Single Container&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Interactive mode with React terminal
docker run -it --rm \
  -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
  -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
  -e AWS_REGION=${AWS_REGION:-us-east-1} \
  -v $(pwd)/outputs:/app/outputs \
  cyber-autoagent

# Or start directly with parameters
docker run -it --rm \
  -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
  -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
  -e AWS_REGION=${AWS_REGION:-us-east-1} \
  -v $(pwd)/outputs:/app/outputs \
  cyber-autoagent \
  --target "http://testphp.vulnweb.com" \
  --objective "Identify SQL injection vulnerabilities" \
  --auto-run
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Docker Compose (Full Stack with Observability)&lt;/h4&gt; 
&lt;p&gt;Use &lt;code&gt;docker compose run&lt;/code&gt; for assessments with the full observability stack:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run assessment with React terminal UI and full observability
docker compose -f docker/docker-compose.yml --env-file .env run --rm cyber-autoagent

# With root access for dynamic tool installation
docker compose -f docker/docker-compose.yml --env-file .env run --user root --rm cyber-autoagent
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The compose stack automatically provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Langfuse observability&lt;/strong&gt; at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; (login: &lt;a href="mailto:admin@cyber-autoagent.com"&gt;admin@cyber-autoagent.com&lt;/a&gt; / changeme)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Persistent databases&lt;/strong&gt; (PostgreSQL, ClickHouse, Redis, MinIO)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Network access&lt;/strong&gt; to challenge containers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;React terminal UI&lt;/strong&gt; as the default interface&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/docs/user-instructions.md"&gt;User Guide&lt;/a&gt;&lt;/strong&gt; - Complete usage, configuration, and examples&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/docs/architecture.md"&gt;Agent Architecture&lt;/a&gt;&lt;/strong&gt; - Strands framework, tools, and metacognitive design&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/docs/memory.md"&gt;Memory System&lt;/a&gt;&lt;/strong&gt; - Mem0 backends, storage, and evidence management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/docs/observability-evaluation.md"&gt;Observability &amp;amp; Evaluation&lt;/a&gt;&lt;/strong&gt; - Langfuse tracing, Ragas metrics, and performance monitoring&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/docs/deployment.md"&gt;Deployment Guide&lt;/a&gt;&lt;/strong&gt; - Docker, Kubernetes, and production setup&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/docs/terminal-frontend.md"&gt;Terminal Frontend&lt;/a&gt;&lt;/strong&gt; - React interface architecture and event protocol&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/docs/prompt_management.md"&gt;Prompt Management&lt;/a&gt;&lt;/strong&gt; - Module system and prompt loading&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Autonomous Operation&lt;/strong&gt;: Conducts security assessments with minimal human intervention&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Intelligent Tool Selection&lt;/strong&gt;: Automatically chooses appropriate security tools (nmap, sqlmap, nikto, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Natural Language Reasoning&lt;/strong&gt;: Uses Strands framework with metacognitive architecture&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evidence Collection&lt;/strong&gt;: Automatically stores findings with Mem0 memory (category="finding")&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Meta-Tool Creation&lt;/strong&gt;: Dynamically creates custom exploitation tools when needed&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Adaptive Execution&lt;/strong&gt;: Metacognitive assessment guides strategy based on confidence levels&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Assessment Reporting&lt;/strong&gt;: Generates comprehensive reports with findings and remediation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Swarm Intelligence&lt;/strong&gt;: Deploy parallel agents with shared memory for complex tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-Time Monitoring&lt;/strong&gt;: React interface displays live agent reasoning and tool execution&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Observability&lt;/strong&gt;: Built-in Langfuse tracing and Ragas evaluation metrics&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/docs/architecture.md"&gt;Full Architecture Guide&lt;/a&gt;&lt;/strong&gt; - Complete technical deep dive into Strands framework, tools, and metacognitive design&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;System Architecture&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;graph LR
    A[User Input&amp;lt;br/&amp;gt;Target &amp;amp; Objective] --&amp;gt; B[Cyber-AutoAgent]
    B --&amp;gt; C[AI Models&amp;lt;br/&amp;gt;Remote/Local]
    B --&amp;gt; D[Agent Tools&amp;lt;br/&amp;gt;shell, swarm, editor, etc.]
    B --&amp;gt; E[Evidence Storage&amp;lt;br/&amp;gt;Memory System]
    B --&amp;gt; O[Observability&amp;lt;br/&amp;gt;Langfuse + Ragas]

    C --&amp;gt; B
    D --&amp;gt; E
    E --&amp;gt; F[Final Report&amp;lt;br/&amp;gt;AI Generated]
    O --&amp;gt; G[Performance&amp;lt;br/&amp;gt;Metrics]

    style A fill:#e3f2fd
    style F fill:#e8f5e8
    style B fill:#f3e5f5
    style C fill:#fff3e0
    style O fill:#e1f5fe
    style G fill:#f1f8e9
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key Components:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;User Interface&lt;/strong&gt;: React-based terminal interface or command-line with target and objective specification&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agent Core&lt;/strong&gt;: Strands framework orchestration with metacognitive reasoning and tool selection&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Models&lt;/strong&gt;: GenAI tool use models (AWS Bedrock remote) or local models (Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security Tools&lt;/strong&gt;: Pentesting tools (nmap, sqlmap, nikto, metasploit, custom tools, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evidence Storage&lt;/strong&gt;: Persistent memory with FAISS, OpenSearch, or Mem0 Platform backends&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Observability&lt;/strong&gt;: Real-time tracing with Langfuse and automated evaluation with Ragas metrics&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Assessment Execution Flow&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;sequenceDiagram
    participant U as User
    participant A as Agent
    participant M as AI Model
    participant T as Tools
    participant E as Evidence
    participant L as Observability
    participant R as Evaluator

    U-&amp;gt;&amp;gt;A: Start Assessment
    A-&amp;gt;&amp;gt;L: Initialize Trace
    A-&amp;gt;&amp;gt;E: Initialize Storage

    loop Assessment Steps
        A-&amp;gt;&amp;gt;M: Analyze Situation
        M--&amp;gt;&amp;gt;A: Next Action
        A-&amp;gt;&amp;gt;L: Log Decision
        A-&amp;gt;&amp;gt;T: Execute Tool
        T--&amp;gt;&amp;gt;A: Results
        A-&amp;gt;&amp;gt;L: Log Tool Execution
        A-&amp;gt;&amp;gt;E: Store Findings
        A-&amp;gt;&amp;gt;L: Log Evidence Storage

        alt Critical Discovery
            A-&amp;gt;&amp;gt;T: Exploit Immediately
            T--&amp;gt;&amp;gt;A: Access Gained
            A-&amp;gt;&amp;gt;E: Store Evidence
            A-&amp;gt;&amp;gt;L: Log Exploitation
        end

        A-&amp;gt;&amp;gt;A: Check Progress

        alt Success
            break Complete
                A-&amp;gt;&amp;gt;U: Report Success
            end
        end
    end

    A-&amp;gt;&amp;gt;M: Generate Report
    M--&amp;gt;&amp;gt;A: Final Analysis
    A-&amp;gt;&amp;gt;L: Complete Trace
    A-&amp;gt;&amp;gt;R: Trigger Evaluation
    R--&amp;gt;&amp;gt;L: Upload Scores
    A-&amp;gt;&amp;gt;U: Deliver Report
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Enhanced Execution Pattern:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Real-time Monitoring&lt;/strong&gt;: Every action traced for complete visibility&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Intelligent Analysis&lt;/strong&gt;: Agent continuously analyzes situation using metacognitive reasoning&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Tool Selection&lt;/strong&gt;: Chooses appropriate tools based on confidence and findings&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evidence Collection&lt;/strong&gt;: All discoveries stored in persistent memory with categorization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Immediate Exploitation&lt;/strong&gt;: Critical vulnerabilities trigger immediate exploitation attempts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automated Evaluation&lt;/strong&gt;: System scores tool selection, evidence quality, and methodology&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Report Generation&lt;/strong&gt;: Final analysis combines findings with performance metrics&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Metacognitive Assessment Cycle&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;flowchart TD
    A[Think: Analyze Current State] --&amp;gt; B{Select Tool Type}

    B --&amp;gt; |Basic Task| C[Shell Commands]
    B --&amp;gt; |Security Task| D[Cyber Tools via Shell]
    B --&amp;gt; |Complex Task| E[Create Meta-Tool]
    B --&amp;gt; |Parallel Task| P[Swarm Orchestration]

    C --&amp;gt; F[Reflect: Evaluate Results]
    D --&amp;gt; F
    E --&amp;gt; F
    P --&amp;gt; F

    F --&amp;gt; G{Findings?}

    G --&amp;gt; |Critical| H[Exploit Immediately]
    G --&amp;gt; |Informational| I[Store &amp;amp; Continue]
    G --&amp;gt; |None| J[Try Different Approach]

    H --&amp;gt; K[Document Evidence]
    I --&amp;gt; L{Objective Met?}
    J --&amp;gt; A
    K --&amp;gt; L

    L --&amp;gt; |Yes| M[Complete Assessment]
    L --&amp;gt; |No| A

    style A fill:#e3f2fd
    style C fill:#e8f5e8
    style D fill:#fff3e0
    style E fill:#f3e5f5
    style P fill:#fce4ec
    style H fill:#ffcdd2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Metacognitive Process:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Design Philosophy: Meta-Everything Architecture&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;At the core of Cyber-AutoAgent is a "meta-everything" design philosophy that enables dynamic adaptation and scaling:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Meta-Agent&lt;/strong&gt;: The swarm capability deploys dynamic agents as tools, each tailored for specific subtasks with their own reasoning loops&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Meta-Tooling&lt;/strong&gt;: Through the editor and load_tool capabilities, the agent can create, modify, and deploy new tools at runtime to address novel challenges&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Meta-Learning&lt;/strong&gt;: Continuous memory storage and retrieval enables cross-session learning, building expertise over time&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Meta-Cognition&lt;/strong&gt;: Self-reflection and confidence assessment drives strategic decisions about tool selection and approach&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This meta-architecture allows the system to transcend static tool limitations and evolve its capabilities during execution.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Process Flow:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Assess Confidence&lt;/strong&gt;: Evaluate current knowledge and confidence level (High &amp;gt;80%, Medium 50-80%, Low &amp;lt;50%)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Adaptive Strategy&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;High confidence: Use specialized tools directly&lt;/li&gt; 
   &lt;li&gt;Medium confidence: Deploy swarm for parallel exploration&lt;/li&gt; 
   &lt;li&gt;Low confidence: Gather more information, try alternatives&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Execute&lt;/strong&gt;: Tool hierarchy based on confidence: 
  &lt;ul&gt; 
   &lt;li&gt;Specialized security tools for known vulnerabilities (sqlmap, nikto, nmap)&lt;/li&gt; 
   &lt;li&gt;Swarm deployment when multiple approaches needed (with memory access)&lt;/li&gt; 
   &lt;li&gt;Parallel shell for rapid reconnaissance (up to 7 commands)&lt;/li&gt; 
   &lt;li&gt;Meta-tool creation only when no existing tool suffices&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Learn &amp;amp; Store&lt;/strong&gt;: Store findings with category="finding" for memory persistence&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Tool Selection Hierarchy (Confidence-Based):&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Specialized cyber tools (sqlmap, nikto, metasploit) - when vulnerability type is known&lt;/li&gt; 
 &lt;li&gt;Swarm deployment - when confidence &amp;lt;70% or need multiple perspectives (includes memory)&lt;/li&gt; 
 &lt;li&gt;Parallel shell execution - for rapid multi-command reconnaissance&lt;/li&gt; 
 &lt;li&gt;Meta-tool creation - only for novel exploits when existing tools fail&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Model Providers&lt;/h2&gt; 
&lt;p&gt;Cyber-AutoAgent supports multiple model providers for maximum flexibility:&lt;/p&gt; 
&lt;h3&gt;Bedrock Provider (Direct AWS)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Best for&lt;/strong&gt;: Production use, high-quality results, no local GPU requirements&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Requirements&lt;/strong&gt;: AWS account with Bedrock access&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Default Model&lt;/strong&gt;: Claude Sonnet 4.5 (claude-sonnet-4-5-20250929-v1:0)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;: Latest models, reliable performance, managed infrastructure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ollama Provider (Local)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Best for&lt;/strong&gt;: Privacy, offline use, cost control, local development&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Requirements&lt;/strong&gt;: Local Ollama installation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Default Models&lt;/strong&gt;: &lt;code&gt;qwen3-coder:30b-a3b-q4_K_M&lt;/code&gt; (LLM), &lt;code&gt;mxbai-embed-large&lt;/code&gt; (embeddings)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;: No cloud dependencies, complete privacy, no API costs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;LiteLLM Provider (Universal)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Best for&lt;/strong&gt;: Multi-provider flexibility, unified interface&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Requirements&lt;/strong&gt;: API keys for desired providers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Supported&lt;/strong&gt;: 100+ models from OpenAI, Anthropic, Cohere, Google, Azure, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Benefits&lt;/strong&gt;: Switch providers easily, fallback support, unified API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Comparison&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Bedrock&lt;/th&gt; 
   &lt;th&gt;Ollama&lt;/th&gt; 
   &lt;th&gt;LiteLLM&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Cost&lt;/td&gt; 
   &lt;td&gt;Pay per call&lt;/td&gt; 
   &lt;td&gt;Free&lt;/td&gt; 
   &lt;td&gt;Varies by provider&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Performance&lt;/td&gt; 
   &lt;td&gt;High&lt;/td&gt; 
   &lt;td&gt;Hardware dependent&lt;/td&gt; 
   &lt;td&gt;Provider dependent&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Offline Use&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Setup&lt;/td&gt; 
   &lt;td&gt;Easy&lt;/td&gt; 
   &lt;td&gt;Higher&lt;/td&gt; 
   &lt;td&gt;Medium&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Model Selection&lt;/td&gt; 
   &lt;td&gt;100+ models&lt;/td&gt; 
   &lt;td&gt;Limited&lt;/td&gt; 
   &lt;td&gt;100+ models&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Observability &amp;amp; Evaluation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/docs/observability-evaluation.md"&gt;Complete Observability &amp;amp; Evaluation Guide&lt;/a&gt;&lt;/strong&gt; - Langfuse tracing, Ragas metrics, and automated performance evaluation&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Cyber-AutoAgent includes &lt;strong&gt;built-in observability and evaluation&lt;/strong&gt; using self-hosted Langfuse for tracing and Ragas for automated performance metrics. This provides complete visibility into agent operations and continuous assessment of cybersecurity effectiveness.&lt;/p&gt; 
&lt;h3&gt;Key Features&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Observability (Langfuse)&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Complete operation traces&lt;/strong&gt;: Every penetration test operation is traced end-to-end&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tool execution timeline&lt;/strong&gt;: Visual timeline of nmap, sqlmap, nikto usage&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Token usage metrics&lt;/strong&gt;: Track LLM token consumption and costs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory operations&lt;/strong&gt;: Monitor agent memory storage and retrieval patterns&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Error tracking&lt;/strong&gt;: Failed tool executions and error analysis&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Evaluation (Ragas)&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Tool Selection Accuracy&lt;/strong&gt;: How well the agent chooses appropriate cybersecurity tools&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evidence Quality&lt;/strong&gt;: Assessment of collected security findings and documentation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Answer Relevancy&lt;/strong&gt;: Alignment of agent actions with stated objectives&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Context Precision&lt;/strong&gt;: Effective use of memory and tool outputs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automated scoring&lt;/strong&gt;: Every operation receives performance metrics automatically&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;p&gt;When running with Docker Compose, observability and evaluation are enabled by default:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start with observability and evaluation
cd docker
docker-compose up -d

# Access Langfuse UI at http://localhost:3000
# Login: admin@cyber-autoagent.com / changeme

# Enable evaluation for your operations
export ENABLE_AUTO_EVALUATION=true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Essential Environment Variables&lt;/strong&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ENABLE_OBSERVABILITY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable/disable Langfuse tracing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ENABLE_AUTO_EVALUATION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable automatic Ragas evaluation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;LANGFUSE_HOST&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;http://langfuse-web:3000&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Langfuse server URL&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;RAGAS_EVALUATOR_MODEL&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;us.anthropic.claude-3-5-sonnet-20241022-v2:0&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Model for evaluation&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Evaluation Metrics&lt;/h3&gt; 
&lt;p&gt;The system automatically evaluates four key metrics after each operation:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Tool Selection Accuracy&lt;/strong&gt; (0.0-1.0): Strategic tool choice and sequencing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evidence Quality&lt;/strong&gt; (0.0-1.0): Comprehensive vulnerability documentation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Answer Relevancy&lt;/strong&gt; (0.0-1.0): Alignment with security objectives&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Context Precision&lt;/strong&gt; (0.0-1.0): Effective use of previous findings&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Production Security&lt;/h3&gt; 
&lt;p&gt;For production deployments, update security keys:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;LANGFUSE_ENCRYPTION_KEY=$(openssl rand -hex 32)
LANGFUSE_SALT=$(openssl rand -hex 16)
LANGFUSE_ADMIN_PASSWORD=strong-password-here
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation &amp;amp; Deployment&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/docs/deployment.md"&gt;Complete Deployment Guide&lt;/a&gt;&lt;/strong&gt; - Docker, Kubernetes, production setup, and troubleshooting&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;System Requirements&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js&lt;/strong&gt;: Version 20+ required for React CLI interface&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt;: Version 3.10+ for local installation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: For containerized deployments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;macOS Users&lt;/strong&gt;: Xcode Command Line Tools required&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;React CLI Setup (Required for Interactive Mode)&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Ensure Node.js 20+ is installed
node --version  # Should show v20.x.x or higher

# macOS users: Update Xcode tools if needed
sudo softwareupdate --install -a
sudo xcode-select --reset

# Install React CLI dependencies
cd src/modules/interfaces/react
npm install

# If installation fails, clear caches:
npm cache clean --force
rm -rf ~/.node-gyp
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Bedrock Provider&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Option 1: Configure AWS credentials
aws configure
# Or set environment variables:
export AWS_ACCESS_KEY_ID=your_key
export AWS_SECRET_ACCESS_KEY=your_secret
export AWS_REGION=your_region

# Option 2: Use AWS Bedrock API key (bearer token)
export AWS_BEARER_TOKEN_BEDROCK=your_bearer_token
export AWS_REGION=your_region
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Bearer token authentication is only supported with the native Bedrock provider. LiteLLM does not currently support AWS bearer tokens - use standard AWS credentials instead.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;LiteLLM Provider (Universal Gateway)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;LiteLLM supports 100+ model providers. Set the appropriate environment variables for your chosen provider:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# For OpenAI models (GPT-4, GPT-3.5, etc.)
export OPENAI_API_KEY=your_openai_key
# Usage: --model "openai/gpt-4"

# For Google models (Gemini)
export GEMINI_API_KEY=your_gemini_key
# Usage: --model "gemini/gemini-pro"

# For Azure OpenAI
export AZURE_API_KEY=your_azure_key
export AZURE_API_BASE=https://your-resource.openai.azure.com
export AZURE_API_VERSION=2024-02-15-preview
# Usage: --model "azure/your-deployment-name"

# For Hugging Face
export HUGGINGFACE_API_KEY=your_hf_key
# Usage: --model "huggingface/meta-llama/Llama-2-7b-chat-hf"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: When using LiteLLM with Bedrock models, AWS bearer tokens (AWS_BEARER_TOKEN_BEDROCK) are NOT supported. Use standard AWS credentials only.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Ollama Provider&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install Ollama
curl -fsSL https://ollama.ai/install.sh | sh

# Start service and pull models
ollama serve
ollama pull qwen3-coder:30b-a3b-q4_K_M
ollama pull mxbai-embed-large
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker Deployment (Recommended)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone repository
git clone https://github.com/cyber-autoagent/cyber-autoagent.git
cd cyber-autoagent

# Build image
docker build -f docker/Dockerfile -t cyber-autoagent .

# Using environment variables
docker run --rm \
  -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
  -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
  -e AWS_BEARER_TOKEN_BEDROCK=${AWS_BEARER_TOKEN_BEDROCK} \
  -e AWS_REGION=${AWS_REGION:-us-east-1} \
  -v $(pwd)/outputs:/app/outputs \
  -v $(pwd)/tools:/app/tools \
  cyber-autoagent \
  --target "x.x.x.x" \
  --objective "Identify vulnerabilities" \
  --iterations 50
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Local Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone repository
git clone https://github.com/cyber-autoagent/cyber-autoagent.git
cd cyber-autoagent

# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install Python dependencies
pip install -e .

# Install React CLI interface
cd src/modules/interfaces/react
npm install
cd ../../../..

# Optional: Install security tools (non-exhaustive list)
sudo apt install nmap nikto sqlmap gobuster  # Debian/Ubuntu
brew install nmap nikto sqlmap gobuster      # macOS

# Run with React CLI
cd src/modules/interfaces/react
npm start

# Or run Python directly
python src/cyberautoagent.py \
  --target "http://testphp.vulnweb.com" \
  --objective "Comprehensive security assessment"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Data Storage&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Unified Output Structure&lt;/strong&gt; (default, enabled by &lt;code&gt;CYBER_AGENT_ENABLE_UNIFIED_OUTPUT=true&lt;/code&gt;):&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Data Type&lt;/th&gt; 
   &lt;th&gt;Location&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Evidence&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;./outputs/&amp;lt;target&amp;gt;/OP_&amp;lt;id&amp;gt;/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Logs&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;./outputs/&amp;lt;target&amp;gt;/OP_&amp;lt;id&amp;gt;/logs/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Reports&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;./outputs/&amp;lt;target&amp;gt;/OP_&amp;lt;id&amp;gt;/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Tools&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;./tools/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Utils&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;./outputs/&amp;lt;target&amp;gt;/OP_&amp;lt;id&amp;gt;/utils/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Memory&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;./outputs/&amp;lt;target&amp;gt;/memory/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The unified structure organizes all artifacts under operation-specific directories with unique IDs (&lt;code&gt;OP_YYYYMMDD_HHMMSS&lt;/code&gt;), making it easy to track and manage results from multiple assessment runs. All directories are created automatically.&lt;/p&gt; 
&lt;h3&gt;Command-Line Arguments&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Required Arguments&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--objective&lt;/code&gt;: Security assessment objective&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--target&lt;/code&gt;: Target system/network to assess (ensure you have permission!)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Optional Arguments&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--provider&lt;/code&gt;: Model provider - &lt;code&gt;bedrock&lt;/code&gt; (AWS), &lt;code&gt;ollama&lt;/code&gt; (local), or &lt;code&gt;litellm&lt;/code&gt; (universal), default: bedrock&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--module&lt;/code&gt;: Security module - &lt;code&gt;general&lt;/code&gt; (web apps) or &lt;code&gt;ctf&lt;/code&gt; (challenges), default: general&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--iterations&lt;/code&gt;: Maximum tool executions before stopping, default: 100&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--model&lt;/code&gt;: Model ID to use (default: remote=claude-sonnet-4-5, local=qwen3-coder:30b-a3b-q4_K_M)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--region&lt;/code&gt;: AWS region for Bedrock, default: us-east-1&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--verbose&lt;/code&gt;: Enable verbose output with detailed debug logging&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--confirmations&lt;/code&gt;: Enable tool confirmation prompts (default: disabled)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--memory-path&lt;/code&gt;: Path to existing memory store to load past memories&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--memory-mode&lt;/code&gt;: Memory initialization mode - &lt;code&gt;auto&lt;/code&gt; (loads existing) or &lt;code&gt;fresh&lt;/code&gt; (starts new), default: auto&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--keep-memory&lt;/code&gt;: Keep memory data after operation completes (default: true)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--output-dir&lt;/code&gt;: Custom output directory (default: ./outputs)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Usage Examples&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Basic Python Usage (Bedrock Provider)
python src/cyberautoagent.py \
  --target "http://testphp.vulnweb.com" \
  --objective "Find SQL injection vulnerabilities" \
  --provider bedrock \
  --iterations 50

# Using LiteLLM with OpenAI
export OPENAI_API_KEY=your_key
python src/cyberautoagent.py \
  --target "http://testphp.vulnweb.com" \
  --objective "Security assessment" \
  --provider litellm \
  --model "openai/gpt-4o"

# Docker with full observability, evaluation and root access (for package installation)
docker run --rm \
  --user root \
  --network cyber-autoagent_default \
  -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
  -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
  -e AWS_REGION=${AWS_REGION:-us-east-1} \
  -e LANGFUSE_HOST=http://langfuse-web:3000 \
  -e LANGFUSE_PUBLIC_KEY=cyber-public \
  -e LANGFUSE_SECRET_KEY=cyber-secret \
  -e ENABLE_AUTO_EVALUATION=true \
  -v $(pwd)/outputs:/app/outputs \
  -v $(pwd)/tools:/app/tools \
  cyber-autoagent:dev \
  --target "http://testphp.vulnweb.com" \
  --objective "Comprehensive SQL injection and XSS assessment" \
  --iterations 25
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;By default, the agent runs as a non-root user (&lt;code&gt;cyberagent&lt;/code&gt;) for security. This limits the agent's ability to install additional tools on the fly during execution. If you need the agent to install packages dynamically, you can override this at container start:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Small example, full command above
docker run --user root cyber-autoagent
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Running as root reduces security isolation but enables full system access for tool installation.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;The agent uses a &lt;strong&gt;centralized configuration system&lt;/strong&gt; defined in &lt;code&gt;src/modules/config/&lt;/code&gt;. All settings can be customized through environment variables, with sensible defaults provided.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Recent Improvements&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Modular architecture&lt;/strong&gt; with organized agents/, config/, tools/, prompts/, and evaluation/ directories&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Langfuse prompt management&lt;/strong&gt; for dynamic prompt loading and versioning&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unified output structure&lt;/strong&gt; for better organization (enabled by default)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Standardized paths&lt;/strong&gt; for logs, reports, and evidence collection&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced memory management&lt;/strong&gt; with cross-operation persistence&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dedicated report agent&lt;/strong&gt; for improved report generation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Copy the example environment file and customize it for your needs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cp .env.example .env
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;.env.example&lt;/code&gt; file contains detailed configuration options with inline comments for all supported features including model providers, memory systems, and observability settings. Key environment variables include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt;, &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt;, &lt;code&gt;AWS_BEARER_TOKEN_BEDROCK&lt;/code&gt;, &lt;code&gt;AWS_REGION&lt;/code&gt; for remote mode (AWS Bedrock)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OLLAMA_HOST&lt;/code&gt; for local mode (Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CYBER_AGENT_OUTPUT_DIR&lt;/code&gt;, &lt;code&gt;CYBER_AGENT_ENABLE_UNIFIED_OUTPUT&lt;/code&gt; for output management&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LANGFUSE_PUBLIC_KEY&lt;/code&gt;, &lt;code&gt;LANGFUSE_SECRET_KEY&lt;/code&gt; for observability&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MEM0_API_KEY&lt;/code&gt; or &lt;code&gt;OPENSEARCH_HOST&lt;/code&gt; for memory backends&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;code&gt;.env.example&lt;/code&gt; for complete configuration options and usage examples.&lt;/p&gt; 
&lt;h2&gt;Development &amp;amp; Testing&lt;/h2&gt; 
&lt;h3&gt;Running Tests&lt;/h3&gt; 
&lt;p&gt;This project uses &lt;code&gt;uv&lt;/code&gt; for dependency management and testing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run all tests
uv run pytest

# Run specific test file
uv run pytest tests/test_agent.py

# Run tests with verbose output
uv run pytest -v

# Run tests with coverage
uv run pytest --cov=src
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Project Structure&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;cyber-autoagent/
├── src/                       # Source code
│   ├── cyberautoagent.py      # Main entry point and CLI
│   └── modules/               # Core modules (modular architecture)
│       ├── agents/            # Agent implementations
│       │   ├── cyber_autoagent.py  # Main Strands agent creation
│       │   └── report_agent.py     # Dedicated report generation
│       ├── config/            # Configuration management
│       │   ├── manager.py     # Centralized configuration system
│       │   └── environment.py # Environment setup and validation
│       ├── tools/             # Tool implementations
│       │   └── memory.py      # Mem0 memory management tool
│       ├── prompts/           # Prompt management
│       │   ├── system.py      # AI prompts and configurations
│       │   └── manager.py     # Langfuse prompt management
│       ├── evaluation/        # Evaluation system
│       │   └── evaluation.py  # Ragas evaluation metrics
│       ├── handlers/          # Callback handling and UI utilities
│       │   ├── base.py        # Base classes and constants
│       │   ├── callback.py    # Main ReasoningHandler class
│       │   ├── display.py     # Result display formatting
│       │   ├── tools.py       # Tool execution handling
│       │   ├── reporting.py   # Report generation utilities
│       │   └── utils.py       # UI utilities and analysis
│       ├── interfaces/
│       │   └── react/         # React terminal interface
│       └── operation_plugins/ # Security modules (general, ctf)
├── docs/                      # Documentation
│   ├── architecture.md       # Agent architecture and tools
│   ├── memory.md             # Memory system (Mem0 backends)
│   ├── observability.md      # Langfuse monitoring setup
│   └── deployment.md         # Docker and production deployment
├── docker/                   # Docker deployment files
│   ├── docker-compose.yml    # Full stack (agent + Langfuse)
│   └── Dockerfile            # Agent container build
├── pyproject.toml            # Dependencies and project config
├── uv.lock                   # Dependency lockfile
├── .env.example              # Environment configuration template
├── outputs/                  # Unified output directory (auto-created)
│   └── &amp;lt;target&amp;gt;/            # Target-specific organization
│       ├── OP_&amp;lt;id&amp;gt;/        # Operation-specific files
│       │   ├── report.md   # Security findings (when generated)
│       │   ├── cyber_operations.log  # Operation log
│       │   ├── artifacts/  # Ad-hoc files
│       │   └── tools/      # Custom tools created by agent
│       └── memory/         # Cross-operation memory
│           ├── mem0.faiss
│           └── mem0.pkl
└── README.md                 # This file
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Key Files&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;File&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;src/cyberautoagent.py&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;CLI entry point, observability setup&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;src/modules/agents/cyber_autoagent.py&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Strands agent creation, model configuration&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;src/modules/agents/report_agent.py&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Report generation agent&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;src/modules/config/manager.py&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Centralized configuration system&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;src/modules/tools/memory.py&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Unified Mem0 tool (FAISS/OpenSearch/Platform)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;src/modules/evaluation/evaluation.py&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Ragas evaluation system&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;src/modules/prompts/system.py&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;AI prompts and configurations&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;src/modules/prompts/manager.py&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Langfuse prompt management&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;.env.example&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Environment configuration template&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;docker/docker-compose.yml&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Complete observability stack&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;docker/Dockerfile&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Agent container build&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;docs/architecture.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Technical architecture deep dive&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;h3&gt;Common Issues&lt;/h3&gt; 
&lt;h4&gt;React CLI Installation Issues&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Node.js Version&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Check Node.js version (must be 20+)
node --version

# Install Node.js 20+ via nvm
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
nvm install 20
nvm use 20
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;macOS Build Errors&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Update Xcode Command Line Tools
sudo softwareupdate --install -a
sudo xcode-select --reset

# Clear npm and node-gyp caches
npm cache clean --force
rm -rf ~/.node-gyp

# Reinstall
cd src/modules/interfaces/react
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Linux Build Errors&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install build essentials
sudo apt-get update
sudo apt-get install build-essential python3-dev

# Clear caches and reinstall
npm cache clean --force
cd src/modules/interfaces/react
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;AWS Credentials Not Found&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Option 1: Configure AWS CLI
aws configure

# Option 2: Set traditional environment variables
export AWS_ACCESS_KEY_ID=your_key
export AWS_SECRET_ACCESS_KEY=your_secret
export AWS_REGION=us-east-1

# Option 3: Use AWS Bedrock API key (bearer token)
export AWS_BEARER_TOKEN_BEDROCK=your_bearer_token
export AWS_REGION=us-east-1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Model Access Denied&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Request model access in AWS Console
# Navigate to: Amazon Bedrock &amp;gt; Model access &amp;gt; Request model access
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Memory System Errors&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;See &lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/docs/memory.md"&gt;Memory System Guide&lt;/a&gt;&lt;/strong&gt; for complete backend configuration and troubleshooting&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# For local FAISS backend (default)
pip install faiss-cpu  # or faiss-gpu for CUDA

# For Mem0 Platform
export MEM0_API_KEY=your_api_key

# For OpenSearch backend
export OPENSEARCH_HOST=your_host
export AWS_REGION=your_region

# Check memory storage location
ls -la ./mem0_faiss_OP_*/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Tool Not Found Errors&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install missing security tools
sudo apt install nmap nikto sqlmap gobuster  # Debian/Ubuntu
brew install nmap nikto sqlmap gobuster      # macOS
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Ollama Issues (Local Mode)&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Ollama Server Not Running&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start Ollama service
ollama serve

# Check if running
curl http://localhost:11434/api/version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Required Models Missing&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Pull required models
ollama pull qwen3-coder:30b-a3b-q4_K_M
ollama pull mxbai-embed-large

# List available models
ollama list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Connection Errors&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Check Ollama is accessible
curl -X POST http://localhost:11434/api/generate \
  -H "Content-Type: application/json" \
  -d '{"model": "qwen3-coder:30b-a3b-q4_K_M", "prompt": "test", "stream": false}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Docker Networking (Local Mode)&lt;/strong&gt; Cyber-AutoAgent automatically detects the correct Ollama host for your environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Ensure Ollama is running on your host
ollama serve

# Test connection from host
curl http://localhost:11434/api/version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Performance Issues&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Monitor resource usage
htop  # Check CPU/Memory during execution

# For better performance, consider:
# - Using smaller models (e.g., llama3.1:8b instead of 70b)
# - Allocating more RAM to Ollama
# - Using GPU acceleration if available
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create a feature branch (&lt;code&gt;git checkout -b feature/amazing-feature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Commit your changes (&lt;code&gt;git commit -m 'Add amazing feature'&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Push to the branch (&lt;code&gt;git push origin feature/amazing-feature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Open a Pull Request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href="https://raw.githubusercontent.com/westonbrown/Cyber-AutoAgent/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Legal Notice&lt;/h2&gt; 
&lt;p&gt;This tool is provided for educational and authorized security testing purposes only. Users are solely responsible for ensuring they have proper authorization before testing any systems. The authors assume no liability for misuse or any damages that may result from using this software.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anthropics/strands"&gt;Strands Framework&lt;/a&gt; - Agent orchestration &amp;amp; swarm intelligence&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aws.amazon.com/bedrock/"&gt;AWS Bedrock&lt;/a&gt; - Foundation model access&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ollama.ai"&gt;Ollama&lt;/a&gt; - Local model inference&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mem0ai/mem0"&gt;Mem0&lt;/a&gt; - Advanced memory management with FAISS/OpenSearch/Platform backends&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Remember: With great power comes great responsibility. Use this tool ethically and legally.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>requestly/requestly</title>
      <link>https://github.com/requestly/requestly</link>
      <description>&lt;p&gt;Free and open-source API Client &amp; Interceptor.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://requestly.com"&gt;&lt;img src="https://github.com/user-attachments/assets/5b8cdaf9-22d6-4aa5-844c-93d70ece41ad" alt="Requestly" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Join Requestly community on Discord: &lt;a href="https://rqst.ly/join-community"&gt;Link&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Requestly - API Client with HTTP Interceptor, Modfications, Testing &amp;amp; Mocking.&lt;/h2&gt; 
&lt;p&gt;Requestly is a powerful combination of a local API Client (like Postman) &amp;amp; HTTP Interceptor (like Charles Proxy) with API Testing and Mocking. Requestly can be used directly in the browser as a Chrome Extension or installed as a desktop application.&lt;/p&gt; 
&lt;h4&gt;⚡ A Local-first &amp;amp; Powerful alternative to Postman &amp;amp; Charles Proxy ⚡&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/04c32f25-96c4-46d9-a31d-b6887ce7bfdc" alt="requestly-overview" /&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/issues-closed/requestly/requestly" alt="GitHub closed issues" /&gt; &lt;a href="https://chrome.google.com/webstore/detail/redirect-url-modify-heade/mdnleldcmiljblolnjhpnblkcekpdkpa/"&gt;&lt;img src="https://img.shields.io/chrome-web-store/rating/mdnleldcmiljblolnjhpnblkcekpdkpa" alt="Chrome Web Store Rating" /&gt; &lt;img src="https://img.shields.io/chrome-web-store/rating-count/mdnleldcmiljblolnjhpnblkcekpdkpa?label=reviews" alt="Chrome Web Store Reviews" /&gt; &lt;img src="https://img.shields.io/chrome-web-store/users/mdnleldcmiljblolnjhpnblkcekpdkpa?label=downloads" alt="Chrome Web Store Downloads" /&gt;&lt;/a&gt; &lt;a href="https://status.requestly.io"&gt;&lt;img src="https://uptime.betterstack.com/status-badges/v2/monitor/13j20.svg?sanitize=true" alt="Status badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;🏡 Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#a-local-first-solution-local-workspaces"&gt;A Local-first Solution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#rest-api-client"&gt;REST API Client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#environments"&gt;Environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#http-interceptor--http-rules-intercept--modify-https-requests"&gt;HTTP Interceptor - Intercept &amp;amp; Modify HTTP Requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#api-mocking-helps-in-building-frontend-faster-without-waiting-for-backend"&gt;API Mocking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#1-click-imports"&gt;1-Click Imports from Postman, Insomnia, Modheader, Charles Proxy, and Resource Override&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#-best-in-class-support"&gt;Support Channels&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#-development"&gt;👩‍💻 Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#-contributing"&gt;🙏 Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;A Local-first Solution (Local Workspaces)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Local Workspaces&lt;/strong&gt; is a simple, powerful, and privacy-friendly approach to building, testing &amp;amp; mocking your APIs. All your data is stored in the selected directory on your disk. You can also import all your API client files (requests, collections, environments) and codebase into VSCode and edit them directly in your IDE.&lt;/p&gt; 
&lt;p&gt;Collaborate with your colleagues using your preferred sync engine - Git, Google Drive, iCloud, or nothing at all.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Team Workspaces&lt;/strong&gt; are great for seamless collaboration through Requestly sync engine.&lt;/p&gt; 
&lt;h4&gt;⚡ Local and team workspaces⚡&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/06f17e34-1614-4396-95ee-1416003261ad" alt="requestly-local-first-support" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;REST API Client&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.requestly.com/general/api-client/overview"&gt;&lt;strong&gt;Rest API Client&lt;/strong&gt;&lt;/a&gt; offers a local API playground to build and test your APIs. It supports features like API Collections, Environments, Environment Switcher, API Requests History with a beautiful and collaborative interface.&lt;/p&gt; 
&lt;h4&gt;⚡ A Local-first, Beautiful &amp;amp; Powerful alternative to Postman &amp;amp; Insomina ⚡&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/a962b213-8744-4ffc-bd04-fcf891f48914" alt="requestly-api-client" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;Environments&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Environment&lt;/strong&gt; is a set of key-value pairs that can be used in API requests. Environments feature lets you manage variables across multiple environments with an easy environment selector. We support Global variables as well as Collection level variables. &lt;a href="https://docs.requestly.com/general/api-client/environments-and-variables"&gt;Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;⚡ Environments feature ⚡&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/2726fe0e-9f0a-4df7-bfc9-344c65e19353" alt="requestly-api-client-environments-support" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;HTTP Interceptor / HTTP Rules (Intercept &amp;amp; Modify HTTPs Requests)&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.requestly.com/general/http-interceptor/overview"&gt;&lt;strong&gt;HTTP Rules&lt;/strong&gt;&lt;/a&gt; feature can be used to &lt;strong&gt;Intercept, Monitor &amp;amp; Modify HTTPs requests &amp;amp; responses&lt;/strong&gt; from browsers &amp;amp; mobile apps.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use the Chrome/Firefox/Edge extension for Intercepting &amp;amp; Modifying traffic from browsers&lt;/li&gt; 
 &lt;li&gt;Use the desktop app for capturing &amp;amp; modifying traffic from browsers, mobile apps &amp;amp; other desktop apps.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;⚡ Intercept, Monitor &amp;amp; Modify HTTP Requests &amp;amp; Responses ⚡&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/791e54cb-d817-4bc2-83a6-e8bdd3b1cef7" alt="requestly-http-interceptor" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;strong&gt;Different Modifications supported&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Redirect URLs (Map Local &amp;amp; Map Remote) e.g. 
  &lt;ul&gt; 
   &lt;li&gt;Change Hostname, QueryParams, etc in the URL&lt;/li&gt; 
   &lt;li&gt;Redirect traffic from one environment to another (e.g. production to dev)&lt;/li&gt; 
   &lt;li&gt;Swap Tag Manager scripts from production to staging/dev environment&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Modify HTTP Request &amp;amp; Response Headers&lt;/li&gt; 
 &lt;li&gt;Modify API Request &amp;amp; Response body&lt;/li&gt; 
 &lt;li&gt;Inject scripts on web pages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;API Mocking (Helps in building frontend faster without waiting for backend)&lt;/h2&gt; 
&lt;p&gt;Requestly offers a complete API Mocking solution. Using Requestly, you can&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/api-mocking/api-mocking"&gt;Create Local API Mocks&lt;/a&gt;: Intercept the API Requests and return the new response&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/http-rules/rule-types/modify-response-body"&gt;Static &amp;amp; Dynamic Response Overrides&lt;/a&gt;: Override the API response received from server dynamically using simple JS&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/http-rules/advanced-usage/graphql-modify-request-response"&gt;GraphQL Support&lt;/a&gt;: Override graphQL APIs by targeting on query, operationName&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/api-mocking/create-cloud-based-mocks"&gt;Create Cloud-based API Mocks&lt;/a&gt;: Create cloud-based API Mocks and get new endpoints for the mocks&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/sessions/record-api-sessions#bulk-mocking"&gt;Bulk API Mocks&lt;/a&gt;: Record API traffic &amp;amp; Serve the Mocks from the recorded Session&lt;/li&gt; 
 &lt;li&gt;Mock APIs in e2e testing: Use Requestly in your e2e Cypress/Playwright/Selenium and mock the APIs in CI pipeline&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;⚡ API Mocks - Build &amp;amp; Test your frontend faster without waiting for backend ⚡&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/7bc00c7e-c280-40eb-9a2a-c070ecdea662" alt="requestly-api-mocking" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;1-Click Imports&lt;/h2&gt; 
&lt;p&gt;Requestly provides &lt;strong&gt;Importing Configuration&lt;/strong&gt; from the following tools&lt;/p&gt; 
&lt;p&gt;API Clients&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/imports/postman"&gt;Import from Postman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#"&gt;Import from Insomnia&lt;/a&gt; - Coming Soon&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#"&gt;Import from Bruno&lt;/a&gt; - Coming Soon&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;HTTP Interceptors&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/imports/charles-proxy"&gt;Import from Charles Proxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/imports/resource-override"&gt;Import from Resource Override&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/general/imports/modheader"&gt;Import from ModHeader&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;⚡ Import from Postman, Insomnia, CharlesProxy, ModHeader, etc. ⚡&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/6186e916-9036-4847-95dd-53b66a4c2730" alt="requestly-api-client-environments-support" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;🤝 Best In-Class Support&lt;/h2&gt; 
&lt;h4&gt;⚡ Requestly is known for best product, team and Best in-class support (4.3⭐️ in 1000+ reviews) ⚡&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/"&gt;Documentation&lt;/a&gt;: Product Documentation and Understanding of different features&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.requestly.com/security-privacy/"&gt;Security &amp;amp; Privacy&lt;/a&gt;: Our Security &amp;amp; Privacy document&lt;/li&gt; 
 &lt;li&gt;&lt;a href="mailto:contact@requestly.com"&gt;Email contact@requestly.com&lt;/a&gt;: Email Support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/requestly"&gt;StackOverflow Questions&lt;/a&gt;: Ask Questions on StackOverflow and add "Requestly" tag&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;👩‍💻 Development&lt;/h2&gt; 
&lt;p&gt;This repository contains the source code for Browser extension and UI application which make up the core of Requestly.&lt;br /&gt; Please follow the &lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/getting-started.md"&gt;Getting Started Guide&lt;/a&gt; to get to know about the development process in this repository.&lt;/p&gt; 
&lt;p&gt;Start working on individual modules:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/browser-extension"&gt;Browser extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/app"&gt;UI application&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/requestly/requestly-desktop-app"&gt;Desktop application&lt;/a&gt; (Electron-based application for MacOS, Windows)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/requestly/requestly-web-sdk"&gt;Web SDK&lt;/a&gt; (facilitates SessionBook)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/requestly/requestly-mock-server"&gt;Mock Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/requestly/requestly-backend"&gt;Backend&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;🙏 Contributing&lt;/h2&gt; 
&lt;p&gt;Currently, while Requestly is open source, we are not accepting pull requests. As a startup with a small team, our focus is on moving quickly and we currently lack the resources and documentation needed to actively support an open-source community. This will probably change in the future.&lt;/p&gt; 
&lt;p&gt;If you are still interested, read our &lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to learn about how to propose bugfixes and improvements, and how the development process works.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#contributors"&gt;&lt;img src="https://img.shields.io/github/all-contributors/requestly/requestly?color=ee8449&amp;amp;style=flat-square" alt="All Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://sagarsoni.dev/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29792913?v=4?s=100" alt="Sagar Soni" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://sagarsoni.dev/"&gt;&lt;strong&gt;Sagar Soni&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=sagarsoni7"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="http://sahil865gupta.github.io"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16779465?v=4?s=100" alt="Sahil Gupta" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="http://sahil865gupta.github.io"&gt;&lt;strong&gt;Sahil Gupta&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=wrongsahil"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/lazyvab"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6367566?v=4?s=100" alt="Vaibhav Nigam" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/lazyvab"&gt;&lt;strong&gt;Vaibhav Nigam&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=lazyvab"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/RuntimeTerror10"&gt;&lt;img src="https://avatars.githubusercontent.com/u/53986600?v=4?s=100" alt="Parth Bhardwaj" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/RuntimeTerror10"&gt;&lt;strong&gt;Parth Bhardwaj&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=RuntimeTerror10"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="http://linkedin.com/in/rohanmathur91"&gt;&lt;img src="https://avatars.githubusercontent.com/u/61556757?v=4?s=100" alt="Rohan Mathur" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="http://linkedin.com/in/rohanmathur91"&gt;&lt;strong&gt;Rohan Mathur&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=rohanmathur91"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/nafees87n"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56021937?v=4?s=100" alt="Nafees Nehar" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/nafees87n"&gt;&lt;strong&gt;Nafees Nehar&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=nafees87n"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/nsrCodes"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57226514?v=4?s=100" alt="Navdeep Singh Rathore" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/nsrCodes"&gt;&lt;strong&gt;Navdeep Singh Rathore&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=nsrCodes"&gt;💻&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://requestly.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3108399?v=4?s=100" alt="Sachin Jain" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://requestly.com"&gt;&lt;strong&gt;Sachin Jain&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=sachinjain024"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/ashishsangle707"&gt;&lt;img src="https://avatars.githubusercontent.com/u/124448580?v=4?s=100" alt="ashishsangle707" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/ashishsangle707"&gt;&lt;strong&gt;ashishsangle707&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#projectManagement-ashishsangle707"&gt;📆&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/echo-sg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56088056?v=4?s=100" alt="Shrey Gupta" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/echo-sg"&gt;&lt;strong&gt;Shrey Gupta&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=echo-sg"&gt;💻&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/requestly/requestly/master/#projectManagement-echo-sg"&gt;📆&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/ncharanaraj"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43924299?v=4?s=100" alt="Charanaraj N" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/ncharanaraj"&gt;&lt;strong&gt;Charanaraj N&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=ncharanaraj"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://github.com/Muhammad-Daniyal-Jawad1"&gt;&lt;img src="https://avatars.githubusercontent.com/u/130592856?v=4?s=100" alt="Muhammad-Daniyal-Jawad1" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/Muhammad-Daniyal-Jawad1"&gt;&lt;strong&gt;Muhammad-Daniyal-Jawad1&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=Muhammad-Daniyal-Jawad1"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td style="text-align:center;vertical-align:top;"&gt;&lt;a href="https://piyush-web-app.web.app/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43876655?v=4?s=100" alt="PIYUSH NEGI" width="100px;" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://piyush-web-app.web.app/"&gt;&lt;strong&gt;PIYUSH NEGI&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/requestly/requestly/commits?author=npiyush97"&gt;💻&lt;/a&gt;&lt;/td&gt;
   &lt;td&gt;&amp;nbsp;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>daytonaio/daytona</title>
      <link>https://github.com/daytonaio/daytona</link>
      <description>&lt;p&gt;Daytona is a Secure and Elastic Infrastructure for Running AI-Generated Code&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://www.daytona.io/docs"&gt;&lt;img src="https://img.shields.io/github/v/release/daytonaio/docs?label=Docs&amp;amp;color=23cc71" alt="Documentation" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/License-AGPL--3-blue" alt="License" /&gt; &lt;a href="https://goreportcard.com/report/github.com/daytonaio/daytona"&gt;&lt;img src="https://goreportcard.com/badge/github.com/daytonaio/daytona" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/daytonaio/daytona/issues"&gt;&lt;img src="https://img.shields.io/github/issues/daytonaio/daytona" alt="Issues - daytona" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/v/release/daytonaio/daytona" alt="GitHub Release" /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-white.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-black.png" /&gt; 
  &lt;img alt="Daytona logo" src="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-black.png" width="50%" /&gt; 
 &lt;/picture&gt; 
&lt;/div&gt; 
&lt;h3 align="center"&gt; Run AI Code. &lt;br /&gt; Secure and Elastic Infrastructure for Running Your AI-Generated Code. &lt;/h3&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.daytona.io/docs"&gt; Documentation &lt;/a&gt;· &lt;a href="https://github.com/daytonaio/daytona/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.md&amp;amp;title=%F0%9F%90%9B+Bug+Report%3A+"&gt; Report Bug &lt;/a&gt;· &lt;a href="https://github.com/daytonaio/daytona/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.md&amp;amp;title=%F0%9F%9A%80+Feature%3A+"&gt; Request Feature &lt;/a&gt;· &lt;a href="https://go.daytona.io/slack"&gt; Join our Slack &lt;/a&gt;· &lt;a href="https://x.com/daytonaio"&gt; Connect on X &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.producthunt.com/posts/daytona-2?embed=true&amp;amp;utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-daytona-2" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=957617&amp;amp;theme=neutral&amp;amp;period=daily&amp;amp;t=1746176740150" alt="Daytona  - Secure and elastic infra for running your AI-generated code. | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/daytona-2?embed=true&amp;amp;utm_source=badge-top-post-topic-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-daytona-2" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=957617&amp;amp;theme=neutral&amp;amp;period=monthly&amp;amp;topic_id=237&amp;amp;t=1746176740150" alt="Daytona  - Secure and elastic infra for running your AI-generated code. | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Python SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install daytona
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;TypeScript SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install @daytonaio/sdk
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Lightning-Fast Infrastructure&lt;/strong&gt;: Sub-90ms Sandbox creation from code to execution.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Separated &amp;amp; Isolated Runtime&lt;/strong&gt;: Execute AI-generated code with zero risk to your infrastructure.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Massive Parallelization for Concurrent AI Workflows&lt;/strong&gt;: Fork Sandbox filesystem and memory state (Coming soon!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Programmatic Control&lt;/strong&gt;: File, Git, LSP, and Execute API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unlimited Persistence&lt;/strong&gt;: Your Sandboxes can live forever&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OCI/Docker Compatibility&lt;/strong&gt;: Use any OCI/Docker image to create a Sandbox&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create an account at &lt;a href="https://app.daytona.io"&gt;https://app.daytona.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Generate a &lt;a href="https://app.daytona.io/dashboard/keys"&gt;new API key&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow the &lt;a href="https://www.daytona.io/docs/getting-started/"&gt;Getting Started docs&lt;/a&gt; to start using the Daytona SDK&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Creating your first Sandbox&lt;/h2&gt; 
&lt;h3&gt;Python SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-py"&gt;from daytona import Daytona, DaytonaConfig, CreateSandboxBaseParams

# Initialize the Daytona client
daytona = Daytona(DaytonaConfig(api_key="YOUR_API_KEY"))

# Create the Sandbox instance
sandbox = daytona.create(CreateSandboxBaseParams(language="python"))

# Run code securely inside the Sandbox
response = sandbox.process.code_run('print("Sum of 3 and 4 is " + str(3 + 4))')
if response.exit_code != 0:
    print(f"Error running code: {response.exit_code} {response.result}")
else:
    print(response.result)

# Clean up the Sandbox
daytona.delete(sandbox)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Typescript SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { Daytona } from '@daytonaio/sdk'

async function main() {
  // Initialize the Daytona client
  const daytona = new Daytona({
    apiKey: 'YOUR_API_KEY',
  })

  let sandbox
  try {
    // Create the Sandbox instance
    sandbox = await daytona.create({
      language: 'typescript',
    })
    // Run code securely inside the Sandbox
    const response = await sandbox.process.codeRun('console.log("Sum of 3 and 4 is " + (3 + 4))')
    if (response.exitCode !== 0) {
      console.error('Error running code:', response.exitCode, response.result)
    } else {
      console.log(response.result)
    }
  } catch (error) {
    console.error('Sandbox flow error:', error)
  } finally {
    if (sandbox) await daytona.delete(sandbox)
  }
}

main().catch(console.error)
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Daytona is Open Source under the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/LICENSE"&gt;GNU AFFERO GENERAL PUBLIC LICENSE&lt;/a&gt;, and is the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/NOTICE"&gt;copyright of its contributors&lt;/a&gt;. If you would like to contribute to the software, read the Developer Certificate of Origin Version 1.1 (&lt;a href="https://developercertificate.org/"&gt;https://developercertificate.org/&lt;/a&gt;). Afterwards, navigate to the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to get started.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coze-dev/coze-studio</title>
      <link>https://github.com/coze-dev/coze-studio</link>
      <description>&lt;p&gt;An AI agent development platform with all-in-one visual tools, simplifying agent creation, debugging, and deployment like never before. Coze your way to AI Agent creation.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://p9-arcosite.byteimg.com/tos-cn-i-goo7wpa0wc/943f576df3424fa98580c2ad18946719~tplv-goo7wpa0wc-image.image" alt="Image" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt;
 &lt;p&gt; &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#what-is-coze-studio"&gt;Coze Studio&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#feature-list"&gt;Feature list&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#quickstart"&gt;Quickstart&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/#developer-guide"&gt;Developer Guide&lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;img alt="License" src="https://img.shields.io/badge/license-apache2.0-blue.svg?sanitize=true" /&gt; &lt;img alt="Go Version" src="https://img.shields.io/badge/go-%3E%3D%201.23.4-blue" /&gt; &lt;/p&gt; 
 &lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/coze-dev/coze-studio/main/README.zh_CN.md"&gt;中文&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;What is Coze Studio?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.coze.cn/home"&gt;Coze Studio&lt;/a&gt; is an all-in-one AI agent development tool. Providing the latest large models and tools, various development modes and frameworks, Coze Studio offers the most convenient AI agent development environment, from development to deployment.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Provides all core technologies needed for AI agent development&lt;/strong&gt;: prompt, RAG, plugin, workflow, enabling developers to focus on creating the core value of AI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ready to use for professional AI agent development at the lowest cost&lt;/strong&gt;: Coze Studio provides developers with complete app templates and build frameworks, allowing you to quickly construct various AI agents and turn creative ideas into reality.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Coze Studio, derived from the "Coze Development Platform" which has served tens of thousands of enterprises and millions of developers, we have made its core engine completely open. It is a one-stop visual development tool for AI Agents that makes creating, debugging, and deploying AI Agents unprecedentedly simple. Through Coze Studio's visual design and build tools, developers can quickly create and debug agents, apps, and workflows using no-code or low-code approaches, enabling powerful AI app development and more customized business logic. It's an ideal choice for building low-code AI products tailored . Coze Studio aims to lower the threshold for AI agent development and application, encouraging community co-construction and sharing for deeper exploration and practice in the AI field.&lt;/p&gt; 
&lt;p&gt;The backend of Coze Studio is developed using Golang, the frontend uses React + TypeScript, and the overall architecture is based on microservices and built following domain-driven design (DDD) principles. Provide developers with a high-performance, highly scalable, and easy-to-customize underlying framework to help them address complex business needs.&lt;/p&gt; 
&lt;h2&gt;Feature list&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Module&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Feature&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Model service&lt;/td&gt; 
   &lt;td&gt;Manage the model list, integrate services such as OpenAI and Volcengine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build agent&lt;/td&gt; 
   &lt;td&gt;* Build, publish, and manage agent &lt;br /&gt; * Support configuring workflows, knowledge bases, and other resources&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build apps&lt;/td&gt; 
   &lt;td&gt;* Create and publish apps &lt;br /&gt; * Build business logic through workflows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Build a workflow&lt;/td&gt; 
   &lt;td&gt;Create, modify, publish, and delete workflows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Develop resources&lt;/td&gt; 
   &lt;td&gt;Support creating and managing the following resources: &lt;br /&gt; * Plugins &lt;br /&gt; * Knowledge bases &lt;br /&gt; * Databases &lt;br /&gt; * Prompts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;API and SDK&lt;/td&gt; 
   &lt;td&gt;* Create conversations, initiate chats, and other OpenAPI &lt;br /&gt; * Integrate agents or apps into your own app through Chat SDK&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;Learn how to obtain and deploy the open-source version of Coze Studio, quickly build projects, and experience Coze Studio's open-source version.&lt;/p&gt; 
&lt;p&gt;Environment requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Before installing Coze Studio, please ensure that your machine meets the following minimum system requirements: 2 Core、4 GB&lt;/li&gt; 
 &lt;li&gt;Pre-install Docker and Docker Compose, and start the Docker service.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Deployment steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Retrieve the source code.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-Bash"&gt;# Clone code
git clone https://github.com/coze-dev/coze-studio.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Configure the model.&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;Copy the template files of the doubao-seed-1.6 model from the template directory and paste them into the configuration file directory.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-Bash"&gt;cd coze-studio
# Copy model configuration template
cp backend/conf/model/template/model_template_ark_doubao-seed-1.6.yaml backend/conf/model/ark_doubao-seed-1.6.yaml
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Modify the template file in the configuration file directory.&lt;/p&gt; 
    &lt;ol&gt; 
     &lt;li&gt;Enter the directory &lt;code&gt;backend/conf/model&lt;/code&gt;. Open the file &lt;code&gt;ark_doubao-seed-1.6.yaml&lt;/code&gt;.&lt;/li&gt; 
     &lt;li&gt;Set the fields &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;meta.conn_config.api_key&lt;/code&gt;, &lt;code&gt;meta.conn_config.model&lt;/code&gt;, and save the file. 
      &lt;ul&gt; 
       &lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;: The model ID in Coze Studio, defined by the developer, must be a non-zero integer and globally unique. Agents or workflows call models based on model IDs. For models that have already been launched, do not modify their IDs; otherwise, it may result in model call failures.&lt;/li&gt; 
       &lt;li&gt;&lt;strong&gt;meta.conn_config.api_key&lt;/strong&gt;: The API Key for the model service. In this example, it is the API Key for Ark API Key. For more information, see &lt;a href="https://www.volcengine.com/docs/82379/1541594"&gt;Get Volcengine Ark API Key&lt;/a&gt; or &lt;a href="https://docs.byteplus.com/en/docs/ModelArk/1361424?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=coze_open_source"&gt;Get BytePlus ModelArk API Key&lt;/a&gt;.&lt;/li&gt; 
       &lt;li&gt;&lt;strong&gt;meta.conn_config.model&lt;/strong&gt;: The Model name for the model service. In this example, it refers to the Model ID or Endpoint ID of Ark. For more information, see &lt;a href="https://www.volcengine.com/docs/82379/1513689"&gt;Get Volcengine Ark Model ID&lt;/a&gt; / &lt;a href="https://www.volcengine.com/docs/82379/1099522"&gt;Get Volcengine Ark Endpoint ID&lt;/a&gt; or &lt;a href="https://docs.byteplus.com/en/docs/ModelArk/model_id?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=coze_open_source"&gt;Get BytePlus ModelArk Model ID&lt;/a&gt; / &lt;a href="https://docs.byteplus.com/en/docs/ModelArk/1099522?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=coze_open_source"&gt;Get BytePlus ModelArk Endpoint ID&lt;/a&gt;.&lt;/li&gt; 
      &lt;/ul&gt; 
      &lt;blockquote&gt; 
       &lt;p&gt;For users in China, you may use Volcengine Ark; for users outside China, you may use BytePlus ModelArk instead.&lt;/p&gt; 
      &lt;/blockquote&gt; &lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Deploy and start the service. When deploying and starting Coze Studio for the first time, it may take a while to retrieve images and build local images. Please be patient. During deployment, you will see the following log information. If you see the message "Container coze-server Started," it means the Coze Studio service has started successfully.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-Bash"&gt;# Start the service
cd docker
cp .env.example .env
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For common startup failure issues, &lt;strong&gt;please refer to the &lt;a href="https://github.com/coze-dev/coze-studio/wiki/9.-FAQ"&gt;FAQ&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After starting the service, you can open Coze Studio by accessing &lt;code&gt;http://localhost:8888/&lt;/code&gt; through your browser.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] If you want to deploy Coze Studio in a public network environment, it is recommended to assess security risks before you begin, and take corresponding protection measures. Possible security risks include account registration functions, Python execution environments in workflow code nodes, Coze Server listening address configurations, SSRF (Server - Side Request Forgery), and some horizontal privilege escalations in APIs. For more details, refer to &lt;a href="https://github.com/coze-dev/coze-studio/wiki/2.-Quickstart#security-risks-in-public-networks"&gt;Quickstart&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Developer Guide&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Project Configuration&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/3.-Model-configuration"&gt;Model Configuration&lt;/a&gt;: Before deploying the open-source version of Coze Studio, you must configure the model service. Otherwise, you cannot select models when building agents, workflows, and apps.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/4.-Plugin-Configuration"&gt;Plugin Configuration&lt;/a&gt;: To use official plugins from the plugin store, you must first configure the plugins and add the authentication keys for third-party services.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/5.-Basic-component-configuration"&gt;Basic Component Configuration&lt;/a&gt;: Learn how to configure components such as image uploaders to use functions like image uploading in Coze Studio .&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/6.-API-Reference"&gt;API Reference&lt;/a&gt;: The Coze Studio Community Edition API and Chat SDK are authenticated using Personal Access Token, providing APIs for conversations and workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards"&gt;Development Guidelines&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards#project-architecture"&gt;Project Architecture&lt;/a&gt;: Learn about the technical architecture and core components of the open-source version of Coze Studio.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards#code-development-and-testing"&gt;Code Development and Testing&lt;/a&gt;: Learn how to perform secondary development and testing based on the open-source version of Coze Studio.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/coze-dev/coze-studio/wiki/7.-Development-Standards#troubleshooting"&gt;Troubleshooting&lt;/a&gt;: Learn how to view container states and system logs.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using the open-source version of Coze Studio&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Regarding how to use Coze Studio, refer to the &lt;a href="https://www.coze.cn/open/docs"&gt;Coze Development Platform Official Documentation Center&lt;/a&gt; for more information. Please note that certain features, such as tone customization, are limited to the commercial version. Differences between the open-source and commercial versions can be found in the &lt;strong&gt;Feature List&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/quickstart"&gt;Quick Start&lt;/a&gt;: Quickly build an AI assistant agent with Coze Studio.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/agent_overview"&gt;Developing Agents&lt;/a&gt;: Learn how to create, build, publish, and manage agents. You can use functions such as knowledge, plugins, etc., to resolve model hallucination and lack of expertise in professional fields. In addition, Coze Studio provides rich memory features that enable agents to generate more accurate responses based on a personal user's historical conversations during interactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/workflow"&gt;Develop workflows&lt;/a&gt;: A workflow is a set of executable instructions used to implement business logic or complete specific tasks. It structures data flow and task processing for apps or agents. Coze Studio provides a visual canvas where you can quickly build workflows by dragging and dropping nodes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/guides/plugin"&gt;Resources such as plugins&lt;/a&gt;: In Coze Studio, workflows, plugins, databases, knowledge bases, and variables are collectively referred to as resources.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API &amp;amp; SDK&lt;/strong&gt;: Coze Studio supports &lt;a href="https://github.com/coze-dev/coze-studio/wiki/6.-API-Reference"&gt;API related to chat and workflows&lt;/a&gt;, and you can also integrate agents or apps with local business systems through &lt;a href="https://www.coze.cn/open/docs/developer_guides/web_sdk_overview"&gt;Chat SDK&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coze.cn/open/docs/tutorial/chat_sdk_web_online_customer_service"&gt;Tutorials for practice&lt;/a&gt;: Learn how to use Coze Studio to implement various AI scenarios, such as building web-based online customer service using Chat SDK.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project uses the Apache 2.0 license. For details, please refer to the &lt;a href="https://github.com/coze-dev/coze-studio/raw/main/LICENSE-APACHE"&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Community contributions&lt;/h2&gt; 
&lt;p&gt;We welcome community contributions. For contribution guidelines, please refer to &lt;a href="https://github.com/coze-dev/coze-studio/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; and &lt;a href="https://github.com/coze-dev/coze-studio/raw/main/CODE_OF_CONDUCT.md"&gt;Code of conduct&lt;/a&gt;. We look forward to your contributions!&lt;/p&gt; 
&lt;h2&gt;Security and privacy&lt;/h2&gt; 
&lt;p&gt;If you discover potential security issues in the project, or believe you may have found a security issue, please notify the ByteDance security team through our &lt;a href="https://security.bytedance.com/src"&gt;security center&lt;/a&gt; or &lt;a href="mailto:sec@bytedance.com"&gt;vulnerability reporting email&lt;/a&gt;. Please &lt;strong&gt;do not&lt;/strong&gt; create public GitHub Issues.&lt;/p&gt; 
&lt;h2&gt;Join Community&lt;/h2&gt; 
&lt;p&gt;We are committed to building an open and friendly developer community. All developers interested in AI Agent development are welcome to join us!&lt;/p&gt; 
&lt;h3&gt;🐛 Issue Reports &amp;amp; Feature Requests&lt;/h3&gt; 
&lt;p&gt;To efficiently track and resolve issues while ensuring transparency and collaboration, we recommend participating through:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: &lt;a href="https://github.com/coze-dev/coze-studio/issues"&gt;Submit bug reports or feature requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pull Requests&lt;/strong&gt;: &lt;a href="https://github.com/coze-dev/coze-studio/pulls"&gt;Contribute code or documentation improvements&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💬 Technical Discussion &amp;amp; Communication&lt;/h3&gt; 
&lt;p&gt;Join our technical discussion groups to share experiences with other developers and stay updated with the latest project developments:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Feishu Group Chat&lt;/strong&gt;&lt;br /&gt; Scan the QR code below with Feishu mobile app to join:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://p9-arcosite.byteimg.com/tos-cn-i-goo7wpa0wc/0a49081e8f3743e8bf3dcdded4bb571a~tplv-goo7wpa0wc-image.image" alt="Image" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Discord Server&lt;/strong&gt;&lt;br /&gt; Click to join: &lt;a href="https://discord.gg/sTVN9EVS4B"&gt;Coze Community&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Telegram Group&lt;/strong&gt;&lt;br /&gt; Click to join: Telegram Group &lt;a href="https://t.me/+pP9CkPnomDA0Mjgx"&gt;Coze&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;Thank you to all the developers and community members who have contributed to the Coze Studio project. Special thanks:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/cloudwego/eino"&gt;Eino&lt;/a&gt; framework team - providing powerful support for Coze Studio's agent and workflow runtime engines, model abstractions and implementations, and knowledge base indexing and retrieval&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/bytedance/flowgram.ai"&gt;FlowGram&lt;/a&gt; team - providing a high-quality workflow building engine for Coze Studio's frontend workflow canvas editor&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/cloudwego/hertz"&gt;Hertz&lt;/a&gt; team - Go HTTP framework with high-performance and strong-extensibility for building micro-services&lt;/li&gt; 
 &lt;li&gt;All users who participated in testing and feedback&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>DIYgod/RSSHub</title>
      <link>https://github.com/DIYgod/RSSHub</link>
      <description>&lt;p&gt;🧡 Everything is RSSible&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://docs.rsshub.app/img/logo.png" alt="RSSHub" width="100" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;RSSHub&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🧡 Everything is RSSible&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://rsshub.app"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https://rsshub-analytics.diygod.workers.dev/&amp;amp;query=requests&amp;amp;color=F38020&amp;amp;label=requests&amp;amp;logo=cloudflare&amp;amp;style=flat-square&amp;amp;suffix=/month" alt="" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/diygod/rsshub"&gt;&lt;img src="https://img.shields.io/docker/pulls/diygod/rsshub?label=docker%20pulls&amp;amp;logo=docker&amp;amp;style=flat-square" alt="docker publish" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/rsshub"&gt;&lt;img src="https://img.shields.io/npm/dt/rsshub?label=npm%20downloads&amp;amp;logo=npm&amp;amp;style=flat-square" alt="npm publish" /&gt;&lt;/a&gt; &lt;a href="https://github.com/DIYgod/RSSHub/actions/workflows/test.yml?query=event%3Apush+branch%3Amaster"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/DIYgod/RSSHub/test.yml?branch=master&amp;amp;label=test&amp;amp;logo=github&amp;amp;style=flat-square" alt="test" /&gt;&lt;/a&gt; &lt;a href="https://app.codecov.io/gh/DIYgod/RSSHub/branch/master"&gt;&lt;img src="https://img.shields.io/codecov/c/github/DIYgod/RSSHub.svg?style=flat-square&amp;amp;logo=codecov" alt="Test coverage" /&gt;&lt;/a&gt; &lt;a href="https://github.com/DIYgod/RSSHub"&gt;&lt;img src="https://hitscounter.dev/api/hit?url=https%3A%2F%2Fgithub.com%2FDIYgod%2FRSSHub&amp;amp;label=RSS+lovers&amp;amp;icon=rss-fill&amp;amp;color=%23ff752e" alt="Visitors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/rsshub"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.swo.moe%2Fstats%2Ftelegram%2Frsshub&amp;amp;query=count&amp;amp;color=2CA5E0&amp;amp;label=Telegram%20Group&amp;amp;logo=telegram&amp;amp;cacheSeconds=3600&amp;amp;style=flat-square" alt="Telegram group" /&gt;&lt;/a&gt; &lt;a href="https://t.me/awesomeRSSHub"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fapi.swo.moe%2Fstats%2Ftelegram%2FawesomeRSSHub&amp;amp;query=count&amp;amp;color=2CA5E0&amp;amp;label=Telegram%20Channel&amp;amp;logo=telegram&amp;amp;cacheSeconds=3600&amp;amp;style=flat-square" alt="Telegram channel" /&gt;&lt;/a&gt; &lt;a href="https://x.com/intent/follow?screen_name=_RSSHub"&gt;&lt;img src="https://img.shields.io/badge/any_text-Follow-blue?color=2CA5E0&amp;amp;label=Twitter&amp;amp;logo=X&amp;amp;cacheSeconds=3600&amp;amp;style=flat-square" alt="X (Twitter)" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;RSSHub is the world's largest RSS network, consisting of over 5,000 global instances.&lt;/p&gt; 
&lt;p&gt;RSSHub delivers millions of contents aggregated from all kinds of sources, our vibrant open source community is ensuring the deliver of RSSHub's new routes, new features and bug fixes.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.rsshub.app"&gt;Documentation&lt;/a&gt; | &lt;a href="https://t.me/rsshub"&gt;Telegram Group&lt;/a&gt; | &lt;a href="https://t.me/awesomeRSSHub"&gt;Telegram Channel&lt;/a&gt; | &lt;a href="https://x.com/intent/follow?screen_name=_RSSHub"&gt;X (Twitter)&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DIYgod/RSSHub-Radar"&gt;RSSHub Radar&lt;/a&gt; | A browser extension that can help you quickly discover and subscribe to the RSS and RSSHub of current websites.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Cay-Zhang/RSSBud"&gt;RSSBud&lt;/a&gt; | RSSHub Radar for iOS platform, designed specifically for mobile ecosystem optimization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LeetaoGoooo/RSSAid"&gt;RSSAid&lt;/a&gt; | RSSHub Radar for Android platform built with Flutter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Fatpandac/DocSearch"&gt;DocSearch&lt;/a&gt; | Link RSSHub DocSearch into Raycast&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;We welcome all pull requests. Suggestions and feedback are also welcomed &lt;a href="https://github.com/DIYgod/RSSHub/issues"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Refer to &lt;a href="https://docs.rsshub.app/joinus/"&gt;Quick Start&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Refer to &lt;a href="https://docs.rsshub.app/deploy/"&gt;Deployment&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Special Thanks&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/DIYgod/RSSHub/graphs/contributors"&gt;&lt;img src="https://opencollective.com/RSSHub/contributors.svg?width=890" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Logo designer &lt;a href="https://dribbble.com/sheldonrrr"&gt;sheldonrrr&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/DIYgod/sponsors"&gt;&lt;img src="https://raw.githubusercontent.com/DIYgod/sponsors/main/sponsors.simple.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://www.cloudflare.com" target="_blank"&gt;&lt;img height="50px" src="https://i.imgur.com/7Ph27Fq.png" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://www.netlify.com" target="_blank"&gt;&lt;img height="40px" src="https://i.imgur.com/cU01915.png" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="https://1password.com" target="_blank"&gt;&lt;img height="40px" src="https://i.imgur.com/a2XjflO.png" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;RSSHub&lt;/strong&gt; © &lt;a href="https://github.com/DIYgod"&gt;DIYgod&lt;/a&gt;, Released under the &lt;a href="https://raw.githubusercontent.com/DIYgod/RSSHub/master/LICENSE"&gt;MIT&lt;/a&gt; License.&lt;br /&gt; Authored and maintained by DIYgod with help from contributors (&lt;a href="https://github.com/DIYgod/RSSHub/contributors"&gt;list&lt;/a&gt;).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Blog &lt;a href="https://diygod.cc"&gt;@DIYgod&lt;/a&gt; · GitHub &lt;a href="https://github.com/DIYgod"&gt;@DIYgod&lt;/a&gt; · X (Twitter) &lt;a href="https://x.com/DIYgod"&gt;@DIYgod&lt;/a&gt; · Telegram Channel &lt;a href="https://t.me/awesomeDIYgod"&gt;@awesomeDIYgod&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>supermemoryai/supermemory</title>
      <link>https://github.com/supermemoryai/supermemory</link>
      <description>&lt;p&gt;Memory engine and app that is extremely fast, scalable. The Memory API for the AI era.&lt;/p&gt;&lt;hr&gt;&lt;div align="center" style="padding-bottom:20px;padding-top:20px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/logo.svg?sanitize=true" alt="supermemory Logo" width="400" /&gt; 
&lt;/div&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/landing-page.jpeg" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Core Functionality&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#add-memory"&gt;Add Memories from Any Content&lt;/a&gt;&lt;/strong&gt;: Easily add memories from URLs, PDFs, and plain text—just paste, upload, or link.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#chat-memories"&gt;Chat with Your Memories&lt;/a&gt;&lt;/strong&gt;: Converse with your stored content using natural language chat.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#mcp-integration"&gt;Supermemory MCP Integration&lt;/a&gt;&lt;/strong&gt;: Seamlessly connect with all major AI tools (Claude, Cursor, etc.) via Supermemory MCP.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How do i use this?&lt;/h2&gt; 
&lt;p&gt;Go to &lt;a href="https://app.supermemory.ai"&gt;app.supermemory.ai&lt;/a&gt; and sign into with your account&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a id="add-memory"&gt;&lt;/a&gt;Start Adding Memory with your choice of format (Note, Link, File)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/add-memory.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;You can also Connect to your favourite services (Notion, Google Drive, OneDrive)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/add-connections.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;a id="chat-memories"&gt;&lt;/a&gt;Once Memories are added, you can chat with Supermemory by clicking on "Open Chat" and retrieve info from your saved memories&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/chat.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;&lt;a id="mcp-integration"&gt;&lt;/a&gt;Add MCP to your AI Tools (by clicking on "Connect to your AI" and select the AI tool you are trying to integrate)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/mcp.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Have questions or feedback? We're here to help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Email: &lt;a href="mailto:dhravya@supermemory.com"&gt;dhravya@supermemory.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://docs.supermemory.ai"&gt;docs.supermemory.ai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from developers of all skill levels! Whether you're fixing bugs, adding features, or improving documentation, your help makes supermemory better for everyone.&lt;/p&gt; 
&lt;h3&gt;Quick Start for Contributors&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork and clone&lt;/strong&gt; the repository&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt; with &lt;code&gt;bun install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Set up your environment&lt;/strong&gt; by copying &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env.local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start developing&lt;/strong&gt; with &lt;code&gt;bun run dev&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For detailed guidelines, development setup, coding standards, and the complete contribution workflow, please see our &lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/CONTRIBUTING.md"&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Ways to Contribute&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 &lt;strong&gt;Bug fixes&lt;/strong&gt; - Help us squash those pesky issues&lt;/li&gt; 
 &lt;li&gt;✨ &lt;strong&gt;New features&lt;/strong&gt; - Add functionality that users will love&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;strong&gt;UI/UX improvements&lt;/strong&gt; - Make the interface more intuitive&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Performance optimizations&lt;/strong&gt; - Help us make supermemory faster&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our &lt;a href="https://github.com/supermemoryai/supermemory/issues"&gt;Issues&lt;/a&gt; page for &lt;code&gt;good first issue&lt;/code&gt; and &lt;code&gt;help wanted&lt;/code&gt; labels to get started!&lt;/p&gt; 
&lt;h2&gt;Updates &amp;amp; Roadmap&lt;/h2&gt; 
&lt;p&gt;Stay up to date with the latest improvements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.supermemory.ai/changelog/overview"&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/supermemoryai"&gt;X&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>xyflow/xyflow</title>
      <link>https://github.com/xyflow/xyflow</link>
      <description>&lt;p&gt;React Flow | Svelte Flow - Powerful open source libraries for building node-based UIs with React (https://reactflow.dev) or Svelte (https://svelteflow.dev). Ready out-of-the-box and infinitely customizable.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/2857535/279643999-ffda9f91-6b6d-447d-82be-fcbd6103edb6.svg#gh-light-mode-only" alt="xyflow-header" /&gt; &lt;img src="https://user-images.githubusercontent.com/2857535/279644026-a01c231c-6c6e-4b41-96e0-a85c75c9acee.svg#gh-dark-mode-only" alt="xyflow-header-dark" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;img src="https://img.shields.io/github/license/wbkd/react-flow?color=%23ff0072" alt="GitHub License MIT" /&gt; &lt;img src="https://img.shields.io/npm/dt/reactflow?color=%23FF0072&amp;amp;label=React%20Flow%20downloads" alt="npm downloads" /&gt; &lt;img src="https://img.shields.io/npm/dt/@xyflow/svelte?color=%23FF3E00&amp;amp;label=Svelte%20Flow%20downloads" alt="npm downloads" /&gt;&lt;/p&gt; 
 &lt;p&gt;Powerful open source libraries for building node-based UIs with React or Svelte. Ready out-of-the-box and infinitely customizable.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://reactflow.dev/"&gt;React Flow&lt;/a&gt; · &lt;a href="https://svelteflow.dev/"&gt;Svelte Flow&lt;/a&gt; · &lt;a href="https://reactflow.dev/pro"&gt;React Flow Pro&lt;/a&gt; · &lt;a href="https://discord.gg/Bqt6xrs"&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;The xyflow mono repo&lt;/h2&gt; 
&lt;p&gt;The xyflow repository is the home of four packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;React Flow 12 &lt;code&gt;@xyflow/react&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/packages/react"&gt;packages/react&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;React Flow 11 &lt;code&gt;reactflow&lt;/code&gt; &lt;a href="https://github.com/xyflow/xyflow/tree/v11"&gt;v11 branch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Svelte Flow &lt;code&gt;@xyflow/svelte&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/packages/svelte"&gt;packages/svelte&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shared helper library &lt;code&gt;@xyflow/system&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/packages/system"&gt;packages/system&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Commercial usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Are you using React Flow or Svelte Flow for a personal project?&lt;/strong&gt; Great! No sponsorship needed, you can support us by reporting any bugs you find, sending us screenshots of your projects, and starring us on Github 🌟&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Are you using React Flow or Svelte Flow at your organization and making money from it?&lt;/strong&gt; Awesome! We rely on your support to keep our libraries developed and maintained under an MIT License, just how we like it. For React Flow you can do that on the &lt;a href="https://reactflow.dev/pro"&gt;React Flow Pro website&lt;/a&gt; and for both of our libraries you can do it through &lt;a href="https://github.com/sponsors/xyflow"&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;The best way to get started is to check out the &lt;a href="https://reactflow.dev/learn"&gt;React Flow&lt;/a&gt; or &lt;a href="https://svelteflow.dev/learn"&gt;Svelte Flow&lt;/a&gt; learn section. However if you want to get a sneak peek of how to install and use the libraries you can see it here:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;React Flow&lt;/strong&gt; basic usage&lt;/summary&gt; 
 &lt;h3&gt;Installation&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;npm install @xyflow/react
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Basic usage&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-jsx"&gt;import { useCallback } from 'react';
import {
ReactFlow,
MiniMap,
Controls,
Background,
useNodesState,
useEdgesState,
addEdge,
} from '@xyflow/react';

import '@xyflow/react/dist/style.css';

const initialNodes = [
{ id: '1', position: { x: 0, y: 0 }, data: { label: '1' } },
{ id: '2', position: { x: 0, y: 100 }, data: { label: '2' } },
];

const initialEdges = [{ id: 'e1-2', source: '1', target: '2' }];

function Flow() {
const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);
const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);

const onConnect = useCallback((params) =&amp;gt; setEdges((eds) =&amp;gt; addEdge(params, eds)), [setEdges]);

return (
  &amp;lt;ReactFlow
    nodes={nodes}
    edges={edges}
    onNodesChange={onNodesChange}
    onEdgesChange={onEdgesChange}
    onConnect={onConnect}
  &amp;gt;
    &amp;lt;MiniMap /&amp;gt;
    &amp;lt;Controls /&amp;gt;
    &amp;lt;Background /&amp;gt;
  &amp;lt;/ReactFlow&amp;gt;
);
}

export default Flow;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Svelte Flow&lt;/strong&gt; basic usage&lt;/summary&gt; 
 &lt;h3&gt;Installation&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;npm install @xyflow/svelte
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Basic usage&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-svelte"&gt;&amp;lt;script lang="ts"&amp;gt;
import { writable } from 'svelte/store';
import {
  SvelteFlow,
  Controls,
  Background,
  BackgroundVariant,
  MiniMap,
} from '@xyflow/svelte';

import '@xyflow/svelte/dist/style.css'

const nodes = writable([
  {
    id: '1',
    type: 'input',
    data: { label: 'Input Node' },
    position: { x: 0, y: 0 }
  },
  {
    id: '2',
    type: 'custom',
    data: { label: 'Node' },
    position: { x: 0, y: 150 }
  }
]);

const edges = writable([
  {
    id: '1-2',
    type: 'default',
    source: '1',
    target: '2',
    label: 'Edge Text'
  }
]);
&amp;lt;/script&amp;gt;

&amp;lt;SvelteFlow
{nodes}
{edges}
fitView
on:nodeclick={(event) =&amp;gt; console.log('on node click', event)}
&amp;gt;
&amp;lt;Controls /&amp;gt;
&amp;lt;Background variant={BackgroundVariant.Dots} /&amp;gt;
&amp;lt;MiniMap /&amp;gt;
&amp;lt;/SvelteFlow&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;For releasing packages we are using &lt;a href="https://github.com/changesets/changesets"&gt;changesets&lt;/a&gt; in combination with the &lt;a href="https://github.com/changesets/action"&gt;changeset Github action&lt;/a&gt;. The rough idea is:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;create PRs for new features, updates and fixes (with a changeset if relevant for changelog)&lt;/li&gt; 
 &lt;li&gt;merge into main&lt;/li&gt; 
 &lt;li&gt;changset creates a PR that bumps all packages based on the changesets&lt;/li&gt; 
 &lt;li&gt;merge changeset PR if you want to release to Github and npm&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Built by &lt;a href="https://xyflow.com"&gt;xyflow&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;React Flow and Svelte Flow are maintained by the &lt;a href="https://xyflow.com/about"&gt;xyflow team&lt;/a&gt;. If you need help or want to talk to us about a collaboration, reach out through our&amp;nbsp;&lt;a href="https://xyflow.com/contact"&gt;contact form&lt;/a&gt;&amp;nbsp;or by joining our &lt;a href="https://discord.gg/Bqt6xrs"&gt;Discord Server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;React Flow and Svelte Flow are &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/LICENSE"&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TibixDev/winboat</title>
      <link>https://github.com/TibixDev/winboat</link>
      <description>&lt;p&gt;Run Windows apps on 🐧 Linux with ✨ seamless integration&lt;/p&gt;&lt;hr&gt;&lt;div align="left"&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/winboat_logo.svg?sanitize=true" alt="WinBoat Logo" width="150" /&gt; &lt;/td&gt; 
    &lt;td&gt; &lt;h1 style="color: #7C86FF; margin: 0; font-size: 32px;"&gt;WinBoat&lt;/h1&gt; &lt;p style="color: oklch(90% 0 0); font-size: 14px; margin: 5px 0;"&gt;Windows for Penguins.&lt;br /&gt; Run Windows apps on 🐧 Linux with ✨ seamless integration&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_dash.png" alt="WinBoat Dashboard" width="45%" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_apps.png" alt="WinBoat Apps" width="45%" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_native.png" alt="Native Windows" width="45%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;⚠️ Work in Progress ⚠️&lt;/h2&gt; 
&lt;p&gt;WinBoat is currently in beta, so expect to occasionally run into hiccups and bugs. You should be comfortable with some level of troubleshooting if you decide to try it, however we encourage you to give it a shot anyway.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🎨 Elegant Interface&lt;/strong&gt;: Sleek and intuitive interface that seamlessly integrates Windows into your Linux desktop environment, making it feel like a native experience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📦 Automated Installs&lt;/strong&gt;: Simple installation process through our interface - pick your preferences &amp;amp; specs and let us handle the rest&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 Run Any App&lt;/strong&gt;: If it runs on Windows, it can run on WinBoat. Enjoy the full range of Windows applications as native OS-level windows in your Linux environment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🖥️ Full Windows Desktop&lt;/strong&gt;: Access the complete Windows desktop experience when you need it, or run individual apps seamlessly integrated into your Linux workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📁 Filesystem Integration&lt;/strong&gt;: Your home directory is mounted in Windows, allowing easy file sharing between the two systems without any hassle&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✨ And many more&lt;/strong&gt;: Smartcard passthrough, resource monitoring, and more features being added regularly&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How Does It Work?&lt;/h2&gt; 
&lt;p&gt;WinBoat is an Electron app which allows you to run Windows apps on Linux using a containerized approach. Windows runs as a VM inside a Docker container, we communicate with it using the &lt;a href="https://github.com/TibixDev/winboat/tree/main/guest_server"&gt;WinBoat Guest Server&lt;/a&gt; to retrieve data we need from Windows. For compositing applications as native OS-level windows, we use FreeRDP together with Windows's RemoteApp protocol.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;Before running WinBoat, ensure your system meets the following requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;RAM&lt;/strong&gt;: At least 4 GB of RAM&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt;: At least 2 CPU threads&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: At least 32 GB free space on the drive your selected install folder corresponds to&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Virtualization&lt;/strong&gt;: KVM enabled in BIOS/UEFI 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://duckduckgo.com/?t=h_&amp;amp;q=how+to+enable+virtualization+in+%3Cmotherboard+brand%3E+bios&amp;amp;ia=web"&gt;How to enable virtualization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: Required for containerization 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/engine/install/"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;⚠️ NOTE:&lt;/strong&gt; Docker Desktop is &lt;strong&gt;not&lt;/strong&gt; supported, you will run into issues if you use it&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Compose v2&lt;/strong&gt;: Required for compatibility with docker-compose.yml files 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/compose/install/#plugin-linux-only"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker User Group&lt;/strong&gt;: Add your user to the &lt;code&gt;docker&lt;/code&gt; group 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user"&gt;Setup Instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;FreeRDP&lt;/strong&gt;: Required for remote desktop connection (Please make sure you have &lt;strong&gt;Version 3.x.x&lt;/strong&gt; with sound support included) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/FreeRDP/FreeRDP/wiki/PreBuilds"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[OPTIONAL] &lt;strong&gt;Kernel Modules&lt;/strong&gt;: The &lt;code&gt;iptables&lt;/code&gt; / &lt;code&gt;nftables&lt;/code&gt; and &lt;code&gt;iptable_nat&lt;/code&gt; kernel modules can be loaded for network autodiscovery and better shared filesystem performance, but this is not obligatory in newer versions of WinBoat 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://rentry.org/rmfq2e5e"&gt;Module loading instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Downloading&lt;/h2&gt; 
&lt;p&gt;You can download the latest Linux builds under the &lt;a href="https://github.com/TibixDev/winboat/releases"&gt;Releases&lt;/a&gt; tab. We currently offer four variants:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AppImage:&lt;/strong&gt; A popular &amp;amp; portable app format which should run fine on most distributions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unpacked:&lt;/strong&gt; The raw unpacked files, simply run the executable (&lt;code&gt;linux-unpacked/winboat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;.deb:&lt;/strong&gt; The intended format for Debian based distributions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;.rpm:&lt;/strong&gt; The intended format for Fedora based distributions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Known Issues About Container Runtimes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Podman is &lt;strong&gt;unsupported&lt;/strong&gt; for now&lt;/li&gt; 
 &lt;li&gt;Docker Desktop is &lt;strong&gt;unsupported&lt;/strong&gt; for now&lt;/li&gt; 
 &lt;li&gt;Distros that emulate Docker through a Podman socket are &lt;strong&gt;unsupported&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Any rootless containerization solution is currently &lt;strong&gt;unsupported&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building WinBoat&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;For building you need to have NodeJS and Go installed on your system&lt;/li&gt; 
 &lt;li&gt;Clone the repo (&lt;code&gt;git clone https://github.com/TibixDev/WinBoat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Install the dependencies (&lt;code&gt;npm i&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Build the app and the guest server using &lt;code&gt;npm run build:linux-gs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;You can now find the built app under &lt;code&gt;dist&lt;/code&gt; with an AppImage and an Unpacked variant&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running WinBoat in development mode&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you meet the &lt;a href="https://raw.githubusercontent.com/TibixDev/winboat/main/#prerequisites"&gt;prerequisites&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Additionally, for development you need to have NodeJS and Go installed on your system&lt;/li&gt; 
 &lt;li&gt;Clone the repo (&lt;code&gt;git clone https://github.com/TibixDev/WinBoat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Install the dependencies (&lt;code&gt;npm i&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Build the guest server (&lt;code&gt;npm run build-guest-server&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Run the app (&lt;code&gt;npm run dev&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Whether it's bug fixes, feature improvements, or documentation updates, we appreciate your help making WinBoat better.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;: We maintain a focus on technical contributions only. Pull requests containing political/sexual content, or other sensitive/controversial topics will not be accepted. Let's keep things focused on making great software! 🚀&lt;/p&gt; 
&lt;p&gt;Feel free to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Report bugs and issues&lt;/li&gt; 
 &lt;li&gt;Submit feature requests&lt;/li&gt; 
 &lt;li&gt;Contribute code improvements&lt;/li&gt; 
 &lt;li&gt;Help with documentation&lt;/li&gt; 
 &lt;li&gt;Share feedback and suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our issues page to get started, or feel free to open a new issue if you've found something that needs attention.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;WinBoat is licensed under the &lt;a href="https://github.com/TibixDev/winboat/raw/main/LICENSE"&gt;MIT&lt;/a&gt; license&lt;/p&gt; 
&lt;h2&gt;Inspiration / Alternatives&lt;/h2&gt; 
&lt;p&gt;These past few years some cool projects have surfaced with similar concepts, some of which we've also taken inspirations from.&lt;br /&gt; They're awesome and you should check them out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/winapps-org/winapps"&gt;WinApps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/casualsnek/cassowary"&gt;Cassowary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dockur/windows"&gt;dockur/windows&lt;/a&gt; (🌟 Also used in WinBoat)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Socials &amp;amp; Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.winboat.app/"&gt;&lt;img src="https://img.shields.io/badge/Website-winboat.app-blue?style=flat&amp;amp;logo=googlechrome&amp;amp;logoColor=white" alt="Website" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/winboat_app"&gt;&lt;img src="https://img.shields.io/badge/Twitter-@winboat__app-1DA1F2?style=flat&amp;amp;logo=x&amp;amp;logoColor=white" alt="Twitter" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fosstodon.org/@winboat"&gt;&lt;img src="https://img.shields.io/badge/Mastodon-@winboat-6364FF?style=flat&amp;amp;logo=mastodon&amp;amp;logoColor=white" alt="Mastodon" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://bsky.app/profile/winboat.app"&gt;&lt;img src="https://img.shields.io/badge/Bluesky-winboat.app-00A8E8?style=flat&amp;amp;logo=bluesky&amp;amp;logoColor=white" alt="Bluesky" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://discord.gg/MEwmpWm4tN"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join_Community-5865F2?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="mailto:staff@winboat.app"&gt;&lt;img src="https://img.shields.io/badge/Email-staff@winboat.app-D14836?style=flat&amp;amp;logo=gmail&amp;amp;logoColor=white" alt="Email" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://deepwiki.com/TibixDev/winboat"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://www.star-history.com/#tibixdev/winboat&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>remix-run/remix</title>
      <link>https://github.com/remix-run/remix</link>
      <description>&lt;p&gt;Build Better Websites. Create modern, resilient user experiences with web fundamentals.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Remix 3!&lt;/h1&gt; 
&lt;p&gt;This is the source repository for Remix 3. It is under active development.&lt;/p&gt; 
&lt;p&gt;We published &lt;a href="https://remix.run/blog/wake-up-remix"&gt;a blog post&lt;/a&gt; earlier this year with some of our thoughts around Remix 3. It explains our philosophy for web development and why we think the time is right for something new. When working on Remix 3, we follow these principles:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Model-First Development&lt;/strong&gt;. AI fundamentally shifts the human-computer interaction model for both user experience and developer workflows. Optimize the source code, documentation, tooling, and abstractions for LLMs. Additionally, develop abstractions for applications to use models in the product itself, not just as a tool to develop it.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Build on Web APIs&lt;/strong&gt;. Sharing abstractions across the stack greatly reduces the amount of context switching, both for humans and machines. Build on the foundation of Web APIs and JavaScript because it is the only full stack ecosystem.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Religiously Runtime&lt;/strong&gt;. Designing for bundlers/compilers/typegen (and any pre-runtime static analysis) leads to poor API design that eventually pollutes the entire system. All packages must be designed with no expectation of static analysis and all tests must run without bundling. Because browsers are involved, &lt;code&gt;--import&lt;/code&gt; loaders for simple transformations like TypeScript and JSX are permissible.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Avoid Dependencies&lt;/strong&gt;. Dependencies lock you into somebody else's roadmap. Choose them wisely, wrap them completely, and expect to replace most of them with our own package eventually. The goal is zero.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Demand Composition&lt;/strong&gt;. Abstractions should be single-purpose and replaceable. A composable abstraction is easy to add and remove from an existing program. Every package must be useful and documented independent of any other context. New features should first be attempted as a new package. If impossible, attempt to break up the existing package to make it more composable. However, tightly coupled modules that almost always change together in both directions should be moved to the same package.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Distribute Cohesively&lt;/strong&gt;. Extremely composable ecosystems are difficult to learn and use. Remix will be distributed as a single &lt;code&gt;remix&lt;/code&gt; package for both distribution and documentation.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;p&gt;Although we recommend the &lt;code&gt;remix&lt;/code&gt; package for ease of use, all packages that make up Remix should be usable standalone as well. This forces us to consider package boundaries and helps us define public interfaces that are portable and interopable.&lt;/p&gt; 
&lt;p&gt;Each package in Remix:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Has a &lt;a href="https://en.wikipedia.org/wiki/Single-responsibility_principle"&gt;single responsibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Prioritizes web standards to ensure maximum interoperability and portability across JavaScript runtimes&lt;/li&gt; 
 &lt;li&gt;Augments standards unobtrusively where they are missing or incomplete, minimizing incompatibility risks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This means Remix code is &lt;strong&gt;portable by default&lt;/strong&gt;. Remix packages work seamlessly across &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt;, &lt;a href="https://bun.sh/"&gt;Bun&lt;/a&gt;, &lt;a href="https://deno.com/"&gt;Deno&lt;/a&gt;, &lt;a href="https://workers.cloudflare.com/"&gt;Cloudflare Workers&lt;/a&gt;, and other environments.&lt;/p&gt; 
&lt;p&gt;We leverage server-side web APIs when they are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API"&gt;The Web Streams API&lt;/a&gt; instead of &lt;code&gt;node:stream&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array"&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt; instead of Node.js &lt;code&gt;Buffer&lt;/code&gt;s&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API"&gt;The Web Crypto API&lt;/a&gt; instead of &lt;code&gt;node:crypto&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob"&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/File"&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; instead of some bespoke runtime-specific API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The benefit is code that's not just reusable, but &lt;strong&gt;future-proof&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Packages&lt;/h2&gt; 
&lt;p&gt;We currently publish the following packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/fetch-proxy"&gt;fetch-proxy&lt;/a&gt;: Seamlessly construct HTTP proxies with the familiar &lt;code&gt;fetch()&lt;/code&gt; API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/file-storage"&gt;file-storage&lt;/a&gt;: Robust key/value storage tailored for JavaScript &lt;code&gt;File&lt;/code&gt; objects, simplifying file management&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/form-data-parser"&gt;form-data-parser&lt;/a&gt;: An enhanced &lt;code&gt;request.formData()&lt;/code&gt; wrapper enabling efficient, streaming file uploads&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/headers"&gt;headers&lt;/a&gt;: A comprehensive toolkit for effortlessly managing HTTP headers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/lazy-file"&gt;lazy-file&lt;/a&gt;: Optimize performance with lazy-loaded, streaming &lt;code&gt;Blob&lt;/code&gt;s and &lt;code&gt;File&lt;/code&gt;s for JavaScript&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/multipart-parser"&gt;multipart-parser&lt;/a&gt;: High-performance, streaming parser for multipart messages, perfect for handling complex form data&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/node-fetch-server"&gt;node-fetch-server&lt;/a&gt;: Build Node.js HTTP servers using the web-standard &lt;code&gt;fetch()&lt;/code&gt; API, promoting code consistency&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/route-pattern"&gt;route-pattern&lt;/a&gt;: A powerful and flexible URL pattern matching library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/remix-run/remix/main/packages/tar-parser"&gt;tar-parser&lt;/a&gt;: A fast, streaming parser for tar archives, designed for efficient data extraction&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! If you'd like to contribute, please feel free to open an issue or submit a pull request. See &lt;a href="https://github.com/remix-run/remix/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://github.com/remix-run/remix/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>evershopcommerce/evershop</title>
      <link>https://github.com/evershopcommerce/evershop</link>
      <description>&lt;p&gt;🛍️ Typescript E-commerce Platform&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="60" height="68" alt="EverShop Logo" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/logo-green.png" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;EverShop&lt;/h1&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://evershop.io/docs/development/getting-started/introduction"&gt;Documentation&lt;/a&gt; | &lt;a href="https://demo.evershop.io/"&gt;Demo&lt;/a&gt; &lt;/h4&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/evershopcommerce/evershop/actions/workflows/build_test.yml/badge.svg?sanitize=true" alt="Github Action" /&gt; &lt;a href="https://twitter.com/evershopjs"&gt; &lt;img alt="Twitter Follow" src="https://img.shields.io/twitter/follow/evershopjs?style=social" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/GSzt7dt7RM"&gt; &lt;img src="https://img.shields.io/discord/757179260417867879?label=discord" alt="Discord" /&gt; &lt;/a&gt; &lt;a href="https://opensource.org/licenses/GPL-3.0"&gt; &lt;img src="https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true" alt="License" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="EverShop" width="950" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/banner.png" /&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;EverShop is a modern, TypeScript-first eCommerce platform built with GraphQL and React. Designed for developers, it offers essential commerce features in a modular, fully customizable architecture—perfect for building tailored shopping experiences with confidence and speed.&lt;/p&gt; 
&lt;h2&gt;Installation Using Docker&lt;/h2&gt; 
&lt;p&gt;You can get started with EverShop in minutes by using the Docker image. The Docker image is a great way to get started with EverShop without having to worry about installing dependencies or configuring your environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL https://raw.githubusercontent.com/evershopcommerce/evershop/main/docker-compose.yml &amp;gt; docker-compose.yml
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the full installation guide, please refer to our &lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/module/create-your-first-extension"&gt;Extension development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/theme/theme-overview"&gt;Theme development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Explore our demo store.&lt;/p&gt; 
&lt;p align="left"&gt; &lt;a href="https://demo.evershop.io/admin" target="_blank"&gt; &lt;img alt="EverShop Admin Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-back.png" /&gt; &lt;/a&gt; &lt;a href="https://demo.evershop.io/" target="_blank"&gt; &lt;img alt="EverShop Store Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-front.png" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;b&gt;Demo user:&lt;/b&gt; 
&lt;p&gt;Email: &lt;a href="mailto:demo@evershop.io"&gt;demo@evershop.io&lt;/a&gt;&lt;br /&gt; Password: 123456&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you like my work, feel free to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;⭐ this repository. It helps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fevershopcommerce%2Fevershop&amp;amp;text=Awesome%20React%20Ecommerce%20Project&amp;amp;hashtags=react,ecommerce,expressjs,graphql"&gt;&lt;img src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" alt="Tweet" /&gt;&lt;/a&gt; about EverShop. Thank you!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;EverShop is an open-source project. We are committed to a fully transparent development process and appreciate highly any contributions. Whether you are helping us fix bugs, proposing new features, improving our documentation or spreading the word - we would love to have you as part of the EverShop community.&lt;/p&gt; 
&lt;h3&gt;Ask a question about EverShop&lt;/h3&gt; 
&lt;p&gt;You can ask questions, and participate in discussions about EverShop-related topics in the EverShop Discord channel.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/GSzt7dt7RM"&gt;&lt;img src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/discord_banner_github.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create a bug report&lt;/h3&gt; 
&lt;p&gt;If you see an error message or run into an issue, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;create bug report&lt;/a&gt;. This effort is valued and it will help all EverShop users.&lt;/p&gt; 
&lt;h3&gt;Submit a feature request&lt;/h3&gt; 
&lt;p&gt;If you have an idea, or you're missing a capability that would make development easier and more robust, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;Submit feature request&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If a similar feature request already exists, don't forget to leave a "+1". If you add some more information such as your thoughts and vision about the feature, your comments will be embraced warmly :)&lt;/p&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/evershopcommerce/evershop/raw/main/LICENSE"&gt;GPL-3.0 License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EvolutionAPI/evolution-api</title>
      <link>https://github.com/EvolutionAPI/evolution-api</link>
      <description>&lt;p&gt;Evolution API is an open-source WhatsApp integration API&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;Evolution Api&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://hub.docker.com/r/evoapicloud/evolution-api"&gt;&lt;img src="https://img.shields.io/badge/Docker-image-blue" alt="Docker Image" /&gt;&lt;/a&gt; &lt;a href="https://evolution-api.com/whatsapp"&gt;&lt;img src="https://img.shields.io/badge/Group-WhatsApp-%2322BC18" alt="Whatsapp Group" /&gt;&lt;/a&gt; &lt;a href="https://evolution-api.com/discord"&gt;&lt;img src="https://img.shields.io/badge/Discord-Community-blue" alt="Discord Community" /&gt;&lt;/a&gt; &lt;a href="https://evolution-api.com/postman"&gt;&lt;img src="https://img.shields.io/badge/Postman-Collection-orange" alt="Postman Collection" /&gt;&lt;/a&gt; &lt;a href="https://doc.evolution-api.com"&gt;&lt;img src="https://img.shields.io/badge/Documentation-Official-green" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://evolutionapi.canny.io/feature-requests"&gt;&lt;img src="https://img.shields.io/badge/Feature-Requests-purple" alt="Feature Requests" /&gt;&lt;/a&gt; &lt;a href="https://evolutionapi.canny.io/feature-requests"&gt;&lt;img src="https://img.shields.io/badge/Roadmap-Community-blue" alt="Roadmap" /&gt;&lt;/a&gt; &lt;a href="https://evolutionapi.canny.io/changelog"&gt;&lt;img src="https://img.shields.io/badge/Changelog-Updates-green" alt="Changelog" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-Apache--2.0-blue" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://app.picpay.com/user/davidsongomes1998"&gt;&lt;img src="https://img.shields.io/badge/Donation-picpay-green" alt="Support" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/EvolutionAPI"&gt;&lt;img src="https://img.shields.io/badge/Github-sponsor-orange" alt="Sponsors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt;
 &lt;img src="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/public/images/cover.png" /&gt;
&lt;/div&gt; 
&lt;h2&gt;Evolution API&lt;/h2&gt; 
&lt;p&gt;Evolution API began as a WhatsApp controller API based on &lt;a href="https://github.com/code-chat-br/whatsapp-api"&gt;CodeChat&lt;/a&gt;, which in turn implemented the &lt;a href="https://github.com/WhiskeySockets/Baileys"&gt;Baileys&lt;/a&gt; library. While originally focused on WhatsApp, Evolution API has grown into a comprehensive platform supporting multiple messaging services and integrations. We continue to acknowledge CodeChat for laying the groundwork.&lt;/p&gt; 
&lt;p&gt;Today, Evolution API is not limited to WhatsApp. It integrates with various platforms such as Typebot, Chatwoot, Dify, and OpenAI, offering a broad array of functionalities beyond messaging. Evolution API supports both the Baileys-based WhatsApp API and the official WhatsApp Business API, with upcoming support for Instagram and Messenger.&lt;/p&gt; 
&lt;h2&gt;Looking for a Lightweight Version?&lt;/h2&gt; 
&lt;p&gt;For those who need a more streamlined and performance-optimized version, check out &lt;a href="https://github.com/EvolutionAPI/evolution-api-lite"&gt;Evolution API Lite&lt;/a&gt;. It's designed specifically for microservices, focusing solely on connectivity without integrations or audio conversion features. Ideal for environments that prioritize simplicity and efficiency.&lt;/p&gt; 
&lt;h2&gt;Types of Connections&lt;/h2&gt; 
&lt;p&gt;Evolution API supports multiple types of connections to WhatsApp, enabling flexible and powerful integration options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;WhatsApp API - Baileys&lt;/em&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;A free API based on WhatsApp Web, leveraging the &lt;a href="https://github.com/WhiskeySockets/Baileys"&gt;Baileys library&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;This connection type allows control over WhatsApp Web functionalities through a RESTful API, suitable for multi-service chats, service bots, and other WhatsApp-integrated systems.&lt;/li&gt; 
   &lt;li&gt;Note: This method relies on the web version of WhatsApp and may have limitations compared to official APIs.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;WhatsApp Cloud API&lt;/em&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;The official API provided by Meta (formerly Facebook).&lt;/li&gt; 
   &lt;li&gt;This connection type offers a robust and reliable solution designed for businesses needing higher volumes of messaging and better integration support.&lt;/li&gt; 
   &lt;li&gt;The Cloud API supports features such as end-to-end encryption, advanced analytics, and more comprehensive customer service tools.&lt;/li&gt; 
   &lt;li&gt;To use this API, you must comply with Meta's policies and potentially pay for usage based on message volume and other factors.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;p&gt;Evolution API supports various integrations to enhance its functionality. Below is a list of available integrations and their uses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://typebot.io/"&gt;Typebot&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Build conversational bots using Typebot, integrated directly into Evolution with trigger management.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.chatwoot.com/"&gt;Chatwoot&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Direct integration with Chatwoot for handling customer service for your business.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.rabbitmq.com/"&gt;RabbitMQ&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via RabbitMQ.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://kafka.apache.org/"&gt;Apache Kafka&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via Apache Kafka for real-time event streaming and processing.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://aws.amazon.com/pt/sqs/"&gt;Amazon SQS&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via Amazon SQS.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://socket.io/"&gt;Socket.io&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via WebSocket.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://dify.ai/"&gt;Dify&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Integrate your Evolution API directly with Dify AI for seamless trigger management and multiple agents.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://openai.com/"&gt;OpenAI&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Integrate your Evolution API with OpenAI for AI capabilities, including audio-to-text conversion, available across all Evolution integrations.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Amazon S3 / Minio:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Store media files received in &lt;a href="https://aws.amazon.com/pt/s3/"&gt;Amazon S3&lt;/a&gt; or &lt;a href="https://min.io/"&gt;Minio&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community &amp;amp; Feedback&lt;/h2&gt; 
&lt;p&gt;We value community input and feedback to continuously improve Evolution API:&lt;/p&gt; 
&lt;h3&gt;🚀 Feature Requests &amp;amp; Roadmap&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolutionapi.canny.io/feature-requests"&gt;Feature Requests&lt;/a&gt;&lt;/strong&gt;: Submit new feature ideas and vote on community proposals&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolutionapi.canny.io/feature-requests"&gt;Roadmap&lt;/a&gt;&lt;/strong&gt;: View planned features and development progress&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolutionapi.canny.io/changelog"&gt;Changelog&lt;/a&gt;&lt;/strong&gt;: Stay updated with the latest releases and improvements&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💬 Community Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolution-api.com/whatsapp"&gt;WhatsApp Group&lt;/a&gt;&lt;/strong&gt;: Join our community for support and discussions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://evolution-api.com/discord"&gt;Discord Community&lt;/a&gt;&lt;/strong&gt;: Real-time chat with developers and users&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/EvolutionAPI/evolution-api/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/strong&gt;: Report bugs and technical issues&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔒 Security&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/strong&gt;: Guidelines for reporting security vulnerabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security Contact&lt;/strong&gt;: &lt;a href="mailto:contato@evolution-api.com"&gt;contato@evolution-api.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Telemetry Notice&lt;/h2&gt; 
&lt;p&gt;To continuously improve our services, we have implemented telemetry that collects data on the routes used, the most accessed routes, and the version of the API in use. We would like to assure you that no sensitive or personal data is collected during this process. The telemetry helps us identify improvements and provide a better experience for users.&lt;/p&gt; 
&lt;h2&gt;Evolution Support Premium&lt;/h2&gt; 
&lt;p&gt;Join our Evolution Pro community for expert support and a weekly call to answer questions. Visit the link below to learn more and subscribe:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://evolution-api.com/suporte-pro"&gt;Click here to learn more&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Donate to the project.&lt;/h1&gt; 
&lt;h4&gt;Github Sponsors&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/EvolutionAPI"&gt;https://github.com/sponsors/EvolutionAPI&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Content Creator Partners&lt;/h1&gt; 
&lt;p&gt;We are proud to collaborate with the following content creators who have contributed valuable insights and tutorials about Evolution API:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@promovaweb"&gt;Promovaweb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@canalsandeco"&gt;Sandeco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@ComunidadeZDG"&gt;Comunidade ZDG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@FrancisMNO"&gt;Francis MNO&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/@pablocabral"&gt;Pablo Cabral&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@xpopdigital"&gt;XPop Digital&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@costarwagnerdev"&gt;Costar Wagner Dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/@dantetesta_"&gt;Dante Testa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/channel/UCnYGZIE2riiLqaN9sI6riig"&gt;Rubén Salazar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/youtube.com/OrionDesign_Oficial"&gt;OrionDesign&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/youtube.com/@impa365_ofc"&gt;IMPA 365&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/@comunidadehubconnect"&gt;Comunidade Hub Connect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCG7DjUmAxtYyURlOGAIryNQ?view_as=subscriber"&gt;dSantana Automações&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@edisonmartinsmkt"&gt;Edison Martins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@astraonlineweb"&gt;Astra Online&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@sevenautomacoes"&gt;MKT Seven Automações&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/vamosautomatizar"&gt;Vamos automatizar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Evolution API is licensed under the Apache License 2.0, with the following additional conditions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;LOGO and copyright information&lt;/strong&gt;: In the process of using Evolution API's frontend components, you may not remove or modify the LOGO or copyright information in the Evolution API console or applications. This restriction is inapplicable to uses of Evolution API that do not involve its frontend components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Usage Notification Requirement&lt;/strong&gt;: If Evolution API is used as part of any project, including closed-source systems (e.g., proprietary software), the user is required to display a clear notification within the system that Evolution API is being utilized. This notification should be visible to system administrators and accessible from the system's documentation or settings page. Failure to comply with this requirement may result in the necessity for a commercial license, as determined by the producer.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please contact &lt;a href="mailto:contato@evolution-api.com"&gt;contato@evolution-api.com&lt;/a&gt; to inquire about licensing matters.&lt;/p&gt; 
&lt;p&gt;Apart from the specific conditions mentioned above, all other rights and restrictions follow the Apache License 2.0. Detailed information about the Apache License 2.0 can be found at &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;© 2025 Evolution API&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anthropics/claude-code</title>
      <link>https://github.com/anthropics/claude-code</link>
      <description>&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows - all through natural language commands.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Code&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/Node.js-18%2B-brightgreen?style=flat-square" alt="" /&gt; &lt;a href="https://www.npmjs.com/package/@anthropic-ai/claude-code"&gt;&lt;img src="https://img.shields.io/npm/v/@anthropic-ai/claude-code.svg?style=flat-square" alt="npm" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows -- all through natural language commands. Use it in your terminal, IDE, or tag @claude on Github.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Learn more in the &lt;a href="https://docs.anthropic.com/en/docs/claude-code/overview"&gt;official documentation&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/anthropics/claude-code/main/demo.gif" /&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Claude Code:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install -g @anthropic-ai/claude-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Navigate to your project directory and run &lt;code&gt;claude&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;p&gt;This repository includes several Claude Code plugins that extend functionality with custom commands and agents. See the &lt;a href="https://raw.githubusercontent.com/anthropics/claude-code/main/plugins/README.md"&gt;plugins directory&lt;/a&gt; for detailed documentation on available plugins.&lt;/p&gt; 
&lt;h2&gt;Reporting Bugs&lt;/h2&gt; 
&lt;p&gt;We welcome your feedback. Use the &lt;code&gt;/bug&lt;/code&gt; command to report issues directly within Claude Code, or file a &lt;a href="https://github.com/anthropics/claude-code/issues"&gt;GitHub issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Connect on Discord&lt;/h2&gt; 
&lt;p&gt;Join the &lt;a href="https://anthropic.com/discord"&gt;Claude Developers Discord&lt;/a&gt; to connect with other developers using Claude Code. Get help, share feedback, and discuss your projects with the community.&lt;/p&gt; 
&lt;h2&gt;Data collection, usage, and retention&lt;/h2&gt; 
&lt;p&gt;When you use Claude Code, we collect feedback, which includes usage data (such as code acceptance or rejections), associated conversation data, and user feedback submitted via the &lt;code&gt;/bug&lt;/code&gt; command.&lt;/p&gt; 
&lt;h3&gt;How we use your data&lt;/h3&gt; 
&lt;p&gt;See our &lt;a href="https://docs.anthropic.com/en/docs/claude-code/data-usage"&gt;data usage policies&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Privacy safeguards&lt;/h3&gt; 
&lt;p&gt;We have implemented several safeguards to protect your data, including limited retention periods for sensitive information, restricted access to user session data, and clear policies against using feedback for model training.&lt;/p&gt; 
&lt;p&gt;For full details, please review our &lt;a href="https://www.anthropic.com/legal/commercial-terms"&gt;Commercial Terms of Service&lt;/a&gt; and &lt;a href="https://www.anthropic.com/legal/privacy"&gt;Privacy Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>browserbase/stagehand</title>
      <link>https://github.com/browserbase/stagehand</link>
      <description>&lt;p&gt;The AI Browser Automation Framework&lt;/p&gt;&lt;hr&gt;&lt;div id="toc" align="center" style="margin-bottom: 0;"&gt; 
 &lt;ul style="list-style: none; margin: 0; padding: 0;"&gt; 
  &lt;a href="https://stagehand.dev"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="media/dark_logo.png" /&gt; 
    &lt;img alt="Stagehand" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_logo.png" width="200" style="margin-right: 30px;" /&gt; 
   &lt;/picture&gt; &lt;/a&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;strong&gt;The AI Browser Automation Framework&lt;/strong&gt;&lt;br /&gt; &lt;a href="https://docs.stagehand.dev"&gt;Read the Docs&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/browserbase/stagehand/tree/main?tab=MIT-1-ov-file#MIT-1-ov-file"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="media/dark_license.svg" /&gt; 
   &lt;img alt="MIT License" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_license.svg?sanitize=true" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="media/dark_slack.svg" /&gt; 
   &lt;img alt="Slack Community" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/light_slack.svg?sanitize=true" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/12122" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/12122" alt="browserbase%2Fstagehand | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; If you're looking for the Python implementation, you can find it &lt;a href="https://github.com/browserbase/stagehand-python"&gt; here&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center" style="display: flex; align-items: center; justify-content: center; gap: 4px; margin-bottom: 0;"&gt; 
 &lt;b&gt;Vibe code&lt;/b&gt; 
 &lt;span style="font-size: 1.05em;"&gt; Stagehand with &lt;/span&gt; 
 &lt;a href="https://director.ai" style="display: flex; align-items: center;"&gt; &lt;span&gt;Director&lt;/span&gt; &lt;/a&gt; 
 &lt;span&gt; &lt;/span&gt; 
 &lt;picture&gt; 
  &lt;img alt="Director" src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/director_icon.svg?sanitize=true" width="25" /&gt; 
 &lt;/picture&gt; 
&lt;/div&gt; 
&lt;h2&gt;Why Stagehand?&lt;/h2&gt; 
&lt;p&gt;Most existing browser automation tools either require you to write low-level code in a framework like Selenium, Playwright, or Puppeteer, or use high-level agents that can be unpredictable in production. By letting developers choose what to write in code vs. natural language, Stagehand is the natural choice for browser automations in production.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Choose when to write code vs. natural language&lt;/strong&gt;: use AI when you want to navigate unfamiliar pages, and use code (&lt;a href="https://playwright.dev/"&gt;Playwright&lt;/a&gt;) when you know exactly what you want to do.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Preview and cache actions&lt;/strong&gt;: Stagehand lets you preview AI actions before running them, and also helps you easily cache repeatable actions to save time and tokens.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Computer use models with one line of code&lt;/strong&gt;: Stagehand lets you integrate SOTA computer use models from OpenAI and Anthropic into the browser with one line of code.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;Here's how to build a sample browser automation with Stagehand:&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;div style="max-width:300px;"&gt; 
  &lt;img src="https://raw.githubusercontent.com/browserbase/stagehand/main/media/github_demo.gif" alt="See Stagehand in Action" /&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Use Playwright functions on the page object
const page = stagehand.page;
await page.goto("https://github.com/browserbase");

// Use act() to execute individual actions
await page.act("click on the stagehand repo");

// Use Computer Use agents for larger actions
const agent = stagehand.agent({
    provider: "openai",
    model: "computer-use-preview",
});
await agent.execute("Get to the latest PR");

// Use extract() to read data from the page
const { author, title } = await page.extract({
  instruction: "extract the author and title of the PR",
  schema: z.object({
    author: z.string().describe("The username of the PR author"),
    title: z.string().describe("The title of the PR"),
  }),
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://docs.stagehand.dev"&gt;docs.stagehand.dev&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Start with Stagehand with one line of code, or check out our &lt;a href="https://docs.stagehand.dev/first-steps/quickstart"&gt;Quickstart Guide&lt;/a&gt; for more information:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx create-browser-app
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7"&gt; &lt;p&gt;Watch Anirudh demo create-browser-app to create a Stagehand project!&lt;/p&gt; &lt;/a&gt; 
 &lt;a href="https://www.loom.com/share/f5107f86d8c94fa0a8b4b1e89740f7a7"&gt; &lt;img style="max-width:300px;" src="https://cdn.loom.com/sessions/thumbnails/f5107f86d8c94fa0a8b4b1e89740f7a7-ec3f428b6775ceeb-full-play.gif" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h3&gt;Build and Run from Source&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/browserbase/stagehand.git
cd stagehand
pnpm install
pnpm playwright install
pnpm run build
pnpm run example # run the blank script at ./examples/example.ts
pnpm run example 2048 # run the 2048 example at ./examples/2048.ts
pnpm run evals -man # see evaluation suite options
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Stagehand is best when you have an API key for an LLM provider and Browserbase credentials. To add these to your project, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cp .env.example .env
nano .env # Edit the .env file to add API keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; We highly value contributions to Stagehand! For questions or support, please join our &lt;a href="https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg"&gt;Slack community&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;At a high level, we're focused on improving reliability, speed, and cost in that order of priority. If you're interested in contributing, we strongly recommend reaching out to &lt;a href="https://x.com/miguel_gonzf"&gt;Miguel Gonzalez&lt;/a&gt; or &lt;a href="https://x.com/pk_iv"&gt;Paul Klein&lt;/a&gt; in our &lt;a href="https://join.slack.com/t/stagehand-dev/shared_invite/zt-38khc8iv5-T2acb50_0OILUaX7lxeBOg"&gt;Slack community&lt;/a&gt; before starting to ensure that your contribution aligns with our goals.&lt;/p&gt; 
&lt;p&gt;For more information, please see our &lt;a href="https://docs.stagehand.dev/examples/contributing"&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;This project heavily relies on &lt;a href="https://playwright.dev/"&gt;Playwright&lt;/a&gt; as a resilient backbone to automate the web. It also would not be possible without the awesome techniques and discoveries made by &lt;a href="https://github.com/reworkd/tarsier"&gt;tarsier&lt;/a&gt;, &lt;a href="https://github.com/jbeoris/gemini-zod"&gt;gemini-zod&lt;/a&gt;, and &lt;a href="https://github.com/normal-computing/fuji-web"&gt;fuji-web&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We'd like to thank the following people for their major contributions to Stagehand:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pkiv"&gt;Paul Klein&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kamath"&gt;Anirudh Kamath&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seanmcguire12"&gt;Sean McGuire&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/miguelg719"&gt;Miguel Gonzalez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sameelarif"&gt;Sameel Arif&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/filip-michalsky"&gt;Filip Michalsky&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/jeremypress"&gt;Jeremy Press&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/navidpour"&gt;Navid Pour&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the MIT License.&lt;/p&gt; 
&lt;p&gt;Copyright 2025 Browserbase, Inc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>seerr-team/seerr</title>
      <link>https://github.com/seerr-team/seerr</link>
      <description>&lt;p&gt;Open-source media request and discovery manager for Jellyfin, Plex, and Emby.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt;
 ⚠️ 
 &lt;strong&gt;NOTE:&lt;/strong&gt; We are currently in the process of merging Overseerr and Jellyseerr into this unified repository.
&lt;/div&gt; 
&lt;h1 align="center" style="font-size: 4em;"&gt;🚧 Seerr&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/seerr-team/seerr/actions/workflows/release.yml/badge.svg?sanitize=true" alt="Seerr Release" /&gt; &lt;img src="https://github.com/seerr-team/seerr/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Seerr CI" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://discord.gg/seerr"&gt;&lt;img src="https://img.shields.io/discord/783137440809746482" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/fallenbagel/jellyseerr"&gt;&lt;img src="https://img.shields.io/docker/pulls/fallenbagel/jellyseerr" alt="Docker pulls" /&gt;&lt;/a&gt; &lt;a href="http://translate.jellyseerr.dev/engage/jellyseerr/"&gt;&lt;img src="http://translate.jellyseerr.dev/widget/jellyseerr/jellyseerr-frontend/svg-badge.svg?sanitize=true" alt="Translation status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/seerr-team/seerr/raw/develop/LICENSE"&gt;&lt;img alt="GitHub" src="https://img.shields.io/github/license/seerr-team/seerr" /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Seerr&lt;/strong&gt; is a free and open source software application for managing requests for your media library. It integrates with the media server of your choice: &lt;a href="https://jellyfin.org"&gt;Jellyfin&lt;/a&gt;, &lt;a href="https://plex.tv"&gt;Plex&lt;/a&gt;, and &lt;a href="https://emby.media/"&gt;Emby&lt;/a&gt;. In addition, it integrates with your existing services, such as &lt;strong&gt;&lt;a href="https://sonarr.tv/"&gt;Sonarr&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://radarr.video/"&gt;Radarr&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Current Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full Jellyfin/Emby/Plex integration including authentication with user import &amp;amp; management.&lt;/li&gt; 
 &lt;li&gt;Support for &lt;strong&gt;PostgreSQL&lt;/strong&gt; and &lt;strong&gt;SQLite&lt;/strong&gt; databases.&lt;/li&gt; 
 &lt;li&gt;Supports Movies, Shows and Mixed Libraries.&lt;/li&gt; 
 &lt;li&gt;Ability to change email addresses for SMTP purposes.&lt;/li&gt; 
 &lt;li&gt;Easy integration with your existing services. Currently, Seerr supports Sonarr and Radarr. More to come!&lt;/li&gt; 
 &lt;li&gt;Jellyfin/Emby/Plex library scan, to keep track of the titles which are already available.&lt;/li&gt; 
 &lt;li&gt;Customizable request system, which allows users to request individual seasons or movies in a friendly, easy-to-use interface.&lt;/li&gt; 
 &lt;li&gt;Incredibly simple request management UI. Don't dig through the app to simply approve recent requests!&lt;/li&gt; 
 &lt;li&gt;Granular permission system.&lt;/li&gt; 
 &lt;li&gt;Support for various notification agents.&lt;/li&gt; 
 &lt;li&gt;Mobile-friendly design, for when you need to approve requests on the go!&lt;/li&gt; 
 &lt;li&gt;Support for watchlisting &amp;amp; blacklisting media.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With more features on the way! Check out our &lt;a href="https://raw.githubusercontent.com/seerr-team/issues"&gt;issue tracker&lt;/a&gt; to see the features which have already been requested.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Check out our documentation for instructions on how to install and run Seerr:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.seerr.dev/getting-started/"&gt;https://docs.seerr.dev/getting-started/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Packages:&lt;/h3&gt; 
&lt;p&gt;Archlinux: &lt;a href="https://aur.archlinux.org/packages/jellyseerr"&gt;AUR&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Nix: &lt;a href="https://search.nixos.org/packages?channel=unstable&amp;amp;show=jellyseerr"&gt;Nixpkg&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/seerr-team/seerr/develop/public/preview.jpg" /&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check out the &lt;a href="https://docs.seerr.dev"&gt;Seerr Documentation&lt;/a&gt; before asking for help. Your question might already be in the docs!&lt;/li&gt; 
 &lt;li&gt;You can get support on &lt;a href="https://discord.gg/seerr"&gt;Discord&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;You can ask questions in the Help category of our &lt;a href="https://raw.githubusercontent.com/seerr-team/discussions"&gt;GitHub Discussions&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Bug reports and feature requests can be submitted via &lt;a href="https://raw.githubusercontent.com/seerr-team/issues"&gt;GitHub Issues&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;API Documentation&lt;/h2&gt; 
&lt;p&gt;You can access the API documentation from your local Seerr install at &lt;a href="http://localhost:5055/api-docs"&gt;http://localhost:5055/api-docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;You can ask questions, share ideas, and more in &lt;a href="https://raw.githubusercontent.com/seerr-team/discussions"&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you would like to chat with other members of our growing community, &lt;a href="https://discord.gg/seerr"&gt;join the Seerr Discord server&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Our &lt;a href="https://raw.githubusercontent.com/seerr-team/seerr/develop/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; applies to all Seerr community channels.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;You can help improve Seerr too! Check out our &lt;a href="https://raw.githubusercontent.com/seerr-team/seerr/develop/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Contributors ✨&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/seerr/#backers"&gt;&lt;img src="https://opencollective.com/seerr/contributors.svg?width=890" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/seerr/#backers"&gt;&lt;img src="https://opencollective.com/seerr/backers.svg?sanitize=true" alt="Become a Backer" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/seerr/#sponsors"&gt;&lt;img src="https://opencollective.com/seerr/sponsors.svg?sanitize=true" alt="Become a Sponsor" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CapSoftware/Cap</title>
      <link>https://github.com/CapSoftware/Cap</link>
      <description>&lt;p&gt;Open source Loom alternative. Beautiful, shareable screen recordings.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;img width="150" height="150" src="https://github.com/CapSoftware/Cap/raw/main/apps/desktop/src-tauri/icons/Square310x310Logo.png" alt="Logo" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;&lt;b&gt;Cap&lt;/b&gt;&lt;/h1&gt; 
&lt;p align="center"&gt; The open source Loom alternative. &lt;br /&gt; &lt;a href="https://cap.so"&gt;&lt;strong&gt;Cap.so »&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;b&gt;Downloads for &lt;/b&gt; &lt;a href="https://cap.so/download"&gt;macOS &amp;amp; Windows&lt;/a&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://console.algora.io/org/CapSoftware/bounties?status=open"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fconsole.algora.io%2Fapi%2Fshields%2FCapSoftware%2Fbounties%3Fstatus%3Dopen" alt="Open Bounties" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cap is the open source alternative to Loom. It's a video messaging tool that allows you to record, edit and share videos in seconds.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/CapSoftware/Cap/refs/heads/main/apps/web/public/landing-cover.png" /&gt; 
&lt;h1&gt;Self Hosting&lt;/h1&gt; 
&lt;p&gt;Cap Web is available to self-host using Docker or Railway, see our &lt;a href="https://cap.so/docs/self-hosting"&gt;self-hosting docs&lt;/a&gt; to learn more. You can also use the button below to deploy Cap Web to Railway:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://railway.com/new/template/PwpGcf"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Cap Desktop can connect to your self-hosted Cap Web instance regardless of if you build it yourself or &lt;a href="https://cap.so/download"&gt;download from our website&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Monorepo App Architecture&lt;/h1&gt; 
&lt;p&gt;We use a combination of Rust, React (Next.js), TypeScript, Tauri, Drizzle (ORM), MySQL, TailwindCSS throughout this Turborepo powered monorepo.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A note about database: The codebase is currently designed to work with MySQL only. MariaDB or other compatible databases might partially work but are not officially supported.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Apps:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;desktop&lt;/code&gt;: A &lt;a href="https://tauri.app"&gt;Tauri&lt;/a&gt; (Rust) app, using &lt;a href="https://start.solidjs.com"&gt;SolidStart&lt;/a&gt; on the frontend.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;web&lt;/code&gt;: A &lt;a href="https://nextjs.org"&gt;Next.js&lt;/a&gt; web app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Packages:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ui&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; Shared component library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;utils&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; Shared utility library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tsconfig&lt;/code&gt;: Shared &lt;code&gt;tsconfig&lt;/code&gt; configurations used throughout the monorepo.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;database&lt;/code&gt;: A &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; and &lt;a href="https://orm.drizzle.team/"&gt;Drizzle ORM&lt;/a&gt; Shared database library.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;config&lt;/code&gt;: &lt;code&gt;eslint&lt;/code&gt; configurations (includes &lt;code&gt;eslint-config-next&lt;/code&gt;, &lt;code&gt;eslint-config-prettier&lt;/code&gt; other configs used throughout the monorepo).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;License:&lt;/h3&gt; 
&lt;p&gt;Portions of this software are licensed as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All code residing in the &lt;code&gt;cap-camera*&lt;/code&gt; and &lt;code&gt;scap-*&lt;/code&gt; families of crates is licensed under the MIT License (see &lt;a href="https://github.com/CapSoftware/Cap/raw/main/licenses/LICENSE-MIT"&gt;licenses/LICENSE-MIT&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;All third party components are licensed under the original license provided by the owner of the applicable component&lt;/li&gt; 
 &lt;li&gt;All other content not mentioned above is available under the AGPLv3 license as defined in &lt;a href="https://github.com/CapSoftware/Cap/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Contributing&lt;/h1&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/CapSoftware/Cap/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information. This guide is a work in progress, and is updated regularly as the app matures.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>