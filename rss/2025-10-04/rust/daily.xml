<rss version="2.0">
  <channel>
    <title>GitHub Rust Daily Trending</title>
    <description>Daily Trending of Rust in GitHub</description>
    <pubDate>Fri, 03 Oct 2025 01:37:32 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>awslabs/mountpoint-s3</title>
      <link>https://github.com/awslabs/mountpoint-s3</link>
      <description>&lt;p&gt;A simple, high-throughput file client for mounting an Amazon S3 bucket as a local file system.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mountpoint for Amazon S3&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/awslabs/mountpoint-s3/actions/workflows/tests.yml"&gt;&lt;img src="https://github.com/awslabs/mountpoint-s3/actions/workflows/tests.yml/badge.svg?sanitize=true" alt="Tests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/awslabs/mountpoint-s3/actions/workflows/integration_main.yml"&gt;&lt;img src="https://github.com/awslabs/mountpoint-s3/actions/workflows/integration_main.yml/badge.svg?branch=main" alt="Integration tests" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Mountpoint for Amazon S3 is a simple, high-throughput file client for &lt;a href="https://aws.amazon.com/blogs/storage/the-inside-story-on-mountpoint-for-amazon-s3-a-high-performance-open-source-file-client/"&gt;mounting an Amazon S3 bucket as a local file system&lt;/a&gt;. With Mountpoint for Amazon S3, your applications can access objects stored in Amazon S3 through file operations like &lt;code&gt;open&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt;. Mountpoint for Amazon S3 automatically translates these operations into S3 object API calls, giving your applications access to the elastic storage and throughput of Amazon S3 through a file interface.&lt;/p&gt; 
&lt;p&gt;Mountpoint for Amazon S3 is optimized for applications that need high read throughput to large objects, potentially from many clients at once, and to write new objects sequentially from a single client at a time. This means it's a great fit for applications that use a file interface to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;read large objects from S3, potentially from many instances concurrently, without downloading them to local storage first&lt;/li&gt; 
 &lt;li&gt;access only some S3 objects out of a larger data set, but can't predict which objects in advance&lt;/li&gt; 
 &lt;li&gt;upload their output to S3 directly, or upload files from local storage with tools like &lt;code&gt;cp&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;but probably not the right fit for applications that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;use file operations that S3 doesn't natively support, like directory renaming or symlinks&lt;/li&gt; 
 &lt;li&gt;make edits to existing files (don't work on your Git repository or run &lt;code&gt;vim&lt;/code&gt; in Mountpoint 😄)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Mountpoint for Amazon S3 does not implement all the features of a POSIX file system, and there are some differences that may affect compatibility with your application. See &lt;a href="https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/doc/SEMANTICS.md"&gt;Mountpoint file system behavior&lt;/a&gt; for a detailed description of Mountpoint for Amazon S3's behavior and POSIX support and how they could affect your application. To troubleshoot file operations that may not be supported by Mountpoint, see the &lt;a href="https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/doc/TROUBLESHOOTING.md"&gt;troubleshooting documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Current status&lt;/h2&gt; 
&lt;p&gt;Mountpoint for Amazon S3 is generally available! We're tracking future feature development on the &lt;a href="https://github.com/orgs/awslabs/projects/84"&gt;Mountpoint for Amazon S3 public roadmap&lt;/a&gt;. We're always interested in feedback on features, performance, and compatibility. Please send feedback by &lt;a href="https://github.com/awslabs/mountpoint-s3/issues/new/choose"&gt;opening a new GitHub issue&lt;/a&gt; or adding your input to an existing roadmap issue.&lt;/p&gt; 
&lt;h3&gt;Notices&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Mountpoint for Amazon S3 v1.4.0, released on January 26, 2024, contains an &lt;a href="https://github.com/awslabs/mountpoint-s3/pull/751"&gt;issue&lt;/a&gt; that causes intermittent read failures. We recommend that customers using v1.4.0 upgrade to v1.4.1 or later.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Run these two commands to install Mountpoint for Amazon S3 on your Amazon Linux EC2 instance (for Graviton instances, replace &lt;code&gt;x86_64&lt;/code&gt; with &lt;code&gt;arm64&lt;/code&gt; in the URL):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;wget https://s3.amazonaws.com/mountpoint-s3-release/latest/x86_64/mount-s3.rpm
sudo yum install -y ./mount-s3.rpm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On Ubuntu, use these commands instead (for Graviton instances, replace &lt;code&gt;x86_64&lt;/code&gt; with &lt;code&gt;arm64&lt;/code&gt; in the URL):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;wget https://s3.amazonaws.com/mountpoint-s3-release/latest/x86_64/mount-s3.deb
sudo apt-get install -y ./mount-s3.deb
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] See &lt;a href="https://github.com/awslabs/mountpoint-s3/raw/main/doc/INSTALL.md"&gt;Installing Mountpoint for Amazon S3&lt;/a&gt; for detailed instructions and other installation options, including the &lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/s3-csi.html"&gt;Mountpoint for Amazon S3 CSI driver&lt;/a&gt; for Kubernetes applications, or building from source.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Once you've got Mountpoint for Amazon S3 installed, you can mount your Amazon S3 bucket. You'll need valid AWS credentials to access your bucket. Mountpoint will automatically use credentials from &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html"&gt;an IAM role associated with your EC2 instance&lt;/a&gt;, or the &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt; environment variables, or from &lt;a href="https://github.com/awslabs/mountpoint-s3/raw/main/doc/CONFIGURATION.md#aws-credentials"&gt;several other sources&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To mount your bucket, run this command, replacing &lt;code&gt;amzn-s3-demo-bucket&lt;/code&gt; with the name of your bucket and &lt;code&gt;/path/to/mount&lt;/code&gt; with the directory you want to mount the bucket to:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mount-s3 amzn-s3-demo-bucket /path/to/mount
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can work with your bucket contents as if they were a local file system:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ls /path/to/mount
echo "Hello World!" &amp;gt; /path/to/mount/Data.txt
cat /path/to/mount/Data.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you're finished accessing your bucket, you can unmount it (you might need &lt;code&gt;sudo&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;umount /path/to/mount
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] See &lt;a href="https://github.com/awslabs/mountpoint-s3/raw/main/doc/CONFIGURATION.md"&gt;Configuring Mountpoint for Amazon S3&lt;/a&gt; for more details on how to configure and use Mountpoint.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Compatibility with other storage services&lt;/h3&gt; 
&lt;p&gt;Mountpoint for Amazon S3 is designed for high-performance access to the Amazon S3 service. While it may be functional against other storage services that use S3-like APIs, we aren't able to provide support for those use cases, and they may inadvertently break when we make changes to better support Amazon S3. We welcome contributions of minor compatibility fixes or performance improvements for these services if the changes can be tested against Amazon S3.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions to Mountpoint for Amazon S3! Please see &lt;a href="https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/doc/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information on how to report bugs or submit pull requests. We especially welcome contributions to issues tagged as &lt;a href="https://github.com/awslabs/mountpoint-s3/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22"&gt;good first issues to work on&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For potential bug reports, see &lt;a href="https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/doc/LOGGING.md"&gt;LOGGING.md&lt;/a&gt; for details on how to capture logging data. For performance issues, see &lt;a href="https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/doc/BENCHMARKING.md"&gt;BENCHMARKING.md&lt;/a&gt; for documentation about performance regression testing.&lt;/p&gt; 
&lt;h3&gt;Security&lt;/h3&gt; 
&lt;p&gt;If you discover a potential security issue in this project we ask that you notify AWS Security via our &lt;a href="http://aws.amazon.com/security/vulnerability-reporting/"&gt;vulnerability reporting page&lt;/a&gt;. Please do &lt;strong&gt;not&lt;/strong&gt; create a public GitHub issue.&lt;/p&gt; 
&lt;h3&gt;Code of conduct&lt;/h3&gt; 
&lt;p&gt;This project has adopted the &lt;a href="https://aws.github.io/code-of-conduct"&gt;Amazon Open Source Code of Conduct&lt;/a&gt;. See &lt;a href="https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/doc/CODE_OF_CONDUCT.md"&gt;CODE_OF_CONDUCT.md&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the Apache-2.0 License. It builds on a number of other awesome projects with open source licenses, primarily:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/cberner/fuser"&gt;fuser&lt;/a&gt; bindings for FUSE (MIT license)&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://docs.aws.amazon.com/sdkref/latest/guide/common-runtime.html"&gt;AWS Common Runtime&lt;/a&gt; for interacting with S3 (Apache 2.0 license)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/awslabs/mountpoint-s3/main/deny.toml"&gt;deny.toml&lt;/a&gt; for a list of licenses used by our dependencies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>atuinsh/atuin</title>
      <link>https://github.com/atuinsh/atuin</link>
      <description>&lt;p&gt;✨ Magical shell history&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/atuinsh/atuin/assets/53315310/13216a1d-1ac0-4c99-b0eb-d88290fe0efd" /&gt; 
  &lt;img alt="Text changing depending on mode. Light: 'So light!' Dark: 'So dark!'" src="https://github.com/atuinsh/atuin/assets/53315310/08bc86d4-a781-4aaa-8d7e-478ae6bcd129" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;em&gt;magical shell history&lt;/em&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/atuinsh/atuin/actions?query=workflow%3ARust"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/atuinsh/atuin/rust.yml?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/atuin"&gt;&lt;img src="https://img.shields.io/crates/v/atuin.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/atuin"&gt;&lt;img src="https://img.shields.io/crates/d/atuin.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://github.com/atuinsh/atuin/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/crates/l/atuin.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/Fq8bJSKPHh"&gt;&lt;img src="https://img.shields.io/discord/954121165239115808" /&gt;&lt;/a&gt; &lt;a rel="me" href="https://hachyderm.io/@atuin"&gt;&lt;img src="https://img.shields.io/mastodon/follow/109944632283122560?domain=https%3A%2F%2Fhachyderm.io&amp;amp;style=social" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/atuinsh"&gt;&lt;img src="https://img.shields.io/twitter/follow/atuinsh?style=social" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/atuinsh/atuin/main/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/atuinsh/atuin/main/docs/zh-CN/README.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Atuin replaces your existing shell history with a SQLite database, and records additional context for your commands. Additionally, it provides optional and &lt;em&gt;fully encrypted&lt;/em&gt; synchronisation of your history between machines, via an Atuin server.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/atuinsh/atuin/main/demo.gif" alt="animated" width="80%" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;em&gt;exit code, duration, time and command shown&lt;/em&gt; &lt;/p&gt; 
&lt;p&gt;As well as the search UI, it can do things like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# search for all successful `make` commands, recorded after 3pm yesterday
atuin search --exit 0 --after "yesterday 3pm" make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may use either the server I host, or host your own! Or just don't use sync at all. As all history sync is encrypted, I couldn't access your data even if I wanted to. And I &lt;strong&gt;really&lt;/strong&gt; don't want to.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;rebind &lt;code&gt;ctrl-r&lt;/code&gt; and &lt;code&gt;up&lt;/code&gt; (configurable) to a full screen history search UI&lt;/li&gt; 
 &lt;li&gt;store shell history in a sqlite database&lt;/li&gt; 
 &lt;li&gt;back up and sync &lt;strong&gt;encrypted&lt;/strong&gt; shell history&lt;/li&gt; 
 &lt;li&gt;the same history across terminals, across sessions, and across machines&lt;/li&gt; 
 &lt;li&gt;log exit code, cwd, hostname, session, command duration, etc&lt;/li&gt; 
 &lt;li&gt;calculate statistics such as "most used command"&lt;/li&gt; 
 &lt;li&gt;old history file is not replaced&lt;/li&gt; 
 &lt;li&gt;quick-jump to previous items with &lt;kbd&gt;Alt-&amp;lt;num&amp;gt;&lt;/kbd&gt;&lt;/li&gt; 
 &lt;li&gt;switch filter modes via ctrl-r; search history just from the current session, directory, or globally&lt;/li&gt; 
 &lt;li&gt;enter to execute a command, tab to edit&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/atuinsh/atuin/main/#quickstart"&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.atuin.sh/guide/installation/"&gt;Install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.atuin.sh/guide/sync/"&gt;Setting up sync&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.atuin.sh/guide/import/"&gt;Import history&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.atuin.sh/guide/basic-usage/"&gt;Basic usage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Shells&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;zsh&lt;/li&gt; 
 &lt;li&gt;bash&lt;/li&gt; 
 &lt;li&gt;fish&lt;/li&gt; 
 &lt;li&gt;nushell&lt;/li&gt; 
 &lt;li&gt;xonsh&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;h3&gt;Forum&lt;/h3&gt; 
&lt;p&gt;Atuin has a community forum, please ask here for help and support: &lt;a href="https://forum.atuin.sh/"&gt;https://forum.atuin.sh/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Discord&lt;/h3&gt; 
&lt;p&gt;Atuin also has a community Discord, available &lt;a href="https://discord.gg/jR3tfchVvW"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Quickstart&lt;/h1&gt; 
&lt;p&gt;This will sign you up for the Atuin Cloud sync server. Everything is end-to-end encrypted, so your secrets are safe!&lt;/p&gt; 
&lt;p&gt;Read more in the &lt;a href="https://docs.atuin.sh"&gt;docs&lt;/a&gt; for an offline setup, self hosted server, and more.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;curl --proto '=https' --tlsv1.2 -LsSf https://setup.atuin.sh | sh

atuin register -u &amp;lt;USERNAME&amp;gt; -e &amp;lt;EMAIL&amp;gt;
atuin import auto
atuin sync
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then restart your shell!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;For Bash users&lt;/strong&gt;: The above sets up &lt;code&gt;bash-preexec&lt;/code&gt; for necessary hooks, but &lt;code&gt;bash-preexec&lt;/code&gt; has limitations. For details, please see the &lt;a href="https://docs.atuin.sh/guide/installation/#installing-the-shell-plugin"&gt;Bash&lt;/a&gt; section of the shell plugin documentation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Security&lt;/h1&gt; 
&lt;p&gt;If you find any security issues, we'd appreciate it if you could alert &lt;a href="mailto:ellie@atuin.sh"&gt;ellie@atuin.sh&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Contributors&lt;/h1&gt; 
&lt;a href="https://github.com/atuinsh/atuin/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=atuinsh/atuin&amp;amp;max=300" /&gt; &lt;/a&gt; 
&lt;p&gt;Made with &lt;a href="https://contrib.rocks"&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fish-shell/fish-shell</title>
      <link>https://github.com/fish-shell/fish-shell</link>
      <description>&lt;p&gt;The user-friendly command line shell.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. |Cirrus CI| image:: &lt;a href="https://api.cirrus-ci.com/github/fish-shell/fish-shell.svg?branch=master"&gt;https://api.cirrus-ci.com/github/fish-shell/fish-shell.svg?branch=master&lt;/a&gt; :target: &lt;a href="https://cirrus-ci.com/github/fish-shell/fish-shell"&gt;https://cirrus-ci.com/github/fish-shell/fish-shell&lt;/a&gt; :alt: Cirrus CI Build Status&lt;/p&gt; 
&lt;h1&gt;&lt;code&gt;fish &amp;lt;https://fishshell.com/&amp;gt;&lt;/code&gt;__ - the friendly interactive shell |Build Status| |Cirrus CI|&lt;/h1&gt; 
&lt;p&gt;fish is a smart and user-friendly command line shell for macOS, Linux, and the rest of the family. fish includes features like syntax highlighting, autosuggest-as-you-type, and fancy tab completions that just work, with no configuration required.&lt;/p&gt; 
&lt;p&gt;For downloads, screenshots and more, go to &lt;a href="https://fishshell.com/"&gt;https://fishshell.com/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;fish generally works like other shells, like bash or zsh. A few important differences can be found at &lt;a href="https://fishshell.com/docs/current/tutorial.html"&gt;https://fishshell.com/docs/current/tutorial.html&lt;/a&gt; by searching for the magic phrase “unlike other shells”.&lt;/p&gt; 
&lt;p&gt;Detailed user documentation is available by running &lt;code&gt;help&lt;/code&gt; within fish, and also at &lt;a href="https://fishshell.com/docs/current/index.html"&gt;https://fishshell.com/docs/current/index.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting fish&lt;/h2&gt; 
&lt;p&gt;macOS&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
fish can be installed:

-  using `Homebrew &amp;lt;http://brew.sh/&amp;gt;`__: ``brew install fish``
-  using `MacPorts &amp;lt;https://www.macports.org/&amp;gt;`__:
   ``sudo port install fish``
-  using the `installer from fishshell.com &amp;lt;https://fishshell.com/&amp;gt;`__
-  as a `standalone app from fishshell.com &amp;lt;https://fishshell.com/&amp;gt;`__

Note: The minimum supported macOS version is 10.10 "Yosemite".

Packages for Linux
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Packages for Debian, Fedora, openSUSE, and Red Hat Enterprise Linux/CentOS are available from the &lt;code&gt;openSUSE Build Service &amp;lt;https://software.opensuse.org/download.html?project=shells%3Afish&amp;amp;package=fish&amp;gt;&lt;/code&gt;__.&lt;/p&gt; 
&lt;p&gt;Packages for Ubuntu are available from the &lt;code&gt;fish PPA &amp;lt;https://launchpad.net/~fish-shell/+archive/ubuntu/release-4&amp;gt;&lt;/code&gt;__, and can be installed using the following commands:&lt;/p&gt; 
&lt;p&gt;::&lt;/p&gt; 
&lt;p&gt;sudo apt-add-repository ppa:fish-shell/release-4 sudo apt update sudo apt install fish&lt;/p&gt; 
&lt;p&gt;Instructions for other distributions may be found at &lt;code&gt;fishshell.com &amp;lt;https://fishshell.com&amp;gt;&lt;/code&gt;__.&lt;/p&gt; 
&lt;p&gt;Windows&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
-  On Windows 10/11, fish can be installed under the WSL Windows Subsystem
   for Linux with the instructions for the appropriate distribution
   listed above under “Packages for Linux”, or from source with the
   instructions below.
-  Fish can also be installed on all versions of Windows using
   `Cygwin &amp;lt;https://cygwin.com/&amp;gt;`__ or `MSYS2 &amp;lt;https://github.com/Berrysoft/fish-msys2&amp;gt;`__.

Building from source
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If packages are not available for your platform, GPG-signed tarballs are available from &lt;code&gt;fishshell.com &amp;lt;https://fishshell.com/&amp;gt;&lt;/code&gt;__ and &lt;code&gt;fish-shell on GitHub &amp;lt;https://github.com/fish-shell/fish-shell/releases&amp;gt;&lt;/code&gt;__. See the &lt;code&gt;Building &amp;lt;#building&amp;gt;&lt;/code&gt;_ section for instructions.&lt;/p&gt; 
&lt;h2&gt;Running fish&lt;/h2&gt; 
&lt;p&gt;Once installed, run &lt;code&gt;fish&lt;/code&gt; from your current shell to try fish out!&lt;/p&gt; 
&lt;p&gt;Dependencies&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
Running fish requires:

-  some common \*nix system utilities (currently ``mktemp``), in
   addition to the basic POSIX utilities (``cat``, ``cut``, ``dirname``,
   ``file``, ``ls``, ``mkdir``, ``mkfifo``, ``rm``, ``sh``, ``sort``, ``tee``, ``tr``,
   ``uname`` and ``sed`` at least, but the full coreutils plus ``find`` and
   ``awk`` is preferred)

The following optional features also have specific requirements:

-  builtin commands that have the ``--help`` option or print usage
   messages require ``man`` for display
-  automated completion generation from manual pages requires Python 3.5+
-  the ``fish_config`` web configuration tool requires Python 3.5+ and a web browser
-  system clipboard integration (with the default Ctrl-V and Ctrl-X
   bindings) require either the ``xsel``, ``xclip``,
   ``wl-copy``/``wl-paste`` or ``pbcopy``/``pbpaste`` utilities
-  full completions for ``yarn`` and ``npm`` require the
   ``all-the-package-names`` NPM module
-  ``colorls`` is used, if installed, to add color when running ``ls`` on platforms
   that do not have color support (such as OpenBSD)

Building
--------

.. _dependencies-1:

Dependencies
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compiling fish requires:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Rust (version 1.70 or later)&lt;/li&gt; 
 &lt;li&gt;CMake (version 3.15 or later)&lt;/li&gt; 
 &lt;li&gt;a C compiler (for system feature detection and the test helper binary)&lt;/li&gt; 
 &lt;li&gt;PCRE2 (headers and libraries) - optional, this will be downloaded if missing&lt;/li&gt; 
 &lt;li&gt;gettext (only the msgfmt tool) - optional, for translation support&lt;/li&gt; 
 &lt;li&gt;an Internet connection, as other dependencies will be downloaded automatically&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Sphinx is also optionally required to build the documentation from a cloned git repository.&lt;/p&gt; 
&lt;p&gt;Additionally, running the full test suite requires Python 3.5+, tmux, and the pexpect package.&lt;/p&gt; 
&lt;p&gt;Building from source with CMake&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
Rather than building from source, consider using a packaged build for your platform. Using the
steps below makes fish difficult to uninstall or upgrade. Release packages are available from the
links above, and up-to-date `development builds of fish are available for many platforms
&amp;lt;https://github.com/fish-shell/fish-shell/wiki/Development-builds&amp;gt;`__

To install into ``/usr/local``, run:

.. code:: bash

   mkdir build; cd build
   cmake ..
   cmake --build .
   sudo cmake --install .

The install directory can be changed using the
``-DCMAKE_INSTALL_PREFIX`` parameter for ``cmake``.

CMake Build options
~~~~~~~~~~~~~~~~~~~

In addition to the normal CMake build options (like ``CMAKE_INSTALL_PREFIX``), fish's CMake build has some other options available to customize it.

- Rust_COMPILER=path - the path to rustc. If not set, cmake will check $PATH and ~/.cargo/bin
- Rust_CARGO=path - the path to cargo. If not set, cmake will check $PATH and ~/.cargo/bin
- Rust_CARGO_TARGET=target - the target to pass to cargo. Set this for cross-compilation.
- BUILD_DOCS=ON|OFF - whether to build the documentation. This is automatically set to OFF when Sphinx isn't installed.
- INSTALL_DOCS=ON|OFF - whether to install the docs. This is automatically set to on when BUILD_DOCS is or prebuilt documentation is available (like when building in-tree from a tarball).
- FISH_USE_SYSTEM_PCRE2=ON|OFF - whether to use an installed pcre2. This is normally autodetected.
- MAC_CODESIGN_ID=String|OFF - the codesign ID to use on Mac, or "OFF" to disable codesigning.
- WITH_GETTEXT=ON|OFF - whether to include translations.
- extra_functionsdir, extra_completionsdir and extra_confdir - to compile in an additional directory to be searched for functions, completions and configuration snippets

Building fish with embedded data (experimental)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also build fish with the data files embedded.&lt;/p&gt; 
&lt;p&gt;This will include all the datafiles like the included functions or web configuration tool in the main &lt;code&gt;fish&lt;/code&gt; binary.&lt;/p&gt; 
&lt;p&gt;Fish will then read these right from its own binary, and print them out when needed. Some files, like the webconfig tool and the manpage completion generator, will be extracted to a temporary directory on-demand. You can list the files with &lt;code&gt;status list-files&lt;/code&gt; and print one with &lt;code&gt;status get-file path/to/file&lt;/code&gt; (e.g. &lt;code&gt;status get-file functions/fish_prompt.fish&lt;/code&gt; to get the default prompt).&lt;/p&gt; 
&lt;p&gt;To install fish with embedded files, just use &lt;code&gt;cargo&lt;/code&gt;, like::&lt;/p&gt; 
&lt;p&gt;cargo install --path /path/to/fish # if you have a git clone cargo install --git &lt;a href="https://github.com/fish-shell/fish-shell"&gt;https://github.com/fish-shell/fish-shell&lt;/a&gt; --tag "$(curl -s &lt;a href="https://api.github.com/repos/fish-shell/fish-shell/releases/latest"&gt;https://api.github.com/repos/fish-shell/fish-shell/releases/latest&lt;/a&gt; | jq -r .tag_name)" # to build the latest release cargo install --git &lt;a href="https://github.com/fish-shell/fish-shell"&gt;https://github.com/fish-shell/fish-shell&lt;/a&gt; # to build the latest development snapshot&lt;/p&gt; 
&lt;p&gt;This will place the standalone binaries in &lt;code&gt;~/.cargo/bin/&lt;/code&gt;, but you can place them wherever you want.&lt;/p&gt; 
&lt;p&gt;This build won't have the HTML docs (&lt;code&gt;help&lt;/code&gt; will open the online version). It will try to build the man pages with sphinx-build. If that is not available and you would like to include man pages, you need to install it and retrigger the build script, e.g. by setting FISH_BUILD_DOCS=1::&lt;/p&gt; 
&lt;p&gt;FISH_BUILD_DOCS=1 cargo install --path .&lt;/p&gt; 
&lt;p&gt;Setting it to "0" disables the inclusion of man pages.&lt;/p&gt; 
&lt;p&gt;To disable translations, disable the &lt;code&gt;localize-messages&lt;/code&gt; feature by passing &lt;code&gt;--no-default-features --features=embed-data&lt;/code&gt; to cargo.&lt;/p&gt; 
&lt;p&gt;You can also link this build statically (but not against glibc) and move it to other computers.&lt;/p&gt; 
&lt;h2&gt;Contributing Changes to the Code&lt;/h2&gt; 
&lt;p&gt;See the &lt;code&gt;Guide for Developers &amp;lt;CONTRIBUTING.rst&amp;gt;&lt;/code&gt;__.&lt;/p&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;p&gt;Questions, comments, rants and raves can be posted to the official fish mailing list at &lt;a href="https://lists.sourceforge.net/lists/listinfo/fish-users"&gt;https://lists.sourceforge.net/lists/listinfo/fish-users&lt;/a&gt; or join us on our &lt;code&gt;matrix channel &amp;lt;https://matrix.to/#/#fish-shell:matrix.org&amp;gt;&lt;/code&gt;&lt;strong&gt;. Or use the &lt;code&gt;fish tag on Unix &amp;amp; Linux Stackexchange &amp;lt;https://unix.stackexchange.com/questions/tagged/fish&amp;gt;&lt;/code&gt;&lt;/strong&gt;. There is also a fish tag on Stackoverflow, but it is typically a poor fit.&lt;/p&gt; 
&lt;p&gt;Found a bug? Have an awesome idea? Please &lt;code&gt;open an issue &amp;lt;https://github.com/fish-shell/fish-shell/issues/new&amp;gt;&lt;/code&gt;__.&lt;/p&gt; 
&lt;p&gt;.. |Build Status| image:: &lt;a href="https://github.com/fish-shell/fish-shell/workflows/make%20test/badge.svg"&gt;https://github.com/fish-shell/fish-shell/workflows/make%20test/badge.svg&lt;/a&gt; :target: &lt;a href="https://github.com/fish-shell/fish-shell/actions"&gt;https://github.com/fish-shell/fish-shell/actions&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>librespot-org/librespot</title>
      <link>https://github.com/librespot-org/librespot</link>
      <description>&lt;p&gt;Open Source Spotify client library&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/librespot-org/librespot/actions"&gt;&lt;img src="https://github.com/librespot-org/librespot/workflows/build/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://gitter.im/librespot-org/spotify-connect-resources"&gt;&lt;img src="https://badges.gitter.im/librespot-org/librespot.png" alt="Gitter chat" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/librespot"&gt;&lt;img src="https://img.shields.io/crates/v/librespot.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Current maintainers are &lt;a href="https://github.com/orgs/librespot-org/people"&gt;listed on GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;librespot&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;librespot&lt;/em&gt; is an open source client library for Spotify. It enables applications to use Spotify's service to control and play music via various backends, and to act as a Spotify Connect receiver. It is an alternative to the official and &lt;a href="https://pyspotify.mopidy.com/en/latest/#libspotify-s-deprecation"&gt;now deprecated&lt;/a&gt; closed-source &lt;code&gt;libspotify&lt;/code&gt;. Additionally, it will provide extra features which are not available in the official library.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: librespot only works with Spotify Premium. This will remain the case. We will not support any features to make librespot compatible with free accounts, such as limited skips and adverts.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;p&gt;We're available on &lt;a href="https://crates.io/crates/librespot"&gt;crates.io&lt;/a&gt; as the &lt;em&gt;librespot&lt;/em&gt; package. Simply run &lt;code&gt;cargo install librespot&lt;/code&gt; to install librespot on your system. Check the wiki for more info and possible &lt;a href="https://github.com/librespot-org/librespot/wiki/Options"&gt;usage options&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;After installation, you can run librespot from the CLI using a command such as &lt;code&gt;librespot -n "Librespot Speaker" -b 160&lt;/code&gt; to create a speaker called &lt;em&gt;Librespot Speaker&lt;/em&gt; serving 160 kbps audio.&lt;/p&gt; 
&lt;h2&gt;This fork&lt;/h2&gt; 
&lt;p&gt;As the origin by &lt;a href="https://github.com/plietar/"&gt;plietar&lt;/a&gt; is no longer actively maintained, this organisation and repository have been set up so that the project may be maintained and upgraded in the future.&lt;/p&gt; 
&lt;h1&gt;Documentation&lt;/h1&gt; 
&lt;p&gt;Documentation is currently a work in progress, contributions are welcome!&lt;/p&gt; 
&lt;p&gt;There is some brief documentation on how the protocol works in the &lt;a href="https://github.com/librespot-org/librespot/tree/master/docs"&gt;docs&lt;/a&gt; folder.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/librespot-org/librespot/raw/master/COMPILING.md"&gt;COMPILING.md&lt;/a&gt; contains detailed instructions on setting up a development environment, and compiling librespot. More general usage and compilation information is available on the &lt;a href="https://github.com/librespot-org/librespot/wiki"&gt;wiki&lt;/a&gt;. &lt;a href="https://github.com/librespot-org/librespot/raw/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; also contains our contributing guidelines.&lt;/p&gt; 
&lt;p&gt;If you wish to learn more about how librespot works overall, the best way is to simply read the code, and ask any questions you have in our &lt;a href="https://gitter.im/librespot-org/spotify-connect-resources"&gt;Gitter Room&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Issues &amp;amp; Discussions&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;We have recently started using Github discussions for general questions and feature requests, as they are a more natural medium for such cases, and allow for upvoting to prioritize feature development. Check them out &lt;a href="https://github.com/librespot-org/librespot/discussions"&gt;here&lt;/a&gt;. Bugs and issues with the underlying library should still be reported as issues.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you run into a bug when using librespot, please search the existing issues before opening a new one. Chances are, we've encountered it before, and have provided a resolution. If not, please open a new one, and where possible, include the backtrace librespot generates on crashing, along with anything we can use to reproduce the issue, e.g. the Spotify URI of the song that caused the crash.&lt;/p&gt; 
&lt;h1&gt;Building&lt;/h1&gt; 
&lt;p&gt;A quick walkthrough of the build process is outlined below, while a detailed compilation guide can be found &lt;a href="https://github.com/librespot-org/librespot/raw/master/COMPILING.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Additional Dependencies&lt;/h2&gt; 
&lt;p&gt;We recently switched to using &lt;a href="https://github.com/tomaka/rodio"&gt;Rodio&lt;/a&gt; for audio playback by default, hence for macOS and Windows, you should just be able to clone and build librespot (with the command below). For Linux, you will need to run the additional commands below, depending on your distro.&lt;/p&gt; 
&lt;p&gt;On Debian/Ubuntu, the following command will install these dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;sudo apt-get install build-essential libasound2-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On Fedora systems, the following command will install these dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;sudo dnf install alsa-lib-devel make gcc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;librespot currently offers the following selection of &lt;a href="https://github.com/librespot-org/librespot/wiki/Audio-Backends"&gt;audio backends&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Rodio (default)
ALSA
GStreamer
PortAudio
PulseAudio
JACK
JACK over Rodio
SDL
Pipe
Subprocess
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please check &lt;a href="https://raw.githubusercontent.com/librespot-org/librespot/dev/COMPILING.md"&gt;COMPILING.md&lt;/a&gt; for detailed information on TLS, audio, and discovery backend dependencies, or the &lt;a href="https://github.com/librespot-org/librespot/wiki/Compiling#general-dependencies"&gt;Compiling&lt;/a&gt; entry on the wiki for additional backend specific dependencies.&lt;/p&gt; 
&lt;p&gt;Once you've installed the dependencies and cloned this repository you can build &lt;em&gt;librespot&lt;/em&gt; with the default features using Cargo.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cargo build --release
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, this builds with native-tls (system TLS), rodio audio backend, and libmdns discovery. See &lt;a href="https://raw.githubusercontent.com/librespot-org/librespot/dev/COMPILING.md"&gt;COMPILING.md&lt;/a&gt; for information on selecting different TLS, audio, and discovery backends.&lt;/p&gt; 
&lt;h1&gt;Packages&lt;/h1&gt; 
&lt;p&gt;librespot is also available via official package system on various operating systems such as Linux, FreeBSD, NetBSD. &lt;a href="https://repology.org/project/librespot/versions"&gt;Repology&lt;/a&gt; offers a good overview.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/librespot/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/librespot.svg?sanitize=true" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;A sample program implementing a headless Spotify Connect receiver is provided. Once you've built &lt;em&gt;librespot&lt;/em&gt;, run it using :&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;target/release/librespot --name DEVICENAME
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above is a minimal example. Here is a more fully fledged one:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;target/release/librespot -n "Librespot" -b 320 -c ./cache --enable-volume-normalisation --initial-volume 75 --device-type avr
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above command will create a receiver named &lt;code&gt;Librespot&lt;/code&gt;, with bitrate set to 320 kbps, initial volume at 75%, with volume normalisation enabled, and the device displayed in the app as an Audio/Video Receiver. A folder named &lt;code&gt;cache&lt;/code&gt; will be created/used in the current directory, and be used to cache audio data and credentials.&lt;/p&gt; 
&lt;p&gt;A full list of runtime options is available &lt;a href="https://github.com/librespot-org/librespot/wiki/Options"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Please Note: When using the cache feature, an authentication blob is stored for your account in the cache directory. For security purposes, we recommend that you set directory permissions on the cache directory to &lt;code&gt;700&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;Come and hang out on gitter if you need help or want to offer some: &lt;a href="https://gitter.im/librespot-org/spotify-connect-resources"&gt;https://gitter.im/librespot-org/spotify-connect-resources&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;Using this code to connect to Spotify's API is probably forbidden by them. Use at your own risk.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Everything in this repository is licensed under the MIT license.&lt;/p&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;p&gt;This is a non exhaustive list of projects that either use or have modified librespot. If you'd like to include yours, submit a PR.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/librespot-org/librespot-golang"&gt;librespot-golang&lt;/a&gt; - A golang port of librespot.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marcelveldt/plugin.audio.spotify"&gt;plugin.audio.spotify&lt;/a&gt; - A Kodi plugin for Spotify.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dtcooper/raspotify"&gt;raspotify&lt;/a&gt; - A Spotify Connect client that mostly Just Works™&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Spotifyd/spotifyd"&gt;Spotifyd&lt;/a&gt; - A stripped down librespot UNIX daemon.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nicokaiser/rpi-audio-receiver"&gt;rpi-audio-receiver&lt;/a&gt; - easy Raspbian install scripts for Spotifyd, Bluetooth, Shairport and other audio receivers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/badfortrains/spotcontrol"&gt;Spotcontrol&lt;/a&gt; - A golang implementation of a Spotify Connect controller. No Playback functionality.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/devgianlu/librespot-java"&gt;librespot-java&lt;/a&gt; - A Java port of librespot.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hrkfdn/ncspot"&gt;ncspot&lt;/a&gt; - Cross-platform ncurses Spotify client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xMordax/ansible-role-librespot/tree/master"&gt;ansible-role-librespot&lt;/a&gt; - Ansible role that will build, install and configure Librespot.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xou816/spot"&gt;Spot&lt;/a&gt; - Gtk/Rust native Spotify client for the GNOME desktop.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/badaix/snapcast"&gt;Snapcast&lt;/a&gt; - synchronised multi-room audio player that uses librespot as its source for Spotify content&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mupibox.de/"&gt;MuPiBox&lt;/a&gt; - Portable music box for Spotify and local media based on Raspberry Pi. Operated via touchscreen. Suitable for children and older people.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>juspay/hyperswitch</title>
      <link>https://github.com/juspay/hyperswitch</link>
      <description>&lt;p&gt;An open source payments switch written in Rust to make payments fast, reliable and affordable&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/hyperswitch-logo-dark.svg#gh-dark-mode-only" alt="Hyperswitch-Logo" width="40%" /&gt; &lt;img src="https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/hyperswitch-logo-light.svg#gh-light-mode-only" alt="Hyperswitch-Logo" width="40%" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Composable Open-Source Payments Infrastructure&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/gifs/quickstart.gif" alt="Quickstart demo" /&gt; &lt;/p&gt; 
&lt;!-- @import "[TOC]" {cmd="toc" depthFrom=1 depthTo=6 orderedList=false} --&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/juspay/hyperswitch/actions?query=workflow%3ACI+branch%3Amain"&gt; &lt;img src="https://github.com/juspay/hyperswitch/workflows/CI-push/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://github.com/juspay/hyperswitch/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/juspay/hyperswitch" /&gt; &lt;/a&gt; &lt;a href="https://github.com/juspay/hyperswitch/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/Made_in-Rust-orange" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.linkedin.com/company/hyperswitch/"&gt; &lt;img src="https://img.shields.io/badge/follow-hyperswitch-blue?logo=linkedin&amp;amp;labelColor=grey" /&gt; &lt;/a&gt; &lt;a href="https://x.com/hyperswitchio"&gt; &lt;img src="https://img.shields.io/badge/follow-%40hyperswitchio-white?logo=x&amp;amp;labelColor=grey" /&gt; &lt;/a&gt; &lt;a href="https://inviter.co/hyperswitch-slack"&gt; &lt;img src="https://img.shields.io/badge/chat-on_slack-blue?logo=slack&amp;amp;labelColor=grey&amp;amp;color=%233f0e40" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;📁 Table of Contents&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#-what-can-i-do-with-hyperswitch"&gt;What Can I Do with Hyperswitch?&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#-quickstart-local-setup"&gt;Quickstart (Local Setup)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#cloud-deployment"&gt;Cloud Deployment&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#hosted-sandbox-no-setup-required"&gt;Hosted Sandbox (No Setup Required)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#-why-hyperswitch"&gt;Why Hyperswitch?&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#architectural-overview"&gt;Architectural Overview&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#our-vision"&gt;Our Vision&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#community--contributions"&gt;Community &amp;amp; Contributions&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#feature-requests--bugs"&gt;Feature Requests &amp;amp; Bugs&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#versioning"&gt;Versioning&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#copyright-and-license"&gt;License&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#team-behind-hyperswitch"&gt;Team Behind Hyperswitch&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;summary&gt;&lt;h2&gt; What Can I Do with Hyperswitch?&lt;/h2&gt;&lt;/summary&gt; 
&lt;p&gt;Hyperswitch offers a modular, open-source payments infrastructure designed for flexibility and control. Apart from our Payment Suite offering, this solution allows businesses to pick and integrate only the modules they need on top of their existing payment stack — without unnecessary complexity or vendor lock-in.&lt;/p&gt; 
&lt;p&gt;Each module is independent and purpose-built to optimize different aspects of payment processing.&lt;/p&gt; 
&lt;h3&gt; Learn More About The Payment Modules &lt;/h3&gt; 
&lt;details&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cost Observability&lt;/strong&gt;&lt;br /&gt; Advanced observability tools to audit, monitor, and optimize your payment costs. Detect hidden fees, downgrades, and penalties with self-serve dashboards and actionable insights.&lt;br /&gt; &lt;em&gt;&lt;a href="https://docs.hyperswitch.io/about-hyperswitch/payments-modules/ai-powered-cost-observability"&gt;Read more&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Revenue Recovery&lt;/strong&gt;&lt;br /&gt; Combat passive churn with intelligent retry strategies tuned by card bin, region, method, and more. Offers fine-grained control over retry algorithms, penalty budgets, and recovery transparency.&lt;br /&gt; &lt;em&gt;&lt;a href="https://docs.hyperswitch.io/about-hyperswitch/payments-modules/revenue-recovery"&gt;Read more&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Vault&lt;/strong&gt;&lt;br /&gt; A PCI-compliant vault service to store cards, tokens, wallets, and bank credentials. Provides a unified, secure, and reusable store of customer-linked payment methods.&lt;br /&gt; &lt;em&gt;&lt;a href="https://docs.hyperswitch.io/about-hyperswitch/payments-modules/vault"&gt;Read more&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Intelligent Routing&lt;/strong&gt;&lt;br /&gt; Route each transaction to the PSP with the highest predicted auth rate. Reduce retries, avoid downtime, and minimize latency while maximizing first attempt success.&lt;br /&gt; &lt;em&gt;&lt;a href="https://docs.hyperswitch.io/about-hyperswitch/payments-modules/intelligent-routing"&gt;Read more&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reconciliation&lt;/strong&gt;&lt;br /&gt; Automate 2-way and 3-way reconciliation with backdated support, staggered scheduling, and customizable outputs. Reduces manual ops effort and increases audit confidence.&lt;br /&gt; &lt;em&gt;&lt;a href="https://docs.hyperswitch.io/about-hyperswitch/payments-modules/reconciliation"&gt;Read more&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Alternate Payment Methods&lt;/strong&gt;&lt;br /&gt; Drop-in widgets for PayPal, Apple Pay, Google Pay, Samsung Pay, Pay by Bank, and BNPL providers like Klarna. Maximizes conversions with seamless one-click checkout.&lt;br /&gt; &lt;em&gt;&lt;a href="https://docs.hyperswitch.io/about-hyperswitch/payments-modules/enable-alternate-payment-method-widgets"&gt;Read more&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;h3&gt; Local Setup via Docker &lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# One-click local setup

git clone --depth 1 --branch latest https://github.com/juspay/hyperswitch

cd hyperswitch

scripts/setup.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;This script: &lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Detects Docker/Podman&lt;/li&gt; 
  &lt;li&gt;Offers multiple deployment profiles: 
   &lt;ul&gt; 
    &lt;li&gt;&lt;strong&gt;Standard&lt;/strong&gt;: App server + Control Center&lt;/li&gt; 
    &lt;li&gt;&lt;strong&gt;Full&lt;/strong&gt;: Includes monitoring + schedulers&lt;/li&gt; 
    &lt;li&gt;&lt;strong&gt;Minimal&lt;/strong&gt;: Standalone App server&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Provides access links when done&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;If you need further help, check out our &lt;a href="https://docs.hyperswitch.io/hyperswitch-open-source/overview/unified-local-setup-using-docker"&gt;video tutorial&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;👉 After setup, &lt;a href="https://docs.hyperswitch.io/hyperswitch-open-source/account-setup/using-hyperswitch-control-center#add-a-payment-processor"&gt;configure a connector&lt;/a&gt; and &lt;a href="https://docs.hyperswitch.io/hyperswitch-open-source/account-setup/test-a-payment"&gt;test a payment&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Hosted Sandbox (No Setup Required)&lt;/h3&gt; 
&lt;p&gt;Hyperswitch offers a fully hosted sandbox environment that requires no setup. You can explore the Control Center, configure payment connectors, and test payments directly from the UI.&lt;/p&gt; 
&lt;a href="https://app.hyperswitch.io"&gt; &lt;img src="https://github.com/juspay/hyperswitch/raw/main/docs/imgs/try-the-sandbox.png?raw=true" height="35" /&gt; &lt;/a&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt; What you can do in the Hosted Sandbox&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Access the full Control Center&lt;/li&gt; 
  &lt;li&gt;Configure payment connectors&lt;/li&gt; 
  &lt;li&gt;View logs, routing rules, and retry strategies&lt;/li&gt; 
  &lt;li&gt;Try payments directly from the UI&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;&lt;strong&gt;Cloud Deployment&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;You can deploy to AWS, GCP, or Azure using Helm or CDK scripts. Fastest path:&lt;/p&gt; 
&lt;p&gt;Click to deploy via AWS:&lt;/p&gt; 
&lt;a href="https://console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/new?stackName=HyperswitchBootstarp&amp;amp;templateURL=https://hyperswitch-synth.s3.eu-central-1.amazonaws.com/hs-starter-config.yaml"&gt; &lt;img src="https://github.com/juspay/hyperswitch/raw/main/docs/imgs/aws_button.png?raw=true" height="35" /&gt; &lt;/a&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Cloud Deployment Instructions&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Click the AWS deployment button above to launch the stack.&lt;/li&gt; 
  &lt;li&gt;Follow the guided steps in the AWS Console (approx. 30–45 mins).&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;✅ This setup provisions Hyperswitch on your cloud account using CloudFormation.&lt;/p&gt; 
 &lt;p&gt;📘 For full instructions and Helm-based deployments, check out the&lt;br /&gt; &lt;a href="https://docs.hyperswitch.io/hyperswitch-open-source/deploy-on-kubernetes-using-helm"&gt;Cloud Install Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#architectural-overview"&gt; &lt;h2 id="architectural-overview"&gt;Architectural Overview&lt;/h2&gt; &lt;/a&gt; 
&lt;img src="https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/features.png" /&gt; 
&lt;img src="https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/non-functional-features.png" /&gt; 
&lt;img src="https://raw.githubusercontent.com/juspay/hyperswitch/main/docs/imgs/hyperswitch-architecture-v1.png" /&gt; 
&lt;h2&gt;Why Hyperswitch?&lt;/h2&gt; 
&lt;p&gt;Hyperswitch is a commercial open-source payments stack purpose-built for scale, flexibility, and developer experience. Designed with a modular architecture, Hyperswitch lets you pick only the components you need—whether it’s routing, retries, vaulting, or observability—without vendor lock-in or bloated integrations.&lt;/p&gt; 
&lt;p&gt;Built in Rust for performance and reliability, Hyperswitch supports global payment methods (cards, wallets, BNPL, UPI, Pay by Bank), exposes smart routing and retry logic, and provides a visual workflow builder in the Control Center. Whether you're integrating a full payment suite or augmenting an existing stack with a single module, Hyperswitch meets you where you are.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;“Linux for Payments”&lt;/strong&gt; — Hyperswitch is a well-architected reference for teams who want to own their payments stack.&lt;/p&gt; 
&lt;p&gt;We believe in:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt; Embracing Payment Diversity:&lt;/strong&gt; Innovation comes from enabling choice—across payment methods, processors, and flows.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt; Open Source by Default:&lt;/strong&gt; Transparency drives trust and builds better, reusable software.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt; Community-Driven Development:&lt;/strong&gt; Our roadmap is shaped by real-world use cases and contributors.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt; Systems-Level Engineering:&lt;/strong&gt; We hold ourselves to a high bar for reliability, security, and performance.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt; Maximizing Value Creation:&lt;/strong&gt; For developers, customers, and partners alike.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt; Community-Driven, Enterprise-Tested:&lt;/strong&gt; Hyperswitch is built in the open with real-world feedback from developers and contributors, and maintained by Juspay, the team powering payment infrastructure for 400+ leading enterprises worldwide.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributors from around the world to help build Hyperswitch. Whether you're fixing bugs, improving documentation, or adding new features, your help is appreciated.&lt;/p&gt; 
&lt;p&gt;Please read our &lt;a href="https://github.com/juspay/hyperswitch/raw/main/docs/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;Join the conversation on &lt;a href="https://inviter.co/hyperswitch-slack"&gt;Slack&lt;/a&gt; or explore open issues on &lt;a href="https://github.com/juspay/hyperswitch/issues"&gt;GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#feature-requests"&gt; &lt;h2 id="feature-requests"&gt;Feature requests &amp;amp; Bugs&lt;/h2&gt; &lt;/a&gt; 
&lt;p&gt;For new product features, enhancements, roadmap discussions, or to share queries and ideas, visit our &lt;a href="https://github.com/juspay/hyperswitch/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For reporting a bug, please read the issue guidelines and search for &lt;a href="https://github.com/juspay/hyperswitch/issues"&gt;existing and closed issues&lt;/a&gt;. If your problem or idea is not addressed yet, please &lt;a href="https://github.com/juspay/hyperswitch/issues/new/choose"&gt;open a new issue&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#versioning"&gt; &lt;h2 id="versioning"&gt;Versioning&lt;/h2&gt; &lt;/a&gt; 
&lt;p&gt;Check the &lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#copyright-and-license"&gt; &lt;h2 id="copyright-and-license"&gt;Copyright and License&lt;/h2&gt; &lt;/a&gt; 
&lt;p&gt;This product is licensed under the &lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/LICENSE"&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://raw.githubusercontent.com/juspay/hyperswitch/main/#team-behind-hyperswitch"&gt; &lt;h2 id="team-behind-hyperswitch"&gt;Team behind Hyperswitch&lt;/h2&gt; &lt;/a&gt; 
&lt;p&gt;The core team of 150+ engineers building Hyperswitch. Keep up the great work! 🥂&lt;/p&gt; 
&lt;a href="https://github.com/juspay/hyperswitch/graphs/contributors"&gt; &lt;img src="https://contributors-img.web.app/image?repo=juspay/hyperswitch" alt="Contributors" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>TabbyML/tabby</title>
      <link>https://github.com/TabbyML/tabby</link>
      <description>&lt;p&gt;Self-hosted AI coding assistant&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;🐾 Tabby&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://tabby.tabbyml.com/docs/welcome/"&gt;📚 Docs&lt;/a&gt; • &lt;a href="https://links.tabbyml.com/join-slack"&gt;💬 Slack&lt;/a&gt; • &lt;a href="https://tabby.tabbyml.com/docs/roadmap/"&gt;🗺️ Roadmap&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/TabbyML/tabby/releases/latest"&gt;&lt;img src="https://shields.io/github/v/release/TabbyML/tabby" alt="latest release" /&gt;&lt;/a&gt; &lt;a href="https://makeapullrequest.com"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square" alt="PRs Welcome" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/tabbyml/tabby"&gt;&lt;img src="https://img.shields.io/docker/pulls/tabbyml/tabby" alt="Docker pulls" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/TabbyML/tabby"&gt;&lt;img src="https://codecov.io/gh/TabbyML/tabby/graph/badge.svg?token=WYVVH8MKK3" alt="codecov" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/TabbyML/tabby/main/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TabbyML/tabby/main/README-zh.md"&gt;简体中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TabbyML/tabby/main/README-ja.md"&gt;日本語&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Tabby is a self-hosted AI coding assistant, offering an open-source and on-premises alternative to GitHub Copilot. It boasts several key features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Self-contained, with no need for a DBMS or cloud service.&lt;/li&gt; 
 &lt;li&gt;OpenAPI interface, easy to integrate with existing infrastructure (e.g Cloud IDE).&lt;/li&gt; 
 &lt;li&gt;Supports consumer-grade GPUs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;a target="_blank" href="https://tabby.tabbyml.com"&gt;&lt;img alt="Open Live Demo" src="https://img.shields.io/badge/OPEN_LIVE_DEMO-blue?logo=xcode&amp;amp;style=for-the-badge&amp;amp;logoColor=green" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="Demo" src="https://user-images.githubusercontent.com/388154/230440226-9bc01d05-9f57-478b-b04d-81184eba14ca.gif" /&gt; &lt;/p&gt; 
&lt;h2&gt;🔥 What's New&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;07/02/2025&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.30.0"&gt;v0.30&lt;/a&gt; supports indexing GitLab Merge Request as Context!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;05/25/2025&lt;/strong&gt; 💡Interested in joining &lt;a href="https://links.tabbyml.com/pochi-github-readme"&gt;Agent&lt;/a&gt; private preview? DM in &lt;a href="https://x.com/getpochi"&gt;X&lt;/a&gt; for early waitlist approval!🎫&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;05/20/2025&lt;/strong&gt; Enhance Tabby with your own documentation📃 through REST APIs in &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.29.0"&gt;v0.29&lt;/a&gt;! 🎉&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;05/01/2025&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.28.0"&gt;v0.28&lt;/a&gt; transforming Answer Engine messages into persistent, shareable Pages&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;03/31/2025&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.27.0"&gt;v0.27&lt;/a&gt; released with a richer &lt;code&gt;@&lt;/code&gt; menu in the chat side panel.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;02/05/2025&lt;/strong&gt; LDAP Authentication and better notification for background jobs coming in Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.24.0"&gt;v0.24.0&lt;/a&gt;!✨&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;02/04/2025&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items/TabbyML.vscode-tabby/changelog"&gt;VSCode 1.20.0&lt;/a&gt; upgrade! @-mention files to add them as chat context, and edit inline with a new right-click option are available!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Archived&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;01/10/2025&lt;/strong&gt; Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.23.0"&gt;v0.23.0&lt;/a&gt; featuring enhanced code browser experience and chat side panel improvements!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;12/24/2024&lt;/strong&gt; Introduce &lt;strong&gt;Notification Box&lt;/strong&gt; in Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.22.0"&gt;v0.22.0&lt;/a&gt;!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;12/06/2024&lt;/strong&gt; Llamafile deployment integration and enhanced Answer Engine user experience are coming in Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.21.0"&gt;v0.21.0&lt;/a&gt;!🚀&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;11/10/2024&lt;/strong&gt; Switching between different backend chat models is supported in Answer Engine with Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.20.0"&gt;v0.20.0&lt;/a&gt;!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;10/30/2024&lt;/strong&gt; Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.19.0"&gt;v0.19.0&lt;/a&gt; featuring recent shared threads on the main page to improve their discoverability.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;07/09/2024&lt;/strong&gt; 🎉Announce &lt;a href="https://tabby.tabbyml.com/blog/2024/07/09/tabby-codestral/"&gt;Codestral integration in Tabby&lt;/a&gt;!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;07/05/2024&lt;/strong&gt; Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.13.0"&gt;v0.13.0&lt;/a&gt; introduces &lt;em&gt;&lt;strong&gt;Answer Engine&lt;/strong&gt;&lt;/em&gt;, a central knowledge engine for internal engineering teams. It seamlessly integrates with dev team's internal data, delivering reliable and precise answers to empower developers.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;06/13/2024&lt;/strong&gt; &lt;a href="https://marketplace.visualstudio.com/items/TabbyML.vscode-tabby/changelog"&gt;VSCode 1.7&lt;/a&gt; marks a significant milestone with a versatile Chat experience throughout your coding experience. Come and they the latest &lt;strong&gt;chat in side-panel&lt;/strong&gt; and &lt;strong&gt;editing via chat command&lt;/strong&gt;!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;06/10/2024&lt;/strong&gt; Latest 📃blogpost drop on &lt;a href="https://tabby.tabbyml.com/blog/2024/06/11/rank-fusion-in-tabby-code-completion/"&gt;an enhanced code context understanding&lt;/a&gt; in Tabby!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;06/06/2024&lt;/strong&gt; Tabby &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.12.0"&gt;v0.12.0&lt;/a&gt; release brings 🔗&lt;strong&gt;seamless integrations&lt;/strong&gt; (Gitlab SSO, Self-hosted GitHub/GitLab, etc.), to ⚙️&lt;strong&gt;flexible configurations&lt;/strong&gt; (HTTP API integration) and 🌐&lt;strong&gt;expanded capabilities&lt;/strong&gt; (repo-context in Code Browser)!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;05/22/2024&lt;/strong&gt; Tabby &lt;a href="https://marketplace.visualstudio.com/items?itemName=TabbyML.vscode-tabby"&gt;VSCode 1.6&lt;/a&gt; comes with &lt;strong&gt;multiple choices&lt;/strong&gt; in inline completion, and the &lt;strong&gt;auto-generated commit messages&lt;/strong&gt;🐱💻!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;05/11/2024&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.11.0"&gt;v0.11.0&lt;/a&gt; brings significant enterprise upgrades, including 📊&lt;strong&gt;storage usage&lt;/strong&gt; stats, 🔗&lt;strong&gt;GitHub &amp;amp; GitLab&lt;/strong&gt; integration, 📋&lt;strong&gt;Activities&lt;/strong&gt; page, and the long-awaited 🤖&lt;strong&gt;Ask Tabby&lt;/strong&gt; feature!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;04/22/2024&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.10.0"&gt;v0.10.0&lt;/a&gt; released, featuring the latest &lt;strong&gt;Reports&lt;/strong&gt; tab with team-wise analytics for Tabby usage.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;04/19/2024&lt;/strong&gt; 📣 Tabby now incorporates &lt;a href="https://github.com/TabbyML/tabby/pull/1844"&gt;locally relevant snippets&lt;/a&gt;(declarations from local LSP, and recently modified code) for code completion!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;04/17/2024&lt;/strong&gt; CodeGemma and CodeQwen model series have now been added to the &lt;a href="https://tabby.tabbyml.com/docs/models/"&gt;official registry&lt;/a&gt;!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;03/20/2024&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.9.1"&gt;v0.9&lt;/a&gt; released, highlighting a full feature admin UI.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;12/23/2023&lt;/strong&gt; Seamlessly &lt;a href="https://tabby.tabbyml.com/docs/installation/skypilot/"&gt;deploy Tabby on any cloud&lt;/a&gt; with &lt;a href="https://skypilot.readthedocs.io/en/latest/serving/sky-serve.html"&gt;SkyServe&lt;/a&gt; 🛫 from SkyPilot.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;12/15/2023&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.7.0"&gt;v0.7.0&lt;/a&gt; released with team management and secured access!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;10/15/2023&lt;/strong&gt; RAG-based code completion is enabled by detail in &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.3.0"&gt;v0.3.0&lt;/a&gt;🎉! Check out the &lt;a href="https://tabby.tabbyml.com/blog/2023/10/16/repository-context-for-code-completion/"&gt;blogpost&lt;/a&gt; explaining how Tabby utilizes repo-level context to get even smarter!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;11/27/2023&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.6.0"&gt;v0.6.0&lt;/a&gt; released!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;11/09/2023&lt;/strong&gt; &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.5.5"&gt;v0.5.5&lt;/a&gt; released! With a redesign of UI + performance improvement.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;10/24/2023&lt;/strong&gt; ⛳️ Major updates for Tabby IDE plugins across &lt;a href="https://tabby.tabbyml.com/docs/extensions"&gt;VSCode/Vim/IntelliJ&lt;/a&gt;!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;10/04/2023&lt;/strong&gt; Check out the &lt;a href="https://tabby.tabbyml.com/docs/models/"&gt;model directory&lt;/a&gt; for the latest models supported by Tabby.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;09/18/2023&lt;/strong&gt; Apple's M1/M2 Metal inference support has landed in &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.1.1"&gt;v0.1.1&lt;/a&gt;!&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;08/31/2023&lt;/strong&gt; Tabby's first stable release &lt;a href="https://github.com/TabbyML/tabby/releases/tag/v0.0.1"&gt;v0.0.1&lt;/a&gt; 🥳.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;08/28/2023&lt;/strong&gt; Experimental support for the &lt;a href="https://github.com/TabbyML/tabby/issues/370"&gt;CodeLlama 7B&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;08/24/2023&lt;/strong&gt; Tabby is now on &lt;a href="https://plugins.jetbrains.com/plugin/22379-tabby"&gt;JetBrains Marketplace&lt;/a&gt;!&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;👋 Getting Started&lt;/h2&gt; 
&lt;p&gt;You can find our documentation &lt;a href="https://tabby.tabbyml.com/docs/getting-started"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📚 &lt;a href="https://tabby.tabbyml.com/docs/installation/"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💻 &lt;a href="https://tabby.tabbyml.com/docs/extensions/"&gt;IDE/Editor Extensions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;⚙️ &lt;a href="https://tabby.tabbyml.com/docs/configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run Tabby in 1 Minute&lt;/h3&gt; 
&lt;p&gt;The easiest way to start a Tabby server is by using the following Docker command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -it \
  --gpus all -p 8080:8080 -v $HOME/.tabby:/data \
  tabbyml/tabby \
  serve --model StarCoder-1B --device cuda --chat-model Qwen2-1.5B-Instruct
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For additional options (e.g inference type, parallelism), please refer to the &lt;a href="https://tabbyml.github.io/tabby"&gt;documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;Full guide at &lt;a href="https://github.com/TabbyML/tabby/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;;&lt;/p&gt; 
&lt;h3&gt;Get the Code&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone --recurse-submodules https://github.com/TabbyML/tabby
cd tabby
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have already cloned the repository, you could run the &lt;code&gt;git submodule update --recursive --init&lt;/code&gt; command to fetch all submodules.&lt;/p&gt; 
&lt;h3&gt;Build&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Set up the Rust environment by following this &lt;a href="https://www.rust-lang.org/learn/get-started"&gt;tutorial&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install the required dependencies:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# For MacOS
brew install protobuf

# For Ubuntu / Debian
apt install protobuf-compiler libopenblas-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Install useful tools:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# For Ubuntu
apt install make sqlite3 graphviz
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Now, you can build Tabby by running the command &lt;code&gt;cargo build&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Start Hacking!&lt;/h3&gt; 
&lt;p&gt;... and don't forget to submit a &lt;a href="https://github.com/TabbyML/tabby/compare"&gt;Pull Request&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🌍 Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎤 &lt;a href="https://twitter.com/Tabby_ML"&gt;Twitter / X&lt;/a&gt; - engage with TabbyML for all things possible&lt;/li&gt; 
 &lt;li&gt;📚 &lt;a href="https://www.linkedin.com/company/tabbyml/"&gt;LinkedIn&lt;/a&gt; - follow for the latest from the community&lt;/li&gt; 
 &lt;li&gt;💌 &lt;a href="https://newsletter.tabbyml.com/archive"&gt;Newsletter&lt;/a&gt; - subscribe to unlock Tabby insights and secrets&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔆 Activity&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/e4ef0fbd12e586ef9ea7d72d1fb4f5c5b88d78d5.svg?sanitize=true" alt="Git Repository Activity" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h3&gt;🌟 Star History&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#tabbyml/tabby&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=tabbyml/tabby&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>astral-sh/uv</title>
      <link>https://github.com/astral-sh/uv</link>
      <description>&lt;p&gt;An extremely fast Python package and project manager, written in Rust.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;uv&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/astral-sh/uv"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/uv/main/assets/badge/v0.json" alt="uv" /&gt;&lt;/a&gt; &lt;a href="https://pypi.python.org/pypi/uv"&gt;&lt;img src="https://img.shields.io/pypi/v/uv.svg?sanitize=true" alt="image" /&gt;&lt;/a&gt; &lt;a href="https://pypi.python.org/pypi/uv"&gt;&lt;img src="https://img.shields.io/pypi/l/uv.svg?sanitize=true" alt="image" /&gt;&lt;/a&gt; &lt;a href="https://pypi.python.org/pypi/uv"&gt;&lt;img src="https://img.shields.io/pypi/pyversions/uv.svg?sanitize=true" alt="image" /&gt;&lt;/a&gt; &lt;a href="https://github.com/astral-sh/uv/actions"&gt;&lt;img src="https://github.com/astral-sh/uv/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Actions status" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/astral-sh"&gt;&lt;img src="https://img.shields.io/badge/Discord-%235865F2.svg?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An extremely fast Python package and project manager, written in Rust.&lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;picture align="center"&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/astral-sh/uv/assets/1309177/03aa9163-1c79-4a87-a31d-7a9311ed9310" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/astral-sh/uv/assets/1309177/629e59c0-9c6e-4013-9ad4-adb2bcf5080d" /&gt; 
  &lt;img alt="Shows a bar chart with benchmark results." src="https://github.com/astral-sh/uv/assets/1309177/629e59c0-9c6e-4013-9ad4-adb2bcf5080d" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;i&gt;Installing &lt;a href="https://trio.readthedocs.io/"&gt;Trio&lt;/a&gt;'s dependencies with a warm cache.&lt;/i&gt; &lt;/p&gt; 
&lt;h2&gt;Highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 A single tool to replace &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;pip-tools&lt;/code&gt;, &lt;code&gt;pipx&lt;/code&gt;, &lt;code&gt;poetry&lt;/code&gt;, &lt;code&gt;pyenv&lt;/code&gt;, &lt;code&gt;twine&lt;/code&gt;, &lt;code&gt;virtualenv&lt;/code&gt;, and more.&lt;/li&gt; 
 &lt;li&gt;⚡️ &lt;a href="https://github.com/astral-sh/uv/raw/main/BENCHMARKS.md"&gt;10-100x faster&lt;/a&gt; than &lt;code&gt;pip&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;🗂️ Provides &lt;a href="https://raw.githubusercontent.com/astral-sh/uv/main/#projects"&gt;comprehensive project management&lt;/a&gt;, with a &lt;a href="https://docs.astral.sh/uv/concepts/projects/layout#the-lockfile"&gt;universal lockfile&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;❇️ &lt;a href="https://raw.githubusercontent.com/astral-sh/uv/main/#scripts"&gt;Runs scripts&lt;/a&gt;, with support for &lt;a href="https://docs.astral.sh/uv/guides/scripts#declaring-script-dependencies"&gt;inline dependency metadata&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🐍 &lt;a href="https://raw.githubusercontent.com/astral-sh/uv/main/#python-versions"&gt;Installs and manages&lt;/a&gt; Python versions.&lt;/li&gt; 
 &lt;li&gt;🛠️ &lt;a href="https://raw.githubusercontent.com/astral-sh/uv/main/#tools"&gt;Runs and installs&lt;/a&gt; tools published as Python packages.&lt;/li&gt; 
 &lt;li&gt;🔩 Includes a &lt;a href="https://raw.githubusercontent.com/astral-sh/uv/main/#the-pip-interface"&gt;pip-compatible interface&lt;/a&gt; for a performance boost with a familiar CLI.&lt;/li&gt; 
 &lt;li&gt;🏢 Supports Cargo-style &lt;a href="https://docs.astral.sh/uv/concepts/projects/workspaces"&gt;workspaces&lt;/a&gt; for scalable projects.&lt;/li&gt; 
 &lt;li&gt;💾 Disk-space efficient, with a &lt;a href="https://docs.astral.sh/uv/concepts/cache"&gt;global cache&lt;/a&gt; for dependency deduplication.&lt;/li&gt; 
 &lt;li&gt;⏬ Installable without Rust or Python via &lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;pip&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;🖥️ Supports macOS, Linux, and Windows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;uv is backed by &lt;a href="https://astral.sh"&gt;Astral&lt;/a&gt;, the creators of &lt;a href="https://github.com/astral-sh/ruff"&gt;Ruff&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Install uv with our standalone installers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# On macOS and Linux.
curl -LsSf https://astral.sh/uv/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# On Windows.
powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, from &lt;a href="https://pypi.org/project/uv/"&gt;PyPI&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# With pip.
pip install uv
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Or pipx.
pipx install uv
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If installed via the standalone installer, uv can update itself to the latest version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uv self update
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://docs.astral.sh/uv/getting-started/installation/"&gt;installation documentation&lt;/a&gt; for details and alternative installation methods.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;uv's documentation is available at &lt;a href="https://docs.astral.sh/uv"&gt;docs.astral.sh/uv&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, the command line reference documentation can be viewed with &lt;code&gt;uv help&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Projects&lt;/h3&gt; 
&lt;p&gt;uv manages project dependencies and environments, with support for lockfiles, workspaces, and more, similar to &lt;code&gt;rye&lt;/code&gt; or &lt;code&gt;poetry&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ uv init example
Initialized project `example` at `/home/user/example`

$ cd example

$ uv add ruff
Creating virtual environment at: .venv
Resolved 2 packages in 170ms
   Built example @ file:///home/user/example
Prepared 2 packages in 627ms
Installed 2 packages in 1ms
 + example==0.1.0 (from file:///home/user/example)
 + ruff==0.5.0

$ uv run ruff check
All checks passed!

$ uv lock
Resolved 2 packages in 0.33ms

$ uv sync
Resolved 2 packages in 0.70ms
Audited 1 package in 0.02ms
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://docs.astral.sh/uv/guides/projects/"&gt;project documentation&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;uv also supports building and publishing projects, even if they're not managed with uv. See the &lt;a href="https://docs.astral.sh/uv/guides/publish/"&gt;publish guide&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h3&gt;Scripts&lt;/h3&gt; 
&lt;p&gt;uv manages dependencies and environments for single-file scripts.&lt;/p&gt; 
&lt;p&gt;Create a new script and add inline metadata declaring its dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ echo 'import requests; print(requests.get("https://astral.sh"))' &amp;gt; example.py

$ uv add --script example.py requests
Updated `example.py`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, run the script in an isolated virtual environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ uv run example.py
Reading inline script metadata from: example.py
Installed 5 packages in 12ms
&amp;lt;Response [200]&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://docs.astral.sh/uv/guides/scripts/"&gt;scripts documentation&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;p&gt;uv executes and installs command-line tools provided by Python packages, similar to &lt;code&gt;pipx&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Run a tool in an ephemeral environment using &lt;code&gt;uvx&lt;/code&gt; (an alias for &lt;code&gt;uv tool run&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ uvx pycowsay 'hello world!'
Resolved 1 package in 167ms
Installed 1 package in 9ms
 + pycowsay==0.0.0.2
  """

  ------------
&amp;lt; hello world! &amp;gt;
  ------------
   \   ^__^
    \  (oo)\_______
       (__)\       )\/\
           ||----w |
           ||     ||
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install a tool with &lt;code&gt;uv tool install&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ uv tool install ruff
Resolved 1 package in 6ms
Installed 1 package in 2ms
 + ruff==0.5.0
Installed 1 executable: ruff

$ ruff --version
ruff 0.5.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://docs.astral.sh/uv/guides/tools/"&gt;tools documentation&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h3&gt;Python versions&lt;/h3&gt; 
&lt;p&gt;uv installs Python and allows quickly switching between versions.&lt;/p&gt; 
&lt;p&gt;Install multiple Python versions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ uv python install 3.10 3.11 3.12
Searching for Python versions matching: Python 3.10
Searching for Python versions matching: Python 3.11
Searching for Python versions matching: Python 3.12
Installed 3 versions in 3.42s
 + cpython-3.10.14-macos-aarch64-none
 + cpython-3.11.9-macos-aarch64-none
 + cpython-3.12.4-macos-aarch64-none
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Download Python versions as needed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ uv venv --python 3.12.0
Using Python 3.12.0
Creating virtual environment at: .venv
Activate with: source .venv/bin/activate

$ uv run --python pypy@3.8 -- python --version
Python 3.8.16 (a9dbdca6fc3286b0addd2240f11d97d8e8de187a, Dec 29 2022, 11:45:30)
[PyPy 7.3.11 with GCC Apple LLVM 13.1.6 (clang-1316.0.21.2.5)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&amp;gt;&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use a specific Python version in the current directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ uv python pin 3.11
Pinned `.python-version` to `3.11`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://docs.astral.sh/uv/guides/install-python/"&gt;Python installation documentation&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h3&gt;The pip interface&lt;/h3&gt; 
&lt;p&gt;uv provides a drop-in replacement for common &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;pip-tools&lt;/code&gt;, and &lt;code&gt;virtualenv&lt;/code&gt; commands.&lt;/p&gt; 
&lt;p&gt;uv extends their interfaces with advanced features, such as dependency version overrides, platform-independent resolutions, reproducible resolutions, alternative resolution strategies, and more.&lt;/p&gt; 
&lt;p&gt;Migrate to uv without changing your existing workflows — and experience a 10-100x speedup — with the &lt;code&gt;uv pip&lt;/code&gt; interface.&lt;/p&gt; 
&lt;p&gt;Compile requirements into a platform-independent requirements file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ uv pip compile docs/requirements.in \
   --universal \
   --output-file docs/requirements.txt
Resolved 43 packages in 12ms
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a virtual environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ uv venv
Using Python 3.12.3
Creating virtual environment at: .venv
Activate with: source .venv/bin/activate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install the locked requirements:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ uv pip sync docs/requirements.txt
Resolved 43 packages in 11ms
Installed 43 packages in 208ms
 + babel==2.15.0
 + black==24.4.2
 + certifi==2024.7.4
 ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://docs.astral.sh/uv/pip/index/"&gt;pip interface documentation&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Platform support&lt;/h2&gt; 
&lt;p&gt;See uv's &lt;a href="https://docs.astral.sh/uv/reference/platforms/"&gt;platform support&lt;/a&gt; document.&lt;/p&gt; 
&lt;h2&gt;Versioning policy&lt;/h2&gt; 
&lt;p&gt;See uv's &lt;a href="https://docs.astral.sh/uv/reference/versioning/"&gt;versioning policy&lt;/a&gt; document.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We are passionate about supporting contributors of all levels of experience and would love to see you get involved in the project. See the &lt;a href="https://github.com/astral-sh/uv/raw/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h4&gt;How do you pronounce uv?&lt;/h4&gt; 
&lt;p&gt;It's pronounced as "you - vee" (&lt;a href="https://en.wikipedia.org/wiki/Help:IPA/English#Key"&gt;&lt;code&gt;/juː viː/&lt;/code&gt;&lt;/a&gt;)&lt;/p&gt; 
&lt;h4&gt;How should I stylize uv?&lt;/h4&gt; 
&lt;p&gt;Just "uv", please. See the &lt;a href="https://raw.githubusercontent.com/astral-sh/uv/main/STYLE.md#styling-uv"&gt;style guide&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;uv's dependency resolver uses &lt;a href="https://github.com/pubgrub-rs/pubgrub"&gt;PubGrub&lt;/a&gt; under the hood. We're grateful to the PubGrub maintainers, especially &lt;a href="https://github.com/Eh2406"&gt;Jacob Finkelman&lt;/a&gt;, for their support.&lt;/p&gt; 
&lt;p&gt;uv's Git implementation is based on &lt;a href="https://github.com/rust-lang/cargo"&gt;Cargo&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Some of uv's optimizations are inspired by the great work we've seen in &lt;a href="https://pnpm.io/"&gt;pnpm&lt;/a&gt;, &lt;a href="https://github.com/orogene/orogene"&gt;Orogene&lt;/a&gt;, and &lt;a href="https://github.com/oven-sh/bun"&gt;Bun&lt;/a&gt;. We've also learned a lot from Nathaniel J. Smith's &lt;a href="https://github.com/njsmith/posy"&gt;Posy&lt;/a&gt; and adapted its &lt;a href="https://github.com/njsmith/posy/tree/main/src/trampolines/windows-trampolines/posy-trampoline"&gt;trampoline&lt;/a&gt; for Windows support.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;uv is licensed under either of&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Apache License, Version 2.0, (&lt;a href="https://raw.githubusercontent.com/astral-sh/uv/main/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;MIT license (&lt;a href="https://raw.githubusercontent.com/astral-sh/uv/main/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href="https://opensource.org/licenses/MIT"&gt;https://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;at your option.&lt;/p&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in uv by you, as defined in the Apache-2.0 license, shall be dually licensed as above, without any additional terms or conditions.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a target="_blank" href="https://astral.sh" style="background:none"&gt; &lt;img src="https://raw.githubusercontent.com/astral-sh/uv/main/assets/svg/Astral.svg?sanitize=true" alt="Made by Astral" /&gt; &lt;/a&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>bevyengine/bevy</title>
      <link>https://github.com/bevyengine/bevy</link>
      <description>&lt;p&gt;A refreshingly simple data-driven game engine built in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href="https://bevy.org"&gt;&lt;img src="https://bevy.org/assets/bevy_logo_light_dark_and_dimmed.svg?sanitize=true" alt="Bevy" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/bevyengine/bevy#license"&gt;&lt;img src="https://img.shields.io/badge/license-MIT%2FApache-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/bevy"&gt;&lt;img src="https://img.shields.io/crates/v/bevy.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/bevy"&gt;&lt;img src="https://img.shields.io/crates/d/bevy.svg?sanitize=true" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://docs.rs/bevy/latest/bevy/"&gt;&lt;img src="https://docs.rs/bevy/badge.svg?sanitize=true" alt="Docs" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bevyengine/bevy/actions"&gt;&lt;img src="https://github.com/bevyengine/bevy/workflows/CI/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/bevy"&gt;&lt;img src="https://img.shields.io/discord/691052431525675048.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is Bevy?&lt;/h2&gt; 
&lt;p&gt;Bevy is a refreshingly simple data-driven game engine built in Rust. It is free and open-source forever!&lt;/p&gt; 
&lt;h2&gt;WARNING&lt;/h2&gt; 
&lt;p&gt;Bevy is still in the early stages of development. Important features are missing. Documentation is sparse. A new version of Bevy containing breaking changes to the API is released &lt;a href="https://bevy.org/news/bevy-0-6/#the-train-release-schedule"&gt;approximately once every 3 months&lt;/a&gt;. We provide &lt;a href="https://bevy.org/learn/migration-guides/"&gt;migration guides&lt;/a&gt;, but we can't guarantee migrations will always be easy. Use only if you are willing to work in this environment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;MSRV:&lt;/strong&gt; Bevy relies heavily on improvements in the Rust language and compiler. As a result, the Minimum Supported Rust Version (MSRV) is generally close to "the latest stable release" of Rust.&lt;/p&gt; 
&lt;h2&gt;Design Goals&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Capable&lt;/strong&gt;: Offer a complete 2D and 3D feature set&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: Easy for newbies to pick up, but infinitely flexible for power users&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Focused&lt;/strong&gt;: Data-oriented architecture using the Entity Component System paradigm&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modular&lt;/strong&gt;: Use only what you need. Replace what you don't like&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;: App logic should run quickly, and when possible, in parallel&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Productive&lt;/strong&gt;: Changes should compile quickly ... waiting isn't fun&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://bevy.org"&gt;Features&lt;/a&gt;:&lt;/strong&gt; A quick overview of Bevy's features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://bevy.org/news/"&gt;News&lt;/a&gt;&lt;/strong&gt;: A development blog that covers our progress, plans and shiny new features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://bevy.org/learn/quick-start/introduction"&gt;Quick Start Guide&lt;/a&gt;:&lt;/strong&gt; Bevy's official Quick Start Guide. The best place to start learning Bevy.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.rs/bevy"&gt;Bevy Rust API Docs&lt;/a&gt;:&lt;/strong&gt; Bevy's Rust API docs, which are automatically generated from the doc comments in this repo.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/bevyengine/bevy/tree/latest/examples"&gt;Official Examples&lt;/a&gt;:&lt;/strong&gt; Bevy's dedicated, runnable examples, which are great for digging into specific concepts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://bevy.org/assets/#learning"&gt;Community-Made Learning Resources&lt;/a&gt;&lt;/strong&gt;: More tutorials, documentation, and examples made by the Bevy community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Before contributing or participating in discussions with the community, you should familiarize yourself with our &lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/CODE_OF_CONDUCT.md"&gt;&lt;strong&gt;Code of Conduct&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://discord.gg/bevy"&gt;Discord&lt;/a&gt;:&lt;/strong&gt; Bevy's official discord server.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://reddit.com/r/bevy"&gt;Reddit&lt;/a&gt;:&lt;/strong&gt; Bevy's official subreddit.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/bevyengine/bevy/discussions"&gt;GitHub Discussions&lt;/a&gt;:&lt;/strong&gt; The best place for questions about Bevy, answered right here!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://bevy.org/assets/"&gt;Bevy Assets&lt;/a&gt;:&lt;/strong&gt; A collection of awesome Bevy projects, tools, plugins and learning materials.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;If you'd like to help build Bevy, check out the &lt;strong&gt;&lt;a href="https://bevy.org/learn/contribute/introduction"&gt;Contributor's Guide&lt;/a&gt;&lt;/strong&gt;. For simple problems, feel free to &lt;a href="https://github.com/bevyengine/bevy/issues"&gt;open an issue&lt;/a&gt; or &lt;a href="https://github.com/bevyengine/bevy/pulls"&gt;PR&lt;/a&gt; and tackle it yourself!&lt;/p&gt; 
&lt;p&gt;For more complex architecture decisions and experimental mad science, please open an &lt;a href="https://github.com/bevyengine/rfcs"&gt;RFC&lt;/a&gt; (Request For Comments) so we can brainstorm together effectively!&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;We recommend checking out the &lt;a href="https://bevy.org/learn/quick-start/introduction"&gt;Quick Start Guide&lt;/a&gt; for a brief introduction.&lt;/p&gt; 
&lt;p&gt;Follow the &lt;a href="https://bevy.org/learn/quick-start/getting-started/setup"&gt;Setup guide&lt;/a&gt; to ensure your development environment is set up correctly. Once set up, you can quickly try out the &lt;a href="https://github.com/bevyengine/bevy/tree/latest/examples"&gt;examples&lt;/a&gt; by cloning this repo and running the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Switch to the correct version (latest release, default is main development branch)
git checkout latest
# Runs the "breakout" example
cargo run --example breakout
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To draw a window with standard functionality enabled, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;use bevy::prelude::*;

fn main() {
    App::new()
        .add_plugins(DefaultPlugins)
        .run();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fast Compiles&lt;/h3&gt; 
&lt;p&gt;Bevy can be built just fine using default configuration on stable Rust. However for really fast iterative compiles, you should enable the "fast compiles" setup by &lt;a href="https://bevy.org/learn/quick-start/getting-started/setup"&gt;following the instructions here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/docs/cargo_features.md"&gt;Bevy Cargo Features&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;This &lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/docs/cargo_features.md"&gt;list&lt;/a&gt; outlines the different cargo features supported by Bevy. These allow you to customize the Bevy feature set for your use-case.&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;Bevy is the result of the hard work of many people. A huge thanks to all Bevy contributors, the many open source projects that have come before us, the &lt;a href="https://arewegameyet.rs/"&gt;Rust gamedev ecosystem&lt;/a&gt;, and the many libraries we build on.&lt;/p&gt; 
&lt;p&gt;A huge thanks to Bevy's &lt;a href="https://bevy.org"&gt;generous sponsors&lt;/a&gt;. Bevy will always be free and open source, but it isn't free to make. Please consider &lt;a href="https://bevy.org/donate/"&gt;sponsoring our work&lt;/a&gt; if you like what we're building.&lt;/p&gt; 
&lt;!-- This next line need to stay exactly as is. It is required for BrowserStack sponsorship. --&gt; 
&lt;p&gt;This project is tested with BrowserStack.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Bevy is free, open source and permissively licensed! Except where noted (below and/or in individual files), all code in this repository is dual-licensed under either:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MIT License (&lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href="http://opensource.org/licenses/MIT"&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Apache License, Version 2.0 (&lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;at your option. This means you can select the license you prefer! This dual-licensing approach is the de-facto standard in the Rust ecosystem and there are &lt;a href="https://github.com/bevyengine/bevy/issues/2373"&gt;very good reasons&lt;/a&gt; to include both.&lt;/p&gt; 
&lt;p&gt;Some of the engine's code carries additional copyright notices and license terms due to their external origins. These are generally BSD-like, but exact details vary by crate: If the README of a crate contains a 'License' header (or similar), the additional copyright notices and license terms applicable to that crate will be listed. The above licensing requirement still applies to contributions to those crates, and sections of those crates will carry those license terms. The &lt;a href="https://doc.rust-lang.org/cargo/reference/manifest.html#the-license-and-license-file-fields"&gt;license&lt;/a&gt; field of each crate will also reflect this.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/assets"&gt;assets&lt;/a&gt; included in this repository (for our &lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/examples/README.md"&gt;examples&lt;/a&gt;) typically fall under different open licenses. These will not be included in your game (unless copied in by you), and they are not distributed in the published bevy crates. See &lt;a href="https://raw.githubusercontent.com/bevyengine/bevy/main/CREDITS.md"&gt;CREDITS.md&lt;/a&gt; for the details of the licenses of those files.&lt;/p&gt; 
&lt;h3&gt;Your contributions&lt;/h3&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mainmatter/100-exercises-to-learn-rust</title>
      <link>https://github.com/mainmatter/100-exercises-to-learn-rust</link>
      <description>&lt;p&gt;A self-paced course to learn Rust, one exercise at a time.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Learn Rust, one exercise at a time&lt;/h1&gt; 
&lt;p&gt;You've heard about Rust, but you never had the chance to try it out?&lt;br /&gt; This course is for you!&lt;/p&gt; 
&lt;p&gt;You'll learn Rust by solving 100 exercises.&lt;br /&gt; You'll go from knowing nothing about Rust to being able to start writing your own programs, one exercise at a time.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This course has been written by &lt;a href="https://mainmatter.com/rust-consulting/"&gt;Mainmatter&lt;/a&gt;.&lt;br /&gt; It's one of the trainings in &lt;a href="https://mainmatter.com/services/workshops/rust/"&gt;our portfolio of Rust workshops&lt;/a&gt;.&lt;br /&gt; Check out our &lt;a href="https://mainmatter.com/rust-consulting/"&gt;landing page&lt;/a&gt; if you're looking for Rust consulting or training!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Go to &lt;a href="https://rust-exercises.com"&gt;rust-exercises.com&lt;/a&gt; and follow the instructions there to get started with the course.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Rust&lt;/strong&gt; (follow instructions &lt;a href="https://www.rust-lang.org/tools/install"&gt;here&lt;/a&gt;).&lt;br /&gt; If &lt;code&gt;rustup&lt;/code&gt; is already installed on your system, run &lt;code&gt;rustup update&lt;/code&gt; (or another appropriate command depending on how you installed Rust on your system) to make sure you're running on the latest stable version.&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;(Optional but recommended)&lt;/em&gt; An IDE with Rust autocompletion support. We recommend one of the following: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.jetbrains.com/rust/"&gt;RustRover&lt;/a&gt;;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://code.visualstudio.com"&gt;Visual Studio Code&lt;/a&gt; with the &lt;a href="https://marketplace.visualstudio.com/items?itemName=matklad.rust-analyzer"&gt;&lt;code&gt;rust-analyzer&lt;/code&gt;&lt;/a&gt; extension.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Solutions&lt;/h2&gt; 
&lt;p&gt;You can find the solutions to the exercises in the &lt;a href="https://github.com/mainmatter/100-exercises-to-learn-rust/tree/solutions"&gt;&lt;code&gt;solutions&lt;/code&gt; branch&lt;/a&gt; of this repository.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Copyright © 2024- Mainmatter GmbH (&lt;a href="https://mainmatter.com"&gt;https://mainmatter.com&lt;/a&gt;), released under the &lt;a href="https://creativecommons.org/licenses/by-nc/4.0/"&gt;Creative Commons Attribution-NonCommercial 4.0 International license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bottlerocket-os/bottlerocket</title>
      <link>https://github.com/bottlerocket-os/bottlerocket</link>
      <description>&lt;p&gt;An operating system designed for hosting containers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bottlerocket OS&lt;/h1&gt; 
&lt;p&gt;Welcome to Bottlerocket!&lt;/p&gt; 
&lt;p&gt;Bottlerocket is a free and open-source Linux-based operating system meant for hosting containers.&lt;/p&gt; 
&lt;p&gt;To learn more about Bottlerocket, visit the &lt;a href="https://bottlerocket.dev/"&gt;official Bottlerocket website and documentation&lt;/a&gt;. Otherwise, if you’re ready to jump right in, read one of our setup guides for running Bottlerocket in &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/QUICKSTART-EKS.md"&gt;Amazon EKS&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/QUICKSTART-ECS.md"&gt;Amazon ECS&lt;/a&gt;, or &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/QUICKSTART-VMWARE.md"&gt;VMware&lt;/a&gt;. If you're interested in running Bottlerocket on bare metal servers, please refer to the &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/PROVISIONING-METAL.md"&gt;provisioning guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;Bottlerocket focuses on security and maintainability, providing a reliable, consistent, and safe platform for container-based workloads. This is a reflection of what we've learned building operating systems and services at Amazon. You can read more about what drives us in &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/CHARTER.md"&gt;our charter&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The base operating system has just what you need to run containers reliably, and is built with standard open-source components. Bottlerocket-specific additions focus on reliable updates and on the API. Instead of making configuration changes manually, you can change settings with an API call, and these changes are automatically migrated through updates.&lt;/p&gt; 
&lt;p&gt;Some notable features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#api"&gt;API access&lt;/a&gt; for configuring your system, with secure out-of-band &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#exploration"&gt;access methods&lt;/a&gt; when you need them.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#updates"&gt;Updates&lt;/a&gt; based on partition flips, for fast and reliable system updates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#settings"&gt;Modeled configuration&lt;/a&gt; that's automatically migrated through updates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#security"&gt;Security&lt;/a&gt; as a top priority.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Participate in the Community&lt;/h2&gt; 
&lt;p&gt;There are many ways to take part in the Bottlerocket community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.meetup.com/bottlerocket-community/"&gt;Join us on Meetup&lt;/a&gt; to hear about the latest Bottlerocket (virtual/in-person) events and community meetings. Community meetings are typically every other week.&lt;/p&gt; &lt;p&gt;Details can be found under the &lt;a href="https://www.meetup.com/bottlerocket-community/events/"&gt;Events section on Meetup&lt;/a&gt;, and you will receive email notifications if you become a member of the Meetup group. (It's free to join!)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/bottlerocket-os/bottlerocket/discussions"&gt;Start or join a discussion&lt;/a&gt; if you have questions about Bottlerocket.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you're interested in contributing, thank you! Please see our &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/CONTRIBUTING.md"&gt;contributor's guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact us&lt;/h2&gt; 
&lt;p&gt;If you find a security issue, please &lt;a href="https://github.com/bottlerocket-os/bottlerocket/security/policy"&gt;contact our security team&lt;/a&gt; rather than opening an issue.&lt;/p&gt; 
&lt;p&gt;We use GitHub issues to track other bug reports and feature requests. You can look at &lt;a href="https://github.com/bottlerocket-os/bottlerocket/issues"&gt;existing issues&lt;/a&gt; to see whether your concern is already known.&lt;/p&gt; 
&lt;p&gt;If not, you can select from a few templates and get some guidance on the type of information that would be most helpful. &lt;a href="https://github.com/bottlerocket-os/bottlerocket/issues/new/choose"&gt;Contact us with a new issue here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We don't have other communication channels set up quite yet, but don't worry about making an issue or a discussion thread! You can let us know about things that seem difficult, or even ways you might like to help.&lt;/p&gt; 
&lt;h2&gt;Variants&lt;/h2&gt; 
&lt;p&gt;To start, we're focusing on the use of Bottlerocket as a host OS in AWS EKS Kubernetes clusters and Amazon ECS clusters. We’re excited to get early feedback and to continue working on more use cases!&lt;/p&gt; 
&lt;p&gt;Bottlerocket is architected such that different cloud environments and container orchestrators can be supported in the future. A build of Bottlerocket that supports different features or integration characteristics is known as a 'variant'. The artifacts of a build will include the architecture and variant name. For example, an &lt;code&gt;x86_64&lt;/code&gt; build of the &lt;code&gt;aws-k8s-1.32&lt;/code&gt; variant will produce an image named &lt;code&gt;bottlerocket-aws-k8s-1.32-x86_64-&amp;lt;version&amp;gt;-&amp;lt;commit&amp;gt;.img&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The following variants support EKS, as described above:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;aws-k8s-1.28&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aws-k8s-1.29&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aws-k8s-1.30&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aws-k8s-1.31&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aws-k8s-1.32&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aws-k8s-1.33&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aws-k8s-1.34&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aws-k8s-1.28-nvidia&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aws-k8s-1.29-nvidia&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aws-k8s-1.30-nvidia&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aws-k8s-1.31-nvidia&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aws-k8s-1.32-nvidia&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aws-k8s-1.33-nvidia&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aws-k8s-1.34-nvidia&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following variants support ECS:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;aws-ecs-2&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aws-ecs-2-nvidia&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We also have variants that are designed to be Kubernetes worker nodes in VMware:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;vmware-k8s-1.28&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vmware-k8s-1.29&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vmware-k8s-1.30&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vmware-k8s-1.31&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vmware-k8s-1.32&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vmware-k8s-1.33&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vmware-k8s-1.34&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following variants are no longer supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All Kubernetes variants using Kubernetes 1.27 and earlier&lt;/li&gt; 
 &lt;li&gt;VMware variants using Kubernetes 1.27 and earlier&lt;/li&gt; 
 &lt;li&gt;Bare metal variants for Kubernetes&lt;/li&gt; 
 &lt;li&gt;ECS-1 variants&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We recommend users replace nodes running these variants with the &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/variants/"&gt;latest variant compatible with their cluster&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Architectures&lt;/h2&gt; 
&lt;p&gt;Our supported architectures include &lt;code&gt;x86_64&lt;/code&gt; and &lt;code&gt;aarch64&lt;/code&gt; (written as &lt;code&gt;arm64&lt;/code&gt; in some contexts).&lt;/p&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;🚶&lt;/span&gt; &lt;span&gt;🏃&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;Bottlerocket is best used with a container orchestrator. To get started with Kubernetes in Amazon EKS, please see &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/QUICKSTART-EKS.md"&gt;QUICKSTART-EKS&lt;/a&gt;. To get started with Kubernetes in VMware, please see &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/QUICKSTART-VMWARE.md"&gt;QUICKSTART-VMWARE&lt;/a&gt;. To get started with Amazon ECS, please see &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/QUICKSTART-ECS.md"&gt;QUICKSTART-ECS&lt;/a&gt;. These guides describe:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;how to set up a cluster with the orchestrator, so your Bottlerocket instance can run containers&lt;/li&gt; 
 &lt;li&gt;how to launch a Bottlerocket instance in EC2 or VMware&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To see how to provision Bottlerocket on bare metal, see &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/PROVISIONING-METAL.md"&gt;PROVISIONING-METAL&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To build your own Bottlerocket images, please see &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/BUILDING.md"&gt;BUILDING&lt;/a&gt;. It describes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;how to build an image&lt;/li&gt; 
 &lt;li&gt;how to register an EC2 AMI from an image&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To publish your built Bottlerocket images, please see &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/PUBLISHING.md"&gt;PUBLISHING&lt;/a&gt;. It describes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;how to make TUF repos including your image&lt;/li&gt; 
 &lt;li&gt;how to copy your AMI across regions&lt;/li&gt; 
 &lt;li&gt;how to mark your AMIs public or grant access to specific accounts&lt;/li&gt; 
 &lt;li&gt;how to make your AMIs discoverable using &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html"&gt;SSM parameters&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Exploration&lt;/h2&gt; 
&lt;p&gt;To improve security, there's no SSH server in a Bottlerocket image, and not even a shell.&lt;/p&gt; 
&lt;p&gt;Don't panic!&lt;/p&gt; 
&lt;p&gt;There are a couple out-of-band access methods you can use to explore Bottlerocket like you would a typical Linux system. Either option will give you a shell within Bottlerocket. From there, you can &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#settings"&gt;change settings&lt;/a&gt;, manually &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#updates"&gt;update Bottlerocket&lt;/a&gt;, debug problems, and generally explore.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; These methods require that your instance has permission to access the ECR repository where these containers live; the appropriate policy to add to your instance's IAM role is &lt;code&gt;AmazonEC2ContainerRegistryReadOnly&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Control container&lt;/h3&gt; 
&lt;p&gt;Bottlerocket has a &lt;a href="https://github.com/bottlerocket-os/bottlerocket-control-container"&gt;"control" container&lt;/a&gt;, enabled by default, that runs outside of the orchestrator in a separate instance of containerd. This container runs the &lt;a href="https://github.com/aws/amazon-ssm-agent"&gt;AWS SSM agent&lt;/a&gt; that lets you run commands, or start shell sessions, on Bottlerocket instances in EC2. (You can easily replace this control container with your own just by changing the URI; see &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#settings"&gt;Settings&lt;/a&gt;.)&lt;/p&gt; 
&lt;p&gt;In AWS, you need to give your instance the SSM role for this to work; see the &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/QUICKSTART-EKS.md#enabling-ssm"&gt;setup guide&lt;/a&gt;. Outside of AWS, you can use &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances.html"&gt;AWS Systems Manager for hybrid environments&lt;/a&gt;. There's more detail about hybrid environments in the &lt;a href="https://github.com/bottlerocket-os/bottlerocket-control-container/#connecting-to-aws-systems-manager-ssm"&gt;control container documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Once the instance is started, you can start a session:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go to AWS SSM's &lt;a href="https://console.aws.amazon.com/systems-manager/session-manager/sessions"&gt;Session Manager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Select "Start session" and choose your Bottlerocket instance&lt;/li&gt; 
 &lt;li&gt;Select "Start session" again to get a shell&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you prefer a command-line tool, you can start a session with a recent &lt;a href="https://aws.amazon.com/cli/"&gt;AWS CLI&lt;/a&gt; and the &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html"&gt;session-manager-plugin&lt;/a&gt;. Then you'd be able to start a session using only your instance ID, like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;aws ssm start-session --target INSTANCE_ID --region REGION_CODE
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the &lt;a href="https://github.com/bottlerocket-os/bottlerocket-control-container"&gt;default control container&lt;/a&gt;, you can make &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#api"&gt;API calls&lt;/a&gt; to configure and manage your Bottlerocket host. To do even more, read the next section about the &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#admin-container"&gt;admin container&lt;/a&gt;. You can access the admin container from the control container like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;enter-admin-container
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Admin container&lt;/h3&gt; 
&lt;p&gt;Bottlerocket has an &lt;a href="https://github.com/bottlerocket-os/bottlerocket-admin-container"&gt;administrative container&lt;/a&gt;, disabled by default, that runs outside of the orchestrator in a separate instance of containerd. This container has an SSH server that lets you log in as &lt;code&gt;ec2-user&lt;/code&gt; using your EC2-registered SSH key. Outside of AWS, you can &lt;a href="https://github.com/bottlerocket-os/bottlerocket-admin-container#authenticating-with-the-admin-container"&gt;pass in your own SSH keys&lt;/a&gt;. (You can easily replace this admin container with your own just by changing the URI; see &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#settings"&gt;Settings&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To enable the container, you can change the setting in user data when starting Bottlerocket, for example EC2 instance user data:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[settings.host-containers.admin]
enabled = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If Bottlerocket is already running, you can enable the admin container from the default &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#control-container"&gt;control container&lt;/a&gt; like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;enable-admin-container
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or you can start an interactive session immediately like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;enter-admin-container
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're using a custom control container, or want to make the API calls directly, you can enable the admin container like this instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;apiclient set host-containers.admin.enabled=true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once you've enabled the admin container, you can either access it through SSH or execute commands from the control container like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;apiclient exec admin bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once you're in the admin container, you can run &lt;code&gt;sheltie&lt;/code&gt; to get a full root shell in the Bottlerocket host. Be careful; while you can inspect and change even more as root, Bottlerocket's filesystem and dm-verity setup will prevent most changes from persisting over a restart - see &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#security"&gt;Security&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Updates&lt;/h2&gt; 
&lt;p&gt;Rather than a package manager that updates individual pieces of software, Bottlerocket downloads a full filesystem image and reboots into it. It can automatically roll back if boot failures occur, and workload failures can trigger manual rollbacks.&lt;/p&gt; 
&lt;p&gt;The update process uses images secured by &lt;a href="https://theupdateframework.github.io/"&gt;TUF&lt;/a&gt;. For more details, see the &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/sources/updater/"&gt;update system documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Update methods&lt;/h3&gt; 
&lt;p&gt;There are several ways of updating your Bottlerocket hosts. We provide tools for automatically updating hosts, as well as an API for direct control of updates.&lt;/p&gt; 
&lt;h4&gt;Automated updates&lt;/h4&gt; 
&lt;p&gt;For EKS variants of Bottlerocket, we recommend using the &lt;a href="https://github.com/bottlerocket-os/bottlerocket-update-operator"&gt;Bottlerocket update operator&lt;/a&gt; for automated updates.&lt;/p&gt; 
&lt;p&gt;For the ECS variant of Bottlerocket, we recommend using the &lt;a href="https://github.com/bottlerocket-os/bottlerocket-ecs-updater/"&gt;Bottlerocket ECS updater&lt;/a&gt; for automated updates.&lt;/p&gt; 
&lt;h4&gt;Update API&lt;/h4&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#api"&gt;Bottlerocket API&lt;/a&gt; includes methods for checking and starting system updates. You can read more about the update APIs in our &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/sources/updater/README.md#update-api"&gt;update system documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;apiclient knows how to handle those update APIs for you, and you can run it from the &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#control-container"&gt;control&lt;/a&gt; or &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#admin-container"&gt;admin&lt;/a&gt; containers.&lt;/p&gt; 
&lt;p&gt;To see what updates are available:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;apiclient update check
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If an update is available, it will show up in the &lt;code&gt;chosen_update&lt;/code&gt; field. The &lt;code&gt;available_updates&lt;/code&gt; field will show the full list of available versions, including older versions, because Bottlerocket supports safely rolling back.&lt;/p&gt; 
&lt;p&gt;To apply the latest update:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;apiclient update apply
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The next time you reboot, you'll start up in the new version, and system configuration will be automatically &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/sources/api/migration/"&gt;migrated&lt;/a&gt;. To reboot right away:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;apiclient reboot
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're confident about updating, the &lt;code&gt;apiclient update apply&lt;/code&gt; command has &lt;code&gt;--check&lt;/code&gt; and &lt;code&gt;--reboot&lt;/code&gt; flags to combine the above actions, so you can accomplish all of the above steps like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;apiclient update apply --check --reboot
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/sources/api/apiclient/"&gt;apiclient documentation&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Update rollback&lt;/h3&gt; 
&lt;p&gt;The system will automatically roll back if it's unable to boot. If the update is not functional for a given container workload, you can do a manual rollback:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;signpost rollback-to-inactive
reboot
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This doesn't require any external communication, so it's quicker than &lt;code&gt;apiclient&lt;/code&gt;, and it's made to be as reliable as possible.&lt;/p&gt; 
&lt;h2&gt;Settings&lt;/h2&gt; 
&lt;p&gt;Here we'll describe the settings you can configure on your Bottlerocket instance, and how to do it.&lt;/p&gt; 
&lt;p&gt;(API endpoints are defined in our &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/api/openapi.yaml"&gt;OpenAPI spec&lt;/a&gt; if you want more detail.)&lt;/p&gt; 
&lt;h3&gt;Interacting with settings&lt;/h3&gt; 
&lt;h4&gt;Using the API client&lt;/h4&gt; 
&lt;p&gt;You can see the current settings with an API request:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;apiclient get settings
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will return all of the current settings in JSON format. For example, here's an abbreviated response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{"motd": "...", {"kubernetes": {}}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can change settings like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;apiclient set motd="hi there" kubernetes.node-labels.environment=test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use a JSON input mode to help change many related settings at once, and a "raw" mode if you want more control over how the settings are committed and applied to the system. See the &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/api/apiclient/"&gt;apiclient README&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h4&gt;Using user data&lt;/h4&gt; 
&lt;p&gt;If you know what settings you want to change when you start your Bottlerocket instance, you can send them in the user data.&lt;/p&gt; 
&lt;p&gt;In user data, we structure the settings in TOML form to make things a bit simpler. Here's the user data to change the message of the day setting, as we did in the last section:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[settings]
motd = "my own value!"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your user data is over the size limit of the platform (e.g. 16KiB for EC2) you can compress the contents with gzip. (With &lt;a href="https://aws.amazon.com/cli/"&gt;aws-cli&lt;/a&gt;, you can use &lt;code&gt;--user-data fileb:///path/to/gz-file&lt;/code&gt; to pass binary data.)&lt;/p&gt; 
&lt;h3&gt;Description of settings&lt;/h3&gt; 
&lt;p&gt;Here we'll describe each setting you can change.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can see the default values (for any settings that are not generated at runtime) by looking in the &lt;code&gt;defaults.d&lt;/code&gt; directory for a variant, for example &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/sources/models/src/aws-ecs-2/defaults.d/"&gt;aws-ecs-2&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you're sending settings to the API, or receiving settings from the API, they're in a structured JSON format. This allows modification of any number of keys at once. It also lets us ensure that they fit the definition of the Bottlerocket data model - requests with invalid settings won't even parse correctly, helping ensure safety.&lt;/p&gt; 
&lt;p&gt;Here, however, we'll use the shortcut "dotted key" syntax for referring to keys. This is used in some API endpoints with less-structured requests or responses. It's also more compact for our needs here.&lt;/p&gt; 
&lt;p&gt;In this format, "settings.kubernetes.cluster-name" refers to the same key as in the JSON &lt;code&gt;{"settings": {"kubernetes": {"cluster-name": "value"}}}&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/"&gt;bottlerocket.dev&lt;/a&gt; now contains a complete, versioned setting reference. This documents retains the headings below for existing link and bookmark compatability. Please update your bookmarks and check out &lt;a href="https://bottlerocket.dev/"&gt;bottlerocket.dev&lt;/a&gt; for future updates to the setting reference.&lt;/p&gt; 
&lt;h4&gt;Top-level settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/motd/"&gt;&lt;code&gt;settings.motd&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Kubernetes settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/kubernetes/"&gt;&lt;code&gt;settings.kubernetes.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Amazon ECS settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/ecs/"&gt;&lt;code&gt;settings.ecs.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;CloudFormation signal helper settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/cloudformation/"&gt;&lt;code&gt;settings.cloudformation.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Auto Scaling group settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/autoscaling/"&gt;&lt;code&gt;settings.autoscaling.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;OCI Hooks settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/oci-hooks/"&gt;&lt;code&gt;settings.oci-hooks.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;OCI Defaults settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/oci-defaults/"&gt;&lt;code&gt;settings.oci-defaults.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h5&gt;OCI Defaults: Capabilities&lt;/h5&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/oci-defaults/"&gt;"Capabilities Settings" section in the &lt;code&gt;settings.oci-defaults.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h5&gt;OCI Defaults: Resource Limits&lt;/h5&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/oci-defaults/"&gt;"Resource Limits Settings" section in the &lt;code&gt;settings.oci-defaults.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Container image registry settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/container-registry/"&gt;&lt;code&gt;settings.container-registry.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Container runtime settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/container-runtime/"&gt;&lt;code&gt;settings.container-runtime.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Updates settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/updates/"&gt;&lt;code&gt;settings.updates.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Network settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/network/"&gt;&lt;code&gt;settings.network.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h5&gt;Proxy settings&lt;/h5&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/network/"&gt;"Proxy Settings" section in the &lt;code&gt;settings.networks.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Metrics settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/metrics/"&gt;&lt;code&gt;settings.metrics.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Time settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/ntp/"&gt;&lt;code&gt;settings.ntp.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Kernel settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/kernel/"&gt;&lt;code&gt;settings.kernel.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Boot-related settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/boot/"&gt;&lt;code&gt;settings.boot.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Custom CA certificates settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/pki/"&gt;&lt;code&gt;settings.pki.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Host containers settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/host-containers/"&gt;&lt;code&gt;settings.host-containers.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h5&gt;Custom host containers&lt;/h5&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/concepts/host-containers/"&gt;Host Containers documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Bootstrap commands settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/bootstrap-commands/"&gt;&lt;code&gt;settings.bootstrap-commands.*&lt;/code&gt; reference&lt;/a&gt; as well as the &lt;a href="https://bottlerocket.dev/en/os/latest/#/concepts/bootstrap-commands/"&gt;Bootstrap Commands documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Bootstrap containers settings&lt;/h4&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/bootstrap-containers/"&gt;&lt;code&gt;settings.bootstrap-containers.*&lt;/code&gt; reference&lt;/a&gt; as well as the &lt;a href="https://bottlerocket.dev/en/os/latest/#/concepts/bootstrap-containers/"&gt;Bootstrap Containers documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;Mount propagations in bootstrap and superpowered containers&lt;/h5&gt; 
&lt;p&gt;Both bootstrap and superpowered host containers are configured with the &lt;code&gt;/.bottlerocket/rootfs/mnt&lt;/code&gt; bind mount that points to &lt;code&gt;/mnt&lt;/code&gt; in the host, which itself is a bind mount of &lt;code&gt;/local/mnt&lt;/code&gt;. This bind mount is set up with shared propagations, so any new mount point created underneath &lt;code&gt;/.bottlerocket/rootfs/mnt&lt;/code&gt; in any bootstrap or superpowered host container will propagate across mount namespaces. You can use this feature to configure ephemeral disks attached to your hosts that you may want to use on your workloads.&lt;/p&gt; 
&lt;h4&gt;Platform-specific settings&lt;/h4&gt; 
&lt;p&gt;Platform-specific settings are automatically set at boot time by &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/early-boot-config/early-boot-config"&gt;early-boot-config&lt;/a&gt; based on metadata available on the running platform. They can be overridden for testing purposes in &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#interacting-with-settings"&gt;the same way as other settings&lt;/a&gt;.&lt;/p&gt; 
&lt;h5&gt;AWS-specific settings&lt;/h5&gt; 
&lt;p&gt;See the &lt;a href="https://bottlerocket.dev/en/os/latest/#/api/settings/aws/"&gt;&lt;code&gt;settings.aws.*&lt;/code&gt; reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Logs&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;logdog&lt;/code&gt; through the &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#admin-container"&gt;admin container&lt;/a&gt; to obtain an archive of log files from your Bottlerocket host.&lt;/p&gt; 
&lt;p&gt;For a list of what is collected, see the logdog &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/raw/develop/sources/logdog/src/log_request.rs"&gt;command list&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Generating logs&lt;/h4&gt; 
&lt;p&gt;SSH to the Bottlerocket host or &lt;code&gt;apiclient exec admin bash&lt;/code&gt; to access the admin container, then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;sudo sheltie
logdog
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will write an archive of the logs to &lt;code&gt;/var/log/support/bottlerocket-logs.tar.gz&lt;/code&gt;. This archive is accessible from host containers at &lt;code&gt;/.bottlerocket/support&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Fetching logs&lt;/h4&gt; 
&lt;p&gt;There are multiple methods to retrieve the generated log archive.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Via SSH if already enabled&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Once you have exited from the Bottlerocket host, run a command like:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;ssh -i YOUR_KEY_FILE \
ec2-user@YOUR_HOST \
"cat /.bottlerocket/support/bottlerocket-logs.tar.gz" &amp;gt; bottlerocket-logs.tar.gz
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;With &lt;code&gt;kubectl get&lt;/code&gt; if running Kubernetes&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;kubectl get --raw \
"/api/v1/nodes/NODE_NAME/proxy/logs/support/bottlerocket-logs.tar.gz" &amp;gt; bottlerocket-logs.tar.gz
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-getting-started-enable-ssh-connections.html"&gt;SSH over SSM&lt;/a&gt; if your instance isn't accessible through SSH or Kubernetes&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Kdump Support&lt;/h3&gt; 
&lt;p&gt;Bottlerocket provides support to collect kernel crash dumps whenever the system kernel panics. Once this happens, both the dmesg log and vmcore dump are stored at &lt;code&gt;/var/log/kdump&lt;/code&gt;, and the system reboots.&lt;/p&gt; 
&lt;p&gt;There are a few important caveats about the provided kdump support:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Currently, only vmware variants have kdump support enabled&lt;/li&gt; 
 &lt;li&gt;The system kernel will reserve 256MB for the crash kernel, only when the host has at least 2GB of memory; the reserved space won't be available for processes running in the host&lt;/li&gt; 
 &lt;li&gt;The crash kernel will only be loaded when the &lt;code&gt;crashkernel&lt;/code&gt; parameter is present in the kernel's cmdline and if there is memory reserved for it&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;NVIDIA GPUs Support&lt;/h3&gt; 
&lt;p&gt;Bottlerocket's &lt;code&gt;nvidia&lt;/code&gt; variants include the required packages and configurations to leverage NVIDIA GPUs. Currently, the following NVIDIA driver versions are supported in Bottlerocket:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;470.X&lt;/li&gt; 
 &lt;li&gt;515.X&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The official AMIs for these variants can be used with EC2 GPU-equipped instance types such as: &lt;code&gt;p2&lt;/code&gt;, &lt;code&gt;p3&lt;/code&gt;, &lt;code&gt;p4&lt;/code&gt;, &lt;code&gt;g3&lt;/code&gt;, &lt;code&gt;g4dn&lt;/code&gt;, &lt;code&gt;g5&lt;/code&gt; and &lt;code&gt;g5g&lt;/code&gt;. Note that older instance types, such as &lt;code&gt;p2&lt;/code&gt;, are not supported by NVIDIA driver &lt;code&gt;515.X&lt;/code&gt; and above. You need to make sure you select the appropriate AMI depending on the instance type you are planning to use. Please see &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/QUICKSTART-EKS.md#aws-k8s--nvidia-variants"&gt;QUICKSTART-EKS&lt;/a&gt; for further details about Kubernetes variants, and &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/QUICKSTART-ECS.md#aws-ecs--nvidia-variants"&gt;QUICKSTART-ECS&lt;/a&gt; for ECS variants.&lt;/p&gt; 
&lt;h3&gt;Neuron Accelerated Instance Support&lt;/h3&gt; 
&lt;p&gt;Bottlerocket variants, from &lt;code&gt;v1.30.0+&lt;/code&gt;, include the required packages and configurations to leverage &lt;a href="https://aws.amazon.com/ai/machine-learning/neuron/"&gt;AWS Neuron Accelerated Instances&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The AMIs can be used with EC2 Neuron-equipped instance types such as: &lt;code&gt;inf1&lt;/code&gt;, &lt;code&gt;inf2&lt;/code&gt;, &lt;code&gt;trn1&lt;/code&gt;, and &lt;code&gt;trn2&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Please see &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/QUICKSTART-EKS.md#Neuron-Support"&gt;QUICKSTART-EKS&lt;/a&gt; for further details about Kubernetes variants, and &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/QUICKSTART-ECS.md#Neuron-Support"&gt;QUICKSTART-ECS&lt;/a&gt; for ECS variants.&lt;/p&gt; 
&lt;h2&gt;Details&lt;/h2&gt; 
&lt;h3&gt;Security&lt;/h3&gt; 
&lt;p&gt;&lt;span&gt;🛡&lt;/span&gt; &lt;span&gt;🦀&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;To learn more about security features in Bottlerocket, please see &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/SECURITY_FEATURES.md"&gt;SECURITY FEATURES&lt;/a&gt;. It describes how we use features like &lt;a href="https://gitlab.com/cryptsetup/cryptsetup/wikis/DMVerity"&gt;dm-verity&lt;/a&gt; and &lt;a href="https://selinuxproject.org/"&gt;SELinux&lt;/a&gt; to protect the system from security threats.&lt;/p&gt; 
&lt;p&gt;To learn more about security recommendations for Bottlerocket, please see &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/SECURITY_GUIDANCE.md"&gt;SECURITY GUIDANCE&lt;/a&gt;. It documents additional steps you can take to secure the OS, and includes resources such as a &lt;a href="https://kubernetes.io/docs/concepts/policy/pod-security-policy/"&gt;Pod Security Policy&lt;/a&gt; for your reference.&lt;/p&gt; 
&lt;p&gt;In addition, almost all first-party components are written in &lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt;. Rust eliminates some classes of memory safety issues, and encourages design patterns that help security.&lt;/p&gt; 
&lt;h3&gt;Packaging&lt;/h3&gt; 
&lt;p&gt;Bottlerocket is built from source using a container toolchain. We use RPM package definitions to build and install individual packages into an image. RPM itself is not in the image - it's just a common and convenient package definition format.&lt;/p&gt; 
&lt;p&gt;We currently package the following major third-party components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux kernel (&lt;a href="https://en.wikipedia.org/wiki/Linux"&gt;background&lt;/a&gt;, &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/kernel-5.10/"&gt;5.10 packaging&lt;/a&gt;, &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/kernel-5.15/"&gt;5.15 packaging&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;glibc (&lt;a href="https://www.gnu.org/software/libc/"&gt;background&lt;/a&gt;, &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/glibc/"&gt;packaging&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Buildroot as build toolchain (&lt;a href="https://buildroot.org/"&gt;background&lt;/a&gt;, via the &lt;a href="https://github.com/bottlerocket-os/bottlerocket-sdk"&gt;SDK&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;GRUB, with patches for partition flip updates (&lt;a href="https://www.gnu.org/software/grub/"&gt;background&lt;/a&gt;, &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/grub/"&gt;packaging&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;systemd as init (&lt;a href="https://en.wikipedia.org/wiki/Systemd"&gt;background&lt;/a&gt;, &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/systemd/"&gt;packaging&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;wicked for networking (&lt;a href="https://github.com/openSUSE/wicked"&gt;background&lt;/a&gt;, &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/wicked/"&gt;packaging&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;containerd (&lt;a href="https://containerd.io/"&gt;background&lt;/a&gt;, &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/containerd/"&gt;packaging&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Kubernetes (&lt;a href="https://kubernetes.io/"&gt;background&lt;/a&gt;, &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/kubernetes-1.30/"&gt;packaging&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;aws-iam-authenticator (&lt;a href="https://github.com/kubernetes-sigs/aws-iam-authenticator"&gt;background&lt;/a&gt;, &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/aws-iam-authenticator/"&gt;packaging&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Amazon ECS agent (&lt;a href="https://github.com/aws/amazon-ecs-agent"&gt;background&lt;/a&gt;, &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/ecs-agent/"&gt;packaging&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For further documentation or to see the rest of the packages, see the &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/packages/"&gt;packaging directory&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Updates&lt;/h3&gt; 
&lt;p&gt;The Bottlerocket image has two identical sets of partitions, A and B. When updating Bottlerocket, the partition table is updated to point from set A to set B, or vice versa.&lt;/p&gt; 
&lt;p&gt;We also track successful boots, and if there are failures it will automatically revert back to the prior working partition set.&lt;/p&gt; 
&lt;p&gt;The update process uses images secured by &lt;a href="https://theupdateframework.github.io/"&gt;TUF&lt;/a&gt;. For more details, see the &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/updater"&gt;update system documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;API&lt;/h3&gt; 
&lt;p&gt;There are two main ways you'd interact with a production Bottlerocket instance. (There are a couple more &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#exploration"&gt;exploration&lt;/a&gt; methods above for test instances.)&lt;/p&gt; 
&lt;p&gt;The first method is through a container orchestrator, for when you want to run or manage containers. This uses the standard channel for your orchestrator, for example a tool like &lt;code&gt;kubectl&lt;/code&gt; for Kubernetes.&lt;/p&gt; 
&lt;p&gt;The second method is through the Bottlerocket API, for example when you want to configure the system.&lt;/p&gt; 
&lt;p&gt;There's an HTTP API server that listens on a local Unix-domain socket. Remote access to the API requires an authenticated transport such as SSM's RunCommand or Session Manager, as described above. For more details, see the &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/api/apiserver/"&gt;apiserver documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/api/apiclient/"&gt;apiclient&lt;/a&gt; can be used to make requests. They're just HTTP requests, but the API client simplifies making requests with the Unix-domain socket.&lt;/p&gt; 
&lt;p&gt;To make configuration easier, we have &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/early-boot-config/early-boot-config"&gt;early-boot-config&lt;/a&gt;, which can send an API request for you based on instance user data. If you start a virtual machine, like an EC2 instance, it will read TOML-formatted Bottlerocket configuration from user data and send it to the API server. This way, you can configure your Bottlerocket instance without having to make API calls after launch.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#settings"&gt;Settings&lt;/a&gt; above for examples and to understand what you can configure.&lt;/p&gt; 
&lt;p&gt;You can also access host containers through the API using &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/api/apiclient#exec-mode"&gt;apiclient exec&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The server and client are the user-facing components of the API system, but there are a number of other components that work together to make sure your settings are applied, and that they survive upgrades of Bottlerocket.&lt;/p&gt; 
&lt;p&gt;For more details, see the &lt;a href="https://github.com/bottlerocket-os/bottlerocket-core-kit/tree/develop/sources/api"&gt;API system documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Default Volumes&lt;/h3&gt; 
&lt;p&gt;Bottlerocket operates with two default storage volumes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The root device, holds the active and passive &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#updates-1"&gt;partition sets&lt;/a&gt;. It also contains the bootloader, the dm-verity hash tree for verifying the &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/SECURITY_FEATURES.md#immutable-rootfs-backed-by-dm-verity"&gt;immutable root filesystem&lt;/a&gt;, and the data store for the Bottlerocket API.&lt;/li&gt; 
 &lt;li&gt;The data device is used as persistent storage for container images, container orchestration, &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#Custom-host-containers"&gt;host-containers&lt;/a&gt;, and &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/#Bootstrap-containers-settings"&gt;bootstrap containers&lt;/a&gt;. The operating system does not typically make changes to this volume during regular updates, though changes to upstream software such as containerd or kubelet could result in changes to their stored data. This device (mounted to &lt;code&gt;/local&lt;/code&gt; on the host) can be used for application storage for orchestrated workloads; however, we recommend using an additional volume if possible for such cases. See &lt;a href="https://raw.githubusercontent.com/bottlerocket-os/bottlerocket/develop/SECURITY_GUIDANCE.md#limit-access-to-system-mounts"&gt;this section of the Security Guidance documentation&lt;/a&gt; for more information.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;On boot Bottlerocket will increase the data partition size to use all of the data device. If you increase the size of the device, you can reboot Bottlerocket to extend the data partition. If you need to extend the data partition without rebooting, have a look at this &lt;a href="https://github.com/bottlerocket-os/bottlerocket/discussions/2011"&gt;discussion&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/turborepo</title>
      <link>https://github.com/vercel/turborepo</link>
      <description>&lt;p&gt;Build system optimized for JavaScript and TypeScript, written in Rust&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://turborepo.com"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/4060187/196936123-f6e1db90-784d-4174-b774-92502b718836.png" /&gt; 
   &lt;img src="https://user-images.githubusercontent.com/4060187/196936104-5797972c-ab10-4834-bd61-0d1e5f442c9c.png" height="128" /&gt; 
  &lt;/picture&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a href="https://turborepo.com"&gt;Turborepo&lt;/a&gt;&lt;/h1&gt;
&lt;a href="https://turborepo.com"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a aria-label="Vercel logo" href="https://vercel.com/"&gt;&lt;img src="https://img.shields.io/badge/MADE%20BY%20Vercel-000000.svg?style=for-the-badge&amp;amp;logo=Vercel&amp;amp;labelColor=000" /&gt;&lt;/a&gt; &lt;a aria-label="NPM version" href="https://www.npmjs.com/package/turbo"&gt;&lt;img alt="" src="https://img.shields.io/npm/v/turbo.svg?style=for-the-badge&amp;amp;labelColor=000000" /&gt;&lt;/a&gt; &lt;a aria-label="License" href="https://github.com/vercel/turborepo/raw/main/LICENSE"&gt;&lt;img alt="" src="https://img.shields.io/npm/l/turbo.svg?style=for-the-badge&amp;amp;labelColor=000000&amp;amp;color=" /&gt;&lt;/a&gt; &lt;a aria-label="Join the community on GitHub" href="https://github.com/vercel/turborepo/discussions"&gt;&lt;img alt="" src="https://img.shields.io/badge/Join%20the%20community-blueviolet.svg?style=for-the-badge&amp;amp;logo=turborepo&amp;amp;labelColor=000000&amp;amp;logoWidth=20&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Turborepo is a high-performance build system for JavaScript and TypeScript codebases, written in Rust.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://turborepo.com"&gt;https://turborepo.com&lt;/a&gt; to get started with Turborepo.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/vercel/turborepo/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Turborepo community can be found on &lt;a href="https://github.com/vercel/turborepo/discussions"&gt;GitHub Discussions&lt;/a&gt;, where you can ask questions, voice ideas, and share your projects.&lt;/p&gt; 
&lt;p&gt;To chat with other community members, you can join &lt;a href="https://vercel.community/tag/turborepo"&gt;Vercel Community's &lt;code&gt;#turborepo&lt;/code&gt; tag&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href="https://github.com/vercel/turborepo/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; applies to all Turborepo community channels.&lt;/p&gt; 
&lt;h2&gt;Who is using Turborepo?&lt;/h2&gt; 
&lt;p&gt;Turborepo is used by the world's leading companies. Check out the &lt;a href="https://turborepo.com/showcase"&gt;Turborepo Showcase&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Updates&lt;/h2&gt; 
&lt;p&gt;Follow &lt;a href="https://x.com/turborepo"&gt;@turborepo&lt;/a&gt; on X for project updates.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Turborepo&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Jared Palmer (&lt;a href="https://x.com/jaredpalmer"&gt;@jaredpalmer&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you believe you have found a security vulnerability in Turborepo, we encourage you to responsibly disclose this and not open a public issue. We will investigate all legitimate reports. Email &lt;code&gt;security@vercel.com&lt;/code&gt; to disclose any security vulnerabilities.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://vercel.com/security"&gt;https://vercel.com/security&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aws/amazon-q-developer-cli</title>
      <link>https://github.com/aws/amazon-q-developer-cli</link>
      <description>&lt;p&gt;✨ Agentic chat experience in your terminal. Build applications using natural language.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Amazon Q CLI&lt;/h1&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;DMG&lt;/strong&gt;: &lt;a href="https://desktop-release.q.us-east-1.amazonaws.com/latest/Amazon%20Q.dmg"&gt;Download now&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-installing.html#command-line-installing-ubuntu"&gt;Ubuntu/Debian&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-installing.html#command-line-installing-appimage"&gt;AppImage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-installing.html#command-line-installing-alternative-linux"&gt;Alternative Linux builds&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Thank you so much for considering to contribute to Amazon Q.&lt;/p&gt; 
&lt;p&gt;Before getting started, see our &lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/CONTRIBUTING.md#security-issue-notifications"&gt;contributing docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;MacOS 
  &lt;ul&gt; 
   &lt;li&gt;Xcode 13 or later&lt;/li&gt; 
   &lt;li&gt;Brew&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;1. Clone repo&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/aws/amazon-q-developer-cli.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;2. Install the Rust toolchain using &lt;a href="https://rustup.rs"&gt;Rustup&lt;/a&gt;:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
rustup default stable
rustup toolchain install nightly
cargo install typos-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;3. Develop locally&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;To compile and run: &lt;code&gt;cargo run --bin chat_cli&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;To run tests: &lt;code&gt;cargo test&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;To run lints: &lt;code&gt;cargo clippy&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;To format rust files: &lt;code&gt;cargo +nightly fmt&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;To run subcommands: &lt;code&gt;cargo run --bin chat_cli -- {subcommand}&lt;/code&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;Login would then be: &lt;code&gt;cargo run --bin chat_cli -- login&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Layout&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/crates/chat-cli/"&gt;&lt;code&gt;chat_cli&lt;/code&gt;&lt;/a&gt; - the &lt;code&gt;q&lt;/code&gt; CLI, allows users to interface with Amazon Q Developer from the command line&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/scripts/"&gt;&lt;code&gt;scripts/&lt;/code&gt;&lt;/a&gt; - Contains ops and build related scripts&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/crates/"&gt;&lt;code&gt;crates/&lt;/code&gt;&lt;/a&gt; - Contains all rust crates&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/docs/"&gt;&lt;code&gt;docs/&lt;/code&gt;&lt;/a&gt; - Contains technical documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For security related concerns, see &lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/SECURITY.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;This repo is dual licensed under MIT and Apache 2.0 licenses.&lt;/p&gt; 
&lt;p&gt;Those licenses can be found &lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/LICENSE.MIT"&gt;here&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/aws/amazon-q-developer-cli/main/LICENSE.APACHE"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;“Amazon Web Services” and all related marks, including logos, graphic designs, and service names, are trademarks or trade dress of AWS in the U.S. and other countries. AWS’s trademarks and trade dress may not be used in connection with any product or service that is not AWS’s, in any manner that is likely to cause confusion among customers, or in any manner that disparages or discredits AWS.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>zed-industries/zed</title>
      <link>https://github.com/zed-industries/zed</link>
      <description>&lt;p&gt;Code at the speed of thought – Zed is a high-performance, multiplayer code editor from the creators of Atom and Tree-sitter.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zed&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://zed.dev"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/zed-industries/zed/main/assets/badge/v0.json" alt="Zed" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zed-industries/zed/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/zed-industries/zed/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Welcome to Zed, a high-performance, multiplayer code editor from the creators of &lt;a href="https://github.com/atom/atom"&gt;Atom&lt;/a&gt; and &lt;a href="https://github.com/tree-sitter/tree-sitter"&gt;Tree-sitter&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;On macOS and Linux you can &lt;a href="https://zed.dev/download"&gt;download Zed directly&lt;/a&gt; or &lt;a href="https://zed.dev/docs/linux#installing-via-a-package-manager"&gt;install Zed via your local package manager&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Other platforms are not yet available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows (&lt;a href="https://github.com/zed-industries/zed/issues/5394"&gt;tracking issue&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Web (&lt;a href="https://github.com/zed-industries/zed/issues/5396"&gt;tracking issue&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Developing Zed&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/macos.md"&gt;Building Zed for macOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/linux.md"&gt;Building Zed for Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/windows.md"&gt;Building Zed for Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/docs/src/development/local-collaboration.md"&gt;Running Collaboration Locally&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/zed-industries/zed/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for ways you can contribute to Zed.&lt;/p&gt; 
&lt;p&gt;Also... we're hiring! Check out our &lt;a href="https://zed.dev/jobs"&gt;jobs&lt;/a&gt; page for open roles.&lt;/p&gt; 
&lt;h3&gt;Licensing&lt;/h3&gt; 
&lt;p&gt;License information for third party dependencies must be correctly provided for CI to pass.&lt;/p&gt; 
&lt;p&gt;We use &lt;a href="https://github.com/EmbarkStudios/cargo-about"&gt;&lt;code&gt;cargo-about&lt;/code&gt;&lt;/a&gt; to automatically comply with open source licenses. If CI is failing, check the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Is it showing a &lt;code&gt;no license specified&lt;/code&gt; error for a crate you've created? If so, add &lt;code&gt;publish = false&lt;/code&gt; under &lt;code&gt;[package]&lt;/code&gt; in your crate's Cargo.toml.&lt;/li&gt; 
 &lt;li&gt;Is the error &lt;code&gt;failed to satisfy license requirements&lt;/code&gt; for a dependency? If so, first determine what license the project has and whether this system is sufficient to comply with this license's requirements. If you're unsure, ask a lawyer. Once you've verified that this system is acceptable add the license's SPDX identifier to the &lt;code&gt;accepted&lt;/code&gt; array in &lt;code&gt;script/licenses/zed-licenses.toml&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Is &lt;code&gt;cargo-about&lt;/code&gt; unable to find the license for a dependency? If so, add a clarification field at the end of &lt;code&gt;script/licenses/zed-licenses.toml&lt;/code&gt;, as specified in the &lt;a href="https://embarkstudios.github.io/cargo-about/cli/generate/config.html#crate-configuration"&gt;cargo-about book&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>redlib-org/redlib</title>
      <link>https://github.com/redlib-org/redlib</link>
      <description>&lt;p&gt;Private front-end for Reddit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Redlib&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;An alternative private front-end to Reddit, with its origins in &lt;a href="https://github.com/libreddit/libreddit"&gt;Libreddit&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://i.ibb.co/18vrdxk/redlib-rust.png" alt="screenshot" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;10-second pitch:&lt;/strong&gt; Redlib is a private front-end like &lt;a href="https://github.com/iv-org/invidious"&gt;Invidious&lt;/a&gt; but for Reddit. Browse the coldest takes of &lt;a href="https://farside.link/redlib/r/unpopularopinion"&gt;r/unpopularopinion&lt;/a&gt; without being &lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#reddit"&gt;tracked&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 Fast: written in Rust for blazing-fast speeds and memory safety&lt;/li&gt; 
 &lt;li&gt;☁️ Light: no JavaScript, no ads, no tracking, no bloat&lt;/li&gt; 
 &lt;li&gt;🕵 Private: all requests are proxied through the server, including media&lt;/li&gt; 
 &lt;li&gt;🔒 Secure: strong &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP"&gt;Content Security Policy&lt;/a&gt; prevents browser requests to Reddit&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#redlib"&gt;Redlib&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#instances"&gt;Instances&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#about"&gt;About&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#built-with"&gt;Built with&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#how-is-it-different-from-other-reddit-front-ends"&gt;How is it different from other Reddit front ends?&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#teddit"&gt;Teddit&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#libreddit"&gt;Libreddit&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#comparison"&gt;Comparison&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#speed"&gt;Speed&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#privacy"&gt;Privacy&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#reddit"&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#redlib-1"&gt;Redlib&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#server"&gt;Server&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#deployment"&gt;Deployment&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#docker"&gt;Docker&lt;/a&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#docker-compose"&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#docker-cli"&gt;Docker CLI&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Podman&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Quadlets&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#binary"&gt;Binary&lt;/a&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#running-as-a-systemd-service"&gt;Running as a systemd service&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#building-from-source"&gt;Building from source&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#replit-heroku-glitch"&gt;Replit/Heroku/Glitch&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#launchd-macos"&gt;launchd (macOS)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#configuration"&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#instance-settings"&gt;Instance settings&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#default-user-settings"&gt;Default user settings&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Instances&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] 🔗 &lt;strong&gt;Want to automatically redirect Reddit links to Redlib? Use &lt;a href="https://github.com/libredirect/libredirect"&gt;LibRedirect&lt;/a&gt; or &lt;a href="https://github.com/SimonBrazell/privacy-redirect"&gt;Privacy Redirect&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;An up-to-date table of instances is available in &lt;a href="https://github.com/redlib-org/redlib-instances/raw/main/instances.md"&gt;Markdown&lt;/a&gt; and &lt;a href="https://github.com/redlib-org/redlib-instances/raw/main/instances.json"&gt;machine-readable JSON&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Both files are part of the &lt;a href="https://github.com/redlib-org/redlib-instances"&gt;redlib-instances&lt;/a&gt; repository. To contribute your &lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#deployment"&gt;self-hosted instance&lt;/a&gt; to the list, see the &lt;a href="https://github.com/redlib-org/redlib-instances/raw/main/README.md"&gt;redlib-instances README&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For information on instance uptime, see the &lt;a href="https://stats.uptimerobot.com/mpmqAs1G2Q"&gt;Uptime Robot status page&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;About&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Find Redlib on 💬 &lt;a href="https://matrix.to/#/#redlib:matrix.org"&gt;Matrix&lt;/a&gt;, 🐋 &lt;a href="https://quay.io/repository/redlib/redlib"&gt;Quay.io&lt;/a&gt;, &lt;img alt="octocat" src="https://github.githubassets.com/images/icons/emoji/octocat.png?v8" /&gt;) &lt;a href="https://github.com/redlib-org/redlib"&gt;GitHub&lt;/a&gt;, and 🦊 &lt;a href="https://gitlab.com/redlib/redlib"&gt;GitLab&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Redlib hopes to provide an easier way to browse Reddit, without the ads, trackers, and bloat. Redlib was inspired by other alternative front-ends to popular services such as &lt;a href="https://github.com/iv-org/invidious"&gt;Invidious&lt;/a&gt; for YouTube, &lt;a href="https://github.com/zedeus/nitter"&gt;Nitter&lt;/a&gt; for Twitter, and &lt;a href="https://sr.ht/~cadence/bibliogram/"&gt;Bibliogram&lt;/a&gt; for Instagram.&lt;/p&gt; 
&lt;p&gt;Redlib currently implements most of Reddit's (signed-out) functionalities but still lacks &lt;a href="https://github.com/redlib-org/redlib/issues"&gt;a few features&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Built with&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; - Programming language&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hyperium/hyper"&gt;Hyper&lt;/a&gt; - HTTP server and client&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/askama-rs/askama"&gt;Askama&lt;/a&gt; - Templating engine&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rustls/rustls"&gt;Rustls&lt;/a&gt; - TLS library&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How is it different from other Reddit front ends?&lt;/h2&gt; 
&lt;h3&gt;Teddit&lt;/h3&gt; 
&lt;p&gt;Teddit is another awesome open source project designed to provide an alternative frontend to Reddit. There is no connection between the two, and you're welcome to use whichever one you favor. Competition fosters innovation and Teddit's release has motivated me to build Redlib into an even more polished product.&lt;/p&gt; 
&lt;p&gt;If you are looking to compare, the biggest differences I have noticed are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Redlib is themed around Reddit's redesign whereas Teddit appears to stick much closer to Reddit's old design. This may suit some users better as design is always subjective.&lt;/li&gt; 
 &lt;li&gt;Redlib is written in &lt;a href="https://www.rust-lang.org"&gt;Rust&lt;/a&gt; for speed and memory safety. It uses &lt;a href="https://hyper.rs"&gt;Hyper&lt;/a&gt;, a speedy and lightweight HTTP server/client implementation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Libreddit&lt;/h3&gt; 
&lt;p&gt;While originating as a fork of Libreddit, the name "Redlib" was adopted to avoid legal issues, as Reddit only allows the use of their name if structured as "XYZ For Reddit".&lt;/p&gt; 
&lt;p&gt;Several technical improvements have also been made, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;OAuth token spoofing&lt;/strong&gt;: To circumvent rate limits imposed by Reddit, OAuth token spoofing is used to mimick the most common iOS and Android clients. While spoofing both iOS and Android clients was explored, only the Android client was chosen due to content restrictions when using an anonymous iOS client.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Token refreshing&lt;/strong&gt;: The authentication token is refreshed every 24 hours, emulating the behavior of the official Android app.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP header mimicking&lt;/strong&gt;: Efforts are made to send along as many of the official app's headers as possible to reduce the likelihood of Reddit's crackdown on Redlib's requests.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Comparison&lt;/h1&gt; 
&lt;p&gt;This section outlines how Redlib compares to Reddit in terms of speed and privacy.&lt;/p&gt; 
&lt;h2&gt;Speed&lt;/h2&gt; 
&lt;p&gt;Last tested on January 12, 2024.&lt;/p&gt; 
&lt;p&gt;Results from Google PageSpeed Insights (&lt;a href="https://pagespeed.web.dev/report?url=https%3A%2F%2Fredlib.matthew.science%2F"&gt;Redlib Report&lt;/a&gt;, &lt;a href="https://pagespeed.web.dev/report?url=https://www.reddit.com"&gt;Reddit Report&lt;/a&gt;).&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Performance metric&lt;/th&gt; 
   &lt;th&gt;Redlib&lt;/th&gt; 
   &lt;th&gt;Reddit&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Speed Index&lt;/td&gt; 
   &lt;td&gt;0.6s&lt;/td&gt; 
   &lt;td&gt;1.9s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Performance Score&lt;/td&gt; 
   &lt;td&gt;100%&lt;/td&gt; 
   &lt;td&gt;64%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Time to Interactive&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;2.8s&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;12.4s&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Privacy&lt;/h2&gt; 
&lt;h3&gt;Reddit&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Logging:&lt;/strong&gt; According to Reddit's &lt;a href="https://www.redditinc.com/policies/privacy-policy"&gt;privacy policy&lt;/a&gt;, they "may [automatically] log information" including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;IP address&lt;/li&gt; 
 &lt;li&gt;User-agent string&lt;/li&gt; 
 &lt;li&gt;Browser type&lt;/li&gt; 
 &lt;li&gt;Operating system&lt;/li&gt; 
 &lt;li&gt;Referral URLs&lt;/li&gt; 
 &lt;li&gt;Device information (e.g., device IDs)&lt;/li&gt; 
 &lt;li&gt;Device settings&lt;/li&gt; 
 &lt;li&gt;Pages visited&lt;/li&gt; 
 &lt;li&gt;Links clicked&lt;/li&gt; 
 &lt;li&gt;The requested URL&lt;/li&gt; 
 &lt;li&gt;Search terms&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Location:&lt;/strong&gt; The same privacy policy goes on to describe that location data may be collected through the use of:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GPS (consensual)&lt;/li&gt; 
 &lt;li&gt;Bluetooth (consensual)&lt;/li&gt; 
 &lt;li&gt;Content associated with a location (consensual)&lt;/li&gt; 
 &lt;li&gt;Your IP Address&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Cookies:&lt;/strong&gt; Reddit's &lt;a href="https://www.redditinc.com/policies/cookies"&gt;cookie notice&lt;/a&gt; documents the array of cookies used by Reddit including/regarding:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Authentication&lt;/li&gt; 
 &lt;li&gt;Functionality&lt;/li&gt; 
 &lt;li&gt;Analytics and Performance&lt;/li&gt; 
 &lt;li&gt;Advertising&lt;/li&gt; 
 &lt;li&gt;Third-Party Cookies&lt;/li&gt; 
 &lt;li&gt;Third-Party Site&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Redlib&lt;/h3&gt; 
&lt;p&gt;For transparency, I hope to describe all the ways Redlib handles user privacy.&lt;/p&gt; 
&lt;h4&gt;Server&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Logging:&lt;/strong&gt; In production (when running the binary, hosting with docker, or using the official instances), Redlib logs nothing. When debugging (running from source without &lt;code&gt;--release&lt;/code&gt;), Redlib logs post IDs fetched to aid with troubleshooting.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cookies:&lt;/strong&gt; Redlib uses optional cookies to store any configured settings in the settings menu. These are not cross-site cookies and the cookies hold no personal data.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Deployment&lt;/h1&gt; 
&lt;p&gt;This section covers multiple ways of deploying Redlib. Using &lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#docker"&gt;Docker&lt;/a&gt; is recommended for production.&lt;/p&gt; 
&lt;p&gt;For configuration options, see the &lt;a href="https://raw.githubusercontent.com/redlib-org/redlib/main/#Configuration"&gt;Configuration section&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.docker.com"&gt;Docker&lt;/a&gt; lets you run containerized applications. Containers are loosely isolated environments that are lightweight and contain everything needed to run the application, so there's no need to rely on what's installed on the host.&lt;/p&gt; 
&lt;p&gt;Container images for Redlib are available at &lt;a href="https://quay.io/repository/redlib/redlib"&gt;quay.io&lt;/a&gt;, with support for &lt;code&gt;amd64&lt;/code&gt;, &lt;code&gt;arm64&lt;/code&gt;, and &lt;code&gt;armv7&lt;/code&gt; platforms.&lt;/p&gt; 
&lt;h3&gt;Docker Compose&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] These instructions assume the &lt;a href="https://docs.docker.com/compose/migrate/#what-are-the-differences-between-compose-v1-and-compose-v2"&gt;Compose plugin&lt;/a&gt; has already been installed. If not, follow these &lt;a href="https://docs.docker.com/compose/install"&gt;instructions on the Docker Docs&lt;/a&gt; for how to do so.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Copy &lt;code&gt;compose.yaml&lt;/code&gt; and modify any relevant values (for example, the ports Redlib should listen on).&lt;/p&gt; 
&lt;p&gt;Start Redlib in detached mode (running in the background):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Stream logs from the Redlib container:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker logs -f redlib
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker CLI&lt;/h3&gt; 
&lt;p&gt;Deploy Redlib:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull quay.io/redlib/redlib:latest
docker run -d --name redlib -p 8080:8080 quay.io/redlib/redlib:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Deploy using a different port on the host (in this case, port 80):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull quay.io/redlib/redlib:latest
docker run -d --name redlib -p 80:8080 quay.io/redlib/redlib:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're using a reverse proxy in front of Redlib, prefix the port numbers with &lt;code&gt;127.0.0.1&lt;/code&gt; so that Redlib only listens on the host port &lt;strong&gt;locally&lt;/strong&gt;. For example, if the host port for Redlib is &lt;code&gt;8080&lt;/code&gt;, specify &lt;code&gt;127.0.0.1:8080:8080&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Stream logs from the Redlib container:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker logs -f redlib
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Podman&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://podman.io/"&gt;Podman&lt;/a&gt; lets you run containerized applications in a rootless fashion. Containers are loosely isolated environments that are lightweight and contain everything needed to run the application, so there's no need to rely on what's installed on the host.&lt;/p&gt; 
&lt;p&gt;Container images for Redlib are available at &lt;a href="https://quay.io/repository/redlib/redlib"&gt;quay.io&lt;/a&gt;, with support for &lt;code&gt;amd64&lt;/code&gt;, &lt;code&gt;arm64&lt;/code&gt;, and &lt;code&gt;armv7&lt;/code&gt; platforms.&lt;/p&gt; 
&lt;h3&gt;Quadlets&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] These instructions assume that you are on a systemd based distro with &lt;a href="https://podman.io/"&gt;podman&lt;/a&gt;. If not, follow these &lt;a href="https://podman.io/docs/installation"&gt;instructions on podman's website&lt;/a&gt; for how to do so. It also assumes you have used &lt;code&gt;loginctl enable-linger &amp;lt;username&amp;gt;&lt;/code&gt; to enable the service to start for your user without logging in.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Copy the &lt;code&gt;redlib.container&lt;/code&gt; and &lt;code&gt;.env.example&lt;/code&gt; files to &lt;code&gt;.config/containers/systemd/&lt;/code&gt; and modify any relevant values (for example, the ports Redlib should listen on, renaming the .env file and editing its values, etc.).&lt;/p&gt; 
&lt;p&gt;To start Redlib either reboot or follow the instructions below:&lt;/p&gt; 
&lt;p&gt;Notify systemd of the new files&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;systemctl --user daemon-reload
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start the newly generated service file&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;systemctl --user start redlib.service
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can check the status of your container by using the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;systemctl --user status redlib.service
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Binary&lt;/h2&gt; 
&lt;p&gt;If you're on Linux, you can grab a binary from &lt;a href="https://github.com/redlib-org/redlib/releases/latest"&gt;the newest release&lt;/a&gt; from GitHub.&lt;/p&gt; 
&lt;p&gt;Download the binary using &lt;a href="https://www.gnu.org/software/wget/"&gt;Wget&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;wget https://github.com/redlib-org/redlib/releases/download/v0.31.0/redlib
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Make the binary executable and change its ownership to &lt;code&gt;root&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo chmod +x redlib &amp;amp;&amp;amp; sudo chown root:root redlib
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Copy the binary to &lt;code&gt;/usr/bin&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo cp ./redlib /usr/bin/redlib
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Deploy Redlib to &lt;code&gt;0.0.0.0:8080&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;redlib
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] If you're proxying Redlib through NGINX (see &lt;a href="https://github.com/libreddit/libreddit/issues/122#issuecomment-782226853"&gt;issue #122&lt;/a&gt;), add&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-nginx"&gt;proxy_http_version 1.1;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;to your NGINX configuration file above your &lt;code&gt;proxy_pass&lt;/code&gt; line.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Running as a systemd service&lt;/h3&gt; 
&lt;p&gt;You can use the systemd service available in &lt;code&gt;contrib/redlib.service&lt;/code&gt; (install it on &lt;code&gt;/etc/systemd/system/redlib.service&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;That service can be optionally configured in terms of environment variables by creating a file in &lt;code&gt;/etc/redlib.conf&lt;/code&gt;. Use the &lt;code&gt;contrib/redlib.conf&lt;/code&gt; as a template. You can also add the &lt;code&gt;REDLIB_DEFAULT__{X}&lt;/code&gt; settings explained above.&lt;/p&gt; 
&lt;p&gt;When "Proxying using NGINX" where the proxy is on the same machine, you should guarantee nginx waits for this service to start. Edit &lt;code&gt;/etc/systemd/system/redlib.service.d/reverse-proxy.conf&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-conf"&gt;[Unit]
Before=nginx.service
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;To deploy Redlib with changes not yet included in the latest release, you can build the application from source.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/redlib-org/redlib &amp;amp;&amp;amp; cd redlib
cargo run
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Replit/Heroku&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] These are free hosting options, but they are &lt;em&gt;not&lt;/em&gt; private and will monitor server usage to prevent abuse. If you need a free and easy setup, this method may work best for you.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://repl.it/github/redlib-org/redlib"&gt;&lt;img src="https://repl.it/badge/github/redlib-org/redlib" alt="Run on Repl.it" height="32" /&gt;&lt;/a&gt; &lt;a href="https://heroku.com/deploy?template=https://github.com/redlib-org/redlib"&gt;&lt;img src="https://www.herokucdn.com/deploy/button.svg?sanitize=true" alt="Deploy" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;launchd (macOS)&lt;/h2&gt; 
&lt;p&gt;If you are on macOS, you can use the &lt;a href="https://en.wikipedia.org/wiki/Launchd"&gt;launchd&lt;/a&gt; service available in &lt;code&gt;contrib/redlib.plist&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Install it with &lt;code&gt;cp contrib/redlib.plist ~/Library/LaunchAgents/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Load and start it with &lt;code&gt;launchctl load ~/Library/LaunchAgents/redlib.plist&lt;/code&gt;.&lt;/p&gt; 
&lt;!-- ## Cargo

Make sure Rust stable is installed along with `cargo`, Rust's package manager.

```bash
cargo install libreddit
``` --&gt; 
&lt;!-- ## AUR

For ArchLinux users, Redlib is available from the AUR as [`libreddit-git`](https://aur.archlinux.org/packages/libreddit-git).

```bash
yay -S libreddit-git
```
## NetBSD/pkgsrc

For NetBSD users, Redlib is available from the official repositories.

```bash
pkgin install libreddit
```

Or, if you prefer to build from source

```bash
cd /usr/pkgsrc/libreddit
make install
``` --&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Configuration&lt;/h1&gt; 
&lt;p&gt;You can configure Redlib further using environment variables. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;REDLIB_DEFAULT_SHOW_NSFW=on redlib
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;REDLIB_DEFAULT_WIDE=on REDLIB_DEFAULT_THEME=dark redlib -r
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also configure Redlib with a configuration file named &lt;code&gt;redlib.toml&lt;/code&gt;. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;REDLIB_DEFAULT_WIDE = "on"
REDLIB_DEFAULT_USE_HLS = "on"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you're deploying Redlib using the &lt;strong&gt;Docker CLI or Docker Compose&lt;/strong&gt;, environment variables can be defined in a &lt;a href="https://docs.docker.com/compose/environment-variables/set-environment-variables/"&gt;&lt;code&gt;.env&lt;/code&gt; file&lt;/a&gt;, allowing you to centralize and manage configuration in one place.&lt;/p&gt; 
 &lt;p&gt;To configure Redlib using a &lt;code&gt;.env&lt;/code&gt; file, copy the &lt;code&gt;.env.example&lt;/code&gt; file to &lt;code&gt;.env&lt;/code&gt; and edit it accordingly.&lt;/p&gt; 
 &lt;p&gt;If using the Docker CLI, add &lt;code&gt; --env-file .env&lt;/code&gt; to the command that runs Redlib. For example:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --name redlib -p 8080:8080 --env-file .env quay.io/redlib/redlib:latest
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If using Docker Compose, no changes are needed as the &lt;code&gt;.env&lt;/code&gt; file is already referenced in &lt;code&gt;compose.yaml&lt;/code&gt; via the &lt;code&gt;env_file: .env&lt;/code&gt; line.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Command Line Flags&lt;/h2&gt; 
&lt;p&gt;Redlib supports the following command line flags:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-4&lt;/code&gt;, &lt;code&gt;--ipv4-only&lt;/code&gt;: Listen on IPv4 only.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-6&lt;/code&gt;, &lt;code&gt;--ipv6-only&lt;/code&gt;: Listen on IPv6 only.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-r&lt;/code&gt;, &lt;code&gt;--redirect-https&lt;/code&gt;: Redirect all HTTP requests to HTTPS (no longer functional).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;--address &amp;lt;ADDRESS&amp;gt;&lt;/code&gt;: Sets address to listen on. Default is &lt;code&gt;[::]&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-p&lt;/code&gt;, &lt;code&gt;--port &amp;lt;PORT&amp;gt;&lt;/code&gt;: Port to listen on. Default is &lt;code&gt;8080&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-H&lt;/code&gt;, &lt;code&gt;--hsts &amp;lt;EXPIRE_TIME&amp;gt;&lt;/code&gt;: HSTS header to tell browsers that this site should only be accessed over HTTPS. Default is &lt;code&gt;604800&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Instance settings&lt;/h2&gt; 
&lt;p&gt;Assign a default value for each instance-specific setting by passing environment variables to Redlib in the format &lt;code&gt;REDLIB_{X}&lt;/code&gt;. Replace &lt;code&gt;{X}&lt;/code&gt; with the setting name (see list below) in capital letters.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Possible values&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SFW_ONLY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enables SFW-only mode for the instance, i.e. all NSFW content is filtered.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;BANNER&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;String&lt;/td&gt; 
   &lt;td&gt;(empty)&lt;/td&gt; 
   &lt;td&gt;Allows the server to set a banner to be displayed. Currently this is displayed on the instance info page.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ROBOTS_DISABLE_INDEXING&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables indexing of the instance by search engines.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;PUSHSHIFT_FRONTEND&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;String&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;undelete.pullpush.io&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Allows the server to set the Pushshift frontend to be used with "removed" links.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Integer 0-65535&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;8080&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The &lt;strong&gt;internal&lt;/strong&gt; port Redlib listens on.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ENABLE_RSS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enables RSS feed generation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;FULL_URL&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;String&lt;/td&gt; 
   &lt;td&gt;(empty)&lt;/td&gt; 
   &lt;td&gt;Allows for proper URLs (for now, only needed by RSS)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Default user settings&lt;/h2&gt; 
&lt;p&gt;Assign a default value for each user-modifiable setting by passing environment variables to Redlib in the format &lt;code&gt;REDLIB_DEFAULT_{Y}&lt;/code&gt;. Replace &lt;code&gt;{Y}&lt;/code&gt; with the setting name (see list below) in capital letters.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Possible values&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;THEME&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["system", "light", "dark", "black", "dracula", "nord", "laserwave", "violet", "gold", "rosebox", "gruvboxdark", "gruvboxlight", "tokyoNight", "icebergDark", "doomone", "libredditBlack", "libredditDark", "libredditLight"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;system&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;FRONT_PAGE&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["default", "popular", "all"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;LAYOUT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["card", "clean", "compact"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;card&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;WIDE&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;POST_SORT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["hot", "new", "top", "rising", "controversial"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;hot&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;COMMENT_SORT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["confidence", "top", "new", "controversial", "old"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;confidence&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;BLUR_SPOILER&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SHOW_NSFW&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;BLUR_NSFW&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;USE_HLS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;HIDE_HLS_NOTIFICATION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AUTOPLAY_VIDEOS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;SUBSCRIPTIONS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;+&lt;/code&gt;-delimited list of subreddits (&lt;code&gt;sub1+sub2+sub3+...&lt;/code&gt;)&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;(none)&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;HIDE_AWARDS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;DISABLE_VISIT_REDDIT_CONFIRMATION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;HIDE_SCORE&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;HIDE_SIDEBAR_AND_SUMMARY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;FIXED_NAVBAR&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;on&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;REMOVE_DEFAULT_FEEDS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;["on", "off"]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>jj-vcs/jj</title>
      <link>https://github.com/jj-vcs/jj</link>
      <description>&lt;p&gt;A Git-compatible VCS that is both simple and powerful&lt;/p&gt;&lt;hr&gt;&lt;div class="title-block" style="text-align: center;" align="center"&gt; 
 &lt;h1&gt;Jujutsu—a version control system&lt;/h1&gt; 
 &lt;p&gt;&lt;img title="jj logo" src="https://raw.githubusercontent.com/jj-vcs/jj/main/docs/images/jj-logo.svg?sanitize=true" width="320" height="320" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/jj-vcs/jj/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/martinvonz/jj" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jj-vcs/jj/releases"&gt;&lt;img src="https://img.shields.io/github/release-date/martinvonz/jj" alt="Release date" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://github.com/jj-vcs/jj/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/martinvonz/jj" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/dkmfj3aGQN"&gt;&lt;img src="https://img.shields.io/discord/968932220549103686.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://web.libera.chat/?channel=#jujutsu"&gt;&lt;img src="https://img.shields.io/badge/irc-%23jujutsu-blue.svg?sanitize=true" alt="IRC" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://jj-vcs.github.io/jj"&gt;Homepage&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://jj-vcs.github.io/jj/latest/install-and-setup"&gt;Installation&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://jj-vcs.github.io/jj/latest/tutorial"&gt;Getting Started&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://jj-vcs.github.io/jj/latest/roadmap"&gt;Development Roadmap&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/strong&gt; &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/jj-vcs/jj/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Jujutsu is a powerful &lt;a href="https://en.wikipedia.org/wiki/Version_control"&gt;version control system&lt;/a&gt; for software projects. You use it to get a copy of your code, track changes to the code, and finally publish those changes for others to see and use. It is designed from the ground up to be easy to use—whether you're new or experienced, working on brand new projects alone, or large scale software projects with large histories and teams.&lt;/p&gt; 
&lt;p&gt;Jujutsu is unlike most other systems, because internally it abstracts the user interface and version control algorithms from the &lt;em&gt;storage systems&lt;/em&gt; used to serve your content. This allows it to serve as a VCS with many possible physical backends, that may have their own data or networking models—like &lt;a href="https://www.mercurial-scm.org/"&gt;Mercurial&lt;/a&gt; or &lt;a href="https://www.breezy-vcs.org/"&gt;Breezy&lt;/a&gt;, or hybrid systems like Google's cloud-based design, &lt;a href="https://youtu.be/W71BTkUbdqE?t=645"&gt;Piper/CitC&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Today, we use Git repositories as a storage layer to serve and track content, making it &lt;strong&gt;compatible with many of your favorite Git-based tools, right now!&lt;/strong&gt; All core developers use Jujutsu to develop Jujutsu, right here on GitHub. But it should hopefully work with your favorite Git forges, too.&lt;/p&gt; 
&lt;p&gt;We combine many distinct design choices and concepts from other version control systems into a single tool. Some of those sources of inspiration include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt;: We make an effort to &lt;a href="https://github.com/jj-vcs/jj/discussions/49"&gt;be fast&lt;/a&gt;—with a snappy UX, efficient algorithms, correct data structures, and good-old-fashioned attention to detail. The default storage backend uses Git repositories for "physical storage", for wide interoperability and ease of onboarding.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Mercurial &amp;amp; Sapling&lt;/strong&gt;: There are many Mercurial-inspired features, such as the &lt;a href="https://jj-vcs.github.io/jj/latest/revsets/"&gt;revset&lt;/a&gt; language to select commits. There is &lt;a href="https://jj-vcs.github.io/jj/latest/git-comparison/#the-index"&gt;no explicit index&lt;/a&gt; or staging area. Branches are "anonymous" like Mercurial, so you don't need to make up a name for each small change. Primitives for rewriting history are powerful and simple. Formatting output is done with a robust template language that can be configured by the user.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Darcs&lt;/strong&gt;: Jujutsu keeps track of conflicts as &lt;a href="https://jj-vcs.github.io/jj/latest/conflicts/"&gt;first-class objects&lt;/a&gt; in its model; they are first-class in the same way commits are, while alternatives like Git simply think of conflicts as textual diffs. While not as rigorous as systems like Darcs (which is based on a formalized theory of patches, as opposed to snapshots), the effect is that many forms of conflict resolution can be performed and propagated automatically.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And it adds several innovative, useful features of its own:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Working-copy-as-a-commit&lt;/strong&gt;: Changes to files are &lt;a href="https://jj-vcs.github.io/jj/latest/working-copy/"&gt;recorded automatically&lt;/a&gt; as normal commits, and amended on every subsequent change. This "snapshot" design simplifies the user-facing data model (commits are the only visible object), simplifies internal algorithms, and completely subsumes features like Git's stashes or the index/staging-area.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Operation log &amp;amp; undo&lt;/strong&gt;: Jujutsu records every operation that is performed on the repository, from commits, to pulls, to pushes. This makes debugging problems like "what just happened?" or "how did I end up here?" easier, &lt;em&gt;especially&lt;/em&gt; when you're helping your coworker answer those questions about their repository! And because everything is recorded, you can undo that mistake you just made with ease. Version control has finally entered &lt;a href="https://en.wikipedia.org/wiki/Undo#History"&gt;the 1960s&lt;/a&gt;!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automatic rebase and conflict resolution&lt;/strong&gt;: When you modify a commit, every descendent is automatically rebased on top of the freshly-modified one. This makes "patch-based" workflows a breeze. If you resolve a conflict in a commit, the &lt;em&gt;resolution&lt;/em&gt; of that conflict is also propagated through descendants as well. In effect, this is a completely transparent version of &lt;code&gt;git rebase --update-refs&lt;/code&gt; combined with &lt;code&gt;git rerere&lt;/code&gt;, supported by design.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The following features are available for use, but experimental; they may have bugs, backwards incompatible storage changes, and user-interface changes!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Safe, concurrent replication&lt;/strong&gt;: Have you ever wanted to store your version controlled repositories inside a Dropbox folder? Or continuously backup repositories to S3? No? Well, now you can!&lt;/p&gt; &lt;p&gt;The fundamental problem with using filesystems like Dropbox and backup tools like &lt;code&gt;rsync&lt;/code&gt; on your typical Git/Mercurial repositories is that they rely on &lt;em&gt;local filesystem operations&lt;/em&gt; being atomic, serialized, and non-concurrent with respect to other reads and writes—which is &lt;em&gt;not&lt;/em&gt; true when operating on distributed file systems, or when operations like concurrent file copies (for backup) happen while lock files are being held.&lt;/p&gt; &lt;p&gt;Jujutsu is instead designed to be &lt;a href="https://jj-vcs.github.io/jj/latest/technical/concurrency/"&gt;safe under concurrent scenarios&lt;/a&gt;; simply using rsync or Dropbox and then using that resulting repository should never result in a repository in a &lt;em&gt;corrupt state&lt;/em&gt;. The worst that &lt;em&gt;should&lt;/em&gt; happen is that it will expose conflicts between the local and remote state, leaving you to resolve them.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The command-line tool is called &lt;code&gt;jj&lt;/code&gt; for now because it's easy to type and easy to replace (rare in English). The project is called "Jujutsu" because it matches "jj".&lt;/p&gt; 
&lt;p&gt;Jujutsu is relatively young, with lots of work to still be done. If you have any questions, or want to talk about future plans, please join us on Discord &lt;a href="https://discord.gg/dkmfj3aGQN"&gt;&lt;img src="https://img.shields.io/discord/968932220549103686.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2" alt="Discord" /&gt;&lt;/a&gt;, start a &lt;a href="https://github.com/jj-vcs/jj/discussions"&gt;GitHub Discussion&lt;/a&gt;, or send an IRC message to &lt;a href="https://web.libera.chat/?channel=#jujutsu"&gt;&lt;code&gt;#jujutsu&lt;/code&gt; on Libera Chat&lt;/a&gt;. The developers monitor all of these channels[^bridge].&lt;/p&gt; 
&lt;p&gt;[^bridge]: To be more precise, the &lt;code&gt;#jujutsu&lt;/code&gt; Libera IRC channel is bridged to one of the channels on jj's Discord. Some of the developers stay on Discord and use the bridge to follow IRC.&lt;/p&gt; 
&lt;h3&gt;News and Updates 📣&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;December 2024&lt;/strong&gt;: The &lt;code&gt;jj&lt;/code&gt; Repository has moved to the &lt;code&gt;jj-vcs&lt;/code&gt; GitHub organization.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;November 2024&lt;/strong&gt;: Version 0.24 is released which adds &lt;code&gt;jj file annotate&lt;/code&gt;, which is equivalent to &lt;code&gt;git blame&lt;/code&gt; or &lt;code&gt;hg annotate&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;September 2024&lt;/strong&gt;: Martin gave a &lt;a href="https://www.youtube.com/watch?v=LV0JzI8IcCY"&gt;presentation about Jujutsu&lt;/a&gt; at Git Merge 2024.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Feb 2024&lt;/strong&gt;: Version 0.14 is released, which deprecates &lt;a href="https://raw.githubusercontent.com/jj-vcs/jj/main/CHANGELOG.md#0140---2024-02-07"&gt;"jj checkout" and "jj merge"&lt;/a&gt;, as well as &lt;code&gt;jj init --git&lt;/code&gt;, which is now just called &lt;code&gt;jj git init&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Oct 2023&lt;/strong&gt;: Version 0.10.0 is released! Now includes a bundled merge and diff editor for all platforms, "immutable revsets" to avoid accidentally &lt;code&gt;edit&lt;/code&gt;-ing the wrong revisions, and lots of polish.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jan 2023&lt;/strong&gt;: Martin gave a presentation about Google's plans for Jujutsu at Git Merge 2022! See the &lt;a href="https://docs.google.com/presentation/d/1F8j9_UOOSGUN9MvHxPZX_L4bQ9NMcYOp1isn17kTC_M/view"&gt;slides&lt;/a&gt; or the &lt;a href="https://www.youtube.com/watch?v=bx_LGilOuE4"&gt;recording&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Related Media&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Mar 2024&lt;/strong&gt;: Chris Krycho started &lt;a href="https://www.youtube.com/playlist?list=PLelyiwKWHHAq01Pvmpf6x7J0y-yQpmtxp"&gt;a YouTube series about Jujutsu&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Feb 2024&lt;/strong&gt;: Chris Krycho published an article about Jujutsu called &lt;a href="https://v5.chriskrycho.com/essays/jj-init/"&gt;jj init&lt;/a&gt; and Steve Klabnik followed up with the &lt;a href="https://steveklabnik.github.io/jujutsu-tutorial/"&gt;Jujutsu Tutorial&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jan 2024&lt;/strong&gt;: Jujutsu was featured in an LWN.net article called &lt;a href="https://lwn.net/Articles/958468/"&gt;Jujutsu: a new, Git-compatible version control system&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jan 2023&lt;/strong&gt;: Martin's Talk about Jujutsu at Git Merge 2022, &lt;a href="https://www.youtube.com/watch?v=bx_LGilOuE4"&gt;video&lt;/a&gt; and the associated &lt;a href="https://docs.google.com/presentation/d/1F8j9_UOOSGUN9MvHxPZX_L4bQ9NMcYOp1isn17kTC_M/view"&gt;slides&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The wiki also contains a more extensive list of &lt;a href="https://github.com/jj-vcs/jj/wiki/Media"&gt;media references&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Jujutsu is an &lt;strong&gt;experimental version control system&lt;/strong&gt;. While Git compatibility is stable, and most developers use it daily for all their needs, there may still be work-in-progress features, suboptimal UX, and workflow gaps that make it unusable for your particular use.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Follow the &lt;a href="https://jj-vcs.github.io/jj/latest/install-and-setup"&gt;installation instructions&lt;/a&gt; to obtain and configure &lt;code&gt;jj&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The best way to get started is probably to go through &lt;a href="https://jj-vcs.github.io/jj/latest/tutorial"&gt;the tutorial&lt;/a&gt;. Also see the &lt;a href="https://jj-vcs.github.io/jj/latest/git-comparison"&gt;Git comparison&lt;/a&gt;, which includes a table of &lt;code&gt;jj&lt;/code&gt; vs. &lt;code&gt;git&lt;/code&gt; commands.&lt;/p&gt; 
&lt;p&gt;As you become more familiar with Jujutsu, the following resources may be helpful:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href="https://jj-vcs.github.io/jj/latest/FAQ"&gt;FAQ&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://jj-vcs.github.io/jj/latest/glossary"&gt;Glossary&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;jj help&lt;/code&gt; command (e.g. &lt;code&gt;jj help rebase&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;jj help -k &amp;lt;keyword&amp;gt;&lt;/code&gt; command (e.g. &lt;code&gt;jj help -k config&lt;/code&gt;). Use &lt;code&gt;jj help --help&lt;/code&gt; to see what keywords are available.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are using a &lt;strong&gt;prerelease&lt;/strong&gt; version of &lt;code&gt;jj&lt;/code&gt;, you would want to consult &lt;a href="https://jj-vcs.github.io/jj/prerelease/"&gt;the docs for the prerelease (main branch) version&lt;/a&gt;. You can also get there from the docs for the latest release by using the website's version switcher. The version switcher is visible in the header of the website when you scroll to the top of any page.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Compatible with Git&lt;/h3&gt; 
&lt;p&gt;Jujutsu is designed so that the underlying data and storage model is abstract. Today, only the Git backend is production-ready. The Git backend uses the &lt;a href="https://github.com/Byron/gitoxide"&gt;gitoxide&lt;/a&gt; Rust library.&lt;/p&gt; 
&lt;p&gt;The Git backend is fully featured and maintained, and allows you to use Jujutsu with any Git remote. The commits you create will look like regular Git commits. You can fetch branches from a regular Git remote and push branches to the remote. You can always switch back to Git.&lt;/p&gt; 
&lt;p&gt;Here is how you can explore a GitHub repository with &lt;code&gt;jj&lt;/code&gt;.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/git_compat.png" /&gt; 
&lt;p&gt;You can even have a &lt;a href="https://jj-vcs.github.io/jj/latest/git-compatibility#colocated-jujutsugit-repos"&gt;colocated local repository&lt;/a&gt; where you can use both &lt;code&gt;jj&lt;/code&gt; and &lt;code&gt;git&lt;/code&gt; commands interchangeably.&lt;/p&gt; 
&lt;h3&gt;The working copy is automatically committed&lt;/h3&gt; 
&lt;p&gt;Jujutsu uses a real commit to represent the working copy. Checking out a commit results a new working-copy commit on top of the target commit. Almost all commands automatically amend the working-copy commit.&lt;/p&gt; 
&lt;p&gt;The working-copy being a commit means that commands never fail because the working copy is dirty (no "error: Your local changes to the following files..."), and there is no need for &lt;code&gt;git stash&lt;/code&gt;. Also, because the working copy is a commit, commands work the same way on the working-copy commit as on any other commit, so you can set the commit message before you're done with the changes.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/working_copy.png" /&gt; 
&lt;h3&gt;The repo is the source of truth&lt;/h3&gt; 
&lt;p&gt;With Jujutsu, the working copy plays a smaller role than with Git. Commands snapshot the working copy before they start, then they update the repo, and then the working copy is updated (if the working-copy commit was modified). Almost all commands (even checkout!) operate on the commits in the repo, leaving the common functionality of snapshotting and updating of the working copy to centralized code. For example, &lt;code&gt;jj restore&lt;/code&gt; (similar to &lt;code&gt;git restore&lt;/code&gt;) can restore from any commit and into any commit, and &lt;code&gt;jj describe&lt;/code&gt; can set the commit message of any commit (defaults to the working-copy commit).&lt;/p&gt; 
&lt;h3&gt;Entire repo is under version control&lt;/h3&gt; 
&lt;p&gt;All operations you perform in the repo are recorded, along with a snapshot of the repo state after the operation. This means that you can easily restore to an earlier repo state, simply undo your operations one-by-one or even &lt;em&gt;revert&lt;/em&gt; a particular operation which does not have to be the most recent one.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/operation_log.png" /&gt; 
&lt;h3&gt;Conflicts can be recorded in commits&lt;/h3&gt; 
&lt;p&gt;If an operation results in &lt;a href="https://jj-vcs.github.io/jj/latest/glossary#conflict"&gt;conflicts&lt;/a&gt;, information about those conflicts will be recorded in the commit(s). The operation will succeed. You can then resolve the conflicts later. One consequence of this design is that there's no need to continue interrupted operations. Instead, you get a single workflow for resolving conflicts, regardless of which command caused them. This design also lets Jujutsu rebase merge commits correctly (unlike both Git and Mercurial).&lt;/p&gt; 
&lt;p&gt;Basic conflict resolution:&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/resolve_conflicts.png" /&gt; 
&lt;p&gt;Juggling conflicts:&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/jj-vcs/jj/main/demos/juggle_conflicts.png" /&gt; 
&lt;h3&gt;Automatic rebase&lt;/h3&gt; 
&lt;p&gt;Whenever you modify a commit, any descendants of the old commit will be rebased onto the new commit. Thanks to the conflict design described above, that can be done even if there are conflicts. Bookmarks pointing to rebased commits will be updated. So will the working copy if it points to a rebased commit.&lt;/p&gt; 
&lt;h3&gt;Comprehensive support for rewriting history&lt;/h3&gt; 
&lt;p&gt;Besides the usual rebase command, there's &lt;code&gt;jj describe&lt;/code&gt; for editing the description (commit message) of an arbitrary commit. There's also &lt;code&gt;jj diffedit&lt;/code&gt;, which lets you edit the changes in a commit without checking it out. To split a commit into two, use &lt;code&gt;jj split&lt;/code&gt;. You can even move part of the changes in a commit to any other commit using &lt;code&gt;jj squash -i --from X --into Y&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;The tool is fairly feature-complete, but some important features like support for Git submodules are not yet completed. There are also several performance bugs. It's likely that workflows and setups different from what the core developers use are not well supported, e.g. there is no native support for email-based workflows.&lt;/p&gt; 
&lt;p&gt;Today, all core developers use &lt;code&gt;jj&lt;/code&gt; to work on &lt;code&gt;jj&lt;/code&gt;. I (Martin von Zweigbergk) have almost exclusively used &lt;code&gt;jj&lt;/code&gt; to develop the project itself since early January 2021. I haven't had to re-clone from source (I don't think I've even had to restore from backup).&lt;/p&gt; 
&lt;p&gt;There &lt;em&gt;will&lt;/em&gt; be changes to workflows and backward-incompatible changes to the on-disk formats before version 1.0.0. For any format changes, we'll try to implement transparent upgrades (as we've done with recent changes), or provide upgrade commands or scripts if requested.&lt;/p&gt; 
&lt;h2&gt;Related work&lt;/h2&gt; 
&lt;p&gt;There are several tools trying to solve similar problems as Jujutsu. See &lt;a href="https://jj-vcs.github.io/jj/latest/related-work"&gt;related work&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome outside contributions, and there's plenty of things to do, so don't be shy. Please ask if you want a pointer on something you can help with, and hopefully we can all figure something out.&lt;/p&gt; 
&lt;p&gt;We do have &lt;a href="https://jj-vcs.github.io/jj/prerelease/contributing/"&gt;a few policies and suggestions&lt;/a&gt; for contributors. The broad TL;DR:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bug reports are very welcome!&lt;/li&gt; 
 &lt;li&gt;Every commit that lands in the &lt;code&gt;main&lt;/code&gt; branch is code reviewed.&lt;/li&gt; 
 &lt;li&gt;Please behave yourself, and obey the Community Guidelines.&lt;/li&gt; 
 &lt;li&gt;There &lt;strong&gt;is&lt;/strong&gt; a mandatory CLA you must agree to. Importantly, it &lt;strong&gt;does not&lt;/strong&gt; transfer copyright ownership to Google or anyone else; it simply gives us the right to safely redistribute and use your changes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mandatory Google Disclaimer&lt;/h3&gt; 
&lt;p&gt;I (Martin von Zweigbergk, &lt;a href="mailto:martinvonz@google.com"&gt;martinvonz@google.com&lt;/a&gt;) started Jujutsu as a hobby project in late 2019, and it has evolved into my full-time project at Google, with several other Googlers (now) assisting development in various capacities. That said, &lt;strong&gt;this is not a Google product&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Jujutsu is available as Open Source Software, under the Apache 2.0 license. See &lt;a href="https://raw.githubusercontent.com/jj-vcs/jj/main/LICENSE"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; for details about copyright and redistribution.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;jj&lt;/code&gt; logo was contributed by J. Jennings and is licensed under a Creative Commons License, see &lt;a href="https://raw.githubusercontent.com/jj-vcs/jj/main/docs/images/LICENSE"&gt;&lt;code&gt;docs/images/LICENSE&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MCHPR/MCHPRS</title>
      <link>https://github.com/MCHPR/MCHPRS</link>
      <description>&lt;p&gt;A multithreaded Minecraft server built for redstone.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Minecraft High-Performance Redstone Server&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/MCHPR/MCHPRS/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/MCHPR/MCHPRS/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/svK9JU7"&gt;&lt;img src="https://discordapp.com/api/guilds/724072903083163679/widget.png" alt="Discord Banner 2" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A Minecraft 1.20.4 creative server built for redstone. Each 512x512 plot runs on a separate thread, allowing for less lag, more concurrency, and many awesome extra features!&lt;/p&gt; 
&lt;p&gt;MCHPRS is very different from traditional servers. Because this server is tailored to the use of computation redstone, many things that are a part of Vanilla Minecraft servers don't exist here. That being said, MCHPRS comes with many of its own unique features.&lt;/p&gt; 
&lt;p&gt;MCHPRS has made it possible to run programs such as &lt;a href="https://www.youtube.com/watch?v=-BP7DhHTU-I"&gt;a limited form of Minecraft&lt;/a&gt; on CPUs in Minecraft. To accomplish these speeds, we created &lt;a href="https://raw.githubusercontent.com/MCHPR/MCHPRS/master/docs/Redpiler.md"&gt;Redpiler&lt;/a&gt;, the "Redstone Compiler".&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MCHPR/MCHPRS/master/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MCHPR/MCHPRS/master/#building"&gt;Building&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MCHPR/MCHPRS/master/#configuration"&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MCHPR/MCHPRS/master/#luckperms"&gt;LuckPerms&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MCHPR/MCHPRS/master/#usage"&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MCHPR/MCHPRS/master/#general-commands"&gt;General Commands&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MCHPR/MCHPRS/master/#plot-ownership"&gt;Plot Ownership&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MCHPR/MCHPRS/master/#worldedit"&gt;Worldedit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MCHPR/MCHPRS/master/#redpiler"&gt;Redpiler&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MCHPR/MCHPRS/master/#acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MCHPR/MCHPRS/master/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MCHPR/MCHPRS/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;If the Rust compiler is not already installed, you can find out how &lt;a href="https://www.rust-lang.org/tools/install"&gt;on their official website&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/MCHPR/MCHPRS.git
cd MCHPRS
cargo build --release
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once complete, the optimized executable will be located at &lt;code&gt;./target/release/mchprs&lt;/code&gt; or &lt;code&gt;./target/release/mchprs.exe&lt;/code&gt; depending on your operating system.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;MCHPRS will generate a &lt;code&gt;Config.toml&lt;/code&gt; file in the current working directory when starting the server if it does not exist.&lt;/p&gt; 
&lt;p&gt;The folowing options are available at the toplevel (under no header):&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Field&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;bind_address&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Bind address and port&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;0.0.0.0:25565&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;motd&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Message of the day&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;"Minecraft High Performance Redstone Server"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;chat_format&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;How to format chat message interpolating &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;message&lt;/code&gt; with curly braces&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;{username}&amp;gt; {message}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;max_players&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Maximum number of simultaneous players&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;99999&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;view_distance&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Maximal distance (in chunks) between players and loaded chunks&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;8&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;whitelist&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Whether or not the whitelist (in &lt;code&gt;whitelist.json&lt;/code&gt;) shoud be enabled&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;schemati&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Mimic the verification and directory layout used by the Open Redstone Engineers &lt;a href="https://github.com/OpenRedstoneEngineers/Schemati"&gt;Schemati plugin&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;block_in_hitbox&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Allow placing blocks inside of players (hitbox logic is simplified)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;auto_redpiler&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Use redpiler automatically&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;To change the plot size edit the constants defined in &lt;a href="https://raw.githubusercontent.com/MCHPR/MCHPRS/master/crates/core/src/plot/mod.rs"&gt;plot/mod.rs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Velocity&lt;/h3&gt; 
&lt;p&gt;MCHPRS has no support for player authentication on its own, but supports Velocity modern ip-forwarding.&lt;/p&gt; 
&lt;p&gt;To use &lt;a href="https://papermc.io/software/velocity"&gt;Velocity&lt;/a&gt; ip-forwarding, you must have a Velocity proxy set up and configured. Make sure &lt;code&gt;player-info-forwarding-mode&lt;/code&gt; is set to &lt;code&gt;modern&lt;/code&gt; in your Velocity config. Then, append this to your &lt;code&gt;Config.toml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[velocity]
enabled = true
# This is the secret contained within `forwarding-secret-file` from your velocity config,
# NOT the path to the file.
secret = "&amp;lt;secret&amp;gt;"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LuckPerms&lt;/h3&gt; 
&lt;p&gt;MCHPRS has basic support for LuckPerms with MySQL or MariaDB remote database storage. This implementation has no commands or interface and would have to be manged through LuckPerms running on a proxy (&lt;code&gt;/lpb&lt;/code&gt;) or other server (&lt;code&gt;/lp&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;To use LuckPerms, append this to your &lt;code&gt;Config.toml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[luckperms]
# Define the address for the database.
host = "localhost"
# The name of the database the LuckPerms data is in.
db_name = "minecraft"
# Credentials for the database.
username = "minecraft"
password = "minecraft"
# The name of the server, used for server specific permissions.
# See: https://luckperms.net/wiki/Context
server_context = "global"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;General Commands&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Alias&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/rtps [rtps|unlimited]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Set the &lt;strong&gt;redstone&lt;/strong&gt; ticks per second in the plot to &lt;code&gt;[rtps]&lt;/code&gt;. (There are two game ticks in a redstone tick)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/radvance [ticks]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/radv&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Advances the plot by &lt;code&gt;[ticks]&lt;/code&gt; redstone ticks.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/teleport [player]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/tp&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Teleports you to &lt;code&gt;[player]&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/teleport [x] [y] [z]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/tp&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Teleports you to &lt;code&gt;[x] [y] [z]&lt;/code&gt;. Supports relative coordinates. Floats can be expressed as described &lt;a href="https://doc.rust-lang.org/std/primitive.f64.html#grammar"&gt;here&lt;/a&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/speed [speed]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Sets your flyspeed.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/gamemode [mode]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/gmc&lt;/code&gt;, &lt;code&gt;/gmsp&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets your gamemode.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/container [type] [power]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Gives you a container (e.g. barrel) which outputs a specified amount of power when used with a comparator.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/toggleautorp&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Toggles automatic redpiler compilation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/stop&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Stops the server.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Plot Ownership&lt;/h3&gt; 
&lt;p&gt;The plot ownership system in MCHPRS is very incomplete. These are the commands that are currently implemented:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Alias&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/plot info&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/p i&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Gets the owner of the plot you are in.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/plot claim&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/p c&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Claims the plot you are in if it is not already claimed.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/plot auto&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/p a&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Automatically finds an unclaimed plot and claims.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/plot middle&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Teleports you to the center of the plot you are in.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/plot visit [player]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/p v&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Teleports you to a player's plot.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/plot tp [x] [z]&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Teleports you to the plot at &lt;code&gt;[x] [y]&lt;/code&gt;. Supports relative coordinates.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/plot lock&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Locks the player into the plot so moving outside of the plot bounds does not transfer you to other plots.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/plot unlock&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Reverses the locking done by &lt;code&gt;/plot lock&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/plot select&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/p sel&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Uses WorldEdit to select the entire plot.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Worldedit&lt;/h3&gt; 
&lt;p&gt;MCHPRS provides its own implementation of &lt;a href="https://github.com/EngineHub/WorldEdit"&gt;WorldEdit&lt;/a&gt;. Visit their &lt;a href="https://worldedit.enginehub.org/en/latest/commands/"&gt;documentation&lt;/a&gt; for more information. These are the commands that are currently implemented:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Alias&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/up&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/u&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Go upwards some distance&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/ascend&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/asc&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Go up a floor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/descend&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/desc&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Go down a floor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//pos1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;//1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Set position 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//pos2&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;//2&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Set position 2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//hpos1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;//h1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Set position 1 to targeted block&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//hpos2&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;//h2&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Set position 2 to targeted block&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//sel&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Clears your worldedit first and second positions.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//set&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Sets all the blocks in the region&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//replace&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Replace all blocks in a selection with another&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//copy&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;//c&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Copy the selection to the clipboard&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//cut&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;//x&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Cut the selection to the clipboard&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//paste&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;//v&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Paste the clipboard's contents (&lt;code&gt;-a&lt;/code&gt; to ignore air, &lt;code&gt;-u&lt;/code&gt; to also update)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//undo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Undoes the last action (from history)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//redo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Redoes the last action (from history)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//rstack&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;//rs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Stack with more options, Refer to &lt;a href="https://github.com/paulikauro/RedstoneTools"&gt;RedstoneTools&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//stack&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;//s&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Repeat the contents of the selection&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//move&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Move the contents of the selection&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Counts the number of blocks matching a mask&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//load&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Loads a schematic from the &lt;code&gt;./schems/&lt;/code&gt; folder. Make sure the schematic in the Sponge format if there are any issues.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//save&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Save a schematic to the &lt;code&gt;./schems/&lt;/code&gt; folder.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//expand&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;//e&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Expand the selection area&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//contract&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Contract the selection area&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//shift&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Shift the selection area&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//flip&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;//f&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Flip the contents of the clipboard across the origin&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//rotate&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;//r&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Rotate the contents of the clipboard&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//update&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Updates all blocks in the selection (&lt;code&gt;-p&lt;/code&gt; to update the entire plot)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;//help&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Displays help for WorldEdit commands&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Redpiler&lt;/h3&gt; 
&lt;p&gt;MCHPRS provides Redpiler, the redstone compiler. This allows redstone simulation much faster than otherwise possible. While redpiler is running, all redstone connections are pre-computed, thus interaction with the world is limited in this state. Placing or breaking blocks while redpiler is running will cause a reset and disable redpiler.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Alias&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/redpiler compile&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/rp c&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Manually starts redpiler compilation. There are several flags available, described below.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/redpiler reset&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/rp r&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Stops redpiler.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Flag&lt;/th&gt; 
   &lt;th&gt;Short&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--optimize&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-o&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable redpiler optimizations. WARNING: This can, and will, break the state of your build. Use backups when using this flag.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--io-only&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Only send blocks updates of relavent input/output blocks. This includes trapdoors, lamps, note blocks, buttons, levers, and pressure plates. Using this flag can significantly reduce lag and improve simulation speed.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--wire-dot-out&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Consider wires in the dot shape as an output block for &lt;code&gt;-i&lt;/code&gt;. Useful for e.g. color displays.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--update&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-u&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Update all blocks after redpiler resets.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--export&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;-e&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Export the compile graph using a binary format. This can be useful for developing out-of-tree uses of redpiler graphs.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--export-dot&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;None&lt;/td&gt; 
   &lt;td&gt;Create a graphvis dot file of backend graph. Used for debugging/development.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AL1L"&gt;@AL1L&lt;/a&gt; for his contributions to worldedit and other various features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DavidGarland"&gt;@DavidGarland&lt;/a&gt; for a faster and overall better implementation of &lt;code&gt;get_entry&lt;/code&gt; in the in-memory storage. This simple function runs 30% of the runtime for redstone.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://choosealicense.com/licenses/mit/"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>raphamorim/rio</title>
      <link>https://github.com/raphamorim/rio</link>
      <description>&lt;p&gt;A hardware-accelerated GPU terminal emulator focusing to run in desktops and browsers.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; &lt;p align="center"&gt; &lt;img src="https://rioterm.com/assets/rio-logo.png" alt="Rio terminal logo" width="128" /&gt; &lt;br /&gt;Rio Terminal &lt;/p&gt;&lt;/h1&gt; 
&lt;p align="center"&gt; Rio is a modern terminal built to run everywhere. &lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/raphamorim/rio/main/#about"&gt;About&lt;/a&gt; · &lt;a href="https://rioterm.com/docs/install"&gt;Install&lt;/a&gt; · &lt;a href="https://rioterm.com/docs/config"&gt;Config&lt;/a&gt; · &lt;a href="https://rioterm.com/docs/changelog"&gt;Changelog&lt;/a&gt; · &lt;a href="https://github.com/sponsors/raphamorim"&gt;Sponsor&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚠️ Development Notice&lt;/strong&gt;: We are currently in the process of releasing Rio 0.3.0, which includes major performance improvements and architectural changes. The main branch is under active development and may be unstable. For stable usage, please use &lt;a href="https://github.com/raphamorim/rio/releases"&gt;v0.2.20 or below&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Documentation: &lt;a href="https://rioterm.com"&gt;https://rioterm.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you are using or want to help in any way please consider to donate via &lt;a href="https://github.com/sponsors/raphamorim"&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Rio would not be possible without &lt;a href="https://github.com/alacritty/alacritty/"&gt;Alacritty&lt;/a&gt;, since a lot of Rio functionalities (e.g: ANSI parser, events, processor) was originally written (and still uses a good amount) of Alacritty code.&lt;/p&gt; 
&lt;h2&gt;Supporting the Project&lt;/h2&gt; 
&lt;p&gt;If you use and like Rio, please consider sponsoring it: your support helps to cover the fees required to maintain the project and to validate the time spent working on it!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/raphamorim"&gt;&lt;img src="https://img.shields.io/github/sponsors/raphamorim?label=Sponsor%20Rio&amp;amp;logo=github&amp;amp;style=for-the-badge" alt="Sponsor Rio terminal" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Packaging&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/rio-terminal/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/rio-terminal.svg?columns=3" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Platforms&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Details&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MacOs &lt;em&gt;as desktop application&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://rioterm.com/docs/install/macos"&gt;Installation guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux &lt;em&gt;as desktop application&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://rioterm.com/docs/install/linux"&gt;Installation guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows &lt;em&gt;as desktop application&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://rioterm.com/docs/install/windows"&gt;Installation guide&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Web Browser &lt;em&gt;(WebAssembly)&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;(Sugarloaf is ready but Rio still need to be ported)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Demo with split and CRT on MacOS&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/raphamorim/rio/main/docs/static/assets/posts/0.2.0/demo-rio.png" alt="Demo Rio 0.2.0 on MacOS" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Demo with blurred background on Linux&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/raphamorim/rio/main/docs/static/assets/demos/demos-nixos-blur.png" alt="Demo blurred background" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Demo of Rio running on a Steam Deck&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/raphamorim/rio/main/docs/static/assets/demos/demo-flatpak-steamdeck.jpg" alt="Demo of Rio running on a Steam Deck" /&gt;&lt;/p&gt; 
&lt;h2&gt;Minimal stable rust version&lt;/h2&gt; 
&lt;p&gt;Rio's MSRV is 1.90.0.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tursodatabase/turso</title>
      <link>https://github.com/tursodatabase/turso</link>
      <description>&lt;p&gt;Turso Database is a project to build the next evolution of SQLite.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/tursodatabase/turso/main/assets/turso.png" alt="Turso Database" width="800" /&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;Turso Database&lt;/h1&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; An in-process SQL database, compatible with SQLite. &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a title="Build Status" target="_blank" href="https://github.com/tursodatabase/turso/actions/workflows/rust.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/tursodatabase/turso/rust.yml?style=flat-square" /&gt;&lt;/a&gt; &lt;a title="Releases" target="_blank" href="https://github.com/tursodatabase/turso/releases"&gt;&lt;img src="https://img.shields.io/github/release/tursodatabase/turso?style=flat-square&amp;amp;color=9CF" /&gt;&lt;/a&gt; &lt;a title="Rust" target="_blank" href="https://crates.io/crates/turso"&gt;&lt;img alt="PyPI" src="https://img.shields.io/crates/v/turso" /&gt;&lt;/a&gt; &lt;a title="JavaScript" target="_blank" href="https://www.npmjs.com/package/@tursodatabase/database"&gt;&lt;img alt="PyPI" src="https://img.shields.io/npm/v/@tursodatabase/database" /&gt;&lt;/a&gt; &lt;a title="Python" target="_blank" href="https://pypi.org/project/pyturso/"&gt;&lt;img alt="PyPI" src="https://img.shields.io/pypi/v/pyturso" /&gt;&lt;/a&gt; &lt;a title="MIT" target="_blank" href="https://github.com/tursodatabase/turso/raw/main/LICENSE.md"&gt;&lt;img src="http://img.shields.io/badge/license-MIT-orange.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a title="GitHub Pull Requests" target="_blank" href="https://github.com/tursodatabase/turso/pulls"&gt;&lt;img src="https://img.shields.io/github/issues-pr-closed/tursodatabase/turso.svg?style=flat-square&amp;amp;color=FF9966" /&gt;&lt;/a&gt; &lt;a title="GitHub Commits" target="_blank" href="https://github.com/tursodatabase/turso/commits/main"&gt;&lt;img src="https://img.shields.io/github/commit-activity/m/tursodatabase/turso.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;a title="Last Commit" target="_blank" href="https://github.com/tursodatabase/turso/commits/main"&gt;&lt;img src="https://img.shields.io/github/last-commit/tursodatabase/turso.svg?style=flat-square&amp;amp;color=FF9900" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a title="Developer's Discord" target="_blank" href="https://discord.gg/jgjmyYgHwB"&gt;&lt;img alt="Chat with the Core Developers on Discord" src="https://img.shields.io/discord/1258658826257961020?label=Discord&amp;amp;logo=Discord&amp;amp;style=social&amp;amp;label=Core%20Developers" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a title="Users's Discord" target="_blank" href="https://tur.so/discord"&gt;&lt;img alt="Chat with other users of Turso (and Turso Cloud) on Discord" src="https://img.shields.io/discord/933071162680958986?label=Discord&amp;amp;logo=Discord&amp;amp;style=social&amp;amp;label=Users" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Turso Database is an in-process SQL database written in Rust, compatible with SQLite.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚠️ Warning:&lt;/strong&gt; This software is in BETA. It may still contain bugs and unexpected behavior. Use caution with production data and ensure you have backups.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features and Roadmap&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SQLite compatibility&lt;/strong&gt; for SQL dialect, file formats, and the C API [see &lt;a href="https://raw.githubusercontent.com/tursodatabase/turso/main/COMPAT.md"&gt;document&lt;/a&gt; for details]&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Change data capture (CDC)&lt;/strong&gt; for real-time tracking of database changes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Language support&lt;/strong&gt; for 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tursodatabase/turso-go"&gt;Go&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/javascript"&gt;JavaScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/java"&gt;Java&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/python"&gt;Python&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/rust"&gt;Rust&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/javascript"&gt;WebAssembly&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Asynchronous I/O&lt;/strong&gt; support on Linux with &lt;code&gt;io_uring&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cross-platform&lt;/strong&gt; support for Linux, macOS, Windows and browsers (through WebAssembly)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vector support&lt;/strong&gt; support including exact search and vector manipulation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Improved schema management&lt;/strong&gt; including extended &lt;code&gt;ALTER&lt;/code&gt; support and faster schema changes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The database has the following experimental features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;BEGIN CONCURRENT&lt;/code&gt;&lt;/strong&gt; for improved write throughput using multi-version concurrency control (MVCC).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Incremental computation&lt;/strong&gt; using DBSP for incremental view mainatenance and query subscriptions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following features are on our current roadmap:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Vector indexing&lt;/strong&gt; for fast approximate vector search, similar to &lt;a href="https://turso.tech/vector"&gt;libSQL vector search&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Please see the &lt;a href="https://raw.githubusercontent.com/tursodatabase/turso/main/docs/manual.md"&gt;Turso Database Manual&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;💻 Command Line&lt;/summary&gt; 
 &lt;br /&gt; You can install the latest `turso` release with: 
 &lt;pre&gt;&lt;code class="language-shell"&gt;curl --proto '=https' --tlsv1.2 -LsSf \
  https://github.com/tursodatabase/turso/releases/latest/download/turso_cli-installer.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Then launch the interactive shell:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;$ tursodb
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This will start the Turso interactive shell where you can execute SQL statements:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-console"&gt;Turso
Enter ".help" for usage hints.
Connected to a transient in-memory database.
Use ".open FILENAME" to reopen on a persistent database
turso&amp;gt; CREATE TABLE users (id INT, username TEXT);
turso&amp;gt; INSERT INTO users VALUES (1, 'alice');
turso&amp;gt; INSERT INTO users VALUES (2, 'bob');
turso&amp;gt; SELECT * FROM users;
1|alice
2|bob
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;You can also build and run the latest development version with:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;cargo run
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you like docker, we got you covered. Simply run this in the root folder:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;make docker-cli-build &amp;amp;&amp;amp; \
make docker-cli-run
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;🦀 Rust&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;pre&gt;&lt;code class="language-console"&gt;cargo add turso
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Example usage:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-rust"&gt;let db = Builder::new_local("sqlite.db").build().await?;
let conn = db.connect()?;

let res = conn.query("SELECT * FROM users", ()).await?;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;✨ JavaScript&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;pre&gt;&lt;code class="language-console"&gt;npm i @tursodatabase/database
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Example usage:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-js"&gt;import { connect } from '@tursodatabase/database';

const db = await connect('sqlite.db');
const stmt = db.prepare('SELECT * FROM users');
const users = stmt.all();
console.log(users);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;🐍 Python&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;pre&gt;&lt;code class="language-console"&gt;uv pip install pyturso
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Example usage:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;import turso

con = turso.connect("sqlite.db")
cur = con.cursor()
res = cur.execute("SELECT * FROM users")
print(res.fetchone())
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;🦫 Go&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;pre&gt;&lt;code class="language-console"&gt;go get github.com/tursodatabase/turso-go
go install github.com/tursodatabase/turso-go
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Example usage:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-go"&gt;import (
    "database/sql"
    _ "github.com/tursodatabase/turso-go"
)

conn, _ = sql.Open("turso", "sqlite.db")
defer conn.Close()

stmt, _ := conn.Prepare("select * from users")
defer stmt.Close()

rows, _ = stmt.Query()
for rows.Next() {
    var id int
    var username string
    _ := rows.Scan(&amp;amp;id, &amp;amp;username)
    fmt.Printf("User: ID: %d, Username: %s\n", id, username)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;☕️ Java&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;We integrated Turso Database into JDBC. For detailed instructions on how to use Turso Database with java, please refer to the &lt;a href="https://raw.githubusercontent.com/tursodatabase/turso/main/bindings/java/README.md"&gt;README.md under bindings/java&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;🤖 MCP Server Mode&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;The Turso CLI includes a built-in &lt;a href="https://modelcontextprotocol.io/"&gt;Model Context Protocol (MCP)&lt;/a&gt; server that allows AI assistants to interact with your databases.&lt;/p&gt; 
 &lt;p&gt;Start the MCP server with:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;tursodb your_database.db --mcp
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The MCP server provides seven tools for database interaction:&lt;/p&gt; 
 &lt;h4&gt;Available Tools&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;open_database&lt;/code&gt;&lt;/strong&gt; - Open a new database&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;current_database&lt;/code&gt;&lt;/strong&gt; - Describe the current database&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_tables&lt;/code&gt;&lt;/strong&gt; - List all tables in the database&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;describe_table&lt;/code&gt;&lt;/strong&gt; - Describe the structure of a specific table&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;execute_query&lt;/code&gt;&lt;/strong&gt; - Execute read-only SELECT queries&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;insert_data&lt;/code&gt;&lt;/strong&gt; - Insert new data into tables&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;update_data&lt;/code&gt;&lt;/strong&gt; - Update existing data in tables&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;delete_data&lt;/code&gt;&lt;/strong&gt; - Delete data from tables&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;schema_change&lt;/code&gt;&lt;/strong&gt; - Execute schema modification statements (CREATE TABLE, ALTER TABLE, DROP TABLE)&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h4&gt;Example Usage&lt;/h4&gt; 
 &lt;p&gt;The MCP server runs as a single process that handles multiple JSON-RPC requests over stdin/stdout. Here's how to interact with it:&lt;/p&gt; 
 &lt;h4&gt;Example with In-Memory Database&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;cat &amp;lt;&amp;lt; 'EOF' | tursodb --mcp
{"jsonrpc": "2.0", "id": 1, "method": "initialize", "params": {"protocolVersion": "2024-11-05", "capabilities": {}, "clientInfo": {"name": "client", "version": "1.0"}}}
{"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "schema_change", "arguments": {"query": "CREATE TABLE users (id INTEGER, name TEXT, email TEXT)"}}}
{"jsonrpc": "2.0", "id": 3, "method": "tools/call", "params": {"name": "list_tables", "arguments": {}}}
{"jsonrpc": "2.0", "id": 4, "method": "tools/call", "params": {"name": "insert_data", "arguments": {"query": "INSERT INTO users VALUES (1, 'Alice', 'alice@example.com')"}}}
{"jsonrpc": "2.0", "id": 5, "method": "tools/call", "params": {"name": "execute_query", "arguments": {"query": "SELECT * FROM users"}}}
EOF
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Example with Existing Database&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Working with an existing database file
cat &amp;lt;&amp;lt; 'EOF' | tursodb mydb.db --mcp
{"jsonrpc": "2.0", "id": 1, "method": "initialize", "params": {"protocolVersion": "2024-11-05", "capabilities": {}, "clientInfo": {"name": "client", "version": "1.0"}}}
{"jsonrpc": "2.0", "id": 2, "method": "tools/call", "params": {"name": "list_tables", "arguments": {}}}
EOF
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Using with Claude Code&lt;/h4&gt; 
 &lt;p&gt;If you're using &lt;a href="https://claude.ai/code"&gt;Claude Code&lt;/a&gt;, you can easily connect to your Turso MCP server using the built-in MCP management commands:&lt;/p&gt; 
 &lt;h5&gt;Quick Setup&lt;/h5&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Add the MCP server&lt;/strong&gt; to Claude Code:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;claude mcp add my-database -- tursodb ./path/to/your/database.db --mcp
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Restart Claude Code&lt;/strong&gt; to activate the connection&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start querying&lt;/strong&gt; your database through natural language!&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h5&gt;Command Breakdown&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;claude mcp add my-database -- tursodb ./path/to/your/database.db --mcp
#              ↑            ↑       ↑                           ↑
#              |            |       |                           |
#              Name         |       Database path               MCP flag
#                          Separator
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;my-database&lt;/code&gt;&lt;/strong&gt; - Choose any name for your MCP server&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;--&lt;/code&gt;&lt;/strong&gt; - Required separator between Claude options and your command&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;tursodb&lt;/code&gt;&lt;/strong&gt; - The Turso database CLI&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;./path/to/your/database.db&lt;/code&gt;&lt;/strong&gt; - Path to your SQLite database file&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;--mcp&lt;/code&gt;&lt;/strong&gt; - Enables MCP server mode&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h5&gt;Example Usage&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# For a local project database
cd /your/project
claude mcp add my-project-db -- tursodb ./data/app.db --mcp

# For an absolute path
claude mcp add analytics-db -- tursodb /Users/you/databases/analytics.db --mcp

# For a specific project (local scope)
claude mcp add project-db --local -- tursodb ./database.db --mcp
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;Managing MCP Servers&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# List all configured MCP servers
claude mcp list

# Get details about a specific server
claude mcp get my-database

# Remove an MCP server
claude mcp remove my-database
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Once configured, you can ask Claude Code to:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;"Show me all tables in the database"&lt;/li&gt; 
  &lt;li&gt;"What's the schema for the users table?"&lt;/li&gt; 
  &lt;li&gt;"Find all posts with more than 100 upvotes"&lt;/li&gt; 
  &lt;li&gt;"Insert a new user with name 'Alice' and email '&lt;a href="mailto:alice@example.com"&gt;alice@example.com&lt;/a&gt;'"&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We'd love to have you contribute to Turso Database! Please check out the &lt;a href="https://raw.githubusercontent.com/tursodatabase/turso/main/CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h3&gt;Found a data corruption bug? Get up to $1,000.00&lt;/h3&gt; 
&lt;p&gt;SQLite is loved because it is the most reliable database in the world. The next evolution of SQLite has to match or surpass this level of reliability. Turso is built with &lt;a href="https://raw.githubusercontent.com/tursodatabase/turso/main/simulator/"&gt;Deterministic Simulation Testing&lt;/a&gt; from the ground up, and is also tested by &lt;a href="https://antithesis.com"&gt;Antithesis&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Even during Alpha, if you find a bug that leads to a data corruption and demonstrate how our simulator failed to catch it, you can get up to $1,000.00. As the project matures we will increase the size of the prize, and the scope of the bugs.&lt;/p&gt; 
&lt;p&gt;More details &lt;a href="https://turso.algora.io"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can see an example of an awarded case on &lt;a href="https://github.com/tursodatabase/turso/issues/2049"&gt;#2049&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Turso core staff are not eligible.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Is Turso Database ready for production use?&lt;/h3&gt; 
&lt;p&gt;Turso Database is currently under heavy development and is &lt;strong&gt;not&lt;/strong&gt; ready for production use.&lt;/p&gt; 
&lt;h3&gt;How is Turso Database different from Turso's libSQL?&lt;/h3&gt; 
&lt;p&gt;Turso Database is a project to build the next evolution of SQLite in Rust, with a strong open contribution focus and features like native async support, vector search, and more. The libSQL project is also an attempt to evolve SQLite in a similar direction, but through a fork rather than a rewrite.&lt;/p&gt; 
&lt;p&gt;Rewriting SQLite in Rust started as an unassuming experiment, and due to its incredible success, replaces libSQL as our intended direction. At this point, libSQL is production ready, Turso Database is not - although it is evolving rapidly. More details &lt;a href="https://turso.tech/blog/we-will-rewrite-sqlite-and-we-are-going-all-in"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Publications&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pekka Enberg, Sasu Tarkoma, Jon Crowcroft Ashwin Rao (2024). Serverless Runtime / Database Co-Design With Asynchronous I/O. In &lt;em&gt;EdgeSys ‘24&lt;/em&gt;. &lt;a href="https://penberg.org/papers/penberg-edgesys24.pdf"&gt;[PDF]&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Pekka Enberg, Sasu Tarkoma, and Ashwin Rao (2023). Towards Database and Serverless Runtime Co-Design. In &lt;em&gt;CoNEXT-SW ’23&lt;/em&gt;. [&lt;a href="https://penberg.org/papers/penberg-conext-sw-23.pdf"&gt;PDF&lt;/a&gt;] [&lt;a href="https://penberg.org/papers/penberg-conext-sw-23-slides.pdf"&gt;Slides&lt;/a&gt;]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/tursodatabase/turso/main/LICENSE.md"&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contribution&lt;/h3&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in Turso Database by you, shall be licensed as MIT, without any additional terms or conditions.&lt;/p&gt; 
&lt;h2&gt;Partners&lt;/h2&gt; 
&lt;p&gt;Thanks to all the partners of Turso!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://antithesis.com/"&gt;&lt;img src="https://raw.githubusercontent.com/tursodatabase/turso/main/assets/antithesis.jpg" width="400" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://blacksmith.sh"&gt;&lt;img src="https://raw.githubusercontent.com/tursodatabase/turso/main/assets/blacksmith.svg?sanitize=true" width="400" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://nyrkio.com/"&gt;&lt;img src="https://raw.githubusercontent.com/tursodatabase/turso/main/assets/turso-nyrkio.png" width="400" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks to all the contributors to Turso Database!&lt;/p&gt; 
&lt;a href="https://github.com/tursodatabase/turso/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=tursodatabase/turso" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>linebender/vello</title>
      <link>https://github.com/linebender/vello</link>
      <description>&lt;p&gt;A GPU compute-centric 2D renderer.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;Vello&lt;/h1&gt; 
 &lt;p&gt;&lt;strong&gt;A GPU compute-centric 2D renderer&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://xi.zulipchat.com/#narrow/channel/197075-vello"&gt;&lt;img src="https://img.shields.io/badge/Linebender-%23vello-blue?logo=Zulip" alt="Linebender Zulip" /&gt;&lt;/a&gt; &lt;a href="https://deps.rs/repo/github/linebender/vello"&gt;&lt;img src="https://deps.rs/repo/github/linebender/vello/status.svg?sanitize=true" alt="dependency status" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/linebender/vello/main/#license"&gt;&lt;img src="https://img.shields.io/badge/license-Apache--2.0_OR_MIT-blue.svg?sanitize=true" alt="Apache 2.0 or MIT license." /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/wgpu"&gt;&lt;img src="https://img.shields.io/badge/wgpu-v24.0.1-orange.svg?sanitize=true" alt="wgpu version" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://crates.io/crates/vello"&gt;&lt;img src="https://img.shields.io/crates/v/vello.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://docs.rs/vello"&gt;&lt;img src="https://docs.rs/vello/badge.svg?sanitize=true" alt="Docs" /&gt;&lt;/a&gt; &lt;a href="https://github.com/linebender/vello/actions"&gt;&lt;img src="https://github.com/linebender/vello/workflows/CI/badge.svg?sanitize=true" alt="Build status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Vello is a 2D graphics rendering engine written in Rust, with a focus on GPU compute. It can draw large 2D scenes with interactive or near-interactive performance, using &lt;a href="https://wgpu.rs/"&gt;&lt;code&gt;wgpu&lt;/code&gt;&lt;/a&gt; for GPU access.&lt;/p&gt; 
&lt;p&gt;Quickstart to run an example program:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cargo run -p with_winit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://github.com/linebender/vello/assets/8573618/cc2b742e-2135-4b70-8051-c49aeddb5d19" alt="image" /&gt;&lt;/p&gt; 
&lt;p&gt;It is used as the rendering backend for &lt;a href="https://github.com/linebender/xilem/"&gt;Xilem&lt;/a&gt;, a Rust GUI toolkit.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Vello can currently be considered in an alpha state. In particular, we're still working on the following:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/linebender/vello/issues/476"&gt;Implementing blur and filter effects&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/linebender/vello/issues/49"&gt;Conflations artifacts&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/linebender/vello/issues/366"&gt;GPU memory allocation strategy&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/linebender/vello/issues/204"&gt;Glyph caching&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Significant changes are documented in &lt;a href="https://github.com/linebender/vello/tree/main/CHANGELOG.md"&gt;the changelog&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;p&gt;Vello is meant to fill the same place in the graphics stack as other vector graphics renderers like &lt;a href="https://skia.org/"&gt;Skia&lt;/a&gt;, &lt;a href="https://www.cairographics.org/"&gt;Cairo&lt;/a&gt;, and its predecessor project &lt;a href="https://github.com/linebender/piet"&gt;Piet&lt;/a&gt;. On a basic level, that means it provides tools to render shapes, images, gradients, text, etc, using a PostScript-inspired API, the same that powers SVG files and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D"&gt;the browser &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Vello's selling point is that it gets better performance than other renderers by better leveraging the GPU. In traditional PostScript-style renderers, some steps of the render process like sorting and clipping either need to be handled in the CPU or done through the use of intermediary textures. Vello avoids this by using prefix-sum algorithms to parallelize work that usually needs to happen in sequence, so that work can be offloaded to the GPU with minimal use of temporary buffers.&lt;/p&gt; 
&lt;p&gt;This means that Vello needs a GPU with support for compute shaders to run.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Vello is meant to be integrated deep in UI render stacks. While drawing in a Vello scene is easy, actually rendering that scene to a surface requires setting up a wgpu context, which is a non-trivial task.&lt;/p&gt; 
&lt;p&gt;To use Vello as the renderer for your PDF reader / GUI toolkit / etc, your code will have to look roughly like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rust"&gt;use vello::{
    kurbo::{Affine, Circle},
    peniko::{Color, Fill},
    *,
};

// Initialize wgpu and get handles
let (width, height) = ...;
let device: wgpu::Device = ...;
let queue: wgpu::Queue = ...;
let mut renderer = Renderer::new(
   &amp;amp;device,
   RendererOptions::default()
).expect("Failed to create renderer");
// Create scene and draw stuff in it
let mut scene = vello::Scene::new();
scene.fill(
   vello::peniko::Fill::NonZero,
   vello::Affine::IDENTITY,
   vello::Color::from_rgb8(242, 140, 168),
   None,
   &amp;amp;vello::Circle::new((420.0, 200.0), 120.0),
);
// Draw more stuff
scene.push_layer(...);
scene.fill(...);
scene.stroke(...);
scene.pop_layer(...);
let texture = device.create_texture(&amp;amp;...);

// Render to a wgpu Texture
renderer
   .render_to_texture(
      &amp;amp;device,
      &amp;amp;queue,
      &amp;amp;scene,
      &amp;amp;texture,
      &amp;amp;vello::RenderParams {
         base_color: palette::css::BLACK, // Background color
         width,
         height,
         antialiasing_method: AaConfig::Msaa16,
      },
   )
   .expect("Failed to render to a texture");
// Do things with `texture`, such as blitting it to the Surface using
// wgpu::util::TextureBlitter
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/linebender/vello/tree/main/examples"&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt; directory for code that integrates with frameworks like winit.&lt;/p&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;p&gt;We've observed 177 fps for the paris-30k test scene on an M1 Max, at a resolution of 1600 pixels square, which is excellent performance and represents something of a best case for the engine.&lt;/p&gt; 
&lt;p&gt;More formal benchmarks are on their way.&lt;/p&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;h3&gt;SVG&lt;/h3&gt; 
&lt;p&gt;A separate Linebender integration for rendering SVG files is available through &lt;a href="https://github.com/linebender/vello_svg"&gt;&lt;code&gt;vello_svg&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Lottie&lt;/h3&gt; 
&lt;p&gt;A separate Linebender integration for playing Lottie animations is available through &lt;a href="https://github.com/linebender/velato"&gt;&lt;code&gt;velato&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Bevy&lt;/h3&gt; 
&lt;p&gt;A separate Linebender integration for rendering raw scenes or Lottie and SVG files in &lt;a href="https://bevyengine.org/"&gt;Bevy&lt;/a&gt; through &lt;a href="https://github.com/linebender/bevy_vello"&gt;&lt;code&gt;bevy_vello&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;Our examples are provided in separate packages in the &lt;a href="https://github.com/linebender/vello/tree/main/examples"&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt; directory. This allows them to have independent dependencies and faster builds. Examples must be selected using the &lt;code&gt;--package&lt;/code&gt; (or &lt;code&gt;-p&lt;/code&gt;) Cargo flag.&lt;/p&gt; 
&lt;h3&gt;Winit&lt;/h3&gt; 
&lt;p&gt;Our &lt;a href="https://github.com/rust-windowing/winit"&gt;winit&lt;/a&gt; example (&lt;a href="https://github.com/linebender/vello/tree/main/examples/with_winit"&gt;examples/with_winit&lt;/a&gt;) demonstrates rendering to a &lt;a href="https://github.com/rust-windowing/winit"&gt;winit&lt;/a&gt; window. By default, this renders the &lt;a href="https://commons.wikimedia.org/wiki/File:Ghostscript_Tiger.svg"&gt;GhostScript Tiger&lt;/a&gt; as well as all SVG files you add in the &lt;a href="https://github.com/linebender/vello/tree/main/examples/assets/downloads"&gt;examples/assets/downloads&lt;/a&gt; directory. A custom list of SVG file paths (and directories to render all SVG files from) can be provided as arguments instead. It also includes a collection of test scenes showing the capabilities of &lt;code&gt;vello&lt;/code&gt;, which can be shown with &lt;code&gt;--test-scenes&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cargo run -p with_winit
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- ### Headless --&gt; 
&lt;h2&gt;Platforms&lt;/h2&gt; 
&lt;p&gt;We aim to target all environments which can support WebGPU with the &lt;a href="https://www.w3.org/TR/webgpu/#limits"&gt;default limits&lt;/a&gt;. We defer to &lt;a href="https://wgpu.rs/"&gt;&lt;code&gt;wgpu&lt;/code&gt;&lt;/a&gt; for this support. Other platforms are more tricky, and may require special building/running procedures.&lt;/p&gt; 
&lt;h3&gt;Web&lt;/h3&gt; 
&lt;p&gt;Because Vello relies heavily on compute shaders, we rely on the emerging WebGPU standard to run on the web. Browser support for WebGPU is still evolving. Vello has been tested using production versions of Chrome, but WebGPU support in Firefox and Safari is still experimental. It may be necessary to use development browsers and explicitly enable WebGPU.&lt;/p&gt; 
&lt;p&gt;The following command builds and runs a web version of the &lt;a href="https://raw.githubusercontent.com/linebender/vello/main/#winit"&gt;winit demo&lt;/a&gt;. This uses &lt;a href="https://github.com/rukai/cargo-run-wasm"&gt;&lt;code&gt;cargo-run-wasm&lt;/code&gt;&lt;/a&gt; to build the example for web, and host a local server for it&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Make sure the Rust toolchain supports the wasm32 target
rustup target add wasm32-unknown-unknown

# The binary name must also be explicitly provided as it differs from the package name
cargo run_wasm -p with_winit --bin with_winit_bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There is also a web demo &lt;a href="https://linebender.github.io/vello"&gt;available here&lt;/a&gt; on supporting web browsers.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The web is not currently a primary target for Vello, and WebGPU implementations are incomplete, so you might run into issues running this example.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Android&lt;/h3&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/linebender/vello/main/#winit"&gt;&lt;code&gt;with_winit&lt;/code&gt;&lt;/a&gt; example supports running on Android, using &lt;a href="https://crates.io/crates/cargo-apk"&gt;cargo apk&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cargo apk run -p with_winit --lib
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] cargo apk doesn't support running in release mode without configuration. See &lt;a href="https://crates.io/crates/cargo-apk"&gt;their crates page docs&lt;/a&gt; (around &lt;code&gt;package.metadata.android.signing.&amp;lt;profile&amp;gt;&lt;/code&gt;).&lt;/p&gt; 
 &lt;p&gt;See also &lt;a href="https://github.com/rust-mobile/cargo-apk/issues/16"&gt;cargo-apk#16&lt;/a&gt;. To run in release mode, you must add the following to &lt;code&gt;examples/with_winit/Cargo.toml&lt;/code&gt; (changing &lt;code&gt;$HOME&lt;/code&gt; to your home directory):&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[package.metadata.android.signing.release]
path = "$HOME/.android/debug.keystore"
keystore_password = "android"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] As &lt;code&gt;cargo apk&lt;/code&gt; does not allow passing command line arguments or environment variables to the app when ran, these can be embedded into the program at compile time (currently for Android only) &lt;code&gt;with_winit&lt;/code&gt; currently supports the environment variables:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;VELLO_STATIC_LOG&lt;/code&gt;, which is equivalent to &lt;code&gt;RUST_LOG&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;VELLO_STATIC_ARGS&lt;/code&gt;, which is equivalent to passing in command line arguments&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For example (with unix shell environment variable syntax):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;VELLO_STATIC_LOG="vello=trace" VELLO_STATIC_ARGS="--test-scenes" cargo apk run -p with_winit --lib
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Minimum supported Rust Version (MSRV)&lt;/h2&gt; 
&lt;p&gt;This version of Vello has been verified to compile with &lt;strong&gt;Rust 1.86&lt;/strong&gt; and later.&lt;/p&gt; 
&lt;p&gt;Future versions of Vello might increase the Rust version requirement. It will not be treated as a breaking change and as such can even happen with small patch releases.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click here if compiling fails.&lt;/summary&gt; 
 &lt;p&gt;As time has passed, some of Vello's dependencies could have released versions with a higher Rust requirement. If you encounter a compilation issue due to a dependency and don't want to upgrade your Rust toolchain, then you could downgrade the dependency.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# Use the problematic dependency's name and version
cargo update -p package_name --precise 0.1.1
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Discussion of Vello development happens in the &lt;a href="https://xi.zulipchat.com/"&gt;Linebender Zulip&lt;/a&gt;, specifically the &lt;a href="https://xi.zulipchat.com/#narrow/channel/197075-vello"&gt;#vello channel&lt;/a&gt;. All public content can be read without logging in.&lt;/p&gt; 
&lt;p&gt;Contributions are welcome by pull request. The &lt;a href="https://www.rust-lang.org/policies/code-of-conduct"&gt;Rust code of conduct&lt;/a&gt; applies.&lt;/p&gt; 
&lt;p&gt;Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache 2.0 license, shall be licensed as noted in the &lt;a href="https://raw.githubusercontent.com/linebender/vello/main/#license"&gt;License&lt;/a&gt; section, without any additional terms or conditions.&lt;/p&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;Vello was previously known as &lt;code&gt;piet-gpu&lt;/code&gt;. This prior incarnation used a custom cross-API hardware abstraction layer, called &lt;code&gt;piet-gpu-hal&lt;/code&gt;, instead of &lt;a href="https://wgpu.rs/"&gt;&lt;code&gt;wgpu&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;An archive of this version can be found in the branches &lt;a href="https://github.com/linebender/piet-gpu/tree/custom-hal-archive-with-shaders"&gt;&lt;code&gt;custom-hal-archive-with-shaders&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/linebender/piet-gpu/tree/custom-hal-archive"&gt;&lt;code&gt;custom-hal-archive&lt;/code&gt;&lt;/a&gt;. This succeeded the previous prototype, &lt;a href="https://github.com/linebender/piet-metal"&gt;piet-metal&lt;/a&gt;, and included work adapted from &lt;a href="https://github.com/bzm3r/piet-dx12"&gt;piet-dx12&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The decision to lay down &lt;code&gt;piet-gpu-hal&lt;/code&gt; in favor of WebGPU is discussed in detail in the blog post &lt;a href="https://raphlinus.github.io/rust/gpu/2023/01/07/requiem-piet-gpu-hal.html"&gt;Requiem for piet-gpu-hal&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;a href="https://github.com/linebender/vello/tree/main/doc/vision.md"&gt;vision&lt;/a&gt; document dated December 2020 explained the longer-term goals of the project, and how we might get there. Many of these items are out-of-date or completed, but it still may provide some useful background.&lt;/p&gt; 
&lt;h2&gt;Related projects&lt;/h2&gt; 
&lt;p&gt;Vello takes inspiration from many other rendering projects, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/servo/pathfinder"&gt;Pathfinder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fuchsia.googlesource.com/fuchsia/+/refs/heads/master/src/graphics/lib/compute/spinel/"&gt;Spinel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/forma"&gt;Forma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://w3.impa.br/~diego/projects/GanEtAl14/"&gt;Massively Parallel Vector Graphics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hhoppe.com/proj/ravg/"&gt;Random-access rendering of general vector graphics&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under either of&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Apache License, Version 2.0 (&lt;a href="https://raw.githubusercontent.com/linebender/vello/main/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt; or &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;MIT license (&lt;a href="https://raw.githubusercontent.com/linebender/vello/main/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt; or &lt;a href="http://opensource.org/licenses/MIT"&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;at your option.&lt;/p&gt; 
&lt;p&gt;In addition, all files in the &lt;a href="https://github.com/linebender/vello/tree/main/vello_shaders/shader"&gt;&lt;code&gt;vello_shaders/shader&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/linebender/vello/tree/main/vello_shaders/src/cpu"&gt;&lt;code&gt;vello_shaders/src/cpu&lt;/code&gt;&lt;/a&gt; directories and subdirectories thereof are alternatively licensed under the Unlicense (&lt;a href="https://github.com/linebender/vello/tree/main/vello_shaders/shader/UNLICENSE"&gt;vello_shaders/shader/UNLICENSE&lt;/a&gt; or &lt;a href="http://unlicense.org/"&gt;http://unlicense.org/&lt;/a&gt;). For clarity, these files are also licensed under either of the above licenses. The intent is for this research to be used in as broad a context as possible.&lt;/p&gt; 
&lt;p&gt;The files in subdirectories of the &lt;a href="https://github.com/linebender/vello/tree/main/examples/assets"&gt;&lt;code&gt;examples/assets&lt;/code&gt;&lt;/a&gt; directory are licensed solely under their respective licenses, available in the &lt;code&gt;LICENSE&lt;/code&gt; file in their directories.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>prefix-dev/pixi</title>
      <link>https://github.com/prefix-dev/pixi</link>
      <description>&lt;p&gt;Package management made easy&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; &lt;a href="https://github.com/prefix-dev/pixi/"&gt; 
  &lt;picture&gt; 
   &lt;source srcset="https://github.com/prefix-dev/pixi/assets/4995967/a3f9ff01-c9fb-4893-83c0-2a3f924df63e" type="image/webp" /&gt; 
   &lt;source srcset="https://github.com/prefix-dev/pixi/assets/4995967/e42739c4-4cd9-49bb-9d0a-45f8088494b5" type="image/png" /&gt; 
   &lt;img src="https://github.com/prefix-dev/pixi/assets/4995967/e42739c4-4cd9-49bb-9d0a-45f8088494b5" alt="banner" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/h1&gt; 
&lt;h1 align="center"&gt; &lt;p&gt;&lt;img src="https://img.shields.io/badge/license-BSD--3--Clause-blue?style=flat-square" alt="License" /&gt; &lt;a href="https://discord.gg/kKV8ZxyzY4"&gt;&lt;img src="https://img.shields.io/discord/1082332781146800168.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&amp;amp;style=flat-square" alt="Project Chat" /&gt;&lt;/a&gt; &lt;a href="https://pixi.sh"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/prefix-dev/pixi/main/assets/badge/v0.json&amp;amp;style=flat-square" alt="Pixi Badge" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/h1&gt; 
&lt;h1&gt;Pixi: Package Management Made Easy&lt;/h1&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;pixi&lt;/code&gt; is a cross-platform, multi-language package manager and workflow tool built on the foundation of the conda ecosystem. It provides developers with an exceptional experience similar to popular package managers like &lt;a href="https://doc.rust-lang.org/cargo/"&gt;&lt;code&gt;cargo&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://docs.npmjs.com"&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt;, but for any language.&lt;/p&gt; 
&lt;p&gt;Developed with ❤️ at &lt;a href="https://prefix.dev"&gt;prefix.dev&lt;/a&gt;. &lt;a href="https://asciinema.org/a/636482"&gt;&lt;img src="https://github.com/prefix-dev/pixi/assets/12893423/0fc8f8c8-ac13-4c14-891b-dc613f25475b" alt="Real-time pixi_demo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports &lt;strong&gt;multiple languages&lt;/strong&gt; including Python, C++, and R using Conda packages. You can find available packages on &lt;a href="https://prefix.dev"&gt;prefix.dev&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Compatible with all major operating systems: Linux, Windows, macOS (including Apple Silicon).&lt;/li&gt; 
 &lt;li&gt;Always includes an up-to-date &lt;a href="https://pixi.sh/latest/workspace/lockfile/"&gt;&lt;strong&gt;lock file&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Provides a clean and simple Cargo-like &lt;strong&gt;command-line interface&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Allows you to install tools &lt;strong&gt;per-project&lt;/strong&gt; or &lt;strong&gt;system-wide&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Entirely written in &lt;strong&gt;Rust&lt;/strong&gt; and built on top of the &lt;strong&gt;&lt;a href="https://github.com/conda/rattler"&gt;rattler&lt;/a&gt;&lt;/strong&gt; library.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚡ &lt;a href="https://raw.githubusercontent.com/prefix-dev/pixi/main/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;⚙️ &lt;a href="https://raw.githubusercontent.com/prefix-dev/pixi/main/examples"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📚 &lt;a href="https://pixi.sh/"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;😍 &lt;a href="https://raw.githubusercontent.com/prefix-dev/pixi/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔨 &lt;a href="https://raw.githubusercontent.com/prefix-dev/pixi/main/#built-using-pixi"&gt;Built using Pixi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🚀 &lt;a href="https://github.com/prefix-dev/setup-pixi"&gt;GitHub Action&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;Pixi is ready for production! We are working hard to keep file-format changes compatible with the previous versions so that you can rely on Pixi with peace of mind.&lt;/p&gt; 
&lt;p&gt;Some notable features we envision for upcoming releases are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Build and publish&lt;/strong&gt; your project as a Conda package.&lt;/li&gt; 
 &lt;li&gt;Support for &lt;strong&gt;dependencies from source&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;More powerful "global installation" of packages towards a deterministic setup of global packages on multiple machines.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;pixi&lt;/code&gt; can be installed on macOS, Linux, and Windows. The provided scripts will automatically download the latest version of &lt;code&gt;pixi&lt;/code&gt;, extract it, and move the &lt;code&gt;pixi&lt;/code&gt; binary to &lt;code&gt;~/.pixi/bin&lt;/code&gt;. If this directory does not exist, the script will create it.&lt;/p&gt; 
&lt;h3&gt;macOS and Linux&lt;/h3&gt; 
&lt;p&gt;To install Pixi on macOS and Linux, open a terminal and run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsSL https://pixi.sh/install.sh | sh
# or with brew
brew install pixi
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The script will also update your &lt;code&gt;~/.bashrc&lt;/code&gt; to include &lt;code&gt;~/.pixi/bin&lt;/code&gt; in your &lt;code&gt;PATH&lt;/code&gt;, allowing you to invoke the &lt;code&gt;pixi&lt;/code&gt; command from anywhere. You might need to restart your terminal or source your shell for the changes to take effect.&lt;/p&gt; 
&lt;p&gt;Starting with macOS Catalina &lt;a href="https://support.apple.com/en-us/102360"&gt;zsh is the default login shell and interactive shell&lt;/a&gt;. Therefore, you might want to use &lt;code&gt;zsh&lt;/code&gt; instead of &lt;code&gt;bash&lt;/code&gt; in the install command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-zsh"&gt;curl -fsSL https://pixi.sh/install.sh | zsh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The script will also update your &lt;code&gt;~/.zshrc&lt;/code&gt; to include &lt;code&gt;~/.pixi/bin&lt;/code&gt; in your &lt;code&gt;PATH&lt;/code&gt;, allowing you to invoke the &lt;code&gt;pixi&lt;/code&gt; command from anywhere.&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;To install Pixi on Windows, open a PowerShell terminal (you may need to run it as an administrator) and run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;powershell -ExecutionPolicy ByPass -c "irm -useb https://pixi.sh/install.ps1 | iex"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Changing the &lt;a href="https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7.4#powershell-execution-policies"&gt;execution policy&lt;/a&gt; allows running a script from the internet. Check the script you would be running with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;powershell -c "irm -useb https://pixi.sh/install.ps1 | more"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The script will inform you once the installation is successful and add the &lt;code&gt;~/.pixi/bin&lt;/code&gt; directory to your &lt;code&gt;PATH&lt;/code&gt;, which will allow you to run the &lt;code&gt;pixi&lt;/code&gt; command from any location. Or with &lt;code&gt;winget&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;winget install prefix-dev.pixi
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Autocompletion&lt;/h3&gt; 
&lt;p&gt;To get autocompletion follow the instructions for your shell. Afterwards, restart the shell or source the shell config file.&lt;/p&gt; 
&lt;h4&gt;Bash (default on most Linux systems)&lt;/h4&gt; 
&lt;p&gt;Add the following to the end of &lt;code&gt;~/.bashrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ~/.bashrc

eval "$(pixi completion --shell bash)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Zsh (default on macOS)&lt;/h4&gt; 
&lt;p&gt;Add the following to the end of &lt;code&gt;~/.zshrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-zsh"&gt;# ~/.zshrc

eval "$(pixi completion --shell zsh)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;PowerShell (pre-installed on all Windows systems)&lt;/h4&gt; 
&lt;p&gt;Add the following to the end of &lt;code&gt;Microsoft.PowerShell_profile.ps1&lt;/code&gt;. You can check the location of this file by querying the &lt;code&gt;$PROFILE&lt;/code&gt; variable in PowerShell. Typically the path is &lt;code&gt;~\Documents\PowerShell\Microsoft.PowerShell_profile.ps1&lt;/code&gt; or &lt;code&gt;~/.config/powershell/Microsoft.PowerShell_profile.ps1&lt;/code&gt; on -Nix.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-pwsh"&gt;(&amp;amp; pixi completion --shell powershell) | Out-String | Invoke-Expression
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Fish&lt;/h4&gt; 
&lt;p&gt;Add the following to the end of &lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-fish"&gt;# ~/.config/fish/config.fish

pixi completion --shell fish | source
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Nushell&lt;/h4&gt; 
&lt;p&gt;Add the following to your Nushell config file (find it by running &lt;code&gt;$nu.config-path&lt;/code&gt; in Nushell):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-nushell"&gt;mkdir $"($nu.data-dir)/vendor/autoload"
pixi completion --shell nushell | save --force $"($nu.data-dir)/vendor/autoload/pixi-completions.nu"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Elvish&lt;/h4&gt; 
&lt;p&gt;Add the following to the end of &lt;code&gt;~/.elvish/rc.elv&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-elv"&gt;# ~/.elvish/rc.elv

eval (pixi completion --shell elvish | slurp)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Distro Packages&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/pixi/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/pixi.svg?sanitize=true" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Arch Linux&lt;/h4&gt; 
&lt;p&gt;You can install &lt;code&gt;pixi&lt;/code&gt; from the &lt;a href="https://archlinux.org/packages/extra/x86_64/pixi/"&gt;extra repository&lt;/a&gt; using &lt;a href="https://wiki.archlinux.org/title/Pacman"&gt;pacman&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pacman -S pixi
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Alpine Linux&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;pixi&lt;/code&gt; is available for &lt;a href="https://pkgs.alpinelinux.org/packages?name=pixi&amp;amp;branch=edge"&gt;Alpine Edge&lt;/a&gt;. It can be installed via &lt;a href="https://wiki.alpinelinux.org/wiki/Alpine_Package_Keeper"&gt;apk&lt;/a&gt; after enabling the &lt;a href="https://wiki.alpinelinux.org/wiki/Repositories"&gt;testing repository&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;apk add pixi
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build/install from source&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;pixi&lt;/code&gt; is 100% written in Rust and therefore it can be installed, built and tested with cargo. To start using &lt;code&gt;pixi&lt;/code&gt; from a source build run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cargo install --locked --git https://github.com/prefix-dev/pixi.git pixi
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We don't publish to &lt;code&gt;crates.io&lt;/code&gt; anymore, so you need to install it from the repository. The reason for this is that we depend on some unpublished crates which disallows us to publish to &lt;code&gt;crates.io&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;or when you want to make changes use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cargo build
cargo test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have any issues building because of the dependency on &lt;code&gt;rattler&lt;/code&gt; checkout it's &lt;a href="https://github.com/conda/rattler/tree/main#give-it-a-try"&gt;compile steps&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Uninstall&lt;/h2&gt; 
&lt;p&gt;To uninstall, the Pixi binary should be removed. Delete &lt;code&gt;pixi&lt;/code&gt; from the &lt;code&gt;$PIXI_DIR&lt;/code&gt; which is default to &lt;code&gt;~/.pixi/bin/pixi&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;So on Linux its:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;rm ~/.pixi/bin/pixi
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and on Windows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$PIXI_BIN = "$Env:LocalAppData\pixi\bin\pixi"; Remove-Item -Path $PIXI_BIN
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After this command you can still use the tools you installed with &lt;code&gt;pixi&lt;/code&gt;. To remove these as well just remove the whole &lt;code&gt;~/.pixi&lt;/code&gt; directory and remove the directory from your path.&lt;/p&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;p&gt;The cli looks as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;➜ pixi
Pixi [version 0.50.1] - Developer Workflow and Environment Management for Multi-Platform, Language-Agnostic Workspaces.

Pixi is a versatile developer workflow tool designed to streamline the management of your workspace's dependencies, tasks, and environments.
Built on top of the Conda ecosystem, Pixi offers seamless integration with the PyPI ecosystem.

Basic Usage:
    Initialize pixi for a workspace:
    $ pixi init
    $ pixi add python numpy pytest

    Run a task:
    $ pixi task add test 'pytest -s'
    $ pixi run test

Found a Bug or Have a Feature Request?
Open an issue at: https://github.com/prefix-dev/pixi/issues

Need Help?
Ask a question on the Prefix Discord server: https://discord.gg/kKV8ZxyzY4

For more information, see the documentation at: https://pixi.sh

Usage: pixi [OPTIONS] &amp;lt;COMMAND&amp;gt;

Commands:
  add          Adds dependencies to the workspace [aliases: a]
  auth         Login to prefix.dev or anaconda.org servers to access private channels
  build        Workspace configuration
  clean        Cleanup the environments
  completion   Generates a completion script for a shell
  config       Configuration management
  exec         Run a command and install it in a temporary environment [aliases: x]
  global       Subcommand for global package management actions [aliases: g]
  info         Information about the system, workspace and environments for the current machine
  init         Creates a new workspace
  import       Imports a file into an environment in an existing workspace.
  install      Install an environment, both updating the lockfile and installing the environment [aliases: i]
  list         List workspace's packages [aliases: ls]
  lock         Solve environment and update the lock file without installing the environments
  reinstall    Re-install an environment, both updating the lockfile and re-installing the environment
  remove       Removes dependencies from the workspace [aliases: rm]
  run          Runs task in the pixi environment [aliases: r]
  search       Search a conda package
  self-update  Update pixi to the latest version or a specific version
  shell        Start a shell in a pixi environment, run `exit` to leave the shell [aliases: s]
  shell-hook   Print the pixi environment activation script
  task         Interact with tasks in the workspace
  tree         Show a tree of workspace dependencies [aliases: t]
  update       The `update` command checks if there are newer versions of the dependencies and updates the `pixi.lock` file and environments accordingly
  upgrade      Checks if there are newer versions of the dependencies and upgrades them in the lockfile and manifest file
  upload       Upload a conda package
  workspace    Modify the workspace configuration file through the command line
  help         Print this message or the help of the given subcommand(s)

Options:
  -V, --version  Print version

Global Options:
  -h, --help           Display help information
  -v, --verbose...     Increase logging verbosity (-v for warnings, -vv for info, -vvv for debug, -vvvv for trace)
  -q, --quiet...       Decrease logging verbosity (quiet mode)
      --color &amp;lt;COLOR&amp;gt;  Whether the log needs to be colored [env: PIXI_COLOR=] [default: auto] [possible values: always, never, auto]
      --no-progress    Hide all progress bars, always turned on if stderr is not a terminal [env: PIXI_NO_PROGRESS=]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Creating a Pixi workspace&lt;/h2&gt; 
&lt;p&gt;Initialize a new workspace and navigate to the workspace directory&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pixi init myworkspace
cd myworkspace
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add the dependencies you want to use&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pixi add cowpy
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the installed package in its environment&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pixi run cowpy "Thanks for using pixi"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Activate a shell in the environment&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pixi shell
cowpy "Thanks for using pixi"
exit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check out &lt;a href="https://pixi.sh/dev/first_workspace/"&gt;https://pixi.sh/dev/first_workspace/&lt;/a&gt; for a more detailed introduction to workspaces.&lt;/p&gt; 
&lt;h2&gt;Installing a conda package globally&lt;/h2&gt; 
&lt;p&gt;You can also globally install conda packages into their own environment. This behavior is similar to &lt;a href="https://github.com/pypa/pipx"&gt;&lt;code&gt;pipx&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://github.com/mariusvniekerk/condax"&gt;&lt;code&gt;condax&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pixi global install cowpy
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Use in GitHub Actions&lt;/h2&gt; 
&lt;p&gt;You can use Pixi in GitHub Actions to install dependencies and run commands. It supports automatic caching of your environments.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yml"&gt;- uses: prefix-dev/setup-pixi@v0.8.1
- run: pixi exec cowpy "Thanks for using pixi"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://pixi.sh/latest/advanced/github_actions"&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;&lt;a name="contributing"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing 😍&lt;/h2&gt; 
&lt;p&gt;We would absolutely love for you to contribute to Pixi! Whether you want to start an issue, fix a bug you encountered, or suggest an improvement, every contribution is greatly appreciated.&lt;/p&gt; 
&lt;p&gt;If you're just getting started with our project or stepping into the Rust ecosystem for the first time, we've got your back! We recommend beginning with issues labeled as &lt;code&gt;good first issue&lt;/code&gt;. These are carefully chosen tasks that provide a smooth entry point into contributing.These issues are typically more straightforward and are a great way to get familiar with the project.&lt;/p&gt; 
&lt;p&gt;Got questions or ideas, or just want to chat? Join our lively conversations on Discord. We're very active and would be happy to welcome you to our community. &lt;a href="https://discord.gg/kKV8ZxyzY4"&gt;Join our discord server today!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a name="pixibuilt"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Built using Pixi&lt;/h2&gt; 
&lt;p&gt;To see what's being built with &lt;code&gt;pixi&lt;/code&gt; check out the &lt;a href="https://raw.githubusercontent.com/prefix-dev/pixi/main/docs/misc/Community.md"&gt;Community&lt;/a&gt; page.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cocoindex-io/cocoindex</title>
      <link>https://github.com/cocoindex-io/cocoindex</link>
      <description>&lt;p&gt;Data transformation framework for AI. Ultra performant, with incremental processing. 🌟 Star if you like it!&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://cocoindex.io/images/github.svg?sanitize=true" alt="CocoIndex" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Data transformation for AI&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/cocoindex-io/cocoindex"&gt;&lt;img src="https://img.shields.io/github/stars/cocoindex-io/cocoindex?color=5B5BD6" alt="GitHub" /&gt;&lt;/a&gt; &lt;a href="https://cocoindex.io/docs/getting_started/quickstart"&gt;&lt;img src="https://img.shields.io/badge/Documentation-394e79?logo=readthedocs&amp;amp;logoColor=00B9FF" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/badge/license-Apache%202.0-5B5BD6?logoColor=white" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/cocoindex/"&gt;&lt;img src="https://img.shields.io/pypi/v/cocoindex?color=5B5BD6" alt="PyPI version" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;!--[![PyPI - Downloads](https://img.shields.io/pypi/dm/cocoindex)](https://pypistats.org/packages/cocoindex) --&gt; 
 &lt;p&gt;&lt;a href="https://pepy.tech/projects/cocoindex"&gt;&lt;img src="https://static.pepy.tech/badge/cocoindex/month" alt="PyPI Downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cocoindex-io/cocoindex/actions/workflows/CI.yml"&gt;&lt;img src="https://github.com/cocoindex-io/cocoindex/actions/workflows/CI.yml/badge.svg?event=push&amp;amp;color=5B5BD6" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cocoindex-io/cocoindex/actions/workflows/release.yml"&gt;&lt;img src="https://github.com/cocoindex-io/cocoindex/actions/workflows/release.yml/badge.svg?event=push&amp;amp;color=5B5BD6" alt="release" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/zpA9S2DR7s"&gt;&lt;img src="https://img.shields.io/discord/1314801574169673738?logo=discord&amp;amp;color=5B5BD6&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://trendshift.io/repositories/13939" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13939" alt="cocoindex-io%2Fcocoindex | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;Ultra performant data transformation framework for AI, with core engine written in Rust. Support incremental processing and data lineage out-of-box. Exceptional developer velocity. Production-ready at day 0.&lt;/p&gt; 
&lt;p&gt;⭐ Drop a star to help us grow!&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;!-- Keep these links. Translations will automatically update with the README. --&gt; 
 &lt;p&gt;&lt;a href="https://readme-i18n.com/cocoindex-io/cocoindex?lang=de"&gt;Deutsch&lt;/a&gt; | &lt;a href="https://readme-i18n.com/cocoindex-io/cocoindex?lang=en"&gt;English&lt;/a&gt; | &lt;a href="https://readme-i18n.com/cocoindex-io/cocoindex?lang=es"&gt;Español&lt;/a&gt; | &lt;a href="https://readme-i18n.com/cocoindex-io/cocoindex?lang=fr"&gt;français&lt;/a&gt; | &lt;a href="https://readme-i18n.com/cocoindex-io/cocoindex?lang=ja"&gt;日本語&lt;/a&gt; | &lt;a href="https://readme-i18n.com/cocoindex-io/cocoindex?lang=ko"&gt;한국어&lt;/a&gt; | &lt;a href="https://readme-i18n.com/cocoindex-io/cocoindex?lang=pt"&gt;Português&lt;/a&gt; | &lt;a href="https://readme-i18n.com/cocoindex-io/cocoindex?lang=ru"&gt;Русский&lt;/a&gt; | &lt;a href="https://readme-i18n.com/cocoindex-io/cocoindex?lang=zh"&gt;中文&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;img src="https://cocoindex.io/images/transformation.svg?sanitize=true" alt="CocoIndex Transformation" /&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;CocoIndex makes it effortless to transform data with AI, and keep source data and target in sync. Whether you’re building a vector index for RAG, creating knowledge graphs, or performing any custom data transformations — goes beyond SQL.&lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;img alt="CocoIndex Features" src="https://cocoindex.io/images/venn2.svg?sanitize=true" /&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Exceptional velocity&lt;/h2&gt; 
&lt;p&gt;Just declare transformation in dataflow with ~100 lines of python&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# import
data['content'] = flow_builder.add_source(...)

# transform
data['out'] = data['content']
    .transform(...)
    .transform(...)

# collect data
collector.collect(...)

# export to db, vector db, graph db ...
collector.export(...)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;CocoIndex follows the idea of &lt;a href="https://en.wikipedia.org/wiki/Dataflow_programming"&gt;Dataflow&lt;/a&gt; programming model. Each transformation creates a new field solely based on input fields, without hidden states and value mutation. All data before/after each transformation is observable, with lineage out of the box.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Particularly&lt;/strong&gt;, developers don't explicitly mutate data by creating, updating and deleting. They just need to define transformation/formula for a set of source data.&lt;/p&gt; 
&lt;h2&gt;Plug-and-Play Building Blocks&lt;/h2&gt; 
&lt;p&gt;Native builtins for different source, targets and transformations. Standardize interface, make it 1-line code switch between different components - as easy as assembling building blocks.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://cocoindex.io/images/components.svg?sanitize=true" alt="CocoIndex Features" /&gt; &lt;/p&gt; 
&lt;h2&gt;Data Freshness&lt;/h2&gt; 
&lt;p&gt;CocoIndex keep source data and target in sync effortlessly.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/user-attachments/assets/f4eb29b3-84ee-4fa0-a1e2-80eedeeabde6" alt="Incremental Processing" width="700" /&gt; &lt;/p&gt; 
&lt;p&gt;It has out-of-box support for incremental indexing:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;minimal recomputation on source or logic change.&lt;/li&gt; 
 &lt;li&gt;(re-)processing necessary portions; reuse cache when possible&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start:&lt;/h2&gt; 
&lt;p&gt;If you're new to CocoIndex, we recommend checking out&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📖 &lt;a href="https://cocoindex.io/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;a href="https://cocoindex.io/docs/getting_started/quickstart"&gt;Quick Start Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎬 &lt;a href="https://youtu.be/gv5R8nOXsWU?si=9ioeKYkMEnYevTXT"&gt;Quick Start Video Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Setup&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install CocoIndex Python library&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install -U cocoindex
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;a href="https://cocoindex.io/docs/getting_started/installation#-install-postgres"&gt;Install Postgres&lt;/a&gt; if you don't have one. CocoIndex uses it for incremental processing.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Define data flow&lt;/h2&gt; 
&lt;p&gt;Follow &lt;a href="https://cocoindex.io/docs/getting_started/quickstart"&gt;Quick Start Guide&lt;/a&gt; to define your first indexing flow. An example flow looks like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;@cocoindex.flow_def(name="TextEmbedding")
def text_embedding_flow(flow_builder: cocoindex.FlowBuilder, data_scope: cocoindex.DataScope):
    # Add a data source to read files from a directory
    data_scope["documents"] = flow_builder.add_source(cocoindex.sources.LocalFile(path="markdown_files"))

    # Add a collector for data to be exported to the vector index
    doc_embeddings = data_scope.add_collector()

    # Transform data of each document
    with data_scope["documents"].row() as doc:
        # Split the document into chunks, put into `chunks` field
        doc["chunks"] = doc["content"].transform(
            cocoindex.functions.SplitRecursively(),
            language="markdown", chunk_size=2000, chunk_overlap=500)

        # Transform data of each chunk
        with doc["chunks"].row() as chunk:
            # Embed the chunk, put into `embedding` field
            chunk["embedding"] = chunk["text"].transform(
                cocoindex.functions.SentenceTransformerEmbed(
                    model="sentence-transformers/all-MiniLM-L6-v2"))

            # Collect the chunk into the collector.
            doc_embeddings.collect(filename=doc["filename"], location=chunk["location"],
                                   text=chunk["text"], embedding=chunk["embedding"])

    # Export collected data to a vector index.
    doc_embeddings.export(
        "doc_embeddings",
        cocoindex.targets.Postgres(),
        primary_key_fields=["filename", "location"],
        vector_indexes=[
            cocoindex.VectorIndexDef(
                field_name="embedding",
                metric=cocoindex.VectorSimilarityMetric.COSINE_SIMILARITY)])
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It defines an index flow like this:&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="400" alt="Data Flow" src="https://github.com/user-attachments/assets/2ea7be6d-3d94-42b1-b2bd-22515577e463" /&gt; &lt;/p&gt; 
&lt;h2&gt;🚀 Examples and demo&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/text_embedding"&gt;Text Embedding&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Index text documents with embeddings for semantic search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/code_embedding"&gt;Code Embedding&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Index code embeddings for semantic search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/pdf_embedding"&gt;PDF Embedding&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Parse PDF and index text embeddings for semantic search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/manuals_llm_extraction"&gt;Manuals LLM Extraction&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Extract structured information from a manual using LLM&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/amazon_s3_embedding"&gt;Amazon S3 Embedding&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Index text documents from Amazon S3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/azure_blob_embedding"&gt;Azure Blob Storage Embedding&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Index text documents from Azure Blob Storage&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/gdrive_text_embedding"&gt;Google Drive Text Embedding&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Index text documents from Google Drive&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/docs_to_knowledge_graph"&gt;Docs to Knowledge Graph&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Extract relationships from Markdown documents and build a knowledge graph&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/text_embedding_qdrant"&gt;Embeddings to Qdrant&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Index documents in a Qdrant collection for semantic search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/text_embedding_lancedb"&gt;Embeddings to LanceDB&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Index documents in a LanceDB collection for semantic search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/fastapi_server_docker"&gt;FastAPI Server with Docker&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Run the semantic search server in a Dockerized FastAPI setup&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/product_recommendation"&gt;Product Recommendation&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Build real-time product recommendations with LLM and graph database&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/image_search"&gt;Image Search with Vision API&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Generates detailed captions for images using a vision model, embeds them, enables live-updating semantic search via FastAPI and served on a React frontend&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/face_recognition"&gt;Face Recognition&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Recognize faces in images and build embedding index&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/paper_metadata"&gt;Paper Metadata&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Index papers in PDF files, and build metadata tables for each paper&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/multi_format_indexing"&gt;Multi Format Indexing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Build visual document index from PDFs and images with ColPali for semantic search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/custom_output_files"&gt;Custom Output Files&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Convert markdown files to HTML files and save them to a local directory, using &lt;em&gt;CocoIndex Custom Targets&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/cocoindex-io/cocoindex/main/examples/patient_intake_extraction"&gt;Patient intake form extraction&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Use LLM to extract structured data from patient intake forms with different formats&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;More coming and stay tuned 👀!&lt;/p&gt; 
&lt;h2&gt;📖 Documentation&lt;/h2&gt; 
&lt;p&gt;For detailed documentation, visit &lt;a href="https://cocoindex.io/docs"&gt;CocoIndex Documentation&lt;/a&gt;, including a &lt;a href="https://cocoindex.io/docs/getting_started/quickstart"&gt;Quickstart guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We love contributions from our community ❤️. For details on contributing or running the project for development, check out our &lt;a href="https://cocoindex.io/docs/about/contributing"&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;👥 Community&lt;/h2&gt; 
&lt;p&gt;Welcome with a huge coconut hug 🥥⋆｡˚🤗. We are super excited for community contributions of all kinds - whether it's code improvements, documentation updates, issue reports, feature requests, and discussions in our Discord.&lt;/p&gt; 
&lt;p&gt;Join our community here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🌟 &lt;a href="https://github.com/cocoindex-io/cocoindex"&gt;Star us on GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👋 &lt;a href="https://discord.com/invite/zpA9S2DR7s"&gt;Join our Discord community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;▶️ &lt;a href="https://www.youtube.com/@cocoindex-io"&gt;Subscribe to our YouTube channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📜 &lt;a href="https://cocoindex.io/blogs/"&gt;Read our blog posts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support us:&lt;/h2&gt; 
&lt;p&gt;We are constantly improving, and more features and examples are coming soon. If you love this project, please drop us a star ⭐ at GitHub repo &lt;a href="https://github.com/cocoindex-io/cocoindex"&gt;&lt;img src="https://img.shields.io/github/stars/cocoindex-io/cocoindex?color=5B5BD6" alt="GitHub" /&gt;&lt;/a&gt; to stay tuned and help us grow.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;CocoIndex is Apache 2.0 licensed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dani-garcia/vaultwarden</title>
      <link>https://github.com/dani-garcia/vaultwarden</link>
      <description>&lt;p&gt;Unofficial Bitwarden compatible server written in Rust, formerly known as bitwarden_rs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/dani-garcia/vaultwarden/main/resources/vaultwarden-logo-auto.svg?sanitize=true" alt="Vaultwarden Logo" /&gt;&lt;/p&gt; 
&lt;p&gt;An alternative server implementation of the Bitwarden Client API, written in Rust and compatible with &lt;a href="https://bitwarden.com/download/"&gt;official Bitwarden clients&lt;/a&gt; [&lt;a href="https://raw.githubusercontent.com/dani-garcia/vaultwarden/main/#disclaimer"&gt;disclaimer&lt;/a&gt;], perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://github.com/dani-garcia/vaultwarden/releases/latest"&gt;&lt;img src="https://img.shields.io/github/release/dani-garcia/vaultwarden.svg?style=for-the-badge&amp;amp;logo=vaultwarden&amp;amp;color=005AA4" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/pkgs/container/vaultwarden"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4&amp;amp;url=https%3A%2F%2Fipitio.github.io%2Fbackage%2Fdani-garcia%2Fvaultwarden%2Fvaultwarden.json&amp;amp;query=%24.downloads&amp;amp;label=ghcr.io%20pulls&amp;amp;cacheSeconds=14400" alt="ghcr.io Pulls" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/vaultwarden/server"&gt;&lt;img src="https://img.shields.io/docker/pulls/vaultwarden/server.svg?style=for-the-badge&amp;amp;logo=docker&amp;amp;logoColor=fff&amp;amp;color=005AA4&amp;amp;label=docker.io%20pulls" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://quay.io/repository/vaultwarden/server"&gt;&lt;img src="https://img.shields.io/badge/quay.io-download-005AA4?style=for-the-badge&amp;amp;logo=redhat&amp;amp;cacheSeconds=14400" alt="Quay.io" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors-anon/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=vaultwarden&amp;amp;color=005AA4" alt="Contributors" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4" alt="Forks" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4" alt="Stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/issues"&gt;&lt;img src="https://img.shields.io/github/issues/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4&amp;amp;cacheSeconds=300" alt="Issues Open" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/issues?q=is%3Aissue+is%3Aclosed"&gt;&lt;img src="https://img.shields.io/github/issues-closed/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=005AA4&amp;amp;cacheSeconds=300" alt="Issues Closed" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/raw/main/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/github/license/dani-garcia/vaultwarden.svg?style=flat-square&amp;amp;logo=vaultwarden&amp;amp;color=944000&amp;amp;cacheSeconds=14400" alt="AGPL-3.0 Licensed" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://deps.rs/repo/github/dani-garcia/vaultwarden"&gt;&lt;img src="https://img.shields.io/badge/dynamic/xml?url=https%3A%2F%2Fdeps.rs%2Frepo%2Fgithub%2Fdani-garcia%2Fvaultwarden%2Fstatus.svg&amp;amp;query=%2F*%5Blocal-name()%3D'svg'%5D%2F*%5Blocal-name()%3D'g'%5D%5B2%5D%2F*%5Blocal-name()%3D'text'%5D%5B4%5D&amp;amp;style=flat-square&amp;amp;logo=rust&amp;amp;label=dependencies&amp;amp;color=005AA4" alt="Dependency Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/actions/workflows/release.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/dani-garcia/vaultwarden/release.yml?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;label=Release%20Workflow" alt="GHA Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/actions/workflows/build.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/dani-garcia/vaultwarden/build.yml?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;label=Build%20Workflow" alt="GHA Build" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://matrix.to/#/#vaultwarden:matrix.org"&gt;&lt;img src="https://img.shields.io/matrix/vaultwarden:matrix.org.svg?style=flat-square&amp;amp;logo=matrix&amp;amp;logoColor=fff&amp;amp;color=953B00&amp;amp;cacheSeconds=14400" alt="Matrix Chat" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/discussions"&gt;&lt;img src="https://img.shields.io/github/discussions/dani-garcia/vaultwarden?style=flat-square&amp;amp;logo=github&amp;amp;logoColor=fff&amp;amp;color=953B00&amp;amp;cacheSeconds=300" alt="GitHub Discussions" /&gt;&lt;/a&gt; &lt;a href="https://vaultwarden.discourse.group/"&gt;&lt;img src="https://img.shields.io/discourse/topics?server=https%3A%2F%2Fvaultwarden.discourse.group%2F&amp;amp;style=flat-square&amp;amp;logo=discourse&amp;amp;color=953B00" alt="Discourse Discussions" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] &lt;strong&gt;When using this server, please report any bugs or suggestions directly to us (see &lt;a href="https://raw.githubusercontent.com/dani-garcia/vaultwarden/main/#get-in-touch"&gt;Get in touch&lt;/a&gt;), regardless of whatever clients you are using (mobile, desktop, browser...). DO NOT use the official Bitwarden support channels.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;A nearly complete implementation of the Bitwarden Client API is provided, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/managing-items/"&gt;Personal Vault&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/about-send/"&gt;Send&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/attachments/"&gt;Attachments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/website-icons/"&gt;Website icons&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/personal-api-key/"&gt;Personal API Key&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/getting-started-organizations/"&gt;Organizations&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://bitwarden.com/help/about-collections/"&gt;Collections&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/sharing/"&gt;Password Sharing&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/user-types-access-control/"&gt;Member Roles&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/about-groups/"&gt;Groups&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/event-logs/"&gt;Event Logs&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/admin-reset/"&gt;Admin Password Reset&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/directory-sync/"&gt;Directory Connector&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/policies/"&gt;Policies&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/bitwarden-field-guide-two-step-login/"&gt;Multi/Two Factor Authentication&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://bitwarden.com/help/setup-two-step-login-authenticator/"&gt;Authenticator&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/setup-two-step-login-email/"&gt;Email&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/setup-two-step-login-fido/"&gt;FIDO2 WebAuthn&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/setup-two-step-login-yubikey/"&gt;YubiKey&lt;/a&gt;, &lt;a href="https://bitwarden.com/help/setup-two-step-login-duo/"&gt;Duo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitwarden.com/help/emergency-access/"&gt;Emergency Access&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Enabling-admin-page"&gt;Vaultwarden Admin Backend&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dani-garcia/bw_web_builds"&gt;Modified Web Vault client&lt;/a&gt; (Bundled within our containers)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The web-vault requires the use a secure context for the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API"&gt;Web Crypto API&lt;/a&gt;. That means it will only work via &lt;code&gt;http://localhost:8000&lt;/code&gt; (using the port from the example below) or if you &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Enabling-HTTPS"&gt;enable HTTPS&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The recommended way to install and use Vaultwarden is via our container images which are published to &lt;a href="https://github.com/dani-garcia/vaultwarden/pkgs/container/vaultwarden"&gt;ghcr.io&lt;/a&gt;, &lt;a href="https://hub.docker.com/r/vaultwarden/server"&gt;docker.io&lt;/a&gt; and &lt;a href="https://quay.io/repository/vaultwarden/server"&gt;quay.io&lt;/a&gt;. See &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Which-container-image-to-use"&gt;which container image to use&lt;/a&gt; for an explanation of the provided tags.&lt;/p&gt; 
&lt;p&gt;There are also &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Third-party-packages"&gt;community driven packages&lt;/a&gt; which can be used, but those might be lagging behind the latest version or might deviate in the way Vaultwarden is configured, as described in our &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can also &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Building-binary"&gt;build Vaultwarden&lt;/a&gt; yourself.&lt;/p&gt; 
&lt;p&gt;While Vaultwarden is based upon the &lt;a href="https://rocket.rs"&gt;Rocket web framework&lt;/a&gt; which has built-in support for TLS our recommendation would be that you setup a reverse proxy (see &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki/Proxy-examples"&gt;proxy examples&lt;/a&gt;).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] &lt;strong&gt;For more detailed examples on how to install, use and configure Vaultwarden you can check our &lt;a href="https://github.com/dani-garcia/vaultwarden/wiki"&gt;Wiki&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Docker/Podman CLI&lt;/h3&gt; 
&lt;p&gt;Pull the container image and mount a volume from the host for persistent storage.&lt;br /&gt; You can replace &lt;code&gt;docker&lt;/code&gt; with &lt;code&gt;podman&lt;/code&gt; if you prefer to use podman.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker pull vaultwarden/server:latest
docker run --detach --name vaultwarden \
  --env DOMAIN="https://vw.domain.tld" \
  --volume /vw-data/:/data/ \
  --restart unless-stopped \
  --publish 127.0.0.1:8000:80 \
  vaultwarden/server:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will preserve any persistent data under &lt;code&gt;/vw-data/&lt;/code&gt;, you can adapt the path to whatever suits you.&lt;/p&gt; 
&lt;h3&gt;Docker Compose&lt;/h3&gt; 
&lt;p&gt;To use Docker compose you need to create a &lt;code&gt;compose.yaml&lt;/code&gt; which will hold the configuration to run the Vaultwarden container.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      DOMAIN: "https://vw.domain.tld"
    volumes:
      - ./vw-data/:/data/
    ports:
      - 127.0.0.1:8000:80
&lt;/code&gt;&lt;/pre&gt; 
&lt;br /&gt; 
&lt;h2&gt;Get in touch&lt;/h2&gt; 
&lt;p&gt;Have a question, suggestion or need help? Join our community on &lt;a href="https://matrix.to/#/#vaultwarden:matrix.org"&gt;Matrix&lt;/a&gt;, &lt;a href="https://github.com/dani-garcia/vaultwarden/discussions"&gt;GitHub Discussions&lt;/a&gt; or &lt;a href="https://vaultwarden.discourse.group/"&gt;Discourse Forums&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Encountered a bug or crash? Please search our issue tracker and discussions to see if it's already been reported. If not, please &lt;a href="https://github.com/dani-garcia/vaultwarden/discussions"&gt;start a new discussion&lt;/a&gt; or &lt;a href="https://github.com/dani-garcia/vaultwarden/issues/"&gt;create a new issue&lt;/a&gt;. Ensure you're using the latest version of Vaultwarden and there aren't any similar issues open or closed!&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks for your contribution to the project!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/dani-garcia/vaultwarden/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors-anon/dani-garcia/vaultwarden?style=for-the-badge&amp;amp;logo=vaultwarden&amp;amp;color=005AA4" alt="Contributors Count" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="https://github.com/dani-garcia/vaultwarden/graphs/contributors"&gt;&lt;img src="https://contributors-img.web.app/image?repo=dani-garcia/vaultwarden" alt="Contributors Avatars" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;This project is not associated with &lt;a href="https://bitwarden.com/"&gt;Bitwarden&lt;/a&gt; or Bitwarden, Inc.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;However, one of the active maintainers for Vaultwarden is employed by Bitwarden and is allowed to contribute to the project on their own time. These contributions are independent of Bitwarden and are reviewed by other maintainers.&lt;/p&gt; 
&lt;p&gt;The maintainers work together to set the direction for the project, focusing on serving the self-hosting community, including individuals, families, and small organizations, while ensuring the project's sustainability.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; We cannot be held liable for any data loss that may occur while using Vaultwarden. This includes passwords, attachments, and other information handled by the application. We highly recommend performing regular backups of your files and database. However, should you experience data loss, we encourage you to contact us immediately.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Bitwarden_RS&lt;/h2&gt; 
&lt;p&gt;This project was known as Bitwarden_RS and has been renamed to separate itself from the official Bitwarden server in the hopes of avoiding confusion and trademark/branding issues.&lt;br /&gt; Please see &lt;a href="https://github.com/dani-garcia/vaultwarden/discussions/1642"&gt;#1642 - v1.21.0 release and project rename to Vaultwarden&lt;/a&gt; for more explanation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>astral-sh/ruff</title>
      <link>https://github.com/astral-sh/ruff</link>
      <description>&lt;p&gt;An extremely fast Python linter and code formatter, written in Rust.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ruff&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/astral-sh/ruff"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json" alt="Ruff" /&gt;&lt;/a&gt; &lt;a href="https://pypi.python.org/pypi/ruff"&gt;&lt;img src="https://img.shields.io/pypi/v/ruff.svg?sanitize=true" alt="image" /&gt;&lt;/a&gt; &lt;a href="https://github.com/astral-sh/ruff/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/pypi/l/ruff.svg?sanitize=true" alt="image" /&gt;&lt;/a&gt; &lt;a href="https://pypi.python.org/pypi/ruff"&gt;&lt;img src="https://img.shields.io/pypi/pyversions/ruff.svg?sanitize=true" alt="image" /&gt;&lt;/a&gt; &lt;a href="https://github.com/astral-sh/ruff/actions"&gt;&lt;img src="https://github.com/astral-sh/ruff/workflows/CI/badge.svg?sanitize=true" alt="Actions status" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/astral-sh"&gt;&lt;img src="https://img.shields.io/badge/Discord-%235865F2.svg?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://docs.astral.sh/ruff/"&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/a&gt; | &lt;a href="https://play.ruff.rs/"&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An extremely fast Python linter and code formatter, written in Rust.&lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;picture align="center"&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/1309177/232603514-c95e9b0f-6b31-43de-9a80-9e844173fd6a.svg" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://user-images.githubusercontent.com/1309177/232603516-4fb4892d-585c-4b20-b810-3db9161831e4.svg" /&gt; 
  &lt;img alt="Shows a bar chart with benchmark results." src="https://user-images.githubusercontent.com/1309177/232603516-4fb4892d-585c-4b20-b810-3db9161831e4.svg?sanitize=true" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;i&gt;Linting the CPython codebase from scratch.&lt;/i&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚡️ 10-100x faster than existing linters (like Flake8) and formatters (like Black)&lt;/li&gt; 
 &lt;li&gt;🐍 Installable via &lt;code&gt;pip&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;🛠️ &lt;code&gt;pyproject.toml&lt;/code&gt; support&lt;/li&gt; 
 &lt;li&gt;🤝 Python 3.13 compatibility&lt;/li&gt; 
 &lt;li&gt;⚖️ Drop-in parity with &lt;a href="https://docs.astral.sh/ruff/faq/#how-does-ruffs-linter-compare-to-flake8"&gt;Flake8&lt;/a&gt;, isort, and &lt;a href="https://docs.astral.sh/ruff/faq/#how-does-ruffs-formatter-compare-to-black"&gt;Black&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📦 Built-in caching, to avoid re-analyzing unchanged files&lt;/li&gt; 
 &lt;li&gt;🔧 Fix support, for automatic error correction (e.g., automatically remove unused imports)&lt;/li&gt; 
 &lt;li&gt;📏 Over &lt;a href="https://docs.astral.sh/ruff/rules/"&gt;800 built-in rules&lt;/a&gt;, with native re-implementations of popular Flake8 plugins, like flake8-bugbear&lt;/li&gt; 
 &lt;li&gt;⌨️ First-party &lt;a href="https://docs.astral.sh/ruff/editors"&gt;editor integrations&lt;/a&gt; for &lt;a href="https://github.com/astral-sh/ruff-vscode"&gt;VS Code&lt;/a&gt; and &lt;a href="https://docs.astral.sh/ruff/editors/setup"&gt;more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🌎 Monorepo-friendly, with &lt;a href="https://docs.astral.sh/ruff/configuration/#config-file-discovery"&gt;hierarchical and cascading configuration&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Ruff aims to be orders of magnitude faster than alternative tools while integrating more functionality behind a single, common interface.&lt;/p&gt; 
&lt;p&gt;Ruff can be used to replace &lt;a href="https://pypi.org/project/flake8/"&gt;Flake8&lt;/a&gt; (plus dozens of plugins), &lt;a href="https://github.com/psf/black"&gt;Black&lt;/a&gt;, &lt;a href="https://pypi.org/project/isort/"&gt;isort&lt;/a&gt;, &lt;a href="https://pypi.org/project/pydocstyle/"&gt;pydocstyle&lt;/a&gt;, &lt;a href="https://pypi.org/project/pyupgrade/"&gt;pyupgrade&lt;/a&gt;, &lt;a href="https://pypi.org/project/autoflake/"&gt;autoflake&lt;/a&gt;, and more, all while executing tens or hundreds of times faster than any individual tool.&lt;/p&gt; 
&lt;p&gt;Ruff is extremely actively developed and used in major open-source projects like:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apache/airflow"&gt;Apache Airflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apache/superset"&gt;Apache Superset&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiangolo/fastapi"&gt;FastAPI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huggingface/transformers"&gt;Hugging Face&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pandas-dev/pandas"&gt;Pandas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scipy/scipy"&gt;SciPy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;...and &lt;a href="https://raw.githubusercontent.com/astral-sh/ruff/main/#whos-using-ruff"&gt;many more&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Ruff is backed by &lt;a href="https://astral.sh"&gt;Astral&lt;/a&gt;. Read the &lt;a href="https://astral.sh/blog/announcing-astral-the-company-behind-ruff"&gt;launch post&lt;/a&gt;, or the original &lt;a href="https://notes.crmarsh.com/python-tooling-could-be-much-much-faster"&gt;project announcement&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Testimonials&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://twitter.com/tiangolo/status/1591912354882764802"&gt;&lt;strong&gt;Sebastián Ramírez&lt;/strong&gt;&lt;/a&gt;, creator of &lt;a href="https://github.com/tiangolo/fastapi"&gt;FastAPI&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Ruff is so fast that sometimes I add an intentional bug in the code just to confirm it's actually running and checking the code.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://twitter.com/schrockn/status/1612615862904827904"&gt;&lt;strong&gt;Nick Schrock&lt;/strong&gt;&lt;/a&gt;, founder of &lt;a href="https://www.elementl.com/"&gt;Elementl&lt;/a&gt;, co-creator of &lt;a href="https://graphql.org/"&gt;GraphQL&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Why is Ruff a gamechanger? Primarily because it is nearly 1000x faster. Literally. Not a typo. On our largest module (dagster itself, 250k LOC) pylint takes about 2.5 minutes, parallelized across 4 cores on my M1. Running ruff against our &lt;em&gt;entire&lt;/em&gt; codebase takes .4 seconds.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://github.com/bokeh/bokeh/pull/12605"&gt;&lt;strong&gt;Bryan Van de Ven&lt;/strong&gt;&lt;/a&gt;, co-creator of &lt;a href="https://github.com/bokeh/bokeh/"&gt;Bokeh&lt;/a&gt;, original author of &lt;a href="https://docs.conda.io/en/latest/"&gt;Conda&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Ruff is ~150-200x faster than flake8 on my machine, scanning the whole repo takes ~0.2s instead of ~20s. This is an enormous quality of life improvement for local dev. It's fast enough that I added it as an actual commit hook, which is terrific.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://twitter.com/timothycrosley/status/1606420868514877440"&gt;&lt;strong&gt;Timothy Crosley&lt;/strong&gt;&lt;/a&gt;, creator of &lt;a href="https://github.com/PyCQA/isort"&gt;isort&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Just switched my first project to Ruff. Only one downside so far: it's so fast I couldn't believe it was working till I intentionally introduced some errors.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://github.com/astral-sh/ruff/issues/465#issuecomment-1317400028"&gt;&lt;strong&gt;Tim Abbott&lt;/strong&gt;&lt;/a&gt;, lead developer of &lt;a href="https://github.com/zulip/zulip"&gt;Zulip&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This is just ridiculously fast... &lt;code&gt;ruff&lt;/code&gt; is amazing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- End section: Overview --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;p&gt;For more, see the &lt;a href="https://docs.astral.sh/ruff/"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/astral-sh/ruff/main/#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/astral-sh/ruff/main/#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/astral-sh/ruff/main/#rules"&gt;Rules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/astral-sh/ruff/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/astral-sh/ruff/main/#support"&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/astral-sh/ruff/main/#acknowledgements"&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/astral-sh/ruff/main/#whos-using-ruff"&gt;Who's Using Ruff?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/astral-sh/ruff/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Getting Started&lt;a id="getting-started"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;For more, see the &lt;a href="https://docs.astral.sh/ruff/"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;Ruff is available as &lt;a href="https://pypi.org/project/ruff/"&gt;&lt;code&gt;ruff&lt;/code&gt;&lt;/a&gt; on PyPI.&lt;/p&gt; 
&lt;p&gt;Invoke Ruff directly with &lt;a href="https://docs.astral.sh/uv/"&gt;&lt;code&gt;uvx&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;uvx ruff check   # Lint all files in the current directory.
uvx ruff format  # Format all files in the current directory.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or install Ruff with &lt;code&gt;uv&lt;/code&gt; (recommended), &lt;code&gt;pip&lt;/code&gt;, or &lt;code&gt;pipx&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# With uv.
uv tool install ruff@latest  # Install Ruff globally.
uv add --dev ruff            # Or add Ruff to your project.

# With pip.
pip install ruff

# With pipx.
pipx install ruff
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Starting with version &lt;code&gt;0.5.0&lt;/code&gt;, Ruff can be installed with our standalone installers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# On macOS and Linux.
curl -LsSf https://astral.sh/ruff/install.sh | sh

# On Windows.
powershell -c "irm https://astral.sh/ruff/install.ps1 | iex"

# For a specific version.
curl -LsSf https://astral.sh/ruff/0.13.3/install.sh | sh
powershell -c "irm https://astral.sh/ruff/0.13.3/install.ps1 | iex"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install Ruff via &lt;a href="https://formulae.brew.sh/formula/ruff"&gt;Homebrew&lt;/a&gt;, &lt;a href="https://anaconda.org/conda-forge/ruff"&gt;Conda&lt;/a&gt;, and with &lt;a href="https://docs.astral.sh/ruff/installation/"&gt;a variety of other package managers&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;To run Ruff as a linter, try any of the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ruff check                          # Lint all files in the current directory (and any subdirectories).
ruff check path/to/code/            # Lint all files in `/path/to/code` (and any subdirectories).
ruff check path/to/code/*.py        # Lint all `.py` files in `/path/to/code`.
ruff check path/to/code/to/file.py  # Lint `file.py`.
ruff check @arguments.txt           # Lint using an input file, treating its contents as newline-delimited command-line arguments.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, to run Ruff as a formatter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ruff format                          # Format all files in the current directory (and any subdirectories).
ruff format path/to/code/            # Format all files in `/path/to/code` (and any subdirectories).
ruff format path/to/code/*.py        # Format all `.py` files in `/path/to/code`.
ruff format path/to/code/to/file.py  # Format `file.py`.
ruff format @arguments.txt           # Format using an input file, treating its contents as newline-delimited command-line arguments.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ruff can also be used as a &lt;a href="https://pre-commit.com/"&gt;pre-commit&lt;/a&gt; hook via &lt;a href="https://github.com/astral-sh/ruff-pre-commit"&gt;&lt;code&gt;ruff-pre-commit&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- repo: https://github.com/astral-sh/ruff-pre-commit
  # Ruff version.
  rev: v0.13.3
  hooks:
    # Run the linter.
    - id: ruff-check
      args: [ --fix ]
    # Run the formatter.
    - id: ruff-format
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ruff can also be used as a &lt;a href="https://github.com/astral-sh/ruff-vscode"&gt;VS Code extension&lt;/a&gt; or with &lt;a href="https://docs.astral.sh/ruff/editors/setup"&gt;various other editors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Ruff can also be used as a &lt;a href="https://github.com/features/actions"&gt;GitHub Action&lt;/a&gt; via &lt;a href="https://github.com/astral-sh/ruff-action"&gt;&lt;code&gt;ruff-action&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;name: Ruff
on: [ push, pull_request ]
jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/ruff-action@v3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuration&lt;a id="configuration"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Ruff can be configured through a &lt;code&gt;pyproject.toml&lt;/code&gt;, &lt;code&gt;ruff.toml&lt;/code&gt;, or &lt;code&gt;.ruff.toml&lt;/code&gt; file (see: &lt;a href="https://docs.astral.sh/ruff/configuration/"&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/a&gt;, or &lt;a href="https://docs.astral.sh/ruff/settings/"&gt;&lt;em&gt;Settings&lt;/em&gt;&lt;/a&gt; for a complete list of all configuration options).&lt;/p&gt; 
&lt;p&gt;If left unspecified, Ruff's default configuration is equivalent to the following &lt;code&gt;ruff.toml&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that, in a &lt;code&gt;pyproject.toml&lt;/code&gt;, each section header should be prefixed with &lt;code&gt;tool.ruff&lt;/code&gt;. For example, &lt;code&gt;[lint]&lt;/code&gt; should be replaced with &lt;code&gt;[tool.ruff.lint]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Some configuration options can be provided via dedicated command-line arguments, such as those related to rule enablement and disablement, file discovery, and logging level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ruff check --select F401 --select F403 --quiet
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The remaining configuration options can be provided through a catch-all &lt;code&gt;--config&lt;/code&gt; argument:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ruff check --config "lint.per-file-ignores = {'some_file.py' = ['F841']}"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To opt in to the latest lint rules, formatter style changes, interface updates, and more, enable &lt;a href="https://docs.astral.sh/ruff/rules/"&gt;preview mode&lt;/a&gt; by setting &lt;code&gt;preview = true&lt;/code&gt; in your configuration file or passing &lt;code&gt;--preview&lt;/code&gt; on the command line. Preview mode enables a collection of unstable features that may change prior to stabilization.&lt;/p&gt; 
&lt;p&gt;See &lt;code&gt;ruff help&lt;/code&gt; for more on Ruff's top-level commands, or &lt;code&gt;ruff help check&lt;/code&gt; and &lt;code&gt;ruff help format&lt;/code&gt; for more on the linting and formatting commands, respectively.&lt;/p&gt; 
&lt;h2&gt;Rules&lt;a id="rules"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;!-- Begin section: Rules --&gt; 
&lt;p&gt;&lt;strong&gt;Ruff supports over 800 lint rules&lt;/strong&gt;, many of which are inspired by popular tools like Flake8, isort, pyupgrade, and others. Regardless of the rule's origin, Ruff re-implements every rule in Rust as a first-party feature.&lt;/p&gt; 
&lt;p&gt;By default, Ruff enables Flake8's &lt;code&gt;F&lt;/code&gt; rules, along with a subset of the &lt;code&gt;E&lt;/code&gt; rules, omitting any stylistic rules that overlap with the use of a formatter, like &lt;code&gt;ruff format&lt;/code&gt; or &lt;a href="https://github.com/psf/black"&gt;Black&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you're just getting started with Ruff, &lt;strong&gt;the default rule set is a great place to start&lt;/strong&gt;: it catches a wide variety of common errors (like unused imports) with zero configuration.&lt;/p&gt; 
&lt;!-- End section: Rules --&gt; 
&lt;p&gt;Beyond the defaults, Ruff re-implements some of the most popular Flake8 plugins and related code quality tools, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/autoflake/"&gt;autoflake&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/eradicate/"&gt;eradicate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-2020/"&gt;flake8-2020&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-annotations/"&gt;flake8-annotations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-async"&gt;flake8-async&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-bandit/"&gt;flake8-bandit&lt;/a&gt; (&lt;a href="https://github.com/astral-sh/ruff/issues/1646"&gt;#1646&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-blind-except/"&gt;flake8-blind-except&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-boolean-trap/"&gt;flake8-boolean-trap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-bugbear/"&gt;flake8-bugbear&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-builtins/"&gt;flake8-builtins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-commas/"&gt;flake8-commas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-comprehensions/"&gt;flake8-comprehensions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-copyright/"&gt;flake8-copyright&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-datetimez/"&gt;flake8-datetimez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-debugger/"&gt;flake8-debugger&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-django/"&gt;flake8-django&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-docstrings/"&gt;flake8-docstrings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-eradicate/"&gt;flake8-eradicate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-errmsg/"&gt;flake8-errmsg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-executable/"&gt;flake8-executable&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-future-annotations/"&gt;flake8-future-annotations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-gettext/"&gt;flake8-gettext&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-implicit-str-concat/"&gt;flake8-implicit-str-concat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joaopalmeiro/flake8-import-conventions"&gt;flake8-import-conventions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-logging/"&gt;flake8-logging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-logging-format/"&gt;flake8-logging-format&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-no-pep420"&gt;flake8-no-pep420&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-pie/"&gt;flake8-pie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-print/"&gt;flake8-print&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-pyi/"&gt;flake8-pyi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-pytest-style/"&gt;flake8-pytest-style&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-quotes/"&gt;flake8-quotes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-raise/"&gt;flake8-raise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-return/"&gt;flake8-return&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-self/"&gt;flake8-self&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-simplify/"&gt;flake8-simplify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-slots/"&gt;flake8-slots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-super/"&gt;flake8-super&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-tidy-imports/"&gt;flake8-tidy-imports&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-todos/"&gt;flake8-todos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-type-checking/"&gt;flake8-type-checking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flake8-use-pathlib/"&gt;flake8-use-pathlib&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flynt/"&gt;flynt&lt;/a&gt; (&lt;a href="https://github.com/astral-sh/ruff/issues/2102"&gt;#2102&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/isort/"&gt;isort&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/mccabe/"&gt;mccabe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/pandas-vet/"&gt;pandas-vet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/pep8-naming/"&gt;pep8-naming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/pydocstyle/"&gt;pydocstyle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pre-commit/pygrep-hooks"&gt;pygrep-hooks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/pylint-airflow/"&gt;pylint-airflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/pyupgrade/"&gt;pyupgrade&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/tryceratops/"&gt;tryceratops&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/yesqa/"&gt;yesqa&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For a complete enumeration of the supported rules, see &lt;a href="https://docs.astral.sh/ruff/rules/"&gt;&lt;em&gt;Rules&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;a id="contributing"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome and highly appreciated. To get started, check out the &lt;a href="https://docs.astral.sh/ruff/contributing/"&gt;&lt;strong&gt;contributing guidelines&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also join us on &lt;a href="https://discord.com/invite/astral-sh"&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;a id="support"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Having trouble? Check out the existing issues on &lt;a href="https://github.com/astral-sh/ruff/issues"&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt;, or feel free to &lt;a href="https://github.com/astral-sh/ruff/issues/new"&gt;&lt;strong&gt;open a new one&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also ask for help on &lt;a href="https://discord.com/invite/astral-sh"&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;a id="acknowledgements"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Ruff's linter draws on both the APIs and implementation details of many other tools in the Python ecosystem, especially &lt;a href="https://github.com/PyCQA/flake8"&gt;Flake8&lt;/a&gt;, &lt;a href="https://github.com/PyCQA/pyflakes"&gt;Pyflakes&lt;/a&gt;, &lt;a href="https://github.com/PyCQA/pycodestyle"&gt;pycodestyle&lt;/a&gt;, &lt;a href="https://github.com/PyCQA/pydocstyle"&gt;pydocstyle&lt;/a&gt;, &lt;a href="https://github.com/asottile/pyupgrade"&gt;pyupgrade&lt;/a&gt;, and &lt;a href="https://github.com/PyCQA/isort"&gt;isort&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In some cases, Ruff includes a "direct" Rust port of the corresponding tool. We're grateful to the maintainers of these tools for their work, and for all the value they've provided to the Python community.&lt;/p&gt; 
&lt;p&gt;Ruff's formatter is built on a fork of Rome's &lt;a href="https://github.com/rome/tools/tree/main/crates/rome_formatter"&gt;&lt;code&gt;rome_formatter&lt;/code&gt;&lt;/a&gt;, and again draws on both API and implementation details from &lt;a href="https://github.com/rome/tools"&gt;Rome&lt;/a&gt;, &lt;a href="https://github.com/prettier/prettier"&gt;Prettier&lt;/a&gt;, and &lt;a href="https://github.com/psf/black"&gt;Black&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Ruff's import resolver is based on the import resolution algorithm from &lt;a href="https://github.com/microsoft/pyright"&gt;Pyright&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Ruff is also influenced by a number of tools outside the Python ecosystem, like &lt;a href="https://github.com/rust-lang/rust-clippy"&gt;Clippy&lt;/a&gt; and &lt;a href="https://github.com/eslint/eslint"&gt;ESLint&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Ruff is the beneficiary of a large number of &lt;a href="https://github.com/astral-sh/ruff/graphs/contributors"&gt;contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Ruff is released under the MIT license.&lt;/p&gt; 
&lt;h2&gt;Who's Using Ruff?&lt;a id="whos-using-ruff"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Ruff is used by a number of major open-source projects and companies, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/albumentations-team/AlbumentationsX"&gt;Albumentations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Amazon (&lt;a href="https://github.com/aws/serverless-application-model"&gt;AWS SAM&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://apps.ankiweb.net/"&gt;Anki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Anthropic (&lt;a href="https://github.com/anthropics/anthropic-sdk-python"&gt;Python SDK&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apache/airflow"&gt;Apache Airflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;AstraZeneca (&lt;a href="https://github.com/AstraZeneca/magnus-core"&gt;Magnus&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/python-babel/babel"&gt;Babel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Benchling (&lt;a href="https://github.com/benchling/refac"&gt;Refac&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bokeh/bokeh"&gt;Bokeh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Capital One (&lt;a href="https://github.com/capitalone/datacompy"&gt;datacompy&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;CrowdCent (&lt;a href="https://github.com/crowdcent/numerblox"&gt;NumerBlox&lt;/a&gt;) 
  &lt;!-- typos: ignore --&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pyca/cryptography"&gt;Cryptography (PyCA)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;CERN (&lt;a href="https://getindico.io/"&gt;Indico&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iterative/dvc"&gt;DVC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dagger/dagger"&gt;Dagger&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dagster-io/dagster"&gt;Dagster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Databricks (&lt;a href="https://github.com/mlflow/mlflow"&gt;MLflow&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langgenius/dify"&gt;Dify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiangolo/fastapi"&gt;FastAPI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/godotengine/godot"&gt;Godot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gradio-app/gradio"&gt;Gradio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/great-expectations/great_expectations"&gt;Great Expectations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/encode/httpx"&gt;HTTPX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pypa/hatch"&gt;Hatch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/home-assistant/core"&gt;Home Assistant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Hugging Face (&lt;a href="https://github.com/huggingface/transformers"&gt;Transformers&lt;/a&gt;, &lt;a href="https://github.com/huggingface/datasets"&gt;Datasets&lt;/a&gt;, &lt;a href="https://github.com/huggingface/diffusers"&gt;Diffusers&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;IBM (&lt;a href="https://github.com/Qiskit/qiskit"&gt;Qiskit&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;ING Bank (&lt;a href="https://github.com/ing-bank/popmon"&gt;popmon&lt;/a&gt;, &lt;a href="https://github.com/ing-bank/probatus"&gt;probatus&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ibis-project/ibis"&gt;Ibis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unifyai/ivy"&gt;ivy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jax-ml/jax"&gt;JAX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jupyter-server/jupyter_server"&gt;Jupyter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kraken.tech/"&gt;Kraken Tech&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hwchase17/langchain"&gt;LangChain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://litestar.dev/"&gt;Litestar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jerryjliu/llama_index"&gt;LlamaIndex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Matrix (&lt;a href="https://github.com/matrix-org/synapse"&gt;Synapse&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oxsecurity/megalinter"&gt;MegaLinter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Meltano (&lt;a href="https://github.com/meltano/meltano"&gt;Meltano CLI&lt;/a&gt;, &lt;a href="https://github.com/meltano/sdk"&gt;Singer SDK&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Microsoft (&lt;a href="https://github.com/microsoft/semantic-kernel"&gt;Semantic Kernel&lt;/a&gt;, &lt;a href="https://github.com/microsoft/onnxruntime"&gt;ONNX Runtime&lt;/a&gt;, &lt;a href="https://github.com/microsoft/LightGBM"&gt;LightGBM&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Modern Treasury (&lt;a href="https://github.com/Modern-Treasury/modern-treasury-python"&gt;Python SDK&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Mozilla (&lt;a href="https://github.com/mozilla/gecko-dev"&gt;Firefox&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/python/mypy"&gt;Mypy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nautobot/nautobot"&gt;Nautobot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Netflix (&lt;a href="https://github.com/Netflix/dispatch"&gt;Dispatch&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/neondatabase/neon"&gt;Neon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nokia.com/"&gt;Nokia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nonebot/nonebot2"&gt;NoneBot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pyro-ppl/numpyro"&gt;NumPyro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/onnx/onnx"&gt;ONNX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OpenBB-finance/OpenBBTerminal"&gt;OpenBB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Open-Wine-Components/umu-launcher"&gt;Open Wine Components&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pdm-project/pdm"&gt;PDM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PaddlePaddle/Paddle"&gt;PaddlePaddle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pandas-dev/pandas"&gt;Pandas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/python-pillow/Pillow"&gt;Pillow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/python-poetry/poetry"&gt;Poetry&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pola-rs/polars"&gt;Polars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PostHog/posthog"&gt;PostHog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Prefect (&lt;a href="https://github.com/PrefectHQ/prefect"&gt;Python SDK&lt;/a&gt;, &lt;a href="https://github.com/PrefectHQ/marvin"&gt;Marvin&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pyinstaller/pyinstaller"&gt;PyInstaller&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pymc-devs/pymc/"&gt;PyMC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pymc-labs/pymc-marketing"&gt;PyMC-Marketing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pytest-dev/pytest"&gt;pytest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pytorch/pytorch"&gt;PyTorch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pydantic/pydantic"&gt;Pydantic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PyCQA/pylint"&gt;Pylint&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pyvista/pyvista"&gt;PyVista&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reflex-dev/reflex"&gt;Reflex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/online-ml/river"&gt;River&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rippling.com"&gt;Rippling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sansyrox/robyn"&gt;Robyn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/saleor/saleor"&gt;Saleor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Scale AI (&lt;a href="https://github.com/scaleapi/launch-python-client"&gt;Launch SDK&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scipy/scipy"&gt;SciPy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Snowflake (&lt;a href="https://github.com/Snowflake-Labs/snowcli"&gt;SnowCLI&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sphinx-doc/sphinx"&gt;Sphinx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DLR-RM/stable-baselines3"&gt;Stable Baselines3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/encode/starlette"&gt;Starlette&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/streamlit/streamlit"&gt;Streamlit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TheAlgorithms/Python"&gt;The Algorithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/altair-viz/altair"&gt;Vega-Altair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://weblate.org/"&gt;Weblate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;WordPress (&lt;a href="https://github.com/WordPress/openverse"&gt;Openverse&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zenml-io/zenml"&gt;ZenML&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zulip/zulip"&gt;Zulip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pypa/build"&gt;build (PyPA)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pypa/cibuildwheel"&gt;cibuildwheel (PyPA)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/delta-io/delta-rs"&gt;delta-rs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alteryx/featuretools"&gt;featuretools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mesonbuild/meson-python"&gt;meson-python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wntrblm/nox"&gt;nox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pypa/pip"&gt;pip&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Show Your Support&lt;/h3&gt; 
&lt;p&gt;If you're using Ruff, consider adding the Ruff badge to your project's &lt;code&gt;README.md&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;...or &lt;code&gt;README.rst&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-rst"&gt;.. image:: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json
    :target: https://github.com/astral-sh/ruff
    :alt: Ruff
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;...or, as HTML:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://github.com/astral-sh/ruff"&amp;gt;&amp;lt;img src="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json" alt="Ruff" style="max-width:100%;"&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;a id="license"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;This repository is licensed under the &lt;a href="https://github.com/astral-sh/ruff/raw/main/LICENSE"&gt;MIT License&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a target="_blank" href="https://astral.sh" style="background:none"&gt; &lt;img src="https://raw.githubusercontent.com/astral-sh/ruff/main/assets/svg/Astral.svg?sanitize=true" alt="Made by Astral" /&gt; &lt;/a&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>surrealdb/surrealdb</title>
      <link>https://github.com/surrealdb/surrealdb</link>
      <description>&lt;p&gt;A scalable, distributed, collaborative, document-graph database, for the realtime web&lt;/p&gt;&lt;hr&gt;&lt;a href="https://surrealdb.com#gh-dark-mode-only" target="_blank"&gt; &lt;img width="100%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/white/hero.png" alt="SurrealDB Hero" /&gt; &lt;/a&gt; 
&lt;a href="https://surrealdb.com#gh-light-mode-only" target="_blank"&gt; &lt;img width="100%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/black/hero.png" alt="SurrealDB Hero" /&gt; &lt;/a&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/surrealdb/surrealdb"&gt;&lt;img src="https://img.shields.io/github/v/release/surrealdb/surrealdb?color=ff00a0&amp;amp;include_prereleases&amp;amp;label=version&amp;amp;sort=semver&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/surrealdb/surrealdb"&gt;&lt;img src="https://img.shields.io/badge/built_with-Rust-dca282.svg?style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/surrealdb/surrealdb/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/surrealdb/surrealdb/nightly.yml?style=flat-square&amp;amp;branch=main" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/surrealdb/license"&gt;&lt;img src="https://img.shields.io/badge/license-BSL_1.1-00bfff.svg?style=flat-square" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://hub.docker.com/repository/docker/surrealdb/surrealdb"&gt;&lt;img src="https://img.shields.io/docker/pulls/surrealdb/surrealdb?label=docker%20pulls&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://crates.io/crates/surrealdb"&gt;&lt;img src="https://img.shields.io/crates/d/surrealdb?color=dca282&amp;amp;label=rust&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.npmjs.com/package/surrealdb.js"&gt;&lt;img src="https://img.shields.io/npm/dt/surrealdb.js?color=f7df1e&amp;amp;label=javascript&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://pypi.org/project/surrealdb/"&gt;&lt;img src="https://img.shields.io/pepy/dt/surrealdb?color=426c99&amp;amp;label=python&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.nuget.org/packages/SurrealDb.Net"&gt;&lt;img src="https://img.shields.io/nuget/dt/surrealdb.net?color=4c2dcc&amp;amp;label=.NET&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://packagist.org/packages/surrealdb/surrealdb.php"&gt;&lt;img src="https://img.shields.io/packagist/dt/surrealdb/surrealdb.php?color=4d588b&amp;amp;label=php&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://hub.docker.com/repository/docker/surrealdb/surrealdb"&gt;&lt;img src="https://img.shields.io/github/downloads/surrealdb/surrealdb/total?color=8259dd&amp;amp;label=github%20downloads&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://surrealdb.com/discord"&gt;&lt;img src="https://img.shields.io/discord/902568124350599239?label=discord&amp;amp;style=flat-square&amp;amp;color=5a66f6" alt="Discord" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://x.com/surrealdb"&gt;&lt;img src="https://img.shields.io/badge/x-follow_us-222222.svg?style=flat-square" alt="X" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://dev.to/surrealdb"&gt;&lt;img src="https://img.shields.io/badge/dev-join_us-86f7b7.svg?style=flat-square" alt="Dev" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.linkedin.com/company/surrealdb/"&gt;&lt;img src="https://img.shields.io/badge/linkedin-connect_with_us-0a66c2.svg?style=flat-square" alt="LinkedIn" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.youtube.com/@surrealdb"&gt;&lt;img src="https://img.shields.io/badge/youtube-subscribe-fc1c1c.svg?style=flat-square" alt="YouTube" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://surrealdb.com/blog"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/blog.svg?sanitize=true" alt="Blog" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/surrealdb/surrealdb"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/github.svg?sanitize=true" alt="Github" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.linkedin.com/company/surrealdb/"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/linkedin.svg?sanitize=true" alt="LinkedIn" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://x.com/surrealdb"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/x.svg?sanitize=true" alt="X" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.youtube.com/@surrealdb"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/youtube.svg?sanitize=true" alt="YouTube" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://dev.to/surrealdb"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/dev.svg?sanitize=true" alt="Dev" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://surrealdb.com/discord"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/discord.svg?sanitize=true" alt="Discord" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://stackoverflow.com/questions/tagged/surrealdb"&gt;&lt;img height="25" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/social/stack-overflow.svg?sanitize=true" alt="Stack Overflow" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;&lt;img height="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/whatissurreal.svg?sanitize=true" /&gt;&amp;nbsp;&amp;nbsp;What is SurrealDB?&lt;/h2&gt; 
&lt;p&gt;SurrealDB is an end-to-end cloud-native database designed for modern applications, including web, mobile, serverless, Jamstack, backend, and traditional applications. With SurrealDB, you can simplify your database and API infrastructure, reduce development time, and build secure, performant apps quickly and cost-effectively.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Key features of SurrealDB include:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Reduces development time&lt;/strong&gt;: SurrealDB simplifies your database and API stack by removing the need for most server-side components, allowing you to build secure, performant apps faster and cheaper.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-time collaborative API backend service:&lt;/strong&gt; SurrealDB functions as both a database and an API backend service, enabling real-time collaboration.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support for multiple querying languages:&lt;/strong&gt; SurrealDB supports SQL querying from client devices, GraphQL, ACID transactions, WebSocket connections, structured and unstructured data, graph querying, full-text indexing, and geospatial querying.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Granular access control&lt;/strong&gt;: SurrealDB provides row-level permissions-based access control, giving you the ability to manage data access with precision.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;View the &lt;a href="https://surrealdb.com/features"&gt;features&lt;/a&gt;, the latest &lt;a href="https://surrealdb.com/releases"&gt;releases&lt;/a&gt;, and &lt;a href="https://surrealdb.com/docs"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;img width="100%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/interface.png" alt="Surrealist" /&gt; 
&lt;h2&gt;&lt;img height="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/contents.svg?sanitize=true" /&gt;&amp;nbsp;&amp;nbsp;Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#getting-started"&gt;Getting started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#server-side-code"&gt;Server side code&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#client-side-apps"&gt;Client side apps&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#surreal-cloud"&gt;Surreal Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#installation"&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#install-on-macos"&gt;Install on macOS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#install-on-linux"&gt;Install on Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#install-on-windows"&gt;Install on Windows&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#run-using-docker"&gt;Run using Docker&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#quick-look"&gt;Quick look&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#why-surrealdb"&gt;Why SurrealDB&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#database-api-and-permissions"&gt;Database, API, and permissions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#tables-documents-and-graph"&gt;Tables, documents, and graph&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#advanced-inter-document-relations-and-analysis-no-joins-no-pain"&gt;Advanced inter-document relations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#simple-schema-definition-for-frontend-and-backend-development"&gt;Simple schema definition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#connect-and-query-directly-from-web-browsers-and-client-devices"&gt;Connect directly from web-browsers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#query-the-database-with-the-tools-you-want"&gt;Multiple different query methods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#realtime-live-queries-and-data-changes-direct-to-application"&gt;Realtime live queries and data changes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#scale-effortlessly-to-hundreds-of-nodes-for-high-availability-and-scalability"&gt;Scale effortlessly for high-availability&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#extend-your-database-with-javascript-functions"&gt;Extend your database with JavaScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#designed-to-be-embedded-or-to-run-distributed-in-the-cloud"&gt;Designed to be embedded or in the cloud&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#security"&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;img height="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/features.svg?sanitize=true" /&gt;&amp;nbsp;&amp;nbsp;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Database server, or embedded library&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Multi-row, multi-table ACID transactions&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Single-node, or highly-scalable distributed mode&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Record links and directed typed graph connections&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Store structured and unstructured data&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Incrementally computed views for pre-computed advanced analytics&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Realtime-api layer, and security permissions built in&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Store and model data in any way with tables, documents, and graph&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Simple schema definition for frontend and backend development&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Connect and query directly from web-browsers and client devices&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Use embedded JavaScript functions for custom advanced functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;img height="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/documentation.svg?sanitize=true" /&gt;&amp;nbsp;&amp;nbsp;Documentation&lt;/h2&gt; 
&lt;p&gt;For guidance on installation, development, deployment, and administration, take a look at the following resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://surrealdb.com/docs"&gt;https://surrealdb.com/docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SurrealDB University: &lt;a href="https://surrealdb.com/learn/fundamentals"&gt;https://surrealdb.com/learn/fundamentals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Aeon's Surreal Renaissance (interative book): &lt;a href="https://surrealdb.com/learn/book"&gt;https://surrealdb.com/learn/book&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;img height="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/gettingstarted.svg?sanitize=true" /&gt;&amp;nbsp;&amp;nbsp;Getting started&lt;/h2&gt; 
&lt;p&gt;Getting started with SurrealDB is as easy as starting up the SurrealDB database server, choosing your platform, and integrating its SDK into your code. You can easily get started with your platform of choice by reading one of our tutorials.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Server side code&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt; &lt;a href="https://surrealdb.com/docs/integration/sdks/rust"&gt;&lt;img width="60" title="Rust" src="https://raw.githubusercontent.com/surrealdb/icons/main/rust.svg?sanitize=true" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://surrealdb.com/docs/integration/sdks/javascript"&gt;&lt;img width="60" title="JavaScript" src="https://raw.githubusercontent.com/surrealdb/icons/main/javascript.svg?sanitize=true" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://surrealdb.com/docs/integration/sdks/javascript"&gt;&lt;img width="60" title="WebAssembly" src="https://raw.githubusercontent.com/surrealdb/icons/main/webassembly.svg?sanitize=true" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://surrealdb.com/docs/integration/sdks/javascript"&gt;&lt;img width="60" title="Node.js" src="https://raw.githubusercontent.com/surrealdb/icons/main/nodejs.svg?sanitize=true" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://surrealdb.com/docs/integration/sdks/javascript"&gt;&lt;img width="60" title="Deno" src="https://raw.githubusercontent.com/surrealdb/icons/main/deno.svg?sanitize=true" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://surrealdb.com/docs/integration/sdks/python"&gt;&lt;img width="60" title="Python" src="https://raw.githubusercontent.com/surrealdb/icons/main/python.svg?sanitize=true" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://surrealdb.com/docs/integration/sdks/golang"&gt;&lt;img width="60" title="Golang" src="https://raw.githubusercontent.com/surrealdb/icons/main/golang.svg?sanitize=true" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://surrealdb.com/docs/integration/sdks/dotnet"&gt;&lt;img width="60" title=".NET" src="https://raw.githubusercontent.com/surrealdb/icons/main/dotnet.svg?sanitize=true" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://surrealdb.com/docs/integration/sdks/php"&gt;&lt;img width="60" title="PHP" src="https://raw.githubusercontent.com/surrealdb/icons/main/php.svg?sanitize=true" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://surrealdb.com/docs/integration/sdks/java"&gt;&lt;img width="60" title="Java" src="https://raw.githubusercontent.com/surrealdb/icons/main/java.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Client side apps&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt; &lt;a href="https://surrealdb.com/docs/integration/sdks/javascript"&gt;&lt;img width="60" title="JavaScript" src="https://raw.githubusercontent.com/surrealdb/icons/main/javascript.svg?sanitize=true" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://surrealdb.com/docs/integration/sdks/javascript"&gt;&lt;img width="60" title="WebAssembly" src="https://raw.githubusercontent.com/surrealdb/icons/main/webassembly.svg?sanitize=true" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://surrealdb.com/docs/integration/sdks/javascript"&gt;&lt;img width="60" title="React" src="https://raw.githubusercontent.com/surrealdb/icons/main/reactjs.svg?sanitize=true" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://surrealdb.com/docs/integration/sdks/javascript"&gt;&lt;img width="60" title="Next.js" src="https://raw.githubusercontent.com/surrealdb/icons/main/nextjs.svg?sanitize=true" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://surrealdb.com/docs/integration/sdks/ember"&gt;&lt;img width="60" title="Ember.js" src="https://raw.githubusercontent.com/surrealdb/icons/main/emberjs.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;&lt;img height="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/cloud.svg?raw=true" /&gt;&amp;nbsp;&amp;nbsp;Surreal Cloud&lt;/h2&gt; 
&lt;a href="https://surrealdb.com/cloud#gh-dark-mode-only" target="_blank"&gt; &lt;img width="100%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/white/cloud.png" alt="Surreal Cloud" /&gt; &lt;/a&gt; 
&lt;a href="https://surrealdb.com/cloud#gh-light-mode-only" target="_blank"&gt; &lt;img width="100%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/black/cloud.png" alt="Surreal Cloud" /&gt; &lt;/a&gt; 
&lt;p&gt;SurrealDB is available as a &lt;a href="https://surrealist.app/cloud"&gt;hosted platform&lt;/a&gt;. Forget about infrastructure operations, monitoring, backups or capacity planning. &lt;a href="https://surrealdb.com/cloud"&gt;Surreal Cloud&lt;/a&gt; allows you to focus on building great products using the power and flexibility of SurrealDB in just a few clicks. Grow from prototype to enterprise-scale. The Surreal Cloud scalable architecture allows your database to evolve as your application grows, ensuring you are always ahead of demand. However if you want to deploy SurrealDB yourself, keep reading below.&lt;/p&gt; 
&lt;h2&gt;&lt;img height="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/installation.svg?sanitize=true" /&gt;&amp;nbsp;&amp;nbsp;Installation&lt;/h2&gt; 
&lt;p&gt;SurrealDB is designed to be simple to install and simple to run - using just one command from your terminal. In addition to traditional installation, SurrealDB can be installed and run with HomeBrew, Docker, or using any other container orchestration tool such as Docker Compose, Docker Swarm, Rancher, or in Kubernetes.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://surrealdb.com/install"&gt;&lt;img width="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/apple.svg?sanitize=true" /&gt;&lt;/a&gt;&amp;nbsp;Install on macOS&lt;/h4&gt; 
&lt;p&gt;The quickest way to get going with SurrealDB on macOS is to use Homebrew. This will install both the command-line tools, and the SurrealDB server as a single executable. If you don't use Homebrew, follow the instructions for Linux below to install SurrealDB.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install surrealdb/tap/surreal
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to test a version with the latest features, published every night, install the &lt;code&gt;nightly&lt;/code&gt; version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install surrealdb/tap/surreal-nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a href="https://surrealdb.com/install"&gt;&lt;img width="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/linux.svg?sanitize=true" /&gt;&lt;/a&gt;&amp;nbsp;Install on Linux&lt;/h4&gt; 
&lt;p&gt;The easiest and preferred way to get going with SurrealDB on Unix operating systems is to install and use the SurrealDB command-line tool. Run the following command in your terminal and follow the on-screen instructions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl --proto '=https' --tlsv1.2 -sSf https://install.surrealdb.com | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to run a beta release, before the next version is released, the &lt;code&gt;beta&lt;/code&gt; version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl --proto '=https' --tlsv1.2 -sSf https://install.surrealdb.com | sh -s -- --beta
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to test a version with the latest features, published every night, install the &lt;code&gt;nightly&lt;/code&gt; version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl --proto '=https' --tlsv1.2 -sSf https://install.surrealdb.com | sh -s -- --nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a href="https://surrealdb.com/install"&gt;&lt;img width="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/windows.svg?sanitize=true" /&gt;&lt;/a&gt;&amp;nbsp;Install on Windows&lt;/h4&gt; 
&lt;p&gt;The easiest and preferred way to get going with SurrealDB on Windows is to install and use the SurrealDB command-line tool. Run the following command in your terminal and follow the on-screen instructions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ps1"&gt;iwr https://windows.surrealdb.com -useb | iex
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to test a version with the latest features, published every night, install the &lt;code&gt;nightly&lt;/code&gt; version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ps1"&gt;iex "&amp;amp; { $(irm https://windows.surrealdb.com) } -Nightly"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a href="https://surrealdb.com/install"&gt;&lt;img width="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/docker.svg?sanitize=true" /&gt;&lt;/a&gt;&amp;nbsp;Run using Docker&lt;/h4&gt; 
&lt;p&gt;Docker can be used to manage and run SurrealDB database instances without the need to install any command-line tools. The SurrealDB docker container contains the full command-line tools for importing and exporting data from a running server, or for running a server itself.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm --pull always --name surrealdb -p 8000:8000 surrealdb/surrealdb:latest start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For just getting started with a development server running in memory, you can pass the container a basic initialization to set the user and password as root and enable logging.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm --pull always --name surrealdb -p 8000:8000 surrealdb/surrealdb:latest start --log info --user root --pass root memory
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;img height="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/features.svg?sanitize=true" /&gt;&amp;nbsp;&amp;nbsp;Quick look&lt;/h2&gt; 
&lt;p&gt;With strongly-typed data types, data can be fully modelled right in the database.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;UPDATE person SET
    waist = &amp;lt;int&amp;gt; "34",
    height = &amp;lt;float&amp;gt; 201,
    score = &amp;lt;decimal&amp;gt; 0.3 + 0.3 + 0.3 + 0.1
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Store dynamically computed fields which are calculated when retrieved.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;DEFINE FIELD can_drive ON TABLE person COMPUTED time::now() &amp;gt; birthday + 18y;
CREATE person SET birthday = d"2007-06-22";
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Easily work with unstructured or structured data, in schema-less or schema-full mode.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;-- Create a schemafull table
DEFINE TABLE user SCHEMAFULL;

-- Specify fields on the user table
DEFINE FIELD name ON TABLE user TYPE object;
DEFINE FIELD name.first ON TABLE user TYPE string;
DEFINE FIELD name.last ON TABLE user TYPE string;
DEFINE FIELD email ON TABLE user TYPE string ASSERT string::is_email($value);

-- Add a unique index on the email field preventing duplicate values
DEFINE INDEX email ON TABLE user COLUMNS email UNIQUE;

-- Create a new event whenever a user changes their email address
DEFINE EVENT email ON TABLE user WHEN $before.email != $after.email THEN (
    CREATE event SET user = $value, time = time::now(), value = $after.email, action = 'email_changed'
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Connect records together with fully directed graph edge connections.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;-- Add a graph edge between user:tobie and article:surreal
RELATE user:tobie-&amp;gt;write-&amp;gt;article:surreal
    SET time.written = time::now()
;

-- Add a graph edge between specific users and developers
LET $from = (SELECT users FROM company:surrealdb);
LET $devs = (SELECT * FROM user WHERE tags CONTAINS 'developer');
RELATE $from-&amp;gt;like-&amp;gt;$devs UNIQUE
    SET time.connected = time::now()
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Query data flexibly with advanced expressions and graph queries.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;-- Select a nested array, and filter based on an attribute
SELECT emails[WHERE active = true] FROM person;

-- Select all 1st, 2nd, and 3rd level people who this specific person record knows, or likes, as separate outputs
SELECT -&amp;gt;knows-&amp;gt;(? AS f1)-&amp;gt;knows-&amp;gt;(? AS f2)-&amp;gt;(knows, likes AS e3 WHERE influencer = true)-&amp;gt;(? AS f3) FROM person:tobie;

-- Select all person records (and their recipients), who have sent more than 5 emails
SELECT *, -&amp;gt;sent-&amp;gt;email-&amp;gt;to-&amp;gt;person FROM person WHERE count(-&amp;gt;sent-&amp;gt;email) &amp;gt; 5;

-- Select other products purchased by people who purchased this laptop
SELECT &amp;lt;-purchased&amp;lt;-person-&amp;gt;purchased-&amp;gt;product FROM product:laptop;

-- Select products purchased by people in the last 3 weeks who have purchased the same products that we purchased
SELECT -&amp;gt;purchased-&amp;gt;product&amp;lt;-purchased&amp;lt;-person-&amp;gt;(purchased WHERE created_at &amp;gt; time::now() - 3w)-&amp;gt;product FROM person:tobie;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Store GeoJSON geographical data types, including points, lines and polygons.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;UPDATE city:london SET
    centre = (-0.118092, 51.509865),
    boundary = {
        type: "Polygon",
        coordinates: [[
            [-0.38314819, 51.37692386], [0.1785278, 51.37692386],
            [0.1785278, 51.61460570], [-0.38314819, 51.61460570],
            [-0.38314819, 51.37692386]
        ]]
    }
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Write custom embedded logic using JavaScript functions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;CREATE film SET
    ratings = [
        { rating: 6, user: user:bt8e39uh1ouhfm8ko8s0 },
        { rating: 8, user: user:bsilfhu88j04rgs0ga70 },
    ],
    featured = function() {
        return this.ratings.filter(r =&amp;gt; {
            return r.rating &amp;gt;= 7;
        }).map(r =&amp;gt; {
            return { ...r, rating: r.rating * 10 };
        });
    }
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Specify granular access permissions for client and application access.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;-- Specify access permissions for the 'post' table
DEFINE TABLE post SCHEMALESS
    PERMISSIONS
        FOR select
            -- Published posts can be selected
            WHERE published = true
            -- A user can select all their own posts
            OR user = $auth.id
        FOR create, update
            -- A user can create or update their own posts
            WHERE user = $auth.id
        FOR delete
            -- A user can delete their own posts
            WHERE user = $auth.id
            -- Or an admin can delete any posts
            OR $auth.admin = true
;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;img height="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/features.svg?sanitize=true" /&gt;&amp;nbsp;&amp;nbsp;Why SurrealDB?&lt;/h2&gt; 
&lt;p&gt; &lt;img width="49%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/database-api-security.jpg" /&gt; &lt;img width="49%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/multimodel-database.jpg" /&gt; &lt;/p&gt; 
&lt;h3&gt;Database, API, and permissions&lt;/h3&gt; 
&lt;p&gt;SurrealDB combines the database layer, the querying layer, and the API and authentication layer into one platform. Advanced table-based and row-based customisable access permissions allow for granular data access patterns for different types of users. There's no need for custom backend code and security rules with complicated database development.&lt;/p&gt; 
&lt;h3&gt;Tables, documents, and graph&lt;/h3&gt; 
&lt;p&gt;As a multi-model database, SurrealDB enables developers to use multiple techniques to store and model data, without having to choose a method in advance. With the use of tables, SurrealDB has similarities with relational databases, but with the added functionality and flexibility of advanced nested fields and arrays. Inter-document record links allow for simple to understand and highly-performant related queries without the use of JOINs, eliminating the N+1 query problem.&lt;/p&gt; 
&lt;p&gt; &lt;img width="49%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/graph-database.jpg" /&gt; &lt;img width="49%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/schema-direct-to-client.jpg" /&gt; &lt;/p&gt; 
&lt;h3&gt;Advanced inter-document relations and analysis. No JOINs. No pain.&lt;/h3&gt; 
&lt;p&gt;With full graph database functionality SurrealDB enables more advanced querying and analysis. Records (or vertices) can be connected to one another with edges, each with its own record properties and metadata. Simple extensions to traditional SQL queries allow for multi-table, multi-depth document retrieval, efficiently in the database, without the use of complicated JOINs and without bringing the data down to the client.&lt;/p&gt; 
&lt;h3&gt;Simple schema definition for frontend and backend development&lt;/h3&gt; 
&lt;p&gt;With SurrealDB, specify your database and API schema in one place, and define column rules and constraints just once. Once a schema is defined, database access is automatically granted to the relevant users. No more custom API code, and no more GraphQL integration. Simple, flexible, and ready for production in minutes not months.&lt;/p&gt; 
&lt;p&gt; &lt;img width="49%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/browser-sync.jpg" /&gt; &lt;img width="49%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/multiple-integrations.jpg" /&gt; &lt;/p&gt; 
&lt;h3&gt;Connect and query directly from web-browsers and client devices&lt;/h3&gt; 
&lt;p&gt;Connect directly to SurrealDB from any end-user client device. Run SurrealQL queries directly within web-browsers, ensuring that users can only view or modify the data that they are allowed to access. Highly-performant WebSocket connections allow for efficient bi-directional queries, responses and notifications.&lt;/p&gt; 
&lt;h3&gt;Query the database with the tools you want&lt;/h3&gt; 
&lt;p&gt;Your data, your choice. SurrealDB is designed to be flexible to use, with support for SurrealQL, GraphQL (coming soon), CRUD support over REST, and JSON-RPC querying and modification over WebSockets. With direct-to-client connection with in-built permissions, SurrealDB speeds up the development process, and fits in seamlessly into any tech stack.&lt;/p&gt; 
&lt;p&gt; &lt;img width="49%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/realtime-live-queries.jpg" /&gt; &lt;img width="49%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/scale-up.jpg" /&gt; &lt;/p&gt; 
&lt;h3&gt;Realtime live queries and data changes direct to application&lt;/h3&gt; 
&lt;p&gt;SurrealDB keeps every client device in-sync with data modifications pushed in realtime to the clients, applications, end-user devices, and server-side libraries. Live SQL queries allow for advanced filtering of the changes to which a client subscribes, and efficient data formats, including DIFFing and PATCHing enable highly-performant web-based data syncing.&lt;/p&gt; 
&lt;h3&gt;Scale effortlessly to hundreds of nodes for high-availability and scalability&lt;/h3&gt; 
&lt;p&gt;SurrealDB can be run as a single in-memory node, or as part of a distributed cluster - offering highly-available and highly-scalable system characteristics. Designed from the ground up to run in a distributed environment, SurrealDB makes use of special techniques when handling multi-table transactions, and document record IDs - with no use of table or row locks.&lt;/p&gt; 
&lt;p&gt; &lt;img width="49%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/database-plugins.jpg" /&gt; &lt;img width="49%" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/illustrations/cloud-or-embedded.jpg" /&gt; &lt;/p&gt; 
&lt;h3&gt;Extend your database with JavaScript functions&lt;/h3&gt; 
&lt;p&gt;Embedded JavaScript functions allow for advanced, custom functionality, with computation logic being moved to the data layer. This improves upon the traditional approach of moving data to the client devices before applying any computation logic, ensuring that only the necessary data is transferred remotely. These advanced JavaScript functions, with support for the ES2020 standard, allow any developer to analyse the data in ever more simple-yet-advanced ways.&lt;/p&gt; 
&lt;h3&gt;Designed to be embedded or to run distributed in the cloud&lt;/h3&gt; 
&lt;p&gt;Built entirely in Rust as a single library, SurrealDB is designed to be used as both an embedded database library with advanced querying functionality, and as a database server which can operate in a distributed cluster. With low memory usage and cpu requirements, the system requirements have been specifically thought through for running in all types of environment.&lt;/p&gt; 
&lt;h2&gt;&lt;img height="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/community.svg?sanitize=true" /&gt;&amp;nbsp;&amp;nbsp;Community&lt;/h2&gt; 
&lt;p&gt;Join our growing community around the world, for help, ideas, and discussions regarding SurrealDB.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;View our official &lt;a href="https://surrealdb.com/blog"&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat live with us on &lt;a href="https://surrealdb.com/discord"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow us on &lt;a href="https://x.com/surrealdb"&gt;X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Connect with us on &lt;a href="https://www.linkedin.com/company/surrealdb/"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Visit us on &lt;a href="https://www.youtube.com/@surrealdb"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Join our &lt;a href="https://dev.to/surrealdb"&gt;Dev community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Questions tagged #surrealdb on &lt;a href="https://stackoverflow.com/questions/tagged/surrealdb"&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;img height="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/contributing.svg?sanitize=true" /&gt;&amp;nbsp;&amp;nbsp;Contributing&lt;/h2&gt; 
&lt;p&gt;We would &amp;nbsp;&lt;img width="15" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/love.svg?sanitize=true" /&gt;&amp;nbsp; for you to get involved with SurrealDB development! If you wish to help, you can learn more about how you can contribute to this project in the &lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;img height="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/security.svg?sanitize=true" /&gt;&amp;nbsp;&amp;nbsp;Security&lt;/h2&gt; 
&lt;p&gt;For security issues, view our &lt;a href="https://github.com/surrealdb/surrealdb/security/policy"&gt;vulnerability policy&lt;/a&gt;, view our &lt;a href="https://surrealdb.com/legal/security"&gt;security policy&lt;/a&gt;, and kindly email us at &lt;a href="mailto:security@surrealdb.com"&gt;security@surrealdb.com&lt;/a&gt; instead of posting a public issue on GitHub.&lt;/p&gt; 
&lt;h2&gt;&lt;img height="20" src="https://raw.githubusercontent.com/surrealdb/surrealdb/main/img/license.svg?sanitize=true" /&gt;&amp;nbsp;&amp;nbsp;License&lt;/h2&gt; 
&lt;p&gt;Source code for SurrealDB is variously licensed under a number of different licenses. A copy of each license can be found in &lt;a href="https://github.com/surrealdb"&gt;each repository&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Libraries and SDKs, each located in its own distinct repository, are released under either the &lt;a href="https://github.com/surrealdb/license/raw/main/APL.txt"&gt;Apache License 2.0&lt;/a&gt; or &lt;a href="https://github.com/surrealdb/license/raw/main/MIT.txt"&gt;MIT License&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Certain core database components, each located in its own distinct repository, are released under the &lt;a href="https://github.com/surrealdb/license/raw/main/APL.txt"&gt;Apache License 2.0&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Core database code for SurrealDB, located in &lt;a href="https://github.com/surrealdb/surrealdb"&gt;this repository&lt;/a&gt;, is released under the &lt;a href="https://raw.githubusercontent.com/surrealdb/surrealdb/main/LICENSE"&gt;Business Source License 1.1&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, see the &lt;a href="https://github.com/surrealdb/license"&gt;licensing information&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>