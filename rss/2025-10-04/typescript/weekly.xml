<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Weekly Trending</title>
    <description>Weekly Trending of TypeScript in GitHub</description>
    <pubDate>Fri, 03 Oct 2025 01:49:32 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>directus/directus</title>
      <link>https://github.com/directus/directus</link>
      <description>&lt;p&gt;The flexible backend for all your projects üê∞ Turn your DB into a headless CMS, admin panels, or apps with a custom UI, instant APIs, auth &amp; more.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt;&lt;img alt="Directus Logo" src="https://user-images.githubusercontent.com/522079/158864859-0fbeae62-9d7a-4619-b35e-f8fa5f68e0c8.png" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üê∞ Introduction&lt;/h2&gt; 
&lt;p&gt;Directus is a real-time API and App dashboard for managing SQL database content.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;REST &amp;amp; GraphQL API.&lt;/strong&gt; Instantly layers a blazingly fast Node.js API on top of any SQL database.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Manage Pure SQL.&lt;/strong&gt; Works with new or existing SQL databases, no migration required.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Choose your Database.&lt;/strong&gt; Supports PostgreSQL, MySQL, SQLite, OracleDB, CockroachDB, MariaDB, and MS-SQL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;On-Prem or Cloud.&lt;/strong&gt; Run locally, install on-premises, or use our &lt;a href="https://directus.io/pricing"&gt;self-service Cloud service&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Completely Extensible.&lt;/strong&gt; Built to white-label, it is easy to customize our modular platform.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;A Modern Dashboard.&lt;/strong&gt; Our no-code Vue.js app is safe and intuitive for non-technical users, no training required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://directus.io"&gt;Learn more about Directus&lt;/a&gt;&lt;/strong&gt; ‚Ä¢ &lt;strong&gt;&lt;a href="https://docs.directus.io"&gt;Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;üöÄ Directus Cloud&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://directus.io/pricing"&gt;Directus Cloud&lt;/a&gt; allows you to create projects, hosted by the Directus team, from $15/month.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A self-service dashboard to create and monitor all your projects in one place.&lt;/li&gt; 
 &lt;li&gt;Everything you need: Directus, database, storage, auto-scaling, and a global CDN.&lt;/li&gt; 
 &lt;li&gt;Select your desired region and provision a new project in ~90 seconds.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://directus.cloud"&gt;Create a Directus Cloud Project&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;ü§î Community Help&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.directus.io"&gt;The Directus Documentation&lt;/a&gt; is a great place to start, or explore these other channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://community.directus.io"&gt;Community&lt;/a&gt; (Questions, Discussions)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://directus.chat"&gt;Discord&lt;/a&gt; (Live Chat)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/directus/directus/issues"&gt;GitHub Issues&lt;/a&gt; (Report Bugs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/directus/directus/discussions"&gt;GitHub Discussions&lt;/a&gt; (Feature Requests)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/directus"&gt;Twitter&lt;/a&gt; (Latest News)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/c/DirectusVideos/featured"&gt;YouTube&lt;/a&gt; (Video Tutorials)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;‚ù§Ô∏è Contributing &amp;amp; Sponsoring&lt;/h2&gt; 
&lt;p&gt;Please read our &lt;a href="https://raw.githubusercontent.com/directus/directus/main/contributing.md"&gt;Contributing Guide&lt;/a&gt; before submitting Pull Requests.&lt;/p&gt; 
&lt;p&gt;All security vulnerabilities should be reported in accordance with our &lt;a href="https://docs.directus.io/contributing/introduction/#reporting-security-vulnerabilities"&gt;Security Policy&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Directus is made possible with support from our passionate core team, talented contributors, and amazing &lt;a href="https://github.com/sponsors/directus"&gt;GitHub Sponsors&lt;/a&gt;. Thank you all!&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;üìÑ Understanding Our License&lt;/h2&gt; 
&lt;p&gt;Directus is licensed under &lt;a href="https://raw.githubusercontent.com/directus/directus/main/license"&gt;the Business Source License (BSL) 1.1&lt;/a&gt; with a permissive additional use grant. For most users, it operates just like open source! Here's what that means for you:&lt;/p&gt; 
&lt;h3&gt;Free for Most Users&lt;/h3&gt; 
&lt;p&gt;If your organization has less than $5M in annual revenue and/or funding combined, you can use Directus freely in any way you'd like. Build that side project, launch your startup, or experiment with the platform ‚Äî no strings attached.&lt;/p&gt; 
&lt;h3&gt;Enterprise Usage&lt;/h3&gt; 
&lt;p&gt;For larger organizations (&amp;gt;$5M in annual revenue/funding) using Directus in production, we require a commercial license. This model helps us maintain a sustainable balance: keeping Directus free for the majority of our community while ensuring larger organizations who benefit from the platform contribute to its continued development.&lt;/p&gt; 
&lt;h3&gt;Why This Approach?&lt;/h3&gt; 
&lt;p&gt;We believe in making powerful data tools accessible to everyone. This license lets us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Keep Directus free for individuals, startups, and smaller companies&lt;/li&gt; 
 &lt;li&gt;Maintain active development and strong support&lt;/li&gt; 
 &lt;li&gt;Continue improving the platform for everyone&lt;/li&gt; 
 &lt;li&gt;Stay sustainable as an independent project&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>cloudflare/capnweb</title>
      <link>https://github.com/cloudflare/capnweb</link>
      <description>&lt;p&gt;JavaScript/TypeScript-native, low-boilerplate, object-capability RPC system&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cap'n Web: A JavaScript-native RPC system&lt;/h1&gt; 
&lt;p&gt;Cap'n Web is a spiritual sibling to &lt;a href="https://capnproto.org"&gt;Cap'n Proto&lt;/a&gt; (and is created by the same author), but designed to play nice in the web stack. That means:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Like Cap'n Proto, it is an object-capability protocol. ("Cap'n" is short for "capabilities and".) We'll get into this more below, but it's incredibly powerful.&lt;/li&gt; 
 &lt;li&gt;Unlike Cap'n Proto, Cap'n Web has no schemas. In fact, it has almost no boilerplate whatsoever. This means it works more like the &lt;a href="https://blog.cloudflare.com/javascript-native-rpc/"&gt;JavaScript-native RPC system in Cloudflare Workers&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;That said, it integrates nicely with TypeScript.&lt;/li&gt; 
 &lt;li&gt;Also unlike Cap'n Proto, Cap'n Web's underlying serialization is human-readable. In fact, it's just JSON, with a little pre-/post-processing.&lt;/li&gt; 
 &lt;li&gt;It works over HTTP, WebSocket, and postMessage() out-of-the-box, with the ability to extend it to other transports easily.&lt;/li&gt; 
 &lt;li&gt;It works in all major browsers, Cloudflare Workers, Node.js, and other modern JavaScript runtimes. The whole thing compresses (minify+gzip) to under 10kB with no dependencies.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Cap'n Web is more expressive than almost every other RPC system, because it implements an object-capability RPC model. That means it:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports bidirectional calling. The client can call the server, and the server can also call the client.&lt;/li&gt; 
 &lt;li&gt;Supports passing functions by reference: If you pass a function over RPC, the recipient receives a "stub". When they call the stub, they actually make an RPC back to you, invoking the function where it was created. This is how bidirectional calling happens: the client passes a callback to the server, and then the server can call it later.&lt;/li&gt; 
 &lt;li&gt;Similarly, supports passing objects by reference: If a class extends the special marker type &lt;code&gt;RpcTarget&lt;/code&gt;, then instances of that class are passed by reference, with method calls calling back to the location where the object was created.&lt;/li&gt; 
 &lt;li&gt;Supports promise pipelining. When you start an RPC, you get back a promise. Instead of awaiting it, you can immediately use the promise in dependent RPCs, thus performing a chain of calls in a single network round trip.&lt;/li&gt; 
 &lt;li&gt;Supports capability-based security patterns.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/capnweb"&gt;Cap'n Web is an npm package.&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm i capnweb
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;A client looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { newWebSocketRpcSession } from "capnweb";

// One-line setup.
let api = newWebSocketRpcSession("wss://example.com/api");

// Call a method on the server!
let result = await api.hello("World");

console.log(result);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { RpcTarget, newWorkersRpcResponse } from "capnweb";

// This is the server implementation.
class MyApiServer extends RpcTarget {
  hello(name) {
    return `Hello, ${name}!`
  }
}

// Standard Cloudflare Workers HTTP handler.
//
// (Node and other runtimes are supported too; see below.)
export default {
  fetch(request, env, ctx) {
    // Parse URL for routing.
    let url = new URL(request.url);

    // Serve API at `/api`.
    if (url.pathname === "/api") {
      return newWorkersRpcResponse(request, new MyApiServer());
    }

    // You could serve other endpoints here...
    return new Response("Not found", {status: 404});
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;More complicated example&lt;/h3&gt; 
&lt;p&gt;Here's an example that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Uses TypeScript&lt;/li&gt; 
 &lt;li&gt;Sends multiple calls, where the second call depends on the result of the first, in one round trip.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We declare our interface in a shared types file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;interface PublicApi {
  // Authenticate the API token, and returned the authenticated API.
  authenticate(apiToken: string): AuthedApi;

  // Get a given user's public profile info. (Doesn't require authentication.)
  getUserProfile(userId: string): Promise&amp;lt;UserProfile&amp;gt;;
}

interface AuthedApi {
  getUserId(): number;

  // Get the user IDs of all the user's friends.
  getFriendIds(): number[];
}

type UserProfile = {
  name: string;
  photoUrl: string;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(Note: you don't &lt;em&gt;have to&lt;/em&gt; declare your interface separately. The client could just use &lt;code&gt;import("./server").ApiServer&lt;/code&gt; as the type.)&lt;/p&gt; 
&lt;p&gt;On the server, we implement the interface as an RpcTarget:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { newWorkersRpcResponse, RpcTarget } from "capnweb";

class ApiServer extends RpcTarget implements PublicApi {
  // ... implement PublicApi ...
}

export default {
  async fetch(req, env, ctx) {
    // ... same as previous example ...
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On the client, we can use it in a batch request:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { newHttpBatchRpcSession } from "capnweb";

let api = newHttpBatchRpcSession&amp;lt;PublicApi&amp;gt;("https://example.com/api");

// Call authenticate(), but don't await it. We can use the returned promise
// to make "pipelined" calls without waiting.
let authedApi: RpcPromise&amp;lt;AuthedApi&amp;gt; = api.authenticate(apiToken);

// Make a pipelined call to get the user's ID. Again, don't await it.
let userIdPromise: RpcPromise&amp;lt;number&amp;gt; = authedApi.getUserId();

// Make another pipelined call to fetch the user's public profile, based on
// the user ID. Notice how we can use `RpcPromise&amp;lt;T&amp;gt;` in the parameters of a
// call anywhere where T is expected. The promise will be replaced with its
// resolution before delivering the call.
let profilePromise = api.getUserProfile(userIdPromise);

// Make another call to get the user's friends.
let friendsPromise = authedApi.getFriendIds();

// That only returns an array of user IDs, but we want all the profile info
// too, so use the magic .map() function to get them, too! Still one round
// trip.
let friendProfilesPromise = friendsPromise.map((id: RpcPromise&amp;lt;number&amp;gt;) =&amp;gt; {
  return { id, profile: api.getUserProfile(id); };
});

// Now await the promises. The batch is sent at this point. It's important
// to simultaneously await all promises for which you actually want the
// result. If you don't actually await a promise before the batch is sent,
// the system detects this and doesn't actually ask the server to send the
// return value back!
let [profile, friendProfiles] =
    await Promise.all([profilePromise, friendProfilesPromise]);

console.log(`Hello, ${profile.name}!`);

// Note that at this point, the `api` and `authedApi` stubs no longer work,
// because the batch is done. You must start a new batch.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, for a long-running interactive application, we can set up a persistent WebSocket connection:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { newWebSocketRpcSession } from "capnweb";

// We declare `api` with `using` so that it'll be disposed at the end of the
// scope, which closes the connection. `using` is a fairly new JavaScript
// feature, part of the "explicit resource management" spec. Alternatively,
// we could declare `api` with `let` or `const` and make sure to call
// `api[Symbol.dispose]()` to dispose it and close the connection later.
using api = newWebSocketRpcSession&amp;lt;PublicApi&amp;gt;("wss://example.com/api");

// Usage is exactly the same, except we don't have to await all the promises
// at once.

// Authenticate and get the user ID in one round trip. Note we use `using`
// again so that `authedApi` will be disposed when we're done with it. In
// this case, it won't close the connection (since it's not the main stub),
// but disposing it does release the `AuthedApi` object on the server side.
using authedApi: RpcPromise&amp;lt;AuthedApi&amp;gt; = api.authenticate(apiToken);
let userId: number = await authedApi.getUserId();

// ... continue calling other methods, now or in the future ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;RPC Basics&lt;/h2&gt; 
&lt;h3&gt;Pass-by-value types&lt;/h3&gt; 
&lt;p&gt;The following types can be passed over RPC (in arguments or return values), and will be passed "by value", meaning the content is serialized, producing a copy at the receiving end:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Primitive values: strings, numbers, booleans, null, undefined&lt;/li&gt; 
 &lt;li&gt;Plain objects (e.g., from object literals)&lt;/li&gt; 
 &lt;li&gt;Arrays&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bigint&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Error&lt;/code&gt; and its well-known subclasses&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following types are not supported as of this writing, but may be added in the future:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt; and typed arrays other than &lt;code&gt;Uint8Array&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ReadableStream&lt;/code&gt; and &lt;code&gt;WritableStream&lt;/code&gt;, with automatic flow control.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Headers&lt;/code&gt;, &lt;code&gt;Request&lt;/code&gt;, and &lt;code&gt;Response&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following are intentionally NOT supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Application-defined classes that do not extend &lt;code&gt;RpcTarget&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Cyclic values. Messages are serialized strictly as trees (like JSON).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;code&gt;RpcTarget&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;To export an interface over RPC, you must write a class that &lt;code&gt;extends RpcTarget&lt;/code&gt;. Extending &lt;code&gt;RpcTarget&lt;/code&gt; tells the RPC system: instances of this class are &lt;em&gt;pass-by-reference&lt;/em&gt;. When an instance is passed over RPC, the object should NOT be serialized. Instead, the RPC message will contain a "stub" that points back to the original target object. Invoking this stub calls back over RPC.&lt;/p&gt; 
&lt;p&gt;When you send someone an &lt;code&gt;RpcTarget&lt;/code&gt; reference, they will be able to call any class method over RPC, including getters. They will not, however, be able to access "own" properties. In precise JavaScript terms, they can access prototype properties but not instance properties. This policy is intended to "do the right thing" for typical JavaScript code, where private members are typically stored as instance properties.&lt;/p&gt; 
&lt;p&gt;WARNING: If you are using TypeScript, note that declaring a method &lt;code&gt;private&lt;/code&gt; does not hide it from RPC, because TypeScript annotations are "erased" at runtime, so cannot be enforced. To actually make methods private, you must prefix their names with &lt;code&gt;#&lt;/code&gt;, which makes them private for JavaScript (not just TypeScript). Names prefixed with &lt;code&gt;#&lt;/code&gt; are never available over RPC.&lt;/p&gt; 
&lt;h3&gt;Functions&lt;/h3&gt; 
&lt;p&gt;When a plain function is passed over RPC, it will be treated similarly to an &lt;code&gt;RpcTarget&lt;/code&gt;. The function will be replaced by a stub which, when invoked, calls back over RPC to the original function object.&lt;/p&gt; 
&lt;p&gt;If the function has any own properties, those will be available over RPC. Note that this differs from &lt;code&gt;RpcTarget&lt;/code&gt;: With &lt;code&gt;RpcTarget&lt;/code&gt;, own properties are not exposed, but with functions, &lt;em&gt;only&lt;/em&gt; own properties are exposed. Generally functions don't have properties anyway, making the point moot.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;RpcStub&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;When a type &lt;code&gt;T&lt;/code&gt; which extends &lt;code&gt;RpcTarget&lt;/code&gt; (or is a function) is sent as part of an RPC message (in the arguments to a call, or in the return value), it is replaced with a stub of type &lt;code&gt;RpcStub&amp;lt;T&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Stubs are implemented using JavaScript &lt;code&gt;Proxy&lt;/code&gt;s. A stub appears to have every possible method and property name. The stub does not know at runtime which properties actually exist on the server side. If you use a property that doesn't exist, an error will not be produced until you await the results.&lt;/p&gt; 
&lt;p&gt;TypeScript, however, will know which properties exist from type parameter &lt;code&gt;T&lt;/code&gt;. Thus, if you are using TypeScript, you will get full compile-time type checking, auto-complete, etc. Hooray!&lt;/p&gt; 
&lt;p&gt;To read a property from the remote object (as opposed to calling a method), simply &lt;code&gt;await&lt;/code&gt; the property, like &lt;code&gt;let foo = await stub.foo;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A stub can be passed across RPC again, including over independent connections. If Alice is connected to Bob and Carol, and Alice receives a stub from Bob, Alice can pass the stub in an RPC to Carol, thus allowing Carol to call Bob. (As of this writing, any such calls will be proxied through Alice, but in the future we may support "three-party handoff" such that Carol can make a direct connection to Bob.)&lt;/p&gt; 
&lt;p&gt;You may construct a stub explicitly without an RPC connection, using &lt;code&gt;new RpcStub(target)&lt;/code&gt;. This is sometimes useful to be able to perform local calls as if they were remote, or to help manage disposal (see below).&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;RpcPromise&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Calling an RPC method returns an &lt;code&gt;RpcPromise&lt;/code&gt; rather than a regular &lt;code&gt;Promise&lt;/code&gt;. You can use an &lt;code&gt;RpcPromise&lt;/code&gt; in all the ways a regular &lt;code&gt;Promise&lt;/code&gt; can be used, that is, you can &lt;code&gt;await&lt;/code&gt; it, call &lt;code&gt;.then()&lt;/code&gt;, pass it to &lt;code&gt;Promise.resolve()&lt;/code&gt;, etc. (This is all possible because &lt;code&gt;RpcPromise&lt;/code&gt; is a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise#thenables"&gt;"thenable"&lt;/a&gt;.)&lt;/p&gt; 
&lt;p&gt;However, you can do more with &lt;code&gt;RpcPromise&lt;/code&gt;. &lt;code&gt;RpcPromise&lt;/code&gt; supports &lt;em&gt;Promise Pipelining&lt;/em&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;An &lt;code&gt;RpcPromise&lt;/code&gt; also acts as a &lt;em&gt;stub&lt;/em&gt; for the eventual result of the promise. That means, you can access properties and invoke methods on it, without awaiting the promise first.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// In a single round trip, authenticate the user, and fetch their notifications.
let user = api.authenticate(cookie);
let notifications = await user.getNotifications();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;An &lt;code&gt;RpcPromise&lt;/code&gt; (or its properties) can be passed as parameters to other RPC calls.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// In a single round trip, authenticate the user, and fetch their public profile
// given their ID.
let user = api.authenticate(cookie);
let profile = await api.getUserProfile(user.id);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Whenever an &lt;code&gt;RpcPromise&lt;/code&gt; is passed in the parameters to an RPC, or returned as part of the result, the promise will be replaced with its resolution before delivery to the receiving application. So, you can use an &lt;code&gt;RpcPromise&amp;lt;T&amp;gt;&lt;/code&gt; anywhere where a &lt;code&gt;T&lt;/code&gt; is required!&lt;/p&gt; 
&lt;h3&gt;The magic &lt;code&gt;map()&lt;/code&gt; method&lt;/h3&gt; 
&lt;p&gt;Every RPC promise has a special method &lt;code&gt;.map()&lt;/code&gt; which can be used to remotely transform a value, without pulling it back locally. Here's an example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// Get a list of user IDs.
let idsPromise = api.listUserIds();

// Look up the username for each one.
let names = await idsPromise.map(id =&amp;gt; [id, api.getUserName(id)]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example calls one API method to get a list of user IDs, then, for each user ID in the list, makes another RPC call to look up the user's name, producing a list of id/name pairs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;All this happens in a single network round trip!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;promise.map(func)&lt;/code&gt; transfers a representation of &lt;code&gt;func&lt;/code&gt; to the server, where it is executed on the promise's result. Specifically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If the promise resolves to an array, the mapper function executes on each element of the array. The overall &lt;code&gt;.map()&lt;/code&gt; operation returns a promise for an array of the results.&lt;/li&gt; 
 &lt;li&gt;If the promise resolves to &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, the map function is not executed at all. The result is the same value.&lt;/li&gt; 
 &lt;li&gt;If the promise resolves to any other value, the map function executes once on that value, returning the result.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thus, &lt;code&gt;map()&lt;/code&gt; can be used both for handling arrays, and for handling nullable values.&lt;/p&gt; 
&lt;p&gt;There are some restrictions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The callback must have no side effects other than calling RPCs.&lt;/li&gt; 
 &lt;li&gt;The callback must be synchronous. It cannot await anything.&lt;/li&gt; 
 &lt;li&gt;The input to the callback is an &lt;code&gt;RpcPromise&lt;/code&gt;, hence the callback cannot actually operate on it, other than to invoke its RPC methods, or to use it in the params of other RPC methods.&lt;/li&gt; 
 &lt;li&gt;Any stubs which you use in the callback -- and any parameters you pass to them -- will be sent to the peer. Be warned, a malicious peer can use these stubs for anything, not just calling your callback. Typically, it only makes sense to invoke stubs that came from the same peer originally, since this is what saves round-trips.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;How the heck does that work?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Cap'n Web does NOT send arbitrary code over the wire!&lt;/p&gt; 
&lt;p&gt;The trick here is record-replay: On the calling side, Cap'n Web will invoke your callback once, in a special "recording" mode, passing in a special placeholder stub which records what you do with it. During the invocation, any RPCs invoked by the callback (on &lt;em&gt;any&lt;/em&gt; stub) will not actually be executed, but will be recorded as an action the callback performs. Any stubs you use during the recording are "captured" as well. Once the callback returns, the recording and the capture list can then be sent to the peer, where the recording can then be replayed as needed to process individual results.&lt;/p&gt; 
&lt;p&gt;Since all of the not-yet-determined values seen by the callback are represented as &lt;code&gt;RpcPromise&lt;/code&gt;s, the callback's behavior is deterministic. Any actual computation (arithmetic, branching, etc.) can't possibly use these promises as (meaningful) inputs, so would logically produce the same results for every invocation of the callback. Any such computation will actually end up being performed on the sending side, just once, with the results being imbued into the recording.&lt;/p&gt; 
&lt;h3&gt;Cloudflare Workers RPC interoperability&lt;/h3&gt; 
&lt;p&gt;Cap'n Web works on any JavaScript platform. But, on Cloudflare Workers specifically, it's designed to play nicely with the &lt;a href="https://blog.cloudflare.com/javascript-native-rpc/"&gt;the built-in RPC system&lt;/a&gt;. The two have basically the same semantics, the only difference being that Workers RPC is a built-in API provided by the Workers Runtime, whereas Cap'n Web is implemented in pure JavaScript.&lt;/p&gt; 
&lt;p&gt;To facilitate interoperability:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;On Workers, the &lt;code&gt;RpcTarget&lt;/code&gt; class exported by "capnweb" is just an alias of the built-in one, so you can use them interchangeably.&lt;/li&gt; 
 &lt;li&gt;RPC stubs and promises originating from one RPC system can be passed over the other. This will automatically set up proxying.&lt;/li&gt; 
 &lt;li&gt;You can also send Workers Service Bindings and Durable Object stubs over Cap'n Web -- again, this sets up proxying.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;So basically, it "just works".&lt;/p&gt; 
&lt;p&gt;With that said, as of this writing, the feature set is not exactly the same between the two. We aim to fix this over time, by adding missing features to both sides until they match. In particular, as of this writing:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Workers RPC supports some types that Cap'n Web does not yet, like &lt;code&gt;Map&lt;/code&gt;, streams, etc.&lt;/li&gt; 
 &lt;li&gt;Workers RPC supports sending values that contain aliases and cycles. This can actually cause problems, so we actually plan to &lt;em&gt;remove&lt;/em&gt; this feature from Workers RPC (with a compatibility flag, of course).&lt;/li&gt; 
 &lt;li&gt;Workers RPC does not yet support placing an &lt;code&gt;RpcPromise&lt;/code&gt; into the parameters of a request, to be replaced by its resolution.&lt;/li&gt; 
 &lt;li&gt;Workers RPC does not yet support the magic &lt;code&gt;.map()&lt;/code&gt; method.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resource Management and Disposal&lt;/h2&gt; 
&lt;p&gt;Unfortunately, garbage collection does not work well when remote resources are involved, for two reasons:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Many JavaScript runtimes only run the garbage collector when they sense "memory pressure" -- if memory is not running low, then they figure there's no need to try to reclaim any. However, the runtime has no way to know if the other side of an RPC connection is suffering memory pressure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Garbage collectors need to trace the full object graph in order to detect which objects are unreachable, especially when those objects contain cyclic references. However, the garbage collector can only see local objects; it has no ability to trace through the remote graph to discover cycles that may cross RPC connections.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Both of these problems might be solvable with sufficient work, but the problem seems exceedingly difficult. We make no attempt to solve it in this library.&lt;/p&gt; 
&lt;p&gt;Instead, you may choose one of two strategies:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Explicitly dispose stubs when you are done with them. This notifies the remote end that it can release the associated resources.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Use short-lived sessions. When the session ends, all stubs are implicitly disposed. In particular, when using HTTP batch request, there's generally no need to dispose stubs. When using long-lived WebSocket sessions, however, disposal may be important.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Note: We might extend Cap'n Web to use &lt;code&gt;FinalizationRegistry&lt;/code&gt; to automatically dispose abandoned stubs in the future, but even if we do, it should not be relied upon, due to problems discussed above.&lt;/p&gt; 
&lt;h3&gt;How to dispose&lt;/h3&gt; 
&lt;p&gt;Stubs integrate with JavaScript's &lt;a href="https://v8.dev/features/explicit-resource-management"&gt;explicit resource management&lt;/a&gt;, which became widely available in mid-2025 (and has been supported via transpilers and polyfills going back a few years earlier). In short:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Disposable objects (including stubs) have a method &lt;code&gt;[Symbol.dispose]&lt;/code&gt;. You can call this like &lt;code&gt;stub[Symbol.dispose]()&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;You can arrange for a stub to be disposed automatically at the end of a function scope by assigning it to a &lt;code&gt;using&lt;/code&gt; variable, like &lt;code&gt;using stub = api.getStub();&lt;/code&gt;. The disposer will automatically be invoked when the variable goes out-of-scope.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Automatic disposal&lt;/h3&gt; 
&lt;p&gt;This library implements several rules to help make resource management more manageable. These rules may appear a bit complicated, but are intended to implement the behavior you would naturally expect.&lt;/p&gt; 
&lt;p&gt;The basic principle is: &lt;strong&gt;The caller is responsible for disposing all stubs.&lt;/strong&gt; That is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stubs passed in the params of a call remain property of the caller, and must be disposed by the caller, not by the callee.&lt;/li&gt; 
 &lt;li&gt;Stubs returned in the result of a call have their ownership transferred from the callee to the caller, and must be disposed by the caller.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;In practice, though, the callee and caller do not actually share the same stubs. When stubs are passed over RPC, they are &lt;em&gt;duplicated&lt;/em&gt;, and the the target object is only disposed when all duplicates of the stub are disposed. Thus, to achieve the rule that only the caller needs to dispose stubs, the RPC system implicitly disposes the callee's duplicates of all stubs when the call completes. That is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Any stubs the callee receives in the parameters are implicitly disposed when the call completes.&lt;/li&gt; 
 &lt;li&gt;Any stubs returned in the results are implicitly disposed some time after the call completes. (Specifically, the RPC system will dispose them once it knows there will be no more pipelined calls.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some additional wonky details:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Disposing an &lt;code&gt;RpcPromise&lt;/code&gt; will automatically dispose the future result. (It may also cause the promise to be canceled and rejected, though this is not guaranteed.) If you don't intend to await an RPC promise, you should dispose it.&lt;/li&gt; 
 &lt;li&gt;Passing an &lt;code&gt;RpcPromise&lt;/code&gt; in params or the return value of a call has the same ownership / disposal rules as passing an &lt;code&gt;RpcStub&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;When you access a property of an &lt;code&gt;RpcStub&lt;/code&gt; or &lt;code&gt;RpcPromise&lt;/code&gt;, the result is itself an &lt;code&gt;RpcPromise&lt;/code&gt;. However, this &lt;code&gt;RpcPromise&lt;/code&gt; does not have its own disposer; you must dispose the stub or promise it came from. You can pass such properties in params or return values, but doing so will never lead to anything being implicitly disposed.&lt;/li&gt; 
 &lt;li&gt;The caller of an RPC may dispose any stubs used in the parameters immediately after initiating the RPC, without waiting for the RPC to complete. All stubs are duplicated at the moment of the call, so the callee is not responsible for keeping them alive.&lt;/li&gt; 
 &lt;li&gt;If the final result of an RPC returned to the caller is an object, it will always have a disposer. Disposing it will dispose all stubs found in that response. It's a good idea to always dispose return values even if you don't expect they contain any stubs, just in case the server changes the API in the future to add stubs to the result.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;WARNING: The ownership behavior of calls differs from the original behavior in the native RPC implementation built into the Cloudflare Workers Runtime. In the original Workers behavior, the callee loses ownership of stubs passed in a call's parameters. We plan to change the Workers Runtime to match Cap'n Web's behavior, as the original behavior has proven more problematic than helpful.&lt;/p&gt; 
&lt;h3&gt;Duplicating stubs&lt;/h3&gt; 
&lt;p&gt;Sometimes you need to pass a stub somewhere where it will be disposed, but also keep the stub for later use. To prevent the disposer from disabling your copy of the stub, you can duplicate the stub by calling &lt;code&gt;stub.dup()&lt;/code&gt;. The stub's target will only be disposed when all duplicates of the stub have been disposed.&lt;/p&gt; 
&lt;p&gt;Hint: You can call &lt;code&gt;.dup()&lt;/code&gt; on a property of a stub or promise, in order to create a stub backed by that property. This is particularly useful when you know in advance that the property is going to resolve to a stub: calling &lt;code&gt;.dup()&lt;/code&gt; on it gives you a stub you can start using immediately, that otherwise behaves exactly the same as the eventual stub would if you awaited it.&lt;/p&gt; 
&lt;h3&gt;Listening for disposal&lt;/h3&gt; 
&lt;p&gt;An &lt;code&gt;RpcTarget&lt;/code&gt; may declare a &lt;code&gt;Symbol.dispose&lt;/code&gt; method. If it does, the RPC system will automatically invoke it when a stub pointing at it (and all its duplicates) has been disposed.&lt;/p&gt; 
&lt;p&gt;Note that if you pass the same &lt;code&gt;RpcTarget&lt;/code&gt; instance to RPC multiple times -- thus creating multiple stubs -- you will eventually get a separate dispose call for each one. To avoid this, you could use &lt;code&gt;new RpcStub(target)&lt;/code&gt; to create a single stub upfront, and then pass that stub across multiple RPCs. In this case, you will receive only one call to the target's disposer when all stubs are disposed.&lt;/p&gt; 
&lt;h3&gt;Listening for disconnect&lt;/h3&gt; 
&lt;p&gt;You can monitor any stub for "brokennness" with its &lt;code&gt;onRpcBroken()&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;stub.onRpcBroken((error: any) =&amp;gt; {
  console.error(error);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If anything happens to the stub that would cause all further method calls and property accesses to throw exceptions, then the callback will be called. In particular, this happens if:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The stub's underlying connection is lost.&lt;/li&gt; 
 &lt;li&gt;The stub is a promise, and the promise rejects.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security Considerations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The WebSocket API in browsers always permits cross-site connections, and does not permit setting headers. Because of this, you generally cannot use cookies nor other headers for authentication. Instead, we highly recommend the pattern shown in the second example above, in which authentication happens in-band via an RPC method that returns the authenticated API.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Cap'n Web's pipelining can make it easy for a malicious client to enqueue a large amount of work to occur on a server. To mitigate this, we recommend implementing rate limits on expensive operations. If using Cloudflare Workers, you may also consider configuring &lt;a href="https://developers.cloudflare.com/workers/wrangler/configuration/#limits"&gt;per-request CPU limits&lt;/a&gt; to be lower than the default 30s. Note that in stateless Workers (i.e. not Durable Objects), the system considers an entire WebSocket session to be one "request" for CPU limits purposes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Cap'n Web currently does not provide any runtime type checking. When using TypeScript, keep in mind that types are checked only at compile time. A malicious client can send types you did not expect, and this could cause you application to behave in unexpected ways. For example, MongoDB uses special property names to express queries; placing attacker-provided values directly into queries can result in query injection vulnerabilities (similar to SQL injection). Of course, JSON has always had the same problem, and there exists tooling to solve it. You might consider using a runtime type-checking framework like Zod to check your inputs. In the future, we hope to explore auto-generating type-checking code based on TypeScript types.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Setting up a session&lt;/h2&gt; 
&lt;h3&gt;HTTP batch client&lt;/h3&gt; 
&lt;p&gt;In HTTP batch mode, a batch of RPC calls can be made in a single HTTP request, with the server returning a batch of results.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Cap'n Web has a magic trick:&lt;/strong&gt; The results of one call in the batch can be used in the parameters to later calls in the same batch, even though the entire batch is sent at once. If you simply take the Promise returned by one call and use it in the parameters to another call, the Promise will be replaced with its resolution before delivering it to the callee. &lt;strong&gt;This is called Promise Pipelining.&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { RpcTarget, RpcStub, newHttpBatchRpcSession } from "capnweb";

// Declare our RPC interface.
interface MyApi extends RpcTarget {
  // Returns information about the logged-in user.
  getUserInfo(): UserInfo;

  // Returns a friendly greeting for a user with the given name.
  greet(name: string): string;
};

// Start a batch request using this interface.
using stub: RpcStub&amp;lt;MyApi&amp;gt; = newHttpBatchRpcSession&amp;lt;MyApi&amp;gt;("https://example.com/api");

// The batch will be sent on the next I/O tick (i.e. using setTimeout(sendBatch, 0)). You have
// until then to add calls to the batch.
//
// We can make any number of calls as part of the batch, as long as we store the promises without
// awaiting them yet.
let promise1 = stub.greet("Alice");
let promise2 = stub.greet("Bob");

// Note that a promise returned by one call can be used in the input to another call. The first
// call's result will be substituted into the second call's parameters on the server side. If the
// first call returns an object, you can even specify a property of the object to pass to the
// second call, as shown here.
let userInfoPromise = stub.getUserInfo();
let promise3 = stub.greet(userInfoPromise.name);

// Use Promise.all() to wait on all the promises at once. NOTE: You don't necessarily have to
// use Promise.all(), but you must make sure you have explicitly awaited (or called `.then()` on)
// all promises before the batch is sent. The system will only ask the server to send back
// results for the promises you explicitly await. In this example, we have not awaited
// `userInfoPromise` -- we only used it as a parameter to another call -- so the result will
// not actually be returned.
let [greeting1, greeting2, greeting3] = await Promise.all([promise1, promise2, promise3]);

// Now we can do stuff with the results.
console.log(greeting1);
console.log(greeting2);
console.log(greeting3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WebSocket client&lt;/h3&gt; 
&lt;p&gt;In WebSocket mode, the client forms a long-lived connection to the server, allowing us to make many calls over a long period of time. In this mode, the server can even make asynchronous calls back to the client.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { RpcTarget, RpcStub, newWebSocketRpcSession } from "capnweb";

// Declare our RPC interface.
interface MyApi extends RpcTarget {
  // Returns information about the logged-in user.
  getUserInfo(): UserInfo;

  // Returns a friendly greeting for a user with the given name.
  greet(name: string): string;
};

// Start a WebSocket session.
//
// (Note that disposing the root stub will close the connection. Here we declare it with `using` so
// that the connection will be closed when the stub goes out of scope, but you can also call
// `stub[Symbol.dispose]()` directly.)
using stub: RpcStub&amp;lt;MyApi&amp;gt; = newWebSocketRpcSession&amp;lt;MyApi&amp;gt;("wss://example.com/api");

// With a WebSocket, we can freely make calls over time.
console.log(await stub.greet("Alice"));
console.log(await stub.greet("Bob"));

// But we can still use Promise Pipelining to reduce round trips. Note that we should use `using`
// with promises we don't intend to await so that the system knows when we don't need them anymore.
{
  using userInfoPromise = stub.getUserInfo();
  console.log(await stub.greet(userInfoPromise.name));
}

// Note that since we never awaited `userInfoPromise`, the server won't even bother sending the
// response back over the wire.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HTTP server on Cloudflare Workers&lt;/h3&gt; 
&lt;p&gt;The helper function &lt;code&gt;newWorkersRpcResponse()&lt;/code&gt; makes it easy to implement an HTTP server that accepts both the HTTP batch and WebSocket APIs at once:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { RpcTarget, newWorkersRpcResponse } from "capnweb";

// Define our server implementation.
class MyApiImpl extends RpcTarget implements MyApi {
  constructor(private userInfo: UserInfo) {}

  getUserInfo(): UserInfo {
    return this.userInfo;
  }

  greet(name: string): string {
    return `Hello, ${name}!`;
  }
};

// Define our Worker HTTP handler.
export default {
  fetch(request: Request, env, ctx) {
    let userInfo: UserInfo = authenticateFromCookie(request);
    let url = new URL(request.url);

    // Serve API at `/api`.
    if (url.pathname === "/api") {
      return newWorkersRpcResponse(request, new MyApiImpl(userInfo));
    }

    return new Response("Not found", {status: 404});
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HTTP server on Node.js&lt;/h3&gt; 
&lt;p&gt;A server on Node.js is a bit more involved, due to the awkward handling of WebSockets in Node's HTTP library.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import http from "node:http";
import { WebSocketServer } from 'ws';  // npm package
import { RpcTarget, newWebSocketRpcSession, nodeHttpBatchRpcResponse } from "capnweb";

class MyApiImpl extends RpcTarget implements MyApi {
  // ... define API, same as above ...
}

// Run standard HTTP server on a port.
httpServer = http.createServer(async (request, response) =&amp;gt; {
  if (request.headers.upgrade?.toLowerCase() === 'websocket') {
    // Ignore, should be handled by WebSocketServer instead.
    return;
  }

  // Accept Cap'n Web requests at `/api`.
  if (request.url === "/api") {
    try {
      await nodeHttpBatchRpcResponse(request, response, new MyApiImpl(), {
        // If you are accepting WebSockets, then you might as well accept cross-origin HTTP, since
        // WebSockets always permit cross-origin request anyway. But, see security considerations
        // for further discussion.
        headers: { "Access-Control-Allow-Origin": "*" }
      });
    } catch (err) {
      response.writeHead(500, { 'content-type': 'text/plain' });
      response.end(String(err?.stack || err));
    }
    return;
  }

  response.writeHead(404, { 'content-type': 'text/plain' });
  response.end("Not Found");
});

// Arrange to handle WebSockets as well, using the `ws` package. You can skip this if you only
// want to handle HTTP batch requests.
wsServer = new WebSocketServer({ server: httpServer })
wsServer.on('connection', (ws) =&amp;gt; {
  // The `as any` here is because the `ws` module seems to have its own `WebSocket` type
  // declaration that's incompatible with the standard one. In practice, though, they are
  // compatible enough for Cap'n Web!
  newWebSocketRpcSession(ws as any, new MyApiImpl());
})

// Accept requests on port 8080.
httpServer.listen(8080);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HTTP server on Deno&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import {
  newHttpBatchRpcResponse,
  newWebSocketRpcSession,
  RpcTarget,
} from "npm:capnweb";

// This is the server implementation.
class MyApiImpl extends RpcTarget implements MyApi {
  // ... define API, same as above ...
}

Deno.serve(async (req) =&amp;gt; {
  const url = new URL(req.url);
  if (url.pathname === "/api") {
    if (req.headers.get("upgrade") === "websocket") {
      const { socket, response } = Deno.upgradeWebSocket(req);
      socket.addEventListener("open", () =&amp;gt; {
        newWebSocketRpcSession(socket, new MyApiImpl());
      });
      return response;
    } else {
      const response = await newHttpBatchRpcResponse(req, new MyApiImpl());
      // If you are accepting WebSockets, then you might as well accept cross-origin HTTP, since
      // WebSockets always permit cross-origin request anyway. But, see security considerations
      // for further discussion.
      response.headers.set("Access-Control-Allow-Origin", "*");
      return response;
    }
  }

  return new Response("Not Found", { status: 404 });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HTTP server on other runtimes&lt;/h3&gt; 
&lt;p&gt;Every runtime does HTTP handling and WebSockets a little differently, although most modern runtimes use the standard &lt;code&gt;Request&lt;/code&gt; and &lt;code&gt;Response&lt;/code&gt; types from the Fetch API, as well as the standard &lt;code&gt;WebSocket&lt;/code&gt; API. You should be able to use these two functions (exported by &lt;code&gt;capnweb&lt;/code&gt;) to implement both HTTP batch and WebSocket handling on all platforms:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// Run a single HTTP batch.
function newHttpBatchRpcResponse(
    request: Request, yourApi: RpcTarget, options?: RpcSessionOptions)
    : Promise&amp;lt;Response&amp;gt;;

// Run a WebSocket session.
//
// This is actually the same function as is used on the client side! But on the
// server, you should pass in a `WebSocket` object representing the already-open
// connection, instead of a URL string, and you pass your API implementation as
// the second parameter.
//
// You can dispose the returned `Disposable` to close the connection, or just
// let it run until the client closes it.
function newWebSocketRpcSession(
    webSocket: WebSocket, yourApi: RpcTarget, options?: RpcSessionOptions)
    : Disposable;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MessagePort&lt;/h3&gt; 
&lt;p&gt;Cap'n Web can also talk over MessagePorts. This can be used in a browser to talk to Web Workers, iframes, etc.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { RpcTarget, RpcStub, newMessagePortRpcSession } from "capnweb";

// Declare our RPC interface.
class Greeter extends RpcTarget {
  greet(name: string): string {
    return `Hello, ${name}!`;
  }
};

// Create a MessageChannel (pair of MessagePorts).
let channel = new MessageChannel()

// Initialize the server on port1.
newMessagePortRpcSession(channel.port1, new Greeter());

// Initialize the client on port2.
using stub: RpcStub&amp;lt;Greeter&amp;gt; = newMessagePortRpcSession&amp;lt;Greeter&amp;gt;(channel.port2);

// Now you can make calls.
console.log(await stub.greet("Alice"));
console.log(await stub.greet("Bob"));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, in a real-world scenario, you'd probably want to send one of the two ports to another context. A &lt;code&gt;MessagePort&lt;/code&gt; can itself be transferred to another context using &lt;code&gt;postMessage()&lt;/code&gt;, e.g. &lt;code&gt;window.postMessage()&lt;/code&gt;, &lt;code&gt;worker.postMessage()&lt;/code&gt;, or even &lt;code&gt;port.postMessage()&lt;/code&gt; on some other existing &lt;code&gt;MessagePort&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note that you should not use a &lt;code&gt;Window&lt;/code&gt; object itself as a port for RPC -- you should always create a new &lt;code&gt;MessageChannel&lt;/code&gt; and send one of the ports over. This is because anyone can &lt;code&gt;postMessage()&lt;/code&gt; to a window, and the RPC system does not authenticate that messages came from the expected sender. You need to verify that you received the port itself from the expected sender first, then let the RPC system take over.&lt;/p&gt; 
&lt;h3&gt;Custom transports&lt;/h3&gt; 
&lt;p&gt;You can implement a custom RPC transport across any bidirectional stream. To do so, implement the interface &lt;code&gt;RpcTransport&lt;/code&gt;, which is defined as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// Interface for an RPC transport, which is a simple bidirectional message stream.
export interface RpcTransport {
  // Sends a message to the other end.
  send(message: string): Promise&amp;lt;void&amp;gt;;

  // Receives a message sent by the other end.
  //
  // If and when the transport becomes disconnected, this will reject. The thrown error will be
  // propagated to all outstanding calls and future calls on any stubs associated with the session.
  // If there are no outstanding calls (and none are made in the future), then the error does not
  // propagate anywhere -- this is considered a "clean" shutdown.
  receive(): Promise&amp;lt;string&amp;gt;;

  // Indicates that the RPC system has suffered an error that prevents the session from continuing.
  // The transport should ideally try to send any queued messages if it can, and then close the
  // connection. (It's not strictly necessary to deliver queued messages, but the last message sent
  // before abort() is called is often an "abort" message, which communicates the error to the
  // peer, so if that is dropped, the peer may have less information about what happened.)
  abort?(reason: any): void;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can then set up a connection over it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// Create the transport.
let transport: RpcTransport = new MyTransport();

// Create the main interface we will expose to the other end.
let localMain: RpcTarget = new MyMainInterface():

// Start the session.
let session = new RpcSession&amp;lt;RemoteMainInterface&amp;gt;(transport, localMain);

// Get a stub for the other end's main interface.
let stub: RemoteMainInterface = session.getRemoteMain();

// Now we can call methods on the stub.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that sessions are entirely symmetric: neither side is defined as the "client" nor the "server". Each side can optionally expose a "main interface" to the other. In typical scenarios with a logical client and server, the server exposes a main interface but the client does not.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ZuodaoTech/everyone-can-use-english</title>
      <link>https://github.com/ZuodaoTech/everyone-can-use-english</link>
      <description>&lt;p&gt;‰∫∫‰∫∫ÈÉΩËÉΩÁî®Ëã±ËØ≠&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/assets/icon.png" alt="Clash" width="128" /&gt; 
&lt;/div&gt; 
&lt;h3 align="center"&gt; AI ÊòØÂΩì‰ªä‰∏ñÁïå‰∏äÊúÄÂ•ΩÁöÑÂ§ñËØ≠ËÄÅÂ∏àÔºåEnjoy ÂÅö AI ÊúÄÂ•ΩÁöÑÂä©Êïô„ÄÇ &lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml/badge.svg?sanitize=true" alt="Deploy 1000h website" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml/badge.svg?sanitize=true" alt="Test Enjoy App" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml/badge.svg?sanitize=true" alt="Release Enjoy App" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fconfig%2Fapp_version&amp;amp;query=%24.version&amp;amp;label=Latest&amp;amp;link=https%3A%2F%2F1000h.org%2Fenjoy-app%2Finstall.html" alt="Latest Version" /&gt; &lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fbadges%2Frecordings" alt="Recording Duration" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;ÁΩëÈ°µÁâà&lt;/h2&gt; 
&lt;p&gt;Enjoy ÁΩëÈ°µÁâàÂ∑≤Áªè‰∏äÁ∫øÔºåÂèØËÆøÈóÆ &lt;a href="https://enjoy.bot"&gt;https://enjoy.bot&lt;/a&gt; Áõ¥Êé•‰ΩøÁî®„ÄÇ&lt;/p&gt; 
&lt;div align="center" style="display:flex;overflow:auto;gap:10px;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audios.jpg" alt="Audios" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-add-audio.jpg" alt="Add Audio" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audio-shadow.jpg" alt="Shadow" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audio-assessment.jpg" alt="Assessment" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-new-chat.jpg" alt="New Chat" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-chat.jpg" alt="Chat" width="300" /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Ê°åÈù¢ÁâàÂÆâË£ÖÂèä‰ΩøÁî®&lt;/h2&gt; 
&lt;p&gt;‰∏ãËΩΩÂèä‰ΩøÁî®Áõ∏ÂÖ≥ËØ¥ÊòéÔºåËØ∑ÂèÇÈòÖ &lt;a href="https://1000h.org/enjoy-app/"&gt;ÊñáÊ°£&lt;/a&gt;„ÄÇ&lt;/p&gt; 
&lt;h2&gt;È¢ÑËßà&lt;/h2&gt; 
&lt;div align="center" style="display:flex;overflow:auto;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/home.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/shadow.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/assessment.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/document.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/chat.png" alt="Home" width="800" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Ê°åÈù¢ÁâàÂºÄÂèë&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn install
yarn enjoy:start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Áõ∏ÂÖ≥ÈòÖËØª&lt;/h2&gt; 
&lt;h3&gt;‰∏ÄÂçÉÂ∞èÊó∂Ôºà2024Ôºâ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/intro.html"&gt;ÁÆÄË¶ÅËØ¥Êòé&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/training-tasks/kick-off.html"&gt;ËÆ≠ÁªÉ‰ªªÂä°&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/sounds-of-american-english/0-intro.html"&gt;ËØ≠Èü≥Â°ëÈÄ†&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/in-the-brain/01-inifinite.html"&gt;Â§ßËÑëÂÜÖÈÉ®&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/self-training/00-intro.html"&gt;Ëá™ÊàëËÆ≠ÁªÉ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;‰∫∫‰∫∫ÈÉΩËÉΩÁî®Ëã±ËØ≠Ôºà2010Ôºâ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/README.md"&gt;ÁÆÄ‰ªã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter1.md"&gt;Á¨¨‰∏ÄÁ´†ÔºöËµ∑ÁÇπ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter2.md"&gt;Á¨¨‰∫åÁ´†ÔºöÂè£ËØ≠&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter3.md"&gt;Á¨¨‰∏âÁ´†ÔºöËØ≠Èü≥&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter4.md"&gt;Á¨¨ÂõõÁ´†ÔºöÊúóËØª&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter5.md"&gt;Á¨¨‰∫îÁ´†ÔºöËØçÂÖ∏&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter6.md"&gt;Á¨¨ÂÖ≠Á´†ÔºöËØ≠Ê≥ï&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter7.md"&gt;Á¨¨‰∏ÉÁ´†ÔºöÁ≤æËØª&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter8.md"&gt;Á¨¨ÂÖ´Á´†ÔºöÂèÆÂò±&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/end.md"&gt;ÂêéËÆ∞&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/h2&gt; 
&lt;p&gt;ËØ∑Êü•ËØ¢ &lt;a href="https://1000h.org/enjoy-app/faq.html"&gt;ÊñáÊ°£ FAQ&lt;/a&gt;„ÄÇ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coinbase/x402</title>
      <link>https://github.com/coinbase/x402</link>
      <description>&lt;p&gt;A payments protocol for the internet. Built on HTTP.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;x402 payments protocol&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"1 line of code to accept digital dollars. No fee, 2 second settlement, $0.001 minimum payment."&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;app.use(
  // How much you want to charge, and where you want the funds to land
  paymentMiddleware("0xYourAddress", { "/your-endpoint": "$0.01" })
);
// That's it! See examples/typescript/servers/express.ts for a complete example. Instruction below for running on base-sepolia.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;Payments on the internet are fundamentally flawed. Credit Cards are high friction, hard to accept, have minimum payments that are far too high, and don't fit into the programmatic nature of the internet. It's time for an open, internet-native form of payments. A payment rail that doesn't have high minimums + % based fee. Payments that are amazing for humans and AI agents.&lt;/p&gt; 
&lt;h2&gt;Principles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Open standard:&lt;/strong&gt; the x402 protocol will never force reliance on a single party&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP Native:&lt;/strong&gt; x402 is meant to seamlessly complement the existing HTTP request made by traditional web services, it should not mandate additional requests outside the scope of a typical client / server flow.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chain and token agnostic:&lt;/strong&gt; we welcome contributions that add support for new chains, signing standards, or schemes, so long as they meet our acceptance criteria laid out in &lt;a href="https://github.com/coinbase/x402/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trust minimizing:&lt;/strong&gt; all payment schemes must not allow for the facilitator or resource server to move funds, other than in accordance with client intentions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy to use:&lt;/strong&gt; x402 needs to be 10x better than existing ways to pay on the internet. This means abstracting as many details of crypto as possible away from the client and resource server, and into the facilitator. This means the client/server should not need to think about gas, rpc, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;p&gt;The x402 ecosystem is growing! Check out our &lt;a href="https://x402.org/ecosystem"&gt;ecosystem page&lt;/a&gt; to see projects building with x402, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Client-side integrations&lt;/li&gt; 
 &lt;li&gt;Services and endpoints&lt;/li&gt; 
 &lt;li&gt;Ecosystem infrastructure and tooling&lt;/li&gt; 
 &lt;li&gt;Learning and community resources&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Want to add your project to the ecosystem? See our &lt;a href="https://github.com/coinbase/x402/tree/main/typescript/site#adding-your-project-to-the-ecosystem"&gt;demo site README&lt;/a&gt; for detailed instructions on how to submit your project.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Roadmap:&lt;/strong&gt; see &lt;a href="https://github.com/coinbase/x402/raw/main/ROADMAP.md"&gt;ROADMAP.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Terms:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;resource&lt;/code&gt;: Something on the internet. This could be a webpage, file server, RPC service, API, any resource on the internet that accepts HTTP / HTTPS requests.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;client&lt;/code&gt;: An entity wanting to pay for a resource.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;facilitator server&lt;/code&gt;: A server that facilitates verification and execution of on-chain payments.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resource server&lt;/code&gt;: An HTTP server that provides an API or other resource for a client.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technical Goals:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Permissionless and secure for clients and servers&lt;/li&gt; 
 &lt;li&gt;Gasless for client and resource servers&lt;/li&gt; 
 &lt;li&gt;Minimal integration for the resource server and client (1 line for the server, 1 function for the client)&lt;/li&gt; 
 &lt;li&gt;Ability to trade off speed of response for guarantee of payment&lt;/li&gt; 
 &lt;li&gt;Extensible to different payment flows and chains&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;V1 Protocol&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;x402&lt;/code&gt; protocol is a chain agnostic standard for payments on top of HTTP, leverage the existing &lt;code&gt;402 Payment Required&lt;/code&gt; HTTP status code to indicate that a payment is required for access to the resource.&lt;/p&gt; 
&lt;p&gt;It specifies:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;A schema for how servers can respond to clients to facilitate payment for a resource (&lt;code&gt;PaymentRequirements&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;A standard header &lt;code&gt;X-PAYMENT&lt;/code&gt; that is set by clients paying for resources&lt;/li&gt; 
 &lt;li&gt;A standard schema and encoding method for data in the &lt;code&gt;X-PAYMENT&lt;/code&gt; header&lt;/li&gt; 
 &lt;li&gt;A recommended flow for how payments should be verified and settled by a resource server&lt;/li&gt; 
 &lt;li&gt;A REST specification for how a resource server can perform verification and settlement against a remote 3rd party server (&lt;code&gt;facilitator&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;A specification for a &lt;code&gt;X-PAYMENT-RESPONSE&lt;/code&gt; header that can be used by resource servers to communicate blockchain transactions details to the client in their HTTP response&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;V1 Protocol Sequencing&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/coinbase/x402/main/static/x402-protocol-flow.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;The following outlines the flow of a payment using the &lt;code&gt;x402&lt;/code&gt; protocol. Note that steps (1) and (2) are optional if the client already knows the payment details accepted for a resource.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; makes an HTTP request to a &lt;code&gt;resource server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; responds with a &lt;code&gt;402 Payment Required&lt;/code&gt; status and a &lt;code&gt;Payment Required Response&lt;/code&gt; JSON object in the response body.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; selects one of the &lt;code&gt;paymentRequirements&lt;/code&gt; returned by the server response and creates a &lt;code&gt;Payment Payload&lt;/code&gt; based on the &lt;code&gt;scheme&lt;/code&gt; of the &lt;code&gt;paymentRequirements&lt;/code&gt; they have selected.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; sends the HTTP request with the &lt;code&gt;X-PAYMENT&lt;/code&gt; header containing the &lt;code&gt;Payment Payload&lt;/code&gt; to the resource server.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; verifies the &lt;code&gt;Payment Payload&lt;/code&gt; is valid either via local verification or by POSTing the &lt;code&gt;Payment Payload&lt;/code&gt; and &lt;code&gt;Payment Requirements&lt;/code&gt; to the &lt;code&gt;/verify&lt;/code&gt; endpoint of a &lt;code&gt;facilitator server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; performs verification of the object based on the &lt;code&gt;scheme&lt;/code&gt; and &lt;code&gt;network&lt;/code&gt; of the &lt;code&gt;Payment Payload&lt;/code&gt; and returns a &lt;code&gt;Verification Response&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If the &lt;code&gt;Verification Response&lt;/code&gt; is valid, the resource server performs the work to fulfill the request. If the &lt;code&gt;Verification Response&lt;/code&gt; is invalid, the resource server returns a &lt;code&gt;402 Payment Required&lt;/code&gt; status and a &lt;code&gt;Payment Required Response&lt;/code&gt; JSON object in the response body.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; either settles the payment by interacting with a blockchain directly, or by POSTing the &lt;code&gt;Payment Payload&lt;/code&gt; and &lt;code&gt;Payment PaymentRequirements&lt;/code&gt; to the &lt;code&gt;/settle&lt;/code&gt; endpoint of a &lt;code&gt;facilitator server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; submits the payment to the blockchain based on the &lt;code&gt;scheme&lt;/code&gt; and &lt;code&gt;network&lt;/code&gt; of the &lt;code&gt;Payment Payload&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; waits for the payment to be confirmed on the blockchain.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; returns a &lt;code&gt;Payment Execution Response&lt;/code&gt; to the resource server.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; returns a &lt;code&gt;200 OK&lt;/code&gt; response to the &lt;code&gt;Client&lt;/code&gt; with the resource they requested as the body of the HTTP response, and a &lt;code&gt;X-PAYMENT-RESPONSE&lt;/code&gt; header containing the &lt;code&gt;Settlement Response&lt;/code&gt; as Base64 encoded JSON if the payment was executed successfully.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Type Specifications&lt;/h3&gt; 
&lt;h4&gt;Data types&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Payment Required Response&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Version of the x402 payment protocol
  x402Version: int,

  // List of payment requirements that the resource server accepts. A resource server may accept on multiple chains, or in multiple currencies.
  accepts: [paymentRequirements]

  // Message from the resource server to the client to communicate errors in processing payment
  error: string
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;paymentRequirements&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Scheme of the payment protocol to use
  scheme: string;

  // Network of the blockchain to send payment on
  network: string;

  // Maximum amount required to pay for the resource in atomic units of the asset
  maxAmountRequired: uint256 as string;

  // URL of resource to pay for
  resource: string;

  // Description of the resource
  description: string;

  // MIME type of the resource response
  mimeType: string;

  // Output schema of the resource response
  outputSchema?: object | null;

  // Address to pay value to
  payTo: string;

  // Maximum time in seconds for the resource server to respond
  maxTimeoutSeconds: number;

  // Address of the EIP-3009 compliant ERC20 contract
  asset: string;

  // Extra information about the payment details specific to the scheme
  // For `exact` scheme on a EVM network, expects extra to contain the records `name` and `version` pertaining to asset
  extra: object | null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Payment Payload&lt;/code&gt;&lt;/strong&gt; (included as the &lt;code&gt;X-PAYMENT&lt;/code&gt; header in base64 encoded json)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Version of the x402 payment protocol
  x402Version: number;

  // scheme is the scheme value of the accepted `paymentRequirements` the client is using to pay
  scheme: string;

  // network is the network id of the accepted `paymentRequirements` the client is using to pay
  network: string;

  // payload is scheme dependent
  payload: &amp;lt;scheme dependent&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Facilitator Types &amp;amp; Interface&lt;/h4&gt; 
&lt;p&gt;A &lt;code&gt;facilitator server&lt;/code&gt; is a 3rd party service that can be used by a &lt;code&gt;resource server&lt;/code&gt; to verify and settle payments, without the &lt;code&gt;resource server&lt;/code&gt; needing to have access to a blockchain node or wallet.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;POST /verify&lt;/strong&gt;. Verify a payment with a supported scheme and network:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Request body JSON: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  x402Version: number;
  paymentHeader: string;
  paymentRequirements: paymentRequirements;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Response: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  isValid: boolean;
  invalidReason: string | null;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;POST /settle&lt;/strong&gt;. Settle a payment with a supported scheme and network:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Request body JSON:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json5"&gt;{
  x402Version: number;
  paymentHeader: string;
  paymentRequirements: paymentRequirements;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Response:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Whether the payment was successful
  success: boolean;

  // Error message from the facilitator server
  error: string | null;

  // Transaction hash of the settled payment
  txHash: string | null;

  // Network id of the blockchain the payment was settled on
  networkId: string | null;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;GET /supported&lt;/strong&gt;. Get supported payment schemes and networks:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Response: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  kinds: [
    {
      "scheme": string,
      "network": string,
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Schemes&lt;/h3&gt; 
&lt;p&gt;A scheme is a logical way of moving money.&lt;/p&gt; 
&lt;p&gt;Blockchains allow for a large number of flexible ways to move money. To help facilitate an expanding number of payment use cases, the &lt;code&gt;x402&lt;/code&gt; protocol is extensible to different ways of settling payments via its &lt;code&gt;scheme&lt;/code&gt; field.&lt;/p&gt; 
&lt;p&gt;Each payment scheme may have different operational functionality depending on what actions are necessary to fulfill the payment. For example &lt;code&gt;exact&lt;/code&gt;, the first scheme shipping as part of the protocol, would have different behavior than &lt;code&gt;upto&lt;/code&gt;. &lt;code&gt;exact&lt;/code&gt; transfers a specific amount (ex: pay $1 to read an article), while a theoretical &lt;code&gt;upto&lt;/code&gt; would transfer up to an amount, based on the resources consumed during a request (ex: generating tokens from an LLM).&lt;/p&gt; 
&lt;p&gt;See &lt;code&gt;specs/schemes&lt;/code&gt; for more details on schemes, and see &lt;code&gt;specs/schemes/exact/scheme_exact_evm.md&lt;/code&gt; to see the first proposed scheme for exact payment on EVM chains.&lt;/p&gt; 
&lt;h3&gt;Schemes vs Networks&lt;/h3&gt; 
&lt;p&gt;Because a scheme is a logical way of moving money, the way a scheme is implemented can be different for different blockchains. (ex: the way you need to implement &lt;code&gt;exact&lt;/code&gt; on Ethereum is very different from the way you need to implement &lt;code&gt;exact&lt;/code&gt; on Solana).&lt;/p&gt; 
&lt;p&gt;Clients and facilitators must explicitly support different &lt;code&gt;(scheme, network)&lt;/code&gt; pairs in order to be able to create proper payloads and verify / settle payments.&lt;/p&gt; 
&lt;h2&gt;Running example&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Requirements:&lt;/strong&gt; Node.js v24 or higher&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;From &lt;code&gt;examples/typescript&lt;/code&gt; run &lt;code&gt;pnpm install&lt;/code&gt; and &lt;code&gt;pnpm build&lt;/code&gt; to ensure all dependent packages and examples are setup.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select a server, i.e. express, and &lt;code&gt;cd&lt;/code&gt; into that example. Add your server's ethereum address to get paid to into the &lt;code&gt;.env&lt;/code&gt; file, and then run &lt;code&gt;pnpm dev&lt;/code&gt; in that directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select a client, i.e. axios, and &lt;code&gt;cd&lt;/code&gt; into that example. Add your private key for the account making payments into the &lt;code&gt;.env&lt;/code&gt; file, and then run &lt;code&gt;pnpm dev&lt;/code&gt; in that directory.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You should see activities in the client terminal, which will display a weather report.&lt;/p&gt; 
&lt;h2&gt;Running tests&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate to the typescript directory: &lt;code&gt;cd typescript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies: &lt;code&gt;pnpm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run the unit tests: &lt;code&gt;pnpm test&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This will run the unit tests for the x402 packages.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>n8n-io/n8n</title>
      <link>https://github.com/n8n-io/n8n</link>
      <description>&lt;p&gt;Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/10284570/173569848-c624317f-42b1-45a6-ab09-f0ea3c247648.png" alt="Banner image" /&gt;&lt;/p&gt; 
&lt;h1&gt;n8n - Secure Workflow Automation for Technical Teams&lt;/h1&gt; 
&lt;p&gt;n8n is a workflow automation platform that gives technical teams the flexibility of code with the speed of no-code. With 400+ integrations, native AI capabilities, and a fair-code license, n8n lets you build powerful automations while maintaining full control over your data and deployments.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/n8n-io/n8n/master/assets/n8n-screenshot-readme.png" alt="n8n.io - Screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Key Capabilities&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code When You Need It&lt;/strong&gt;: Write JavaScript/Python, add npm packages, or use the visual interface&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI-Native Platform&lt;/strong&gt;: Build AI agent workflows based on LangChain with your own data and models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full Control&lt;/strong&gt;: Self-host with our fair-code license or use our &lt;a href="https://app.n8n.cloud/login"&gt;cloud offering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise-Ready&lt;/strong&gt;: Advanced permissions, SSO, and air-gapped deployments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Active Community&lt;/strong&gt;: 400+ integrations and 900+ ready-to-use &lt;a href="https://n8n.io/workflows"&gt;templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Try n8n instantly with &lt;a href="https://docs.n8n.io/hosting/installation/npm/"&gt;npx&lt;/a&gt; (requires &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx n8n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or deploy with &lt;a href="https://docs.n8n.io/hosting/installation/docker/"&gt;Docker&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker volume create n8n_data
docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Access the editor at &lt;a href="http://localhost:5678"&gt;http://localhost:5678&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìö &lt;a href="https://docs.n8n.io"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üîß &lt;a href="https://n8n.io/integrations"&gt;400+ Integrations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üí° &lt;a href="https://n8n.io/workflows"&gt;Example Workflows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ü§ñ &lt;a href="https://docs.n8n.io/langchain/"&gt;AI &amp;amp; LangChain Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üë• &lt;a href="https://community.n8n.io"&gt;Community Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üìñ &lt;a href="https://community.n8n.io/c/tutorials/28"&gt;Community Tutorials&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Need help? Our community forum is the place to get support and connect with other users: &lt;a href="https://community.n8n.io"&gt;community.n8n.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;n8n is &lt;a href="https://faircode.io"&gt;fair-code&lt;/a&gt; distributed under the &lt;a href="https://github.com/n8n-io/n8n/raw/master/LICENSE.md"&gt;Sustainable Use License&lt;/a&gt; and &lt;a href="https://github.com/n8n-io/n8n/raw/master/LICENSE_EE.md"&gt;n8n Enterprise License&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Source Available&lt;/strong&gt;: Always visible source code&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-Hostable&lt;/strong&gt;: Deploy anywhere&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: Add your own nodes and functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="mailto:license@n8n.io"&gt;Enterprise licenses&lt;/a&gt; available for additional features and support.&lt;/p&gt; 
&lt;p&gt;Additional information about the license model can be found in the &lt;a href="https://docs.n8n.io/reference/license/"&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Found a bug üêõ or have a feature idea ‚ú®? Check our &lt;a href="https://github.com/n8n-io/n8n/raw/master/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Join the Team&lt;/h2&gt; 
&lt;p&gt;Want to shape the future of automation? Check out our &lt;a href="https://n8n.io/careers"&gt;job posts&lt;/a&gt; and join our team!&lt;/p&gt; 
&lt;h2&gt;What does n8n mean?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Short answer:&lt;/strong&gt; It means "nodemation" and is pronounced as n-eight-n.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Long answer:&lt;/strong&gt; "I get that question quite often (more often than I expected) so I decided it is probably best to answer it here. While looking for a good name for the project with a free domain I realized very quickly that all the good ones I could think of were already taken. So, in the end, I chose nodemation. 'node-' in the sense that it uses a Node-View and that it uses Node.js and '-mation' for 'automation' which is what the project is supposed to help with. However, I did not like how long the name was and I could not imagine writing something that long every time in the CLI. That is when I then ended up on 'n8n'." - &lt;strong&gt;Jan Oberhauser, Founder and CEO, n8n.io&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>humanlayer/humanlayer</title>
      <link>https://github.com/humanlayer/humanlayer</link>
      <description>&lt;p&gt;The best way to get AI coding agents to solve hard problems in complex codebases.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/humanlayer/humanlayer/main/docs/images/wordmark-light.svg?sanitize=true" alt="Wordmark Logo of HumanLayer" /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h2&gt;The best way to get Coding Agents to solve hard problems in complex codebases&lt;/h2&gt; 
 &lt;p&gt;&lt;strong&gt;CodeLayer is an open source IDE that lets you orchestrate AI coding agents.&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;It comes with battle-tested workflows that enable AI to solve hard problems in large, complex codebases.&lt;/p&gt; 
 &lt;p&gt;Built on Claude Code. Open source. Scale from your laptop to your entire team.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/humanlayer/humanlayer"&gt;&lt;img src="https://img.shields.io/github/stars/humanlayer/humanlayer" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/Apache-2"&gt;&lt;img src="https://img.shields.io/badge/License-Apache-green.svg?sanitize=true" alt="License: Apache-2" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h3&gt; &lt;p&gt;&lt;a href="https://humanlayer.dev/code"&gt;Join Waitlist&lt;/a&gt; | &lt;a href="https://humanlayer.dev/discord"&gt;Discord&lt;/a&gt;&lt;/p&gt; &lt;/h3&gt; 
 &lt;img referrerpolicy="no-referrer-when-downgrade" src="https://static.scarf.sh/a.png?x-pxid=fcfc0926-d841-47fb-b8a6-6aba3a6c3228" /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"Our entire company is using CodeLayer now. We're shipping one banger PR after the other. It is so f-ing good. Unbelievable dude."&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;‚Äì Ren√© Brandel, Founder @ Casco (YC X25)&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Superhuman for Claude Code&lt;/strong&gt; - Keyboard-first workflows designed for builders who value speed and control.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Advanced Context Engineering&lt;/strong&gt; - Scale AI-first dev to your entire team, without devolving into a chaotic slop-fest.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;M U L T I C L A U D E&lt;/strong&gt; - Run Claude Code sessions in parallel. Worktrees? Done. Remote cloud workers? You got it.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"This has improved my productivity (and token consumption) by at least 50%. Taking a superhuman style approach just makes soo much sense. Also, its so freaking cool to look back at all the work you've done in a day."&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;‚Äì Tyler Brown, Founder @ Revlo.ai&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;From the team that brought you "Context Engineering"&lt;/h2&gt; 
&lt;p&gt;Leading experts on getting the most out of today's models.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://github.com/humanlayer/humanlayer"&gt;Advanced Context Engineering for Coding Agents&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;This talk, given at YC on August 20th, 2025 lays out the groundwork for using AI to solve hard problems in complex codebases.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/humanlayer"&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://humanlayer.dev/youtube"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;a href="https://github.com/humanlayer/humanlayer"&gt;12 Factor Agents&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;A set of principles for building reliable and scalable LLM applications, inspired by the original 12-Factor App methodology.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/humanlayer"&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://humanlayer.dev/youtube"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The original repo that coined the term "context engineering" back in April 2025.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://humanlayer.dev/podcast"&gt;ü¶Ñ AI That Works&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;A weekly conversation about how we can all get the most juice out of todays models with @hellovai &amp;amp; @dexhorthy&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/humanlayer"&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://humanlayer.dev/podcast"&gt;Podcast&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;For Teams&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Invest in outcomes, not tools.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Want to scale AI-first development to your entire org? Get tailored workflows, custom integrations, and cutting-edge advice.&lt;/p&gt; 
&lt;p&gt;HumanLayer's expert engineers will ship in the trenches with you and your team until everyone is a 100x engineer.&lt;/p&gt; 
&lt;p&gt;üìß Shoot us an email at &lt;strong&gt;&lt;a href="mailto:contact@humanlayer.dev"&gt;contact@humanlayer.dev&lt;/a&gt;&lt;/strong&gt;, mention your team size and current AI development stack.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Coming soon - join the waitlist for early access
npx humanlayer join-waitlist --email ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Legacy Documentation&lt;/h2&gt; 
&lt;p&gt;Looking for the HumanLayer SDK documentation? See &lt;a href="https://raw.githubusercontent.com/humanlayer/humanlayer/main/humanlayer.md"&gt;humanlayer.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;CodeLayer and the HumanLayer SDK are open-source and we welcome contributions in the form of issues, documentation, pull requests, and more. See &lt;a href="https://raw.githubusercontent.com/humanlayer/humanlayer/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The HumanLayer SDK and CodeLayer sources in this repo are licensed under the Apache 2 License.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://star-history.com/#humanlayer/humanlayer&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=humanlayer/humanlayer&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>kamranahmedse/developer-roadmap</title>
      <link>https://github.com/kamranahmedse/developer-roadmap</link>
      <description>&lt;p&gt;Interactive roadmaps, guides and other educational content to help developers grow in their careers.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://roadmap.sh/"&gt;&lt;img src="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/public/img/brand.png" height="128" /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2 align="center"&gt;&lt;a href="https://roadmap.sh"&gt;roadmap.sh&lt;/a&gt;&lt;/h2&gt; 
&lt;p align="center"&gt;Community driven roadmaps, articles and resources for developers&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;a href="https://roadmap.sh/roadmaps"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Roadmaps%20-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="roadmaps" /&gt; &lt;/a&gt; &lt;a href="https://roadmap.sh/best-practices"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Best%20Practices-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="best practices" /&gt; &lt;/a&gt; &lt;a href="https://roadmap.sh/questions"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Questions-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="videos" /&gt; &lt;/a&gt; &lt;a href="https://www.youtube.com/channel/UCA0H2KIWgWTwpTFjSxp0now?sub_confirmation=1"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-YouTube%20Channel-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="roadmaps" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Roadmaps are now interactive, you can click the nodes to read more about the topics.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://roadmap.sh"&gt;View all Roadmaps&lt;/a&gt; &amp;nbsp;¬∑&amp;nbsp; &lt;a href="https://roadmap.sh/best-practices"&gt;Best Practices&lt;/a&gt; &amp;nbsp;¬∑&amp;nbsp; &lt;a href="https://roadmap.sh/questions"&gt;Questions&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Here is the list of available roadmaps with more being actively worked upon.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at the &lt;a href="https://roadmap.sh/get-started"&gt;get started&lt;/a&gt; page that might help you pick up a path.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/frontend"&gt;Frontend Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/frontend?r=frontend-beginner"&gt;Frontend Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/backend"&gt;Backend Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/backend?r=backend-beginner"&gt;Backend Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/devops"&gt;DevOps Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/devops?r=devops-beginner"&gt;DevOps Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/full-stack"&gt;Full Stack Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/html"&gt;HTML Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/css"&gt;CSS Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/javascript"&gt;JavaScript Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/typescript"&gt;TypeScript Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/git-github"&gt;Git and GitHub&lt;/a&gt; / &lt;a href="https://roadmap.sh/git-github?r=git-github-beginner"&gt;Git and GitHub Beginner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/api-design"&gt;API Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/computer-science"&gt;Computer Science Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/datastructures-and-algorithms"&gt;Data Structures and Algorithms Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-data-scientist"&gt;AI and Data Scientist Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-engineer"&gt;AI Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/aws"&gt;AWS Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cloudflare"&gt;Cloudflare Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/linux"&gt;Linux Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/terraform"&gt;Terraform Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/data-analyst"&gt;Data Analyst Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/bi-analyst"&gt;BI Analyst Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/data-engineer"&gt;Data Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/machine-learning"&gt;Machine Learning Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/mlops"&gt;MLOps Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/product-manager"&gt;Product Manager Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/engineering-manager"&gt;Engineering Manager Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/qa"&gt;QA Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/python"&gt;Python Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/software-architect"&gt;Software Architect Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/game-developer"&gt;Game Developer Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/server-side-game-developer"&gt;Server Side Game Developer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/software-design-architecture"&gt;Software Design and Architecture Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cpp"&gt;C++ Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/react"&gt;React Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/nextjs"&gt;Next.js Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/react-native"&gt;React Native Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/vue"&gt;Vue Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/angular"&gt;Angular Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/nodejs"&gt;Node.js Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/php"&gt;PHP Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/graphql"&gt;GraphQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/android"&gt;Android Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ios"&gt;iOS Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/flutter"&gt;Flutter Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/golang"&gt;Go Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/rust"&gt;Rust Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/java"&gt;Java Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/kotlin"&gt;Kotlin Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/spring-boot"&gt;Spring Boot Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/design-system"&gt;Design System Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/postgresql-dba"&gt;PostgreSQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/sql"&gt;SQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/redis"&gt;Redis Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/blockchain"&gt;Blockchain Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/aspnet-core"&gt;ASP.NET Core Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/system-design"&gt;System Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/kubernetes"&gt;Kubernetes Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cyber-security"&gt;Cyber Security Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/mongodb"&gt;MongoDB Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ux-design"&gt;UX Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/docker"&gt;Docker Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/prompt-engineering"&gt;Prompt Engineering Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/technical-writer"&gt;Technical Writer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/devrel"&gt;DevRel Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-red-teaming"&gt;AI Red Teaming Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-agents"&gt;AI Agents Roadmap&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are also interactive best practices:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/backend-performance"&gt;Backend Performance Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/frontend-performance"&gt;Frontend Performance Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/code-review"&gt;Code Review Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/api-security"&gt;API Security Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/aws"&gt;AWS Best Practices&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;..and questions to help you test, rate and improve your knowledge&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/javascript"&gt;JavaScript Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/nodejs"&gt;Node.js Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/react"&gt;React Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/backend"&gt;Backend Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/frontend"&gt;Frontend Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;Share with the community&lt;/h2&gt; 
&lt;p&gt;Please consider sharing a post about &lt;a href="https://roadmap.sh"&gt;roadmap.sh&lt;/a&gt; and the value it provides. It really does help!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://reddit.com/submit?url=https://roadmap.sh&amp;amp;title=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-reddit-red?logo=reddit" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://news.ycombinator.com/submitlink?u=https://roadmap.sh"&gt;&lt;img src="https://img.shields.io/badge/share%20on-hacker%20news-orange?logo=ycombinator" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/share?url=https://roadmap.sh&amp;amp;text=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-twitter-03A9F4?logo=twitter" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://www.facebook.com/sharer/sharer.php?u=https://roadmap.sh"&gt;&lt;img src="https://img.shields.io/badge/share%20on-facebook-1976D2?logo=facebook" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/shareArticle?url=https://roadmap.sh&amp;amp;title=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-linkedin-3949AB?logo=linkedin" alt="GitHub Repo stars" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Clone the repository, install the dependencies and start the application&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:kamranahmedse/developer-roadmap.git
cd developer-roadmap
npm install
npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: use the &lt;code&gt;depth&lt;/code&gt; parameter to reduce the clone size and speed up the clone.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone --depth=1 https://github.com/kamranahmedse/developer-roadmap.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at &lt;a href="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/contributing.md"&gt;contribution docs&lt;/a&gt; for how to update any of the roadmaps&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add content to roadmaps&lt;/li&gt; 
 &lt;li&gt;Add new roadmaps&lt;/li&gt; 
 &lt;li&gt;Suggest changes to existing roadmaps&lt;/li&gt; 
 &lt;li&gt;Discuss ideas in issues&lt;/li&gt; 
 &lt;li&gt;Spread the word&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Thanks to all contributors ‚ù§&lt;/h2&gt; 
&lt;a href="https://github.com/kamranahmedse/developer-roadmap/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=kamranahmedse/developer-roadmap" /&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Have a look at the &lt;a href="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/license"&gt;license file&lt;/a&gt; for details&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TanStack/router</title>
      <link>https://github.com/TanStack/router</link>
      <description>&lt;p&gt;ü§ñ Fully typesafe Router for React (and friends) w/ built-in caching, 1st class search-param APIs, client-side cache integration and isomorphic rendering.&lt;/p&gt;&lt;hr&gt;&lt;img src="https://static.scarf.sh/a.png?x-pxid=d988eb79-b0fc-4a2b-8514-6a1ab932d188" /&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TanStack/router/main/media/header_router.png" alt="TanStack Router" /&gt;&lt;/p&gt; &lt;h2&gt;TanStack Router&lt;/h2&gt; &lt;p&gt;A modern router designed for type safety, data‚Äëdriven navigation, and seamless developer experience.&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;End‚Äëto‚Äëend type safety (routes, params, loaders)&lt;/li&gt; 
     &lt;li&gt;Schema‚Äëdriven search params with validation&lt;/li&gt; 
     &lt;li&gt;Built‚Äëin caching, prefetching &amp;amp; invalidation&lt;/li&gt; 
     &lt;li&gt;Nested layouts, transitions &amp;amp; error boundaries&lt;/li&gt; 
    &lt;/ul&gt; &lt;h3&gt;&lt;a href="https://tanstack.com/router"&gt;Read the Router Docs ‚Üí&lt;/a&gt;&lt;/h3&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TanStack/router/main/media/header_start.png" alt="TanStack Start" /&gt;&lt;/p&gt; &lt;h2&gt;TanStack Start&lt;/h2&gt; &lt;p&gt;A full‚Äëstack framework built on Router, designed for server rendering, streaming, and production‚Äëready deployments.&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Full‚Äëdocument SSR &amp;amp; streaming&lt;/li&gt; 
     &lt;li&gt;Server functions &amp;amp; end‚Äëto‚Äëend type safety&lt;/li&gt; 
     &lt;li&gt;Deployment‚Äëready bundling &amp;amp; builds&lt;/li&gt; 
     &lt;li&gt;All the power of TanStack Router, plus full‚Äëstack features&lt;/li&gt; 
    &lt;/ul&gt; &lt;h3&gt;&lt;a href="https://tanstack.com/start"&gt;Read the Start Docs ‚Üí&lt;/a&gt;&lt;/h3&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://npmjs.com/package/@tanstack/react-router"&gt; &lt;img src="https://img.shields.io/npm/dm/@tanstack/react-router.svg?sanitize=true" alt="npm downloads" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/tanstack/router"&gt; &lt;img src="https://img.shields.io/github/stars/tanstack/router.svg?style=social&amp;amp;label=Star" alt="GitHub stars" /&gt; &lt;/a&gt; 
 &lt;a href="https://bundlephobia.com/result?p=@tanstack/react-router"&gt; &lt;img src="https://badgen.net/bundlephobia/minzip/@tanstack/react-router" alt="Bundle size" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://raw.githubusercontent.com/TanStack/router/main/#badge"&gt; &lt;img alt="semantic-release" src="https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?sanitize=true" /&gt; &lt;/a&gt; 
 &lt;a href="https://bestofjs.org/projects/tanstack-router"&gt;&lt;img alt="Best of JS" src="https://img.shields.io/endpoint?url=https://bestofjs-serverless.now.sh/api/project-badge?fullName=TanStack%2Frouter%26since=daily" /&gt;&lt;/a&gt; 
 &lt;a href="https://twitter.com/tan_stack"&gt;&lt;img src="https://img.shields.io/twitter/follow/tan_stack.svg?style=social" alt="Follow @TanStack" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;&lt;a href="https://github.com/sponsors/tannerlinsley/"&gt;Become a Sponsor!&lt;/a&gt;&lt;/h3&gt; 
&lt;/div&gt; 
&lt;h2&gt;Get Involved&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;We welcome issues and pull requests!&lt;/li&gt; 
 &lt;li&gt;Participate in &lt;a href="https://github.com/TanStack/router/discussions"&gt;GitHub discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat with the community on &lt;a href="https://discord.com/invite/WrRKjPJ"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/TanStack/router/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for setup instructions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Partners&lt;/h2&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://www.coderabbit.ai/?via=tanstack&amp;amp;dub_id=aCcEEdAOqqutX6OS"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://tanstack.com/assets/coderabbit-dark-CMcuvjEy.svg" height="40" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://tanstack.com/assets/coderabbit-light-DVMJ2jHi.svg" height="40" /&gt; 
      &lt;img src="https://tanstack.com/assets/coderabbit-dark-CMcuvjEy.svg?sanitize=true" height="40" alt="CodeRabbit" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td padding="20"&gt; &lt;a href="https://www.cloudflare.com?utm_source=tanstack"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://tanstack.com/assets/cloudflare-white-DQDB7UaL.svg" height="60" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://tanstack.com/assets/cloudflare-black-CPufaW0B.svg" height="60" /&gt; 
      &lt;img src="https://tanstack.com/assets/cloudflare-black-CPufaW0B.svg?sanitize=true" height="60" alt="Cloudflare" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://netlify.com?utm_source=tanstack"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/netlify-dark.svg" height="70" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/netlify.svg" height="70" /&gt; 
      &lt;img src="https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/netlify-dark.svg?sanitize=true" height="70" alt="Netlify" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://neon.tech?utm_source=tanstack"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/neon-dark.svg" height="50" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/neon.svg" height="50" /&gt; 
      &lt;img src="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/neon.svg?sanitize=true" height="50" alt="Neon" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://go.clerk.com/wOwHtuJ"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://tanstack.com/assets/clerk-logo-dark-CRE22T_2.svg" height="40" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/clerk.svg" height="40" /&gt; 
      &lt;img src="https://tanstack.com/assets/clerk-logo-dark-CRE22T_2.svg?sanitize=true" height="40" alt="Clerk" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://convex.dev?utm_source=tanstack"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/convex-white.svg" height="30" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/convex.svg" height="30" /&gt; 
      &lt;img src="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/convex.svg?sanitize=true" height="30" alt="Convex" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://sentry.io?utm_source=tanstack"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/tanstack/tanstack.com/main/src/images/sentry-wordmark-light.svg" height="50" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/sentry.svg" height="50" /&gt; 
      &lt;img src="https://raw.githubusercontent.com/tannerlinsley/files/master/partners/sentry.svg?sanitize=true" height="50" alt="Sentry" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://www.prisma.io?utm_source=tanstack&amp;amp;via=tanstack"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://tanstack.com/assets/prisma-dark-DwgDxLwn.svg" height="50" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://tanstack.com/assets/prisma-light-Cloa3Onm.svg" height="50" /&gt; 
      &lt;img src="https://tanstack.com/assets/prisma-dark-DwgDxLwn.svg?sanitize=true" height="50" alt="Prisma" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://strapi.link/tanstack-start"&gt; 
     &lt;picture&gt; 
      &lt;source media="(prefers-color-scheme: dark)" srcset="https://tanstack.com/assets/strapi-dark-CQ84tQTk.svg" height="40" /&gt; 
      &lt;source media="(prefers-color-scheme: light)" srcset="https://tanstack.com/assets/strapi-light-6x7linao.svg" height="40" /&gt; 
      &lt;img src="https://tanstack.com/assets/strapi-dark-CQ84tQTk.svg?sanitize=true" height="40" alt="Strapi" /&gt; 
     &lt;/picture&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/TanStack/router/main/media/partner_logo.svg?sanitize=true" alt="Router &amp;amp; you?" height="65" /&gt; 
 &lt;p&gt; We're looking for TanStack Router &amp;amp; Start Partners to join our mission! Partner with us to push the boundaries of TanStack Router &amp;amp; Start and build amazing things together. &lt;/p&gt; 
 &lt;a href="mailto:partners@tanstack.com?subject=TanStack Router &amp;amp; Start Partnership"&gt;&lt;b&gt;LET'S CHAT&lt;/b&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Explore the TanStack Ecosystem&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/config"&gt;&lt;b&gt;TanStack Config&lt;/b&gt;&lt;/a&gt; ‚Äì Tooling for JS/TS packages&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/db"&gt;&lt;b&gt;TanStack DB&lt;/b&gt;&lt;/a&gt; ‚Äì Reactive sync client store&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/devtools"&gt;&lt;b&gt;TanStack DevTools&lt;/b&gt;&lt;/a&gt; ‚Äì Unified devtools panel&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/form"&gt;&lt;b&gt;TanStack Form&lt;/b&gt;&lt;/a&gt; ‚Äì Type‚Äësafe form state&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/pacer"&gt;&lt;b&gt;TanStack Pacer&lt;/b&gt;&lt;/a&gt; ‚Äì Debouncing, throttling, batching &lt;br /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/query"&gt;&lt;b&gt;TanStack Query&lt;/b&gt;&lt;/a&gt; ‚Äì Async state &amp;amp; caching&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/ranger"&gt;&lt;b&gt;TanStack Ranger&lt;/b&gt;&lt;/a&gt; ‚Äì Range &amp;amp; slider primitives&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/store"&gt;&lt;b&gt;TanStack Store&lt;/b&gt;&lt;/a&gt; ‚Äì Reactive data store&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/table"&gt;&lt;b&gt;TanStack Table&lt;/b&gt;&lt;/a&gt; ‚Äì Headless datagrids&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tanstack/virtual"&gt;&lt;b&gt;TanStack Virtual&lt;/b&gt;&lt;/a&gt; ‚Äì Virtualized rendering&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;‚Ä¶ and more at &lt;a href="https://tanstack.com"&gt;&lt;b&gt;TanStack.com ¬ª&lt;/b&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Use the force, Luke --&gt;</description>
    </item>
    
    <item>
      <title>cloudflare/agents</title>
      <link>https://github.com/cloudflare/agents</link>
      <description>&lt;p&gt;Build and deploy AI Agents on Cloudflare&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üß† Cloudflare Agents&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudflare/agents/main/assets/npm-install-agents.svg?sanitize=true" alt="npm install agents" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;This project is in active development. Join us in shaping the future of intelligent agents.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Welcome to a new paradigm in AI development. Cloudflare Agents provides the foundation for building intelligent, stateful agents that persist, think, and evolve at the edge of the network.&lt;/p&gt; 
&lt;p&gt;Read the announcement on the Cloudflare blog: &lt;a href="https://blog.cloudflare.com/build-ai-agents-on-cloudflare/"&gt;Making Cloudflare the best platform for building AI Agents&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Vision&lt;/h2&gt; 
&lt;p&gt;We're creating a framework where AI agents can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Maintain persistent state and memory&lt;/li&gt; 
 &lt;li&gt;Engage in real-time communication&lt;/li&gt; 
 &lt;li&gt;Process and learn from interactions&lt;/li&gt; 
 &lt;li&gt;Operate autonomously at global scale&lt;/li&gt; 
 &lt;li&gt;Hibernate when idle, awaken when needed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Status&lt;/h2&gt; 
&lt;p&gt;This project is actively evolving. Current focus areas:&lt;/p&gt; 
&lt;h3&gt;Ready for Use&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Core agent framework with state management&lt;/li&gt; 
 &lt;li&gt;Real-time WebSocket communication&lt;/li&gt; 
 &lt;li&gt;HTTP endpoints and routing&lt;/li&gt; 
 &lt;li&gt;React integration hooks&lt;/li&gt; 
 &lt;li&gt;Basic AI chat capabilities&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;In Development&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Advanced memory systems&lt;/li&gt; 
 &lt;li&gt;WebRTC for audio/video&lt;/li&gt; 
 &lt;li&gt;Email integration&lt;/li&gt; 
 &lt;li&gt;Evaluation framework&lt;/li&gt; 
 &lt;li&gt;Enhanced observability&lt;/li&gt; 
 &lt;li&gt;Self-hosting guide&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm create cloudflare@latest -- --template cloudflare/agents-starter
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or add to existing project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;
npm install agents
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For comprehensive documentation and guides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cloudflare/agents/main/packages/agents/README.md"&gt;Core Framework&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cloudflare/agents/main/guides/anthropic-patterns/README.md"&gt;The Anthropic Patterns for building effective agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cloudflare/agents/main/guides/human-in-the-loop/README.md"&gt;Human in the Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cloudflare/agents/main/examples/playground/README.md"&gt;Playground&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Whether it's:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;New examples&lt;/li&gt; 
 &lt;li&gt;Documentation improvements&lt;/li&gt; 
 &lt;li&gt;Bug fixes&lt;/li&gt; 
 &lt;li&gt;Feature suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License - Build something meaningful.&lt;/p&gt; 
&lt;hr /&gt;</description>
    </item>
    
    <item>
      <title>payloadcms/payload</title>
      <link>https://github.com/payloadcms/payload</link>
      <description>&lt;p&gt;Payload is the open-source, fullstack Next.js framework, giving you instant backend superpowers. Get a full TypeScript backend and admin panel instantly. Use Payload as a headless CMS or for building powerful applications.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://payloadcms.com"&gt;&lt;img width="100%" src="https://l4wlsi8vxy8hre4v.public.blob.vercel-storage.com/github-banner-new-logo.jpg" alt="Payload headless CMS Admin panel built with React" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;p align="left"&gt; &lt;a href="https://github.com/payloadcms/payload/actions"&gt;&lt;img alt="GitHub Workflow Status" src="https://img.shields.io/github/actions/workflow/status/payloadcms/payload/main.yml?style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://discord.gg/payload"&gt;&lt;img alt="Discord" src="https://img.shields.io/discord/967097582721572934?label=Discord&amp;amp;color=7289da&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.npmjs.com/package/payload"&gt;&lt;img alt="npm" src="https://img.shields.io/npm/dw/payload?style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/payloadcms/payload/graphs/contributors"&gt;&lt;img alt="npm" src="https://img.shields.io/github/contributors-anon/payloadcms/payload?color=yellow&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.npmjs.com/package/payload"&gt;&lt;img alt="npm" src="https://img.shields.io/npm/v/payload?style=flat-square" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://twitter.com/payloadcms"&gt;&lt;img src="https://img.shields.io/badge/follow-payloadcms-1DA1F2?logo=twitter&amp;amp;style=flat-square" alt="Payload Twitter" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h4&gt; &lt;a target="_blank" href="https://payloadcms.com/docs/getting-started/what-is-payload" rel="dofollow"&gt;&lt;strong&gt;Explore the Docs&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;¬∑&amp;nbsp;&lt;a target="_blank" href="https://payloadcms.com/community-help" rel="dofollow"&gt;&lt;strong&gt;Community Help&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;¬∑&amp;nbsp;&lt;a target="_blank" href="https://github.com/payloadcms/payload/discussions/1539" rel="dofollow"&gt;&lt;strong&gt;Roadmap&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;¬∑&amp;nbsp;&lt;a target="_blank" href="https://www.g2.com/products/payload-cms/reviews#reviews" rel="dofollow"&gt;&lt;strong&gt;View G2 Reviews&lt;/strong&gt;&lt;/a&gt; &lt;/h4&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] üéâ &lt;strong&gt;We've released 3.0!&lt;/strong&gt; Star this repo or keep an eye on it to follow along.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Payload is the first-ever Next.js native CMS that can install directly in your existing &lt;code&gt;/app&lt;/code&gt; folder. It's the start of a new era for headless CMS.&lt;/p&gt; 
&lt;h3&gt;Benefits over a regular CMS&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Deploy anywhere, including serverless on Vercel for free&lt;/li&gt; 
 &lt;li&gt;Combine your front+backend in the same &lt;code&gt;/app&lt;/code&gt; folder if you want&lt;/li&gt; 
 &lt;li&gt;Don't sign up for yet another SaaS - Payload is open source&lt;/li&gt; 
 &lt;li&gt;Query your database in React Server Components&lt;/li&gt; 
 &lt;li&gt;Both admin and backend are 100% extensible&lt;/li&gt; 
 &lt;li&gt;No vendor lock-in&lt;/li&gt; 
 &lt;li&gt;Never touch ancient WP code again&lt;/li&gt; 
 &lt;li&gt;Build faster, never hit a roadblock&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;Before beginning to work with Payload, make sure you have all of the &lt;a href="https://payloadcms.com/docs/getting-started/installation"&gt;required software&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;pnpx create-payload-app@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;If you're new to Payload, you should start with the website template&lt;/strong&gt; (&lt;code&gt;pnpx create-payload-app@latest -t website&lt;/code&gt;). It shows how to do &lt;em&gt;everything&lt;/em&gt; - including custom Rich Text blocks, on-demand revalidation, live preview, and more. It comes with a frontend built with Tailwind all in one &lt;code&gt;/app&lt;/code&gt; folder.&lt;/p&gt; 
&lt;h2&gt;One-click templates&lt;/h2&gt; 
&lt;p&gt;Jumpstart your next project by starting with a pre-made template. These are production-ready, end-to-end solutions designed to get you to market as fast as possible.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/payloadcms/payload/tree/main/templates/website"&gt;üåê Website&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Build any kind of website, blog, or portfolio from small to enterprise. Comes with a fully functional front-end built with RSCs and Tailwind.&lt;/p&gt; 
&lt;p&gt;We're constantly adding more templates to our &lt;a href="https://github.com/payloadcms/payload/tree/main/templates"&gt;Templates Directory&lt;/a&gt;. If you maintain your own template, consider adding the &lt;code&gt;payload-template&lt;/code&gt; topic to your GitHub repository for others to find.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/payloadcms/payload/tree/main/templates"&gt;Official Templates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/topics/payload-template"&gt;Community Templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚ú® Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Completely free and open-source&lt;/li&gt; 
 &lt;li&gt;Next.js native, built to run inside &lt;em&gt;your&lt;/em&gt; &lt;code&gt;/app&lt;/code&gt; folder&lt;/li&gt; 
 &lt;li&gt;Use server components to extend Payload UI&lt;/li&gt; 
 &lt;li&gt;Query your database directly in server components, no need for REST / GraphQL&lt;/li&gt; 
 &lt;li&gt;Fully TypeScript with automatic types for your data&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://payloadcms.com/docs/authentication/overview"&gt;Auth out of the box&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://payloadcms.com/docs/versions/overview"&gt;Versions and drafts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://payloadcms.com/docs/configuration/localization"&gt;Localization&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://payloadcms.com/docs/fields/blocks"&gt;Block-based layout builder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://payloadcms.com/docs/admin/overview"&gt;Customizable React admin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://payloadcms.com/docs/fields/rich-text"&gt;Lexical rich text editor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://payloadcms.com/docs/fields/overview#conditional-logic"&gt;Conditional field logic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Extremely granular &lt;a href="https://payloadcms.com/docs/access-control/overview"&gt;Access Control&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://payloadcms.com/docs/hooks/overview"&gt;Document and field-level hooks&lt;/a&gt; for every action Payload provides&lt;/li&gt; 
 &lt;li&gt;Intensely fast API&lt;/li&gt; 
 &lt;li&gt;Highly secure thanks to HTTP-only cookies, CSRF protection, and more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a target="_blank" href="https://github.com/payloadcms/payload/discussions"&gt;&lt;strong&gt;Request Feature&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üóíÔ∏è Documentation&lt;/h2&gt; 
&lt;p&gt;Check out the &lt;a href="https://payloadcms.com/docs/getting-started/what-is-payload"&gt;Payload website&lt;/a&gt; to find in-depth documentation for everything that Payload offers.&lt;/p&gt; 
&lt;p&gt;Migrating from v2 to v3? Check out the &lt;a href="https://github.com/payloadcms/payload/raw/main/docs/migration-guide/overview.mdx"&gt;3.0 Migration Guide&lt;/a&gt; on how to do it.&lt;/p&gt; 
&lt;h2&gt;üôã Contributing&lt;/h2&gt; 
&lt;p&gt;If you want to add contributions to this repository, please follow the instructions in &lt;a href="https://raw.githubusercontent.com/payloadcms/payload/main/CONTRIBUTING.md"&gt;contributing.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üìö Examples&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/payloadcms/payload/main/examples"&gt;Examples Directory&lt;/a&gt; is a great resource for learning how to setup Payload in a variety of different ways, but you can also find great examples in our blog and throughout our social media.&lt;/p&gt; 
&lt;p&gt;If you'd like to run the examples, you can use &lt;code&gt;create-payload-app&lt;/code&gt; to create a project from one:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npx create-payload-app --example example_name
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can see more examples at:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/payloadcms/payload/main/examples"&gt;Examples Directory&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://payloadcms.com/blog"&gt;Payload Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@payloadcms"&gt;Payload YouTube&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîå Plugins&lt;/h2&gt; 
&lt;p&gt;Payload is highly extensible and allows you to install or distribute plugins that add or remove functionality. There are both officially-supported and community-supported plugins available. If you maintain your own plugin, consider adding the &lt;code&gt;payload-plugin&lt;/code&gt; topic to your GitHub repository for others to find.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orgs/payloadcms/repositories?q=topic%3Apayload-plugin"&gt;Official Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/topics/payload-plugin"&gt;Community Plugins&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üö® Need help?&lt;/h2&gt; 
&lt;p&gt;There are lots of good conversations and resources in our Github Discussions board and our Discord Server. If you're struggling with something, chances are, someone's already solved what you're up against. &lt;span&gt;üëá&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/payloadcms/payload/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/payloadcms/payload/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://t.co/30APlsQUPB"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://payloadcms.com/community-help"&gt;Community Help&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚≠ê Like what we're doing? Give us a star&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://cms.payloadcms.com/media/payload-github-star.gif" alt="payload-github-star" /&gt;&lt;/p&gt; 
&lt;h2&gt;üëè Thanks to all our contributors&lt;/h2&gt; 
&lt;img align="left" src="https://contributors-img.web.app/image?repo=payloadcms/payload" /&gt;</description>
    </item>
    
    <item>
      <title>yangshun/tech-interview-handbook</title>
      <link>https://github.com/yangshun/tech-interview-handbook</link>
      <description>&lt;p&gt;üíØ Curated coding interview preparation materials for busy software engineers&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;Tech Interview Handbook&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.techinterviewhandbook.org/"&gt; &lt;img src="https://raw.githubusercontent.com/yangshun/tech-interview-handbook/main/assets/logo.svg?sanitize=true" alt="Tech Interview Handbook" width="400" /&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;h3&gt; &lt;a href="https://www.techinterviewhandbook.org/"&gt;Read on the website&lt;/a&gt; &lt;/h3&gt; 
 &lt;p&gt; Join/follow us on &lt;a href="https://discord.com/invite/usMqNaPczq" target="_blank"&gt;Discord&lt;/a&gt; | &lt;a href="https://twitter.com/techinterviewhb" target="_blank"&gt;ùïè (Twitter)&lt;/a&gt; | &lt;a href="https://t.me/techinterviewhandbook" target="_blank"&gt;Telegram&lt;/a&gt; | &lt;a href="https://facebook.com/techinterviewhandbook" target="_blank"&gt;Facebook&lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;a href="https://www.techinterviewhandbook.org/software-engineering-interview-guide/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/yangshun/tech-interview-handbook/main/assets/start-reading-button.jpg" alt="Start Reading Tech Interview Handbook" /&gt; &lt;/a&gt; 
&lt;h2&gt;What is this?&lt;/h2&gt; 
&lt;p&gt;Not everyone has the time to do a few hundred LeetCode questions. Here are &lt;em&gt;free and curated&lt;/em&gt; technical interview preparation materials for busy engineers, brought to you by me, the author of &lt;a href="https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU"&gt;Blind 75&lt;/a&gt;. Over 1,000,000 people have benefitted from this handbook!&lt;/p&gt; 
&lt;p&gt;Besides the usual algorithm questions, other &lt;strong&gt;awesome&lt;/strong&gt; stuff includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/coding-interview-study-plan/"&gt;Best practice questions&lt;/a&gt; for coding interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/grind75/"&gt;Grind 75&lt;/a&gt; - the next evolution of Blind 75, bigger and better&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/coding-interview-prep/"&gt;How to prepare&lt;/a&gt; for coding interviews&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/coding-interview-cheatsheet/"&gt;Coding interview best practices&lt;/a&gt; - Straight-to-the-point Do's and Don'ts&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/algorithms/study-cheatsheet/"&gt;Algorithm cheatsheets and tips&lt;/a&gt; categorized by topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/resume/"&gt;Step-by-step Software Engineer resume guide&lt;/a&gt; to prepare a FAANG-ready resume&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/behavioral-interview-questions/"&gt;Behavioral questions&lt;/a&gt; asked by the top tech companies&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.frontendinterviewhandbook.com"&gt;Front end interview preparation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Help from you in contributing content would be very much appreciated!&lt;/p&gt; 
&lt;h2&gt;Why would you read this?&lt;/h2&gt; 
&lt;p&gt;This repository has &lt;strong&gt;practical&lt;/strong&gt; content that covers all phases of a technical interview, from applying for a job to passing the interviews to offer negotiation. Technically competent candidates might still find the non-technical content helpful.&lt;/p&gt; 
&lt;p&gt;The information in this repository is condensed. Ultimately, the key to succeeding in technical interviews is consistent practice and I don't want to bore you with too many words. I tell you the minimum you need to know on how to go about navigating the interview process, you go and practice and land your dream job.&lt;/p&gt; 
&lt;h2&gt;Who is this for?&lt;/h2&gt; 
&lt;p&gt;Anybody who wants to land a job at a tech company but is new to technical interviews, seasoned engineers who have not been on the other side of the interviewing table in a while and want to get back into the game, or anyone who wants to be better at technical interviewing.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;üí° Stop grinding mindlessly! Study coding question patterns efficiently with &lt;a href="https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU"&gt;Grokking the Coding Interview&lt;/a&gt; by Design Gurus üí° &lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;How is this repository different?&lt;/h2&gt; 
&lt;p&gt;There are many awesome books like "Cracking the Coding Interview" and interview-related repositories out there on GitHub, what makes this repository different? The difference is that many existing interview repositories contain mainly links to external resources whereas this repository contains top-quality curated content directly for your consumption.&lt;/p&gt; 
&lt;p&gt;Also, existing resources focus mainly on algorithm questions and lack coverage for more domain-specific and non-technical questions. This handbook aims to cover content beyond the typical algorithmic coding questions. üòé&lt;/p&gt; 
&lt;h2&gt;Looking for interview courses?&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://shareasale.com/r.cfm?b=1873647&amp;amp;u=3114753&amp;amp;m=114505&amp;amp;urllink=&amp;amp;afftrack="&gt;AlgoMonster&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;AlgoMonster aims to help you ace the technical interview &lt;strong&gt;in the shortest time possible&lt;/strong&gt;. By Google engineers, AlgoMonster uses a data-driven approach to teach you the most useful key question patterns and has contents to help you quickly revise basic data structures and algorithms. Best of all, AlgoMonster is not subscription-based - pay a one-time fee and get &lt;strong&gt;lifetime access&lt;/strong&gt;. &lt;a href="https://shareasale.com/r.cfm?b=1873647&amp;amp;u=3114753&amp;amp;m=114505&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;strong&gt;Join today for a 70% discount ‚Üí&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU"&gt;Grokking the Coding Interview: Patterns for Coding Questions&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;This course by Design Gurus expands upon the questions on the recommended practice questions but approaches the practicing from a questions pattern perspective, which is an approach I also agree with for learning and have personally used to get better at coding interviews. The course allows you to practice selected questions in Java, Python, C++, JavaScript and also provides sample solutions in those languages. &lt;strong&gt;Learn and understand patterns, not memorize answers!&lt;/strong&gt; &lt;a href="https://www.designgurus.io/course/grokking-the-coding-interview?aff=kJSIoU"&gt;&lt;strong&gt;Get lifetime access today ‚Üí&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Looking for Front End content?&lt;/h2&gt; 
&lt;p&gt;Front-end-related content has been moved to a separate website - &lt;a href="https://frontendinterviewhandbook.com"&gt;Front End Interview Handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Looking for System Design content?&lt;/h2&gt; 
&lt;p&gt;We're still working on System Design content. In the meanwhile, check out &lt;a href="https://bytebytego.com?fpr=techinterviewhandbook"&gt;ByteByteGo's System Design Interview course&lt;/a&gt; or Design Gurus' &lt;a href="https://www.designgurus.io/course/grokking-the-system-design-interview?aff=kJSIoU"&gt;Grokking the System Design Interview course&lt;/a&gt;, which in our opinion are among the most useful resources for getting started on system design interviews preparation.&lt;/p&gt; 
&lt;h2&gt;Contents&lt;/h2&gt; 
&lt;p&gt;A &lt;a href="https://github.com/facebook/docusaurus"&gt;Docusaurus&lt;/a&gt; website has been created to provide a better reading experience. Check out the website &lt;a href="https://www.techinterviewhandbook.org"&gt;here&lt;/a&gt;!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;üí° Stop the grind and study with a plan! Developed by Google engineers, &lt;a href="https://shareasale.com/r.cfm?b=1873647&amp;amp;u=3114753&amp;amp;m=114505&amp;amp;urllink=&amp;amp;afftrack="&gt;AlgoMonster&lt;/a&gt; is the fastest way to get a software engineering job. &lt;a href="https://shareasale.com/r.cfm?b=1873647&amp;amp;u=3114753&amp;amp;m=114505&amp;amp;urllink=&amp;amp;afftrack="&gt;Join today for a 70% discount!&lt;/a&gt; üí°&lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;p&gt;If you are interested in how data structures are implemented, check out &lt;a href="https://github.com/yangshun/lago"&gt;Lago&lt;/a&gt;, a Data Structures and Algorithms library for JavaScript. It is pretty much still WIP but I intend to make it into a library that can be used in production and also a reference resource for revising Data Structures and Algorithms.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There are no formal contributing guidelines at the moment as things are still in flux and we might find a better approach to structure content as we go along. You are welcome to contribute whatever you think will be helpful to fellow engineers. If you would like to contribute content for different domains, feel free to create an issue or submit a pull request and we can discuss further.&lt;/p&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who contributed. [&lt;a href="https://raw.githubusercontent.com/yangshun/tech-interview-handbook/main/CONTRIBUTING.md"&gt;Contribute&lt;/a&gt;]. &lt;a href="https://github.com/yangshun/tech-interview-handbook/graphs/contributors"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/contributors.svg?width=890&amp;amp;button=false" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;Thank you to all our backers! üôè [&lt;a href="https://opencollective.com/tech-interview-handbook#backer"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/tech-interview-handbook#backers" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/backers.svg?width=890" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/yangshun" target="_blank"&gt;&lt;img src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt="Buy Me A Coffee" style="height: auto !important; width: auto !important;" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Support this project by becoming a sponsor. Your logo/profile picture will show up here with a link to your website. [&lt;a href="https://opencollective.com/tech-interview-handbook#sponsor"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/0/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/0/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/1/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/1/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/2/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/2/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/3/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/3/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/4/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/4/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/5/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/5/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/6/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/6/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/7/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/7/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/8/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/8/avatar.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/tech-interview-handbook/sponsor/9/website" target="_blank"&gt;&lt;img src="https://opencollective.com/tech-interview-handbook/sponsor/9/avatar.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;I am providing code in the repository to you under an open source license. Because this is my personal repository, the license you receive to my code is from me and not my employer (Meta).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google-gemini/gemini-cli</title>
      <link>https://github.com/google-gemini/gemini-cli</link>
      <description>&lt;p&gt;An open-source AI agent that brings the power of Gemini directly into your terminal.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gemini CLI&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Gemini CLI CI" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google-gemini/gemini-cli/actions/workflows/e2e.yml"&gt;&lt;img src="https://github.com/google-gemini/gemini-cli/actions/workflows/e2e.yml/badge.svg?sanitize=true" alt="Gemini CLI E2E" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@google/gemini-cli"&gt;&lt;img src="https://img.shields.io/npm/v/@google/gemini-cli" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google-gemini/gemini-cli/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/google-gemini/gemini-cli" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/assets/gemini-screenshot.png" alt="Gemini CLI Screenshot" /&gt;&lt;/p&gt; 
&lt;p&gt;Gemini CLI is an open-source AI agent that brings the power of Gemini directly into your terminal. It provides lightweight access to Gemini, giving you the most direct path from your prompt to our model.&lt;/p&gt; 
&lt;h2&gt;üöÄ Why Gemini CLI?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ Free tier&lt;/strong&gt;: 60 requests/min and 1,000 requests/day with personal Google account.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üß† Powerful Gemini 2.5 Pro&lt;/strong&gt;: Access to 1M token context window.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîß Built-in tools&lt;/strong&gt;: Google Search grounding, file operations, shell commands, web fetching.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîå Extensible&lt;/strong&gt;: MCP (Model Context Protocol) support for custom integrations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíª Terminal-first&lt;/strong&gt;: Designed for developers who live in the command line.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üõ°Ô∏è Open source&lt;/strong&gt;: Apache 2.0 licensed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üì¶ Installation&lt;/h2&gt; 
&lt;h3&gt;Quick Install&lt;/h3&gt; 
&lt;h4&gt;Run instantly with npx&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using npx (no installation required)
npx https://github.com/google-gemini/gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Install globally with npm&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Install globally with Homebrew (macOS/Linux)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;System Requirements&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js version 20 or higher&lt;/li&gt; 
 &lt;li&gt;macOS, Linux, or Windows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Release Cadence and Tags&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/releases.md"&gt;Releases&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Preview&lt;/h3&gt; 
&lt;p&gt;New preview releases will be published each week at UTC 2359 on Tuesdays. These releases will not have been fully vetted and may contain regressions or other outstanding issues. Please help us test and install with &lt;code&gt;preview&lt;/code&gt; tag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@preview
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stable&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;New stable releases will be published each week at UTC 2000 on Tuesdays, this will be the full promotion of last week's &lt;code&gt;preview&lt;/code&gt; release + any bug fixes and validations. Use &lt;code&gt;latest&lt;/code&gt; tag.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Nightly&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;New releases will be published each week at UTC 0000 each day, This will be all changes from the main branch as represented at time of release. It should be assumed there are pending validations and issues. Use &lt;code&gt;nightly&lt;/code&gt; tag.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üìã Key Features&lt;/h2&gt; 
&lt;h3&gt;Code Understanding &amp;amp; Generation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Query and edit large codebases&lt;/li&gt; 
 &lt;li&gt;Generate new apps from PDFs, images, or sketches using multimodal capabilities&lt;/li&gt; 
 &lt;li&gt;Debug issues and troubleshoot with natural language&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Automation &amp;amp; Integration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automate operational tasks like querying pull requests or handling complex rebases&lt;/li&gt; 
 &lt;li&gt;Use MCP servers to connect new capabilities, including &lt;a href="https://github.com/GoogleCloudPlatform/vertex-ai-creative-studio/tree/main/experiments/mcp-genmedia"&gt;media generation with Imagen, Veo or Lyria&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run non-interactively in scripts for workflow automation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Capabilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ground your queries with built-in &lt;a href="https://ai.google.dev/gemini-api/docs/grounding"&gt;Google Search&lt;/a&gt; for real-time information&lt;/li&gt; 
 &lt;li&gt;Conversation checkpointing to save and resume complex sessions&lt;/li&gt; 
 &lt;li&gt;Custom context files (GEMINI.md) to tailor behavior for your projects&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;GitHub Integration&lt;/h3&gt; 
&lt;p&gt;Integrate Gemini CLI directly into your GitHub workflows with &lt;a href="https://github.com/google-github-actions/run-gemini-cli"&gt;&lt;strong&gt;Gemini CLI GitHub Action&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Pull Request Reviews&lt;/strong&gt;: Automated code review with contextual feedback and suggestions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Issue Triage&lt;/strong&gt;: Automated labeling and prioritization of GitHub issues based on content analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;On-demand Assistance&lt;/strong&gt;: Mention &lt;code&gt;@gemini-cli&lt;/code&gt; in issues and pull requests for help with debugging, explanations, or task delegation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Workflows&lt;/strong&gt;: Build automated, scheduled and on-demand workflows tailored to your team's needs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîê Authentication Options&lt;/h2&gt; 
&lt;p&gt;Choose the authentication method that best fits your needs:&lt;/p&gt; 
&lt;h3&gt;Option 1: Login with Google (OAuth login using your Google Account)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;‚ú® Best for:&lt;/strong&gt; Individual developers as well as anyone who has a Gemini Code Assist License. (see &lt;a href="https://cloud.google.com/gemini/docs/quotas"&gt;quota limits and terms of service&lt;/a&gt; for details)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free tier&lt;/strong&gt;: 60 requests/min and 1,000 requests/day&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gemini 2.5 Pro&lt;/strong&gt; with 1M token context window&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No API key management&lt;/strong&gt; - just sign in with your Google account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic updates&lt;/strong&gt; to latest models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Start Gemini CLI, then choose &lt;em&gt;Login with Google&lt;/em&gt; and follow the browser authentication flow when prompted&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;If you are using a paid Code Assist License from your organization, remember to set the Google Cloud Project&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Set your Google Cloud Project
export GOOGLE_CLOUD_PROJECT="YOUR_PROJECT_ID"
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Option 2: Gemini API Key&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;‚ú® Best for:&lt;/strong&gt; Developers who need specific model control or paid tier access&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free tier&lt;/strong&gt;: 100 requests/day with Gemini 2.5 Pro&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model selection&lt;/strong&gt;: Choose specific Gemini models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Usage-based billing&lt;/strong&gt;: Upgrade for higher limits when needed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get your key from https://aistudio.google.com/apikey
export GEMINI_API_KEY="YOUR_API_KEY"
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Option 3: Vertex AI&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;‚ú® Best for:&lt;/strong&gt; Enterprise teams and production workloads&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise features&lt;/strong&gt;: Advanced security and compliance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Higher rate limits with billing account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integration&lt;/strong&gt;: Works with existing Google Cloud infrastructure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get your key from Google Cloud Console
export GOOGLE_API_KEY="YOUR_API_KEY"
export GOOGLE_GENAI_USE_VERTEXAI=true
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Google Workspace accounts and other authentication methods, see the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/get-started/authentication.md"&gt;authentication guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; 
&lt;h3&gt;Basic Usage&lt;/h3&gt; 
&lt;h4&gt;Start in current directory&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Include multiple directories&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini --include-directories ../lib,../docs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Use specific model&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -m gemini-2.5-flash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Non-interactive mode for scripts&lt;/h4&gt; 
&lt;p&gt;Get a simple text response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -p "Explain the architecture of this codebase"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced scripting, including how to parse JSON and handle errors, use the &lt;code&gt;--output-format json&lt;/code&gt; flag to get structured output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -p "Explain the architecture of this codebase" --output-format json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Quick Examples&lt;/h3&gt; 
&lt;h4&gt;Start a new project&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd new-project/
gemini
&amp;gt; Write me a Discord bot that answers questions using a FAQ.md file I will provide
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Analyze existing code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/google-gemini/gemini-cli
cd gemini-cli
gemini
&amp;gt; Give me a summary of all of the changes that went in yesterday
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üìö Documentation&lt;/h2&gt; 
&lt;h3&gt;Getting Started&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/get-started/index.md"&gt;&lt;strong&gt;Quickstart Guide&lt;/strong&gt;&lt;/a&gt; - Get up and running quickly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/get-started/authentication.md"&gt;&lt;strong&gt;Authentication Setup&lt;/strong&gt;&lt;/a&gt; - Detailed auth configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/get-started/configuration.md"&gt;&lt;strong&gt;Configuration Guide&lt;/strong&gt;&lt;/a&gt; - Settings and customization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/keyboard-shortcuts.md"&gt;&lt;strong&gt;Keyboard Shortcuts&lt;/strong&gt;&lt;/a&gt; - Productivity tips.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Core Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/commands.md"&gt;&lt;strong&gt;Commands Reference&lt;/strong&gt;&lt;/a&gt; - All slash commands (&lt;code&gt;/help&lt;/code&gt;, &lt;code&gt;/chat&lt;/code&gt;, etc).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/custom-commands.md"&gt;&lt;strong&gt;Custom Commands&lt;/strong&gt;&lt;/a&gt; - Create your own reusable commands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/gemini-md.md"&gt;&lt;strong&gt;Context Files (GEMINI.md)&lt;/strong&gt;&lt;/a&gt; - Provide persistent context to Gemini CLI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/checkpointing.md"&gt;&lt;strong&gt;Checkpointing&lt;/strong&gt;&lt;/a&gt; - Save and resume conversations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/token-caching.md"&gt;&lt;strong&gt;Token Caching&lt;/strong&gt;&lt;/a&gt; - Optimize token usage.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Tools &amp;amp; Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/index.md"&gt;&lt;strong&gt;Built-in Tools Overview&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/file-system.md"&gt;File System Operations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/shell.md"&gt;Shell Commands&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/web-fetch.md"&gt;Web Fetch &amp;amp; Search&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/mcp-server.md"&gt;&lt;strong&gt;MCP Server Integration&lt;/strong&gt;&lt;/a&gt; - Extend with custom tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/extensions/index.md"&gt;&lt;strong&gt;Custom Extensions&lt;/strong&gt;&lt;/a&gt; - Build and share your own commands.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Topics&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/headless.md"&gt;&lt;strong&gt;Headless Mode (Scripting)&lt;/strong&gt;&lt;/a&gt; - Use Gemini CLI in automated workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/architecture.md"&gt;&lt;strong&gt;Architecture Overview&lt;/strong&gt;&lt;/a&gt; - How Gemini CLI works.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/ide-integration/index.md"&gt;&lt;strong&gt;IDE Integration&lt;/strong&gt;&lt;/a&gt; - VS Code companion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/sandbox.md"&gt;&lt;strong&gt;Sandboxing &amp;amp; Security&lt;/strong&gt;&lt;/a&gt; - Safe execution environments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/trusted-folders.md"&gt;&lt;strong&gt;Trusted Folders&lt;/strong&gt;&lt;/a&gt; - Control execution policies by folder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/enterprise.md"&gt;&lt;strong&gt;Enterprise Guide&lt;/strong&gt;&lt;/a&gt; - Deploy and manage in a corporate environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/telemetry.md"&gt;&lt;strong&gt;Telemetry &amp;amp; Monitoring&lt;/strong&gt;&lt;/a&gt; - Usage tracking.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/core/tools-api.md"&gt;&lt;strong&gt;Tools API Development&lt;/strong&gt;&lt;/a&gt; - Create custom tools.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Troubleshooting &amp;amp; Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/troubleshooting.md"&gt;&lt;strong&gt;Troubleshooting Guide&lt;/strong&gt;&lt;/a&gt; - Common issues and solutions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/faq.md"&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt; - Frequently asked questions.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;/bug&lt;/code&gt; command to report issues directly from the CLI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Using MCP Servers&lt;/h3&gt; 
&lt;p&gt;Configure MCP servers in &lt;code&gt;~/.gemini/settings.json&lt;/code&gt; to extend Gemini CLI with custom tools:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; @github List my open pull requests
&amp;gt; @slack Send a summary of today's commits to #dev channel
&amp;gt; @database Run a query to find inactive users
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/mcp-server.md"&gt;MCP Server Integration guide&lt;/a&gt; for setup instructions.&lt;/p&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Gemini CLI is fully open source (Apache 2.0), and we encourage the community to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Report bugs and suggest features.&lt;/li&gt; 
 &lt;li&gt;Improve documentation.&lt;/li&gt; 
 &lt;li&gt;Submit code improvements.&lt;/li&gt; 
 &lt;li&gt;Share your MCP servers and extensions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See our &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for development setup, coding standards, and how to submit pull requests.&lt;/p&gt; 
&lt;p&gt;Check our &lt;a href="https://github.com/orgs/google-gemini/projects/11"&gt;Official Roadmap&lt;/a&gt; for planned features and priorities.&lt;/p&gt; 
&lt;h2&gt;üìñ Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/ROADMAP.md"&gt;Official Roadmap&lt;/a&gt;&lt;/strong&gt; - See what's coming next.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/changelogs/index.md"&gt;Changelog&lt;/a&gt;&lt;/strong&gt; - See recent notable updates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.npmjs.com/package/@google/gemini-cli"&gt;NPM Package&lt;/a&gt;&lt;/strong&gt; - Package registry.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/strong&gt; - Report bugs or request features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/security/advisories"&gt;Security Advisories&lt;/a&gt;&lt;/strong&gt; - Security updates.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Uninstall&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/uninstall.md"&gt;Uninstall Guide&lt;/a&gt; for removal instructions.&lt;/p&gt; 
&lt;h2&gt;üìÑ Legal&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;License&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/LICENSE"&gt;Apache License 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terms of Service&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tos-privacy.md"&gt;Terms &amp;amp; Privacy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; Built with ‚ù§Ô∏è by Google and the open source community &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>toeverything/AFFiNE</title>
      <link>https://github.com/toeverything/AFFiNE</link>
      <description>&lt;p&gt;There can be more than Notion and Miro. AFFiNE(pronounced […ô‚Äòfain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1 style="border-bottom: none"&gt; &lt;b&gt;&lt;a href="https://affine.pro"&gt;AFFiNE.Pro&lt;/a&gt;&lt;/b&gt;&lt;br /&gt; Write, Draw and Plan All at Once &lt;br /&gt; &lt;/h1&gt; 
 &lt;a href="https://affine.pro/download"&gt; &lt;img alt="affine logo" src="https://cdn.affine.pro/Github_hero_image1.png" style="width: 100%" /&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;p align="center"&gt; A privacy-focused, local-first, open-source, and ready-to-use alternative for Notion &amp;amp; Miro. &lt;br /&gt; One hyper-fused platform for wildly creative minds. &lt;/p&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.producthunt.com/posts/affine-3?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-affine-3" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=440671&amp;amp;theme=light" alt="AFFiNE - One app for all - Where Notion meets Miro | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;div align="left" valign="middle"&gt; 
  &lt;a href="https://runblaze.dev"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="https://www.runblaze.dev/logo_dark.png" /&gt; 
    &lt;img align="right" src="https://www.runblaze.dev/logo_light.png" height="102px" /&gt; 
   &lt;/picture&gt; &lt;/a&gt; 
  &lt;br style="display: none;" /&gt; 
  &lt;p&gt;&lt;em&gt;Special thanks to &lt;a href="https://runblaze.dev"&gt;Blaze&lt;/a&gt; for their support of this project. They provide high-performance Apple Silicon macOS and Linux (AMD64 &amp;amp; ARM64) runners for GitHub Actions, greatly reducing our automated build times.&lt;/em&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;div align="center"&gt; 
  &lt;a href="https://affine.pro"&gt;Home Page&lt;/a&gt; | 
  &lt;a href="https://affine.pro/redirect/discord"&gt;Discord&lt;/a&gt; | 
  &lt;a href="https://app.affine.pro"&gt;Live Demo&lt;/a&gt; | 
  &lt;a href="https://affine.pro/blog/"&gt;Blog&lt;/a&gt; | 
  &lt;a href="https://docs.affine.pro/"&gt;Documentation&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;br /&gt; 
 &lt;p&gt;&lt;a href="https://github.com/toeverything/AFFiNE/releases/latest"&gt;&lt;img src="https://img.shields.io/github/downloads/toeverything/AFFiNE/total" alt="Releases" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/#contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/toeverything/AFFiNE" alt="All Contributors" /&gt;&lt;/a&gt; &lt;a href="https://www.typescriptlang.org/"&gt;&lt;img src="https://img.shields.io/github/package-json/dependency-version/toeverything/affine/dev/typescript" alt="TypeScript-version-icon" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;em&gt;Docs, canvas and tables are hyper-merged with AFFiNE - just like the word affine (…ôÀàf å…™n | a-fine).&lt;/em&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://github.com/toeverything/AFFiNE/assets/79301703/49a426bb-8d2b-4216-891a-fa5993642253" style="width: 100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Getting started &amp;amp; staying tuned with us.&lt;/h2&gt; 
&lt;p&gt;Star us, and you will receive all release notifications from GitHub without any delay!&lt;/p&gt; 
&lt;img src="https://user-images.githubusercontent.com/79301703/230891830-0110681e-8c7e-483b-b6d9-9e42b291b9ef.gif" style="width: 100%" /&gt; 
&lt;h2&gt;What is AFFiNE&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://affine.pro"&gt;AFFiNE&lt;/a&gt; is an open-source, all-in-one workspace and an operating system for all the building blocks that assemble your knowledge base and much more -- wiki, knowledge management, presentation and digital assets. It's a better alternative to Notion and Miro.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A true canvas for blocks in any form. Docs and whiteboard are now fully merged.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Many editor apps claim to be a canvas for productivity, but AFFiNE is one of the very few which allows you to put any building block on an edgeless canvas -- rich text, sticky notes, any embedded web pages, multi-view databases, linked pages, shapes and even slides. We have it all.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Multimodal AI partner ready to kick in any work&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Write up professional work report? Turn an outline into expressive and presentable slides? Summary an article into a well-structured mindmap? Sorting your job plan and backlog for tasks? Or... draw and code prototype apps and web pages directly all with one prompt? With you, &lt;a href="https://affine.pro/ai"&gt;AFFiNE AI&lt;/a&gt; pushes your creativity to the edge of your imagination, just like &lt;a href="https://affine.pro/blog/best-canvas-ai"&gt;Canvas AI&lt;/a&gt; to generate mind map for brainstorming.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Local-first &amp;amp; Real-time collaborative&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We love the idea of local-first that you always own your data on your disk, in spite of the cloud. Furthermore, AFFiNE supports real-time sync and collaborations on web and cross-platform clients.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Self-host &amp;amp; Shape your own AFFiNE&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You have the freedom to manage, self-host, fork and build your own AFFiNE. Plugin community and third-party blocks are coming soon. More tractions on &lt;a href="https://blocksuite.io"&gt;Blocksuite&lt;/a&gt;. Check there to learn how to &lt;a href="https://docs.affine.pro/self-host-affine"&gt;self-host AFFiNE&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgement&lt;/h2&gt; 
&lt;p&gt;‚ÄúWe shape our tools and thereafter our tools shape us‚Äù. A lot of pioneers have inspired us along the way, e.g.:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Quip &amp;amp; Notion with their great concept of ‚Äúeverything is a block‚Äù&lt;/li&gt; 
 &lt;li&gt;Trello with their Kanban&lt;/li&gt; 
 &lt;li&gt;Airtable &amp;amp; Miro with their no-code programmable datasheets&lt;/li&gt; 
 &lt;li&gt;Miro &amp;amp; Whimiscal with their edgeless visual whiteboard&lt;/li&gt; 
 &lt;li&gt;Remote &amp;amp; Capacities with their object-based tag system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There is a large overlap of their atomic ‚Äúbuilding blocks‚Äù between these apps. They are not open source, nor do they have a plugin system like Vscode for contributors to customize. We want to have something that contains all the features we love and also goes one step even further.&lt;/p&gt; 
&lt;p&gt;Thanks for checking us out, we appreciate your interest and sincerely hope that AFFiNE resonates with you! üéµ Checking &lt;a href="https://affine.pro/"&gt;https://affine.pro/&lt;/a&gt; for more details ions.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Bug Reports&lt;/th&gt; 
   &lt;th&gt;Feature Requests&lt;/th&gt; 
   &lt;th&gt;Questions/Discussions&lt;/th&gt; 
   &lt;th&gt;AFFiNE Community&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;amp;labels=bug%2Cproduct-review&amp;amp;template=BUG-REPORT.yml&amp;amp;title=TITLE"&gt;Create a bug report&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;amp;labels=feat%2Cproduct-review&amp;amp;template=FEATURE-REQUEST.yml&amp;amp;title=TITLE"&gt;Submit a feature request&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/toeverything/AFFiNE/discussions"&gt;Check GitHub Discussion&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://community.affine.pro"&gt;Vist the AFFiNE Community&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Something isn't working as expected&lt;/td&gt; 
   &lt;td&gt;An idea for a new feature, or improvements&lt;/td&gt; 
   &lt;td&gt;Discuss and ask questions&lt;/td&gt; 
   &lt;td&gt;A place to ask, learn and engage with others&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Calling all developers, testers, tech writers and more! Contributions of all types are more than welcome, you can read more in &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/types-of-contributions.md"&gt;docs/types-of-contributions.md&lt;/a&gt;. If you are interested in contributing code, read our &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/CONTRIBUTING.md"&gt;docs/CONTRIBUTING.md&lt;/a&gt; and feel free to check out our GitHub issues to get stuck in to show us what you‚Äôre made of.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Before you start contributing, please make sure you have read and accepted our &lt;a href="https://github.com/toeverything/affine/edit/canary/.github/CLA.md"&gt;Contributor License Agreement&lt;/a&gt;. To indicate your agreement, simply edit this file and submit a pull request.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;bug reports&lt;/strong&gt;, &lt;strong&gt;feature requests&lt;/strong&gt; and other &lt;strong&gt;suggestions&lt;/strong&gt; you can also &lt;a href="https://github.com/toeverything/AFFiNE/issues/new/choose"&gt;create a new issue&lt;/a&gt; and choose the most appropriate template for your feedback.&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;translation&lt;/strong&gt; and &lt;strong&gt;language support&lt;/strong&gt; you can visit our &lt;a href="https://community.affine.pro/c/i18n-general"&gt;i18n General Space&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Looking for &lt;strong&gt;other ways to contribute&lt;/strong&gt; and wondering where to start? Check out the &lt;a href="https://community.affine.pro/c/start-here/affine-ambassador"&gt;AFFiNE Ambassador program&lt;/a&gt;, we work closely with passionate community members and provide them with a wide range of support and resources.&lt;/p&gt; 
&lt;p&gt;If you have questions, you are welcome to contact us. One of the best places to get more info and learn more is in the &lt;a href="https://community.affine.pro"&gt;AFFiNE Community&lt;/a&gt; where you can engage with other like-minded individuals.&lt;/p&gt; 
&lt;h2&gt;Templates&lt;/h2&gt; 
&lt;p&gt;AFFiNE now provides pre-built &lt;a href="https://affine.pro/templates"&gt;templates&lt;/a&gt; from our team. Following are the Top 10 most popular templates among AFFiNE users,if you want to contribute, you can contribute your own template so other people can use it too.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-vision-board-template"&gt;vision board template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-one-pager-template-free"&gt;one pager template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/sample-lesson-plan-math-template"&gt;sample lesson plan math template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/grr-lesson-plan-template-free"&gt;grr lesson plan template free&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/free-editable-lesson-plan-template-for-pre-k"&gt;free editable lesson plan template for pre k&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/high-note-collection-planners"&gt;high note collection planners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-digital-planner"&gt;digital planner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/adhd-planner"&gt;ADHD Planner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/reading-log"&gt;Reading Log&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-cornell-notes-template"&gt;Cornell Notes Template&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Blog&lt;/h2&gt; 
&lt;p&gt;Welcome to the AFFiNE blog section! Here, you‚Äôll find the latest insights, tips, and guides on how to maximize your experience with AFFiNE and AFFiNE AI, the leading Canvas AI tool for flexible note-taking and creative organization.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/8-free-printable-vision-board-templates-examples-2023"&gt;vision board template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/ai-homework-helper"&gt;ai homework helper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/vision-board-maker"&gt;vision board maker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/free-customized-travel-itinerary-planner-templates"&gt;itinerary template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own"&gt;one pager template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/the-cornell-notes-template-and-system-learning-tips"&gt;cornell notes template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/top-10-free-editable-swot-analysis-template-examples"&gt;swot chart template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/apps-like-luna-task"&gt;apps like luna task&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/dynamic-AI-notes"&gt;note taking ai from rough notes to mind map&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/best-canvas-ai"&gt;canvas ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own"&gt;one pager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/how-to-write-sop-step-by-step-guide-5-best-free-tools-templates"&gt;SOP Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/10-best-free-chore-chart-templates-kids-adults"&gt;Chore Chart&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/packages/frontend/component"&gt;@affine/component&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AFFiNE Component Resources&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/codecov/c/github/toeverything/affine?style=flat-square" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/packages/common/theme"&gt;@toeverything/theme&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AFFiNE theme&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@toeverything/theme"&gt;&lt;img src="https://img.shields.io/npm/dm/@toeverything/theme?style=flat-square&amp;amp;color=eee" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Upstreams&lt;/h2&gt; 
&lt;p&gt;We would also like to give thanks to open-source projects that make AFFiNE possible:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/toeverything/BlockSuite"&gt;Blocksuite&lt;/a&gt; - üí† BlockSuite is the open-source collaborative editor project behind AFFiNE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/toeverything/OctoBase"&gt;OctoBase&lt;/a&gt; - üêô OctoBase is the open-source database behind AFFiNE, local-first, yet collaborative. A light-weight, scalable, data engine written in Rust.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yjs/yjs"&gt;yjs&lt;/a&gt; - Fundamental support of CRDTs for our implementation on state management and data sync.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/electron/electron"&gt;electron&lt;/a&gt; - Build cross-platform desktop apps with JavaScript, HTML, and CSS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/facebook/react"&gt;React&lt;/a&gt; - The library for web and native user interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/napi-rs/napi-rs"&gt;napi-rs&lt;/a&gt; - A framework for building compiled Node.js add-ons in Rust via Node-API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pmndrs/jotai"&gt;Jotai&lt;/a&gt; - Primitive and flexible state management for React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jack-Works/async-call-rpc"&gt;async-call-rpc&lt;/a&gt; - A lightweight JSON RPC client &amp;amp; server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitejs/vite"&gt;Vite&lt;/a&gt; - Next generation frontend tooling.&lt;/li&gt; 
 &lt;li&gt;Other upstream &lt;a href="https://github.com/toeverything/AFFiNE/network/dependencies"&gt;dependencies&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks a lot to the community for providing such powerful and simple libraries, so that we can focus more on the implementation of the product logic, and we hope that in the future our projects will also provide a more easy-to-use knowledge base for everyone.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;We would like to express our gratitude to all the individuals who have already contributed to AFFiNE! If you have any AFFiNE-related project, documentation, tool or template, please feel free to contribute it by submitting a pull request to our curated list on GitHub: &lt;a href="https://github.com/toeverything/awesome-affine"&gt;awesome-affine&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://github.com/toeverything/affine/graphs/contributors"&gt; &lt;img alt="contributors" src="https://opencollective.com/affine/contributors.svg?width=890&amp;amp;button=false" /&gt; &lt;/a&gt; 
&lt;h2&gt;Self-Host&lt;/h2&gt; 
&lt;p&gt;Begin with Docker to deploy your own feature-rich, unrestricted version of AFFiNE. Our team is diligently updating to the latest version. For more information on how to self-host AFFiNE, please refer to our &lt;a href="https://docs.affine.pro/self-host-affine"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://template.run.claw.cloud/?openapp=system-fastdeploy%3FtemplateName%3Daffine"&gt;&lt;img src="https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg?sanitize=true" alt="Run on ClawCloud" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Hiring&lt;/h2&gt; 
&lt;p&gt;Some amazing companies, including AFFiNE, are looking for developers! Are you interested in joining AFFiNE or its partners? Check out our &lt;a href="https://affine.pro/redirect/discord"&gt;Discord channel&lt;/a&gt; for some of the latest jobs available.&lt;/p&gt; 
&lt;h2&gt;Feature Request&lt;/h2&gt; 
&lt;p&gt;For feature requests, please see &lt;a href="https://community.affine.pro/c/feature-requests/"&gt;community.affine.pro&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;h3&gt;Codespaces&lt;/h3&gt; 
&lt;p&gt;From the GitHub repo main page, click the green "Code" button and select "Create codespace on master". This will open a new Codespace with the (supposedly auto-forked AFFiNE repo cloned, built, and ready to go.&lt;/p&gt; 
&lt;h3&gt;Local&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/BUILDING.md"&gt;BUILDING.md&lt;/a&gt; for instructions on how to build AFFiNE from source code.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from everyone. See &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/contributing/tutorial.md"&gt;docs/contributing/tutorial.md&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.chromatic.com/"&gt;&lt;img src="https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png" width="153" height="30" alt="Chromatic" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;a href="https://www.chromatic.com/"&gt;Chromatic&lt;/a&gt; for providing the visual testing platform that helps us review UI changes and catch visual regressions.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;h3&gt;Editions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;AFFiNE Community Edition (CE) is the current available version, it's free for self-host under the MIT license.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;AFFiNE Enterprise Edition (EE) is yet to be published, it will have more advanced features and enterprise-oriented offerings, including but not exclusive to rebranding and SSO, advanced admin and audit, etc., you may refer to &lt;a href="https://affine.pro/pricing"&gt;https://affine.pro/pricing&lt;/a&gt; for more information&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anthropics/claude-code</title>
      <link>https://github.com/anthropics/claude-code</link>
      <description>&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows - all through natural language commands.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Code&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/Node.js-18%2B-brightgreen?style=flat-square" alt="" /&gt; &lt;a href="https://www.npmjs.com/package/@anthropic-ai/claude-code"&gt;&lt;img src="https://img.shields.io/npm/v/@anthropic-ai/claude-code.svg?style=flat-square" alt="npm" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows -- all through natural language commands. Use it in your terminal, IDE, or tag @claude on Github.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Learn more in the &lt;a href="https://docs.anthropic.com/en/docs/claude-code/overview"&gt;official documentation&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/anthropics/claude-code/main/demo.gif" /&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Claude Code:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install -g @anthropic-ai/claude-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Navigate to your project directory and run &lt;code&gt;claude&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Reporting Bugs&lt;/h2&gt; 
&lt;p&gt;We welcome your feedback. Use the &lt;code&gt;/bug&lt;/code&gt; command to report issues directly within Claude Code, or file a &lt;a href="https://github.com/anthropics/claude-code/issues"&gt;GitHub issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Connect on Discord&lt;/h2&gt; 
&lt;p&gt;Join the &lt;a href="https://anthropic.com/discord"&gt;Claude Developers Discord&lt;/a&gt; to connect with other developers using Claude Code. Get help, share feedback, and discuss your projects with the community.&lt;/p&gt; 
&lt;h2&gt;Data collection, usage, and retention&lt;/h2&gt; 
&lt;p&gt;When you use Claude Code, we collect feedback, which includes usage data (such as code acceptance or rejections), associated conversation data, and user feedback submitted via the &lt;code&gt;/bug&lt;/code&gt; command.&lt;/p&gt; 
&lt;h3&gt;How we use your data&lt;/h3&gt; 
&lt;p&gt;See our &lt;a href="https://docs.anthropic.com/en/docs/claude-code/data-usage"&gt;data usage policies&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Privacy safeguards&lt;/h3&gt; 
&lt;p&gt;We have implemented several safeguards to protect your data, including limited retention periods for sensitive information, restricted access to user session data, and clear policies against using feedback for model training.&lt;/p&gt; 
&lt;p&gt;For full details, please review our &lt;a href="https://www.anthropic.com/legal/commercial-terms"&gt;Commercial Terms of Service&lt;/a&gt; and &lt;a href="https://www.anthropic.com/legal/privacy"&gt;Privacy Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>github/docs</title>
      <link>https://github.com/github/docs</link>
      <description>&lt;p&gt;The open-source repo for docs.github.com&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub Docs 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/codespaces/new/?repo=github"&gt;&lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Build GitHub Docs On Codespaces" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains the documentation website code and Markdown source files for &lt;a href="https://docs.github.com"&gt;docs.github.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;GitHub's Docs team works on pre-production content in a private repo that regularly syncs with this public repo.&lt;/p&gt; 
&lt;p&gt;Use the table of contents icon &lt;img alt="Table of contents icon" src="https://raw.githubusercontent.com/github/docs/main/contributing/images/table-of-contents.png" width="25" height="25" /&gt; on the top right corner of this document to navigate to a specific section quickly.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We accept different types of contributions, including some that don't require you to write a single line of code. For detailed instructions on how to get started with our project, see &lt;a href="https://docs.github.com/en/contributing/collaborating-on-github-docs/about-contributing-to-github-docs"&gt;About contributing to GitHub Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Ways to contribute&lt;/h3&gt; 
&lt;p&gt;On the GitHub Docs site, you can contribute by clicking the &lt;strong&gt;Make a contribution&lt;/strong&gt; button at the bottom of the page to open a pull request for quick fixes like typos, updates, or link fixes.&lt;/p&gt; 
&lt;p&gt;You can also contribute by creating a local environment or opening a Codespace. For more information, see &lt;a href="https://docs.github.com/en/contributing/setting-up-your-environment-to-work-on-github-docs"&gt;Setting up your environment to work on GitHub Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;img alt="Contribution call-to-action" src="https://raw.githubusercontent.com/github/docs/main/contributing/images/contribution_cta.png" width="400" /&gt; 
&lt;p&gt;For more complex contributions, please &lt;a href="https://github.com/github/docs-content/issues/new/choose"&gt;open an issue in the docs-content repo&lt;/a&gt; describing the changes you'd like to see.&lt;/p&gt; 
&lt;p&gt;If you're looking for a way to contribute, you can scan through our &lt;a href="https://github.com/github/docs/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22"&gt;help wanted board&lt;/a&gt; to find open issues already approved for work.&lt;/p&gt; 
&lt;h3&gt;And that's it!&lt;/h3&gt; 
&lt;p&gt;If you're having trouble with your GitHub account, contact &lt;a href="https://support.github.com"&gt;Support&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;That's how you can easily become a member of the GitHub Docs community. &lt;span&gt;‚ú®&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;READMEs&lt;/h2&gt; 
&lt;p&gt;In addition to the README you're reading right now, this repo includes other READMEs that describe the purpose of each subdirectory in more detail:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/content/README.md"&gt;content/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/content/graphql/README.md"&gt;content/graphql/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/content/rest/README.md"&gt;content/rest/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/contributing/README.md"&gt;contributing/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/data/README.md"&gt;data/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/data/reusables/README.md"&gt;data/reusables/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/data/variables/README.md"&gt;data/variables/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/src/README.md"&gt;src/README.md&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The GitHub product documentation in the assets, content, and data folders are licensed under a &lt;a href="https://raw.githubusercontent.com/github/docs/main/LICENSE"&gt;CC-BY license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All other code in this repository is licensed under the &lt;a href="https://raw.githubusercontent.com/github/docs/main/LICENSE-CODE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When using the GitHub logos, be sure to follow the &lt;a href="https://github.com/logos"&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Thanks &lt;span&gt;üíú&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;Thanks for all your contributions and efforts towards improving the GitHub documentation. We thank you for being part of our &lt;span&gt;‚ú®&lt;/span&gt; community &lt;span&gt;‚ú®&lt;/span&gt;!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>freeCodeCamp/freeCodeCamp</title>
      <link>https://github.com/freeCodeCamp/freeCodeCamp</link>
      <description>&lt;p&gt;freeCodeCamp.org's open-source codebase and curriculum. Learn math, programming, and computer science for free.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://www.freecodecamp.org/"&gt;&lt;img src="https://cdn.freecodecamp.org/platform/universal/fcc_banner_new.png" alt="freeCodeCamp Social Banner" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://makeapullrequest.com"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat" alt="Pull Requests Welcome" /&gt;&lt;/a&gt; &lt;a href="https://www.firsttimersonly.com/"&gt;&lt;img src="https://img.shields.io/badge/first--timers--only-friendly-blue.svg?sanitize=true" alt="first-timers-only Friendly" /&gt;&lt;/a&gt; &lt;a href="https://www.codetriage.com/freecodecamp/freecodecamp"&gt;&lt;img src="https://www.codetriage.com/freecodecamp/freecodecamp/badges/users.svg?sanitize=true" alt="Open Source Helpers" /&gt;&lt;/a&gt; &lt;a href="https://ona.com/from-referrer/"&gt;&lt;img src="https://img.shields.io/badge/setup-automated-blue?logo=ona" alt="Setup Automated" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/PRyKn3Vbay"&gt;&lt;img src="https://img.shields.io/discord/692816967895220344?logo=discord&amp;amp;label=Discord&amp;amp;color=5865F2" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://insights.linuxfoundation.org/project/freecodecamp"&gt;&lt;img src="https://insights.linuxfoundation.org/api/badge/health-score?project=freecodecamp" alt="LFX Health Score" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;freeCodeCamp.org's open-source codebase and curriculum&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.freecodecamp.org"&gt;freeCodeCamp.org&lt;/a&gt; is a friendly community where you can learn to code for free. It is run by a &lt;a href="https://www.freecodecamp.org/donate"&gt;donor-supported 501(c)(3) charity&lt;/a&gt; to help millions of busy adults transition into tech. Our community has already helped more than 100,000 people get their first developer job.&lt;/p&gt; 
&lt;p&gt;Our full-stack web development and machine learning curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#certifications"&gt;Certifications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#the-learning-platform"&gt;The Learning Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-bugs-and-issues"&gt;Reporting Bugs and Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#reporting-security-issues-and-responsible-disclosure"&gt;Reporting Security Issues and Responsible Disclosure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#platform-build-and-deployment-status"&gt;Platform, Build and Deployment Status&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Certifications&lt;/h3&gt; 
&lt;p&gt;freeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginner programmer around 300 hours to earn.&lt;/p&gt; 
&lt;p&gt;Each of these 50 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you've fulfilled all the user stories before you submit it.&lt;/p&gt; 
&lt;p&gt;You can pull in these test suites through &lt;a href="https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js"&gt;freeCodeCamp's CDN&lt;/a&gt;. This means you can build these projects on websites like CodePen and Replit - or even on your local computer's development environment.&lt;/p&gt; 
&lt;p&gt;Once you've earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or resume. And when your prospective employers or freelance clients click that link, they'll see a verified certification specific to you.&lt;/p&gt; 
&lt;p&gt;The one exception to this is if we discover violations of our &lt;a href="https://www.freecodecamp.org/news/academic-honesty-policy/"&gt;Academic Honesty Policy&lt;/a&gt;. When we catch people unambiguously plagiarizing (submitting other people's code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.&lt;/p&gt; 
&lt;p&gt;Here are our twelve core certifications:&lt;/p&gt; 
&lt;h4&gt;1. &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/"&gt;Responsive Web Design Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-by-building-a-cat-photo-app"&gt;Learn HTML by Building a Cat Photo App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-basic-css-by-building-a-cafe-menu"&gt;Learn Basic CSS by Building a Cafe Menu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-colors-by-building-a-set-of-colored-markers"&gt;Learn CSS Colors by Building a Set of Colored Markers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-forms-by-building-a-registration-form"&gt;Learn HTML Forms by Building a Registration Form&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-the-css-box-model-by-building-a-rothko-painting"&gt;Learn the CSS Box Model by Building a Rothko Painting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-flexbox-by-building-a-photo-gallery"&gt;Learn CSS Flexbox by Building a Photo Gallery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-typography-by-building-a-nutrition-label"&gt;Learn Typography by Building a Nutrition Label&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-accessibility-by-building-a-quiz"&gt;Learn Accessibility by Building a Quiz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-more-about-css-pseudo-selectors-by-building-a-balance-sheet"&gt;Learn More About CSS Pseudo Selectors by Building A Balance Sheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-intermediate-css-by-building-a-cat-painting"&gt;Learn Intermediate CSS by Building a Cat Painting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-responsive-web-design-by-building-a-piano"&gt;Learn Responsive Web Design by Building a Piano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-variables-by-building-a-city-skyline"&gt;Learn CSS Variables by Building a City Skyline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-grid-by-building-a-magazine"&gt;Learn CSS Grid by Building a Magazine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-transforms-by-building-a-penguin"&gt;Learn CSS Transforms by Building a Penguin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-css-animation-by-building-a-ferris-wheel"&gt;Learn CSS Animations by Building a Ferris Wheel&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form"&gt;Survey Form&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page"&gt;Tribute Page&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-technical-documentation-page-project/build-a-technical-documentation-page"&gt;Technical Documentation Page&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-product-landing-page-project/build-a-product-landing-page"&gt;Product Landing Page&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/2022/responsive-web-design/build-a-personal-portfolio-webpage-project/build-a-personal-portfolio-webpage"&gt;Personal Portfolio Webpage&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2. &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/"&gt;JavaScript Algorithms and Data Structures Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-introductory-javascript-by-building-a-pyramid-generator"&gt;Learn Introductory JavaScript by Building a Pyramid Generator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-javascript-by-building-a-role-playing-game"&gt;Learn Basic JavaScript by Building a Role Playing Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-form-validation-by-building-a-calorie-counter"&gt;Learn Form Validation by Building a Calorie Counter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-string-and-array-methods-by-building-a-music-player"&gt;Learn Basic String and Array Methods by Building a Music Player&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-the-date-object-by-building-a-date-formatter"&gt;Learn the Date Object by Building a Date Formatter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-modern-javascript-methods-by-building-football-team-cards"&gt;Learn Modern JavaScript Methods By Building Football Team Cards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-localstorage-by-building-a-todo-app"&gt;Learn localStorage by Building a Todo App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-recursion-by-building-a-decimal-to-binary-converter"&gt;Learn Recursion by Building a Decimal to Binary Converter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-algorithmic-thinking-by-building-a-number-sorter"&gt;Learn Basic Algorithmic Thinking by Building a Number Sorter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-advanced-array-methods-by-building-a-statistics-calculator"&gt;Learn Advanced Array Methods by Building a Statistics Calculator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-functional-programming-by-building-a-spreadsheet"&gt;Learn Functional Programming by Building a Spreadsheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-regular-expressions-by-building-a-spam-filter"&gt;Learn Regular Expressions by Building a Spam Filter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-oop-by-building-a-shopping-cart"&gt;Learn Basic OOP by Building a Shopping Cart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-intermediate-oop-by-building-a-platformer-game"&gt;Learn Intermediate OOP by Building a Platformer Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#review-algorithmic-thinking-by-building-a-dice-game"&gt;Learn Intermediate Algorithmic Thinking by Building a Dice Game&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-fetch-and-promises-by-building-an-fcc-authors-page"&gt;Learn Fetch and Promises By Building an fCC Authors Page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/#learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard"&gt;Learn Asynchronous Programming by Building an fCC Forum Leaderboard&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-palindrome-checker-project/build-a-palindrome-checker"&gt;Palindrome Checker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-roman-numeral-converter-project/build-a-roman-numeral-converter"&gt;Roman Numeral Converter&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-telephone-number-validator-project/build-a-telephone-number-validator"&gt;Telephone Number Validator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-a-cash-register-project/build-a-cash-register"&gt;Cash Register&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures-v8/build-an-rpg-creature-search-app-project/build-an-rpg-creature-search-app"&gt;RPG Creature Search App&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;3. &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/"&gt;Front End Libraries Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#bootstrap"&gt;Bootstrap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#jquery"&gt;jQuery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#sass"&gt;Sass&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#react"&gt;React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#redux"&gt;Redux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/#react-and-redux"&gt;React and Redux&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine"&gt;Random Quote Machine&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-markdown-previewer"&gt;Markdown Previewer&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-drum-machine"&gt;Drum Machine&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-javascript-calculator"&gt;JavaScript Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-25--5-clock"&gt;25 + 5 Clock&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;4. &lt;a href="https://www.freecodecamp.org/learn/data-visualization/"&gt;Data Visualization Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/data-visualization/#data-visualization-with-d3"&gt;Data Visualization with D3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/data-visualization/#json-apis-and-ajax"&gt;JSON APIs and Ajax&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-bar-chart"&gt;Bar Chart&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-scatterplot-graph"&gt;Scatterplot Graph&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-heat-map"&gt;Heat Map&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-choropleth-map"&gt;Choropleth Map&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-visualization/data-visualization-projects/visualize-data-with-a-treemap-diagram"&gt;Treemap Diagram&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;5. &lt;a href="https://www.freecodecamp.org/learn/relational-database/"&gt;Relational Database&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-bash-by-building-a-boilerplate"&gt;Learn Bash by Building a Boilerplate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-relational-databases-by-building-a-database-of-video-game-characters"&gt;Learn Relational Databases by Building a Database of Video Game Characters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-bash-scripting-by-building-five-programs"&gt;Learn Bash Scripting by Building Five Programs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-1"&gt;Learn SQL by Building a Student Database: Part 1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-sql-by-building-a-student-database-part-2"&gt;Learn SQL by Building a Student Database: Part 2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-advanced-bash-by-building-a-kitty-ipsum-translator"&gt;Learn Advanced Bash by Building a Kitty Ipsum Translator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-bash-and-sql-by-building-a-bike-rental-shop"&gt;Learn Bash and SQL by Building a Bike Rental Shop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-nano-by-building-a-castle"&gt;Learn Nano by Building a Castle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/relational-database/#learn-git-by-building-an-sql-reference-object"&gt;Learn Git by Building an SQL Reference Object&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-salon-appointment-scheduler-project"&gt;Salon Appointment Scheduler&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-celestial-bodies-database-project"&gt;Celestial Bodies Database&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-periodic-table-database-project"&gt;Periodic Table Database&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-number-guessing-game-project"&gt;Number Guessing Game&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/relational-database/#build-a-world-cup-database-project"&gt;World Cup Database&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;6. &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/"&gt;Back End Development and APIs Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/#managing-packages-with-npm"&gt;Managing Packages with Npm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/#basic-node-and-express"&gt;Basic Node and Express&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/#mongodb-and-mongoose"&gt;MongoDB and Mongoose&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice"&gt;Timestamp Microservice&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/request-header-parser-microservice"&gt;Request Header Parser&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/url-shortener-microservice"&gt;URL Shortener&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/exercise-tracker"&gt;Exercise Tracker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/back-end-development-and-apis-projects/file-metadata-microservice"&gt;File Metadata Microservice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;7. &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/"&gt;Quality Assurance Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/quality-assurance/#quality-assurance-and-testing-with-chai"&gt;Quality Assurance and Testing with Chai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/quality-assurance/#advanced-node-and-express"&gt;Advanced Node and Express&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/metric-imperial-converter"&gt;Metric-Imperial Converter&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/issue-tracker"&gt;Issue Tracker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/personal-library"&gt;Personal Library&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/sudoku-solver"&gt;Sudoku Solver&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/quality-assurance/quality-assurance-projects/american-british-translator"&gt;American British Translator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;8. &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/"&gt;Scientific Computing with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-string-manipulation-by-building-a-cipher"&gt;Learn String Manipulation by Building a Cipher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm"&gt;Learn How to Work with Numbers and Strings by Implementing the Luhn Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-lambda-functions-by-building-an-expense-tracker"&gt;Learn Lambda Functions by Building an Expense Tracker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-list-comprehension-by-building-a-case-converter-program"&gt;Learn List Comprehension by Building a Case Converter Program&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-the-bisection-method-by-finding-the-square-root-of-a-number"&gt;Learn the Bisection Method by Finding the Square Root of a Number&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-regular-expressions-by-building-a-password-generator"&gt;Learn Regular Expressions by Building a Password Generator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-algorithm-design-by-building-a-shortest-path-algorithm"&gt;Learn Algorithm Design by Building a Shortest Path Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-recursion-by-solving-the-tower-of-hanoi-puzzle"&gt;Learn Recursion by Solving the Tower of Hanoi Puzzle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-data-structures-by-building-the-merge-sort-algorithm"&gt;Learn Data Structures by Building the Merge Sort Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-classes-and-objects-by-building-a-sudoku-solver"&gt;Learn Classes and Objects by Building a Sudoku Solver&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-tree-traversal-by-building-a-binary-search-tree"&gt;Learn Tree Traversal by Building a Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/#learn-special-methods-by-building-a-vector-space"&gt;Learn Special Methods by Building a Vector Space&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-an-arithmetic-formatter-project/build-an-arithmetic-formatter-project"&gt;Arithmetic Formatter&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-time-calculator-project/build-a-time-calculator-project"&gt;Time Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-budget-app-project/build-a-budget-app-project"&gt;Budget App&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-polygon-area-calculator-project/build-a-polygon-area-calculator-project"&gt;Polygon Area Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/scientific-computing-with-python/build-a-probability-calculator-project/build-a-probability-calculator-project"&gt;Probability Calculator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;9. &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/"&gt;Data Analysis with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/#data-analysis-with-python-course"&gt;Data Analysis with Python Course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/#numpy"&gt;NumPy&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/mean-variance-standard-deviation-calculator"&gt;Mean-Variance-Standard Deviation Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/demographic-data-analyzer"&gt;Demographic Data Analyzer&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/medical-data-visualizer"&gt;Medical Data Visualizer&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/page-view-time-series-visualizer"&gt;Page View Time Series Visualizer&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/data-analysis-with-python/data-analysis-with-python-projects/sea-level-predictor"&gt;Sea Level Predictor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;10. &lt;a href="https://www.freecodecamp.org/learn/information-security/"&gt;Information Security Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/information-security/#information-security-with-helmetjs"&gt;Information Security with HelmetJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/information-security/#python-for-penetration-testing"&gt;Python for Penetration Testing&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/stock-price-checker"&gt;Stock Price Checker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/anonymous-message-board"&gt;Anonymous Message Board&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/port-scanner"&gt;Port Scanner&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/sha-1-password-cracker"&gt;SHA-1 Password Cracker&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/information-security/information-security-projects/secure-real-time-multiplayer-game"&gt;Secure Real Time Multiplayer Game &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;11. &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/"&gt;Machine Learning with Python Certification&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/#tensorflow"&gt;TensorFlow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/#how-neural-networks-work"&gt;How Neural Networks Work&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/rock-paper-scissors"&gt;Rock Paper Scissors&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/cat-and-dog-image-classifier"&gt;Cat and Dog Image Classifier&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/book-recommendation-engine-using-knn"&gt;Book Recommendation Engine using KNN&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/linear-regression-health-costs-calculator"&gt;Linear Regression Health Costs Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/machine-learning-with-python/machine-learning-with-python-projects/neural-network-sms-text-classifier"&gt;Neural Network SMS Text Classifier&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;12. &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/"&gt;College Algebra with Python&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-ratios-and-proportions"&gt;Learn Ratios and Proportions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-how-to-solve-for-x"&gt;Learn How to Solve for X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-fractions-and-decimals"&gt;Learn Fractions and Decimals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-functions-and-graphing"&gt;Learn Functions and Graphing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-linear-functions"&gt;Learn Linear Functions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-common-factors-and-square-roots"&gt;Learn Common Factors and Square Roots&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-how-to-graph-systems-of-equations"&gt;Learn How to Graph Systems of Equations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-how-to-solve-systems-of-equations"&gt;Learn How to Solve Systems of Equations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-applications-of-linear-systems"&gt;Learn Applications of Linear Systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-quadratic-equations"&gt;Learn Quadratic Equations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-parent-graphs-and-polynomials"&gt;Learn Parent Graphs and Polynomials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-business-applications-of-college-algebra"&gt;Learn Business Applications of College Algebra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-simple-and-compound-interest"&gt;Learn Simple and Compound Interest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#learn-exponents-and-logarithms"&gt;Learn Exponents and Logarithms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#college-algebra-with-python-conclusion"&gt;College Algebra with Python: Conclusion&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Projects&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-multi-function-calculator-project"&gt;Multi-Function Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-graphing-calculator-project"&gt;Graphing Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-three-math-games-project"&gt;Three Math Games&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-financial-calculator-project"&gt;Financial Calculator&lt;/a&gt;, &lt;a href="https://www.freecodecamp.org/learn/college-algebra-with-python/#build-a-data-graph-explorer-project"&gt;Data Graph Explorer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Legacy Full Stack Development Certification&lt;/h4&gt; 
&lt;p&gt;Once you have earned the Responsive Web Design, Algorithms and Data Structures, Front End Development Libraries, Data Visualization, Back End Development and APIs, and Legacy Information Security and Quality Assurance certifications, you'll be able to claim your freeCodeCamp.org Full Stack Development Certification. This distinction signifies that you've completed around 1,800 hours of coding with a wide range of web development tools.&lt;/p&gt; 
&lt;h4&gt;Legacy Certifications&lt;/h4&gt; 
&lt;p&gt;We also have 4 legacy certifications dating back to our 2015 curriculum, which are still available. All of the required projects for these legacy certifications will remain available on freeCodeCamp.org.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Legacy Front End Development Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Data Visualization Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Back End Development Certification&lt;/li&gt; 
 &lt;li&gt;Legacy Information Security and Quality Assurance Certification&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Free professional certifications&lt;/h3&gt; 
&lt;h4&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/"&gt;(New) Foundational C# with Microsoft&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#write-your-first-code-using-c-sharp"&gt;Write Your First Code Using C#&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#create-and-run-simple-c-sharp-console-applications"&gt;Create and Run Simple C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#add-logic-to-c-sharp-console-applications"&gt;Add Logic to C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#work-with-variable-data-in-c-sharp-console-applications"&gt;Work with Variable Data in C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#create-methods-in-c-sharp-console-applications"&gt;Create Methods in C# Console Applications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/#debug-c-sharp-console-applications"&gt;Debug C# Console Applications&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;Exam&lt;/strong&gt;: &lt;a href="https://www.freecodecamp.org/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam/foundational-c-sharp-with-microsoft-certification-exam"&gt;Foundational C# with Microsoft Certification Exam&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;The Learning Platform&lt;/h3&gt; 
&lt;p&gt;This code is running live at &lt;a href="https://www.freecodecamp.org"&gt;freeCodeCamp.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Our community also has:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;a href="https://forum.freecodecamp.org"&gt;forum&lt;/a&gt; where you can usually get programming help or project feedback within hours.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href="https://youtube.com/freecodecamp"&gt;YouTube channel&lt;/a&gt; with free courses on Python, SQL, Android, and a wide variety of other technologies.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href="https://www.freecodecamp.org/news"&gt;technical publication&lt;/a&gt; with thousands of programming tutorials and articles about mathematics and computer science.&lt;/li&gt; 
 &lt;li&gt;A &lt;a href="https://discord.gg/Z7Fm39aNtZ"&gt;Discord server&lt;/a&gt; where you can hang out and talk with developers and people who are learning to code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href="https://www.freecodecamp.org/signin"&gt;Join the community here&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Reporting Bugs and Issues&lt;/h3&gt; 
&lt;p&gt;If you think you've found a bug, first read the &lt;a href="https://forum.freecodecamp.org/t/how-to-report-a-bug/19543"&gt;how to report a bug&lt;/a&gt; article and follow its instructions.&lt;/p&gt; 
&lt;p&gt;If you're confident it's a new bug and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue. Be sure to include as much information as possible so we can reproduce the bug.&lt;/p&gt; 
&lt;h3&gt;Reporting Security Issues and Responsible Disclosure&lt;/h3&gt; 
&lt;p&gt;We appreciate responsible disclosure of vulnerabilities that might impact the integrity of our platforms and users.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href="https://contribute.freecodecamp.org/#/security"&gt;Read our security policy and follow these steps to report a vulnerability&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;The freeCodeCamp.org community is possible thanks to thousands of kind volunteers like you. We welcome all contributions to the community and are excited to welcome you aboard.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;&lt;a href="https://contribute.freecodecamp.org"&gt;Please follow these steps to contribute&lt;/a&gt;.&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Recent Contributions:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/89be0a1a1c8f641c54f9234a7423e7755352c746.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Copyright ¬© 2025 freeCodeCamp.org&lt;/p&gt; 
&lt;p&gt;The content of this repository is bound by the following licenses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The computer software is licensed under the &lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/LICENSE.md"&gt;BSD-3-Clause&lt;/a&gt; license.&lt;/li&gt; 
 &lt;li&gt;The learning resources in the &lt;a href="https://raw.githubusercontent.com/freeCodeCamp/freeCodeCamp/main/curriculum"&gt;&lt;code&gt;/curriculum&lt;/code&gt;&lt;/a&gt; directory including their subdirectories thereon are copyright ¬© 2025 freeCodeCamp.org&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ericciarla/trendFinder</title>
      <link>https://github.com/ericciarla/trendFinder</link>
      <description>&lt;p&gt;Stay on top of trending topics on social media and the web with AI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Trend Finder üî¶&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Stay on top of trending topics on social media ‚Äî all in one place.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Trend Finder collects and analyzes posts from key influencers, then sends a Slack or Discord notification when it detects new trends or product launches. This has been a complete game-changer for the Firecrawl marketing team by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Saving time&lt;/strong&gt; normally spent manually searching social channels&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Keeping you informed&lt;/strong&gt; of relevant, real-time conversations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enabling rapid response&lt;/strong&gt; to new opportunities or emerging industry shifts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Spend less time hunting for trends and more time creating impactful campaigns.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Watch the Demo &amp;amp; Tutorial video&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=puimQSun92g"&gt;&lt;img src="https://i.ytimg.com/vi/puimQSun92g/hqdefault.jpg" alt="Thumbnail" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Learn how to set up Trend Finder and start monitoring trends in this video!&lt;/p&gt; 
&lt;h2&gt;How it Works&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Data Collection&lt;/strong&gt; üì•&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Monitors selected influencers' posts on Twitter/X using the X API (Warning: the X API free plan is rate limited to only monitor 1 X account every 15 min)&lt;/li&gt; 
   &lt;li&gt;Monitors websites for new releases and news with Firecrawl's /extract&lt;/li&gt; 
   &lt;li&gt;Runs on a scheduled basis using cron jobs&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI Analysis&lt;/strong&gt; üß†&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Processes collected content through Together AI&lt;/li&gt; 
   &lt;li&gt;Identifies emerging trends, releases, and news.&lt;/li&gt; 
   &lt;li&gt;Analyzes sentiment and relevance&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Notification System&lt;/strong&gt; üì¢&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When significant trends are detected, sends Slack or Discord notifications based on cron job setup&lt;/li&gt; 
   &lt;li&gt;Provides context about the trend and its sources&lt;/li&gt; 
   &lt;li&gt;Enables quick response to emerging opportunities&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;ü§ñ AI-powered trend analysis using Together AI&lt;/li&gt; 
 &lt;li&gt;üì± Social media monitoring (Twitter/X integration)&lt;/li&gt; 
 &lt;li&gt;üîç Website monitoring with Firecrawl&lt;/li&gt; 
 &lt;li&gt;üí¨ Instant Slack or Discord notifications&lt;/li&gt; 
 &lt;li&gt;‚è±Ô∏è Scheduled monitoring using cron jobs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js (v14 or higher)&lt;/li&gt; 
 &lt;li&gt;npm or yarn&lt;/li&gt; 
 &lt;li&gt;Docker&lt;/li&gt; 
 &lt;li&gt;Docker Compose&lt;/li&gt; 
 &lt;li&gt;Slack workspace with webhook permissions&lt;/li&gt; 
 &lt;li&gt;API keys for required services&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Environment Variables&lt;/h2&gt; 
&lt;p&gt;Copy &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and configure the following variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# Optional: API key from Together AI for trend analysis (https://www.together.ai/)
TOGETHER_API_KEY=your_together_api_key_here

# Optional: API key from DeepSeek for trend analysis (https://deepseek.com/)
DEEPSEEK_API_KEY=

# Optional: API key from OpenAI for trend analysis (https://openai.com/)
OPENAI_API_KEY=

# Required if monitoring web pages (https://www.firecrawl.dev/)
FIRECRAWL_API_KEY=your_firecrawl_api_key_here

# Required if monitoring Twitter/X trends (https://developer.x.com/)
X_API_BEARER_TOKEN=your_twitter_api_bearer_token_here

# Notification driver. Supported drivers: "slack", "discord"
NOTIFICATION_DRIVER=discord

# Required (if NOTIFICATION_DRIVER is "slack"): Incoming Webhook URL from Slack for notifications
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# Required (if NOTIFICATION_DRIVER is "discord"): Incoming Webhook URL from Discord for notifications
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/WEBHOOK/URL
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone [repository-url]
cd trend-finder
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Configure environment variables:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cp .env.example .env
# Edit .env with your configuration
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the application:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Development mode with hot reloading
npm run start

# Build for production
npm run build
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Using Docker&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build the Docker image:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t trend-finder .
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the Docker container:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:3000 --env-file .env trend-finder
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Using Docker Compose&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start the application with Docker Compose:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker-compose up --build -d
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Stop the application with Docker Compose:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker-compose down
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Project Structure&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;trend-finder/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ controllers/    # Request handlers
‚îÇ   ‚îú‚îÄ‚îÄ services/       # Business logic
‚îÇ   ‚îî‚îÄ‚îÄ index.ts        # Application entry point
‚îú‚îÄ‚îÄ .env.example        # Environment variables template
‚îú‚îÄ‚îÄ package.json        # Dependencies and scripts
‚îî‚îÄ‚îÄ tsconfig.json       # TypeScript configuration
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b feature/amazing-feature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Commit your changes (&lt;code&gt;git commit -m 'Add some amazing feature'&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Push to the branch (&lt;code&gt;git push origin feature/amazing-feature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Open a Pull Request&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>modelcontextprotocol/typescript-sdk</title>
      <link>https://github.com/modelcontextprotocol/typescript-sdk</link>
      <description>&lt;p&gt;The official TypeScript SDK for Model Context Protocol servers and clients&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP TypeScript SDK &lt;img src="https://img.shields.io/npm/v/%40modelcontextprotocol%2Fsdk" alt="NPM Version" /&gt; &lt;img src="https://img.shields.io/npm/l/%40modelcontextprotocol%2Fsdk" alt="MIT licensed" /&gt;&lt;/h1&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#quick-start"&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#what-is-mcp"&gt;What is MCP?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#core-concepts"&gt;Core Concepts&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#server"&gt;Server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#resources"&gt;Resources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#prompts"&gt;Prompts&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#completions"&gt;Completions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#sampling"&gt;Sampling&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#running-your-server"&gt;Running Your Server&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#stdio"&gt;stdio&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#streamable-http"&gt;Streamable HTTP&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#testing-and-debugging"&gt;Testing and Debugging&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#examples"&gt;Examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#echo-server"&gt;Echo Server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#sqlite-explorer"&gt;SQLite Explorer&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#advanced-usage"&gt;Advanced Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#dynamic-servers"&gt;Dynamic Servers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#low-level-server"&gt;Low-Level Server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#writing-mcp-clients"&gt;Writing MCP Clients&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#proxy-authorization-requests-upstream"&gt;Proxy Authorization Requests Upstream&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#backwards-compatibility"&gt;Backwards Compatibility&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;The Model Context Protocol allows applications to provide context for LLMs in a standardized way, separating the concerns of providing context from the actual LLM interaction. This TypeScript SDK implements the full MCP specification, making it easy to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Build MCP clients that can connect to any MCP server&lt;/li&gt; 
 &lt;li&gt;Create MCP servers that expose resources, prompts and tools&lt;/li&gt; 
 &lt;li&gt;Use standard transports like stdio and Streamable HTTP&lt;/li&gt; 
 &lt;li&gt;Handle all MCP protocol messages and lifecycle events&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install @modelcontextprotocol/sdk
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è MCP requires Node.js v18.x or higher to work fine.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Let's create a simple MCP server that exposes a calculator tool and some data:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { McpServer, ResourceTemplate } from '@modelcontextprotocol/sdk/server/mcp.js';
import { StdioServerTransport } from '@modelcontextprotocol/sdk/server/stdio.js';
import { z } from 'zod';

// Create an MCP server
const server = new McpServer({
    name: 'demo-server',
    version: '1.0.0'
});

// Add an addition tool
server.registerTool(
    'add',
    {
        title: 'Addition Tool',
        description: 'Add two numbers',
        inputSchema: { a: z.number(), b: z.number() }
    },
    async ({ a, b }) =&amp;gt; ({
        content: [{ type: 'text', text: String(a + b) }]
    })
);

// Add a dynamic greeting resource
server.registerResource(
    'greeting',
    new ResourceTemplate('greeting://{name}', { list: undefined }),
    {
        title: 'Greeting Resource', // Display name for UI
        description: 'Dynamic greeting generator'
    },
    async (uri, { name }) =&amp;gt; ({
        contents: [
            {
                uri: uri.href,
                text: `Hello, ${name}!`
            }
        ]
    })
);

// Start receiving messages on stdin and sending messages on stdout
const transport = new StdioServerTransport();
await server.connect(transport);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What is MCP?&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://modelcontextprotocol.io"&gt;Model Context Protocol (MCP)&lt;/a&gt; lets you build servers that expose data and functionality to LLM applications in a secure, standardized way. Think of it like a web API, but specifically designed for LLM interactions. MCP servers can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Expose data through &lt;strong&gt;Resources&lt;/strong&gt; (think of these sort of like GET endpoints; they are used to load information into the LLM's context)&lt;/li&gt; 
 &lt;li&gt;Provide functionality through &lt;strong&gt;Tools&lt;/strong&gt; (sort of like POST endpoints; they are used to execute code or otherwise produce a side effect)&lt;/li&gt; 
 &lt;li&gt;Define interaction patterns through &lt;strong&gt;Prompts&lt;/strong&gt; (reusable templates for LLM interactions)&lt;/li&gt; 
 &lt;li&gt;And more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Core Concepts&lt;/h2&gt; 
&lt;h3&gt;Server&lt;/h3&gt; 
&lt;p&gt;The McpServer is your core interface to the MCP protocol. It handles connection management, protocol compliance, and message routing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;const server = new McpServer({
    name: 'my-app',
    version: '1.0.0'
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Resources&lt;/h3&gt; 
&lt;p&gt;Resources are how you expose data to LLMs. They're similar to GET endpoints in a REST API - they provide data but shouldn't perform significant computation or have side effects:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Static resource
server.registerResource(
    'config',
    'config://app',
    {
        title: 'Application Config',
        description: 'Application configuration data',
        mimeType: 'text/plain'
    },
    async uri =&amp;gt; ({
        contents: [
            {
                uri: uri.href,
                text: 'App configuration here'
            }
        ]
    })
);

// Dynamic resource with parameters
server.registerResource(
    'user-profile',
    new ResourceTemplate('users://{userId}/profile', { list: undefined }),
    {
        title: 'User Profile',
        description: 'User profile information'
    },
    async (uri, { userId }) =&amp;gt; ({
        contents: [
            {
                uri: uri.href,
                text: `Profile data for user ${userId}`
            }
        ]
    })
);

// Resource with context-aware completion
server.registerResource(
    'repository',
    new ResourceTemplate('github://repos/{owner}/{repo}', {
        list: undefined,
        complete: {
            // Provide intelligent completions based on previously resolved parameters
            repo: (value, context) =&amp;gt; {
                if (context?.arguments?.['owner'] === 'org1') {
                    return ['project1', 'project2', 'project3'].filter(r =&amp;gt; r.startsWith(value));
                }
                return ['default-repo'].filter(r =&amp;gt; r.startsWith(value));
            }
        }
    }),
    {
        title: 'GitHub Repository',
        description: 'Repository information'
    },
    async (uri, { owner, repo }) =&amp;gt; ({
        contents: [
            {
                uri: uri.href,
                text: `Repository: ${owner}/${repo}`
            }
        ]
    })
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;p&gt;Tools let LLMs take actions through your server. Unlike resources, tools are expected to perform computation and have side effects:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Simple tool with parameters
server.registerTool(
    'calculate-bmi',
    {
        title: 'BMI Calculator',
        description: 'Calculate Body Mass Index',
        inputSchema: {
            weightKg: z.number(),
            heightM: z.number()
        }
    },
    async ({ weightKg, heightM }) =&amp;gt; ({
        content: [
            {
                type: 'text',
                text: String(weightKg / (heightM * heightM))
            }
        ]
    })
);

// Async tool with external API call
server.registerTool(
    'fetch-weather',
    {
        title: 'Weather Fetcher',
        description: 'Get weather data for a city',
        inputSchema: { city: z.string() }
    },
    async ({ city }) =&amp;gt; {
        const response = await fetch(`https://api.weather.com/${city}`);
        const data = await response.text();
        return {
            content: [{ type: 'text', text: data }]
        };
    }
);

// Tool that returns ResourceLinks
server.registerTool(
    'list-files',
    {
        title: 'List Files',
        description: 'List project files',
        inputSchema: { pattern: z.string() }
    },
    async ({ pattern }) =&amp;gt; ({
        content: [
            { type: 'text', text: `Found files matching "${pattern}":` },
            // ResourceLinks let tools return references without file content
            {
                type: 'resource_link',
                uri: 'file:///project/README.md',
                name: 'README.md',
                mimeType: 'text/markdown',
                description: 'A README file'
            },
            {
                type: 'resource_link',
                uri: 'file:///project/src/index.ts',
                name: 'index.ts',
                mimeType: 'text/typescript',
                description: 'An index file'
            }
        ]
    })
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ResourceLinks&lt;/h4&gt; 
&lt;p&gt;Tools can return &lt;code&gt;ResourceLink&lt;/code&gt; objects to reference resources without embedding their full content. This is essential for performance when dealing with large files or many resources - clients can then selectively read only the resources they need using the provided URIs.&lt;/p&gt; 
&lt;h3&gt;Prompts&lt;/h3&gt; 
&lt;p&gt;Prompts are reusable templates that help LLMs interact with your server effectively:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { completable } from '@modelcontextprotocol/sdk/server/completable.js';

server.registerPrompt(
    'review-code',
    {
        title: 'Code Review',
        description: 'Review code for best practices and potential issues',
        argsSchema: { code: z.string() }
    },
    ({ code }) =&amp;gt; ({
        messages: [
            {
                role: 'user',
                content: {
                    type: 'text',
                    text: `Please review this code:\n\n${code}`
                }
            }
        ]
    })
);

// Prompt with context-aware completion
server.registerPrompt(
    'team-greeting',
    {
        title: 'Team Greeting',
        description: 'Generate a greeting for team members',
        argsSchema: {
            department: completable(z.string(), value =&amp;gt; {
                // Department suggestions
                return ['engineering', 'sales', 'marketing', 'support'].filter(d =&amp;gt; d.startsWith(value));
            }),
            name: completable(z.string(), (value, context) =&amp;gt; {
                // Name suggestions based on selected department
                const department = context?.arguments?.['department'];
                if (department === 'engineering') {
                    return ['Alice', 'Bob', 'Charlie'].filter(n =&amp;gt; n.startsWith(value));
                } else if (department === 'sales') {
                    return ['David', 'Eve', 'Frank'].filter(n =&amp;gt; n.startsWith(value));
                } else if (department === 'marketing') {
                    return ['Grace', 'Henry', 'Iris'].filter(n =&amp;gt; n.startsWith(value));
                }
                return ['Guest'].filter(n =&amp;gt; n.startsWith(value));
            })
        }
    },
    ({ department, name }) =&amp;gt; ({
        messages: [
            {
                role: 'assistant',
                content: {
                    type: 'text',
                    text: `Hello ${name}, welcome to the ${department} team!`
                }
            }
        ]
    })
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Completions&lt;/h3&gt; 
&lt;p&gt;MCP supports argument completions to help users fill in prompt arguments and resource template parameters. See the examples above for &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#resources"&gt;resource completions&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/#prompts"&gt;prompt completions&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Client Usage&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Request completions for any argument
const result = await client.complete({
    ref: {
        type: 'ref/prompt', // or "ref/resource"
        name: 'example' // or uri: "template://..."
    },
    argument: {
        name: 'argumentName',
        value: 'partial' // What the user has typed so far
    },
    context: {
        // Optional: Include previously resolved arguments
        arguments: {
            previousArg: 'value'
        }
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Display Names and Metadata&lt;/h3&gt; 
&lt;p&gt;All resources, tools, and prompts support an optional &lt;code&gt;title&lt;/code&gt; field for better UI presentation. The &lt;code&gt;title&lt;/code&gt; is used as a display name, while &lt;code&gt;name&lt;/code&gt; remains the unique identifier.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;register*&lt;/code&gt; methods (&lt;code&gt;registerTool&lt;/code&gt;, &lt;code&gt;registerPrompt&lt;/code&gt;, &lt;code&gt;registerResource&lt;/code&gt;) are the recommended approach for new code. The older methods (&lt;code&gt;tool&lt;/code&gt;, &lt;code&gt;prompt&lt;/code&gt;, &lt;code&gt;resource&lt;/code&gt;) remain available for backwards compatibility.&lt;/p&gt; 
&lt;h4&gt;Title Precedence for Tools&lt;/h4&gt; 
&lt;p&gt;For tools specifically, there are two ways to specify a title:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;title&lt;/code&gt; field in the tool configuration&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;annotations.title&lt;/code&gt; field (when using the older &lt;code&gt;tool()&lt;/code&gt; method with annotations)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The precedence order is: &lt;code&gt;title&lt;/code&gt; ‚Üí &lt;code&gt;annotations.title&lt;/code&gt; ‚Üí &lt;code&gt;name&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Using registerTool (recommended)
server.registerTool(
    'my_tool',
    {
        title: 'My Tool', // This title takes precedence
        annotations: {
            title: 'Annotation Title' // This is ignored if title is set
        }
    },
    handler
);

// Using tool with annotations (older API)
server.tool(
    'my_tool',
    'description',
    {
        title: 'Annotation Title' // This is used as title
    },
    handler
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When building clients, use the provided utility to get the appropriate display name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { getDisplayName } from '@modelcontextprotocol/sdk/shared/metadataUtils.js';

// Automatically handles the precedence: title ‚Üí annotations.title ‚Üí name
const displayName = getDisplayName(tool);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Sampling&lt;/h3&gt; 
&lt;p&gt;MCP servers can request LLM completions from connected clients that support sampling.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';
import { StdioServerTransport } from '@modelcontextprotocol/sdk/server/stdio.js';
import { z } from 'zod';

const mcpServer = new McpServer({
    name: 'tools-with-sample-server',
    version: '1.0.0'
});

// Tool that uses LLM sampling to summarize any text
mcpServer.registerTool(
    'summarize',
    {
        description: 'Summarize any text using an LLM',
        inputSchema: {
            text: z.string().describe('Text to summarize')
        }
    },
    async ({ text }) =&amp;gt; {
        // Call the LLM through MCP sampling
        const response = await mcpServer.server.createMessage({
            messages: [
                {
                    role: 'user',
                    content: {
                        type: 'text',
                        text: `Please summarize the following text concisely:\n\n${text}`
                    }
                }
            ],
            maxTokens: 500
        });

        return {
            content: [
                {
                    type: 'text',
                    text: response.content.type === 'text' ? response.content.text : 'Unable to generate summary'
                }
            ]
        };
    }
);

async function main() {
    const transport = new StdioServerTransport();
    await mcpServer.connect(transport);
    console.error('MCP server is running...');
}

main().catch(error =&amp;gt; {
    console.error('Server error:', error);
    process.exit(1);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running Your Server&lt;/h2&gt; 
&lt;p&gt;MCP servers in TypeScript need to be connected to a transport to communicate with clients. How you start the server depends on the choice of transport:&lt;/p&gt; 
&lt;h3&gt;stdio&lt;/h3&gt; 
&lt;p&gt;For command-line tools and direct integrations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';
import { StdioServerTransport } from '@modelcontextprotocol/sdk/server/stdio.js';

const server = new McpServer({
    name: 'example-server',
    version: '1.0.0'
});

// ... set up server resources, tools, and prompts ...

const transport = new StdioServerTransport();
await server.connect(transport);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Streamable HTTP&lt;/h3&gt; 
&lt;p&gt;For remote servers, set up a Streamable HTTP transport that handles both client requests and server-to-client notifications.&lt;/p&gt; 
&lt;h4&gt;With Session Management&lt;/h4&gt; 
&lt;p&gt;In some cases, servers need to be stateful. This is achieved by &lt;a href="https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#session-management"&gt;session management&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import express from 'express';
import { randomUUID } from 'node:crypto';
import { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';
import { StreamableHTTPServerTransport } from '@modelcontextprotocol/sdk/server/streamableHttp.js';
import { isInitializeRequest } from '@modelcontextprotocol/sdk/types.js';

const app = express();
app.use(express.json());

// Map to store transports by session ID
const transports: { [sessionId: string]: StreamableHTTPServerTransport } = {};

// Handle POST requests for client-to-server communication
app.post('/mcp', async (req, res) =&amp;gt; {
    // Check for existing session ID
    const sessionId = req.headers['mcp-session-id'] as string | undefined;
    let transport: StreamableHTTPServerTransport;

    if (sessionId &amp;amp;&amp;amp; transports[sessionId]) {
        // Reuse existing transport
        transport = transports[sessionId];
    } else if (!sessionId &amp;amp;&amp;amp; isInitializeRequest(req.body)) {
        // New initialization request
        transport = new StreamableHTTPServerTransport({
            sessionIdGenerator: () =&amp;gt; randomUUID(),
            onsessioninitialized: sessionId =&amp;gt; {
                // Store the transport by session ID
                transports[sessionId] = transport;
            }
            // DNS rebinding protection is disabled by default for backwards compatibility. If you are running this server
            // locally, make sure to set:
            // enableDnsRebindingProtection: true,
            // allowedHosts: ['127.0.0.1'],
        });

        // Clean up transport when closed
        transport.onclose = () =&amp;gt; {
            if (transport.sessionId) {
                delete transports[transport.sessionId];
            }
        };
        const server = new McpServer({
            name: 'example-server',
            version: '1.0.0'
        });

        // ... set up server resources, tools, and prompts ...

        // Connect to the MCP server
        await server.connect(transport);
    } else {
        // Invalid request
        res.status(400).json({
            jsonrpc: '2.0',
            error: {
                code: -32000,
                message: 'Bad Request: No valid session ID provided'
            },
            id: null
        });
        return;
    }

    // Handle the request
    await transport.handleRequest(req, res, req.body);
});

// Reusable handler for GET and DELETE requests
const handleSessionRequest = async (req: express.Request, res: express.Response) =&amp;gt; {
    const sessionId = req.headers['mcp-session-id'] as string | undefined;
    if (!sessionId || !transports[sessionId]) {
        res.status(400).send('Invalid or missing session ID');
        return;
    }

    const transport = transports[sessionId];
    await transport.handleRequest(req, res);
};

// Handle GET requests for server-to-client notifications via SSE
app.get('/mcp', handleSessionRequest);

// Handle DELETE requests for session termination
app.delete('/mcp', handleSessionRequest);

app.listen(3000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] When using this in a remote environment, make sure to allow the header parameter &lt;code&gt;mcp-session-id&lt;/code&gt; in CORS. Otherwise, it may result in a &lt;code&gt;Bad Request: No valid session ID provided&lt;/code&gt; error. Read the following section for examples.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;CORS Configuration for Browser-Based Clients&lt;/h4&gt; 
&lt;p&gt;If you'd like your server to be accessible by browser-based MCP clients, you'll need to configure CORS headers. The &lt;code&gt;Mcp-Session-Id&lt;/code&gt; header must be exposed for browser clients to access it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import cors from 'cors';

// Add CORS middleware before your MCP routes
app.use(
    cors({
        origin: '*', // Configure appropriately for production, for example:
        // origin: ['https://your-remote-domain.com', 'https://your-other-remote-domain.com'],
        exposedHeaders: ['Mcp-Session-Id'],
        allowedHeaders: ['Content-Type', 'mcp-session-id']
    })
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This configuration is necessary because:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The MCP streamable HTTP transport uses the &lt;code&gt;Mcp-Session-Id&lt;/code&gt; header for session management&lt;/li&gt; 
 &lt;li&gt;Browsers restrict access to response headers unless explicitly exposed via CORS&lt;/li&gt; 
 &lt;li&gt;Without this configuration, browser-based clients won't be able to read the session ID from initialization responses&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Without Session Management (Stateless)&lt;/h4&gt; 
&lt;p&gt;For simpler use cases where session management isn't needed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;const app = express();
app.use(express.json());

app.post('/mcp', async (req: Request, res: Response) =&amp;gt; {
    // In stateless mode, create a new instance of transport and server for each request
    // to ensure complete isolation. A single instance would cause request ID collisions
    // when multiple clients connect concurrently.

    try {
        const server = getServer();
        const transport: StreamableHTTPServerTransport = new StreamableHTTPServerTransport({
            sessionIdGenerator: undefined
        });
        res.on('close', () =&amp;gt; {
            console.log('Request closed');
            transport.close();
            server.close();
        });
        await server.connect(transport);
        await transport.handleRequest(req, res, req.body);
    } catch (error) {
        console.error('Error handling MCP request:', error);
        if (!res.headersSent) {
            res.status(500).json({
                jsonrpc: '2.0',
                error: {
                    code: -32603,
                    message: 'Internal server error'
                },
                id: null
            });
        }
    }
});

// SSE notifications not supported in stateless mode
app.get('/mcp', async (req: Request, res: Response) =&amp;gt; {
    console.log('Received GET MCP request');
    res.writeHead(405).end(
        JSON.stringify({
            jsonrpc: '2.0',
            error: {
                code: -32000,
                message: 'Method not allowed.'
            },
            id: null
        })
    );
});

// Session termination not needed in stateless mode
app.delete('/mcp', async (req: Request, res: Response) =&amp;gt; {
    console.log('Received DELETE MCP request');
    res.writeHead(405).end(
        JSON.stringify({
            jsonrpc: '2.0',
            error: {
                code: -32000,
                message: 'Method not allowed.'
            },
            id: null
        })
    );
});

// Start the server
const PORT = 3000;
setupServer()
    .then(() =&amp;gt; {
        app.listen(PORT, error =&amp;gt; {
            if (error) {
                console.error('Failed to start server:', error);
                process.exit(1);
            }
            console.log(`MCP Stateless Streamable HTTP Server listening on port ${PORT}`);
        });
    })
    .catch(error =&amp;gt; {
        console.error('Failed to set up the server:', error);
        process.exit(1);
    });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This stateless approach is useful for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simple API wrappers&lt;/li&gt; 
 &lt;li&gt;RESTful scenarios where each request is independent&lt;/li&gt; 
 &lt;li&gt;Horizontally scaled deployments without shared session state&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;DNS Rebinding Protection&lt;/h4&gt; 
&lt;p&gt;The Streamable HTTP transport includes DNS rebinding protection to prevent security vulnerabilities. By default, this protection is &lt;strong&gt;disabled&lt;/strong&gt; for backwards compatibility.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: If you are running this server locally, enable DNS rebinding protection:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;const transport = new StreamableHTTPServerTransport({
  sessionIdGenerator: () =&amp;gt; randomUUID(),
  enableDnsRebindingProtection: true,

  allowedHosts: ['127.0.0.1', ...],
  allowedOrigins: ['https://yourdomain.com', 'https://www.yourdomain.com']
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Testing and Debugging&lt;/h3&gt; 
&lt;p&gt;To test your server, you can use the &lt;a href="https://github.com/modelcontextprotocol/inspector"&gt;MCP Inspector&lt;/a&gt;. See its README for more information.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;h3&gt;Echo Server&lt;/h3&gt; 
&lt;p&gt;A simple server demonstrating resources, tools, and prompts:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { McpServer, ResourceTemplate } from '@modelcontextprotocol/sdk/server/mcp.js';
import { z } from 'zod';

const server = new McpServer({
    name: 'echo-server',
    version: '1.0.0'
});

server.registerResource(
    'echo',
    new ResourceTemplate('echo://{message}', { list: undefined }),
    {
        title: 'Echo Resource',
        description: 'Echoes back messages as resources'
    },
    async (uri, { message }) =&amp;gt; ({
        contents: [
            {
                uri: uri.href,
                text: `Resource echo: ${message}`
            }
        ]
    })
);

server.registerTool(
    'echo',
    {
        title: 'Echo Tool',
        description: 'Echoes back the provided message',
        inputSchema: { message: z.string() }
    },
    async ({ message }) =&amp;gt; ({
        content: [{ type: 'text', text: `Tool echo: ${message}` }]
    })
);

server.registerPrompt(
    'echo',
    {
        title: 'Echo Prompt',
        description: 'Creates a prompt to process a message',
        argsSchema: { message: z.string() }
    },
    ({ message }) =&amp;gt; ({
        messages: [
            {
                role: 'user',
                content: {
                    type: 'text',
                    text: `Please process this message: ${message}`
                }
            }
        ]
    })
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;SQLite Explorer&lt;/h3&gt; 
&lt;p&gt;A more complex example showing database integration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';
import sqlite3 from 'sqlite3';
import { promisify } from 'util';
import { z } from 'zod';

const server = new McpServer({
    name: 'sqlite-explorer',
    version: '1.0.0'
});

// Helper to create DB connection
const getDb = () =&amp;gt; {
    const db = new sqlite3.Database('database.db');
    return {
        all: promisify&amp;lt;string, any[]&amp;gt;(db.all.bind(db)),
        close: promisify(db.close.bind(db))
    };
};

server.registerResource(
    'schema',
    'schema://main',
    {
        title: 'Database Schema',
        description: 'SQLite database schema',
        mimeType: 'text/plain'
    },
    async uri =&amp;gt; {
        const db = getDb();
        try {
            const tables = await db.all("SELECT sql FROM sqlite_master WHERE type='table'");
            return {
                contents: [
                    {
                        uri: uri.href,
                        text: tables.map((t: { sql: string }) =&amp;gt; t.sql).join('\n')
                    }
                ]
            };
        } finally {
            await db.close();
        }
    }
);

server.registerTool(
    'query',
    {
        title: 'SQL Query',
        description: 'Execute SQL queries on the database',
        inputSchema: { sql: z.string() }
    },
    async ({ sql }) =&amp;gt; {
        const db = getDb();
        try {
            const results = await db.all(sql);
            return {
                content: [
                    {
                        type: 'text',
                        text: JSON.stringify(results, null, 2)
                    }
                ]
            };
        } catch (err: unknown) {
            const error = err as Error;
            return {
                content: [
                    {
                        type: 'text',
                        text: `Error: ${error.message}`
                    }
                ],
                isError: true
            };
        } finally {
            await db.close();
        }
    }
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Advanced Usage&lt;/h2&gt; 
&lt;h3&gt;Dynamic Servers&lt;/h3&gt; 
&lt;p&gt;If you want to offer an initial set of tools/prompts/resources, but later add additional ones based on user action or external state change, you can add/update/remove them &lt;em&gt;after&lt;/em&gt; the Server is connected. This will automatically emit the corresponding &lt;code&gt;listChanged&lt;/code&gt; notifications:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';
import { z } from 'zod';

const server = new McpServer({
    name: 'Dynamic Example',
    version: '1.0.0'
});

const listMessageTool = server.tool('listMessages', { channel: z.string() }, async ({ channel }) =&amp;gt; ({
    content: [{ type: 'text', text: await listMessages(channel) }]
}));

const putMessageTool = server.tool('putMessage', { channel: z.string(), message: z.string() }, async ({ channel, message }) =&amp;gt; ({
    content: [{ type: 'text', text: await putMessage(channel, message) }]
}));
// Until we upgrade auth, `putMessage` is disabled (won't show up in listTools)
putMessageTool.disable();

const upgradeAuthTool = server.tool(
    'upgradeAuth',
    { permission: z.enum(['write', 'admin']) },
    // Any mutations here will automatically emit `listChanged` notifications
    async ({ permission }) =&amp;gt; {
        const { ok, err, previous } = await upgradeAuthAndStoreToken(permission);
        if (!ok) return { content: [{ type: 'text', text: `Error: ${err}` }] };

        // If we previously had read-only access, 'putMessage' is now available
        if (previous === 'read') {
            putMessageTool.enable();
        }

        if (permission === 'write') {
            // If we've just upgraded to 'write' permissions, we can still call 'upgradeAuth'
            // but can only upgrade to 'admin'.
            upgradeAuthTool.update({
                paramsSchema: { permission: z.enum(['admin']) } // change validation rules
            });
        } else {
            // If we're now an admin, we no longer have anywhere to upgrade to, so fully remove that tool
            upgradeAuthTool.remove();
        }
    }
);

// Connect as normal
const transport = new StdioServerTransport();
await server.connect(transport);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Improving Network Efficiency with Notification Debouncing&lt;/h3&gt; 
&lt;p&gt;When performing bulk updates that trigger notifications (e.g., enabling or disabling multiple tools in a loop), the SDK can send a large number of messages in a short period. To improve performance and reduce network traffic, you can enable notification debouncing.&lt;/p&gt; 
&lt;p&gt;This feature coalesces multiple, rapid calls for the same notification type into a single message. For example, if you disable five tools in a row, only one &lt;code&gt;notifications/tools/list_changed&lt;/code&gt; message will be sent instead of five.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] This feature is designed for "simple" notifications that do not carry unique data in their parameters. To prevent silent data loss, debouncing is &lt;strong&gt;automatically bypassed&lt;/strong&gt; for any notification that contains a &lt;code&gt;params&lt;/code&gt; object or a &lt;code&gt;relatedRequestId&lt;/code&gt;. Such notifications will always be sent immediately.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This is an opt-in feature configured during server initialization.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";

const server = new McpServer(
  {
    name: "efficient-server",
    version: "1.0.0"
  },
  {
    // Enable notification debouncing for specific methods
    debouncedNotificationMethods: [
      'notifications/tools/list_changed',
      'notifications/resources/list_changed',
      'notifications/prompts/list_changed'
    ]
  }
);

// Now, any rapid changes to tools, resources, or prompts will result
// in a single, consolidated notification for each type.
server.registerTool("tool1", ...).disable();
server.registerTool("tool2", ...).disable();
server.registerTool("tool3", ...).disable();
// Only one 'notifications/tools/list_changed' is sent.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Low-Level Server&lt;/h3&gt; 
&lt;p&gt;For more control, you can use the low-level Server class directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { Server } from '@modelcontextprotocol/sdk/server/index.js';
import { StdioServerTransport } from '@modelcontextprotocol/sdk/server/stdio.js';
import { ListPromptsRequestSchema, GetPromptRequestSchema } from '@modelcontextprotocol/sdk/types.js';

const server = new Server(
    {
        name: 'example-server',
        version: '1.0.0'
    },
    {
        capabilities: {
            prompts: {}
        }
    }
);

server.setRequestHandler(ListPromptsRequestSchema, async () =&amp;gt; {
    return {
        prompts: [
            {
                name: 'example-prompt',
                description: 'An example prompt template',
                arguments: [
                    {
                        name: 'arg1',
                        description: 'Example argument',
                        required: true
                    }
                ]
            }
        ]
    };
});

server.setRequestHandler(GetPromptRequestSchema, async request =&amp;gt; {
    if (request.params.name !== 'example-prompt') {
        throw new Error('Unknown prompt');
    }
    return {
        description: 'Example prompt',
        messages: [
            {
                role: 'user',
                content: {
                    type: 'text',
                    text: 'Example prompt text'
                }
            }
        ]
    };
});

const transport = new StdioServerTransport();
await server.connect(transport);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Eliciting User Input&lt;/h3&gt; 
&lt;p&gt;MCP servers can request additional information from users through the elicitation feature. This is useful for interactive workflows where the server needs user input or confirmation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Server-side: Restaurant booking tool that asks for alternatives
server.tool(
    'book-restaurant',
    {
        restaurant: z.string(),
        date: z.string(),
        partySize: z.number()
    },
    async ({ restaurant, date, partySize }) =&amp;gt; {
        // Check availability
        const available = await checkAvailability(restaurant, date, partySize);

        if (!available) {
            // Ask user if they want to try alternative dates
            const result = await server.server.elicitInput({
                message: `No tables available at ${restaurant} on ${date}. Would you like to check alternative dates?`,
                requestedSchema: {
                    type: 'object',
                    properties: {
                        checkAlternatives: {
                            type: 'boolean',
                            title: 'Check alternative dates',
                            description: 'Would you like me to check other dates?'
                        },
                        flexibleDates: {
                            type: 'string',
                            title: 'Date flexibility',
                            description: 'How flexible are your dates?',
                            enum: ['next_day', 'same_week', 'next_week'],
                            enumNames: ['Next day', 'Same week', 'Next week']
                        }
                    },
                    required: ['checkAlternatives']
                }
            });

            if (result.action === 'accept' &amp;amp;&amp;amp; result.content?.checkAlternatives) {
                const alternatives = await findAlternatives(restaurant, date, partySize, result.content.flexibleDates as string);
                return {
                    content: [
                        {
                            type: 'text',
                            text: `Found these alternatives: ${alternatives.join(', ')}`
                        }
                    ]
                };
            }

            return {
                content: [
                    {
                        type: 'text',
                        text: 'No booking made. Original date not available.'
                    }
                ]
            };
        }

        // Book the table
        await makeBooking(restaurant, date, partySize);
        return {
            content: [
                {
                    type: 'text',
                    text: `Booked table for ${partySize} at ${restaurant} on ${date}`
                }
            ]
        };
    }
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Client-side: Handle elicitation requests&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// This is a placeholder - implement based on your UI framework
async function getInputFromUser(
    message: string,
    schema: any
): Promise&amp;lt;{
    action: 'accept' | 'decline' | 'cancel';
    data?: Record&amp;lt;string, any&amp;gt;;
}&amp;gt; {
    // This should be implemented depending on the app
    throw new Error('getInputFromUser must be implemented for your platform');
}

client.setRequestHandler(ElicitRequestSchema, async request =&amp;gt; {
    const userResponse = await getInputFromUser(request.params.message, request.params.requestedSchema);

    return {
        action: userResponse.action,
        content: userResponse.action === 'accept' ? userResponse.data : undefined
    };
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Elicitation requires client support. Clients must declare the &lt;code&gt;elicitation&lt;/code&gt; capability during initialization.&lt;/p&gt; 
&lt;h3&gt;Writing MCP Clients&lt;/h3&gt; 
&lt;p&gt;The SDK provides a high-level client interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { Client } from '@modelcontextprotocol/sdk/client/index.js';
import { StdioClientTransport } from '@modelcontextprotocol/sdk/client/stdio.js';

const transport = new StdioClientTransport({
    command: 'node',
    args: ['server.js']
});

const client = new Client({
    name: 'example-client',
    version: '1.0.0'
});

await client.connect(transport);

// List prompts
const prompts = await client.listPrompts();

// Get a prompt
const prompt = await client.getPrompt({
    name: 'example-prompt',
    arguments: {
        arg1: 'value'
    }
});

// List resources
const resources = await client.listResources();

// Read a resource
const resource = await client.readResource({
    uri: 'file:///example.txt'
});

// Call a tool
const result = await client.callTool({
    name: 'example-tool',
    arguments: {
        arg1: 'value'
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Proxy Authorization Requests Upstream&lt;/h3&gt; 
&lt;p&gt;You can proxy OAuth requests to an external authorization provider:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import express from 'express';
import { ProxyOAuthServerProvider } from '@modelcontextprotocol/sdk/server/auth/providers/proxyProvider.js';
import { mcpAuthRouter } from '@modelcontextprotocol/sdk/server/auth/router.js';

const app = express();

const proxyProvider = new ProxyOAuthServerProvider({
    endpoints: {
        authorizationUrl: 'https://auth.external.com/oauth2/v1/authorize',
        tokenUrl: 'https://auth.external.com/oauth2/v1/token',
        revocationUrl: 'https://auth.external.com/oauth2/v1/revoke'
    },
    verifyAccessToken: async token =&amp;gt; {
        return {
            token,
            clientId: '123',
            scopes: ['openid', 'email', 'profile']
        };
    },
    getClient: async client_id =&amp;gt; {
        return {
            client_id,
            redirect_uris: ['http://localhost:3000/callback']
        };
    }
});

app.use(
    mcpAuthRouter({
        provider: proxyProvider,
        issuerUrl: new URL('http://auth.external.com'),
        baseUrl: new URL('http://mcp.example.com'),
        serviceDocumentationUrl: new URL('https://docs.example.com/')
    })
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This setup allows you to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Forward OAuth requests to an external provider&lt;/li&gt; 
 &lt;li&gt;Add custom token validation logic&lt;/li&gt; 
 &lt;li&gt;Manage client registrations&lt;/li&gt; 
 &lt;li&gt;Provide custom documentation URLs&lt;/li&gt; 
 &lt;li&gt;Maintain control over the OAuth flow while delegating to an external provider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Backwards Compatibility&lt;/h3&gt; 
&lt;p&gt;Clients and servers with StreamableHttp transport can maintain &lt;a href="https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#backwards-compatibility"&gt;backwards compatibility&lt;/a&gt; with the deprecated HTTP+SSE transport (from protocol version 2024-11-05) as follows&lt;/p&gt; 
&lt;h4&gt;Client-Side Compatibility&lt;/h4&gt; 
&lt;p&gt;For clients that need to work with both Streamable HTTP and older SSE servers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { Client } from '@modelcontextprotocol/sdk/client/index.js';
import { StreamableHTTPClientTransport } from '@modelcontextprotocol/sdk/client/streamableHttp.js';
import { SSEClientTransport } from '@modelcontextprotocol/sdk/client/sse.js';
let client: Client | undefined = undefined;
const baseUrl = new URL(url);
try {
    client = new Client({
        name: 'streamable-http-client',
        version: '1.0.0'
    });
    const transport = new StreamableHTTPClientTransport(new URL(baseUrl));
    await client.connect(transport);
    console.log('Connected using Streamable HTTP transport');
} catch (error) {
    // If that fails with a 4xx error, try the older SSE transport
    console.log('Streamable HTTP connection failed, falling back to SSE transport');
    client = new Client({
        name: 'sse-client',
        version: '1.0.0'
    });
    const sseTransport = new SSEClientTransport(baseUrl);
    await client.connect(sseTransport);
    console.log('Connected using SSE transport');
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Server-Side Compatibility&lt;/h4&gt; 
&lt;p&gt;For servers that need to support both Streamable HTTP and older clients:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import express from 'express';
import { McpServer } from '@modelcontextprotocol/sdk/server/mcp.js';
import { StreamableHTTPServerTransport } from '@modelcontextprotocol/sdk/server/streamableHttp.js';
import { SSEServerTransport } from '@modelcontextprotocol/sdk/server/sse.js';

const server = new McpServer({
    name: 'backwards-compatible-server',
    version: '1.0.0'
});

// ... set up server resources, tools, and prompts ...

const app = express();
app.use(express.json());

// Store transports for each session type
const transports = {
    streamable: {} as Record&amp;lt;string, StreamableHTTPServerTransport&amp;gt;,
    sse: {} as Record&amp;lt;string, SSEServerTransport&amp;gt;
};

// Modern Streamable HTTP endpoint
app.all('/mcp', async (req, res) =&amp;gt; {
    // Handle Streamable HTTP transport for modern clients
    // Implementation as shown in the "With Session Management" example
    // ...
});

// Legacy SSE endpoint for older clients
app.get('/sse', async (req, res) =&amp;gt; {
    // Create SSE transport for legacy clients
    const transport = new SSEServerTransport('/messages', res);
    transports.sse[transport.sessionId] = transport;

    res.on('close', () =&amp;gt; {
        delete transports.sse[transport.sessionId];
    });

    await server.connect(transport);
});

// Legacy message endpoint for older clients
app.post('/messages', async (req, res) =&amp;gt; {
    const sessionId = req.query.sessionId as string;
    const transport = transports.sse[sessionId];
    if (transport) {
        await transport.handlePostMessage(req, res, req.body);
    } else {
        res.status(400).send('No transport found for sessionId');
    }
});

app.listen(3000);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The SSE transport is now deprecated in favor of Streamable HTTP. New implementations should use Streamable HTTP, and existing SSE implementations should plan to migrate.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://modelcontextprotocol.io"&gt;Model Context Protocol documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spec.modelcontextprotocol.io"&gt;MCP Specification&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/modelcontextprotocol/servers"&gt;Example Servers&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Issues and pull requests are welcome on GitHub at &lt;a href="https://github.com/modelcontextprotocol/typescript-sdk"&gt;https://github.com/modelcontextprotocol/typescript-sdk&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License‚Äîsee the &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/typescript-sdk/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bluesky-social/atproto</title>
      <link>https://github.com/bluesky-social/atproto</link>
      <description>&lt;p&gt;Social networking technology created by Bluesky&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AT Protocol Reference Implementation (TypeScript)&lt;/h1&gt; 
&lt;p&gt;Welcome friends!&lt;/p&gt; 
&lt;p&gt;This repository contains Bluesky's reference implementation of AT Protocol, and of the &lt;code&gt;app.bsky&lt;/code&gt; microblogging application service backend.&lt;/p&gt; 
&lt;h2&gt;What is in here?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;TypeScript Packages:&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package&lt;/th&gt; 
   &lt;th&gt;Docs&lt;/th&gt; 
   &lt;th&gt;NPM&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/api&lt;/code&gt;: client library&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/api/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/api"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/api" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/common-web&lt;/code&gt;: shared code and helpers which can run in web browsers&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/common-web/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/common-web"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/common-web" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/common&lt;/code&gt;: shared code and helpers which doesn't work in web browsers&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/common/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/common"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/common" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/crypto&lt;/code&gt;: cryptographic signing and key serialization&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/crypto/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/crypto"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/crypto" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/identity&lt;/code&gt;: DID and handle resolution&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/identity/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/identity"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/identity" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/lexicon&lt;/code&gt;: schema definition language&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/lexicon/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/lexicon"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/lexicon" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/repo&lt;/code&gt;: data storage structure, including MST&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/repo/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/repo"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/repo" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/syntax&lt;/code&gt;: string parsers for identifiers&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/syntax/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/syntax"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/syntax" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/xrpc&lt;/code&gt;: client-side HTTP API helpers&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/xrpc/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/xrpc"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/xrpc" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;@atproto/xrpc-server&lt;/code&gt;: server-side HTTP API helpers&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/bluesky-social/atproto/main/packages/xrpc-server/README.md"&gt;README&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@atproto/xrpc-server"&gt;&lt;img src="https://img.shields.io/npm/v/@atproto/xrpc-server" alt="NPM" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;TypeScript Services:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;pds&lt;/code&gt;: "Personal Data Server", hosting repo content for atproto accounts. Most implementation code in &lt;code&gt;packages/pds&lt;/code&gt;, with runtime wrapper in &lt;code&gt;services/pds&lt;/code&gt;. See &lt;a href="https://github.com/bluesky-social/pds"&gt;bluesky-social/pds&lt;/a&gt; for directions on self-hosting.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bsky&lt;/code&gt;: AppView implementation of the &lt;code&gt;app.bsky.*&lt;/code&gt; API endpoints. Running on main network at &lt;code&gt;api.bsky.app&lt;/code&gt;. Most implementation code in &lt;code&gt;packages/bsky&lt;/code&gt;, with runtime wrapper in &lt;code&gt;services/bsky&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Lexicons:&lt;/strong&gt; for both the &lt;code&gt;com.atproto.*&lt;/code&gt; and &lt;code&gt;app.bsky.*&lt;/code&gt; are canonically versioned in this repo, for now, under &lt;code&gt;./lexicons/&lt;/code&gt;. These are JSON files in the &lt;a href="https://atproto.com/specs/lexicon"&gt;Lexicon schema definition language&lt;/a&gt;, similar to JSON Schema or OpenAPI.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Interoperability Test Data:&lt;/strong&gt; the language-neutral test files in &lt;code&gt;./interop-test-files/&lt;/code&gt; may be useful for other protocol implementations to ensure that they follow the specification correctly&lt;/p&gt; 
&lt;p&gt;The source code for the Bluesky Social client app (for web and mobile) can be found at &lt;a href="https://github.com/bluesky-social/social-app"&gt;bluesky-social/social-app&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Go programming language source code is in &lt;a href="https://github.com/bluesky-social/indigo"&gt;bluesky-social/indigo&lt;/a&gt;, including the BGS implementation.&lt;/p&gt; 
&lt;h2&gt;Developer Quickstart&lt;/h2&gt; 
&lt;p&gt;We recommend &lt;a href="https://github.com/nvm-sh/nvm"&gt;&lt;code&gt;nvm&lt;/code&gt;&lt;/a&gt; for managing Node.js installs. This project requires Node.js version 18. &lt;code&gt;pnpm&lt;/code&gt; is used to manage the workspace of multiple packages. You can install it with &lt;code&gt;npm install --global pnpm&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;There is a Makefile which can help with basic development tasks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# use existing nvm to install node 18 and pnpm
make nvm-setup

# pull dependencies and build all local packages
make deps
make build

# run the tests, using Docker services as needed
make test

# run a local PDS and AppView with fake test accounts and data
# (this requires a global installation of `jq` and `docker`)
make run-dev-env

# show all other commands
make help
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;About AT Protocol&lt;/h2&gt; 
&lt;p&gt;The Authenticated Transfer Protocol ("ATP" or "atproto") is a decentralized social media protocol, developed by &lt;a href="https://bsky.social"&gt;Bluesky Social PBC&lt;/a&gt;. Learn more at:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://atproto.com/guides/overview"&gt;Overview and Guides&lt;/a&gt; üëà Best starting point&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bluesky-social/atproto/discussions"&gt;Github Discussions&lt;/a&gt; üëà Great place to ask questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://atproto.com/specs/atp"&gt;Protocol Specifications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bsky.social/about/blog/3-6-2022-a-self-authenticating-social-protocol"&gt;Blogpost on self-authenticating data structures&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Bluesky Social application encompasses a set of schemas and APIs built in the overall AT Protocol framework. The namespace for these "Lexicons" is &lt;code&gt;app.bsky.*&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;While we do accept contributions, we prioritize high quality issues and pull requests. Adhering to the below guidelines will ensure a more timely review.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Rules:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We may not respond to your issue or PR.&lt;/li&gt; 
 &lt;li&gt;We may close an issue or PR without much feedback.&lt;/li&gt; 
 &lt;li&gt;We may lock discussions or contributions if our attention is getting DDOSed.&lt;/li&gt; 
 &lt;li&gt;We do not provide support for build issues.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Guidelines:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check for existing issues before filing a new one, please.&lt;/li&gt; 
 &lt;li&gt;Open an issue and give some time for discussion before submitting a PR.&lt;/li&gt; 
 &lt;li&gt;If submitting a PR that includes a lexicon change, please get sign off on the lexicon change &lt;em&gt;before&lt;/em&gt; doing the implementation.&lt;/li&gt; 
 &lt;li&gt;Issues are for bugs &amp;amp; feature requests related to the TypeScript implementation of atproto and related services. 
  &lt;ul&gt; 
   &lt;li&gt;For high-level discussions, please use the &lt;a href="https://github.com/bluesky-social/atproto/discussions"&gt;Discussion Forum&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;For client issues, please use the relevant &lt;a href="https://github.com/bluesky-social/social-app"&gt;social-app&lt;/a&gt; repo.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Stay away from PRs that: 
  &lt;ul&gt; 
   &lt;li&gt;Refactor large parts of the codebase&lt;/li&gt; 
   &lt;li&gt;Add entirely new features without prior discussion&lt;/li&gt; 
   &lt;li&gt;Change the tooling or frameworks used without prior discussion&lt;/li&gt; 
   &lt;li&gt;Introduce new unnecessary dependencies&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Remember, we serve a wide community of users. Our day-to-day involves us constantly asking "which top priority is our top priority." If you submit well-written PRs that solve problems concisely, that's an awesome contribution. Otherwise, as much as we'd love to accept your ideas and contributions, we really don't have the bandwidth.&lt;/p&gt; 
&lt;h2&gt;Are you a developer interested in building on atproto?&lt;/h2&gt; 
&lt;p&gt;Bluesky is an open social network built on the AT Protocol, a flexible technology that will never lock developers out of the ecosystems that they help build. With atproto, third-party can be as seamless as first-party through custom feeds, federated services, clients, and more.&lt;/p&gt; 
&lt;h2&gt;Security disclosures&lt;/h2&gt; 
&lt;p&gt;If you discover any security issues, please send an email to &lt;a href="mailto:security@bsky.app"&gt;security@bsky.app&lt;/a&gt;. The email is automatically CCed to the entire team, and we'll respond promptly. See &lt;a href="https://github.com/bluesky-social/atproto/raw/main/SECURITY.md"&gt;SECURITY.md&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is dual-licensed under MIT and Apache 2.0 terms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MIT license (&lt;a href="https://github.com/bluesky-social/atproto/raw/main/LICENSE-MIT.txt"&gt;LICENSE-MIT.txt&lt;/a&gt; or &lt;a href="http://opensource.org/licenses/MIT"&gt;http://opensource.org/licenses/MIT&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Apache License, Version 2.0, (&lt;a href="https://github.com/bluesky-social/atproto/raw/main/LICENSE-APACHE.txt"&gt;LICENSE-APACHE.txt&lt;/a&gt; or &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Downstream projects and end users may chose either license individually, or both together, at their discretion. The motivation for this dual-licensing is the additional software patent assurance provided by Apache 2.0.&lt;/p&gt; 
&lt;p&gt;Bluesky Social PBC has committed to a software patent non-aggression pledge. For details see &lt;a href="https://bsky.social/about/blog/10-01-2025-patent-pledge"&gt;the original announcement&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>